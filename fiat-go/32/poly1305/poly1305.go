// Code generated by Fiat Cryptography. DO NOT EDIT.
//
// Autogenerated: 'src/ExtractionOCaml/unsaturated_solinas' --lang Go --relax-primitive-carry-to-bitwidth 32,64 --cmovznz-by-mul --internal-static --package-case flatcase --public-function-case UpperCamelCase --private-function-case camelCase --public-type-case UpperCamelCase --private-type-case camelCase --no-prefix-fiat --doc-newline-in-typedef-bounds --doc-prepend-header 'Code generated by Fiat Cryptography. DO NOT EDIT.' --doc-text-before-function-name '' --doc-text-before-type-name '' --package-name poly1305 '' 32 '(auto)' '2^130 - 5' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes one relax msat sat_from_bytes divstep divstep_precomp jumpdivstep_precomp outer_loop_body carry_add carry_sub carry_opp
//
// curve description (via package name): poly1305
//
// machine_wordsize = 32 (from "32")
//
// requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes, one, relax, msat, sat_from_bytes, divstep, divstep_precomp, jumpdivstep_precomp, outer_loop_body, carry_add, carry_sub, carry_opp
//
// n = 5 (from "(auto)")
//
// s-c = 2^130 - [(1, 5)] (from "2^130 - 5")
//
// tight_bounds_multiplier = 1 (from "")
//
//
//
// Computed values:
//
//   carry_chain = [0, 1, 2, 3, 4, 0, 1]
//
//   eval z = z[0] + (z[1] << 26) + (z[2] << 52) + (z[3] << 78) + (z[4] << 104)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128)
//
//   balance = [0x7fffff6, 0x7fffffe, 0x7fffffe, 0x7fffffe, 0x7fffffe]
package poly1305

import "math/bits"

type uint1 uint64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927
type int1 int64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927

// LooseFieldElement is a field element with loose bounds.
//
// Bounds:
//
//   [[0x0 ~> 0xc000000], [0x0 ~> 0xc000000], [0x0 ~> 0xc000000], [0x0 ~> 0xc000000], [0x0 ~> 0xc000000]]
type LooseFieldElement [5]uint32

// TightFieldElement is a field element with tight bounds.
//
// Bounds:
//
//   [[0x0 ~> 0x4000000], [0x0 ~> 0x4000000], [0x0 ~> 0x4000000], [0x0 ~> 0x4000000], [0x0 ~> 0x4000000]]
type TightFieldElement [5]uint32

// addcarryxU26 is an addition with carry.
//
// Postconditions:
//   out1 = (arg1 + arg2 + arg3) mod 2^26
//   out2 = ⌊(arg1 + arg2 + arg3) / 2^26⌋
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x3ffffff]
//   arg3: [0x0 ~> 0x3ffffff]
// Output Bounds:
//   out1: [0x0 ~> 0x3ffffff]
//   out2: [0x0 ~> 0x1]
func addcarryxU26(out1 *uint32, out2 *uint1, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := ((uint32(arg1) + arg2) + arg3)
	x2 := (x1 & 0x3ffffff)
	x3 := uint1((x1 >> 26))
	*out1 = x2
	*out2 = x3
}

// subborrowxU26 is a subtraction with borrow.
//
// Postconditions:
//   out1 = (-arg1 + arg2 + -arg3) mod 2^26
//   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^26⌋
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x3ffffff]
//   arg3: [0x0 ~> 0x3ffffff]
// Output Bounds:
//   out1: [0x0 ~> 0x3ffffff]
//   out2: [0x0 ~> 0x1]
func subborrowxU26(out1 *uint32, out2 *uint1, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := ((int32(arg2) - int32(arg1)) - int32(arg3))
	x2 := int1((x1 >> 26))
	x3 := (uint32(x1) & 0x3ffffff)
	*out1 = x3
	*out2 = (0x0 - uint1(x2))
}

// cmovznzU32 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0xffffffff]
//   arg3: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func cmovznzU32(out1 *uint32, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := (uint32(arg1) * 0xffffffff)
	x2 := ((x1 & arg3) | ((^x1) & arg2))
	*out1 = x2
}

// cmovznzU1 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1]
//   arg3: [0x0 ~> 0x1]
// Output Bounds:
//   out1: [0x0 ~> 0x1]
func cmovznzU1(out1 *uint1, arg1 uint1, arg2 uint1, arg3 uint1) {
	x1 := ((arg1 & arg3) | ((^arg1) & arg2))
	*out1 = x1
}

// CarryMul multiplies two field elements and reduces the result.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 * eval arg2) mod m
//
func CarryMul(out1 *TightFieldElement, arg1 *LooseFieldElement, arg2 *LooseFieldElement) {
	x1 := (uint64(arg1[4]) * uint64((arg2[4] * 0x5)))
	x2 := (uint64(arg1[4]) * uint64((arg2[3] * 0x5)))
	x3 := (uint64(arg1[4]) * uint64((arg2[2] * 0x5)))
	x4 := (uint64(arg1[4]) * uint64((arg2[1] * 0x5)))
	x5 := (uint64(arg1[3]) * uint64((arg2[4] * 0x5)))
	x6 := (uint64(arg1[3]) * uint64((arg2[3] * 0x5)))
	x7 := (uint64(arg1[3]) * uint64((arg2[2] * 0x5)))
	x8 := (uint64(arg1[2]) * uint64((arg2[4] * 0x5)))
	x9 := (uint64(arg1[2]) * uint64((arg2[3] * 0x5)))
	x10 := (uint64(arg1[1]) * uint64((arg2[4] * 0x5)))
	x11 := (uint64(arg1[4]) * uint64(arg2[0]))
	x12 := (uint64(arg1[3]) * uint64(arg2[1]))
	x13 := (uint64(arg1[3]) * uint64(arg2[0]))
	x14 := (uint64(arg1[2]) * uint64(arg2[2]))
	x15 := (uint64(arg1[2]) * uint64(arg2[1]))
	x16 := (uint64(arg1[2]) * uint64(arg2[0]))
	x17 := (uint64(arg1[1]) * uint64(arg2[3]))
	x18 := (uint64(arg1[1]) * uint64(arg2[2]))
	x19 := (uint64(arg1[1]) * uint64(arg2[1]))
	x20 := (uint64(arg1[1]) * uint64(arg2[0]))
	x21 := (uint64(arg1[0]) * uint64(arg2[4]))
	x22 := (uint64(arg1[0]) * uint64(arg2[3]))
	x23 := (uint64(arg1[0]) * uint64(arg2[2]))
	x24 := (uint64(arg1[0]) * uint64(arg2[1]))
	x25 := (uint64(arg1[0]) * uint64(arg2[0]))
	x26 := (x25 + (x10 + (x9 + (x7 + x4))))
	x27 := (x26 >> 26)
	x28 := (uint32(x26) & 0x3ffffff)
	x29 := (x21 + (x17 + (x14 + (x12 + x11))))
	x30 := (x22 + (x18 + (x15 + (x13 + x1))))
	x31 := (x23 + (x19 + (x16 + (x5 + x2))))
	x32 := (x24 + (x20 + (x8 + (x6 + x3))))
	x33 := (x27 + x32)
	x34 := (x33 >> 26)
	x35 := (uint32(x33) & 0x3ffffff)
	x36 := (x34 + x31)
	x37 := (x36 >> 26)
	x38 := (uint32(x36) & 0x3ffffff)
	x39 := (x37 + x30)
	x40 := (x39 >> 26)
	x41 := (uint32(x39) & 0x3ffffff)
	x42 := (x40 + x29)
	x43 := uint32((x42 >> 26))
	x44 := (uint32(x42) & 0x3ffffff)
	x45 := (uint64(x43) * uint64(0x5))
	x46 := (uint64(x28) + x45)
	x47 := uint32((x46 >> 26))
	x48 := (uint32(x46) & 0x3ffffff)
	x49 := (x47 + x35)
	x50 := uint1((x49 >> 26))
	x51 := (x49 & 0x3ffffff)
	x52 := (uint32(x50) + x38)
	out1[0] = x48
	out1[1] = x51
	out1[2] = x52
	out1[3] = x41
	out1[4] = x44
}

// CarrySquare squares a field element and reduces the result.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 * eval arg1) mod m
//
func CarrySquare(out1 *TightFieldElement, arg1 *LooseFieldElement) {
	x1 := (arg1[4] * 0x5)
	x2 := (x1 * 0x2)
	x3 := (arg1[4] * 0x2)
	x4 := (arg1[3] * 0x5)
	x5 := (x4 * 0x2)
	x6 := (arg1[3] * 0x2)
	x7 := (arg1[2] * 0x2)
	x8 := (arg1[1] * 0x2)
	x9 := (uint64(arg1[4]) * uint64(x1))
	x10 := (uint64(arg1[3]) * uint64(x2))
	x11 := (uint64(arg1[3]) * uint64(x4))
	x12 := (uint64(arg1[2]) * uint64(x2))
	x13 := (uint64(arg1[2]) * uint64(x5))
	x14 := (uint64(arg1[2]) * uint64(arg1[2]))
	x15 := (uint64(arg1[1]) * uint64(x2))
	x16 := (uint64(arg1[1]) * uint64(x6))
	x17 := (uint64(arg1[1]) * uint64(x7))
	x18 := (uint64(arg1[1]) * uint64(arg1[1]))
	x19 := (uint64(arg1[0]) * uint64(x3))
	x20 := (uint64(arg1[0]) * uint64(x6))
	x21 := (uint64(arg1[0]) * uint64(x7))
	x22 := (uint64(arg1[0]) * uint64(x8))
	x23 := (uint64(arg1[0]) * uint64(arg1[0]))
	x24 := (x23 + (x15 + x13))
	x25 := (x24 >> 26)
	x26 := (uint32(x24) & 0x3ffffff)
	x27 := (x19 + (x16 + x14))
	x28 := (x20 + (x17 + x9))
	x29 := (x21 + (x18 + x10))
	x30 := (x22 + (x12 + x11))
	x31 := (x25 + x30)
	x32 := (x31 >> 26)
	x33 := (uint32(x31) & 0x3ffffff)
	x34 := (x32 + x29)
	x35 := (x34 >> 26)
	x36 := (uint32(x34) & 0x3ffffff)
	x37 := (x35 + x28)
	x38 := (x37 >> 26)
	x39 := (uint32(x37) & 0x3ffffff)
	x40 := (x38 + x27)
	x41 := uint32((x40 >> 26))
	x42 := (uint32(x40) & 0x3ffffff)
	x43 := (uint64(x41) * uint64(0x5))
	x44 := (uint64(x26) + x43)
	x45 := uint32((x44 >> 26))
	x46 := (uint32(x44) & 0x3ffffff)
	x47 := (x45 + x33)
	x48 := uint1((x47 >> 26))
	x49 := (x47 & 0x3ffffff)
	x50 := (uint32(x48) + x36)
	out1[0] = x46
	out1[1] = x49
	out1[2] = x50
	out1[3] = x39
	out1[4] = x42
}

// Carry reduces a field element.
//
// Postconditions:
//   eval out1 mod m = eval arg1 mod m
//
func Carry(out1 *TightFieldElement, arg1 *LooseFieldElement) {
	x1 := arg1[0]
	x2 := ((x1 >> 26) + arg1[1])
	x3 := ((x2 >> 26) + arg1[2])
	x4 := ((x3 >> 26) + arg1[3])
	x5 := ((x4 >> 26) + arg1[4])
	x6 := ((x1 & 0x3ffffff) + ((x5 >> 26) * 0x5))
	x7 := (uint32(uint1((x6 >> 26))) + (x2 & 0x3ffffff))
	x8 := (x6 & 0x3ffffff)
	x9 := (x7 & 0x3ffffff)
	x10 := (uint32(uint1((x7 >> 26))) + (x3 & 0x3ffffff))
	x11 := (x4 & 0x3ffffff)
	x12 := (x5 & 0x3ffffff)
	out1[0] = x8
	out1[1] = x9
	out1[2] = x10
	out1[3] = x11
	out1[4] = x12
}

// Add adds two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 + eval arg2) mod m
//
func Add(out1 *LooseFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := (arg1[0] + arg2[0])
	x2 := (arg1[1] + arg2[1])
	x3 := (arg1[2] + arg2[2])
	x4 := (arg1[3] + arg2[3])
	x5 := (arg1[4] + arg2[4])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
}

// Sub subtracts two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 - eval arg2) mod m
//
func Sub(out1 *LooseFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := ((0x7fffff6 + arg1[0]) - arg2[0])
	x2 := ((0x7fffffe + arg1[1]) - arg2[1])
	x3 := ((0x7fffffe + arg1[2]) - arg2[2])
	x4 := ((0x7fffffe + arg1[3]) - arg2[3])
	x5 := ((0x7fffffe + arg1[4]) - arg2[4])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
}

// Opp negates a field element.
//
// Postconditions:
//   eval out1 mod m = -eval arg1 mod m
//
func Opp(out1 *LooseFieldElement, arg1 *TightFieldElement) {
	x1 := (0x7fffff6 - arg1[0])
	x2 := (0x7fffffe - arg1[1])
	x3 := (0x7fffffe - arg1[2])
	x4 := (0x7fffffe - arg1[3])
	x5 := (0x7fffffe - arg1[4])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
}

// Selectznz is a multi-limb conditional select.
//
// Postconditions:
//   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Selectznz(out1 *[5]uint32, arg1 uint1, arg2 *[5]uint32, arg3 *[5]uint32) {
	var x1 uint32
	cmovznzU32(&x1, arg1, arg2[0], arg3[0])
	var x2 uint32
	cmovznzU32(&x2, arg1, arg2[1], arg3[1])
	var x3 uint32
	cmovznzU32(&x3, arg1, arg2[2], arg3[2])
	var x4 uint32
	cmovznzU32(&x4, arg1, arg2[3], arg3[3])
	var x5 uint32
	cmovznzU32(&x5, arg1, arg2[4], arg3[4])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
}

// ToBytes serializes a field element to bytes in little-endian order.
//
// Postconditions:
//   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..16]
//
// Output Bounds:
//   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x3]]
func ToBytes(out1 *[17]uint8, arg1 *TightFieldElement) {
	var x1 uint32
	var x2 uint1
	subborrowxU26(&x1, &x2, 0x0, arg1[0], 0x3fffffb)
	var x3 uint32
	var x4 uint1
	subborrowxU26(&x3, &x4, x2, arg1[1], 0x3ffffff)
	var x5 uint32
	var x6 uint1
	subborrowxU26(&x5, &x6, x4, arg1[2], 0x3ffffff)
	var x7 uint32
	var x8 uint1
	subborrowxU26(&x7, &x8, x6, arg1[3], 0x3ffffff)
	var x9 uint32
	var x10 uint1
	subborrowxU26(&x9, &x10, x8, arg1[4], 0x3ffffff)
	var x11 uint32
	cmovznzU32(&x11, x10, uint32(0x0), 0xffffffff)
	var x12 uint32
	var x13 uint1
	addcarryxU26(&x12, &x13, 0x0, x1, (x11 & 0x3fffffb))
	var x14 uint32
	var x15 uint1
	addcarryxU26(&x14, &x15, x13, x3, (x11 & 0x3ffffff))
	var x16 uint32
	var x17 uint1
	addcarryxU26(&x16, &x17, x15, x5, (x11 & 0x3ffffff))
	var x18 uint32
	var x19 uint1
	addcarryxU26(&x18, &x19, x17, x7, (x11 & 0x3ffffff))
	var x20 uint32
	var x21 uint1
	addcarryxU26(&x20, &x21, x19, x9, (x11 & 0x3ffffff))
	x22 := (x18 << 6)
	x23 := (x16 << 4)
	x24 := (x14 << 2)
	x25 := (uint8(x12) & 0xff)
	x26 := (x12 >> 8)
	x27 := (uint8(x26) & 0xff)
	x28 := (x26 >> 8)
	x29 := (uint8(x28) & 0xff)
	x30 := uint8((x28 >> 8))
	x31 := (x24 + uint32(x30))
	x32 := (uint8(x31) & 0xff)
	x33 := (x31 >> 8)
	x34 := (uint8(x33) & 0xff)
	x35 := (x33 >> 8)
	x36 := (uint8(x35) & 0xff)
	x37 := uint8((x35 >> 8))
	x38 := (x23 + uint32(x37))
	x39 := (uint8(x38) & 0xff)
	x40 := (x38 >> 8)
	x41 := (uint8(x40) & 0xff)
	x42 := (x40 >> 8)
	x43 := (uint8(x42) & 0xff)
	x44 := uint8((x42 >> 8))
	x45 := (x22 + uint32(x44))
	x46 := (uint8(x45) & 0xff)
	x47 := (x45 >> 8)
	x48 := (uint8(x47) & 0xff)
	x49 := (x47 >> 8)
	x50 := (uint8(x49) & 0xff)
	x51 := uint8((x49 >> 8))
	x52 := (uint8(x20) & 0xff)
	x53 := (x20 >> 8)
	x54 := (uint8(x53) & 0xff)
	x55 := (x53 >> 8)
	x56 := (uint8(x55) & 0xff)
	x57 := uint8((x55 >> 8))
	out1[0] = x25
	out1[1] = x27
	out1[2] = x29
	out1[3] = x32
	out1[4] = x34
	out1[5] = x36
	out1[6] = x39
	out1[7] = x41
	out1[8] = x43
	out1[9] = x46
	out1[10] = x48
	out1[11] = x50
	out1[12] = x51
	out1[13] = x52
	out1[14] = x54
	out1[15] = x56
	out1[16] = x57
}

// FromBytes deserializes a field element from bytes in little-endian order.
//
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x3]]
func FromBytes(out1 *TightFieldElement, arg1 *[17]uint8) {
	x1 := (uint32(arg1[16]) << 24)
	x2 := (uint32(arg1[15]) << 16)
	x3 := (uint32(arg1[14]) << 8)
	x4 := arg1[13]
	x5 := (uint32(arg1[12]) << 18)
	x6 := (uint32(arg1[11]) << 10)
	x7 := (uint32(arg1[10]) << 2)
	x8 := (uint32(arg1[9]) << 20)
	x9 := (uint32(arg1[8]) << 12)
	x10 := (uint32(arg1[7]) << 4)
	x11 := (uint32(arg1[6]) << 22)
	x12 := (uint32(arg1[5]) << 14)
	x13 := (uint32(arg1[4]) << 6)
	x14 := (uint32(arg1[3]) << 24)
	x15 := (uint32(arg1[2]) << 16)
	x16 := (uint32(arg1[1]) << 8)
	x17 := arg1[0]
	x18 := (x16 + uint32(x17))
	x19 := (x15 + x18)
	x20 := (x14 + x19)
	x21 := (x20 & 0x3ffffff)
	x22 := uint8((x20 >> 26))
	x23 := (x13 + uint32(x22))
	x24 := (x12 + x23)
	x25 := (x11 + x24)
	x26 := (x25 & 0x3ffffff)
	x27 := uint8((x25 >> 26))
	x28 := (x10 + uint32(x27))
	x29 := (x9 + x28)
	x30 := (x8 + x29)
	x31 := (x30 & 0x3ffffff)
	x32 := uint8((x30 >> 26))
	x33 := (x7 + uint32(x32))
	x34 := (x6 + x33)
	x35 := (x5 + x34)
	x36 := (x3 + uint32(x4))
	x37 := (x2 + x36)
	x38 := (x1 + x37)
	out1[0] = x21
	out1[1] = x26
	out1[2] = x31
	out1[3] = x35
	out1[4] = x38
}

// One returns the field element one.
//
// Postconditions:
//   eval out1 mod m = 1 mod m
//
func One(out1 *TightFieldElement) {
	out1[0] = 0x1
	out1[1] = 0x0
	out1[2] = 0x0
	out1[3] = 0x0
	out1[4] = 0x0
}

// Relax is the identity function converting from tight field elements to loose field elements.
//
// Postconditions:
//   out1 = arg1
//
func Relax(out1 *LooseFieldElement, arg1 *TightFieldElement) {
	x1 := arg1[0]
	x2 := arg1[1]
	x3 := arg1[2]
	x4 := arg1[3]
	x5 := arg1[4]
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
}

// The function Msat returns the saturated (signed) representation of the prime modulus.
//
// Postconditions:
//   twos_complement_eval out1 = m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Msat(out1 *[6]uint32) {
	out1[0] = 0xfffffffb
	out1[1] = 0xffffffff
	out1[2] = 0xffffffff
	out1[3] = 0xffffffff
	out1[4] = 0x3
	out1[5] = uint32(0x0)
}

// The function SatFromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func SatFromBytes(out1 *[6]uint32, arg1 *[17]uint8) {
	x1 := arg1[16]
	x2 := (uint32(arg1[15]) << 24)
	x3 := (uint32(arg1[14]) << 16)
	x4 := (uint32(arg1[13]) << 8)
	x5 := arg1[12]
	x6 := (uint32(arg1[11]) << 24)
	x7 := (uint32(arg1[10]) << 16)
	x8 := (uint32(arg1[9]) << 8)
	x9 := arg1[8]
	x10 := (uint32(arg1[7]) << 24)
	x11 := (uint32(arg1[6]) << 16)
	x12 := (uint32(arg1[5]) << 8)
	x13 := arg1[4]
	x14 := (uint32(arg1[3]) << 24)
	x15 := (uint32(arg1[2]) << 16)
	x16 := (uint32(arg1[1]) << 8)
	x17 := arg1[0]
	x18 := (x16 + uint32(x17))
	x19 := (x15 + x18)
	x20 := (x14 + x19)
	x21 := (x12 + uint32(x13))
	x22 := (x11 + x21)
	x23 := (x10 + x22)
	x24 := (x8 + uint32(x9))
	x25 := (x7 + x24)
	x26 := (x6 + x25)
	x27 := (x4 + uint32(x5))
	x28 := (x3 + x27)
	x29 := (x2 + x28)
	out1[0] = x20
	out1[1] = x23
	out1[2] = x26
	out1[3] = x29
	out1[4] = uint32(x1)
	out1[5] = uint32(0x0)
}

// The function Divstep computes a divstep.
//
// Postconditions:
//   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
//   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
//   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
//   eval out4 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval arg5) mod m else (2 * eval arg4) mod m)
//   eval out5 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval arg4 - eval arg4) mod m else (eval arg5 + (twos_complement_eval arg3 mod 2) * eval arg4) mod m)
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Divstep(out1 *uint32, out2 *[6]uint32, out3 *[6]uint32, out4 *TightFieldElement, out5 *TightFieldElement, arg1 uint32, arg2 *[6]uint32, arg3 *[6]uint32, arg4 *TightFieldElement, arg5 *TightFieldElement) {
	var x1 uint32
	x1, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	x3 := (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1))
	var x4 uint32
	x4, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	var x6 uint32
	cmovznzU32(&x6, x3, arg1, x4)
	var x7 uint32
	cmovznzU32(&x7, x3, arg2[0], arg3[0])
	var x8 uint32
	cmovznzU32(&x8, x3, arg2[1], arg3[1])
	var x9 uint32
	cmovznzU32(&x9, x3, arg2[2], arg3[2])
	var x10 uint32
	cmovznzU32(&x10, x3, arg2[3], arg3[3])
	var x11 uint32
	cmovznzU32(&x11, x3, arg2[4], arg3[4])
	var x12 uint32
	cmovznzU32(&x12, x3, arg2[5], arg3[5])
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Add32(uint32(0x1), (^arg2[0]), uint32(0x0))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Add32(uint32(0x0), (^arg2[1]), uint32(uint1(x14)))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Add32(uint32(0x0), (^arg2[2]), uint32(uint1(x16)))
	var x19 uint32
	var x20 uint32
	x19, x20 = bits.Add32(uint32(0x0), (^arg2[3]), uint32(uint1(x18)))
	var x21 uint32
	var x22 uint32
	x21, x22 = bits.Add32(uint32(0x0), (^arg2[4]), uint32(uint1(x20)))
	var x23 uint32
	x23, _ = bits.Add32(uint32(0x0), (^arg2[5]), uint32(uint1(x22)))
	var x25 uint32
	cmovznzU32(&x25, x3, arg3[0], x13)
	var x26 uint32
	cmovznzU32(&x26, x3, arg3[1], x15)
	var x27 uint32
	cmovznzU32(&x27, x3, arg3[2], x17)
	var x28 uint32
	cmovznzU32(&x28, x3, arg3[3], x19)
	var x29 uint32
	cmovznzU32(&x29, x3, arg3[4], x21)
	var x30 uint32
	cmovznzU32(&x30, x3, arg3[5], x23)
	var x31 uint32
	cmovznzU32(&x31, x3, arg4[0], arg5[0])
	var x32 uint32
	cmovznzU32(&x32, x3, arg4[1], arg5[1])
	var x33 uint32
	cmovznzU32(&x33, x3, arg4[2], arg5[2])
	var x34 uint32
	cmovznzU32(&x34, x3, arg4[3], arg5[3])
	var x35 uint32
	cmovznzU32(&x35, x3, arg4[4], arg5[4])
	x36 := (x31 + x31)
	x37 := (x36 >> 26)
	x38 := (x36 & 0x3ffffff)
	x39 := (x35 + x35)
	x40 := (x34 + x34)
	x41 := (x33 + x33)
	x42 := (x32 + x32)
	x43 := (x37 + x42)
	x44 := (x43 >> 26)
	x45 := (x43 & 0x3ffffff)
	x46 := (x44 + x41)
	x47 := (x46 >> 26)
	x48 := (x46 & 0x3ffffff)
	x49 := (x47 + x40)
	x50 := (x49 >> 26)
	x51 := (x49 & 0x3ffffff)
	x52 := (x50 + x39)
	x53 := (x52 >> 26)
	x54 := (x52 & 0x3ffffff)
	x55 := (x53 * 0x5)
	x56 := (x38 + x55)
	x57 := uint1((x56 >> 26))
	x58 := (x56 & 0x3ffffff)
	x59 := (uint32(x57) + x45)
	x60 := uint1((x59 >> 26))
	x61 := (x59 & 0x3ffffff)
	x62 := (uint32(x60) + x48)
	x63 := arg4[4]
	x64 := arg4[3]
	x65 := arg4[2]
	x66 := arg4[1]
	x67 := arg4[0]
	x68 := (0x7fffff6 - x67)
	x69 := (0x7fffffe - x66)
	x70 := (0x7fffffe - x65)
	x71 := (0x7fffffe - x64)
	x72 := (0x7fffffe - x63)
	x73 := uint1((x68 >> 26))
	x74 := (x68 & 0x3ffffff)
	x75 := (uint32(x73) + x69)
	x76 := uint1((x75 >> 26))
	x77 := (x75 & 0x3ffffff)
	x78 := (uint32(x76) + x70)
	x79 := uint1((x78 >> 26))
	x80 := (x78 & 0x3ffffff)
	x81 := (uint32(x79) + x71)
	x82 := uint1((x81 >> 26))
	x83 := (x81 & 0x3ffffff)
	x84 := (uint32(x82) + x72)
	x85 := uint1((x84 >> 26))
	x86 := (x84 & 0x3ffffff)
	x87 := (uint32(x85) * 0x5)
	x88 := (x74 + x87)
	x89 := uint1((x88 >> 26))
	x90 := (x88 & 0x3ffffff)
	x91 := (uint32(x89) + x77)
	x92 := uint1((x91 >> 26))
	x93 := (x91 & 0x3ffffff)
	x94 := (uint32(x92) + x80)
	var x95 uint32
	cmovznzU32(&x95, x3, arg5[0], x90)
	var x96 uint32
	cmovznzU32(&x96, x3, arg5[1], x93)
	var x97 uint32
	cmovznzU32(&x97, x3, arg5[2], x94)
	var x98 uint32
	cmovznzU32(&x98, x3, arg5[3], x83)
	var x99 uint32
	cmovznzU32(&x99, x3, arg5[4], x86)
	x100 := (uint1(x25) & 0x1)
	var x101 uint32
	cmovznzU32(&x101, x100, uint32(0x0), x7)
	var x102 uint32
	cmovznzU32(&x102, x100, uint32(0x0), x8)
	var x103 uint32
	cmovznzU32(&x103, x100, uint32(0x0), x9)
	var x104 uint32
	cmovznzU32(&x104, x100, uint32(0x0), x10)
	var x105 uint32
	cmovznzU32(&x105, x100, uint32(0x0), x11)
	var x106 uint32
	cmovznzU32(&x106, x100, uint32(0x0), x12)
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Add32(x25, x101, uint32(0x0))
	var x109 uint32
	var x110 uint32
	x109, x110 = bits.Add32(x26, x102, uint32(uint1(x108)))
	var x111 uint32
	var x112 uint32
	x111, x112 = bits.Add32(x27, x103, uint32(uint1(x110)))
	var x113 uint32
	var x114 uint32
	x113, x114 = bits.Add32(x28, x104, uint32(uint1(x112)))
	var x115 uint32
	var x116 uint32
	x115, x116 = bits.Add32(x29, x105, uint32(uint1(x114)))
	var x117 uint32
	x117, _ = bits.Add32(x30, x106, uint32(uint1(x116)))
	var x119 uint32
	cmovznzU32(&x119, x100, uint32(0x0), x31)
	var x120 uint32
	cmovznzU32(&x120, x100, uint32(0x0), x32)
	var x121 uint32
	cmovznzU32(&x121, x100, uint32(0x0), x33)
	var x122 uint32
	cmovznzU32(&x122, x100, uint32(0x0), x34)
	var x123 uint32
	cmovznzU32(&x123, x100, uint32(0x0), x35)
	x124 := (x95 + x119)
	x125 := (x124 >> 26)
	x126 := (x124 & 0x3ffffff)
	x127 := (x99 + x123)
	x128 := (x98 + x122)
	x129 := (x97 + x121)
	x130 := (x96 + x120)
	x131 := (x125 + x130)
	x132 := (x131 >> 26)
	x133 := (x131 & 0x3ffffff)
	x134 := (x132 + x129)
	x135 := (x134 >> 26)
	x136 := (x134 & 0x3ffffff)
	x137 := (x135 + x128)
	x138 := (x137 >> 26)
	x139 := (x137 & 0x3ffffff)
	x140 := (x138 + x127)
	x141 := (x140 >> 26)
	x142 := (x140 & 0x3ffffff)
	x143 := (x141 * 0x5)
	x144 := (x126 + x143)
	x145 := uint1((x144 >> 26))
	x146 := (x144 & 0x3ffffff)
	x147 := (uint32(x145) + x133)
	x148 := uint1((x147 >> 26))
	x149 := (x147 & 0x3ffffff)
	x150 := (uint32(x148) + x136)
	var x151 uint32
	x151, _ = bits.Add32(x6, uint32(0x1), uint32(0x0))
	x153 := ((x107 >> 1) | ((x109 << 31) & 0xffffffff))
	x154 := ((x109 >> 1) | ((x111 << 31) & 0xffffffff))
	x155 := ((x111 >> 1) | ((x113 << 31) & 0xffffffff))
	x156 := ((x113 >> 1) | ((x115 << 31) & 0xffffffff))
	x157 := ((x115 >> 1) | ((x117 << 31) & 0xffffffff))
	x158 := ((x117 & 0x80000000) | (x117 >> 1))
	*out1 = x151
	out2[0] = x7
	out2[1] = x8
	out2[2] = x9
	out2[3] = x10
	out2[4] = x11
	out2[5] = x12
	out3[0] = x153
	out3[1] = x154
	out3[2] = x155
	out3[3] = x156
	out3[4] = x157
	out3[5] = x158
	out4[0] = x58
	out4[1] = x61
	out4[2] = x62
	out4[3] = x51
	out4[4] = x54
	out5[0] = x146
	out5[1] = x149
	out5[2] = x150
	out5[3] = x139
	out5[4] = x142
}

// The function DivstepPrecomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
//
func DivstepPrecomp(out1 *TightFieldElement) {
	out1[0] = 0x2978d6d
	out1[1] = 0x20c49b
	out1[2] = 0x5a1cac
	out1[3] = 0x3f7ced9
	out1[4] = 0x2e978d4
}

// The function JumpdivstepPrecomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecomp(out1 *[5]uint32) {
	out1[0] = 0x126e975
	out1[1] = 0x32b020c
	out1[2] = 0x3b645a1
	out1[3] = 0x2353f7c
	out1[4] = 0x3126e97
}

// The function OuterLoopBody computes the body of the outer loop in BY-inversion (jumpdivstep version).
//
// Postconditions:
//   eval arg1 = eval arg2
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func OuterLoopBody(out1 *[6]uint32, out2 *[6]uint32, out3 *TightFieldElement, out4 *TightFieldElement, arg1 *[6]uint32, arg2 *[6]uint32, arg3 *TightFieldElement, arg4 *TightFieldElement) {
	var x1 uint32
	cmovznzU32(&x1, (uint1(arg2[0]) & 0x1), uint32(0x1), 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1(arg2[0]) & 0x1), arg1[0], arg2[0])
	var x3 uint32
	cmovznzU32(&x3, (uint1(arg2[0]) & 0x1), arg2[0], (uint32((uint64((^arg1[0])) + uint64(0x1))) & 0xffffffff))
	var x4 uint1
	cmovznzU1(&x4, (uint1(arg2[0]) & 0x1), 0x1, 0x0)
	var x5 uint1
	cmovznzU1(&x5, (uint1(arg2[0]) & 0x1), 0x0, 0x1)
	var x6 uint32
	cmovznzU32(&x6, (uint1(arg2[0]) & 0x1), uint32(0x0), 0xffffffff)
	var x7 uint1
	cmovznzU1(&x7, (uint1(arg2[0]) & 0x1), 0x1, 0x0)
	var x8 uint32
	cmovznzU32(&x8, (uint1(x3) & 0x1), uint32(0x0), x2)
	var x9 uint1
	cmovznzU1(&x9, (uint1(x3) & 0x1), 0x0, x4)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x3) & 0x1), 0x0, x5)
	x11 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x1))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x12 uint32
	cmovznzU32(&x12, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x1))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x1))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x13 uint32
	cmovznzU32(&x13, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), x2, (((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1)))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1)), (uint32((uint64((^x2)) + uint64(0x1))) & 0xffffffff))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x4) + uint32(x4)), (uint32((uint64(x6) + uint64(x9))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32(x7) + uint32(x10)))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x6) + uint64(x9))) & 0xffffffff), (uint32((uint64((^(uint32(x4) + uint32(x4)))) + uint64(0x1))) & 0xffffffff))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x7) + uint32(x10)), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1(x14) & 0x1), uint32(0x0), x13)
	var x20 uint32
	cmovznzU32(&x20, (uint1(x14) & 0x1), uint32(0x0), x15)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x14) & 0x1), uint32(0x0), x16)
	x22 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x12))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x23 uint32
	cmovznzU32(&x23, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x12))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x12))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x24 uint32
	cmovznzU32(&x24, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), x13, (((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1)))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1)), (uint32((uint64((^x13)) + uint64(0x1))) & 0xffffffff))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x15) + uint64(x15))) & 0xffffffff), (uint32((uint64(x17) + uint64(x20))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (x16 + x16), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x17) + uint64(x20))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x15) + uint64(x15))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(x16 + x16))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1(x25) & 0x1), uint32(0x0), x24)
	var x31 uint32
	cmovznzU32(&x31, (uint1(x25) & 0x1), uint32(0x0), x26)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x25) & 0x1), uint32(0x0), x27)
	x33 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x23))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x34 uint32
	cmovznzU32(&x34, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x23))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x23))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x35 uint32
	cmovznzU32(&x35, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), x24, (((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1)))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1)), (uint32((uint64((^x24)) + uint64(0x1))) & 0xffffffff))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x26) + uint64(x26))) & 0xffffffff), (uint32((uint64(x28) + uint64(x31))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x31))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x26) + uint64(x26))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1(x36) & 0x1), uint32(0x0), x35)
	var x42 uint32
	cmovznzU32(&x42, (uint1(x36) & 0x1), uint32(0x0), x37)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x36) & 0x1), uint32(0x0), x38)
	x44 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x34))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x45 uint32
	cmovznzU32(&x45, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x34))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x34))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x46 uint32
	cmovznzU32(&x46, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), x35, (((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1)))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1)), (uint32((uint64((^x35)) + uint64(0x1))) & 0xffffffff))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x37) + uint64(x37))) & 0xffffffff), (uint32((uint64(x39) + uint64(x42))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x42))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x37) + uint64(x37))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1(x47) & 0x1), uint32(0x0), x46)
	var x53 uint32
	cmovznzU32(&x53, (uint1(x47) & 0x1), uint32(0x0), x48)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x47) & 0x1), uint32(0x0), x49)
	x55 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x45))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x56 uint32
	cmovznzU32(&x56, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x45))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x45))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x57 uint32
	cmovznzU32(&x57, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), x46, (((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1)))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1)), (uint32((uint64((^x46)) + uint64(0x1))) & 0xffffffff))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x48) + uint64(x48))) & 0xffffffff), (uint32((uint64(x50) + uint64(x53))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x53))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x48) + uint64(x48))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1(x58) & 0x1), uint32(0x0), x57)
	var x64 uint32
	cmovznzU32(&x64, (uint1(x58) & 0x1), uint32(0x0), x59)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x58) & 0x1), uint32(0x0), x60)
	x66 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x56))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x67 uint32
	cmovznzU32(&x67, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x56))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x56))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x68 uint32
	cmovznzU32(&x68, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), x57, (((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1)))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1)), (uint32((uint64((^x57)) + uint64(0x1))) & 0xffffffff))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x59) + uint64(x59))) & 0xffffffff), (uint32((uint64(x61) + uint64(x64))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x64))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x59) + uint64(x59))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1(x69) & 0x1), uint32(0x0), x68)
	var x75 uint32
	cmovznzU32(&x75, (uint1(x69) & 0x1), uint32(0x0), x70)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x69) & 0x1), uint32(0x0), x71)
	x77 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x67))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x78 uint32
	cmovznzU32(&x78, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x67))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x67))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x79 uint32
	cmovznzU32(&x79, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), x68, (((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1)))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1)), (uint32((uint64((^x68)) + uint64(0x1))) & 0xffffffff))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x70) + uint64(x70))) & 0xffffffff), (uint32((uint64(x72) + uint64(x75))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x75))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x70) + uint64(x70))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1(x80) & 0x1), uint32(0x0), x79)
	var x86 uint32
	cmovznzU32(&x86, (uint1(x80) & 0x1), uint32(0x0), x81)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x80) & 0x1), uint32(0x0), x82)
	x88 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x78))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x89 uint32
	cmovznzU32(&x89, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x78))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x78))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x90 uint32
	cmovznzU32(&x90, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), x79, (((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1)))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1)), (uint32((uint64((^x79)) + uint64(0x1))) & 0xffffffff))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x81) + uint64(x81))) & 0xffffffff), (uint32((uint64(x83) + uint64(x86))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x86))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x81) + uint64(x81))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1(x91) & 0x1), uint32(0x0), x90)
	var x97 uint32
	cmovznzU32(&x97, (uint1(x91) & 0x1), uint32(0x0), x92)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x91) & 0x1), uint32(0x0), x93)
	x99 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x89))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x100 uint32
	cmovznzU32(&x100, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x89))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x89))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x101 uint32
	cmovznzU32(&x101, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), x90, (((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1)))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1)), (uint32((uint64((^x90)) + uint64(0x1))) & 0xffffffff))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x92) + uint64(x92))) & 0xffffffff), (uint32((uint64(x94) + uint64(x97))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x97))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x92) + uint64(x92))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1(x102) & 0x1), uint32(0x0), x101)
	var x108 uint32
	cmovznzU32(&x108, (uint1(x102) & 0x1), uint32(0x0), x103)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x102) & 0x1), uint32(0x0), x104)
	x110 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x100))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x111 uint32
	cmovznzU32(&x111, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x100))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x100))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x112 uint32
	cmovznzU32(&x112, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), x101, (((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1)))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1)), (uint32((uint64((^x101)) + uint64(0x1))) & 0xffffffff))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x103) + uint64(x103))) & 0xffffffff), (uint32((uint64(x105) + uint64(x108))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x108))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x103) + uint64(x103))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1(x113) & 0x1), uint32(0x0), x112)
	var x119 uint32
	cmovznzU32(&x119, (uint1(x113) & 0x1), uint32(0x0), x114)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x113) & 0x1), uint32(0x0), x115)
	x121 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x111))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x122 uint32
	cmovznzU32(&x122, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x111))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x111))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x123 uint32
	cmovznzU32(&x123, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), x112, (((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1)))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1)), (uint32((uint64((^x112)) + uint64(0x1))) & 0xffffffff))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x114) + uint64(x114))) & 0xffffffff), (uint32((uint64(x116) + uint64(x119))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x119))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x114) + uint64(x114))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1(x124) & 0x1), uint32(0x0), x123)
	var x130 uint32
	cmovznzU32(&x130, (uint1(x124) & 0x1), uint32(0x0), x125)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x124) & 0x1), uint32(0x0), x126)
	x132 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x122))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x133 uint32
	cmovznzU32(&x133, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x122))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x122))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x134 uint32
	cmovznzU32(&x134, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), x123, (((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1)))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1)), (uint32((uint64((^x123)) + uint64(0x1))) & 0xffffffff))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x125) + uint64(x125))) & 0xffffffff), (uint32((uint64(x127) + uint64(x130))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x130))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x125) + uint64(x125))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1(x135) & 0x1), uint32(0x0), x134)
	var x141 uint32
	cmovznzU32(&x141, (uint1(x135) & 0x1), uint32(0x0), x136)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x135) & 0x1), uint32(0x0), x137)
	x143 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x133))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x144 uint32
	cmovznzU32(&x144, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x133))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x133))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x145 uint32
	cmovznzU32(&x145, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), x134, (((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1)))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1)), (uint32((uint64((^x134)) + uint64(0x1))) & 0xffffffff))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x136) + uint64(x136))) & 0xffffffff), (uint32((uint64(x138) + uint64(x141))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x141))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x136) + uint64(x136))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1(x146) & 0x1), uint32(0x0), x145)
	var x152 uint32
	cmovznzU32(&x152, (uint1(x146) & 0x1), uint32(0x0), x147)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x146) & 0x1), uint32(0x0), x148)
	x154 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x144))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x155 uint32
	cmovznzU32(&x155, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x144))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x144))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x156 uint32
	cmovznzU32(&x156, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), x145, (((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1)))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1)), (uint32((uint64((^x145)) + uint64(0x1))) & 0xffffffff))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x147) + uint64(x147))) & 0xffffffff), (uint32((uint64(x149) + uint64(x152))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x152))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x147) + uint64(x147))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1(x157) & 0x1), uint32(0x0), x156)
	var x163 uint32
	cmovznzU32(&x163, (uint1(x157) & 0x1), uint32(0x0), x158)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x157) & 0x1), uint32(0x0), x159)
	x165 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x155))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x166 uint32
	cmovznzU32(&x166, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x155))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x155))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x167 uint32
	cmovznzU32(&x167, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), x156, (((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1)))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1)), (uint32((uint64((^x156)) + uint64(0x1))) & 0xffffffff))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x158) + uint64(x158))) & 0xffffffff), (uint32((uint64(x160) + uint64(x163))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x163))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x158) + uint64(x158))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1(x168) & 0x1), uint32(0x0), x167)
	var x174 uint32
	cmovznzU32(&x174, (uint1(x168) & 0x1), uint32(0x0), x169)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x168) & 0x1), uint32(0x0), x170)
	x176 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x166))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x177 uint32
	cmovznzU32(&x177, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x166))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x166))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x178 uint32
	cmovznzU32(&x178, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), x167, (((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1)))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1)), (uint32((uint64((^x167)) + uint64(0x1))) & 0xffffffff))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x169) + uint64(x169))) & 0xffffffff), (uint32((uint64(x171) + uint64(x174))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x174))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x169) + uint64(x169))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1(x179) & 0x1), uint32(0x0), x178)
	var x185 uint32
	cmovznzU32(&x185, (uint1(x179) & 0x1), uint32(0x0), x180)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x179) & 0x1), uint32(0x0), x181)
	x187 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x177))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x188 uint32
	cmovznzU32(&x188, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x177))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x177))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x189 uint32
	cmovznzU32(&x189, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), x178, (((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1)))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1)), (uint32((uint64((^x178)) + uint64(0x1))) & 0xffffffff))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x180) + uint64(x180))) & 0xffffffff), (uint32((uint64(x182) + uint64(x185))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x185))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x180) + uint64(x180))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1(x190) & 0x1), uint32(0x0), x189)
	var x196 uint32
	cmovznzU32(&x196, (uint1(x190) & 0x1), uint32(0x0), x191)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x190) & 0x1), uint32(0x0), x192)
	x198 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x188))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x199 uint32
	cmovznzU32(&x199, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x188))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x188))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x200 uint32
	cmovznzU32(&x200, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), x189, (((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1)))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1)), (uint32((uint64((^x189)) + uint64(0x1))) & 0xffffffff))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x191) + uint64(x191))) & 0xffffffff), (uint32((uint64(x193) + uint64(x196))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x196))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x191) + uint64(x191))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1(x201) & 0x1), uint32(0x0), x200)
	var x207 uint32
	cmovznzU32(&x207, (uint1(x201) & 0x1), uint32(0x0), x202)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x201) & 0x1), uint32(0x0), x203)
	x209 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x199))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x210 uint32
	cmovznzU32(&x210, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x199))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x199))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x211 uint32
	cmovznzU32(&x211, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), x200, (((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1)))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1)), (uint32((uint64((^x200)) + uint64(0x1))) & 0xffffffff))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x202) + uint64(x202))) & 0xffffffff), (uint32((uint64(x204) + uint64(x207))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x207))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x202) + uint64(x202))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1(x212) & 0x1), uint32(0x0), x211)
	var x218 uint32
	cmovznzU32(&x218, (uint1(x212) & 0x1), uint32(0x0), x213)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x212) & 0x1), uint32(0x0), x214)
	x220 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x210))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x221 uint32
	cmovznzU32(&x221, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x210))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x210))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x222 uint32
	cmovznzU32(&x222, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), x211, (((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1)))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1)), (uint32((uint64((^x211)) + uint64(0x1))) & 0xffffffff))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x213) + uint64(x213))) & 0xffffffff), (uint32((uint64(x215) + uint64(x218))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x218))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x213) + uint64(x213))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1(x223) & 0x1), uint32(0x0), x222)
	var x229 uint32
	cmovznzU32(&x229, (uint1(x223) & 0x1), uint32(0x0), x224)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x223) & 0x1), uint32(0x0), x225)
	x231 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x221))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x232 uint32
	cmovznzU32(&x232, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x221))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x221))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x233 uint32
	cmovznzU32(&x233, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), x222, (((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1)))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1)), (uint32((uint64((^x222)) + uint64(0x1))) & 0xffffffff))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x224) + uint64(x224))) & 0xffffffff), (uint32((uint64(x226) + uint64(x229))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x229))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x224) + uint64(x224))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1(x234) & 0x1), uint32(0x0), x233)
	var x240 uint32
	cmovznzU32(&x240, (uint1(x234) & 0x1), uint32(0x0), x235)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x234) & 0x1), uint32(0x0), x236)
	x242 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x232))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x243 uint32
	cmovznzU32(&x243, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x232))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x232))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x244 uint32
	cmovznzU32(&x244, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), x233, (((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1)))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1)), (uint32((uint64((^x233)) + uint64(0x1))) & 0xffffffff))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x235) + uint64(x235))) & 0xffffffff), (uint32((uint64(x237) + uint64(x240))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x240))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x235) + uint64(x235))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1(x245) & 0x1), uint32(0x0), x244)
	var x251 uint32
	cmovznzU32(&x251, (uint1(x245) & 0x1), uint32(0x0), x246)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x245) & 0x1), uint32(0x0), x247)
	x253 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x243))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x254 uint32
	cmovznzU32(&x254, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x243))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x243))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x255 uint32
	cmovznzU32(&x255, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), x244, (((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1)))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1)), (uint32((uint64((^x244)) + uint64(0x1))) & 0xffffffff))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x246) + uint64(x246))) & 0xffffffff), (uint32((uint64(x248) + uint64(x251))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x251))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x246) + uint64(x246))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1(x256) & 0x1), uint32(0x0), x255)
	var x262 uint32
	cmovznzU32(&x262, (uint1(x256) & 0x1), uint32(0x0), x257)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x256) & 0x1), uint32(0x0), x258)
	x264 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x254))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x265 uint32
	cmovznzU32(&x265, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x254))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x254))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x266 uint32
	cmovznzU32(&x266, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), x255, (((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1)))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1)), (uint32((uint64((^x255)) + uint64(0x1))) & 0xffffffff))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x257) + uint64(x257))) & 0xffffffff), (uint32((uint64(x259) + uint64(x262))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x262))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x257) + uint64(x257))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1(x267) & 0x1), uint32(0x0), x266)
	var x273 uint32
	cmovznzU32(&x273, (uint1(x267) & 0x1), uint32(0x0), x268)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x267) & 0x1), uint32(0x0), x269)
	x275 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x265))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x276 uint32
	cmovznzU32(&x276, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x265))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x265))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x277 uint32
	cmovznzU32(&x277, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), x266, (((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1)))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1)), (uint32((uint64((^x266)) + uint64(0x1))) & 0xffffffff))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x268) + uint64(x268))) & 0xffffffff), (uint32((uint64(x270) + uint64(x273))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x273))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x268) + uint64(x268))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1(x278) & 0x1), uint32(0x0), x277)
	var x284 uint32
	cmovznzU32(&x284, (uint1(x278) & 0x1), uint32(0x0), x279)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x278) & 0x1), uint32(0x0), x280)
	x286 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x276))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x287 uint32
	cmovznzU32(&x287, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x276))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x276))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x288 uint32
	cmovznzU32(&x288, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), x277, (((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1)))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1)), (uint32((uint64((^x277)) + uint64(0x1))) & 0xffffffff))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x279) + uint64(x279))) & 0xffffffff), (uint32((uint64(x281) + uint64(x284))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x284))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x279) + uint64(x279))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1(x289) & 0x1), uint32(0x0), x288)
	var x295 uint32
	cmovznzU32(&x295, (uint1(x289) & 0x1), uint32(0x0), x290)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x289) & 0x1), uint32(0x0), x291)
	x297 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x287))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x298 uint32
	cmovznzU32(&x298, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x287))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x287))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x299 uint32
	cmovznzU32(&x299, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), x288, (((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1)))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1)), (uint32((uint64((^x288)) + uint64(0x1))) & 0xffffffff))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x290) + uint64(x290))) & 0xffffffff), (uint32((uint64(x292) + uint64(x295))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x295))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x290) + uint64(x290))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1(x300) & 0x1), uint32(0x0), x299)
	var x306 uint32
	cmovznzU32(&x306, (uint1(x300) & 0x1), uint32(0x0), x301)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x300) & 0x1), uint32(0x0), x302)
	x308 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x298))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x309 uint32
	cmovznzU32(&x309, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x298))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x298))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x310 uint32
	cmovznzU32(&x310, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), x299, (((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1)))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1)), (uint32((uint64((^x299)) + uint64(0x1))) & 0xffffffff))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x301) + uint64(x301))) & 0xffffffff), (uint32((uint64(x303) + uint64(x306))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x306))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x301) + uint64(x301))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1(x311) & 0x1), uint32(0x0), x310)
	var x317 uint32
	cmovznzU32(&x317, (uint1(x311) & 0x1), uint32(0x0), x312)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x311) & 0x1), uint32(0x0), x313)
	x319 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x309))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x320 uint32
	cmovznzU32(&x320, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1)), (uint32((uint64((^x310)) + uint64(0x1))) & 0xffffffff))
	var x321 uint32
	cmovznzU32(&x321, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x312) + uint64(x312))) & 0xffffffff), (uint32((uint64(x314) + uint64(x317))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x317))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x312) + uint64(x312))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1(x320) & 0x1), uint32(0x0), x321)
	var x326 uint32
	cmovznzU32(&x326, (uint1(x320) & 0x1), uint32(0x0), x322)
	var x327 uint32
	cmovznzU32(&x327, uint1((arg1[5] >> 31)), uint32(0x0), 0xffffffff)
	var x328 uint32
	cmovznzU32(&x328, uint1(((uint32((uint64(x321) + uint64(x321))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x329 uint32
	_, x329 = bits.Mul32(x328, arg1[0])
	var x331 uint32
	_, x331 = bits.Mul32(x328, arg1[1])
	var x333 uint32
	var x334 uint32
	x334, x333 = bits.Mul32(x328, arg1[0])
	var x335 uint32
	_, x335 = bits.Mul32(x328, arg1[2])
	var x337 uint32
	var x338 uint32
	x338, x337 = bits.Mul32(x328, arg1[1])
	var x339 uint32
	var x340 uint32
	x340, x339 = bits.Mul32(x328, arg1[0])
	var x341 uint32
	_, x341 = bits.Mul32(x328, arg1[3])
	var x343 uint32
	var x344 uint32
	x344, x343 = bits.Mul32(x328, arg1[2])
	var x345 uint32
	var x346 uint32
	x346, x345 = bits.Mul32(x328, arg1[1])
	var x347 uint32
	var x348 uint32
	x348, x347 = bits.Mul32(x328, arg1[0])
	var x349 uint32
	_, x349 = bits.Mul32(x328, arg1[4])
	var x351 uint32
	var x352 uint32
	x352, x351 = bits.Mul32(x328, arg1[3])
	var x353 uint32
	var x354 uint32
	x354, x353 = bits.Mul32(x328, arg1[2])
	var x355 uint32
	var x356 uint32
	x356, x355 = bits.Mul32(x328, arg1[1])
	var x357 uint32
	var x358 uint32
	x358, x357 = bits.Mul32(x328, arg1[0])
	var x359 uint32
	_, x359 = bits.Mul32(x328, arg1[5])
	var x361 uint32
	var x362 uint32
	x362, x361 = bits.Mul32(x328, arg1[4])
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x328, arg1[3])
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x328, arg1[2])
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x328, arg1[1])
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x328, arg1[0])
	var x371 uint32
	_, x371 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), x327)
	var x373 uint32
	var x374 uint32
	x374, x373 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[5])
	var x375 uint32
	var x376 uint32
	x376, x375 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[4])
	var x377 uint32
	var x378 uint32
	x378, x377 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[3])
	var x379 uint32
	var x380 uint32
	x380, x379 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[2])
	var x381 uint32
	var x382 uint32
	x382, x381 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[1])
	var x383 uint32
	var x384 uint32
	x384, x383 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[0])
	var x385 uint32
	x385, _ = bits.Add32(x374, x329, uint32(0x0))
	var x387 uint32
	x387, _ = bits.Add32(x385, x331, uint32(0x0))
	var x389 uint32
	var x390 uint32
	x389, x390 = bits.Add32(x376, x333, uint32(0x0))
	var x391 uint32
	x391, _ = bits.Add32(x387, x334, uint32(uint1(x390)))
	var x393 uint32
	var x394 uint32
	x393, x394 = bits.Add32(x389, x337, uint32(0x0))
	var x395 uint32
	x395, _ = bits.Add32(x391, x335, uint32(uint1(x394)))
	var x397 uint32
	var x398 uint32
	x397, x398 = bits.Add32(x378, x339, uint32(0x0))
	var x399 uint32
	var x400 uint32
	x399, x400 = bits.Add32(x393, x340, uint32(uint1(x398)))
	var x401 uint32
	x401, _ = bits.Add32(x395, x338, uint32(uint1(x400)))
	var x403 uint32
	var x404 uint32
	x403, x404 = bits.Add32(x397, x345, uint32(0x0))
	var x405 uint32
	var x406 uint32
	x405, x406 = bits.Add32(x399, x343, uint32(uint1(x404)))
	var x407 uint32
	x407, _ = bits.Add32(x401, x341, uint32(uint1(x406)))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x380, x347, uint32(0x0))
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(x403, x348, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x405, x346, uint32(uint1(x412)))
	var x415 uint32
	x415, _ = bits.Add32(x407, x344, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x409, x355, uint32(0x0))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x411, x353, uint32(uint1(x418)))
	var x421 uint32
	var x422 uint32
	x421, x422 = bits.Add32(x413, x351, uint32(uint1(x420)))
	var x423 uint32
	x423, _ = bits.Add32(x415, x349, uint32(uint1(x422)))
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x382, x357, uint32(0x0))
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x417, x358, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x419, x356, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x421, x354, uint32(uint1(x430)))
	var x433 uint32
	x433, _ = bits.Add32(x423, x352, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x425, x367, uint32(0x0))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x427, x365, uint32(uint1(x436)))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x429, x363, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x431, x361, uint32(uint1(x440)))
	var x443 uint32
	x443, _ = bits.Add32(x433, x359, uint32(uint1(x442)))
	var x445 uint32
	var x446 uint32
	x445, x446 = bits.Add32(x384, x369, uint32(0x0))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x435, x370, uint32(uint1(x446)))
	var x449 uint32
	var x450 uint32
	x449, x450 = bits.Add32(x437, x368, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x439, x366, uint32(uint1(x450)))
	var x453 uint32
	var x454 uint32
	x453, x454 = bits.Add32(x441, x364, uint32(uint1(x452)))
	var x455 uint32
	x455, _ = bits.Add32(x443, x362, uint32(uint1(x454)))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x445, x381, uint32(0x0))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x447, x379, uint32(uint1(x458)))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x449, x377, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x451, x375, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x453, x373, uint32(uint1(x464)))
	var x467 uint32
	x467, _ = bits.Add32(x455, x371, uint32(uint1(x466)))
	var x469 uint32
	cmovznzU32(&x469, uint1((arg2[5] >> 31)), uint32(0x0), 0xffffffff)
	var x470 uint32
	cmovznzU32(&x470, uint1(((uint32((uint64(x322) + uint64(x322))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x471 uint32
	_, x471 = bits.Mul32(x470, arg2[0])
	var x473 uint32
	_, x473 = bits.Mul32(x470, arg2[1])
	var x475 uint32
	var x476 uint32
	x476, x475 = bits.Mul32(x470, arg2[0])
	var x477 uint32
	_, x477 = bits.Mul32(x470, arg2[2])
	var x479 uint32
	var x480 uint32
	x480, x479 = bits.Mul32(x470, arg2[1])
	var x481 uint32
	var x482 uint32
	x482, x481 = bits.Mul32(x470, arg2[0])
	var x483 uint32
	_, x483 = bits.Mul32(x470, arg2[3])
	var x485 uint32
	var x486 uint32
	x486, x485 = bits.Mul32(x470, arg2[2])
	var x487 uint32
	var x488 uint32
	x488, x487 = bits.Mul32(x470, arg2[1])
	var x489 uint32
	var x490 uint32
	x490, x489 = bits.Mul32(x470, arg2[0])
	var x491 uint32
	_, x491 = bits.Mul32(x470, arg2[4])
	var x493 uint32
	var x494 uint32
	x494, x493 = bits.Mul32(x470, arg2[3])
	var x495 uint32
	var x496 uint32
	x496, x495 = bits.Mul32(x470, arg2[2])
	var x497 uint32
	var x498 uint32
	x498, x497 = bits.Mul32(x470, arg2[1])
	var x499 uint32
	var x500 uint32
	x500, x499 = bits.Mul32(x470, arg2[0])
	var x501 uint32
	_, x501 = bits.Mul32(x470, arg2[5])
	var x503 uint32
	var x504 uint32
	x504, x503 = bits.Mul32(x470, arg2[4])
	var x505 uint32
	var x506 uint32
	x506, x505 = bits.Mul32(x470, arg2[3])
	var x507 uint32
	var x508 uint32
	x508, x507 = bits.Mul32(x470, arg2[2])
	var x509 uint32
	var x510 uint32
	x510, x509 = bits.Mul32(x470, arg2[1])
	var x511 uint32
	var x512 uint32
	x512, x511 = bits.Mul32(x470, arg2[0])
	var x513 uint32
	_, x513 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), x469)
	var x515 uint32
	var x516 uint32
	x516, x515 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[5])
	var x517 uint32
	var x518 uint32
	x518, x517 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[4])
	var x519 uint32
	var x520 uint32
	x520, x519 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[3])
	var x521 uint32
	var x522 uint32
	x522, x521 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[2])
	var x523 uint32
	var x524 uint32
	x524, x523 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[1])
	var x525 uint32
	var x526 uint32
	x526, x525 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[0])
	var x527 uint32
	x527, _ = bits.Add32(x516, x471, uint32(0x0))
	var x529 uint32
	x529, _ = bits.Add32(x527, x473, uint32(0x0))
	var x531 uint32
	var x532 uint32
	x531, x532 = bits.Add32(x518, x475, uint32(0x0))
	var x533 uint32
	x533, _ = bits.Add32(x529, x476, uint32(uint1(x532)))
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x531, x479, uint32(0x0))
	var x537 uint32
	x537, _ = bits.Add32(x533, x477, uint32(uint1(x536)))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x520, x481, uint32(0x0))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x535, x482, uint32(uint1(x540)))
	var x543 uint32
	x543, _ = bits.Add32(x537, x480, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x539, x487, uint32(0x0))
	var x547 uint32
	var x548 uint32
	x547, x548 = bits.Add32(x541, x485, uint32(uint1(x546)))
	var x549 uint32
	x549, _ = bits.Add32(x543, x483, uint32(uint1(x548)))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(x522, x489, uint32(0x0))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x545, x490, uint32(uint1(x552)))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x547, x488, uint32(uint1(x554)))
	var x557 uint32
	x557, _ = bits.Add32(x549, x486, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Add32(x551, x497, uint32(0x0))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Add32(x553, x495, uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Add32(x555, x493, uint32(uint1(x562)))
	var x565 uint32
	x565, _ = bits.Add32(x557, x491, uint32(uint1(x564)))
	var x567 uint32
	var x568 uint32
	x567, x568 = bits.Add32(x524, x499, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x559, x500, uint32(uint1(x568)))
	var x571 uint32
	var x572 uint32
	x571, x572 = bits.Add32(x561, x498, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x563, x496, uint32(uint1(x572)))
	var x575 uint32
	x575, _ = bits.Add32(x565, x494, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x567, x509, uint32(0x0))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x569, x507, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x571, x505, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x573, x503, uint32(uint1(x582)))
	var x585 uint32
	x585, _ = bits.Add32(x575, x501, uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x526, x511, uint32(0x0))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x577, x512, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x579, x510, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x581, x508, uint32(uint1(x592)))
	var x595 uint32
	var x596 uint32
	x595, x596 = bits.Add32(x583, x506, uint32(uint1(x594)))
	var x597 uint32
	x597, _ = bits.Add32(x585, x504, uint32(uint1(x596)))
	var x599 uint32
	var x600 uint32
	x599, x600 = bits.Add32(x587, x523, uint32(0x0))
	var x601 uint32
	var x602 uint32
	x601, x602 = bits.Add32(x589, x521, uint32(uint1(x600)))
	var x603 uint32
	var x604 uint32
	x603, x604 = bits.Add32(x591, x519, uint32(uint1(x602)))
	var x605 uint32
	var x606 uint32
	x605, x606 = bits.Add32(x593, x517, uint32(uint1(x604)))
	var x607 uint32
	var x608 uint32
	x607, x608 = bits.Add32(x595, x515, uint32(uint1(x606)))
	var x609 uint32
	x609, _ = bits.Add32(x597, x513, uint32(uint1(x608)))
	var x611 uint32
	cmovznzU32(&x611, uint1((arg1[5] >> 31)), uint32(0x0), 0xffffffff)
	var x612 uint32
	cmovznzU32(&x612, uint1(((uint32((uint64(x323) + uint64(x325))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x613 uint32
	_, x613 = bits.Mul32(x612, arg1[0])
	var x615 uint32
	_, x615 = bits.Mul32(x612, arg1[1])
	var x617 uint32
	var x618 uint32
	x618, x617 = bits.Mul32(x612, arg1[0])
	var x619 uint32
	_, x619 = bits.Mul32(x612, arg1[2])
	var x621 uint32
	var x622 uint32
	x622, x621 = bits.Mul32(x612, arg1[1])
	var x623 uint32
	var x624 uint32
	x624, x623 = bits.Mul32(x612, arg1[0])
	var x625 uint32
	_, x625 = bits.Mul32(x612, arg1[3])
	var x627 uint32
	var x628 uint32
	x628, x627 = bits.Mul32(x612, arg1[2])
	var x629 uint32
	var x630 uint32
	x630, x629 = bits.Mul32(x612, arg1[1])
	var x631 uint32
	var x632 uint32
	x632, x631 = bits.Mul32(x612, arg1[0])
	var x633 uint32
	_, x633 = bits.Mul32(x612, arg1[4])
	var x635 uint32
	var x636 uint32
	x636, x635 = bits.Mul32(x612, arg1[3])
	var x637 uint32
	var x638 uint32
	x638, x637 = bits.Mul32(x612, arg1[2])
	var x639 uint32
	var x640 uint32
	x640, x639 = bits.Mul32(x612, arg1[1])
	var x641 uint32
	var x642 uint32
	x642, x641 = bits.Mul32(x612, arg1[0])
	var x643 uint32
	_, x643 = bits.Mul32(x612, arg1[5])
	var x645 uint32
	var x646 uint32
	x646, x645 = bits.Mul32(x612, arg1[4])
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x612, arg1[3])
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x612, arg1[2])
	var x651 uint32
	var x652 uint32
	x652, x651 = bits.Mul32(x612, arg1[1])
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x612, arg1[0])
	var x655 uint32
	_, x655 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), x611)
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[5])
	var x659 uint32
	var x660 uint32
	x660, x659 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[4])
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[3])
	var x663 uint32
	var x664 uint32
	x664, x663 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[2])
	var x665 uint32
	var x666 uint32
	x666, x665 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[1])
	var x667 uint32
	var x668 uint32
	x668, x667 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[0])
	var x669 uint32
	x669, _ = bits.Add32(x658, x613, uint32(0x0))
	var x671 uint32
	x671, _ = bits.Add32(x669, x615, uint32(0x0))
	var x673 uint32
	var x674 uint32
	x673, x674 = bits.Add32(x660, x617, uint32(0x0))
	var x675 uint32
	x675, _ = bits.Add32(x671, x618, uint32(uint1(x674)))
	var x677 uint32
	var x678 uint32
	x677, x678 = bits.Add32(x673, x621, uint32(0x0))
	var x679 uint32
	x679, _ = bits.Add32(x675, x619, uint32(uint1(x678)))
	var x681 uint32
	var x682 uint32
	x681, x682 = bits.Add32(x662, x623, uint32(0x0))
	var x683 uint32
	var x684 uint32
	x683, x684 = bits.Add32(x677, x624, uint32(uint1(x682)))
	var x685 uint32
	x685, _ = bits.Add32(x679, x622, uint32(uint1(x684)))
	var x687 uint32
	var x688 uint32
	x687, x688 = bits.Add32(x681, x629, uint32(0x0))
	var x689 uint32
	var x690 uint32
	x689, x690 = bits.Add32(x683, x627, uint32(uint1(x688)))
	var x691 uint32
	x691, _ = bits.Add32(x685, x625, uint32(uint1(x690)))
	var x693 uint32
	var x694 uint32
	x693, x694 = bits.Add32(x664, x631, uint32(0x0))
	var x695 uint32
	var x696 uint32
	x695, x696 = bits.Add32(x687, x632, uint32(uint1(x694)))
	var x697 uint32
	var x698 uint32
	x697, x698 = bits.Add32(x689, x630, uint32(uint1(x696)))
	var x699 uint32
	x699, _ = bits.Add32(x691, x628, uint32(uint1(x698)))
	var x701 uint32
	var x702 uint32
	x701, x702 = bits.Add32(x693, x639, uint32(0x0))
	var x703 uint32
	var x704 uint32
	x703, x704 = bits.Add32(x695, x637, uint32(uint1(x702)))
	var x705 uint32
	var x706 uint32
	x705, x706 = bits.Add32(x697, x635, uint32(uint1(x704)))
	var x707 uint32
	x707, _ = bits.Add32(x699, x633, uint32(uint1(x706)))
	var x709 uint32
	var x710 uint32
	x709, x710 = bits.Add32(x666, x641, uint32(0x0))
	var x711 uint32
	var x712 uint32
	x711, x712 = bits.Add32(x701, x642, uint32(uint1(x710)))
	var x713 uint32
	var x714 uint32
	x713, x714 = bits.Add32(x703, x640, uint32(uint1(x712)))
	var x715 uint32
	var x716 uint32
	x715, x716 = bits.Add32(x705, x638, uint32(uint1(x714)))
	var x717 uint32
	x717, _ = bits.Add32(x707, x636, uint32(uint1(x716)))
	var x719 uint32
	var x720 uint32
	x719, x720 = bits.Add32(x709, x651, uint32(0x0))
	var x721 uint32
	var x722 uint32
	x721, x722 = bits.Add32(x711, x649, uint32(uint1(x720)))
	var x723 uint32
	var x724 uint32
	x723, x724 = bits.Add32(x713, x647, uint32(uint1(x722)))
	var x725 uint32
	var x726 uint32
	x725, x726 = bits.Add32(x715, x645, uint32(uint1(x724)))
	var x727 uint32
	x727, _ = bits.Add32(x717, x643, uint32(uint1(x726)))
	var x729 uint32
	var x730 uint32
	x729, x730 = bits.Add32(x668, x653, uint32(0x0))
	var x731 uint32
	var x732 uint32
	x731, x732 = bits.Add32(x719, x654, uint32(uint1(x730)))
	var x733 uint32
	var x734 uint32
	x733, x734 = bits.Add32(x721, x652, uint32(uint1(x732)))
	var x735 uint32
	var x736 uint32
	x735, x736 = bits.Add32(x723, x650, uint32(uint1(x734)))
	var x737 uint32
	var x738 uint32
	x737, x738 = bits.Add32(x725, x648, uint32(uint1(x736)))
	var x739 uint32
	x739, _ = bits.Add32(x727, x646, uint32(uint1(x738)))
	var x741 uint32
	var x742 uint32
	x741, x742 = bits.Add32(x729, x665, uint32(0x0))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x731, x663, uint32(uint1(x742)))
	var x745 uint32
	var x746 uint32
	x745, x746 = bits.Add32(x733, x661, uint32(uint1(x744)))
	var x747 uint32
	var x748 uint32
	x747, x748 = bits.Add32(x735, x659, uint32(uint1(x746)))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x737, x657, uint32(uint1(x748)))
	var x751 uint32
	x751, _ = bits.Add32(x739, x655, uint32(uint1(x750)))
	var x753 uint32
	cmovznzU32(&x753, uint1((arg2[5] >> 31)), uint32(0x0), 0xffffffff)
	var x754 uint32
	cmovznzU32(&x754, uint1(((uint32((uint64(x324) + uint64(x326))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x755 uint32
	_, x755 = bits.Mul32(x754, arg2[0])
	var x757 uint32
	_, x757 = bits.Mul32(x754, arg2[1])
	var x759 uint32
	var x760 uint32
	x760, x759 = bits.Mul32(x754, arg2[0])
	var x761 uint32
	_, x761 = bits.Mul32(x754, arg2[2])
	var x763 uint32
	var x764 uint32
	x764, x763 = bits.Mul32(x754, arg2[1])
	var x765 uint32
	var x766 uint32
	x766, x765 = bits.Mul32(x754, arg2[0])
	var x767 uint32
	_, x767 = bits.Mul32(x754, arg2[3])
	var x769 uint32
	var x770 uint32
	x770, x769 = bits.Mul32(x754, arg2[2])
	var x771 uint32
	var x772 uint32
	x772, x771 = bits.Mul32(x754, arg2[1])
	var x773 uint32
	var x774 uint32
	x774, x773 = bits.Mul32(x754, arg2[0])
	var x775 uint32
	_, x775 = bits.Mul32(x754, arg2[4])
	var x777 uint32
	var x778 uint32
	x778, x777 = bits.Mul32(x754, arg2[3])
	var x779 uint32
	var x780 uint32
	x780, x779 = bits.Mul32(x754, arg2[2])
	var x781 uint32
	var x782 uint32
	x782, x781 = bits.Mul32(x754, arg2[1])
	var x783 uint32
	var x784 uint32
	x784, x783 = bits.Mul32(x754, arg2[0])
	var x785 uint32
	_, x785 = bits.Mul32(x754, arg2[5])
	var x787 uint32
	var x788 uint32
	x788, x787 = bits.Mul32(x754, arg2[4])
	var x789 uint32
	var x790 uint32
	x790, x789 = bits.Mul32(x754, arg2[3])
	var x791 uint32
	var x792 uint32
	x792, x791 = bits.Mul32(x754, arg2[2])
	var x793 uint32
	var x794 uint32
	x794, x793 = bits.Mul32(x754, arg2[1])
	var x795 uint32
	var x796 uint32
	x796, x795 = bits.Mul32(x754, arg2[0])
	var x797 uint32
	_, x797 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), x753)
	var x799 uint32
	var x800 uint32
	x800, x799 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[5])
	var x801 uint32
	var x802 uint32
	x802, x801 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[4])
	var x803 uint32
	var x804 uint32
	x804, x803 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[3])
	var x805 uint32
	var x806 uint32
	x806, x805 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[2])
	var x807 uint32
	var x808 uint32
	x808, x807 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[1])
	var x809 uint32
	var x810 uint32
	x810, x809 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[0])
	var x811 uint32
	x811, _ = bits.Add32(x800, x755, uint32(0x0))
	var x813 uint32
	x813, _ = bits.Add32(x811, x757, uint32(0x0))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x802, x759, uint32(0x0))
	var x817 uint32
	x817, _ = bits.Add32(x813, x760, uint32(uint1(x816)))
	var x819 uint32
	var x820 uint32
	x819, x820 = bits.Add32(x815, x763, uint32(0x0))
	var x821 uint32
	x821, _ = bits.Add32(x817, x761, uint32(uint1(x820)))
	var x823 uint32
	var x824 uint32
	x823, x824 = bits.Add32(x804, x765, uint32(0x0))
	var x825 uint32
	var x826 uint32
	x825, x826 = bits.Add32(x819, x766, uint32(uint1(x824)))
	var x827 uint32
	x827, _ = bits.Add32(x821, x764, uint32(uint1(x826)))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x823, x771, uint32(0x0))
	var x831 uint32
	var x832 uint32
	x831, x832 = bits.Add32(x825, x769, uint32(uint1(x830)))
	var x833 uint32
	x833, _ = bits.Add32(x827, x767, uint32(uint1(x832)))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x806, x773, uint32(0x0))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x829, x774, uint32(uint1(x836)))
	var x839 uint32
	var x840 uint32
	x839, x840 = bits.Add32(x831, x772, uint32(uint1(x838)))
	var x841 uint32
	x841, _ = bits.Add32(x833, x770, uint32(uint1(x840)))
	var x843 uint32
	var x844 uint32
	x843, x844 = bits.Add32(x835, x781, uint32(0x0))
	var x845 uint32
	var x846 uint32
	x845, x846 = bits.Add32(x837, x779, uint32(uint1(x844)))
	var x847 uint32
	var x848 uint32
	x847, x848 = bits.Add32(x839, x777, uint32(uint1(x846)))
	var x849 uint32
	x849, _ = bits.Add32(x841, x775, uint32(uint1(x848)))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x808, x783, uint32(0x0))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x843, x784, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x845, x782, uint32(uint1(x854)))
	var x857 uint32
	var x858 uint32
	x857, x858 = bits.Add32(x847, x780, uint32(uint1(x856)))
	var x859 uint32
	x859, _ = bits.Add32(x849, x778, uint32(uint1(x858)))
	var x861 uint32
	var x862 uint32
	x861, x862 = bits.Add32(x851, x793, uint32(0x0))
	var x863 uint32
	var x864 uint32
	x863, x864 = bits.Add32(x853, x791, uint32(uint1(x862)))
	var x865 uint32
	var x866 uint32
	x865, x866 = bits.Add32(x855, x789, uint32(uint1(x864)))
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x857, x787, uint32(uint1(x866)))
	var x869 uint32
	x869, _ = bits.Add32(x859, x785, uint32(uint1(x868)))
	var x871 uint32
	var x872 uint32
	x871, x872 = bits.Add32(x810, x795, uint32(0x0))
	var x873 uint32
	var x874 uint32
	x873, x874 = bits.Add32(x861, x796, uint32(uint1(x872)))
	var x875 uint32
	var x876 uint32
	x875, x876 = bits.Add32(x863, x794, uint32(uint1(x874)))
	var x877 uint32
	var x878 uint32
	x877, x878 = bits.Add32(x865, x792, uint32(uint1(x876)))
	var x879 uint32
	var x880 uint32
	x879, x880 = bits.Add32(x867, x790, uint32(uint1(x878)))
	var x881 uint32
	x881, _ = bits.Add32(x869, x788, uint32(uint1(x880)))
	var x883 uint32
	var x884 uint32
	x883, x884 = bits.Add32(x871, x807, uint32(0x0))
	var x885 uint32
	var x886 uint32
	x885, x886 = bits.Add32(x873, x805, uint32(uint1(x884)))
	var x887 uint32
	var x888 uint32
	x887, x888 = bits.Add32(x875, x803, uint32(uint1(x886)))
	var x889 uint32
	var x890 uint32
	x889, x890 = bits.Add32(x877, x801, uint32(uint1(x888)))
	var x891 uint32
	var x892 uint32
	x891, x892 = bits.Add32(x879, x799, uint32(uint1(x890)))
	var x893 uint32
	x893, _ = bits.Add32(x881, x797, uint32(uint1(x892)))
	var x895 uint32
	var x896 uint32
	x895, x896 = bits.Add32(x383, x525, uint32(0x0))
	var x897 uint32
	var x898 uint32
	x897, x898 = bits.Add32(x457, x599, uint32(uint1(x896)))
	var x899 uint32
	var x900 uint32
	x899, x900 = bits.Add32(x459, x601, uint32(uint1(x898)))
	var x901 uint32
	var x902 uint32
	x901, x902 = bits.Add32(x461, x603, uint32(uint1(x900)))
	var x903 uint32
	var x904 uint32
	x903, x904 = bits.Add32(x463, x605, uint32(uint1(x902)))
	var x905 uint32
	var x906 uint32
	x905, x906 = bits.Add32(x465, x607, uint32(uint1(x904)))
	var x907 uint32
	x907, _ = bits.Add32(x467, x609, uint32(uint1(x906)))
	var x909 uint32
	var x910 uint32
	x909, x910 = bits.Add32(x667, x809, uint32(0x0))
	var x911 uint32
	var x912 uint32
	x911, x912 = bits.Add32(x741, x883, uint32(uint1(x910)))
	var x913 uint32
	var x914 uint32
	x913, x914 = bits.Add32(x743, x885, uint32(uint1(x912)))
	var x915 uint32
	var x916 uint32
	x915, x916 = bits.Add32(x745, x887, uint32(uint1(x914)))
	var x917 uint32
	var x918 uint32
	x917, x918 = bits.Add32(x747, x889, uint32(uint1(x916)))
	var x919 uint32
	var x920 uint32
	x919, x920 = bits.Add32(x749, x891, uint32(uint1(x918)))
	var x921 uint32
	x921, _ = bits.Add32(x751, x893, uint32(uint1(x920)))
	x923 := ((x895 >> 30) | ((x897 << 2) & 0xffffffff))
	x924 := ((x897 >> 30) | ((x899 << 2) & 0xffffffff))
	x925 := ((x899 >> 30) | ((x901 << 2) & 0xffffffff))
	x926 := ((x901 >> 30) | ((x903 << 2) & 0xffffffff))
	x927 := ((x903 >> 30) | ((x905 << 2) & 0xffffffff))
	x928 := ((x905 >> 30) | ((x907 << 2) & 0xffffffff))
	x929 := ((x909 >> 30) | ((x911 << 2) & 0xffffffff))
	x930 := ((x911 >> 30) | ((x913 << 2) & 0xffffffff))
	x931 := ((x913 >> 30) | ((x915 << 2) & 0xffffffff))
	x932 := ((x915 >> 30) | ((x917 << 2) & 0xffffffff))
	x933 := ((x917 >> 30) | ((x919 << 2) & 0xffffffff))
	x934 := ((x919 >> 30) | ((x921 << 2) & 0xffffffff))
	x935 := uint1(((uint32((uint64(x321) + uint64(x321))) & 0xffffffff) >> 31))
	x936 := (uint32((uint64((^(uint32((uint64(x321) + uint64(x321))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x937 := (uint32((uint64(x321) + uint64(x321))) & 0xffffffff)
	x938 := (x937 >> 26)
	x939 := (x937 & 0x3ffffff)
	x940 := (x936 >> 26)
	x941 := (x936 & 0x3ffffff)
	x942 := (0x7fffff6 - x941)
	x943 := (0x7fffffe - x940)
	x944 := uint1((x942 >> 26))
	x945 := (x942 & 0x3ffffff)
	x946 := (uint32(x944) + x943)
	x947 := (x946 & 0x3ffffff)
	x948 := (x945 + 0x5)
	x949 := uint1((x948 >> 26))
	x950 := (x948 & 0x3ffffff)
	x951 := (uint32(x949) + x947)
	x952 := uint1((x951 >> 26))
	x953 := (x951 & 0x3ffffff)
	x954 := (uint32(x952) + 0x3ffffff)
	var x955 uint32
	cmovznzU32(&x955, x935, x939, x950)
	var x956 uint32
	cmovznzU32(&x956, x935, x938, x953)
	var x957 uint32
	cmovznzU32(&x957, x935, uint32(0x0), x954)
	var x958 uint32
	cmovznzU32(&x958, x935, uint32(0x0), 0x3ffffff)
	var x959 uint32
	cmovznzU32(&x959, x935, uint32(0x0), 0x3ffffff)
	x960 := uint1(((uint32((uint64(x322) + uint64(x322))) & 0xffffffff) >> 31))
	x961 := (uint32((uint64((^(uint32((uint64(x322) + uint64(x322))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x962 := (uint32((uint64(x322) + uint64(x322))) & 0xffffffff)
	x963 := (x962 >> 26)
	x964 := (x962 & 0x3ffffff)
	x965 := (x961 >> 26)
	x966 := (x961 & 0x3ffffff)
	x967 := (0x7fffff6 - x966)
	x968 := (0x7fffffe - x965)
	x969 := uint1((x967 >> 26))
	x970 := (x967 & 0x3ffffff)
	x971 := (uint32(x969) + x968)
	x972 := (x971 & 0x3ffffff)
	x973 := (x970 + 0x5)
	x974 := uint1((x973 >> 26))
	x975 := (x973 & 0x3ffffff)
	x976 := (uint32(x974) + x972)
	x977 := uint1((x976 >> 26))
	x978 := (x976 & 0x3ffffff)
	x979 := (uint32(x977) + 0x3ffffff)
	var x980 uint32
	cmovznzU32(&x980, x960, x964, x975)
	var x981 uint32
	cmovznzU32(&x981, x960, x963, x978)
	var x982 uint32
	cmovznzU32(&x982, x960, uint32(0x0), x979)
	var x983 uint32
	cmovznzU32(&x983, x960, uint32(0x0), 0x3ffffff)
	var x984 uint32
	cmovznzU32(&x984, x960, uint32(0x0), 0x3ffffff)
	x985 := uint1(((uint32((uint64(x323) + uint64(x325))) & 0xffffffff) >> 31))
	x986 := (uint32((uint64((^(uint32((uint64(x323) + uint64(x325))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x987 := (uint32((uint64(x323) + uint64(x325))) & 0xffffffff)
	x988 := (x987 >> 26)
	x989 := (x987 & 0x3ffffff)
	x990 := (x986 >> 26)
	x991 := (x986 & 0x3ffffff)
	x992 := (0x7fffff6 - x991)
	x993 := (0x7fffffe - x990)
	x994 := uint1((x992 >> 26))
	x995 := (x992 & 0x3ffffff)
	x996 := (uint32(x994) + x993)
	x997 := (x996 & 0x3ffffff)
	x998 := (x995 + 0x5)
	x999 := uint1((x998 >> 26))
	x1000 := (x998 & 0x3ffffff)
	x1001 := (uint32(x999) + x997)
	x1002 := uint1((x1001 >> 26))
	x1003 := (x1001 & 0x3ffffff)
	x1004 := (uint32(x1002) + 0x3ffffff)
	var x1005 uint32
	cmovznzU32(&x1005, x985, x989, x1000)
	var x1006 uint32
	cmovznzU32(&x1006, x985, x988, x1003)
	var x1007 uint32
	cmovznzU32(&x1007, x985, uint32(0x0), x1004)
	var x1008 uint32
	cmovznzU32(&x1008, x985, uint32(0x0), 0x3ffffff)
	var x1009 uint32
	cmovznzU32(&x1009, x985, uint32(0x0), 0x3ffffff)
	x1010 := uint1(((uint32((uint64(x324) + uint64(x326))) & 0xffffffff) >> 31))
	x1011 := (uint32((uint64((^(uint32((uint64(x324) + uint64(x326))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1012 := (uint32((uint64(x324) + uint64(x326))) & 0xffffffff)
	x1013 := (x1012 >> 26)
	x1014 := (x1012 & 0x3ffffff)
	x1015 := (x1011 >> 26)
	x1016 := (x1011 & 0x3ffffff)
	x1017 := (0x7fffff6 - x1016)
	x1018 := (0x7fffffe - x1015)
	x1019 := uint1((x1017 >> 26))
	x1020 := (x1017 & 0x3ffffff)
	x1021 := (uint32(x1019) + x1018)
	x1022 := (x1021 & 0x3ffffff)
	x1023 := (x1020 + 0x5)
	x1024 := uint1((x1023 >> 26))
	x1025 := (x1023 & 0x3ffffff)
	x1026 := (uint32(x1024) + x1022)
	x1027 := uint1((x1026 >> 26))
	x1028 := (x1026 & 0x3ffffff)
	x1029 := (uint32(x1027) + 0x3ffffff)
	var x1030 uint32
	cmovznzU32(&x1030, x1010, x1014, x1025)
	var x1031 uint32
	cmovznzU32(&x1031, x1010, x1013, x1028)
	var x1032 uint32
	cmovznzU32(&x1032, x1010, uint32(0x0), x1029)
	var x1033 uint32
	cmovznzU32(&x1033, x1010, uint32(0x0), 0x3ffffff)
	var x1034 uint32
	cmovznzU32(&x1034, x1010, uint32(0x0), 0x3ffffff)
	x1035 := (uint64(x959) * uint64((arg3[4] * 0x5)))
	x1036 := (uint64(x959) * uint64((arg3[3] * 0x5)))
	x1037 := (uint64(x959) * uint64((arg3[2] * 0x5)))
	x1038 := (uint64(x959) * uint64((arg3[1] * 0x5)))
	x1039 := (uint64(x958) * uint64((arg3[4] * 0x5)))
	x1040 := (uint64(x958) * uint64((arg3[3] * 0x5)))
	x1041 := (uint64(x958) * uint64((arg3[2] * 0x5)))
	x1042 := (uint64(x957) * uint64((arg3[4] * 0x5)))
	x1043 := (uint64(x957) * uint64((arg3[3] * 0x5)))
	x1044 := (uint64(x956) * uint64((arg3[4] * 0x5)))
	x1045 := (uint64(x959) * uint64(arg3[0]))
	x1046 := (uint64(x958) * uint64(arg3[1]))
	x1047 := (uint64(x958) * uint64(arg3[0]))
	x1048 := (uint64(x957) * uint64(arg3[2]))
	x1049 := (uint64(x957) * uint64(arg3[1]))
	x1050 := (uint64(x957) * uint64(arg3[0]))
	x1051 := (uint64(x956) * uint64(arg3[3]))
	x1052 := (uint64(x956) * uint64(arg3[2]))
	x1053 := (uint64(x956) * uint64(arg3[1]))
	x1054 := (uint64(x956) * uint64(arg3[0]))
	x1055 := (uint64(x955) * uint64(arg3[4]))
	x1056 := (uint64(x955) * uint64(arg3[3]))
	x1057 := (uint64(x955) * uint64(arg3[2]))
	x1058 := (uint64(x955) * uint64(arg3[1]))
	x1059 := (uint64(x955) * uint64(arg3[0]))
	x1060 := (x1059 + (x1044 + (x1043 + (x1041 + x1038))))
	x1061 := uint32((x1060 >> 26))
	x1062 := (uint32(x1060) & 0x3ffffff)
	x1063 := (x1055 + (x1051 + (x1048 + (x1046 + x1045))))
	x1064 := (x1056 + (x1052 + (x1049 + (x1047 + x1035))))
	x1065 := (x1057 + (x1053 + (x1050 + (x1039 + x1036))))
	x1066 := (x1058 + (x1054 + (x1042 + (x1040 + x1037))))
	x1067 := (uint64(x1061) + x1066)
	x1068 := uint32((x1067 >> 26))
	x1069 := (uint32(x1067) & 0x3ffffff)
	x1070 := (uint64(x1068) + x1065)
	x1071 := uint32((x1070 >> 26))
	x1072 := (uint32(x1070) & 0x3ffffff)
	x1073 := (uint64(x1071) + x1064)
	x1074 := uint32((x1073 >> 26))
	x1075 := (uint32(x1073) & 0x3ffffff)
	x1076 := (uint64(x1074) + x1063)
	x1077 := uint32((x1076 >> 26))
	x1078 := (uint32(x1076) & 0x3ffffff)
	x1079 := (x1077 * 0x5)
	x1080 := (x1062 + x1079)
	x1081 := (x1080 >> 26)
	x1082 := (x1080 & 0x3ffffff)
	x1083 := (x1081 + x1069)
	x1084 := uint1((x1083 >> 26))
	x1085 := (x1083 & 0x3ffffff)
	x1086 := (uint32(x1084) + x1072)
	x1087 := (uint64(x984) * uint64((arg4[4] * 0x5)))
	x1088 := (uint64(x984) * uint64((arg4[3] * 0x5)))
	x1089 := (uint64(x984) * uint64((arg4[2] * 0x5)))
	x1090 := (uint64(x984) * uint64((arg4[1] * 0x5)))
	x1091 := (uint64(x983) * uint64((arg4[4] * 0x5)))
	x1092 := (uint64(x983) * uint64((arg4[3] * 0x5)))
	x1093 := (uint64(x983) * uint64((arg4[2] * 0x5)))
	x1094 := (uint64(x982) * uint64((arg4[4] * 0x5)))
	x1095 := (uint64(x982) * uint64((arg4[3] * 0x5)))
	x1096 := (uint64(x981) * uint64((arg4[4] * 0x5)))
	x1097 := (uint64(x984) * uint64(arg4[0]))
	x1098 := (uint64(x983) * uint64(arg4[1]))
	x1099 := (uint64(x983) * uint64(arg4[0]))
	x1100 := (uint64(x982) * uint64(arg4[2]))
	x1101 := (uint64(x982) * uint64(arg4[1]))
	x1102 := (uint64(x982) * uint64(arg4[0]))
	x1103 := (uint64(x981) * uint64(arg4[3]))
	x1104 := (uint64(x981) * uint64(arg4[2]))
	x1105 := (uint64(x981) * uint64(arg4[1]))
	x1106 := (uint64(x981) * uint64(arg4[0]))
	x1107 := (uint64(x980) * uint64(arg4[4]))
	x1108 := (uint64(x980) * uint64(arg4[3]))
	x1109 := (uint64(x980) * uint64(arg4[2]))
	x1110 := (uint64(x980) * uint64(arg4[1]))
	x1111 := (uint64(x980) * uint64(arg4[0]))
	x1112 := (x1111 + (x1096 + (x1095 + (x1093 + x1090))))
	x1113 := uint32((x1112 >> 26))
	x1114 := (uint32(x1112) & 0x3ffffff)
	x1115 := (x1107 + (x1103 + (x1100 + (x1098 + x1097))))
	x1116 := (x1108 + (x1104 + (x1101 + (x1099 + x1087))))
	x1117 := (x1109 + (x1105 + (x1102 + (x1091 + x1088))))
	x1118 := (x1110 + (x1106 + (x1094 + (x1092 + x1089))))
	x1119 := (uint64(x1113) + x1118)
	x1120 := uint32((x1119 >> 26))
	x1121 := (uint32(x1119) & 0x3ffffff)
	x1122 := (uint64(x1120) + x1117)
	x1123 := uint32((x1122 >> 26))
	x1124 := (uint32(x1122) & 0x3ffffff)
	x1125 := (uint64(x1123) + x1116)
	x1126 := uint32((x1125 >> 26))
	x1127 := (uint32(x1125) & 0x3ffffff)
	x1128 := (uint64(x1126) + x1115)
	x1129 := uint32((x1128 >> 26))
	x1130 := (uint32(x1128) & 0x3ffffff)
	x1131 := (x1129 * 0x5)
	x1132 := (x1114 + x1131)
	x1133 := (x1132 >> 26)
	x1134 := (x1132 & 0x3ffffff)
	x1135 := (x1133 + x1121)
	x1136 := uint1((x1135 >> 26))
	x1137 := (x1135 & 0x3ffffff)
	x1138 := (uint32(x1136) + x1124)
	x1139 := (uint64(x1009) * uint64((arg3[4] * 0x5)))
	x1140 := (uint64(x1009) * uint64((arg3[3] * 0x5)))
	x1141 := (uint64(x1009) * uint64((arg3[2] * 0x5)))
	x1142 := (uint64(x1009) * uint64((arg3[1] * 0x5)))
	x1143 := (uint64(x1008) * uint64((arg3[4] * 0x5)))
	x1144 := (uint64(x1008) * uint64((arg3[3] * 0x5)))
	x1145 := (uint64(x1008) * uint64((arg3[2] * 0x5)))
	x1146 := (uint64(x1007) * uint64((arg3[4] * 0x5)))
	x1147 := (uint64(x1007) * uint64((arg3[3] * 0x5)))
	x1148 := (uint64(x1006) * uint64((arg3[4] * 0x5)))
	x1149 := (uint64(x1009) * uint64(arg3[0]))
	x1150 := (uint64(x1008) * uint64(arg3[1]))
	x1151 := (uint64(x1008) * uint64(arg3[0]))
	x1152 := (uint64(x1007) * uint64(arg3[2]))
	x1153 := (uint64(x1007) * uint64(arg3[1]))
	x1154 := (uint64(x1007) * uint64(arg3[0]))
	x1155 := (uint64(x1006) * uint64(arg3[3]))
	x1156 := (uint64(x1006) * uint64(arg3[2]))
	x1157 := (uint64(x1006) * uint64(arg3[1]))
	x1158 := (uint64(x1006) * uint64(arg3[0]))
	x1159 := (uint64(x1005) * uint64(arg3[4]))
	x1160 := (uint64(x1005) * uint64(arg3[3]))
	x1161 := (uint64(x1005) * uint64(arg3[2]))
	x1162 := (uint64(x1005) * uint64(arg3[1]))
	x1163 := (uint64(x1005) * uint64(arg3[0]))
	x1164 := (x1163 + (x1148 + (x1147 + (x1145 + x1142))))
	x1165 := uint32((x1164 >> 26))
	x1166 := (uint32(x1164) & 0x3ffffff)
	x1167 := (x1159 + (x1155 + (x1152 + (x1150 + x1149))))
	x1168 := (x1160 + (x1156 + (x1153 + (x1151 + x1139))))
	x1169 := (x1161 + (x1157 + (x1154 + (x1143 + x1140))))
	x1170 := (x1162 + (x1158 + (x1146 + (x1144 + x1141))))
	x1171 := (uint64(x1165) + x1170)
	x1172 := uint32((x1171 >> 26))
	x1173 := (uint32(x1171) & 0x3ffffff)
	x1174 := (uint64(x1172) + x1169)
	x1175 := uint32((x1174 >> 26))
	x1176 := (uint32(x1174) & 0x3ffffff)
	x1177 := (uint64(x1175) + x1168)
	x1178 := uint32((x1177 >> 26))
	x1179 := (uint32(x1177) & 0x3ffffff)
	x1180 := (uint64(x1178) + x1167)
	x1181 := uint32((x1180 >> 26))
	x1182 := (uint32(x1180) & 0x3ffffff)
	x1183 := (x1181 * 0x5)
	x1184 := (x1166 + x1183)
	x1185 := (x1184 >> 26)
	x1186 := (x1184 & 0x3ffffff)
	x1187 := (x1185 + x1173)
	x1188 := uint1((x1187 >> 26))
	x1189 := (x1187 & 0x3ffffff)
	x1190 := (uint32(x1188) + x1176)
	x1191 := (uint64(x1034) * uint64((arg4[4] * 0x5)))
	x1192 := (uint64(x1034) * uint64((arg4[3] * 0x5)))
	x1193 := (uint64(x1034) * uint64((arg4[2] * 0x5)))
	x1194 := (uint64(x1034) * uint64((arg4[1] * 0x5)))
	x1195 := (uint64(x1033) * uint64((arg4[4] * 0x5)))
	x1196 := (uint64(x1033) * uint64((arg4[3] * 0x5)))
	x1197 := (uint64(x1033) * uint64((arg4[2] * 0x5)))
	x1198 := (uint64(x1032) * uint64((arg4[4] * 0x5)))
	x1199 := (uint64(x1032) * uint64((arg4[3] * 0x5)))
	x1200 := (uint64(x1031) * uint64((arg4[4] * 0x5)))
	x1201 := (uint64(x1034) * uint64(arg4[0]))
	x1202 := (uint64(x1033) * uint64(arg4[1]))
	x1203 := (uint64(x1033) * uint64(arg4[0]))
	x1204 := (uint64(x1032) * uint64(arg4[2]))
	x1205 := (uint64(x1032) * uint64(arg4[1]))
	x1206 := (uint64(x1032) * uint64(arg4[0]))
	x1207 := (uint64(x1031) * uint64(arg4[3]))
	x1208 := (uint64(x1031) * uint64(arg4[2]))
	x1209 := (uint64(x1031) * uint64(arg4[1]))
	x1210 := (uint64(x1031) * uint64(arg4[0]))
	x1211 := (uint64(x1030) * uint64(arg4[4]))
	x1212 := (uint64(x1030) * uint64(arg4[3]))
	x1213 := (uint64(x1030) * uint64(arg4[2]))
	x1214 := (uint64(x1030) * uint64(arg4[1]))
	x1215 := (uint64(x1030) * uint64(arg4[0]))
	x1216 := (x1215 + (x1200 + (x1199 + (x1197 + x1194))))
	x1217 := uint32((x1216 >> 26))
	x1218 := (uint32(x1216) & 0x3ffffff)
	x1219 := (x1211 + (x1207 + (x1204 + (x1202 + x1201))))
	x1220 := (x1212 + (x1208 + (x1205 + (x1203 + x1191))))
	x1221 := (x1213 + (x1209 + (x1206 + (x1195 + x1192))))
	x1222 := (x1214 + (x1210 + (x1198 + (x1196 + x1193))))
	x1223 := (uint64(x1217) + x1222)
	x1224 := uint32((x1223 >> 26))
	x1225 := (uint32(x1223) & 0x3ffffff)
	x1226 := (uint64(x1224) + x1221)
	x1227 := uint32((x1226 >> 26))
	x1228 := (uint32(x1226) & 0x3ffffff)
	x1229 := (uint64(x1227) + x1220)
	x1230 := uint32((x1229 >> 26))
	x1231 := (uint32(x1229) & 0x3ffffff)
	x1232 := (uint64(x1230) + x1219)
	x1233 := uint32((x1232 >> 26))
	x1234 := (uint32(x1232) & 0x3ffffff)
	x1235 := (x1233 * 0x5)
	x1236 := (x1218 + x1235)
	x1237 := (x1236 >> 26)
	x1238 := (x1236 & 0x3ffffff)
	x1239 := (x1237 + x1225)
	x1240 := uint1((x1239 >> 26))
	x1241 := (x1239 & 0x3ffffff)
	x1242 := (uint32(x1240) + x1228)
	x1243 := (x1082 + x1134)
	x1244 := (x1085 + x1137)
	x1245 := (x1086 + x1138)
	x1246 := (x1075 + x1127)
	x1247 := (x1078 + x1130)
	x1248 := uint1((x1243 >> 26))
	x1249 := (x1243 & 0x3ffffff)
	x1250 := (uint32(x1248) + x1244)
	x1251 := uint1((x1250 >> 26))
	x1252 := (x1250 & 0x3ffffff)
	x1253 := (uint32(x1251) + x1245)
	x1254 := (x1253 >> 26)
	x1255 := (x1253 & 0x3ffffff)
	x1256 := (x1254 + x1246)
	x1257 := (x1256 >> 26)
	x1258 := (x1256 & 0x3ffffff)
	x1259 := (x1257 + x1247)
	x1260 := (x1259 >> 26)
	x1261 := (x1259 & 0x3ffffff)
	x1262 := (x1260 * 0x5)
	x1263 := (x1249 + x1262)
	x1264 := uint1((x1263 >> 26))
	x1265 := (x1263 & 0x3ffffff)
	x1266 := (uint32(x1264) + x1252)
	x1267 := uint1((x1266 >> 26))
	x1268 := (x1266 & 0x3ffffff)
	x1269 := (uint32(x1267) + x1255)
	x1270 := (x1186 + x1238)
	x1271 := (x1189 + x1241)
	x1272 := (x1190 + x1242)
	x1273 := (x1179 + x1231)
	x1274 := (x1182 + x1234)
	x1275 := uint1((x1270 >> 26))
	x1276 := (x1270 & 0x3ffffff)
	x1277 := (uint32(x1275) + x1271)
	x1278 := uint1((x1277 >> 26))
	x1279 := (x1277 & 0x3ffffff)
	x1280 := (uint32(x1278) + x1272)
	x1281 := (x1280 >> 26)
	x1282 := (x1280 & 0x3ffffff)
	x1283 := (x1281 + x1273)
	x1284 := (x1283 >> 26)
	x1285 := (x1283 & 0x3ffffff)
	x1286 := (x1284 + x1274)
	x1287 := (x1286 >> 26)
	x1288 := (x1286 & 0x3ffffff)
	x1289 := (x1287 * 0x5)
	x1290 := (x1276 + x1289)
	x1291 := uint1((x1290 >> 26))
	x1292 := (x1290 & 0x3ffffff)
	x1293 := (uint32(x1291) + x1279)
	x1294 := uint1((x1293 >> 26))
	x1295 := (x1293 & 0x3ffffff)
	x1296 := (uint32(x1294) + x1282)
	out1[0] = x923
	out1[1] = x924
	out1[2] = x925
	out1[3] = x926
	out1[4] = x927
	out1[5] = x928
	out2[0] = x929
	out2[1] = x930
	out2[2] = x931
	out2[3] = x932
	out2[4] = x933
	out2[5] = x934
	out3[0] = x1265
	out3[1] = x1268
	out3[2] = x1269
	out3[3] = x1258
	out3[4] = x1261
	out4[0] = x1292
	out4[1] = x1295
	out4[2] = x1296
	out4[3] = x1285
	out4[4] = x1288
}

// CarryAdd adds two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 + eval arg2) mod m
//
func CarryAdd(out1 *TightFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := (arg1[0] + arg2[0])
	x2 := ((x1 >> 26) + (arg1[1] + arg2[1]))
	x3 := ((x2 >> 26) + (arg1[2] + arg2[2]))
	x4 := ((x3 >> 26) + (arg1[3] + arg2[3]))
	x5 := ((x4 >> 26) + (arg1[4] + arg2[4]))
	x6 := ((x1 & 0x3ffffff) + ((x5 >> 26) * 0x5))
	x7 := (uint32(uint1((x6 >> 26))) + (x2 & 0x3ffffff))
	x8 := (x6 & 0x3ffffff)
	x9 := (x7 & 0x3ffffff)
	x10 := (uint32(uint1((x7 >> 26))) + (x3 & 0x3ffffff))
	x11 := (x4 & 0x3ffffff)
	x12 := (x5 & 0x3ffffff)
	out1[0] = x8
	out1[1] = x9
	out1[2] = x10
	out1[3] = x11
	out1[4] = x12
}

// CarrySub subtracts two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 - eval arg2) mod m
//
func CarrySub(out1 *TightFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := ((0x7fffff6 + arg1[0]) - arg2[0])
	x2 := ((x1 >> 26) + ((0x7fffffe + arg1[1]) - arg2[1]))
	x3 := ((x2 >> 26) + ((0x7fffffe + arg1[2]) - arg2[2]))
	x4 := ((x3 >> 26) + ((0x7fffffe + arg1[3]) - arg2[3]))
	x5 := ((x4 >> 26) + ((0x7fffffe + arg1[4]) - arg2[4]))
	x6 := ((x1 & 0x3ffffff) + ((x5 >> 26) * 0x5))
	x7 := (uint32(uint1((x6 >> 26))) + (x2 & 0x3ffffff))
	x8 := (x6 & 0x3ffffff)
	x9 := (x7 & 0x3ffffff)
	x10 := (uint32(uint1((x7 >> 26))) + (x3 & 0x3ffffff))
	x11 := (x4 & 0x3ffffff)
	x12 := (x5 & 0x3ffffff)
	out1[0] = x8
	out1[1] = x9
	out1[2] = x10
	out1[3] = x11
	out1[4] = x12
}

// CarryOpp negates a field element.
//
// Postconditions:
//   eval out1 mod m = -eval arg1 mod m
//
func CarryOpp(out1 *TightFieldElement, arg1 *TightFieldElement) {
	x1 := (0x7fffff6 - arg1[0])
	x2 := (uint32(uint1((x1 >> 26))) + (0x7fffffe - arg1[1]))
	x3 := (uint32(uint1((x2 >> 26))) + (0x7fffffe - arg1[2]))
	x4 := (uint32(uint1((x3 >> 26))) + (0x7fffffe - arg1[3]))
	x5 := (uint32(uint1((x4 >> 26))) + (0x7fffffe - arg1[4]))
	x6 := ((x1 & 0x3ffffff) + (uint32(uint1((x5 >> 26))) * 0x5))
	x7 := (uint32(uint1((x6 >> 26))) + (x2 & 0x3ffffff))
	x8 := (x6 & 0x3ffffff)
	x9 := (x7 & 0x3ffffff)
	x10 := (uint32(uint1((x7 >> 26))) + (x3 & 0x3ffffff))
	x11 := (x4 & 0x3ffffff)
	x12 := (x5 & 0x3ffffff)
	out1[0] = x8
	out1[1] = x9
	out1[2] = x10
	out1[3] = x11
	out1[4] = x12
}
