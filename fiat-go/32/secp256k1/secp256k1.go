// Code generated by Fiat Cryptography. DO NOT EDIT.
//
// Autogenerated: 'src/ExtractionOCaml/word_by_word_montgomery' --lang Go --relax-primitive-carry-to-bitwidth 32,64 --cmovznz-by-mul --internal-static --package-case flatcase --public-function-case UpperCamelCase --private-function-case camelCase --public-type-case UpperCamelCase --private-type-case camelCase --no-prefix-fiat --doc-newline-in-typedef-bounds --doc-prepend-header 'Code generated by Fiat Cryptography. DO NOT EDIT.' --doc-text-before-function-name '' --doc-text-before-type-name '' --package-name secp256k1 '' 32 '2^256 - 2^32 - 977' mul square add sub opp from_montgomery to_montgomery nonzero selectznz to_bytes from_bytes one msat sat_from_bytes divstep divstep_precomp inner_loop inner_loop_hd update_fg update_vr jumpdivstep_precomp jumpdivstep_precomp_hd
//
// curve description (via package name): secp256k1
//
// machine_wordsize = 32 (from "32")
//
// requested operations: mul, square, add, sub, opp, from_montgomery, to_montgomery, nonzero, selectznz, to_bytes, from_bytes, one, msat, sat_from_bytes, divstep, divstep_precomp, inner_loop, inner_loop_hd, update_fg, update_vr, jumpdivstep_precomp, jumpdivstep_precomp_hd
//
// m = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f (from "2^256 - 2^32 - 977")
//
//
//
// NOTE: In addition to the bounds specified above each function, all
//
//   functions synthesized for this Montgomery arithmetic require the
//
//   input to be strictly less than the prime modulus (m), and also
//
//   require the input to be in the unique saturated representation.
//
//   All functions also ensure that these two properties are true of
//
//   return values.
//
//
//
// Computed values:
//
//   eval z = z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248)
//
//   twos_complement_eval z = if (z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)) & (2^256-1) < 2^255 then (z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)) & (2^256-1) else ((z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)) & (2^256-1)) - 2^256
package secp256k1

import "math/bits"

type uint1 uint64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927
type int1 int64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927

// MontgomeryDomainFieldElement is a field element in the Montgomery domain.
//
// Bounds:
//
//   [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
type MontgomeryDomainFieldElement [8]uint32

// NonMontgomeryDomainFieldElement is a field element NOT in the Montgomery domain.
//
// Bounds:
//
//   [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
type NonMontgomeryDomainFieldElement [8]uint32

// cmovznzU32 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0xffffffff]
//   arg3: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func cmovznzU32(out1 *uint32, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := (uint32(arg1) * 0xffffffff)
	x2 := ((x1 & arg3) | ((^x1) & arg2))
	*out1 = x2
}

// cmovznzU1 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1]
//   arg3: [0x0 ~> 0x1]
// Output Bounds:
//   out1: [0x0 ~> 0x1]
func cmovznzU1(out1 *uint1, arg1 uint1, arg2 uint1, arg3 uint1) {
	x1 := ((arg1 & arg3) | ((^arg1) & arg2))
	*out1 = x1
}

// Mul multiplies two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Mul(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[7]
	x8 := arg1[0]
	var x9 uint32
	var x10 uint32
	x10, x9 = bits.Mul32(x8, arg2[7])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x8, arg2[6])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x8, arg2[5])
	var x15 uint32
	var x16 uint32
	x16, x15 = bits.Mul32(x8, arg2[4])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x8, arg2[3])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x8, arg2[2])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x8, arg2[1])
	var x23 uint32
	var x24 uint32
	x24, x23 = bits.Mul32(x8, arg2[0])
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Add32(x24, x21, uint32(0x0))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Add32(x22, x19, uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Add32(x20, x17, uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Add32(x18, x15, uint32(uint1(x30)))
	var x33 uint32
	var x34 uint32
	x33, x34 = bits.Add32(x16, x13, uint32(uint1(x32)))
	var x35 uint32
	var x36 uint32
	x35, x36 = bits.Add32(x14, x11, uint32(uint1(x34)))
	var x37 uint32
	var x38 uint32
	x37, x38 = bits.Add32(x12, x9, uint32(uint1(x36)))
	x39 := (uint32(uint1(x38)) + x10)
	var x40 uint32
	_, x40 = bits.Mul32(x23, 0xd2253531)
	var x42 uint32
	var x43 uint32
	x43, x42 = bits.Mul32(x40, 0xffffffff)
	var x44 uint32
	var x45 uint32
	x45, x44 = bits.Mul32(x40, 0xffffffff)
	var x46 uint32
	var x47 uint32
	x47, x46 = bits.Mul32(x40, 0xffffffff)
	var x48 uint32
	var x49 uint32
	x49, x48 = bits.Mul32(x40, 0xffffffff)
	var x50 uint32
	var x51 uint32
	x51, x50 = bits.Mul32(x40, 0xffffffff)
	var x52 uint32
	var x53 uint32
	x53, x52 = bits.Mul32(x40, 0xffffffff)
	var x54 uint32
	var x55 uint32
	x55, x54 = bits.Mul32(x40, 0xfffffffe)
	var x56 uint32
	var x57 uint32
	x57, x56 = bits.Mul32(x40, 0xfffffc2f)
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x57, x54, uint32(0x0))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x55, x52, uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x53, x50, uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x51, x48, uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x49, x46, uint32(uint1(x65)))
	var x68 uint32
	var x69 uint32
	x68, x69 = bits.Add32(x47, x44, uint32(uint1(x67)))
	var x70 uint32
	var x71 uint32
	x70, x71 = bits.Add32(x45, x42, uint32(uint1(x69)))
	x72 := (uint32(uint1(x71)) + x43)
	var x74 uint32
	_, x74 = bits.Add32(x23, x56, uint32(0x0))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Add32(x25, x58, uint32(uint1(x74)))
	var x77 uint32
	var x78 uint32
	x77, x78 = bits.Add32(x27, x60, uint32(uint1(x76)))
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Add32(x29, x62, uint32(uint1(x78)))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Add32(x31, x64, uint32(uint1(x80)))
	var x83 uint32
	var x84 uint32
	x83, x84 = bits.Add32(x33, x66, uint32(uint1(x82)))
	var x85 uint32
	var x86 uint32
	x85, x86 = bits.Add32(x35, x68, uint32(uint1(x84)))
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Add32(x37, x70, uint32(uint1(x86)))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Add32(x39, x72, uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x92, x91 = bits.Mul32(x1, arg2[7])
	var x93 uint32
	var x94 uint32
	x94, x93 = bits.Mul32(x1, arg2[6])
	var x95 uint32
	var x96 uint32
	x96, x95 = bits.Mul32(x1, arg2[5])
	var x97 uint32
	var x98 uint32
	x98, x97 = bits.Mul32(x1, arg2[4])
	var x99 uint32
	var x100 uint32
	x100, x99 = bits.Mul32(x1, arg2[3])
	var x101 uint32
	var x102 uint32
	x102, x101 = bits.Mul32(x1, arg2[2])
	var x103 uint32
	var x104 uint32
	x104, x103 = bits.Mul32(x1, arg2[1])
	var x105 uint32
	var x106 uint32
	x106, x105 = bits.Mul32(x1, arg2[0])
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Add32(x106, x103, uint32(0x0))
	var x109 uint32
	var x110 uint32
	x109, x110 = bits.Add32(x104, x101, uint32(uint1(x108)))
	var x111 uint32
	var x112 uint32
	x111, x112 = bits.Add32(x102, x99, uint32(uint1(x110)))
	var x113 uint32
	var x114 uint32
	x113, x114 = bits.Add32(x100, x97, uint32(uint1(x112)))
	var x115 uint32
	var x116 uint32
	x115, x116 = bits.Add32(x98, x95, uint32(uint1(x114)))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x96, x93, uint32(uint1(x116)))
	var x119 uint32
	var x120 uint32
	x119, x120 = bits.Add32(x94, x91, uint32(uint1(x118)))
	x121 := (uint32(uint1(x120)) + x92)
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x75, x105, uint32(0x0))
	var x124 uint32
	var x125 uint32
	x124, x125 = bits.Add32(x77, x107, uint32(uint1(x123)))
	var x126 uint32
	var x127 uint32
	x126, x127 = bits.Add32(x79, x109, uint32(uint1(x125)))
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x81, x111, uint32(uint1(x127)))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x83, x113, uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x85, x115, uint32(uint1(x131)))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x87, x117, uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x89, x119, uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(uint32(uint1(x90)), x121, uint32(uint1(x137)))
	var x140 uint32
	_, x140 = bits.Mul32(x122, 0xd2253531)
	var x142 uint32
	var x143 uint32
	x143, x142 = bits.Mul32(x140, 0xffffffff)
	var x144 uint32
	var x145 uint32
	x145, x144 = bits.Mul32(x140, 0xffffffff)
	var x146 uint32
	var x147 uint32
	x147, x146 = bits.Mul32(x140, 0xffffffff)
	var x148 uint32
	var x149 uint32
	x149, x148 = bits.Mul32(x140, 0xffffffff)
	var x150 uint32
	var x151 uint32
	x151, x150 = bits.Mul32(x140, 0xffffffff)
	var x152 uint32
	var x153 uint32
	x153, x152 = bits.Mul32(x140, 0xffffffff)
	var x154 uint32
	var x155 uint32
	x155, x154 = bits.Mul32(x140, 0xfffffffe)
	var x156 uint32
	var x157 uint32
	x157, x156 = bits.Mul32(x140, 0xfffffc2f)
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x157, x154, uint32(0x0))
	var x160 uint32
	var x161 uint32
	x160, x161 = bits.Add32(x155, x152, uint32(uint1(x159)))
	var x162 uint32
	var x163 uint32
	x162, x163 = bits.Add32(x153, x150, uint32(uint1(x161)))
	var x164 uint32
	var x165 uint32
	x164, x165 = bits.Add32(x151, x148, uint32(uint1(x163)))
	var x166 uint32
	var x167 uint32
	x166, x167 = bits.Add32(x149, x146, uint32(uint1(x165)))
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x147, x144, uint32(uint1(x167)))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x145, x142, uint32(uint1(x169)))
	x172 := (uint32(uint1(x171)) + x143)
	var x174 uint32
	_, x174 = bits.Add32(x122, x156, uint32(0x0))
	var x175 uint32
	var x176 uint32
	x175, x176 = bits.Add32(x124, x158, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x126, x160, uint32(uint1(x176)))
	var x179 uint32
	var x180 uint32
	x179, x180 = bits.Add32(x128, x162, uint32(uint1(x178)))
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x130, x164, uint32(uint1(x180)))
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x132, x166, uint32(uint1(x182)))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x134, x168, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x136, x170, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x138, x172, uint32(uint1(x188)))
	x191 := (uint32(uint1(x190)) + uint32(uint1(x139)))
	var x192 uint32
	var x193 uint32
	x193, x192 = bits.Mul32(x2, arg2[7])
	var x194 uint32
	var x195 uint32
	x195, x194 = bits.Mul32(x2, arg2[6])
	var x196 uint32
	var x197 uint32
	x197, x196 = bits.Mul32(x2, arg2[5])
	var x198 uint32
	var x199 uint32
	x199, x198 = bits.Mul32(x2, arg2[4])
	var x200 uint32
	var x201 uint32
	x201, x200 = bits.Mul32(x2, arg2[3])
	var x202 uint32
	var x203 uint32
	x203, x202 = bits.Mul32(x2, arg2[2])
	var x204 uint32
	var x205 uint32
	x205, x204 = bits.Mul32(x2, arg2[1])
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x2, arg2[0])
	var x208 uint32
	var x209 uint32
	x208, x209 = bits.Add32(x207, x204, uint32(0x0))
	var x210 uint32
	var x211 uint32
	x210, x211 = bits.Add32(x205, x202, uint32(uint1(x209)))
	var x212 uint32
	var x213 uint32
	x212, x213 = bits.Add32(x203, x200, uint32(uint1(x211)))
	var x214 uint32
	var x215 uint32
	x214, x215 = bits.Add32(x201, x198, uint32(uint1(x213)))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x199, x196, uint32(uint1(x215)))
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x197, x194, uint32(uint1(x217)))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x195, x192, uint32(uint1(x219)))
	x222 := (uint32(uint1(x221)) + x193)
	var x223 uint32
	var x224 uint32
	x223, x224 = bits.Add32(x175, x206, uint32(0x0))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x177, x208, uint32(uint1(x224)))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x179, x210, uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x181, x212, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x183, x214, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x185, x216, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x187, x218, uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x189, x220, uint32(uint1(x236)))
	var x239 uint32
	var x240 uint32
	x239, x240 = bits.Add32(x191, x222, uint32(uint1(x238)))
	var x241 uint32
	_, x241 = bits.Mul32(x223, 0xd2253531)
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x241, 0xffffffff)
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x241, 0xffffffff)
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x241, 0xffffffff)
	var x249 uint32
	var x250 uint32
	x250, x249 = bits.Mul32(x241, 0xffffffff)
	var x251 uint32
	var x252 uint32
	x252, x251 = bits.Mul32(x241, 0xffffffff)
	var x253 uint32
	var x254 uint32
	x254, x253 = bits.Mul32(x241, 0xffffffff)
	var x255 uint32
	var x256 uint32
	x256, x255 = bits.Mul32(x241, 0xfffffffe)
	var x257 uint32
	var x258 uint32
	x258, x257 = bits.Mul32(x241, 0xfffffc2f)
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x258, x255, uint32(0x0))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x256, x253, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x254, x251, uint32(uint1(x262)))
	var x265 uint32
	var x266 uint32
	x265, x266 = bits.Add32(x252, x249, uint32(uint1(x264)))
	var x267 uint32
	var x268 uint32
	x267, x268 = bits.Add32(x250, x247, uint32(uint1(x266)))
	var x269 uint32
	var x270 uint32
	x269, x270 = bits.Add32(x248, x245, uint32(uint1(x268)))
	var x271 uint32
	var x272 uint32
	x271, x272 = bits.Add32(x246, x243, uint32(uint1(x270)))
	x273 := (uint32(uint1(x272)) + x244)
	var x275 uint32
	_, x275 = bits.Add32(x223, x257, uint32(0x0))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x225, x259, uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x227, x261, uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x229, x263, uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x282, x283 = bits.Add32(x231, x265, uint32(uint1(x281)))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x233, x267, uint32(uint1(x283)))
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Add32(x235, x269, uint32(uint1(x285)))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Add32(x237, x271, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x239, x273, uint32(uint1(x289)))
	x292 := (uint32(uint1(x291)) + uint32(uint1(x240)))
	var x293 uint32
	var x294 uint32
	x294, x293 = bits.Mul32(x3, arg2[7])
	var x295 uint32
	var x296 uint32
	x296, x295 = bits.Mul32(x3, arg2[6])
	var x297 uint32
	var x298 uint32
	x298, x297 = bits.Mul32(x3, arg2[5])
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x3, arg2[4])
	var x301 uint32
	var x302 uint32
	x302, x301 = bits.Mul32(x3, arg2[3])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x3, arg2[2])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x3, arg2[1])
	var x307 uint32
	var x308 uint32
	x308, x307 = bits.Mul32(x3, arg2[0])
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x308, x305, uint32(0x0))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x306, x303, uint32(uint1(x310)))
	var x313 uint32
	var x314 uint32
	x313, x314 = bits.Add32(x304, x301, uint32(uint1(x312)))
	var x315 uint32
	var x316 uint32
	x315, x316 = bits.Add32(x302, x299, uint32(uint1(x314)))
	var x317 uint32
	var x318 uint32
	x317, x318 = bits.Add32(x300, x297, uint32(uint1(x316)))
	var x319 uint32
	var x320 uint32
	x319, x320 = bits.Add32(x298, x295, uint32(uint1(x318)))
	var x321 uint32
	var x322 uint32
	x321, x322 = bits.Add32(x296, x293, uint32(uint1(x320)))
	x323 := (uint32(uint1(x322)) + x294)
	var x324 uint32
	var x325 uint32
	x324, x325 = bits.Add32(x276, x307, uint32(0x0))
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x278, x309, uint32(uint1(x325)))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x280, x311, uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x282, x313, uint32(uint1(x329)))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x284, x315, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x286, x317, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x288, x319, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x290, x321, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x292, x323, uint32(uint1(x339)))
	var x342 uint32
	_, x342 = bits.Mul32(x324, 0xd2253531)
	var x344 uint32
	var x345 uint32
	x345, x344 = bits.Mul32(x342, 0xffffffff)
	var x346 uint32
	var x347 uint32
	x347, x346 = bits.Mul32(x342, 0xffffffff)
	var x348 uint32
	var x349 uint32
	x349, x348 = bits.Mul32(x342, 0xffffffff)
	var x350 uint32
	var x351 uint32
	x351, x350 = bits.Mul32(x342, 0xffffffff)
	var x352 uint32
	var x353 uint32
	x353, x352 = bits.Mul32(x342, 0xffffffff)
	var x354 uint32
	var x355 uint32
	x355, x354 = bits.Mul32(x342, 0xffffffff)
	var x356 uint32
	var x357 uint32
	x357, x356 = bits.Mul32(x342, 0xfffffffe)
	var x358 uint32
	var x359 uint32
	x359, x358 = bits.Mul32(x342, 0xfffffc2f)
	var x360 uint32
	var x361 uint32
	x360, x361 = bits.Add32(x359, x356, uint32(0x0))
	var x362 uint32
	var x363 uint32
	x362, x363 = bits.Add32(x357, x354, uint32(uint1(x361)))
	var x364 uint32
	var x365 uint32
	x364, x365 = bits.Add32(x355, x352, uint32(uint1(x363)))
	var x366 uint32
	var x367 uint32
	x366, x367 = bits.Add32(x353, x350, uint32(uint1(x365)))
	var x368 uint32
	var x369 uint32
	x368, x369 = bits.Add32(x351, x348, uint32(uint1(x367)))
	var x370 uint32
	var x371 uint32
	x370, x371 = bits.Add32(x349, x346, uint32(uint1(x369)))
	var x372 uint32
	var x373 uint32
	x372, x373 = bits.Add32(x347, x344, uint32(uint1(x371)))
	x374 := (uint32(uint1(x373)) + x345)
	var x376 uint32
	_, x376 = bits.Add32(x324, x358, uint32(0x0))
	var x377 uint32
	var x378 uint32
	x377, x378 = bits.Add32(x326, x360, uint32(uint1(x376)))
	var x379 uint32
	var x380 uint32
	x379, x380 = bits.Add32(x328, x362, uint32(uint1(x378)))
	var x381 uint32
	var x382 uint32
	x381, x382 = bits.Add32(x330, x364, uint32(uint1(x380)))
	var x383 uint32
	var x384 uint32
	x383, x384 = bits.Add32(x332, x366, uint32(uint1(x382)))
	var x385 uint32
	var x386 uint32
	x385, x386 = bits.Add32(x334, x368, uint32(uint1(x384)))
	var x387 uint32
	var x388 uint32
	x387, x388 = bits.Add32(x336, x370, uint32(uint1(x386)))
	var x389 uint32
	var x390 uint32
	x389, x390 = bits.Add32(x338, x372, uint32(uint1(x388)))
	var x391 uint32
	var x392 uint32
	x391, x392 = bits.Add32(x340, x374, uint32(uint1(x390)))
	x393 := (uint32(uint1(x392)) + uint32(uint1(x341)))
	var x394 uint32
	var x395 uint32
	x395, x394 = bits.Mul32(x4, arg2[7])
	var x396 uint32
	var x397 uint32
	x397, x396 = bits.Mul32(x4, arg2[6])
	var x398 uint32
	var x399 uint32
	x399, x398 = bits.Mul32(x4, arg2[5])
	var x400 uint32
	var x401 uint32
	x401, x400 = bits.Mul32(x4, arg2[4])
	var x402 uint32
	var x403 uint32
	x403, x402 = bits.Mul32(x4, arg2[3])
	var x404 uint32
	var x405 uint32
	x405, x404 = bits.Mul32(x4, arg2[2])
	var x406 uint32
	var x407 uint32
	x407, x406 = bits.Mul32(x4, arg2[1])
	var x408 uint32
	var x409 uint32
	x409, x408 = bits.Mul32(x4, arg2[0])
	var x410 uint32
	var x411 uint32
	x410, x411 = bits.Add32(x409, x406, uint32(0x0))
	var x412 uint32
	var x413 uint32
	x412, x413 = bits.Add32(x407, x404, uint32(uint1(x411)))
	var x414 uint32
	var x415 uint32
	x414, x415 = bits.Add32(x405, x402, uint32(uint1(x413)))
	var x416 uint32
	var x417 uint32
	x416, x417 = bits.Add32(x403, x400, uint32(uint1(x415)))
	var x418 uint32
	var x419 uint32
	x418, x419 = bits.Add32(x401, x398, uint32(uint1(x417)))
	var x420 uint32
	var x421 uint32
	x420, x421 = bits.Add32(x399, x396, uint32(uint1(x419)))
	var x422 uint32
	var x423 uint32
	x422, x423 = bits.Add32(x397, x394, uint32(uint1(x421)))
	x424 := (uint32(uint1(x423)) + x395)
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x377, x408, uint32(0x0))
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x379, x410, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x381, x412, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x383, x414, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x385, x416, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x387, x418, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x389, x420, uint32(uint1(x436)))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x391, x422, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x393, x424, uint32(uint1(x440)))
	var x443 uint32
	_, x443 = bits.Mul32(x425, 0xd2253531)
	var x445 uint32
	var x446 uint32
	x446, x445 = bits.Mul32(x443, 0xffffffff)
	var x447 uint32
	var x448 uint32
	x448, x447 = bits.Mul32(x443, 0xffffffff)
	var x449 uint32
	var x450 uint32
	x450, x449 = bits.Mul32(x443, 0xffffffff)
	var x451 uint32
	var x452 uint32
	x452, x451 = bits.Mul32(x443, 0xffffffff)
	var x453 uint32
	var x454 uint32
	x454, x453 = bits.Mul32(x443, 0xffffffff)
	var x455 uint32
	var x456 uint32
	x456, x455 = bits.Mul32(x443, 0xffffffff)
	var x457 uint32
	var x458 uint32
	x458, x457 = bits.Mul32(x443, 0xfffffffe)
	var x459 uint32
	var x460 uint32
	x460, x459 = bits.Mul32(x443, 0xfffffc2f)
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x460, x457, uint32(0x0))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x458, x455, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x456, x453, uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x454, x451, uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x452, x449, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x450, x447, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x448, x445, uint32(uint1(x472)))
	x475 := (uint32(uint1(x474)) + x446)
	var x477 uint32
	_, x477 = bits.Add32(x425, x459, uint32(0x0))
	var x478 uint32
	var x479 uint32
	x478, x479 = bits.Add32(x427, x461, uint32(uint1(x477)))
	var x480 uint32
	var x481 uint32
	x480, x481 = bits.Add32(x429, x463, uint32(uint1(x479)))
	var x482 uint32
	var x483 uint32
	x482, x483 = bits.Add32(x431, x465, uint32(uint1(x481)))
	var x484 uint32
	var x485 uint32
	x484, x485 = bits.Add32(x433, x467, uint32(uint1(x483)))
	var x486 uint32
	var x487 uint32
	x486, x487 = bits.Add32(x435, x469, uint32(uint1(x485)))
	var x488 uint32
	var x489 uint32
	x488, x489 = bits.Add32(x437, x471, uint32(uint1(x487)))
	var x490 uint32
	var x491 uint32
	x490, x491 = bits.Add32(x439, x473, uint32(uint1(x489)))
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x441, x475, uint32(uint1(x491)))
	x494 := (uint32(uint1(x493)) + uint32(uint1(x442)))
	var x495 uint32
	var x496 uint32
	x496, x495 = bits.Mul32(x5, arg2[7])
	var x497 uint32
	var x498 uint32
	x498, x497 = bits.Mul32(x5, arg2[6])
	var x499 uint32
	var x500 uint32
	x500, x499 = bits.Mul32(x5, arg2[5])
	var x501 uint32
	var x502 uint32
	x502, x501 = bits.Mul32(x5, arg2[4])
	var x503 uint32
	var x504 uint32
	x504, x503 = bits.Mul32(x5, arg2[3])
	var x505 uint32
	var x506 uint32
	x506, x505 = bits.Mul32(x5, arg2[2])
	var x507 uint32
	var x508 uint32
	x508, x507 = bits.Mul32(x5, arg2[1])
	var x509 uint32
	var x510 uint32
	x510, x509 = bits.Mul32(x5, arg2[0])
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x510, x507, uint32(0x0))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x508, x505, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x506, x503, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x504, x501, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x502, x499, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x500, x497, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x498, x495, uint32(uint1(x522)))
	x525 := (uint32(uint1(x524)) + x496)
	var x526 uint32
	var x527 uint32
	x526, x527 = bits.Add32(x478, x509, uint32(0x0))
	var x528 uint32
	var x529 uint32
	x528, x529 = bits.Add32(x480, x511, uint32(uint1(x527)))
	var x530 uint32
	var x531 uint32
	x530, x531 = bits.Add32(x482, x513, uint32(uint1(x529)))
	var x532 uint32
	var x533 uint32
	x532, x533 = bits.Add32(x484, x515, uint32(uint1(x531)))
	var x534 uint32
	var x535 uint32
	x534, x535 = bits.Add32(x486, x517, uint32(uint1(x533)))
	var x536 uint32
	var x537 uint32
	x536, x537 = bits.Add32(x488, x519, uint32(uint1(x535)))
	var x538 uint32
	var x539 uint32
	x538, x539 = bits.Add32(x490, x521, uint32(uint1(x537)))
	var x540 uint32
	var x541 uint32
	x540, x541 = bits.Add32(x492, x523, uint32(uint1(x539)))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Add32(x494, x525, uint32(uint1(x541)))
	var x544 uint32
	_, x544 = bits.Mul32(x526, 0xd2253531)
	var x546 uint32
	var x547 uint32
	x547, x546 = bits.Mul32(x544, 0xffffffff)
	var x548 uint32
	var x549 uint32
	x549, x548 = bits.Mul32(x544, 0xffffffff)
	var x550 uint32
	var x551 uint32
	x551, x550 = bits.Mul32(x544, 0xffffffff)
	var x552 uint32
	var x553 uint32
	x553, x552 = bits.Mul32(x544, 0xffffffff)
	var x554 uint32
	var x555 uint32
	x555, x554 = bits.Mul32(x544, 0xffffffff)
	var x556 uint32
	var x557 uint32
	x557, x556 = bits.Mul32(x544, 0xffffffff)
	var x558 uint32
	var x559 uint32
	x559, x558 = bits.Mul32(x544, 0xfffffffe)
	var x560 uint32
	var x561 uint32
	x561, x560 = bits.Mul32(x544, 0xfffffc2f)
	var x562 uint32
	var x563 uint32
	x562, x563 = bits.Add32(x561, x558, uint32(0x0))
	var x564 uint32
	var x565 uint32
	x564, x565 = bits.Add32(x559, x556, uint32(uint1(x563)))
	var x566 uint32
	var x567 uint32
	x566, x567 = bits.Add32(x557, x554, uint32(uint1(x565)))
	var x568 uint32
	var x569 uint32
	x568, x569 = bits.Add32(x555, x552, uint32(uint1(x567)))
	var x570 uint32
	var x571 uint32
	x570, x571 = bits.Add32(x553, x550, uint32(uint1(x569)))
	var x572 uint32
	var x573 uint32
	x572, x573 = bits.Add32(x551, x548, uint32(uint1(x571)))
	var x574 uint32
	var x575 uint32
	x574, x575 = bits.Add32(x549, x546, uint32(uint1(x573)))
	x576 := (uint32(uint1(x575)) + x547)
	var x578 uint32
	_, x578 = bits.Add32(x526, x560, uint32(0x0))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x528, x562, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x530, x564, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x532, x566, uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x534, x568, uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x536, x570, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x538, x572, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x540, x574, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x542, x576, uint32(uint1(x592)))
	x595 := (uint32(uint1(x594)) + uint32(uint1(x543)))
	var x596 uint32
	var x597 uint32
	x597, x596 = bits.Mul32(x6, arg2[7])
	var x598 uint32
	var x599 uint32
	x599, x598 = bits.Mul32(x6, arg2[6])
	var x600 uint32
	var x601 uint32
	x601, x600 = bits.Mul32(x6, arg2[5])
	var x602 uint32
	var x603 uint32
	x603, x602 = bits.Mul32(x6, arg2[4])
	var x604 uint32
	var x605 uint32
	x605, x604 = bits.Mul32(x6, arg2[3])
	var x606 uint32
	var x607 uint32
	x607, x606 = bits.Mul32(x6, arg2[2])
	var x608 uint32
	var x609 uint32
	x609, x608 = bits.Mul32(x6, arg2[1])
	var x610 uint32
	var x611 uint32
	x611, x610 = bits.Mul32(x6, arg2[0])
	var x612 uint32
	var x613 uint32
	x612, x613 = bits.Add32(x611, x608, uint32(0x0))
	var x614 uint32
	var x615 uint32
	x614, x615 = bits.Add32(x609, x606, uint32(uint1(x613)))
	var x616 uint32
	var x617 uint32
	x616, x617 = bits.Add32(x607, x604, uint32(uint1(x615)))
	var x618 uint32
	var x619 uint32
	x618, x619 = bits.Add32(x605, x602, uint32(uint1(x617)))
	var x620 uint32
	var x621 uint32
	x620, x621 = bits.Add32(x603, x600, uint32(uint1(x619)))
	var x622 uint32
	var x623 uint32
	x622, x623 = bits.Add32(x601, x598, uint32(uint1(x621)))
	var x624 uint32
	var x625 uint32
	x624, x625 = bits.Add32(x599, x596, uint32(uint1(x623)))
	x626 := (uint32(uint1(x625)) + x597)
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x579, x610, uint32(0x0))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x581, x612, uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x583, x614, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x585, x616, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x587, x618, uint32(uint1(x634)))
	var x637 uint32
	var x638 uint32
	x637, x638 = bits.Add32(x589, x620, uint32(uint1(x636)))
	var x639 uint32
	var x640 uint32
	x639, x640 = bits.Add32(x591, x622, uint32(uint1(x638)))
	var x641 uint32
	var x642 uint32
	x641, x642 = bits.Add32(x593, x624, uint32(uint1(x640)))
	var x643 uint32
	var x644 uint32
	x643, x644 = bits.Add32(x595, x626, uint32(uint1(x642)))
	var x645 uint32
	_, x645 = bits.Mul32(x627, 0xd2253531)
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x645, 0xffffffff)
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x645, 0xffffffff)
	var x651 uint32
	var x652 uint32
	x652, x651 = bits.Mul32(x645, 0xffffffff)
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x645, 0xffffffff)
	var x655 uint32
	var x656 uint32
	x656, x655 = bits.Mul32(x645, 0xffffffff)
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32(x645, 0xffffffff)
	var x659 uint32
	var x660 uint32
	x660, x659 = bits.Mul32(x645, 0xfffffffe)
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x645, 0xfffffc2f)
	var x663 uint32
	var x664 uint32
	x663, x664 = bits.Add32(x662, x659, uint32(0x0))
	var x665 uint32
	var x666 uint32
	x665, x666 = bits.Add32(x660, x657, uint32(uint1(x664)))
	var x667 uint32
	var x668 uint32
	x667, x668 = bits.Add32(x658, x655, uint32(uint1(x666)))
	var x669 uint32
	var x670 uint32
	x669, x670 = bits.Add32(x656, x653, uint32(uint1(x668)))
	var x671 uint32
	var x672 uint32
	x671, x672 = bits.Add32(x654, x651, uint32(uint1(x670)))
	var x673 uint32
	var x674 uint32
	x673, x674 = bits.Add32(x652, x649, uint32(uint1(x672)))
	var x675 uint32
	var x676 uint32
	x675, x676 = bits.Add32(x650, x647, uint32(uint1(x674)))
	x677 := (uint32(uint1(x676)) + x648)
	var x679 uint32
	_, x679 = bits.Add32(x627, x661, uint32(0x0))
	var x680 uint32
	var x681 uint32
	x680, x681 = bits.Add32(x629, x663, uint32(uint1(x679)))
	var x682 uint32
	var x683 uint32
	x682, x683 = bits.Add32(x631, x665, uint32(uint1(x681)))
	var x684 uint32
	var x685 uint32
	x684, x685 = bits.Add32(x633, x667, uint32(uint1(x683)))
	var x686 uint32
	var x687 uint32
	x686, x687 = bits.Add32(x635, x669, uint32(uint1(x685)))
	var x688 uint32
	var x689 uint32
	x688, x689 = bits.Add32(x637, x671, uint32(uint1(x687)))
	var x690 uint32
	var x691 uint32
	x690, x691 = bits.Add32(x639, x673, uint32(uint1(x689)))
	var x692 uint32
	var x693 uint32
	x692, x693 = bits.Add32(x641, x675, uint32(uint1(x691)))
	var x694 uint32
	var x695 uint32
	x694, x695 = bits.Add32(x643, x677, uint32(uint1(x693)))
	x696 := (uint32(uint1(x695)) + uint32(uint1(x644)))
	var x697 uint32
	var x698 uint32
	x698, x697 = bits.Mul32(x7, arg2[7])
	var x699 uint32
	var x700 uint32
	x700, x699 = bits.Mul32(x7, arg2[6])
	var x701 uint32
	var x702 uint32
	x702, x701 = bits.Mul32(x7, arg2[5])
	var x703 uint32
	var x704 uint32
	x704, x703 = bits.Mul32(x7, arg2[4])
	var x705 uint32
	var x706 uint32
	x706, x705 = bits.Mul32(x7, arg2[3])
	var x707 uint32
	var x708 uint32
	x708, x707 = bits.Mul32(x7, arg2[2])
	var x709 uint32
	var x710 uint32
	x710, x709 = bits.Mul32(x7, arg2[1])
	var x711 uint32
	var x712 uint32
	x712, x711 = bits.Mul32(x7, arg2[0])
	var x713 uint32
	var x714 uint32
	x713, x714 = bits.Add32(x712, x709, uint32(0x0))
	var x715 uint32
	var x716 uint32
	x715, x716 = bits.Add32(x710, x707, uint32(uint1(x714)))
	var x717 uint32
	var x718 uint32
	x717, x718 = bits.Add32(x708, x705, uint32(uint1(x716)))
	var x719 uint32
	var x720 uint32
	x719, x720 = bits.Add32(x706, x703, uint32(uint1(x718)))
	var x721 uint32
	var x722 uint32
	x721, x722 = bits.Add32(x704, x701, uint32(uint1(x720)))
	var x723 uint32
	var x724 uint32
	x723, x724 = bits.Add32(x702, x699, uint32(uint1(x722)))
	var x725 uint32
	var x726 uint32
	x725, x726 = bits.Add32(x700, x697, uint32(uint1(x724)))
	x727 := (uint32(uint1(x726)) + x698)
	var x728 uint32
	var x729 uint32
	x728, x729 = bits.Add32(x680, x711, uint32(0x0))
	var x730 uint32
	var x731 uint32
	x730, x731 = bits.Add32(x682, x713, uint32(uint1(x729)))
	var x732 uint32
	var x733 uint32
	x732, x733 = bits.Add32(x684, x715, uint32(uint1(x731)))
	var x734 uint32
	var x735 uint32
	x734, x735 = bits.Add32(x686, x717, uint32(uint1(x733)))
	var x736 uint32
	var x737 uint32
	x736, x737 = bits.Add32(x688, x719, uint32(uint1(x735)))
	var x738 uint32
	var x739 uint32
	x738, x739 = bits.Add32(x690, x721, uint32(uint1(x737)))
	var x740 uint32
	var x741 uint32
	x740, x741 = bits.Add32(x692, x723, uint32(uint1(x739)))
	var x742 uint32
	var x743 uint32
	x742, x743 = bits.Add32(x694, x725, uint32(uint1(x741)))
	var x744 uint32
	var x745 uint32
	x744, x745 = bits.Add32(x696, x727, uint32(uint1(x743)))
	var x746 uint32
	_, x746 = bits.Mul32(x728, 0xd2253531)
	var x748 uint32
	var x749 uint32
	x749, x748 = bits.Mul32(x746, 0xffffffff)
	var x750 uint32
	var x751 uint32
	x751, x750 = bits.Mul32(x746, 0xffffffff)
	var x752 uint32
	var x753 uint32
	x753, x752 = bits.Mul32(x746, 0xffffffff)
	var x754 uint32
	var x755 uint32
	x755, x754 = bits.Mul32(x746, 0xffffffff)
	var x756 uint32
	var x757 uint32
	x757, x756 = bits.Mul32(x746, 0xffffffff)
	var x758 uint32
	var x759 uint32
	x759, x758 = bits.Mul32(x746, 0xffffffff)
	var x760 uint32
	var x761 uint32
	x761, x760 = bits.Mul32(x746, 0xfffffffe)
	var x762 uint32
	var x763 uint32
	x763, x762 = bits.Mul32(x746, 0xfffffc2f)
	var x764 uint32
	var x765 uint32
	x764, x765 = bits.Add32(x763, x760, uint32(0x0))
	var x766 uint32
	var x767 uint32
	x766, x767 = bits.Add32(x761, x758, uint32(uint1(x765)))
	var x768 uint32
	var x769 uint32
	x768, x769 = bits.Add32(x759, x756, uint32(uint1(x767)))
	var x770 uint32
	var x771 uint32
	x770, x771 = bits.Add32(x757, x754, uint32(uint1(x769)))
	var x772 uint32
	var x773 uint32
	x772, x773 = bits.Add32(x755, x752, uint32(uint1(x771)))
	var x774 uint32
	var x775 uint32
	x774, x775 = bits.Add32(x753, x750, uint32(uint1(x773)))
	var x776 uint32
	var x777 uint32
	x776, x777 = bits.Add32(x751, x748, uint32(uint1(x775)))
	x778 := (uint32(uint1(x777)) + x749)
	var x780 uint32
	_, x780 = bits.Add32(x728, x762, uint32(0x0))
	var x781 uint32
	var x782 uint32
	x781, x782 = bits.Add32(x730, x764, uint32(uint1(x780)))
	var x783 uint32
	var x784 uint32
	x783, x784 = bits.Add32(x732, x766, uint32(uint1(x782)))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x734, x768, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x736, x770, uint32(uint1(x786)))
	var x789 uint32
	var x790 uint32
	x789, x790 = bits.Add32(x738, x772, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x740, x774, uint32(uint1(x790)))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x742, x776, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x744, x778, uint32(uint1(x794)))
	x797 := (uint32(uint1(x796)) + uint32(uint1(x745)))
	var x798 uint32
	var x799 uint32
	x798, x799 = bits.Sub32(x781, 0xfffffc2f, uint32(0x0))
	var x800 uint32
	var x801 uint32
	x800, x801 = bits.Sub32(x783, 0xfffffffe, uint32(uint1(x799)))
	var x802 uint32
	var x803 uint32
	x802, x803 = bits.Sub32(x785, 0xffffffff, uint32(uint1(x801)))
	var x804 uint32
	var x805 uint32
	x804, x805 = bits.Sub32(x787, 0xffffffff, uint32(uint1(x803)))
	var x806 uint32
	var x807 uint32
	x806, x807 = bits.Sub32(x789, 0xffffffff, uint32(uint1(x805)))
	var x808 uint32
	var x809 uint32
	x808, x809 = bits.Sub32(x791, 0xffffffff, uint32(uint1(x807)))
	var x810 uint32
	var x811 uint32
	x810, x811 = bits.Sub32(x793, 0xffffffff, uint32(uint1(x809)))
	var x812 uint32
	var x813 uint32
	x812, x813 = bits.Sub32(x795, 0xffffffff, uint32(uint1(x811)))
	var x815 uint32
	_, x815 = bits.Sub32(x797, uint32(0x0), uint32(uint1(x813)))
	var x816 uint32
	cmovznzU32(&x816, uint1(x815), x798, x781)
	var x817 uint32
	cmovznzU32(&x817, uint1(x815), x800, x783)
	var x818 uint32
	cmovznzU32(&x818, uint1(x815), x802, x785)
	var x819 uint32
	cmovznzU32(&x819, uint1(x815), x804, x787)
	var x820 uint32
	cmovznzU32(&x820, uint1(x815), x806, x789)
	var x821 uint32
	cmovznzU32(&x821, uint1(x815), x808, x791)
	var x822 uint32
	cmovznzU32(&x822, uint1(x815), x810, x793)
	var x823 uint32
	cmovznzU32(&x823, uint1(x815), x812, x795)
	out1[0] = x816
	out1[1] = x817
	out1[2] = x818
	out1[3] = x819
	out1[4] = x820
	out1[5] = x821
	out1[6] = x822
	out1[7] = x823
}

// Square squares a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
//   0 ≤ eval out1 < m
//
func Square(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[7]
	x8 := arg1[0]
	var x9 uint32
	var x10 uint32
	x10, x9 = bits.Mul32(x8, arg1[7])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x8, arg1[6])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x8, arg1[5])
	var x15 uint32
	var x16 uint32
	x16, x15 = bits.Mul32(x8, arg1[4])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x8, arg1[3])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x8, arg1[2])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x8, arg1[1])
	var x23 uint32
	var x24 uint32
	x24, x23 = bits.Mul32(x8, arg1[0])
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Add32(x24, x21, uint32(0x0))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Add32(x22, x19, uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Add32(x20, x17, uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Add32(x18, x15, uint32(uint1(x30)))
	var x33 uint32
	var x34 uint32
	x33, x34 = bits.Add32(x16, x13, uint32(uint1(x32)))
	var x35 uint32
	var x36 uint32
	x35, x36 = bits.Add32(x14, x11, uint32(uint1(x34)))
	var x37 uint32
	var x38 uint32
	x37, x38 = bits.Add32(x12, x9, uint32(uint1(x36)))
	x39 := (uint32(uint1(x38)) + x10)
	var x40 uint32
	_, x40 = bits.Mul32(x23, 0xd2253531)
	var x42 uint32
	var x43 uint32
	x43, x42 = bits.Mul32(x40, 0xffffffff)
	var x44 uint32
	var x45 uint32
	x45, x44 = bits.Mul32(x40, 0xffffffff)
	var x46 uint32
	var x47 uint32
	x47, x46 = bits.Mul32(x40, 0xffffffff)
	var x48 uint32
	var x49 uint32
	x49, x48 = bits.Mul32(x40, 0xffffffff)
	var x50 uint32
	var x51 uint32
	x51, x50 = bits.Mul32(x40, 0xffffffff)
	var x52 uint32
	var x53 uint32
	x53, x52 = bits.Mul32(x40, 0xffffffff)
	var x54 uint32
	var x55 uint32
	x55, x54 = bits.Mul32(x40, 0xfffffffe)
	var x56 uint32
	var x57 uint32
	x57, x56 = bits.Mul32(x40, 0xfffffc2f)
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x57, x54, uint32(0x0))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x55, x52, uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x53, x50, uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x51, x48, uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x49, x46, uint32(uint1(x65)))
	var x68 uint32
	var x69 uint32
	x68, x69 = bits.Add32(x47, x44, uint32(uint1(x67)))
	var x70 uint32
	var x71 uint32
	x70, x71 = bits.Add32(x45, x42, uint32(uint1(x69)))
	x72 := (uint32(uint1(x71)) + x43)
	var x74 uint32
	_, x74 = bits.Add32(x23, x56, uint32(0x0))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Add32(x25, x58, uint32(uint1(x74)))
	var x77 uint32
	var x78 uint32
	x77, x78 = bits.Add32(x27, x60, uint32(uint1(x76)))
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Add32(x29, x62, uint32(uint1(x78)))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Add32(x31, x64, uint32(uint1(x80)))
	var x83 uint32
	var x84 uint32
	x83, x84 = bits.Add32(x33, x66, uint32(uint1(x82)))
	var x85 uint32
	var x86 uint32
	x85, x86 = bits.Add32(x35, x68, uint32(uint1(x84)))
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Add32(x37, x70, uint32(uint1(x86)))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Add32(x39, x72, uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x92, x91 = bits.Mul32(x1, arg1[7])
	var x93 uint32
	var x94 uint32
	x94, x93 = bits.Mul32(x1, arg1[6])
	var x95 uint32
	var x96 uint32
	x96, x95 = bits.Mul32(x1, arg1[5])
	var x97 uint32
	var x98 uint32
	x98, x97 = bits.Mul32(x1, arg1[4])
	var x99 uint32
	var x100 uint32
	x100, x99 = bits.Mul32(x1, arg1[3])
	var x101 uint32
	var x102 uint32
	x102, x101 = bits.Mul32(x1, arg1[2])
	var x103 uint32
	var x104 uint32
	x104, x103 = bits.Mul32(x1, arg1[1])
	var x105 uint32
	var x106 uint32
	x106, x105 = bits.Mul32(x1, arg1[0])
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Add32(x106, x103, uint32(0x0))
	var x109 uint32
	var x110 uint32
	x109, x110 = bits.Add32(x104, x101, uint32(uint1(x108)))
	var x111 uint32
	var x112 uint32
	x111, x112 = bits.Add32(x102, x99, uint32(uint1(x110)))
	var x113 uint32
	var x114 uint32
	x113, x114 = bits.Add32(x100, x97, uint32(uint1(x112)))
	var x115 uint32
	var x116 uint32
	x115, x116 = bits.Add32(x98, x95, uint32(uint1(x114)))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x96, x93, uint32(uint1(x116)))
	var x119 uint32
	var x120 uint32
	x119, x120 = bits.Add32(x94, x91, uint32(uint1(x118)))
	x121 := (uint32(uint1(x120)) + x92)
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x75, x105, uint32(0x0))
	var x124 uint32
	var x125 uint32
	x124, x125 = bits.Add32(x77, x107, uint32(uint1(x123)))
	var x126 uint32
	var x127 uint32
	x126, x127 = bits.Add32(x79, x109, uint32(uint1(x125)))
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x81, x111, uint32(uint1(x127)))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x83, x113, uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x85, x115, uint32(uint1(x131)))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x87, x117, uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x89, x119, uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(uint32(uint1(x90)), x121, uint32(uint1(x137)))
	var x140 uint32
	_, x140 = bits.Mul32(x122, 0xd2253531)
	var x142 uint32
	var x143 uint32
	x143, x142 = bits.Mul32(x140, 0xffffffff)
	var x144 uint32
	var x145 uint32
	x145, x144 = bits.Mul32(x140, 0xffffffff)
	var x146 uint32
	var x147 uint32
	x147, x146 = bits.Mul32(x140, 0xffffffff)
	var x148 uint32
	var x149 uint32
	x149, x148 = bits.Mul32(x140, 0xffffffff)
	var x150 uint32
	var x151 uint32
	x151, x150 = bits.Mul32(x140, 0xffffffff)
	var x152 uint32
	var x153 uint32
	x153, x152 = bits.Mul32(x140, 0xffffffff)
	var x154 uint32
	var x155 uint32
	x155, x154 = bits.Mul32(x140, 0xfffffffe)
	var x156 uint32
	var x157 uint32
	x157, x156 = bits.Mul32(x140, 0xfffffc2f)
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x157, x154, uint32(0x0))
	var x160 uint32
	var x161 uint32
	x160, x161 = bits.Add32(x155, x152, uint32(uint1(x159)))
	var x162 uint32
	var x163 uint32
	x162, x163 = bits.Add32(x153, x150, uint32(uint1(x161)))
	var x164 uint32
	var x165 uint32
	x164, x165 = bits.Add32(x151, x148, uint32(uint1(x163)))
	var x166 uint32
	var x167 uint32
	x166, x167 = bits.Add32(x149, x146, uint32(uint1(x165)))
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x147, x144, uint32(uint1(x167)))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x145, x142, uint32(uint1(x169)))
	x172 := (uint32(uint1(x171)) + x143)
	var x174 uint32
	_, x174 = bits.Add32(x122, x156, uint32(0x0))
	var x175 uint32
	var x176 uint32
	x175, x176 = bits.Add32(x124, x158, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x126, x160, uint32(uint1(x176)))
	var x179 uint32
	var x180 uint32
	x179, x180 = bits.Add32(x128, x162, uint32(uint1(x178)))
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x130, x164, uint32(uint1(x180)))
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x132, x166, uint32(uint1(x182)))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x134, x168, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x136, x170, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x138, x172, uint32(uint1(x188)))
	x191 := (uint32(uint1(x190)) + uint32(uint1(x139)))
	var x192 uint32
	var x193 uint32
	x193, x192 = bits.Mul32(x2, arg1[7])
	var x194 uint32
	var x195 uint32
	x195, x194 = bits.Mul32(x2, arg1[6])
	var x196 uint32
	var x197 uint32
	x197, x196 = bits.Mul32(x2, arg1[5])
	var x198 uint32
	var x199 uint32
	x199, x198 = bits.Mul32(x2, arg1[4])
	var x200 uint32
	var x201 uint32
	x201, x200 = bits.Mul32(x2, arg1[3])
	var x202 uint32
	var x203 uint32
	x203, x202 = bits.Mul32(x2, arg1[2])
	var x204 uint32
	var x205 uint32
	x205, x204 = bits.Mul32(x2, arg1[1])
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x2, arg1[0])
	var x208 uint32
	var x209 uint32
	x208, x209 = bits.Add32(x207, x204, uint32(0x0))
	var x210 uint32
	var x211 uint32
	x210, x211 = bits.Add32(x205, x202, uint32(uint1(x209)))
	var x212 uint32
	var x213 uint32
	x212, x213 = bits.Add32(x203, x200, uint32(uint1(x211)))
	var x214 uint32
	var x215 uint32
	x214, x215 = bits.Add32(x201, x198, uint32(uint1(x213)))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x199, x196, uint32(uint1(x215)))
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x197, x194, uint32(uint1(x217)))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x195, x192, uint32(uint1(x219)))
	x222 := (uint32(uint1(x221)) + x193)
	var x223 uint32
	var x224 uint32
	x223, x224 = bits.Add32(x175, x206, uint32(0x0))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x177, x208, uint32(uint1(x224)))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x179, x210, uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x181, x212, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x183, x214, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x185, x216, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x187, x218, uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x189, x220, uint32(uint1(x236)))
	var x239 uint32
	var x240 uint32
	x239, x240 = bits.Add32(x191, x222, uint32(uint1(x238)))
	var x241 uint32
	_, x241 = bits.Mul32(x223, 0xd2253531)
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x241, 0xffffffff)
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x241, 0xffffffff)
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x241, 0xffffffff)
	var x249 uint32
	var x250 uint32
	x250, x249 = bits.Mul32(x241, 0xffffffff)
	var x251 uint32
	var x252 uint32
	x252, x251 = bits.Mul32(x241, 0xffffffff)
	var x253 uint32
	var x254 uint32
	x254, x253 = bits.Mul32(x241, 0xffffffff)
	var x255 uint32
	var x256 uint32
	x256, x255 = bits.Mul32(x241, 0xfffffffe)
	var x257 uint32
	var x258 uint32
	x258, x257 = bits.Mul32(x241, 0xfffffc2f)
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x258, x255, uint32(0x0))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x256, x253, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x254, x251, uint32(uint1(x262)))
	var x265 uint32
	var x266 uint32
	x265, x266 = bits.Add32(x252, x249, uint32(uint1(x264)))
	var x267 uint32
	var x268 uint32
	x267, x268 = bits.Add32(x250, x247, uint32(uint1(x266)))
	var x269 uint32
	var x270 uint32
	x269, x270 = bits.Add32(x248, x245, uint32(uint1(x268)))
	var x271 uint32
	var x272 uint32
	x271, x272 = bits.Add32(x246, x243, uint32(uint1(x270)))
	x273 := (uint32(uint1(x272)) + x244)
	var x275 uint32
	_, x275 = bits.Add32(x223, x257, uint32(0x0))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x225, x259, uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x227, x261, uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x229, x263, uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x282, x283 = bits.Add32(x231, x265, uint32(uint1(x281)))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x233, x267, uint32(uint1(x283)))
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Add32(x235, x269, uint32(uint1(x285)))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Add32(x237, x271, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x239, x273, uint32(uint1(x289)))
	x292 := (uint32(uint1(x291)) + uint32(uint1(x240)))
	var x293 uint32
	var x294 uint32
	x294, x293 = bits.Mul32(x3, arg1[7])
	var x295 uint32
	var x296 uint32
	x296, x295 = bits.Mul32(x3, arg1[6])
	var x297 uint32
	var x298 uint32
	x298, x297 = bits.Mul32(x3, arg1[5])
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x3, arg1[4])
	var x301 uint32
	var x302 uint32
	x302, x301 = bits.Mul32(x3, arg1[3])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x3, arg1[2])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x3, arg1[1])
	var x307 uint32
	var x308 uint32
	x308, x307 = bits.Mul32(x3, arg1[0])
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x308, x305, uint32(0x0))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x306, x303, uint32(uint1(x310)))
	var x313 uint32
	var x314 uint32
	x313, x314 = bits.Add32(x304, x301, uint32(uint1(x312)))
	var x315 uint32
	var x316 uint32
	x315, x316 = bits.Add32(x302, x299, uint32(uint1(x314)))
	var x317 uint32
	var x318 uint32
	x317, x318 = bits.Add32(x300, x297, uint32(uint1(x316)))
	var x319 uint32
	var x320 uint32
	x319, x320 = bits.Add32(x298, x295, uint32(uint1(x318)))
	var x321 uint32
	var x322 uint32
	x321, x322 = bits.Add32(x296, x293, uint32(uint1(x320)))
	x323 := (uint32(uint1(x322)) + x294)
	var x324 uint32
	var x325 uint32
	x324, x325 = bits.Add32(x276, x307, uint32(0x0))
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x278, x309, uint32(uint1(x325)))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x280, x311, uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x282, x313, uint32(uint1(x329)))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x284, x315, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x286, x317, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x288, x319, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x290, x321, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x292, x323, uint32(uint1(x339)))
	var x342 uint32
	_, x342 = bits.Mul32(x324, 0xd2253531)
	var x344 uint32
	var x345 uint32
	x345, x344 = bits.Mul32(x342, 0xffffffff)
	var x346 uint32
	var x347 uint32
	x347, x346 = bits.Mul32(x342, 0xffffffff)
	var x348 uint32
	var x349 uint32
	x349, x348 = bits.Mul32(x342, 0xffffffff)
	var x350 uint32
	var x351 uint32
	x351, x350 = bits.Mul32(x342, 0xffffffff)
	var x352 uint32
	var x353 uint32
	x353, x352 = bits.Mul32(x342, 0xffffffff)
	var x354 uint32
	var x355 uint32
	x355, x354 = bits.Mul32(x342, 0xffffffff)
	var x356 uint32
	var x357 uint32
	x357, x356 = bits.Mul32(x342, 0xfffffffe)
	var x358 uint32
	var x359 uint32
	x359, x358 = bits.Mul32(x342, 0xfffffc2f)
	var x360 uint32
	var x361 uint32
	x360, x361 = bits.Add32(x359, x356, uint32(0x0))
	var x362 uint32
	var x363 uint32
	x362, x363 = bits.Add32(x357, x354, uint32(uint1(x361)))
	var x364 uint32
	var x365 uint32
	x364, x365 = bits.Add32(x355, x352, uint32(uint1(x363)))
	var x366 uint32
	var x367 uint32
	x366, x367 = bits.Add32(x353, x350, uint32(uint1(x365)))
	var x368 uint32
	var x369 uint32
	x368, x369 = bits.Add32(x351, x348, uint32(uint1(x367)))
	var x370 uint32
	var x371 uint32
	x370, x371 = bits.Add32(x349, x346, uint32(uint1(x369)))
	var x372 uint32
	var x373 uint32
	x372, x373 = bits.Add32(x347, x344, uint32(uint1(x371)))
	x374 := (uint32(uint1(x373)) + x345)
	var x376 uint32
	_, x376 = bits.Add32(x324, x358, uint32(0x0))
	var x377 uint32
	var x378 uint32
	x377, x378 = bits.Add32(x326, x360, uint32(uint1(x376)))
	var x379 uint32
	var x380 uint32
	x379, x380 = bits.Add32(x328, x362, uint32(uint1(x378)))
	var x381 uint32
	var x382 uint32
	x381, x382 = bits.Add32(x330, x364, uint32(uint1(x380)))
	var x383 uint32
	var x384 uint32
	x383, x384 = bits.Add32(x332, x366, uint32(uint1(x382)))
	var x385 uint32
	var x386 uint32
	x385, x386 = bits.Add32(x334, x368, uint32(uint1(x384)))
	var x387 uint32
	var x388 uint32
	x387, x388 = bits.Add32(x336, x370, uint32(uint1(x386)))
	var x389 uint32
	var x390 uint32
	x389, x390 = bits.Add32(x338, x372, uint32(uint1(x388)))
	var x391 uint32
	var x392 uint32
	x391, x392 = bits.Add32(x340, x374, uint32(uint1(x390)))
	x393 := (uint32(uint1(x392)) + uint32(uint1(x341)))
	var x394 uint32
	var x395 uint32
	x395, x394 = bits.Mul32(x4, arg1[7])
	var x396 uint32
	var x397 uint32
	x397, x396 = bits.Mul32(x4, arg1[6])
	var x398 uint32
	var x399 uint32
	x399, x398 = bits.Mul32(x4, arg1[5])
	var x400 uint32
	var x401 uint32
	x401, x400 = bits.Mul32(x4, arg1[4])
	var x402 uint32
	var x403 uint32
	x403, x402 = bits.Mul32(x4, arg1[3])
	var x404 uint32
	var x405 uint32
	x405, x404 = bits.Mul32(x4, arg1[2])
	var x406 uint32
	var x407 uint32
	x407, x406 = bits.Mul32(x4, arg1[1])
	var x408 uint32
	var x409 uint32
	x409, x408 = bits.Mul32(x4, arg1[0])
	var x410 uint32
	var x411 uint32
	x410, x411 = bits.Add32(x409, x406, uint32(0x0))
	var x412 uint32
	var x413 uint32
	x412, x413 = bits.Add32(x407, x404, uint32(uint1(x411)))
	var x414 uint32
	var x415 uint32
	x414, x415 = bits.Add32(x405, x402, uint32(uint1(x413)))
	var x416 uint32
	var x417 uint32
	x416, x417 = bits.Add32(x403, x400, uint32(uint1(x415)))
	var x418 uint32
	var x419 uint32
	x418, x419 = bits.Add32(x401, x398, uint32(uint1(x417)))
	var x420 uint32
	var x421 uint32
	x420, x421 = bits.Add32(x399, x396, uint32(uint1(x419)))
	var x422 uint32
	var x423 uint32
	x422, x423 = bits.Add32(x397, x394, uint32(uint1(x421)))
	x424 := (uint32(uint1(x423)) + x395)
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x377, x408, uint32(0x0))
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x379, x410, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x381, x412, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x383, x414, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x385, x416, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x387, x418, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x389, x420, uint32(uint1(x436)))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x391, x422, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x393, x424, uint32(uint1(x440)))
	var x443 uint32
	_, x443 = bits.Mul32(x425, 0xd2253531)
	var x445 uint32
	var x446 uint32
	x446, x445 = bits.Mul32(x443, 0xffffffff)
	var x447 uint32
	var x448 uint32
	x448, x447 = bits.Mul32(x443, 0xffffffff)
	var x449 uint32
	var x450 uint32
	x450, x449 = bits.Mul32(x443, 0xffffffff)
	var x451 uint32
	var x452 uint32
	x452, x451 = bits.Mul32(x443, 0xffffffff)
	var x453 uint32
	var x454 uint32
	x454, x453 = bits.Mul32(x443, 0xffffffff)
	var x455 uint32
	var x456 uint32
	x456, x455 = bits.Mul32(x443, 0xffffffff)
	var x457 uint32
	var x458 uint32
	x458, x457 = bits.Mul32(x443, 0xfffffffe)
	var x459 uint32
	var x460 uint32
	x460, x459 = bits.Mul32(x443, 0xfffffc2f)
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x460, x457, uint32(0x0))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x458, x455, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x456, x453, uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x454, x451, uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x452, x449, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x450, x447, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x448, x445, uint32(uint1(x472)))
	x475 := (uint32(uint1(x474)) + x446)
	var x477 uint32
	_, x477 = bits.Add32(x425, x459, uint32(0x0))
	var x478 uint32
	var x479 uint32
	x478, x479 = bits.Add32(x427, x461, uint32(uint1(x477)))
	var x480 uint32
	var x481 uint32
	x480, x481 = bits.Add32(x429, x463, uint32(uint1(x479)))
	var x482 uint32
	var x483 uint32
	x482, x483 = bits.Add32(x431, x465, uint32(uint1(x481)))
	var x484 uint32
	var x485 uint32
	x484, x485 = bits.Add32(x433, x467, uint32(uint1(x483)))
	var x486 uint32
	var x487 uint32
	x486, x487 = bits.Add32(x435, x469, uint32(uint1(x485)))
	var x488 uint32
	var x489 uint32
	x488, x489 = bits.Add32(x437, x471, uint32(uint1(x487)))
	var x490 uint32
	var x491 uint32
	x490, x491 = bits.Add32(x439, x473, uint32(uint1(x489)))
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x441, x475, uint32(uint1(x491)))
	x494 := (uint32(uint1(x493)) + uint32(uint1(x442)))
	var x495 uint32
	var x496 uint32
	x496, x495 = bits.Mul32(x5, arg1[7])
	var x497 uint32
	var x498 uint32
	x498, x497 = bits.Mul32(x5, arg1[6])
	var x499 uint32
	var x500 uint32
	x500, x499 = bits.Mul32(x5, arg1[5])
	var x501 uint32
	var x502 uint32
	x502, x501 = bits.Mul32(x5, arg1[4])
	var x503 uint32
	var x504 uint32
	x504, x503 = bits.Mul32(x5, arg1[3])
	var x505 uint32
	var x506 uint32
	x506, x505 = bits.Mul32(x5, arg1[2])
	var x507 uint32
	var x508 uint32
	x508, x507 = bits.Mul32(x5, arg1[1])
	var x509 uint32
	var x510 uint32
	x510, x509 = bits.Mul32(x5, arg1[0])
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x510, x507, uint32(0x0))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x508, x505, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x506, x503, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x504, x501, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x502, x499, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x500, x497, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x498, x495, uint32(uint1(x522)))
	x525 := (uint32(uint1(x524)) + x496)
	var x526 uint32
	var x527 uint32
	x526, x527 = bits.Add32(x478, x509, uint32(0x0))
	var x528 uint32
	var x529 uint32
	x528, x529 = bits.Add32(x480, x511, uint32(uint1(x527)))
	var x530 uint32
	var x531 uint32
	x530, x531 = bits.Add32(x482, x513, uint32(uint1(x529)))
	var x532 uint32
	var x533 uint32
	x532, x533 = bits.Add32(x484, x515, uint32(uint1(x531)))
	var x534 uint32
	var x535 uint32
	x534, x535 = bits.Add32(x486, x517, uint32(uint1(x533)))
	var x536 uint32
	var x537 uint32
	x536, x537 = bits.Add32(x488, x519, uint32(uint1(x535)))
	var x538 uint32
	var x539 uint32
	x538, x539 = bits.Add32(x490, x521, uint32(uint1(x537)))
	var x540 uint32
	var x541 uint32
	x540, x541 = bits.Add32(x492, x523, uint32(uint1(x539)))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Add32(x494, x525, uint32(uint1(x541)))
	var x544 uint32
	_, x544 = bits.Mul32(x526, 0xd2253531)
	var x546 uint32
	var x547 uint32
	x547, x546 = bits.Mul32(x544, 0xffffffff)
	var x548 uint32
	var x549 uint32
	x549, x548 = bits.Mul32(x544, 0xffffffff)
	var x550 uint32
	var x551 uint32
	x551, x550 = bits.Mul32(x544, 0xffffffff)
	var x552 uint32
	var x553 uint32
	x553, x552 = bits.Mul32(x544, 0xffffffff)
	var x554 uint32
	var x555 uint32
	x555, x554 = bits.Mul32(x544, 0xffffffff)
	var x556 uint32
	var x557 uint32
	x557, x556 = bits.Mul32(x544, 0xffffffff)
	var x558 uint32
	var x559 uint32
	x559, x558 = bits.Mul32(x544, 0xfffffffe)
	var x560 uint32
	var x561 uint32
	x561, x560 = bits.Mul32(x544, 0xfffffc2f)
	var x562 uint32
	var x563 uint32
	x562, x563 = bits.Add32(x561, x558, uint32(0x0))
	var x564 uint32
	var x565 uint32
	x564, x565 = bits.Add32(x559, x556, uint32(uint1(x563)))
	var x566 uint32
	var x567 uint32
	x566, x567 = bits.Add32(x557, x554, uint32(uint1(x565)))
	var x568 uint32
	var x569 uint32
	x568, x569 = bits.Add32(x555, x552, uint32(uint1(x567)))
	var x570 uint32
	var x571 uint32
	x570, x571 = bits.Add32(x553, x550, uint32(uint1(x569)))
	var x572 uint32
	var x573 uint32
	x572, x573 = bits.Add32(x551, x548, uint32(uint1(x571)))
	var x574 uint32
	var x575 uint32
	x574, x575 = bits.Add32(x549, x546, uint32(uint1(x573)))
	x576 := (uint32(uint1(x575)) + x547)
	var x578 uint32
	_, x578 = bits.Add32(x526, x560, uint32(0x0))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x528, x562, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x530, x564, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x532, x566, uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x534, x568, uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x536, x570, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x538, x572, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x540, x574, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x542, x576, uint32(uint1(x592)))
	x595 := (uint32(uint1(x594)) + uint32(uint1(x543)))
	var x596 uint32
	var x597 uint32
	x597, x596 = bits.Mul32(x6, arg1[7])
	var x598 uint32
	var x599 uint32
	x599, x598 = bits.Mul32(x6, arg1[6])
	var x600 uint32
	var x601 uint32
	x601, x600 = bits.Mul32(x6, arg1[5])
	var x602 uint32
	var x603 uint32
	x603, x602 = bits.Mul32(x6, arg1[4])
	var x604 uint32
	var x605 uint32
	x605, x604 = bits.Mul32(x6, arg1[3])
	var x606 uint32
	var x607 uint32
	x607, x606 = bits.Mul32(x6, arg1[2])
	var x608 uint32
	var x609 uint32
	x609, x608 = bits.Mul32(x6, arg1[1])
	var x610 uint32
	var x611 uint32
	x611, x610 = bits.Mul32(x6, arg1[0])
	var x612 uint32
	var x613 uint32
	x612, x613 = bits.Add32(x611, x608, uint32(0x0))
	var x614 uint32
	var x615 uint32
	x614, x615 = bits.Add32(x609, x606, uint32(uint1(x613)))
	var x616 uint32
	var x617 uint32
	x616, x617 = bits.Add32(x607, x604, uint32(uint1(x615)))
	var x618 uint32
	var x619 uint32
	x618, x619 = bits.Add32(x605, x602, uint32(uint1(x617)))
	var x620 uint32
	var x621 uint32
	x620, x621 = bits.Add32(x603, x600, uint32(uint1(x619)))
	var x622 uint32
	var x623 uint32
	x622, x623 = bits.Add32(x601, x598, uint32(uint1(x621)))
	var x624 uint32
	var x625 uint32
	x624, x625 = bits.Add32(x599, x596, uint32(uint1(x623)))
	x626 := (uint32(uint1(x625)) + x597)
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x579, x610, uint32(0x0))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x581, x612, uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x583, x614, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x585, x616, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x587, x618, uint32(uint1(x634)))
	var x637 uint32
	var x638 uint32
	x637, x638 = bits.Add32(x589, x620, uint32(uint1(x636)))
	var x639 uint32
	var x640 uint32
	x639, x640 = bits.Add32(x591, x622, uint32(uint1(x638)))
	var x641 uint32
	var x642 uint32
	x641, x642 = bits.Add32(x593, x624, uint32(uint1(x640)))
	var x643 uint32
	var x644 uint32
	x643, x644 = bits.Add32(x595, x626, uint32(uint1(x642)))
	var x645 uint32
	_, x645 = bits.Mul32(x627, 0xd2253531)
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x645, 0xffffffff)
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x645, 0xffffffff)
	var x651 uint32
	var x652 uint32
	x652, x651 = bits.Mul32(x645, 0xffffffff)
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x645, 0xffffffff)
	var x655 uint32
	var x656 uint32
	x656, x655 = bits.Mul32(x645, 0xffffffff)
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32(x645, 0xffffffff)
	var x659 uint32
	var x660 uint32
	x660, x659 = bits.Mul32(x645, 0xfffffffe)
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x645, 0xfffffc2f)
	var x663 uint32
	var x664 uint32
	x663, x664 = bits.Add32(x662, x659, uint32(0x0))
	var x665 uint32
	var x666 uint32
	x665, x666 = bits.Add32(x660, x657, uint32(uint1(x664)))
	var x667 uint32
	var x668 uint32
	x667, x668 = bits.Add32(x658, x655, uint32(uint1(x666)))
	var x669 uint32
	var x670 uint32
	x669, x670 = bits.Add32(x656, x653, uint32(uint1(x668)))
	var x671 uint32
	var x672 uint32
	x671, x672 = bits.Add32(x654, x651, uint32(uint1(x670)))
	var x673 uint32
	var x674 uint32
	x673, x674 = bits.Add32(x652, x649, uint32(uint1(x672)))
	var x675 uint32
	var x676 uint32
	x675, x676 = bits.Add32(x650, x647, uint32(uint1(x674)))
	x677 := (uint32(uint1(x676)) + x648)
	var x679 uint32
	_, x679 = bits.Add32(x627, x661, uint32(0x0))
	var x680 uint32
	var x681 uint32
	x680, x681 = bits.Add32(x629, x663, uint32(uint1(x679)))
	var x682 uint32
	var x683 uint32
	x682, x683 = bits.Add32(x631, x665, uint32(uint1(x681)))
	var x684 uint32
	var x685 uint32
	x684, x685 = bits.Add32(x633, x667, uint32(uint1(x683)))
	var x686 uint32
	var x687 uint32
	x686, x687 = bits.Add32(x635, x669, uint32(uint1(x685)))
	var x688 uint32
	var x689 uint32
	x688, x689 = bits.Add32(x637, x671, uint32(uint1(x687)))
	var x690 uint32
	var x691 uint32
	x690, x691 = bits.Add32(x639, x673, uint32(uint1(x689)))
	var x692 uint32
	var x693 uint32
	x692, x693 = bits.Add32(x641, x675, uint32(uint1(x691)))
	var x694 uint32
	var x695 uint32
	x694, x695 = bits.Add32(x643, x677, uint32(uint1(x693)))
	x696 := (uint32(uint1(x695)) + uint32(uint1(x644)))
	var x697 uint32
	var x698 uint32
	x698, x697 = bits.Mul32(x7, arg1[7])
	var x699 uint32
	var x700 uint32
	x700, x699 = bits.Mul32(x7, arg1[6])
	var x701 uint32
	var x702 uint32
	x702, x701 = bits.Mul32(x7, arg1[5])
	var x703 uint32
	var x704 uint32
	x704, x703 = bits.Mul32(x7, arg1[4])
	var x705 uint32
	var x706 uint32
	x706, x705 = bits.Mul32(x7, arg1[3])
	var x707 uint32
	var x708 uint32
	x708, x707 = bits.Mul32(x7, arg1[2])
	var x709 uint32
	var x710 uint32
	x710, x709 = bits.Mul32(x7, arg1[1])
	var x711 uint32
	var x712 uint32
	x712, x711 = bits.Mul32(x7, arg1[0])
	var x713 uint32
	var x714 uint32
	x713, x714 = bits.Add32(x712, x709, uint32(0x0))
	var x715 uint32
	var x716 uint32
	x715, x716 = bits.Add32(x710, x707, uint32(uint1(x714)))
	var x717 uint32
	var x718 uint32
	x717, x718 = bits.Add32(x708, x705, uint32(uint1(x716)))
	var x719 uint32
	var x720 uint32
	x719, x720 = bits.Add32(x706, x703, uint32(uint1(x718)))
	var x721 uint32
	var x722 uint32
	x721, x722 = bits.Add32(x704, x701, uint32(uint1(x720)))
	var x723 uint32
	var x724 uint32
	x723, x724 = bits.Add32(x702, x699, uint32(uint1(x722)))
	var x725 uint32
	var x726 uint32
	x725, x726 = bits.Add32(x700, x697, uint32(uint1(x724)))
	x727 := (uint32(uint1(x726)) + x698)
	var x728 uint32
	var x729 uint32
	x728, x729 = bits.Add32(x680, x711, uint32(0x0))
	var x730 uint32
	var x731 uint32
	x730, x731 = bits.Add32(x682, x713, uint32(uint1(x729)))
	var x732 uint32
	var x733 uint32
	x732, x733 = bits.Add32(x684, x715, uint32(uint1(x731)))
	var x734 uint32
	var x735 uint32
	x734, x735 = bits.Add32(x686, x717, uint32(uint1(x733)))
	var x736 uint32
	var x737 uint32
	x736, x737 = bits.Add32(x688, x719, uint32(uint1(x735)))
	var x738 uint32
	var x739 uint32
	x738, x739 = bits.Add32(x690, x721, uint32(uint1(x737)))
	var x740 uint32
	var x741 uint32
	x740, x741 = bits.Add32(x692, x723, uint32(uint1(x739)))
	var x742 uint32
	var x743 uint32
	x742, x743 = bits.Add32(x694, x725, uint32(uint1(x741)))
	var x744 uint32
	var x745 uint32
	x744, x745 = bits.Add32(x696, x727, uint32(uint1(x743)))
	var x746 uint32
	_, x746 = bits.Mul32(x728, 0xd2253531)
	var x748 uint32
	var x749 uint32
	x749, x748 = bits.Mul32(x746, 0xffffffff)
	var x750 uint32
	var x751 uint32
	x751, x750 = bits.Mul32(x746, 0xffffffff)
	var x752 uint32
	var x753 uint32
	x753, x752 = bits.Mul32(x746, 0xffffffff)
	var x754 uint32
	var x755 uint32
	x755, x754 = bits.Mul32(x746, 0xffffffff)
	var x756 uint32
	var x757 uint32
	x757, x756 = bits.Mul32(x746, 0xffffffff)
	var x758 uint32
	var x759 uint32
	x759, x758 = bits.Mul32(x746, 0xffffffff)
	var x760 uint32
	var x761 uint32
	x761, x760 = bits.Mul32(x746, 0xfffffffe)
	var x762 uint32
	var x763 uint32
	x763, x762 = bits.Mul32(x746, 0xfffffc2f)
	var x764 uint32
	var x765 uint32
	x764, x765 = bits.Add32(x763, x760, uint32(0x0))
	var x766 uint32
	var x767 uint32
	x766, x767 = bits.Add32(x761, x758, uint32(uint1(x765)))
	var x768 uint32
	var x769 uint32
	x768, x769 = bits.Add32(x759, x756, uint32(uint1(x767)))
	var x770 uint32
	var x771 uint32
	x770, x771 = bits.Add32(x757, x754, uint32(uint1(x769)))
	var x772 uint32
	var x773 uint32
	x772, x773 = bits.Add32(x755, x752, uint32(uint1(x771)))
	var x774 uint32
	var x775 uint32
	x774, x775 = bits.Add32(x753, x750, uint32(uint1(x773)))
	var x776 uint32
	var x777 uint32
	x776, x777 = bits.Add32(x751, x748, uint32(uint1(x775)))
	x778 := (uint32(uint1(x777)) + x749)
	var x780 uint32
	_, x780 = bits.Add32(x728, x762, uint32(0x0))
	var x781 uint32
	var x782 uint32
	x781, x782 = bits.Add32(x730, x764, uint32(uint1(x780)))
	var x783 uint32
	var x784 uint32
	x783, x784 = bits.Add32(x732, x766, uint32(uint1(x782)))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x734, x768, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x736, x770, uint32(uint1(x786)))
	var x789 uint32
	var x790 uint32
	x789, x790 = bits.Add32(x738, x772, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x740, x774, uint32(uint1(x790)))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x742, x776, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x744, x778, uint32(uint1(x794)))
	x797 := (uint32(uint1(x796)) + uint32(uint1(x745)))
	var x798 uint32
	var x799 uint32
	x798, x799 = bits.Sub32(x781, 0xfffffc2f, uint32(0x0))
	var x800 uint32
	var x801 uint32
	x800, x801 = bits.Sub32(x783, 0xfffffffe, uint32(uint1(x799)))
	var x802 uint32
	var x803 uint32
	x802, x803 = bits.Sub32(x785, 0xffffffff, uint32(uint1(x801)))
	var x804 uint32
	var x805 uint32
	x804, x805 = bits.Sub32(x787, 0xffffffff, uint32(uint1(x803)))
	var x806 uint32
	var x807 uint32
	x806, x807 = bits.Sub32(x789, 0xffffffff, uint32(uint1(x805)))
	var x808 uint32
	var x809 uint32
	x808, x809 = bits.Sub32(x791, 0xffffffff, uint32(uint1(x807)))
	var x810 uint32
	var x811 uint32
	x810, x811 = bits.Sub32(x793, 0xffffffff, uint32(uint1(x809)))
	var x812 uint32
	var x813 uint32
	x812, x813 = bits.Sub32(x795, 0xffffffff, uint32(uint1(x811)))
	var x815 uint32
	_, x815 = bits.Sub32(x797, uint32(0x0), uint32(uint1(x813)))
	var x816 uint32
	cmovznzU32(&x816, uint1(x815), x798, x781)
	var x817 uint32
	cmovznzU32(&x817, uint1(x815), x800, x783)
	var x818 uint32
	cmovznzU32(&x818, uint1(x815), x802, x785)
	var x819 uint32
	cmovznzU32(&x819, uint1(x815), x804, x787)
	var x820 uint32
	cmovznzU32(&x820, uint1(x815), x806, x789)
	var x821 uint32
	cmovznzU32(&x821, uint1(x815), x808, x791)
	var x822 uint32
	cmovznzU32(&x822, uint1(x815), x810, x793)
	var x823 uint32
	cmovznzU32(&x823, uint1(x815), x812, x795)
	out1[0] = x816
	out1[1] = x817
	out1[2] = x818
	out1[3] = x819
	out1[4] = x820
	out1[5] = x821
	out1[6] = x822
	out1[7] = x823
}

// Add adds two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Add(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Add32(arg1[0], arg2[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Add32(arg1[1], arg2[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Add32(arg1[2], arg2[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Add32(arg1[3], arg2[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Add32(arg1[4], arg2[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Add32(arg1[5], arg2[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Add32(arg1[6], arg2[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Add32(arg1[7], arg2[7], uint32(uint1(x14)))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Sub32(x1, 0xfffffc2f, uint32(0x0))
	var x19 uint32
	var x20 uint32
	x19, x20 = bits.Sub32(x3, 0xfffffffe, uint32(uint1(x18)))
	var x21 uint32
	var x22 uint32
	x21, x22 = bits.Sub32(x5, 0xffffffff, uint32(uint1(x20)))
	var x23 uint32
	var x24 uint32
	x23, x24 = bits.Sub32(x7, 0xffffffff, uint32(uint1(x22)))
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Sub32(x9, 0xffffffff, uint32(uint1(x24)))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Sub32(x11, 0xffffffff, uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Sub32(x13, 0xffffffff, uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Sub32(x15, 0xffffffff, uint32(uint1(x30)))
	var x34 uint32
	_, x34 = bits.Sub32(uint32(uint1(x16)), uint32(0x0), uint32(uint1(x32)))
	var x35 uint32
	cmovznzU32(&x35, uint1(x34), x17, x1)
	var x36 uint32
	cmovznzU32(&x36, uint1(x34), x19, x3)
	var x37 uint32
	cmovznzU32(&x37, uint1(x34), x21, x5)
	var x38 uint32
	cmovznzU32(&x38, uint1(x34), x23, x7)
	var x39 uint32
	cmovznzU32(&x39, uint1(x34), x25, x9)
	var x40 uint32
	cmovznzU32(&x40, uint1(x34), x27, x11)
	var x41 uint32
	cmovznzU32(&x41, uint1(x34), x29, x13)
	var x42 uint32
	cmovznzU32(&x42, uint1(x34), x31, x15)
	out1[0] = x35
	out1[1] = x36
	out1[2] = x37
	out1[3] = x38
	out1[4] = x39
	out1[5] = x40
	out1[6] = x41
	out1[7] = x42
}

// Sub subtracts two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Sub(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Sub32(arg1[0], arg2[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(arg1[1], arg2[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(arg1[2], arg2[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(arg1[3], arg2[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(arg1[4], arg2[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(arg1[5], arg2[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(arg1[6], arg2[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(arg1[7], arg2[7], uint32(uint1(x14)))
	var x17 uint32
	cmovznzU32(&x17, uint1(x16), uint32(0x0), 0xffffffff)
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x1, (x17 & 0xfffffc2f), uint32(0x0))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x3, (x17 & 0xfffffffe), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x5, x17, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x7, x17, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x9, x17, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, x17, uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, x17, uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(x15, x17, uint32(uint1(x31)))
	out1[0] = x18
	out1[1] = x20
	out1[2] = x22
	out1[3] = x24
	out1[4] = x26
	out1[5] = x28
	out1[6] = x30
	out1[7] = x32
}

// Opp negates a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
//   0 ≤ eval out1 < m
//
func Opp(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Sub32(uint32(0x0), arg1[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(uint32(0x0), arg1[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(uint32(0x0), arg1[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(uint32(0x0), arg1[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(uint32(0x0), arg1[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(uint32(0x0), arg1[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(uint32(0x0), arg1[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(uint32(0x0), arg1[7], uint32(uint1(x14)))
	var x17 uint32
	cmovznzU32(&x17, uint1(x16), uint32(0x0), 0xffffffff)
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x1, (x17 & 0xfffffc2f), uint32(0x0))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x3, (x17 & 0xfffffffe), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x5, x17, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x7, x17, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x9, x17, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, x17, uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, x17, uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(x15, x17, uint32(uint1(x31)))
	out1[0] = x18
	out1[1] = x20
	out1[2] = x22
	out1[3] = x24
	out1[4] = x26
	out1[5] = x28
	out1[6] = x30
	out1[7] = x32
}

// FromMontgomery translates a field element out of the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval out1 mod m = (eval arg1 * ((2^32)⁻¹ mod m)^8) mod m
//   0 ≤ eval out1 < m
//
func FromMontgomery(out1 *NonMontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	x1 := arg1[0]
	var x2 uint32
	_, x2 = bits.Mul32(x1, 0xd2253531)
	var x4 uint32
	var x5 uint32
	x5, x4 = bits.Mul32(x2, 0xffffffff)
	var x6 uint32
	var x7 uint32
	x7, x6 = bits.Mul32(x2, 0xffffffff)
	var x8 uint32
	var x9 uint32
	x9, x8 = bits.Mul32(x2, 0xffffffff)
	var x10 uint32
	var x11 uint32
	x11, x10 = bits.Mul32(x2, 0xffffffff)
	var x12 uint32
	var x13 uint32
	x13, x12 = bits.Mul32(x2, 0xffffffff)
	var x14 uint32
	var x15 uint32
	x15, x14 = bits.Mul32(x2, 0xffffffff)
	var x16 uint32
	var x17 uint32
	x17, x16 = bits.Mul32(x2, 0xfffffffe)
	var x18 uint32
	var x19 uint32
	x19, x18 = bits.Mul32(x2, 0xfffffc2f)
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x19, x16, uint32(0x0))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x17, x14, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x15, x12, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x13, x10, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, x8, uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x9, x6, uint32(uint1(x29)))
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x7, x4, uint32(uint1(x31)))
	var x35 uint32
	_, x35 = bits.Add32(x1, x18, uint32(0x0))
	var x36 uint32
	var x37 uint32
	x36, x37 = bits.Add32(uint32(0x0), x20, uint32(uint1(x35)))
	var x38 uint32
	var x39 uint32
	x38, x39 = bits.Add32(uint32(0x0), x22, uint32(uint1(x37)))
	var x40 uint32
	var x41 uint32
	x40, x41 = bits.Add32(uint32(0x0), x24, uint32(uint1(x39)))
	var x42 uint32
	var x43 uint32
	x42, x43 = bits.Add32(uint32(0x0), x26, uint32(uint1(x41)))
	var x44 uint32
	var x45 uint32
	x44, x45 = bits.Add32(uint32(0x0), x28, uint32(uint1(x43)))
	var x46 uint32
	var x47 uint32
	x46, x47 = bits.Add32(uint32(0x0), x30, uint32(uint1(x45)))
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Add32(uint32(0x0), x32, uint32(uint1(x47)))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32(uint32(0x0), (uint32(uint1(x33)) + x5), uint32(uint1(x49)))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Add32(x36, arg1[1], uint32(0x0))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Add32(x38, uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x40, uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x42, uint32(0x0), uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x44, uint32(0x0), uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x46, uint32(0x0), uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x48, uint32(0x0), uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x50, uint32(0x0), uint32(uint1(x65)))
	var x68 uint32
	_, x68 = bits.Mul32(x52, 0xd2253531)
	var x70 uint32
	var x71 uint32
	x71, x70 = bits.Mul32(x68, 0xffffffff)
	var x72 uint32
	var x73 uint32
	x73, x72 = bits.Mul32(x68, 0xffffffff)
	var x74 uint32
	var x75 uint32
	x75, x74 = bits.Mul32(x68, 0xffffffff)
	var x76 uint32
	var x77 uint32
	x77, x76 = bits.Mul32(x68, 0xffffffff)
	var x78 uint32
	var x79 uint32
	x79, x78 = bits.Mul32(x68, 0xffffffff)
	var x80 uint32
	var x81 uint32
	x81, x80 = bits.Mul32(x68, 0xffffffff)
	var x82 uint32
	var x83 uint32
	x83, x82 = bits.Mul32(x68, 0xfffffffe)
	var x84 uint32
	var x85 uint32
	x85, x84 = bits.Mul32(x68, 0xfffffc2f)
	var x86 uint32
	var x87 uint32
	x86, x87 = bits.Add32(x85, x82, uint32(0x0))
	var x88 uint32
	var x89 uint32
	x88, x89 = bits.Add32(x83, x80, uint32(uint1(x87)))
	var x90 uint32
	var x91 uint32
	x90, x91 = bits.Add32(x81, x78, uint32(uint1(x89)))
	var x92 uint32
	var x93 uint32
	x92, x93 = bits.Add32(x79, x76, uint32(uint1(x91)))
	var x94 uint32
	var x95 uint32
	x94, x95 = bits.Add32(x77, x74, uint32(uint1(x93)))
	var x96 uint32
	var x97 uint32
	x96, x97 = bits.Add32(x75, x72, uint32(uint1(x95)))
	var x98 uint32
	var x99 uint32
	x98, x99 = bits.Add32(x73, x70, uint32(uint1(x97)))
	var x101 uint32
	_, x101 = bits.Add32(x52, x84, uint32(0x0))
	var x102 uint32
	var x103 uint32
	x102, x103 = bits.Add32(x54, x86, uint32(uint1(x101)))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32(x56, x88, uint32(uint1(x103)))
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x58, x90, uint32(uint1(x105)))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x60, x92, uint32(uint1(x107)))
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x62, x94, uint32(uint1(x109)))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x64, x96, uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x66, x98, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32((uint32(uint1(x67)) + uint32(uint1(x51))), (uint32(uint1(x99)) + x71), uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(x102, arg1[2], uint32(0x0))
	var x120 uint32
	var x121 uint32
	x120, x121 = bits.Add32(x104, uint32(0x0), uint32(uint1(x119)))
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x106, uint32(0x0), uint32(uint1(x121)))
	var x124 uint32
	var x125 uint32
	x124, x125 = bits.Add32(x108, uint32(0x0), uint32(uint1(x123)))
	var x126 uint32
	var x127 uint32
	x126, x127 = bits.Add32(x110, uint32(0x0), uint32(uint1(x125)))
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x112, uint32(0x0), uint32(uint1(x127)))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x114, uint32(0x0), uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x116, uint32(0x0), uint32(uint1(x131)))
	var x134 uint32
	_, x134 = bits.Mul32(x118, 0xd2253531)
	var x136 uint32
	var x137 uint32
	x137, x136 = bits.Mul32(x134, 0xffffffff)
	var x138 uint32
	var x139 uint32
	x139, x138 = bits.Mul32(x134, 0xffffffff)
	var x140 uint32
	var x141 uint32
	x141, x140 = bits.Mul32(x134, 0xffffffff)
	var x142 uint32
	var x143 uint32
	x143, x142 = bits.Mul32(x134, 0xffffffff)
	var x144 uint32
	var x145 uint32
	x145, x144 = bits.Mul32(x134, 0xffffffff)
	var x146 uint32
	var x147 uint32
	x147, x146 = bits.Mul32(x134, 0xffffffff)
	var x148 uint32
	var x149 uint32
	x149, x148 = bits.Mul32(x134, 0xfffffffe)
	var x150 uint32
	var x151 uint32
	x151, x150 = bits.Mul32(x134, 0xfffffc2f)
	var x152 uint32
	var x153 uint32
	x152, x153 = bits.Add32(x151, x148, uint32(0x0))
	var x154 uint32
	var x155 uint32
	x154, x155 = bits.Add32(x149, x146, uint32(uint1(x153)))
	var x156 uint32
	var x157 uint32
	x156, x157 = bits.Add32(x147, x144, uint32(uint1(x155)))
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x145, x142, uint32(uint1(x157)))
	var x160 uint32
	var x161 uint32
	x160, x161 = bits.Add32(x143, x140, uint32(uint1(x159)))
	var x162 uint32
	var x163 uint32
	x162, x163 = bits.Add32(x141, x138, uint32(uint1(x161)))
	var x164 uint32
	var x165 uint32
	x164, x165 = bits.Add32(x139, x136, uint32(uint1(x163)))
	var x167 uint32
	_, x167 = bits.Add32(x118, x150, uint32(0x0))
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x120, x152, uint32(uint1(x167)))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x122, x154, uint32(uint1(x169)))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x124, x156, uint32(uint1(x171)))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x126, x158, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x128, x160, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x130, x162, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x132, x164, uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32((uint32(uint1(x133)) + uint32(uint1(x117))), (uint32(uint1(x165)) + x137), uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x168, arg1[3], uint32(0x0))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Add32(x170, uint32(0x0), uint32(uint1(x185)))
	var x188 uint32
	var x189 uint32
	x188, x189 = bits.Add32(x172, uint32(0x0), uint32(uint1(x187)))
	var x190 uint32
	var x191 uint32
	x190, x191 = bits.Add32(x174, uint32(0x0), uint32(uint1(x189)))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Add32(x176, uint32(0x0), uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x194, x195 = bits.Add32(x178, uint32(0x0), uint32(uint1(x193)))
	var x196 uint32
	var x197 uint32
	x196, x197 = bits.Add32(x180, uint32(0x0), uint32(uint1(x195)))
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Add32(x182, uint32(0x0), uint32(uint1(x197)))
	var x200 uint32
	_, x200 = bits.Mul32(x184, 0xd2253531)
	var x202 uint32
	var x203 uint32
	x203, x202 = bits.Mul32(x200, 0xffffffff)
	var x204 uint32
	var x205 uint32
	x205, x204 = bits.Mul32(x200, 0xffffffff)
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x200, 0xffffffff)
	var x208 uint32
	var x209 uint32
	x209, x208 = bits.Mul32(x200, 0xffffffff)
	var x210 uint32
	var x211 uint32
	x211, x210 = bits.Mul32(x200, 0xffffffff)
	var x212 uint32
	var x213 uint32
	x213, x212 = bits.Mul32(x200, 0xffffffff)
	var x214 uint32
	var x215 uint32
	x215, x214 = bits.Mul32(x200, 0xfffffffe)
	var x216 uint32
	var x217 uint32
	x217, x216 = bits.Mul32(x200, 0xfffffc2f)
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x217, x214, uint32(0x0))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x215, x212, uint32(uint1(x219)))
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32(x213, x210, uint32(uint1(x221)))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x211, x208, uint32(uint1(x223)))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x209, x206, uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x207, x204, uint32(uint1(x227)))
	var x230 uint32
	var x231 uint32
	x230, x231 = bits.Add32(x205, x202, uint32(uint1(x229)))
	var x233 uint32
	_, x233 = bits.Add32(x184, x216, uint32(0x0))
	var x234 uint32
	var x235 uint32
	x234, x235 = bits.Add32(x186, x218, uint32(uint1(x233)))
	var x236 uint32
	var x237 uint32
	x236, x237 = bits.Add32(x188, x220, uint32(uint1(x235)))
	var x238 uint32
	var x239 uint32
	x238, x239 = bits.Add32(x190, x222, uint32(uint1(x237)))
	var x240 uint32
	var x241 uint32
	x240, x241 = bits.Add32(x192, x224, uint32(uint1(x239)))
	var x242 uint32
	var x243 uint32
	x242, x243 = bits.Add32(x194, x226, uint32(uint1(x241)))
	var x244 uint32
	var x245 uint32
	x244, x245 = bits.Add32(x196, x228, uint32(uint1(x243)))
	var x246 uint32
	var x247 uint32
	x246, x247 = bits.Add32(x198, x230, uint32(uint1(x245)))
	var x248 uint32
	var x249 uint32
	x248, x249 = bits.Add32((uint32(uint1(x199)) + uint32(uint1(x183))), (uint32(uint1(x231)) + x203), uint32(uint1(x247)))
	var x250 uint32
	var x251 uint32
	x250, x251 = bits.Add32(x234, arg1[4], uint32(0x0))
	var x252 uint32
	var x253 uint32
	x252, x253 = bits.Add32(x236, uint32(0x0), uint32(uint1(x251)))
	var x254 uint32
	var x255 uint32
	x254, x255 = bits.Add32(x238, uint32(0x0), uint32(uint1(x253)))
	var x256 uint32
	var x257 uint32
	x256, x257 = bits.Add32(x240, uint32(0x0), uint32(uint1(x255)))
	var x258 uint32
	var x259 uint32
	x258, x259 = bits.Add32(x242, uint32(0x0), uint32(uint1(x257)))
	var x260 uint32
	var x261 uint32
	x260, x261 = bits.Add32(x244, uint32(0x0), uint32(uint1(x259)))
	var x262 uint32
	var x263 uint32
	x262, x263 = bits.Add32(x246, uint32(0x0), uint32(uint1(x261)))
	var x264 uint32
	var x265 uint32
	x264, x265 = bits.Add32(x248, uint32(0x0), uint32(uint1(x263)))
	var x266 uint32
	_, x266 = bits.Mul32(x250, 0xd2253531)
	var x268 uint32
	var x269 uint32
	x269, x268 = bits.Mul32(x266, 0xffffffff)
	var x270 uint32
	var x271 uint32
	x271, x270 = bits.Mul32(x266, 0xffffffff)
	var x272 uint32
	var x273 uint32
	x273, x272 = bits.Mul32(x266, 0xffffffff)
	var x274 uint32
	var x275 uint32
	x275, x274 = bits.Mul32(x266, 0xffffffff)
	var x276 uint32
	var x277 uint32
	x277, x276 = bits.Mul32(x266, 0xffffffff)
	var x278 uint32
	var x279 uint32
	x279, x278 = bits.Mul32(x266, 0xffffffff)
	var x280 uint32
	var x281 uint32
	x281, x280 = bits.Mul32(x266, 0xfffffffe)
	var x282 uint32
	var x283 uint32
	x283, x282 = bits.Mul32(x266, 0xfffffc2f)
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x283, x280, uint32(0x0))
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Add32(x281, x278, uint32(uint1(x285)))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Add32(x279, x276, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x277, x274, uint32(uint1(x289)))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x275, x272, uint32(uint1(x291)))
	var x294 uint32
	var x295 uint32
	x294, x295 = bits.Add32(x273, x270, uint32(uint1(x293)))
	var x296 uint32
	var x297 uint32
	x296, x297 = bits.Add32(x271, x268, uint32(uint1(x295)))
	var x299 uint32
	_, x299 = bits.Add32(x250, x282, uint32(0x0))
	var x300 uint32
	var x301 uint32
	x300, x301 = bits.Add32(x252, x284, uint32(uint1(x299)))
	var x302 uint32
	var x303 uint32
	x302, x303 = bits.Add32(x254, x286, uint32(uint1(x301)))
	var x304 uint32
	var x305 uint32
	x304, x305 = bits.Add32(x256, x288, uint32(uint1(x303)))
	var x306 uint32
	var x307 uint32
	x306, x307 = bits.Add32(x258, x290, uint32(uint1(x305)))
	var x308 uint32
	var x309 uint32
	x308, x309 = bits.Add32(x260, x292, uint32(uint1(x307)))
	var x310 uint32
	var x311 uint32
	x310, x311 = bits.Add32(x262, x294, uint32(uint1(x309)))
	var x312 uint32
	var x313 uint32
	x312, x313 = bits.Add32(x264, x296, uint32(uint1(x311)))
	var x314 uint32
	var x315 uint32
	x314, x315 = bits.Add32((uint32(uint1(x265)) + uint32(uint1(x249))), (uint32(uint1(x297)) + x269), uint32(uint1(x313)))
	var x316 uint32
	var x317 uint32
	x316, x317 = bits.Add32(x300, arg1[5], uint32(0x0))
	var x318 uint32
	var x319 uint32
	x318, x319 = bits.Add32(x302, uint32(0x0), uint32(uint1(x317)))
	var x320 uint32
	var x321 uint32
	x320, x321 = bits.Add32(x304, uint32(0x0), uint32(uint1(x319)))
	var x322 uint32
	var x323 uint32
	x322, x323 = bits.Add32(x306, uint32(0x0), uint32(uint1(x321)))
	var x324 uint32
	var x325 uint32
	x324, x325 = bits.Add32(x308, uint32(0x0), uint32(uint1(x323)))
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x310, uint32(0x0), uint32(uint1(x325)))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x312, uint32(0x0), uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x314, uint32(0x0), uint32(uint1(x329)))
	var x332 uint32
	_, x332 = bits.Mul32(x316, 0xd2253531)
	var x334 uint32
	var x335 uint32
	x335, x334 = bits.Mul32(x332, 0xffffffff)
	var x336 uint32
	var x337 uint32
	x337, x336 = bits.Mul32(x332, 0xffffffff)
	var x338 uint32
	var x339 uint32
	x339, x338 = bits.Mul32(x332, 0xffffffff)
	var x340 uint32
	var x341 uint32
	x341, x340 = bits.Mul32(x332, 0xffffffff)
	var x342 uint32
	var x343 uint32
	x343, x342 = bits.Mul32(x332, 0xffffffff)
	var x344 uint32
	var x345 uint32
	x345, x344 = bits.Mul32(x332, 0xffffffff)
	var x346 uint32
	var x347 uint32
	x347, x346 = bits.Mul32(x332, 0xfffffffe)
	var x348 uint32
	var x349 uint32
	x349, x348 = bits.Mul32(x332, 0xfffffc2f)
	var x350 uint32
	var x351 uint32
	x350, x351 = bits.Add32(x349, x346, uint32(0x0))
	var x352 uint32
	var x353 uint32
	x352, x353 = bits.Add32(x347, x344, uint32(uint1(x351)))
	var x354 uint32
	var x355 uint32
	x354, x355 = bits.Add32(x345, x342, uint32(uint1(x353)))
	var x356 uint32
	var x357 uint32
	x356, x357 = bits.Add32(x343, x340, uint32(uint1(x355)))
	var x358 uint32
	var x359 uint32
	x358, x359 = bits.Add32(x341, x338, uint32(uint1(x357)))
	var x360 uint32
	var x361 uint32
	x360, x361 = bits.Add32(x339, x336, uint32(uint1(x359)))
	var x362 uint32
	var x363 uint32
	x362, x363 = bits.Add32(x337, x334, uint32(uint1(x361)))
	var x365 uint32
	_, x365 = bits.Add32(x316, x348, uint32(0x0))
	var x366 uint32
	var x367 uint32
	x366, x367 = bits.Add32(x318, x350, uint32(uint1(x365)))
	var x368 uint32
	var x369 uint32
	x368, x369 = bits.Add32(x320, x352, uint32(uint1(x367)))
	var x370 uint32
	var x371 uint32
	x370, x371 = bits.Add32(x322, x354, uint32(uint1(x369)))
	var x372 uint32
	var x373 uint32
	x372, x373 = bits.Add32(x324, x356, uint32(uint1(x371)))
	var x374 uint32
	var x375 uint32
	x374, x375 = bits.Add32(x326, x358, uint32(uint1(x373)))
	var x376 uint32
	var x377 uint32
	x376, x377 = bits.Add32(x328, x360, uint32(uint1(x375)))
	var x378 uint32
	var x379 uint32
	x378, x379 = bits.Add32(x330, x362, uint32(uint1(x377)))
	var x380 uint32
	var x381 uint32
	x380, x381 = bits.Add32((uint32(uint1(x331)) + uint32(uint1(x315))), (uint32(uint1(x363)) + x335), uint32(uint1(x379)))
	var x382 uint32
	var x383 uint32
	x382, x383 = bits.Add32(x366, arg1[6], uint32(0x0))
	var x384 uint32
	var x385 uint32
	x384, x385 = bits.Add32(x368, uint32(0x0), uint32(uint1(x383)))
	var x386 uint32
	var x387 uint32
	x386, x387 = bits.Add32(x370, uint32(0x0), uint32(uint1(x385)))
	var x388 uint32
	var x389 uint32
	x388, x389 = bits.Add32(x372, uint32(0x0), uint32(uint1(x387)))
	var x390 uint32
	var x391 uint32
	x390, x391 = bits.Add32(x374, uint32(0x0), uint32(uint1(x389)))
	var x392 uint32
	var x393 uint32
	x392, x393 = bits.Add32(x376, uint32(0x0), uint32(uint1(x391)))
	var x394 uint32
	var x395 uint32
	x394, x395 = bits.Add32(x378, uint32(0x0), uint32(uint1(x393)))
	var x396 uint32
	var x397 uint32
	x396, x397 = bits.Add32(x380, uint32(0x0), uint32(uint1(x395)))
	var x398 uint32
	_, x398 = bits.Mul32(x382, 0xd2253531)
	var x400 uint32
	var x401 uint32
	x401, x400 = bits.Mul32(x398, 0xffffffff)
	var x402 uint32
	var x403 uint32
	x403, x402 = bits.Mul32(x398, 0xffffffff)
	var x404 uint32
	var x405 uint32
	x405, x404 = bits.Mul32(x398, 0xffffffff)
	var x406 uint32
	var x407 uint32
	x407, x406 = bits.Mul32(x398, 0xffffffff)
	var x408 uint32
	var x409 uint32
	x409, x408 = bits.Mul32(x398, 0xffffffff)
	var x410 uint32
	var x411 uint32
	x411, x410 = bits.Mul32(x398, 0xffffffff)
	var x412 uint32
	var x413 uint32
	x413, x412 = bits.Mul32(x398, 0xfffffffe)
	var x414 uint32
	var x415 uint32
	x415, x414 = bits.Mul32(x398, 0xfffffc2f)
	var x416 uint32
	var x417 uint32
	x416, x417 = bits.Add32(x415, x412, uint32(0x0))
	var x418 uint32
	var x419 uint32
	x418, x419 = bits.Add32(x413, x410, uint32(uint1(x417)))
	var x420 uint32
	var x421 uint32
	x420, x421 = bits.Add32(x411, x408, uint32(uint1(x419)))
	var x422 uint32
	var x423 uint32
	x422, x423 = bits.Add32(x409, x406, uint32(uint1(x421)))
	var x424 uint32
	var x425 uint32
	x424, x425 = bits.Add32(x407, x404, uint32(uint1(x423)))
	var x426 uint32
	var x427 uint32
	x426, x427 = bits.Add32(x405, x402, uint32(uint1(x425)))
	var x428 uint32
	var x429 uint32
	x428, x429 = bits.Add32(x403, x400, uint32(uint1(x427)))
	var x431 uint32
	_, x431 = bits.Add32(x382, x414, uint32(0x0))
	var x432 uint32
	var x433 uint32
	x432, x433 = bits.Add32(x384, x416, uint32(uint1(x431)))
	var x434 uint32
	var x435 uint32
	x434, x435 = bits.Add32(x386, x418, uint32(uint1(x433)))
	var x436 uint32
	var x437 uint32
	x436, x437 = bits.Add32(x388, x420, uint32(uint1(x435)))
	var x438 uint32
	var x439 uint32
	x438, x439 = bits.Add32(x390, x422, uint32(uint1(x437)))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x392, x424, uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x394, x426, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x444, x445 = bits.Add32(x396, x428, uint32(uint1(x443)))
	var x446 uint32
	var x447 uint32
	x446, x447 = bits.Add32((uint32(uint1(x397)) + uint32(uint1(x381))), (uint32(uint1(x429)) + x401), uint32(uint1(x445)))
	var x448 uint32
	var x449 uint32
	x448, x449 = bits.Add32(x432, arg1[7], uint32(0x0))
	var x450 uint32
	var x451 uint32
	x450, x451 = bits.Add32(x434, uint32(0x0), uint32(uint1(x449)))
	var x452 uint32
	var x453 uint32
	x452, x453 = bits.Add32(x436, uint32(0x0), uint32(uint1(x451)))
	var x454 uint32
	var x455 uint32
	x454, x455 = bits.Add32(x438, uint32(0x0), uint32(uint1(x453)))
	var x456 uint32
	var x457 uint32
	x456, x457 = bits.Add32(x440, uint32(0x0), uint32(uint1(x455)))
	var x458 uint32
	var x459 uint32
	x458, x459 = bits.Add32(x442, uint32(0x0), uint32(uint1(x457)))
	var x460 uint32
	var x461 uint32
	x460, x461 = bits.Add32(x444, uint32(0x0), uint32(uint1(x459)))
	var x462 uint32
	var x463 uint32
	x462, x463 = bits.Add32(x446, uint32(0x0), uint32(uint1(x461)))
	var x464 uint32
	_, x464 = bits.Mul32(x448, 0xd2253531)
	var x466 uint32
	var x467 uint32
	x467, x466 = bits.Mul32(x464, 0xffffffff)
	var x468 uint32
	var x469 uint32
	x469, x468 = bits.Mul32(x464, 0xffffffff)
	var x470 uint32
	var x471 uint32
	x471, x470 = bits.Mul32(x464, 0xffffffff)
	var x472 uint32
	var x473 uint32
	x473, x472 = bits.Mul32(x464, 0xffffffff)
	var x474 uint32
	var x475 uint32
	x475, x474 = bits.Mul32(x464, 0xffffffff)
	var x476 uint32
	var x477 uint32
	x477, x476 = bits.Mul32(x464, 0xffffffff)
	var x478 uint32
	var x479 uint32
	x479, x478 = bits.Mul32(x464, 0xfffffffe)
	var x480 uint32
	var x481 uint32
	x481, x480 = bits.Mul32(x464, 0xfffffc2f)
	var x482 uint32
	var x483 uint32
	x482, x483 = bits.Add32(x481, x478, uint32(0x0))
	var x484 uint32
	var x485 uint32
	x484, x485 = bits.Add32(x479, x476, uint32(uint1(x483)))
	var x486 uint32
	var x487 uint32
	x486, x487 = bits.Add32(x477, x474, uint32(uint1(x485)))
	var x488 uint32
	var x489 uint32
	x488, x489 = bits.Add32(x475, x472, uint32(uint1(x487)))
	var x490 uint32
	var x491 uint32
	x490, x491 = bits.Add32(x473, x470, uint32(uint1(x489)))
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x471, x468, uint32(uint1(x491)))
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x469, x466, uint32(uint1(x493)))
	var x497 uint32
	_, x497 = bits.Add32(x448, x480, uint32(0x0))
	var x498 uint32
	var x499 uint32
	x498, x499 = bits.Add32(x450, x482, uint32(uint1(x497)))
	var x500 uint32
	var x501 uint32
	x500, x501 = bits.Add32(x452, x484, uint32(uint1(x499)))
	var x502 uint32
	var x503 uint32
	x502, x503 = bits.Add32(x454, x486, uint32(uint1(x501)))
	var x504 uint32
	var x505 uint32
	x504, x505 = bits.Add32(x456, x488, uint32(uint1(x503)))
	var x506 uint32
	var x507 uint32
	x506, x507 = bits.Add32(x458, x490, uint32(uint1(x505)))
	var x508 uint32
	var x509 uint32
	x508, x509 = bits.Add32(x460, x492, uint32(uint1(x507)))
	var x510 uint32
	var x511 uint32
	x510, x511 = bits.Add32(x462, x494, uint32(uint1(x509)))
	var x512 uint32
	var x513 uint32
	x512, x513 = bits.Add32((uint32(uint1(x463)) + uint32(uint1(x447))), (uint32(uint1(x495)) + x467), uint32(uint1(x511)))
	var x514 uint32
	var x515 uint32
	x514, x515 = bits.Sub32(x498, 0xfffffc2f, uint32(0x0))
	var x516 uint32
	var x517 uint32
	x516, x517 = bits.Sub32(x500, 0xfffffffe, uint32(uint1(x515)))
	var x518 uint32
	var x519 uint32
	x518, x519 = bits.Sub32(x502, 0xffffffff, uint32(uint1(x517)))
	var x520 uint32
	var x521 uint32
	x520, x521 = bits.Sub32(x504, 0xffffffff, uint32(uint1(x519)))
	var x522 uint32
	var x523 uint32
	x522, x523 = bits.Sub32(x506, 0xffffffff, uint32(uint1(x521)))
	var x524 uint32
	var x525 uint32
	x524, x525 = bits.Sub32(x508, 0xffffffff, uint32(uint1(x523)))
	var x526 uint32
	var x527 uint32
	x526, x527 = bits.Sub32(x510, 0xffffffff, uint32(uint1(x525)))
	var x528 uint32
	var x529 uint32
	x528, x529 = bits.Sub32(x512, 0xffffffff, uint32(uint1(x527)))
	var x531 uint32
	_, x531 = bits.Sub32(uint32(uint1(x513)), uint32(0x0), uint32(uint1(x529)))
	var x532 uint32
	cmovznzU32(&x532, uint1(x531), x514, x498)
	var x533 uint32
	cmovznzU32(&x533, uint1(x531), x516, x500)
	var x534 uint32
	cmovznzU32(&x534, uint1(x531), x518, x502)
	var x535 uint32
	cmovznzU32(&x535, uint1(x531), x520, x504)
	var x536 uint32
	cmovznzU32(&x536, uint1(x531), x522, x506)
	var x537 uint32
	cmovznzU32(&x537, uint1(x531), x524, x508)
	var x538 uint32
	cmovznzU32(&x538, uint1(x531), x526, x510)
	var x539 uint32
	cmovznzU32(&x539, uint1(x531), x528, x512)
	out1[0] = x532
	out1[1] = x533
	out1[2] = x534
	out1[3] = x535
	out1[4] = x536
	out1[5] = x537
	out1[6] = x538
	out1[7] = x539
}

// ToMontgomery translates a field element into the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = eval arg1 mod m
//   0 ≤ eval out1 < m
//
func ToMontgomery(out1 *MontgomeryDomainFieldElement, arg1 *NonMontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[7]
	x8 := arg1[0]
	var x9 uint32
	var x10 uint32
	x10, x9 = bits.Mul32(x8, 0x7a2)
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x8, 0xe90a1)
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Add32(x12, x9, uint32(0x0))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Add32(x10, x8, uint32(uint1(x14)))
	var x17 uint32
	_, x17 = bits.Mul32(x11, 0xd2253531)
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x17, 0xffffffff)
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x17, 0xffffffff)
	var x23 uint32
	var x24 uint32
	x24, x23 = bits.Mul32(x17, 0xffffffff)
	var x25 uint32
	var x26 uint32
	x26, x25 = bits.Mul32(x17, 0xffffffff)
	var x27 uint32
	var x28 uint32
	x28, x27 = bits.Mul32(x17, 0xffffffff)
	var x29 uint32
	var x30 uint32
	x30, x29 = bits.Mul32(x17, 0xffffffff)
	var x31 uint32
	var x32 uint32
	x32, x31 = bits.Mul32(x17, 0xfffffffe)
	var x33 uint32
	var x34 uint32
	x34, x33 = bits.Mul32(x17, 0xfffffc2f)
	var x35 uint32
	var x36 uint32
	x35, x36 = bits.Add32(x34, x31, uint32(0x0))
	var x37 uint32
	var x38 uint32
	x37, x38 = bits.Add32(x32, x29, uint32(uint1(x36)))
	var x39 uint32
	var x40 uint32
	x39, x40 = bits.Add32(x30, x27, uint32(uint1(x38)))
	var x41 uint32
	var x42 uint32
	x41, x42 = bits.Add32(x28, x25, uint32(uint1(x40)))
	var x43 uint32
	var x44 uint32
	x43, x44 = bits.Add32(x26, x23, uint32(uint1(x42)))
	var x45 uint32
	var x46 uint32
	x45, x46 = bits.Add32(x24, x21, uint32(uint1(x44)))
	var x47 uint32
	var x48 uint32
	x47, x48 = bits.Add32(x22, x19, uint32(uint1(x46)))
	var x50 uint32
	_, x50 = bits.Add32(x11, x33, uint32(0x0))
	var x51 uint32
	var x52 uint32
	x51, x52 = bits.Add32(x13, x35, uint32(uint1(x50)))
	var x53 uint32
	var x54 uint32
	x53, x54 = bits.Add32(x15, x37, uint32(uint1(x52)))
	var x55 uint32
	var x56 uint32
	x55, x56 = bits.Add32(uint32(uint1(x16)), x39, uint32(uint1(x54)))
	var x57 uint32
	var x58 uint32
	x57, x58 = bits.Add32(uint32(0x0), x41, uint32(uint1(x56)))
	var x59 uint32
	var x60 uint32
	x59, x60 = bits.Add32(uint32(0x0), x43, uint32(uint1(x58)))
	var x61 uint32
	var x62 uint32
	x61, x62 = bits.Add32(uint32(0x0), x45, uint32(uint1(x60)))
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(uint32(0x0), x47, uint32(uint1(x62)))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(uint32(0x0), (uint32(uint1(x48)) + x20), uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x68, x67 = bits.Mul32(x1, 0x7a2)
	var x69 uint32
	var x70 uint32
	x70, x69 = bits.Mul32(x1, 0xe90a1)
	var x71 uint32
	var x72 uint32
	x71, x72 = bits.Add32(x70, x67, uint32(0x0))
	var x73 uint32
	var x74 uint32
	x73, x74 = bits.Add32(x68, x1, uint32(uint1(x72)))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Add32(x51, x69, uint32(0x0))
	var x77 uint32
	var x78 uint32
	x77, x78 = bits.Add32(x53, x71, uint32(uint1(x76)))
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Add32(x55, x73, uint32(uint1(x78)))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Add32(x57, uint32(uint1(x74)), uint32(uint1(x80)))
	var x83 uint32
	var x84 uint32
	x83, x84 = bits.Add32(x59, uint32(0x0), uint32(uint1(x82)))
	var x85 uint32
	var x86 uint32
	x85, x86 = bits.Add32(x61, uint32(0x0), uint32(uint1(x84)))
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Add32(x63, uint32(0x0), uint32(uint1(x86)))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Add32(x65, uint32(0x0), uint32(uint1(x88)))
	var x91 uint32
	_, x91 = bits.Mul32(x75, 0xd2253531)
	var x93 uint32
	var x94 uint32
	x94, x93 = bits.Mul32(x91, 0xffffffff)
	var x95 uint32
	var x96 uint32
	x96, x95 = bits.Mul32(x91, 0xffffffff)
	var x97 uint32
	var x98 uint32
	x98, x97 = bits.Mul32(x91, 0xffffffff)
	var x99 uint32
	var x100 uint32
	x100, x99 = bits.Mul32(x91, 0xffffffff)
	var x101 uint32
	var x102 uint32
	x102, x101 = bits.Mul32(x91, 0xffffffff)
	var x103 uint32
	var x104 uint32
	x104, x103 = bits.Mul32(x91, 0xffffffff)
	var x105 uint32
	var x106 uint32
	x106, x105 = bits.Mul32(x91, 0xfffffffe)
	var x107 uint32
	var x108 uint32
	x108, x107 = bits.Mul32(x91, 0xfffffc2f)
	var x109 uint32
	var x110 uint32
	x109, x110 = bits.Add32(x108, x105, uint32(0x0))
	var x111 uint32
	var x112 uint32
	x111, x112 = bits.Add32(x106, x103, uint32(uint1(x110)))
	var x113 uint32
	var x114 uint32
	x113, x114 = bits.Add32(x104, x101, uint32(uint1(x112)))
	var x115 uint32
	var x116 uint32
	x115, x116 = bits.Add32(x102, x99, uint32(uint1(x114)))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x100, x97, uint32(uint1(x116)))
	var x119 uint32
	var x120 uint32
	x119, x120 = bits.Add32(x98, x95, uint32(uint1(x118)))
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x96, x93, uint32(uint1(x120)))
	var x124 uint32
	_, x124 = bits.Add32(x75, x107, uint32(0x0))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x77, x109, uint32(uint1(x124)))
	var x127 uint32
	var x128 uint32
	x127, x128 = bits.Add32(x79, x111, uint32(uint1(x126)))
	var x129 uint32
	var x130 uint32
	x129, x130 = bits.Add32(x81, x113, uint32(uint1(x128)))
	var x131 uint32
	var x132 uint32
	x131, x132 = bits.Add32(x83, x115, uint32(uint1(x130)))
	var x133 uint32
	var x134 uint32
	x133, x134 = bits.Add32(x85, x117, uint32(uint1(x132)))
	var x135 uint32
	var x136 uint32
	x135, x136 = bits.Add32(x87, x119, uint32(uint1(x134)))
	var x137 uint32
	var x138 uint32
	x137, x138 = bits.Add32(x89, x121, uint32(uint1(x136)))
	var x139 uint32
	var x140 uint32
	x139, x140 = bits.Add32((uint32(uint1(x90)) + uint32(uint1(x66))), (uint32(uint1(x122)) + x94), uint32(uint1(x138)))
	var x141 uint32
	var x142 uint32
	x142, x141 = bits.Mul32(x2, 0x7a2)
	var x143 uint32
	var x144 uint32
	x144, x143 = bits.Mul32(x2, 0xe90a1)
	var x145 uint32
	var x146 uint32
	x145, x146 = bits.Add32(x144, x141, uint32(0x0))
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x142, x2, uint32(uint1(x146)))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x125, x143, uint32(0x0))
	var x151 uint32
	var x152 uint32
	x151, x152 = bits.Add32(x127, x145, uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x129, x147, uint32(uint1(x152)))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x131, uint32(uint1(x148)), uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x133, uint32(0x0), uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x135, uint32(0x0), uint32(uint1(x158)))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x137, uint32(0x0), uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x139, uint32(0x0), uint32(uint1(x162)))
	var x165 uint32
	_, x165 = bits.Mul32(x149, 0xd2253531)
	var x167 uint32
	var x168 uint32
	x168, x167 = bits.Mul32(x165, 0xffffffff)
	var x169 uint32
	var x170 uint32
	x170, x169 = bits.Mul32(x165, 0xffffffff)
	var x171 uint32
	var x172 uint32
	x172, x171 = bits.Mul32(x165, 0xffffffff)
	var x173 uint32
	var x174 uint32
	x174, x173 = bits.Mul32(x165, 0xffffffff)
	var x175 uint32
	var x176 uint32
	x176, x175 = bits.Mul32(x165, 0xffffffff)
	var x177 uint32
	var x178 uint32
	x178, x177 = bits.Mul32(x165, 0xffffffff)
	var x179 uint32
	var x180 uint32
	x180, x179 = bits.Mul32(x165, 0xfffffffe)
	var x181 uint32
	var x182 uint32
	x182, x181 = bits.Mul32(x165, 0xfffffc2f)
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x182, x179, uint32(0x0))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x180, x177, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x178, x175, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x176, x173, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x174, x171, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x172, x169, uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x170, x167, uint32(uint1(x194)))
	var x198 uint32
	_, x198 = bits.Add32(x149, x181, uint32(0x0))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x151, x183, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x153, x185, uint32(uint1(x200)))
	var x203 uint32
	var x204 uint32
	x203, x204 = bits.Add32(x155, x187, uint32(uint1(x202)))
	var x205 uint32
	var x206 uint32
	x205, x206 = bits.Add32(x157, x189, uint32(uint1(x204)))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x159, x191, uint32(uint1(x206)))
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x161, x193, uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x163, x195, uint32(uint1(x210)))
	var x213 uint32
	var x214 uint32
	x213, x214 = bits.Add32((uint32(uint1(x164)) + uint32(uint1(x140))), (uint32(uint1(x196)) + x168), uint32(uint1(x212)))
	var x215 uint32
	var x216 uint32
	x216, x215 = bits.Mul32(x3, 0x7a2)
	var x217 uint32
	var x218 uint32
	x218, x217 = bits.Mul32(x3, 0xe90a1)
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x218, x215, uint32(0x0))
	var x221 uint32
	var x222 uint32
	x221, x222 = bits.Add32(x216, x3, uint32(uint1(x220)))
	var x223 uint32
	var x224 uint32
	x223, x224 = bits.Add32(x199, x217, uint32(0x0))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x201, x219, uint32(uint1(x224)))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x203, x221, uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x205, uint32(uint1(x222)), uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x207, uint32(0x0), uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x209, uint32(0x0), uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x211, uint32(0x0), uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x213, uint32(0x0), uint32(uint1(x236)))
	var x239 uint32
	_, x239 = bits.Mul32(x223, 0xd2253531)
	var x241 uint32
	var x242 uint32
	x242, x241 = bits.Mul32(x239, 0xffffffff)
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x239, 0xffffffff)
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x239, 0xffffffff)
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x239, 0xffffffff)
	var x249 uint32
	var x250 uint32
	x250, x249 = bits.Mul32(x239, 0xffffffff)
	var x251 uint32
	var x252 uint32
	x252, x251 = bits.Mul32(x239, 0xffffffff)
	var x253 uint32
	var x254 uint32
	x254, x253 = bits.Mul32(x239, 0xfffffffe)
	var x255 uint32
	var x256 uint32
	x256, x255 = bits.Mul32(x239, 0xfffffc2f)
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x256, x253, uint32(0x0))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x254, x251, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x252, x249, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x250, x247, uint32(uint1(x262)))
	var x265 uint32
	var x266 uint32
	x265, x266 = bits.Add32(x248, x245, uint32(uint1(x264)))
	var x267 uint32
	var x268 uint32
	x267, x268 = bits.Add32(x246, x243, uint32(uint1(x266)))
	var x269 uint32
	var x270 uint32
	x269, x270 = bits.Add32(x244, x241, uint32(uint1(x268)))
	var x272 uint32
	_, x272 = bits.Add32(x223, x255, uint32(0x0))
	var x273 uint32
	var x274 uint32
	x273, x274 = bits.Add32(x225, x257, uint32(uint1(x272)))
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x227, x259, uint32(uint1(x274)))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x229, x261, uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x231, x263, uint32(uint1(x278)))
	var x281 uint32
	var x282 uint32
	x281, x282 = bits.Add32(x233, x265, uint32(uint1(x280)))
	var x283 uint32
	var x284 uint32
	x283, x284 = bits.Add32(x235, x267, uint32(uint1(x282)))
	var x285 uint32
	var x286 uint32
	x285, x286 = bits.Add32(x237, x269, uint32(uint1(x284)))
	var x287 uint32
	var x288 uint32
	x287, x288 = bits.Add32((uint32(uint1(x238)) + uint32(uint1(x214))), (uint32(uint1(x270)) + x242), uint32(uint1(x286)))
	var x289 uint32
	var x290 uint32
	x290, x289 = bits.Mul32(x4, 0x7a2)
	var x291 uint32
	var x292 uint32
	x292, x291 = bits.Mul32(x4, 0xe90a1)
	var x293 uint32
	var x294 uint32
	x293, x294 = bits.Add32(x292, x289, uint32(0x0))
	var x295 uint32
	var x296 uint32
	x295, x296 = bits.Add32(x290, x4, uint32(uint1(x294)))
	var x297 uint32
	var x298 uint32
	x297, x298 = bits.Add32(x273, x291, uint32(0x0))
	var x299 uint32
	var x300 uint32
	x299, x300 = bits.Add32(x275, x293, uint32(uint1(x298)))
	var x301 uint32
	var x302 uint32
	x301, x302 = bits.Add32(x277, x295, uint32(uint1(x300)))
	var x303 uint32
	var x304 uint32
	x303, x304 = bits.Add32(x279, uint32(uint1(x296)), uint32(uint1(x302)))
	var x305 uint32
	var x306 uint32
	x305, x306 = bits.Add32(x281, uint32(0x0), uint32(uint1(x304)))
	var x307 uint32
	var x308 uint32
	x307, x308 = bits.Add32(x283, uint32(0x0), uint32(uint1(x306)))
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x285, uint32(0x0), uint32(uint1(x308)))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x287, uint32(0x0), uint32(uint1(x310)))
	var x313 uint32
	_, x313 = bits.Mul32(x297, 0xd2253531)
	var x315 uint32
	var x316 uint32
	x316, x315 = bits.Mul32(x313, 0xffffffff)
	var x317 uint32
	var x318 uint32
	x318, x317 = bits.Mul32(x313, 0xffffffff)
	var x319 uint32
	var x320 uint32
	x320, x319 = bits.Mul32(x313, 0xffffffff)
	var x321 uint32
	var x322 uint32
	x322, x321 = bits.Mul32(x313, 0xffffffff)
	var x323 uint32
	var x324 uint32
	x324, x323 = bits.Mul32(x313, 0xffffffff)
	var x325 uint32
	var x326 uint32
	x326, x325 = bits.Mul32(x313, 0xffffffff)
	var x327 uint32
	var x328 uint32
	x328, x327 = bits.Mul32(x313, 0xfffffffe)
	var x329 uint32
	var x330 uint32
	x330, x329 = bits.Mul32(x313, 0xfffffc2f)
	var x331 uint32
	var x332 uint32
	x331, x332 = bits.Add32(x330, x327, uint32(0x0))
	var x333 uint32
	var x334 uint32
	x333, x334 = bits.Add32(x328, x325, uint32(uint1(x332)))
	var x335 uint32
	var x336 uint32
	x335, x336 = bits.Add32(x326, x323, uint32(uint1(x334)))
	var x337 uint32
	var x338 uint32
	x337, x338 = bits.Add32(x324, x321, uint32(uint1(x336)))
	var x339 uint32
	var x340 uint32
	x339, x340 = bits.Add32(x322, x319, uint32(uint1(x338)))
	var x341 uint32
	var x342 uint32
	x341, x342 = bits.Add32(x320, x317, uint32(uint1(x340)))
	var x343 uint32
	var x344 uint32
	x343, x344 = bits.Add32(x318, x315, uint32(uint1(x342)))
	var x346 uint32
	_, x346 = bits.Add32(x297, x329, uint32(0x0))
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x299, x331, uint32(uint1(x346)))
	var x349 uint32
	var x350 uint32
	x349, x350 = bits.Add32(x301, x333, uint32(uint1(x348)))
	var x351 uint32
	var x352 uint32
	x351, x352 = bits.Add32(x303, x335, uint32(uint1(x350)))
	var x353 uint32
	var x354 uint32
	x353, x354 = bits.Add32(x305, x337, uint32(uint1(x352)))
	var x355 uint32
	var x356 uint32
	x355, x356 = bits.Add32(x307, x339, uint32(uint1(x354)))
	var x357 uint32
	var x358 uint32
	x357, x358 = bits.Add32(x309, x341, uint32(uint1(x356)))
	var x359 uint32
	var x360 uint32
	x359, x360 = bits.Add32(x311, x343, uint32(uint1(x358)))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32((uint32(uint1(x312)) + uint32(uint1(x288))), (uint32(uint1(x344)) + x316), uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x5, 0x7a2)
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x5, 0xe90a1)
	var x367 uint32
	var x368 uint32
	x367, x368 = bits.Add32(x366, x363, uint32(0x0))
	var x369 uint32
	var x370 uint32
	x369, x370 = bits.Add32(x364, x5, uint32(uint1(x368)))
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x347, x365, uint32(0x0))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x349, x367, uint32(uint1(x372)))
	var x375 uint32
	var x376 uint32
	x375, x376 = bits.Add32(x351, x369, uint32(uint1(x374)))
	var x377 uint32
	var x378 uint32
	x377, x378 = bits.Add32(x353, uint32(uint1(x370)), uint32(uint1(x376)))
	var x379 uint32
	var x380 uint32
	x379, x380 = bits.Add32(x355, uint32(0x0), uint32(uint1(x378)))
	var x381 uint32
	var x382 uint32
	x381, x382 = bits.Add32(x357, uint32(0x0), uint32(uint1(x380)))
	var x383 uint32
	var x384 uint32
	x383, x384 = bits.Add32(x359, uint32(0x0), uint32(uint1(x382)))
	var x385 uint32
	var x386 uint32
	x385, x386 = bits.Add32(x361, uint32(0x0), uint32(uint1(x384)))
	var x387 uint32
	_, x387 = bits.Mul32(x371, 0xd2253531)
	var x389 uint32
	var x390 uint32
	x390, x389 = bits.Mul32(x387, 0xffffffff)
	var x391 uint32
	var x392 uint32
	x392, x391 = bits.Mul32(x387, 0xffffffff)
	var x393 uint32
	var x394 uint32
	x394, x393 = bits.Mul32(x387, 0xffffffff)
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(x387, 0xffffffff)
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(x387, 0xffffffff)
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(x387, 0xffffffff)
	var x401 uint32
	var x402 uint32
	x402, x401 = bits.Mul32(x387, 0xfffffffe)
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(x387, 0xfffffc2f)
	var x405 uint32
	var x406 uint32
	x405, x406 = bits.Add32(x404, x401, uint32(0x0))
	var x407 uint32
	var x408 uint32
	x407, x408 = bits.Add32(x402, x399, uint32(uint1(x406)))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x400, x397, uint32(uint1(x408)))
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(x398, x395, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x396, x393, uint32(uint1(x412)))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x394, x391, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x392, x389, uint32(uint1(x416)))
	var x420 uint32
	_, x420 = bits.Add32(x371, x403, uint32(0x0))
	var x421 uint32
	var x422 uint32
	x421, x422 = bits.Add32(x373, x405, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x375, x407, uint32(uint1(x422)))
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x377, x409, uint32(uint1(x424)))
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x379, x411, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x381, x413, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x383, x415, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x385, x417, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32((uint32(uint1(x386)) + uint32(uint1(x362))), (uint32(uint1(x418)) + x390), uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x438, x437 = bits.Mul32(x6, 0x7a2)
	var x439 uint32
	var x440 uint32
	x440, x439 = bits.Mul32(x6, 0xe90a1)
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x440, x437, uint32(0x0))
	var x443 uint32
	var x444 uint32
	x443, x444 = bits.Add32(x438, x6, uint32(uint1(x442)))
	var x445 uint32
	var x446 uint32
	x445, x446 = bits.Add32(x421, x439, uint32(0x0))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x423, x441, uint32(uint1(x446)))
	var x449 uint32
	var x450 uint32
	x449, x450 = bits.Add32(x425, x443, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x427, uint32(uint1(x444)), uint32(uint1(x450)))
	var x453 uint32
	var x454 uint32
	x453, x454 = bits.Add32(x429, uint32(0x0), uint32(uint1(x452)))
	var x455 uint32
	var x456 uint32
	x455, x456 = bits.Add32(x431, uint32(0x0), uint32(uint1(x454)))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x433, uint32(0x0), uint32(uint1(x456)))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x435, uint32(0x0), uint32(uint1(x458)))
	var x461 uint32
	_, x461 = bits.Mul32(x445, 0xd2253531)
	var x463 uint32
	var x464 uint32
	x464, x463 = bits.Mul32(x461, 0xffffffff)
	var x465 uint32
	var x466 uint32
	x466, x465 = bits.Mul32(x461, 0xffffffff)
	var x467 uint32
	var x468 uint32
	x468, x467 = bits.Mul32(x461, 0xffffffff)
	var x469 uint32
	var x470 uint32
	x470, x469 = bits.Mul32(x461, 0xffffffff)
	var x471 uint32
	var x472 uint32
	x472, x471 = bits.Mul32(x461, 0xffffffff)
	var x473 uint32
	var x474 uint32
	x474, x473 = bits.Mul32(x461, 0xffffffff)
	var x475 uint32
	var x476 uint32
	x476, x475 = bits.Mul32(x461, 0xfffffffe)
	var x477 uint32
	var x478 uint32
	x478, x477 = bits.Mul32(x461, 0xfffffc2f)
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x478, x475, uint32(0x0))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x476, x473, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x474, x471, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x472, x469, uint32(uint1(x484)))
	var x487 uint32
	var x488 uint32
	x487, x488 = bits.Add32(x470, x467, uint32(uint1(x486)))
	var x489 uint32
	var x490 uint32
	x489, x490 = bits.Add32(x468, x465, uint32(uint1(x488)))
	var x491 uint32
	var x492 uint32
	x491, x492 = bits.Add32(x466, x463, uint32(uint1(x490)))
	var x494 uint32
	_, x494 = bits.Add32(x445, x477, uint32(0x0))
	var x495 uint32
	var x496 uint32
	x495, x496 = bits.Add32(x447, x479, uint32(uint1(x494)))
	var x497 uint32
	var x498 uint32
	x497, x498 = bits.Add32(x449, x481, uint32(uint1(x496)))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x451, x483, uint32(uint1(x498)))
	var x501 uint32
	var x502 uint32
	x501, x502 = bits.Add32(x453, x485, uint32(uint1(x500)))
	var x503 uint32
	var x504 uint32
	x503, x504 = bits.Add32(x455, x487, uint32(uint1(x502)))
	var x505 uint32
	var x506 uint32
	x505, x506 = bits.Add32(x457, x489, uint32(uint1(x504)))
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x459, x491, uint32(uint1(x506)))
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32((uint32(uint1(x460)) + uint32(uint1(x436))), (uint32(uint1(x492)) + x464), uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x512, x511 = bits.Mul32(x7, 0x7a2)
	var x513 uint32
	var x514 uint32
	x514, x513 = bits.Mul32(x7, 0xe90a1)
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x514, x511, uint32(0x0))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x512, x7, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x495, x513, uint32(0x0))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x497, x515, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x499, x517, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x501, uint32(uint1(x518)), uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x503, uint32(0x0), uint32(uint1(x526)))
	var x529 uint32
	var x530 uint32
	x529, x530 = bits.Add32(x505, uint32(0x0), uint32(uint1(x528)))
	var x531 uint32
	var x532 uint32
	x531, x532 = bits.Add32(x507, uint32(0x0), uint32(uint1(x530)))
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x509, uint32(0x0), uint32(uint1(x532)))
	var x535 uint32
	_, x535 = bits.Mul32(x519, 0xd2253531)
	var x537 uint32
	var x538 uint32
	x538, x537 = bits.Mul32(x535, 0xffffffff)
	var x539 uint32
	var x540 uint32
	x540, x539 = bits.Mul32(x535, 0xffffffff)
	var x541 uint32
	var x542 uint32
	x542, x541 = bits.Mul32(x535, 0xffffffff)
	var x543 uint32
	var x544 uint32
	x544, x543 = bits.Mul32(x535, 0xffffffff)
	var x545 uint32
	var x546 uint32
	x546, x545 = bits.Mul32(x535, 0xffffffff)
	var x547 uint32
	var x548 uint32
	x548, x547 = bits.Mul32(x535, 0xffffffff)
	var x549 uint32
	var x550 uint32
	x550, x549 = bits.Mul32(x535, 0xfffffffe)
	var x551 uint32
	var x552 uint32
	x552, x551 = bits.Mul32(x535, 0xfffffc2f)
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x552, x549, uint32(0x0))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x550, x547, uint32(uint1(x554)))
	var x557 uint32
	var x558 uint32
	x557, x558 = bits.Add32(x548, x545, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Add32(x546, x543, uint32(uint1(x558)))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Add32(x544, x541, uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Add32(x542, x539, uint32(uint1(x562)))
	var x565 uint32
	var x566 uint32
	x565, x566 = bits.Add32(x540, x537, uint32(uint1(x564)))
	var x568 uint32
	_, x568 = bits.Add32(x519, x551, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x521, x553, uint32(uint1(x568)))
	var x571 uint32
	var x572 uint32
	x571, x572 = bits.Add32(x523, x555, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x525, x557, uint32(uint1(x572)))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x527, x559, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x529, x561, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x531, x563, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x533, x565, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32((uint32(uint1(x534)) + uint32(uint1(x510))), (uint32(uint1(x566)) + x538), uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Sub32(x569, 0xfffffc2f, uint32(0x0))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Sub32(x571, 0xfffffffe, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Sub32(x573, 0xffffffff, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Sub32(x575, 0xffffffff, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Sub32(x577, 0xffffffff, uint32(uint1(x592)))
	var x595 uint32
	var x596 uint32
	x595, x596 = bits.Sub32(x579, 0xffffffff, uint32(uint1(x594)))
	var x597 uint32
	var x598 uint32
	x597, x598 = bits.Sub32(x581, 0xffffffff, uint32(uint1(x596)))
	var x599 uint32
	var x600 uint32
	x599, x600 = bits.Sub32(x583, 0xffffffff, uint32(uint1(x598)))
	var x602 uint32
	_, x602 = bits.Sub32(uint32(uint1(x584)), uint32(0x0), uint32(uint1(x600)))
	var x603 uint32
	cmovznzU32(&x603, uint1(x602), x585, x569)
	var x604 uint32
	cmovznzU32(&x604, uint1(x602), x587, x571)
	var x605 uint32
	cmovznzU32(&x605, uint1(x602), x589, x573)
	var x606 uint32
	cmovznzU32(&x606, uint1(x602), x591, x575)
	var x607 uint32
	cmovznzU32(&x607, uint1(x602), x593, x577)
	var x608 uint32
	cmovznzU32(&x608, uint1(x602), x595, x579)
	var x609 uint32
	cmovznzU32(&x609, uint1(x602), x597, x581)
	var x610 uint32
	cmovznzU32(&x610, uint1(x602), x599, x583)
	out1[0] = x603
	out1[1] = x604
	out1[2] = x605
	out1[3] = x606
	out1[4] = x607
	out1[5] = x608
	out1[6] = x609
	out1[7] = x610
}

// Nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func Nonzero(out1 *uint32, arg1 *[8]uint32) {
	x1 := (arg1[0] | (arg1[1] | (arg1[2] | (arg1[3] | (arg1[4] | (arg1[5] | (arg1[6] | arg1[7])))))))
	*out1 = x1
}

// Selectznz is a multi-limb conditional select.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Selectznz(out1 *[8]uint32, arg1 uint1, arg2 *[8]uint32, arg3 *[8]uint32) {
	var x1 uint32
	cmovznzU32(&x1, arg1, arg2[0], arg3[0])
	var x2 uint32
	cmovznzU32(&x2, arg1, arg2[1], arg3[1])
	var x3 uint32
	cmovznzU32(&x3, arg1, arg2[2], arg3[2])
	var x4 uint32
	cmovznzU32(&x4, arg1, arg2[3], arg3[3])
	var x5 uint32
	cmovznzU32(&x5, arg1, arg2[4], arg3[4])
	var x6 uint32
	cmovznzU32(&x6, arg1, arg2[5], arg3[5])
	var x7 uint32
	cmovznzU32(&x7, arg1, arg2[6], arg3[6])
	var x8 uint32
	cmovznzU32(&x8, arg1, arg2[7], arg3[7])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
}

// ToBytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
func ToBytes(out1 *[32]uint8, arg1 *[8]uint32) {
	x1 := arg1[7]
	x2 := arg1[6]
	x3 := arg1[5]
	x4 := arg1[4]
	x5 := arg1[3]
	x6 := arg1[2]
	x7 := arg1[1]
	x8 := arg1[0]
	x9 := (uint8(x8) & 0xff)
	x10 := (x8 >> 8)
	x11 := (uint8(x10) & 0xff)
	x12 := (x10 >> 8)
	x13 := (uint8(x12) & 0xff)
	x14 := uint8((x12 >> 8))
	x15 := (uint8(x7) & 0xff)
	x16 := (x7 >> 8)
	x17 := (uint8(x16) & 0xff)
	x18 := (x16 >> 8)
	x19 := (uint8(x18) & 0xff)
	x20 := uint8((x18 >> 8))
	x21 := (uint8(x6) & 0xff)
	x22 := (x6 >> 8)
	x23 := (uint8(x22) & 0xff)
	x24 := (x22 >> 8)
	x25 := (uint8(x24) & 0xff)
	x26 := uint8((x24 >> 8))
	x27 := (uint8(x5) & 0xff)
	x28 := (x5 >> 8)
	x29 := (uint8(x28) & 0xff)
	x30 := (x28 >> 8)
	x31 := (uint8(x30) & 0xff)
	x32 := uint8((x30 >> 8))
	x33 := (uint8(x4) & 0xff)
	x34 := (x4 >> 8)
	x35 := (uint8(x34) & 0xff)
	x36 := (x34 >> 8)
	x37 := (uint8(x36) & 0xff)
	x38 := uint8((x36 >> 8))
	x39 := (uint8(x3) & 0xff)
	x40 := (x3 >> 8)
	x41 := (uint8(x40) & 0xff)
	x42 := (x40 >> 8)
	x43 := (uint8(x42) & 0xff)
	x44 := uint8((x42 >> 8))
	x45 := (uint8(x2) & 0xff)
	x46 := (x2 >> 8)
	x47 := (uint8(x46) & 0xff)
	x48 := (x46 >> 8)
	x49 := (uint8(x48) & 0xff)
	x50 := uint8((x48 >> 8))
	x51 := (uint8(x1) & 0xff)
	x52 := (x1 >> 8)
	x53 := (uint8(x52) & 0xff)
	x54 := (x52 >> 8)
	x55 := (uint8(x54) & 0xff)
	x56 := uint8((x54 >> 8))
	out1[0] = x9
	out1[1] = x11
	out1[2] = x13
	out1[3] = x14
	out1[4] = x15
	out1[5] = x17
	out1[6] = x19
	out1[7] = x20
	out1[8] = x21
	out1[9] = x23
	out1[10] = x25
	out1[11] = x26
	out1[12] = x27
	out1[13] = x29
	out1[14] = x31
	out1[15] = x32
	out1[16] = x33
	out1[17] = x35
	out1[18] = x37
	out1[19] = x38
	out1[20] = x39
	out1[21] = x41
	out1[22] = x43
	out1[23] = x44
	out1[24] = x45
	out1[25] = x47
	out1[26] = x49
	out1[27] = x50
	out1[28] = x51
	out1[29] = x53
	out1[30] = x55
	out1[31] = x56
}

// FromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Preconditions:
//   0 ≤ bytes_eval arg1 < m
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func FromBytes(out1 *[8]uint32, arg1 *[32]uint8) {
	x1 := (uint32(arg1[31]) << 24)
	x2 := (uint32(arg1[30]) << 16)
	x3 := (uint32(arg1[29]) << 8)
	x4 := arg1[28]
	x5 := (uint32(arg1[27]) << 24)
	x6 := (uint32(arg1[26]) << 16)
	x7 := (uint32(arg1[25]) << 8)
	x8 := arg1[24]
	x9 := (uint32(arg1[23]) << 24)
	x10 := (uint32(arg1[22]) << 16)
	x11 := (uint32(arg1[21]) << 8)
	x12 := arg1[20]
	x13 := (uint32(arg1[19]) << 24)
	x14 := (uint32(arg1[18]) << 16)
	x15 := (uint32(arg1[17]) << 8)
	x16 := arg1[16]
	x17 := (uint32(arg1[15]) << 24)
	x18 := (uint32(arg1[14]) << 16)
	x19 := (uint32(arg1[13]) << 8)
	x20 := arg1[12]
	x21 := (uint32(arg1[11]) << 24)
	x22 := (uint32(arg1[10]) << 16)
	x23 := (uint32(arg1[9]) << 8)
	x24 := arg1[8]
	x25 := (uint32(arg1[7]) << 24)
	x26 := (uint32(arg1[6]) << 16)
	x27 := (uint32(arg1[5]) << 8)
	x28 := arg1[4]
	x29 := (uint32(arg1[3]) << 24)
	x30 := (uint32(arg1[2]) << 16)
	x31 := (uint32(arg1[1]) << 8)
	x32 := arg1[0]
	x33 := (x31 + uint32(x32))
	x34 := (x30 + x33)
	x35 := (x29 + x34)
	x36 := (x27 + uint32(x28))
	x37 := (x26 + x36)
	x38 := (x25 + x37)
	x39 := (x23 + uint32(x24))
	x40 := (x22 + x39)
	x41 := (x21 + x40)
	x42 := (x19 + uint32(x20))
	x43 := (x18 + x42)
	x44 := (x17 + x43)
	x45 := (x15 + uint32(x16))
	x46 := (x14 + x45)
	x47 := (x13 + x46)
	x48 := (x11 + uint32(x12))
	x49 := (x10 + x48)
	x50 := (x9 + x49)
	x51 := (x7 + uint32(x8))
	x52 := (x6 + x51)
	x53 := (x5 + x52)
	x54 := (x3 + uint32(x4))
	x55 := (x2 + x54)
	x56 := (x1 + x55)
	out1[0] = x35
	out1[1] = x38
	out1[2] = x41
	out1[3] = x44
	out1[4] = x47
	out1[5] = x50
	out1[6] = x53
	out1[7] = x56
}

// SetOne returns the field element one in the Montgomery domain.
//
// Postconditions:
//   eval (from_montgomery out1) mod m = 1 mod m
//   0 ≤ eval out1 < m
//
func SetOne(out1 *MontgomeryDomainFieldElement) {
	out1[0] = 0x3d1
	out1[1] = uint32(0x1)
	out1[2] = uint32(0x0)
	out1[3] = uint32(0x0)
	out1[4] = uint32(0x0)
	out1[5] = uint32(0x0)
	out1[6] = uint32(0x0)
	out1[7] = uint32(0x0)
}

// Msat returns the saturated representation of the prime modulus.
//
// Postconditions:
//   twos_complement_eval out1 = m
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Msat(out1 *[9]uint32) {
	out1[0] = 0xfffffc2f
	out1[1] = 0xfffffffe
	out1[2] = 0xffffffff
	out1[3] = 0xffffffff
	out1[4] = 0xffffffff
	out1[5] = 0xffffffff
	out1[6] = 0xffffffff
	out1[7] = 0xffffffff
	out1[8] = uint32(0x0)
}

// The function SatFromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func SatFromBytes(out1 *[9]uint32, arg1 *[32]uint8) {
	x1 := (uint32(arg1[31]) << 24)
	x2 := (uint32(arg1[30]) << 16)
	x3 := (uint32(arg1[29]) << 8)
	x4 := arg1[28]
	x5 := (uint32(arg1[27]) << 24)
	x6 := (uint32(arg1[26]) << 16)
	x7 := (uint32(arg1[25]) << 8)
	x8 := arg1[24]
	x9 := (uint32(arg1[23]) << 24)
	x10 := (uint32(arg1[22]) << 16)
	x11 := (uint32(arg1[21]) << 8)
	x12 := arg1[20]
	x13 := (uint32(arg1[19]) << 24)
	x14 := (uint32(arg1[18]) << 16)
	x15 := (uint32(arg1[17]) << 8)
	x16 := arg1[16]
	x17 := (uint32(arg1[15]) << 24)
	x18 := (uint32(arg1[14]) << 16)
	x19 := (uint32(arg1[13]) << 8)
	x20 := arg1[12]
	x21 := (uint32(arg1[11]) << 24)
	x22 := (uint32(arg1[10]) << 16)
	x23 := (uint32(arg1[9]) << 8)
	x24 := arg1[8]
	x25 := (uint32(arg1[7]) << 24)
	x26 := (uint32(arg1[6]) << 16)
	x27 := (uint32(arg1[5]) << 8)
	x28 := arg1[4]
	x29 := (uint32(arg1[3]) << 24)
	x30 := (uint32(arg1[2]) << 16)
	x31 := (uint32(arg1[1]) << 8)
	x32 := arg1[0]
	x33 := (x31 + uint32(x32))
	x34 := (x30 + x33)
	x35 := (x29 + x34)
	x36 := (x27 + uint32(x28))
	x37 := (x26 + x36)
	x38 := (x25 + x37)
	x39 := (x23 + uint32(x24))
	x40 := (x22 + x39)
	x41 := (x21 + x40)
	x42 := (x19 + uint32(x20))
	x43 := (x18 + x42)
	x44 := (x17 + x43)
	x45 := (x15 + uint32(x16))
	x46 := (x14 + x45)
	x47 := (x13 + x46)
	x48 := (x11 + uint32(x12))
	x49 := (x10 + x48)
	x50 := (x9 + x49)
	x51 := (x7 + uint32(x8))
	x52 := (x6 + x51)
	x53 := (x5 + x52)
	x54 := (x3 + uint32(x4))
	x55 := (x2 + x54)
	x56 := (x1 + x55)
	out1[0] = x35
	out1[1] = x38
	out1[2] = x41
	out1[3] = x44
	out1[4] = x47
	out1[5] = x50
	out1[6] = x53
	out1[7] = x56
	out1[8] = uint32(0x0)
}

// Divstep computes a divstep.
//
// Preconditions:
//   0 ≤ eval arg4 < m
//   0 ≤ eval arg5 < m
// Postconditions:
//   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
//   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
//   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
//   eval (from_montgomery out4) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval (from_montgomery arg5)) mod m else (2 * eval (from_montgomery arg4)) mod m)
//   eval (from_montgomery out5) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval (from_montgomery arg4) - eval (from_montgomery arg4)) mod m else (eval (from_montgomery arg5) + (twos_complement_eval arg3 mod 2) * eval (from_montgomery arg4)) mod m)
//   0 ≤ eval out5 < m
//   0 ≤ eval out4 < m
//   0 ≤ eval out2 < m
//   0 ≤ eval out3 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg4: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg5: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out4: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out5: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Divstep(out1 *uint32, out2 *[9]uint32, out3 *[9]uint32, out4 *[8]uint32, out5 *[8]uint32, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32, arg4 *[8]uint32, arg5 *[8]uint32) {
	var x1 uint32
	x1, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	x3 := (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1))
	var x4 uint32
	x4, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	var x6 uint32
	cmovznzU32(&x6, x3, arg1, x4)
	var x7 uint32
	cmovznzU32(&x7, x3, arg2[0], arg3[0])
	var x8 uint32
	cmovznzU32(&x8, x3, arg2[1], arg3[1])
	var x9 uint32
	cmovznzU32(&x9, x3, arg2[2], arg3[2])
	var x10 uint32
	cmovznzU32(&x10, x3, arg2[3], arg3[3])
	var x11 uint32
	cmovznzU32(&x11, x3, arg2[4], arg3[4])
	var x12 uint32
	cmovznzU32(&x12, x3, arg2[5], arg3[5])
	var x13 uint32
	cmovznzU32(&x13, x3, arg2[6], arg3[6])
	var x14 uint32
	cmovznzU32(&x14, x3, arg2[7], arg3[7])
	var x15 uint32
	cmovznzU32(&x15, x3, arg2[8], arg3[8])
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(uint32(0x1), (^arg2[0]), uint32(0x0))
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(uint32(0x0), (^arg2[1]), uint32(uint1(x17)))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(uint32(0x0), (^arg2[2]), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(uint32(0x0), (^arg2[3]), uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(uint32(0x0), (^arg2[4]), uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(uint32(0x0), (^arg2[5]), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(uint32(0x0), (^arg2[6]), uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(uint32(0x0), (^arg2[7]), uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(uint32(0x0), (^arg2[8]), uint32(uint1(x31)))
	var x34 uint32
	cmovznzU32(&x34, x3, arg3[0], x16)
	var x35 uint32
	cmovznzU32(&x35, x3, arg3[1], x18)
	var x36 uint32
	cmovznzU32(&x36, x3, arg3[2], x20)
	var x37 uint32
	cmovznzU32(&x37, x3, arg3[3], x22)
	var x38 uint32
	cmovznzU32(&x38, x3, arg3[4], x24)
	var x39 uint32
	cmovznzU32(&x39, x3, arg3[5], x26)
	var x40 uint32
	cmovznzU32(&x40, x3, arg3[6], x28)
	var x41 uint32
	cmovznzU32(&x41, x3, arg3[7], x30)
	var x42 uint32
	cmovznzU32(&x42, x3, arg3[8], x32)
	var x43 uint32
	cmovznzU32(&x43, x3, arg4[0], arg5[0])
	var x44 uint32
	cmovznzU32(&x44, x3, arg4[1], arg5[1])
	var x45 uint32
	cmovznzU32(&x45, x3, arg4[2], arg5[2])
	var x46 uint32
	cmovznzU32(&x46, x3, arg4[3], arg5[3])
	var x47 uint32
	cmovznzU32(&x47, x3, arg4[4], arg5[4])
	var x48 uint32
	cmovznzU32(&x48, x3, arg4[5], arg5[5])
	var x49 uint32
	cmovznzU32(&x49, x3, arg4[6], arg5[6])
	var x50 uint32
	cmovznzU32(&x50, x3, arg4[7], arg5[7])
	var x51 uint32
	var x52 uint32
	x51, x52 = bits.Add32(x43, x43, uint32(0x0))
	var x53 uint32
	var x54 uint32
	x53, x54 = bits.Add32(x44, x44, uint32(uint1(x52)))
	var x55 uint32
	var x56 uint32
	x55, x56 = bits.Add32(x45, x45, uint32(uint1(x54)))
	var x57 uint32
	var x58 uint32
	x57, x58 = bits.Add32(x46, x46, uint32(uint1(x56)))
	var x59 uint32
	var x60 uint32
	x59, x60 = bits.Add32(x47, x47, uint32(uint1(x58)))
	var x61 uint32
	var x62 uint32
	x61, x62 = bits.Add32(x48, x48, uint32(uint1(x60)))
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(x49, x49, uint32(uint1(x62)))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(x50, x50, uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x67, x68 = bits.Sub32(x51, 0xfffffc2f, uint32(0x0))
	var x69 uint32
	var x70 uint32
	x69, x70 = bits.Sub32(x53, 0xfffffffe, uint32(uint1(x68)))
	var x71 uint32
	var x72 uint32
	x71, x72 = bits.Sub32(x55, 0xffffffff, uint32(uint1(x70)))
	var x73 uint32
	var x74 uint32
	x73, x74 = bits.Sub32(x57, 0xffffffff, uint32(uint1(x72)))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Sub32(x59, 0xffffffff, uint32(uint1(x74)))
	var x77 uint32
	var x78 uint32
	x77, x78 = bits.Sub32(x61, 0xffffffff, uint32(uint1(x76)))
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Sub32(x63, 0xffffffff, uint32(uint1(x78)))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Sub32(x65, 0xffffffff, uint32(uint1(x80)))
	var x84 uint32
	_, x84 = bits.Sub32(uint32(uint1(x66)), uint32(0x0), uint32(uint1(x82)))
	x85 := arg4[7]
	x86 := arg4[6]
	x87 := arg4[5]
	x88 := arg4[4]
	x89 := arg4[3]
	x90 := arg4[2]
	x91 := arg4[1]
	x92 := arg4[0]
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Sub32(uint32(0x0), x92, uint32(0x0))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Sub32(uint32(0x0), x91, uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Sub32(uint32(0x0), x90, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Sub32(uint32(0x0), x89, uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Sub32(uint32(0x0), x88, uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x103, x104 = bits.Sub32(uint32(0x0), x87, uint32(uint1(x102)))
	var x105 uint32
	var x106 uint32
	x105, x106 = bits.Sub32(uint32(0x0), x86, uint32(uint1(x104)))
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Sub32(uint32(0x0), x85, uint32(uint1(x106)))
	var x109 uint32
	cmovznzU32(&x109, uint1(x108), uint32(0x0), 0xffffffff)
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x93, (x109 & 0xfffffc2f), uint32(0x0))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x95, (x109 & 0xfffffffe), uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x97, x109, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x99, x109, uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(x101, x109, uint32(uint1(x117)))
	var x120 uint32
	var x121 uint32
	x120, x121 = bits.Add32(x103, x109, uint32(uint1(x119)))
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x105, x109, uint32(uint1(x121)))
	var x124 uint32
	x124, _ = bits.Add32(x107, x109, uint32(uint1(x123)))
	var x126 uint32
	cmovznzU32(&x126, x3, arg5[0], x110)
	var x127 uint32
	cmovznzU32(&x127, x3, arg5[1], x112)
	var x128 uint32
	cmovznzU32(&x128, x3, arg5[2], x114)
	var x129 uint32
	cmovznzU32(&x129, x3, arg5[3], x116)
	var x130 uint32
	cmovznzU32(&x130, x3, arg5[4], x118)
	var x131 uint32
	cmovznzU32(&x131, x3, arg5[5], x120)
	var x132 uint32
	cmovznzU32(&x132, x3, arg5[6], x122)
	var x133 uint32
	cmovznzU32(&x133, x3, arg5[7], x124)
	x134 := (uint1(x34) & 0x1)
	var x135 uint32
	cmovznzU32(&x135, x134, uint32(0x0), x7)
	var x136 uint32
	cmovznzU32(&x136, x134, uint32(0x0), x8)
	var x137 uint32
	cmovznzU32(&x137, x134, uint32(0x0), x9)
	var x138 uint32
	cmovznzU32(&x138, x134, uint32(0x0), x10)
	var x139 uint32
	cmovznzU32(&x139, x134, uint32(0x0), x11)
	var x140 uint32
	cmovznzU32(&x140, x134, uint32(0x0), x12)
	var x141 uint32
	cmovznzU32(&x141, x134, uint32(0x0), x13)
	var x142 uint32
	cmovznzU32(&x142, x134, uint32(0x0), x14)
	var x143 uint32
	cmovznzU32(&x143, x134, uint32(0x0), x15)
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Add32(x34, x135, uint32(0x0))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Add32(x35, x136, uint32(uint1(x145)))
	var x148 uint32
	var x149 uint32
	x148, x149 = bits.Add32(x36, x137, uint32(uint1(x147)))
	var x150 uint32
	var x151 uint32
	x150, x151 = bits.Add32(x37, x138, uint32(uint1(x149)))
	var x152 uint32
	var x153 uint32
	x152, x153 = bits.Add32(x38, x139, uint32(uint1(x151)))
	var x154 uint32
	var x155 uint32
	x154, x155 = bits.Add32(x39, x140, uint32(uint1(x153)))
	var x156 uint32
	var x157 uint32
	x156, x157 = bits.Add32(x40, x141, uint32(uint1(x155)))
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x41, x142, uint32(uint1(x157)))
	var x160 uint32
	x160, _ = bits.Add32(x42, x143, uint32(uint1(x159)))
	var x162 uint32
	cmovznzU32(&x162, x134, uint32(0x0), x43)
	var x163 uint32
	cmovznzU32(&x163, x134, uint32(0x0), x44)
	var x164 uint32
	cmovznzU32(&x164, x134, uint32(0x0), x45)
	var x165 uint32
	cmovznzU32(&x165, x134, uint32(0x0), x46)
	var x166 uint32
	cmovznzU32(&x166, x134, uint32(0x0), x47)
	var x167 uint32
	cmovznzU32(&x167, x134, uint32(0x0), x48)
	var x168 uint32
	cmovznzU32(&x168, x134, uint32(0x0), x49)
	var x169 uint32
	cmovznzU32(&x169, x134, uint32(0x0), x50)
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x126, x162, uint32(0x0))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x127, x163, uint32(uint1(x171)))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x128, x164, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x129, x165, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x130, x166, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x131, x167, uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32(x132, x168, uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x133, x169, uint32(uint1(x183)))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Sub32(x170, 0xfffffc2f, uint32(0x0))
	var x188 uint32
	var x189 uint32
	x188, x189 = bits.Sub32(x172, 0xfffffffe, uint32(uint1(x187)))
	var x190 uint32
	var x191 uint32
	x190, x191 = bits.Sub32(x174, 0xffffffff, uint32(uint1(x189)))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Sub32(x176, 0xffffffff, uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x194, x195 = bits.Sub32(x178, 0xffffffff, uint32(uint1(x193)))
	var x196 uint32
	var x197 uint32
	x196, x197 = bits.Sub32(x180, 0xffffffff, uint32(uint1(x195)))
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Sub32(x182, 0xffffffff, uint32(uint1(x197)))
	var x200 uint32
	var x201 uint32
	x200, x201 = bits.Sub32(x184, 0xffffffff, uint32(uint1(x199)))
	var x203 uint32
	_, x203 = bits.Sub32(uint32(uint1(x185)), uint32(0x0), uint32(uint1(x201)))
	x204 := (uint32((uint64(x6) + uint64(0x1))) & 0xffffffff)
	x205 := ((x144 >> 1) | ((x146 << 31) & 0xffffffff))
	x206 := ((x146 >> 1) | ((x148 << 31) & 0xffffffff))
	x207 := ((x148 >> 1) | ((x150 << 31) & 0xffffffff))
	x208 := ((x150 >> 1) | ((x152 << 31) & 0xffffffff))
	x209 := ((x152 >> 1) | ((x154 << 31) & 0xffffffff))
	x210 := ((x154 >> 1) | ((x156 << 31) & 0xffffffff))
	x211 := ((x156 >> 1) | ((x158 << 31) & 0xffffffff))
	x212 := ((x158 >> 1) | ((x160 << 31) & 0xffffffff))
	x213 := ((x160 & 0x80000000) | (x160 >> 1))
	var x214 uint32
	cmovznzU32(&x214, uint1(x84), x67, x51)
	var x215 uint32
	cmovznzU32(&x215, uint1(x84), x69, x53)
	var x216 uint32
	cmovznzU32(&x216, uint1(x84), x71, x55)
	var x217 uint32
	cmovznzU32(&x217, uint1(x84), x73, x57)
	var x218 uint32
	cmovznzU32(&x218, uint1(x84), x75, x59)
	var x219 uint32
	cmovznzU32(&x219, uint1(x84), x77, x61)
	var x220 uint32
	cmovznzU32(&x220, uint1(x84), x79, x63)
	var x221 uint32
	cmovznzU32(&x221, uint1(x84), x81, x65)
	var x222 uint32
	cmovznzU32(&x222, uint1(x203), x186, x170)
	var x223 uint32
	cmovznzU32(&x223, uint1(x203), x188, x172)
	var x224 uint32
	cmovznzU32(&x224, uint1(x203), x190, x174)
	var x225 uint32
	cmovznzU32(&x225, uint1(x203), x192, x176)
	var x226 uint32
	cmovznzU32(&x226, uint1(x203), x194, x178)
	var x227 uint32
	cmovznzU32(&x227, uint1(x203), x196, x180)
	var x228 uint32
	cmovznzU32(&x228, uint1(x203), x198, x182)
	var x229 uint32
	cmovznzU32(&x229, uint1(x203), x200, x184)
	*out1 = x204
	out2[0] = x7
	out2[1] = x8
	out2[2] = x9
	out2[3] = x10
	out2[4] = x11
	out2[5] = x12
	out2[6] = x13
	out2[7] = x14
	out2[8] = x15
	out3[0] = x205
	out3[1] = x206
	out3[2] = x207
	out3[3] = x208
	out3[4] = x209
	out3[5] = x210
	out3[6] = x211
	out3[7] = x212
	out3[8] = x213
	out4[0] = x214
	out4[1] = x215
	out4[2] = x216
	out4[3] = x217
	out4[4] = x218
	out4[5] = x219
	out4[6] = x220
	out4[7] = x221
	out5[0] = x222
	out5[1] = x223
	out5[2] = x224
	out5[3] = x225
	out5[4] = x226
	out5[5] = x227
	out5[6] = x228
	out5[7] = x229
}

// DivstepPrecomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func DivstepPrecomp(out1 *[8]uint32) {
	out1[0] = 0x8000000
	out1[1] = uint32(0x0)
	out1[2] = uint32(0x0)
	out1[3] = uint32(0x0)
	out1[4] = uint32(0x0)
	out1[5] = uint32(0x0)
	out1[6] = uint32(0x0)
	out1[7] = uint32(0x0)
}

// InnerLoop computes a inner_loop.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [0x0 ~> 0xffffffff]
//   out3: [0x0 ~> 0xffffffff]
//   out4: [0x0 ~> 0xffffffff]
//   out5: [0x0 ~> 0xffffffff]
func InnerLoop(out1 *uint32, out2 *uint32, out3 *uint32, out4 *uint32, out5 *uint32, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32) {
	x1 := (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg1, (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff))
	var x3 uint32
	cmovznzU32(&x3, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg2[0], arg3[0])
	var x4 uint32
	cmovznzU32(&x4, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg3[0], (uint32((uint64((^arg2[0])) + uint64(0x1))) & 0xffffffff))
	var x5 uint1
	cmovznzU1(&x5, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x6 uint1
	cmovznzU1(&x6, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x0, 0x1)
	var x7 uint32
	cmovznzU32(&x7, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), uint32(0x0), 0xffffffff)
	var x8 uint1
	cmovznzU1(&x8, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x9 uint32
	cmovznzU32(&x9, (uint1(x4) & 0x1), uint32(0x0), x3)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x4) & 0x1), 0x0, x5)
	var x11 uint1
	cmovznzU1(&x11, (uint1(x4) & 0x1), 0x0, x6)
	x12 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x13 uint32
	cmovznzU32(&x13, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x2))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), x3, (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)), (uint32((uint64((^x3)) + uint64(0x1))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x6) + uint32(x6)), (uint32(x8) + uint32(x11)))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x8) + uint32(x11)), (uint32((uint64((^(uint32(x6) + uint32(x6)))) + uint64(0x1))) & 0xffffffff))
	var x20 uint32
	cmovznzU32(&x20, (uint1(x15) & 0x1), uint32(0x0), x14)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x15) & 0x1), uint32(0x0), x16)
	var x22 uint32
	cmovznzU32(&x22, (uint1(x15) & 0x1), uint32(0x0), x17)
	x23 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x24 uint32
	cmovznzU32(&x24, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x13))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), x14, (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)), (uint32((uint64((^x14)) + uint64(0x1))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x16) + uint64(x16))) & 0xffffffff), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (x17 + x17), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x16) + uint64(x16))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff), (uint32((uint64((^(x17 + x17))) + uint64(0x1))) & 0xffffffff))
	var x31 uint32
	cmovznzU32(&x31, (uint1(x26) & 0x1), uint32(0x0), x25)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x26) & 0x1), uint32(0x0), x27)
	var x33 uint32
	cmovznzU32(&x33, (uint1(x26) & 0x1), uint32(0x0), x28)
	x34 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x35 uint32
	cmovznzU32(&x35, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x24))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), x25, (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)), (uint32((uint64((^x25)) + uint64(0x1))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x28))) & 0xffffffff), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x28) + uint64(x28))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x42 uint32
	cmovznzU32(&x42, (uint1(x37) & 0x1), uint32(0x0), x36)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x37) & 0x1), uint32(0x0), x38)
	var x44 uint32
	cmovznzU32(&x44, (uint1(x37) & 0x1), uint32(0x0), x39)
	x45 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	cmovznzU32(&x46, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x35))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), x36, (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)), (uint32((uint64((^x36)) + uint64(0x1))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x39))) & 0xffffffff), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x39) + uint64(x39))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x53 uint32
	cmovznzU32(&x53, (uint1(x48) & 0x1), uint32(0x0), x47)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x48) & 0x1), uint32(0x0), x49)
	var x55 uint32
	cmovznzU32(&x55, (uint1(x48) & 0x1), uint32(0x0), x50)
	x56 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x57 uint32
	cmovznzU32(&x57, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x46))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), x47, (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)), (uint32((uint64((^x47)) + uint64(0x1))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x50))) & 0xffffffff), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x50) + uint64(x50))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x64 uint32
	cmovznzU32(&x64, (uint1(x59) & 0x1), uint32(0x0), x58)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x59) & 0x1), uint32(0x0), x60)
	var x66 uint32
	cmovznzU32(&x66, (uint1(x59) & 0x1), uint32(0x0), x61)
	x67 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x68 uint32
	cmovznzU32(&x68, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x57))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), x58, (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)), (uint32((uint64((^x58)) + uint64(0x1))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x61))) & 0xffffffff), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x61) + uint64(x61))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x75 uint32
	cmovznzU32(&x75, (uint1(x70) & 0x1), uint32(0x0), x69)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x70) & 0x1), uint32(0x0), x71)
	var x77 uint32
	cmovznzU32(&x77, (uint1(x70) & 0x1), uint32(0x0), x72)
	x78 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	cmovznzU32(&x79, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x68))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), x69, (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)), (uint32((uint64((^x69)) + uint64(0x1))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x72))) & 0xffffffff), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x72) + uint64(x72))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x86 uint32
	cmovznzU32(&x86, (uint1(x81) & 0x1), uint32(0x0), x80)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x81) & 0x1), uint32(0x0), x82)
	var x88 uint32
	cmovznzU32(&x88, (uint1(x81) & 0x1), uint32(0x0), x83)
	x89 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x90 uint32
	cmovznzU32(&x90, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x79))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), x80, (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)), (uint32((uint64((^x80)) + uint64(0x1))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x83))) & 0xffffffff), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x83) + uint64(x83))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x97 uint32
	cmovznzU32(&x97, (uint1(x92) & 0x1), uint32(0x0), x91)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x92) & 0x1), uint32(0x0), x93)
	var x99 uint32
	cmovznzU32(&x99, (uint1(x92) & 0x1), uint32(0x0), x94)
	x100 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x101 uint32
	cmovznzU32(&x101, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x90))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), x91, (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)), (uint32((uint64((^x91)) + uint64(0x1))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x94))) & 0xffffffff), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x94) + uint64(x94))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x108 uint32
	cmovznzU32(&x108, (uint1(x103) & 0x1), uint32(0x0), x102)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x103) & 0x1), uint32(0x0), x104)
	var x110 uint32
	cmovznzU32(&x110, (uint1(x103) & 0x1), uint32(0x0), x105)
	x111 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x112 uint32
	cmovznzU32(&x112, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x101))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), x102, (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)), (uint32((uint64((^x102)) + uint64(0x1))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x105))) & 0xffffffff), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x105) + uint64(x105))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x119 uint32
	cmovznzU32(&x119, (uint1(x114) & 0x1), uint32(0x0), x113)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x114) & 0x1), uint32(0x0), x115)
	var x121 uint32
	cmovznzU32(&x121, (uint1(x114) & 0x1), uint32(0x0), x116)
	x122 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x123 uint32
	cmovznzU32(&x123, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x112))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), x113, (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)), (uint32((uint64((^x113)) + uint64(0x1))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x116))) & 0xffffffff), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x116) + uint64(x116))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x130 uint32
	cmovznzU32(&x130, (uint1(x125) & 0x1), uint32(0x0), x124)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x125) & 0x1), uint32(0x0), x126)
	var x132 uint32
	cmovznzU32(&x132, (uint1(x125) & 0x1), uint32(0x0), x127)
	x133 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x134 uint32
	cmovznzU32(&x134, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x123))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), x124, (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)), (uint32((uint64((^x124)) + uint64(0x1))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x127))) & 0xffffffff), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x127) + uint64(x127))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x141 uint32
	cmovznzU32(&x141, (uint1(x136) & 0x1), uint32(0x0), x135)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x136) & 0x1), uint32(0x0), x137)
	var x143 uint32
	cmovznzU32(&x143, (uint1(x136) & 0x1), uint32(0x0), x138)
	x144 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x145 uint32
	cmovznzU32(&x145, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x134))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), x135, (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)), (uint32((uint64((^x135)) + uint64(0x1))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x138))) & 0xffffffff), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x138) + uint64(x138))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x152 uint32
	cmovznzU32(&x152, (uint1(x147) & 0x1), uint32(0x0), x146)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x147) & 0x1), uint32(0x0), x148)
	var x154 uint32
	cmovznzU32(&x154, (uint1(x147) & 0x1), uint32(0x0), x149)
	x155 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x156 uint32
	cmovznzU32(&x156, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x145))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), x146, (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)), (uint32((uint64((^x146)) + uint64(0x1))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x149))) & 0xffffffff), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x149) + uint64(x149))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x163 uint32
	cmovznzU32(&x163, (uint1(x158) & 0x1), uint32(0x0), x157)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x158) & 0x1), uint32(0x0), x159)
	var x165 uint32
	cmovznzU32(&x165, (uint1(x158) & 0x1), uint32(0x0), x160)
	x166 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x167 uint32
	cmovznzU32(&x167, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x156))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), x157, (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)), (uint32((uint64((^x157)) + uint64(0x1))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x160))) & 0xffffffff), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x160) + uint64(x160))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x174 uint32
	cmovznzU32(&x174, (uint1(x169) & 0x1), uint32(0x0), x168)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x169) & 0x1), uint32(0x0), x170)
	var x176 uint32
	cmovznzU32(&x176, (uint1(x169) & 0x1), uint32(0x0), x171)
	x177 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x178 uint32
	cmovznzU32(&x178, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x167))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), x168, (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)), (uint32((uint64((^x168)) + uint64(0x1))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x171))) & 0xffffffff), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x171) + uint64(x171))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x185 uint32
	cmovznzU32(&x185, (uint1(x180) & 0x1), uint32(0x0), x179)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x180) & 0x1), uint32(0x0), x181)
	var x187 uint32
	cmovznzU32(&x187, (uint1(x180) & 0x1), uint32(0x0), x182)
	x188 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x189 uint32
	cmovznzU32(&x189, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x178))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), x179, (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)), (uint32((uint64((^x179)) + uint64(0x1))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x182))) & 0xffffffff), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x182) + uint64(x182))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x196 uint32
	cmovznzU32(&x196, (uint1(x191) & 0x1), uint32(0x0), x190)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x191) & 0x1), uint32(0x0), x192)
	var x198 uint32
	cmovznzU32(&x198, (uint1(x191) & 0x1), uint32(0x0), x193)
	x199 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x200 uint32
	cmovznzU32(&x200, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x189))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), x190, (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)), (uint32((uint64((^x190)) + uint64(0x1))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x193))) & 0xffffffff), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x193) + uint64(x193))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x207 uint32
	cmovznzU32(&x207, (uint1(x202) & 0x1), uint32(0x0), x201)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x202) & 0x1), uint32(0x0), x203)
	var x209 uint32
	cmovznzU32(&x209, (uint1(x202) & 0x1), uint32(0x0), x204)
	x210 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x211 uint32
	cmovznzU32(&x211, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x200))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), x201, (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)), (uint32((uint64((^x201)) + uint64(0x1))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x204))) & 0xffffffff), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x204) + uint64(x204))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x218 uint32
	cmovznzU32(&x218, (uint1(x213) & 0x1), uint32(0x0), x212)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x213) & 0x1), uint32(0x0), x214)
	var x220 uint32
	cmovznzU32(&x220, (uint1(x213) & 0x1), uint32(0x0), x215)
	x221 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x222 uint32
	cmovznzU32(&x222, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x211))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), x212, (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)), (uint32((uint64((^x212)) + uint64(0x1))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x215))) & 0xffffffff), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x215) + uint64(x215))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x229 uint32
	cmovznzU32(&x229, (uint1(x224) & 0x1), uint32(0x0), x223)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x224) & 0x1), uint32(0x0), x225)
	var x231 uint32
	cmovznzU32(&x231, (uint1(x224) & 0x1), uint32(0x0), x226)
	x232 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x233 uint32
	cmovznzU32(&x233, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x222))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), x223, (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)), (uint32((uint64((^x223)) + uint64(0x1))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x226))) & 0xffffffff), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x226) + uint64(x226))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x240 uint32
	cmovznzU32(&x240, (uint1(x235) & 0x1), uint32(0x0), x234)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x235) & 0x1), uint32(0x0), x236)
	var x242 uint32
	cmovznzU32(&x242, (uint1(x235) & 0x1), uint32(0x0), x237)
	x243 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x244 uint32
	cmovznzU32(&x244, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x233))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), x234, (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)), (uint32((uint64((^x234)) + uint64(0x1))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x237))) & 0xffffffff), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x237) + uint64(x237))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x251 uint32
	cmovznzU32(&x251, (uint1(x246) & 0x1), uint32(0x0), x245)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x246) & 0x1), uint32(0x0), x247)
	var x253 uint32
	cmovznzU32(&x253, (uint1(x246) & 0x1), uint32(0x0), x248)
	x254 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x255 uint32
	cmovznzU32(&x255, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x244))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), x245, (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)), (uint32((uint64((^x245)) + uint64(0x1))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x248))) & 0xffffffff), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x248) + uint64(x248))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x262 uint32
	cmovznzU32(&x262, (uint1(x257) & 0x1), uint32(0x0), x256)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x257) & 0x1), uint32(0x0), x258)
	var x264 uint32
	cmovznzU32(&x264, (uint1(x257) & 0x1), uint32(0x0), x259)
	x265 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x266 uint32
	cmovznzU32(&x266, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x255))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), x256, (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)), (uint32((uint64((^x256)) + uint64(0x1))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x259))) & 0xffffffff), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x259) + uint64(x259))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x273 uint32
	cmovznzU32(&x273, (uint1(x268) & 0x1), uint32(0x0), x267)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x268) & 0x1), uint32(0x0), x269)
	var x275 uint32
	cmovznzU32(&x275, (uint1(x268) & 0x1), uint32(0x0), x270)
	x276 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x277 uint32
	cmovznzU32(&x277, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x266))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), x267, (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)), (uint32((uint64((^x267)) + uint64(0x1))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x270))) & 0xffffffff), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x270) + uint64(x270))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x284 uint32
	cmovznzU32(&x284, (uint1(x279) & 0x1), uint32(0x0), x278)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x279) & 0x1), uint32(0x0), x280)
	var x286 uint32
	cmovznzU32(&x286, (uint1(x279) & 0x1), uint32(0x0), x281)
	x287 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x288 uint32
	cmovznzU32(&x288, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x277))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), x278, (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)), (uint32((uint64((^x278)) + uint64(0x1))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x281))) & 0xffffffff), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x281) + uint64(x281))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x295 uint32
	cmovznzU32(&x295, (uint1(x290) & 0x1), uint32(0x0), x289)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x290) & 0x1), uint32(0x0), x291)
	var x297 uint32
	cmovznzU32(&x297, (uint1(x290) & 0x1), uint32(0x0), x292)
	x298 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x299 uint32
	cmovznzU32(&x299, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x288))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), x289, (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)), (uint32((uint64((^x289)) + uint64(0x1))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x292))) & 0xffffffff), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x292) + uint64(x292))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x306 uint32
	cmovznzU32(&x306, (uint1(x301) & 0x1), uint32(0x0), x300)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x301) & 0x1), uint32(0x0), x302)
	var x308 uint32
	cmovznzU32(&x308, (uint1(x301) & 0x1), uint32(0x0), x303)
	x309 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x310 uint32
	cmovznzU32(&x310, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x299))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), x300, (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)), (uint32((uint64((^x300)) + uint64(0x1))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x303))) & 0xffffffff), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x303) + uint64(x303))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x317 uint32
	cmovznzU32(&x317, (uint1(x312) & 0x1), uint32(0x0), x311)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x312) & 0x1), uint32(0x0), x313)
	var x319 uint32
	cmovznzU32(&x319, (uint1(x312) & 0x1), uint32(0x0), x314)
	x320 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x321 uint32
	cmovznzU32(&x321, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x310))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1)), (uint32((uint64((^x311)) + uint64(0x1))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x314))) & 0xffffffff), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x326 uint32
	cmovznzU32(&x326, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x314) + uint64(x314))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x327 uint32
	cmovznzU32(&x327, (uint1(x322) & 0x1), uint32(0x0), x323)
	var x328 uint32
	cmovznzU32(&x328, (uint1(x322) & 0x1), uint32(0x0), x324)
	x329 := (uint32((uint64(0x1) + uint64(x321))) & 0xffffffff)
	x330 := (uint32((uint64(x323) + uint64(x323))) & 0xffffffff)
	x331 := (uint32((uint64(x324) + uint64(x324))) & 0xffffffff)
	x332 := (uint32((uint64(x325) + uint64(x327))) & 0xffffffff)
	x333 := (uint32((uint64(x326) + uint64(x328))) & 0xffffffff)
	*out1 = x329
	*out2 = x330
	*out3 = x331
	*out4 = x332
	*out5 = x333
}

// InnerLoopHd computes a inner_loop_hd.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [0x0 ~> 0xffffffff]
//   out3: [0x0 ~> 0xffffffff]
//   out4: [0x0 ~> 0xffffffff]
//   out5: [0x0 ~> 0xffffffff]
func InnerLoopHd(out1 *uint32, out2 *uint32, out3 *uint32, out4 *uint32, out5 *uint32, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32) {
	x1 := (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg1, (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff))
	var x3 uint32
	cmovznzU32(&x3, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg2[0], arg3[0])
	var x4 uint32
	cmovznzU32(&x4, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg3[0], (uint32((uint64((^arg2[0])) + uint64(0x1))) & 0xffffffff))
	var x5 uint1
	cmovznzU1(&x5, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x6 uint1
	cmovznzU1(&x6, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x0, 0x1)
	var x7 uint32
	cmovznzU32(&x7, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), uint32(0x0), 0xffffffff)
	var x8 uint1
	cmovznzU1(&x8, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x9 uint32
	cmovznzU32(&x9, (uint1(x4) & 0x1), uint32(0x0), x3)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x4) & 0x1), 0x0, x5)
	var x11 uint1
	cmovznzU1(&x11, (uint1(x4) & 0x1), 0x0, x6)
	x12 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x13 uint32
	cmovznzU32(&x13, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x2))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), x3, (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)), (uint32((uint64((^x3)) + uint64(0x1))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x6) + uint32(x6)), (uint32(x8) + uint32(x11)))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x8) + uint32(x11)), (uint32((uint64((^(uint32(x6) + uint32(x6)))) + uint64(0x1))) & 0xffffffff))
	var x20 uint32
	cmovznzU32(&x20, (uint1(x15) & 0x1), uint32(0x0), x14)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x15) & 0x1), uint32(0x0), x16)
	var x22 uint32
	cmovznzU32(&x22, (uint1(x15) & 0x1), uint32(0x0), x17)
	x23 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x24 uint32
	cmovznzU32(&x24, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x13))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), x14, (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)), (uint32((uint64((^x14)) + uint64(0x1))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x16) + uint64(x16))) & 0xffffffff), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (x17 + x17), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x16) + uint64(x16))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff), (uint32((uint64((^(x17 + x17))) + uint64(0x1))) & 0xffffffff))
	var x31 uint32
	cmovznzU32(&x31, (uint1(x26) & 0x1), uint32(0x0), x25)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x26) & 0x1), uint32(0x0), x27)
	var x33 uint32
	cmovznzU32(&x33, (uint1(x26) & 0x1), uint32(0x0), x28)
	x34 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x35 uint32
	cmovznzU32(&x35, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x24))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), x25, (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)), (uint32((uint64((^x25)) + uint64(0x1))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x28))) & 0xffffffff), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x28) + uint64(x28))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x42 uint32
	cmovznzU32(&x42, (uint1(x37) & 0x1), uint32(0x0), x36)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x37) & 0x1), uint32(0x0), x38)
	var x44 uint32
	cmovznzU32(&x44, (uint1(x37) & 0x1), uint32(0x0), x39)
	x45 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	cmovznzU32(&x46, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x35))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), x36, (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)), (uint32((uint64((^x36)) + uint64(0x1))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x39))) & 0xffffffff), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x39) + uint64(x39))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x53 uint32
	cmovznzU32(&x53, (uint1(x48) & 0x1), uint32(0x0), x47)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x48) & 0x1), uint32(0x0), x49)
	var x55 uint32
	cmovznzU32(&x55, (uint1(x48) & 0x1), uint32(0x0), x50)
	x56 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x57 uint32
	cmovznzU32(&x57, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x46))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), x47, (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)), (uint32((uint64((^x47)) + uint64(0x1))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x50))) & 0xffffffff), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x50) + uint64(x50))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x64 uint32
	cmovznzU32(&x64, (uint1(x59) & 0x1), uint32(0x0), x58)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x59) & 0x1), uint32(0x0), x60)
	var x66 uint32
	cmovznzU32(&x66, (uint1(x59) & 0x1), uint32(0x0), x61)
	x67 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x68 uint32
	cmovznzU32(&x68, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x57))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), x58, (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)), (uint32((uint64((^x58)) + uint64(0x1))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x61))) & 0xffffffff), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x61) + uint64(x61))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x75 uint32
	cmovznzU32(&x75, (uint1(x70) & 0x1), uint32(0x0), x69)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x70) & 0x1), uint32(0x0), x71)
	var x77 uint32
	cmovznzU32(&x77, (uint1(x70) & 0x1), uint32(0x0), x72)
	x78 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	cmovznzU32(&x79, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x68))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), x69, (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)), (uint32((uint64((^x69)) + uint64(0x1))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x72))) & 0xffffffff), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x72) + uint64(x72))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x86 uint32
	cmovznzU32(&x86, (uint1(x81) & 0x1), uint32(0x0), x80)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x81) & 0x1), uint32(0x0), x82)
	var x88 uint32
	cmovznzU32(&x88, (uint1(x81) & 0x1), uint32(0x0), x83)
	x89 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x90 uint32
	cmovznzU32(&x90, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x79))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), x80, (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)), (uint32((uint64((^x80)) + uint64(0x1))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x83))) & 0xffffffff), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x83) + uint64(x83))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x97 uint32
	cmovznzU32(&x97, (uint1(x92) & 0x1), uint32(0x0), x91)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x92) & 0x1), uint32(0x0), x93)
	var x99 uint32
	cmovznzU32(&x99, (uint1(x92) & 0x1), uint32(0x0), x94)
	x100 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x101 uint32
	cmovznzU32(&x101, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x90))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), x91, (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)), (uint32((uint64((^x91)) + uint64(0x1))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x94))) & 0xffffffff), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x94) + uint64(x94))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x108 uint32
	cmovznzU32(&x108, (uint1(x103) & 0x1), uint32(0x0), x102)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x103) & 0x1), uint32(0x0), x104)
	var x110 uint32
	cmovznzU32(&x110, (uint1(x103) & 0x1), uint32(0x0), x105)
	x111 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x112 uint32
	cmovznzU32(&x112, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x101))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), x102, (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)), (uint32((uint64((^x102)) + uint64(0x1))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x105))) & 0xffffffff), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x105) + uint64(x105))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x119 uint32
	cmovznzU32(&x119, (uint1(x114) & 0x1), uint32(0x0), x113)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x114) & 0x1), uint32(0x0), x115)
	var x121 uint32
	cmovznzU32(&x121, (uint1(x114) & 0x1), uint32(0x0), x116)
	x122 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x123 uint32
	cmovznzU32(&x123, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x112))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), x113, (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)), (uint32((uint64((^x113)) + uint64(0x1))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x116))) & 0xffffffff), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x116) + uint64(x116))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x130 uint32
	cmovznzU32(&x130, (uint1(x125) & 0x1), uint32(0x0), x124)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x125) & 0x1), uint32(0x0), x126)
	var x132 uint32
	cmovznzU32(&x132, (uint1(x125) & 0x1), uint32(0x0), x127)
	x133 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x134 uint32
	cmovznzU32(&x134, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x123))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), x124, (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)), (uint32((uint64((^x124)) + uint64(0x1))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x127))) & 0xffffffff), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x127) + uint64(x127))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x141 uint32
	cmovznzU32(&x141, (uint1(x136) & 0x1), uint32(0x0), x135)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x136) & 0x1), uint32(0x0), x137)
	var x143 uint32
	cmovznzU32(&x143, (uint1(x136) & 0x1), uint32(0x0), x138)
	x144 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x145 uint32
	cmovznzU32(&x145, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x134))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), x135, (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)), (uint32((uint64((^x135)) + uint64(0x1))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x138))) & 0xffffffff), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x138) + uint64(x138))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x152 uint32
	cmovznzU32(&x152, (uint1(x147) & 0x1), uint32(0x0), x146)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x147) & 0x1), uint32(0x0), x148)
	var x154 uint32
	cmovznzU32(&x154, (uint1(x147) & 0x1), uint32(0x0), x149)
	x155 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x156 uint32
	cmovznzU32(&x156, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x145))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), x146, (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)), (uint32((uint64((^x146)) + uint64(0x1))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x149))) & 0xffffffff), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x149) + uint64(x149))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x163 uint32
	cmovznzU32(&x163, (uint1(x158) & 0x1), uint32(0x0), x157)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x158) & 0x1), uint32(0x0), x159)
	var x165 uint32
	cmovznzU32(&x165, (uint1(x158) & 0x1), uint32(0x0), x160)
	x166 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x167 uint32
	cmovznzU32(&x167, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x156))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), x157, (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)), (uint32((uint64((^x157)) + uint64(0x1))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x160))) & 0xffffffff), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x160) + uint64(x160))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x174 uint32
	cmovznzU32(&x174, (uint1(x169) & 0x1), uint32(0x0), x168)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x169) & 0x1), uint32(0x0), x170)
	var x176 uint32
	cmovznzU32(&x176, (uint1(x169) & 0x1), uint32(0x0), x171)
	x177 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x178 uint32
	cmovznzU32(&x178, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x167))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), x168, (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)), (uint32((uint64((^x168)) + uint64(0x1))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x171))) & 0xffffffff), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x171) + uint64(x171))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x185 uint32
	cmovznzU32(&x185, (uint1(x180) & 0x1), uint32(0x0), x179)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x180) & 0x1), uint32(0x0), x181)
	var x187 uint32
	cmovznzU32(&x187, (uint1(x180) & 0x1), uint32(0x0), x182)
	x188 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x189 uint32
	cmovznzU32(&x189, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x178))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), x179, (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)), (uint32((uint64((^x179)) + uint64(0x1))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x182))) & 0xffffffff), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x182) + uint64(x182))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x196 uint32
	cmovznzU32(&x196, (uint1(x191) & 0x1), uint32(0x0), x190)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x191) & 0x1), uint32(0x0), x192)
	var x198 uint32
	cmovznzU32(&x198, (uint1(x191) & 0x1), uint32(0x0), x193)
	x199 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x200 uint32
	cmovznzU32(&x200, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x189))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), x190, (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)), (uint32((uint64((^x190)) + uint64(0x1))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x193))) & 0xffffffff), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x193) + uint64(x193))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x207 uint32
	cmovznzU32(&x207, (uint1(x202) & 0x1), uint32(0x0), x201)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x202) & 0x1), uint32(0x0), x203)
	var x209 uint32
	cmovznzU32(&x209, (uint1(x202) & 0x1), uint32(0x0), x204)
	x210 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x211 uint32
	cmovznzU32(&x211, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x200))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), x201, (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)), (uint32((uint64((^x201)) + uint64(0x1))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x204))) & 0xffffffff), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x204) + uint64(x204))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x218 uint32
	cmovznzU32(&x218, (uint1(x213) & 0x1), uint32(0x0), x212)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x213) & 0x1), uint32(0x0), x214)
	var x220 uint32
	cmovznzU32(&x220, (uint1(x213) & 0x1), uint32(0x0), x215)
	x221 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x222 uint32
	cmovznzU32(&x222, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x211))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), x212, (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)), (uint32((uint64((^x212)) + uint64(0x1))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x215))) & 0xffffffff), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x215) + uint64(x215))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x229 uint32
	cmovznzU32(&x229, (uint1(x224) & 0x1), uint32(0x0), x223)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x224) & 0x1), uint32(0x0), x225)
	var x231 uint32
	cmovznzU32(&x231, (uint1(x224) & 0x1), uint32(0x0), x226)
	x232 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x233 uint32
	cmovznzU32(&x233, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x222))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), x223, (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)), (uint32((uint64((^x223)) + uint64(0x1))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x226))) & 0xffffffff), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x226) + uint64(x226))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x240 uint32
	cmovznzU32(&x240, (uint1(x235) & 0x1), uint32(0x0), x234)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x235) & 0x1), uint32(0x0), x236)
	var x242 uint32
	cmovznzU32(&x242, (uint1(x235) & 0x1), uint32(0x0), x237)
	x243 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x244 uint32
	cmovznzU32(&x244, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x233))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), x234, (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)), (uint32((uint64((^x234)) + uint64(0x1))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x237))) & 0xffffffff), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x237) + uint64(x237))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x251 uint32
	cmovznzU32(&x251, (uint1(x246) & 0x1), uint32(0x0), x245)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x246) & 0x1), uint32(0x0), x247)
	var x253 uint32
	cmovznzU32(&x253, (uint1(x246) & 0x1), uint32(0x0), x248)
	x254 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x255 uint32
	cmovznzU32(&x255, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x244))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), x245, (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)), (uint32((uint64((^x245)) + uint64(0x1))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x248))) & 0xffffffff), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x248) + uint64(x248))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x262 uint32
	cmovznzU32(&x262, (uint1(x257) & 0x1), uint32(0x0), x256)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x257) & 0x1), uint32(0x0), x258)
	var x264 uint32
	cmovznzU32(&x264, (uint1(x257) & 0x1), uint32(0x0), x259)
	x265 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x266 uint32
	cmovznzU32(&x266, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x255))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), x256, (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)), (uint32((uint64((^x256)) + uint64(0x1))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x259))) & 0xffffffff), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x259) + uint64(x259))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x273 uint32
	cmovznzU32(&x273, (uint1(x268) & 0x1), uint32(0x0), x267)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x268) & 0x1), uint32(0x0), x269)
	var x275 uint32
	cmovznzU32(&x275, (uint1(x268) & 0x1), uint32(0x0), x270)
	x276 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x277 uint32
	cmovznzU32(&x277, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x266))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), x267, (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)), (uint32((uint64((^x267)) + uint64(0x1))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x270))) & 0xffffffff), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x270) + uint64(x270))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x284 uint32
	cmovznzU32(&x284, (uint1(x279) & 0x1), uint32(0x0), x278)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x279) & 0x1), uint32(0x0), x280)
	var x286 uint32
	cmovznzU32(&x286, (uint1(x279) & 0x1), uint32(0x0), x281)
	x287 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x288 uint32
	cmovznzU32(&x288, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x277))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), x278, (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)), (uint32((uint64((^x278)) + uint64(0x1))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x281))) & 0xffffffff), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x281) + uint64(x281))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x295 uint32
	cmovznzU32(&x295, (uint1(x290) & 0x1), uint32(0x0), x289)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x290) & 0x1), uint32(0x0), x291)
	var x297 uint32
	cmovznzU32(&x297, (uint1(x290) & 0x1), uint32(0x0), x292)
	x298 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x299 uint32
	cmovznzU32(&x299, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x288))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), x289, (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)), (uint32((uint64((^x289)) + uint64(0x1))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x292))) & 0xffffffff), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x292) + uint64(x292))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x306 uint32
	cmovznzU32(&x306, (uint1(x301) & 0x1), uint32(0x0), x300)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x301) & 0x1), uint32(0x0), x302)
	var x308 uint32
	cmovznzU32(&x308, (uint1(x301) & 0x1), uint32(0x0), x303)
	x309 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x310 uint32
	cmovznzU32(&x310, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x299))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), x300, (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)), (uint32((uint64((^x300)) + uint64(0x1))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x303))) & 0xffffffff), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x303) + uint64(x303))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x317 uint32
	cmovznzU32(&x317, (uint1(x312) & 0x1), uint32(0x0), x311)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x312) & 0x1), uint32(0x0), x313)
	var x319 uint32
	cmovznzU32(&x319, (uint1(x312) & 0x1), uint32(0x0), x314)
	x320 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x321 uint32
	cmovznzU32(&x321, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x310))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1)), (uint32((uint64((^x311)) + uint64(0x1))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x314))) & 0xffffffff), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x326 uint32
	cmovznzU32(&x326, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x314) + uint64(x314))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x327 uint32
	cmovznzU32(&x327, (uint1(x322) & 0x1), uint32(0x0), x323)
	var x328 uint32
	cmovznzU32(&x328, (uint1(x322) & 0x1), uint32(0x0), x324)
	x329 := (uint32((uint64(0x2) + uint64(x321))) & 0xffffffff)
	x330 := (uint32((uint64(x323) + uint64(x323))) & 0xffffffff)
	x331 := (uint32((uint64(x324) + uint64(x324))) & 0xffffffff)
	x332 := (uint32((uint64(x325) + uint64(x327))) & 0xffffffff)
	x333 := (uint32((uint64(x326) + uint64(x328))) & 0xffffffff)
	*out1 = x329
	*out2 = x330
	*out3 = x331
	*out4 = x332
	*out5 = x333
}

// UpdateFg computes a update_fg.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [0x0 ~> 0xffffffff]
//   arg4: [0x0 ~> 0xffffffff]
//   arg5: [0x0 ~> 0xffffffff]
//   arg6: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func UpdateFg(out1 *[9]uint32, out2 *[9]uint32, arg1 *[9]uint32, arg2 *[9]uint32, arg3 uint32, arg4 uint32, arg5 uint32, arg6 uint32) {
	var x1 uint32
	cmovznzU32(&x1, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, uint1((arg3 >> 31)), uint32(0x0), 0xffffffff)
	var x3 uint32
	_, x3 = bits.Mul32(x2, arg1[0])
	var x5 uint32
	_, x5 = bits.Mul32(x2, arg1[1])
	var x7 uint32
	var x8 uint32
	x8, x7 = bits.Mul32(x2, arg1[0])
	var x9 uint32
	_, x9 = bits.Mul32(x2, arg1[2])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x2, arg1[1])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x2, arg1[0])
	var x15 uint32
	_, x15 = bits.Mul32(x2, arg1[3])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x2, arg1[2])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x2, arg1[1])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x2, arg1[0])
	var x23 uint32
	_, x23 = bits.Mul32(x2, arg1[4])
	var x25 uint32
	var x26 uint32
	x26, x25 = bits.Mul32(x2, arg1[3])
	var x27 uint32
	var x28 uint32
	x28, x27 = bits.Mul32(x2, arg1[2])
	var x29 uint32
	var x30 uint32
	x30, x29 = bits.Mul32(x2, arg1[1])
	var x31 uint32
	var x32 uint32
	x32, x31 = bits.Mul32(x2, arg1[0])
	var x33 uint32
	_, x33 = bits.Mul32(x2, arg1[5])
	var x35 uint32
	var x36 uint32
	x36, x35 = bits.Mul32(x2, arg1[4])
	var x37 uint32
	var x38 uint32
	x38, x37 = bits.Mul32(x2, arg1[3])
	var x39 uint32
	var x40 uint32
	x40, x39 = bits.Mul32(x2, arg1[2])
	var x41 uint32
	var x42 uint32
	x42, x41 = bits.Mul32(x2, arg1[1])
	var x43 uint32
	var x44 uint32
	x44, x43 = bits.Mul32(x2, arg1[0])
	var x45 uint32
	_, x45 = bits.Mul32(x2, arg1[6])
	var x47 uint32
	var x48 uint32
	x48, x47 = bits.Mul32(x2, arg1[5])
	var x49 uint32
	var x50 uint32
	x50, x49 = bits.Mul32(x2, arg1[4])
	var x51 uint32
	var x52 uint32
	x52, x51 = bits.Mul32(x2, arg1[3])
	var x53 uint32
	var x54 uint32
	x54, x53 = bits.Mul32(x2, arg1[2])
	var x55 uint32
	var x56 uint32
	x56, x55 = bits.Mul32(x2, arg1[1])
	var x57 uint32
	var x58 uint32
	x58, x57 = bits.Mul32(x2, arg1[0])
	var x59 uint32
	_, x59 = bits.Mul32(x2, arg1[7])
	var x61 uint32
	var x62 uint32
	x62, x61 = bits.Mul32(x2, arg1[6])
	var x63 uint32
	var x64 uint32
	x64, x63 = bits.Mul32(x2, arg1[5])
	var x65 uint32
	var x66 uint32
	x66, x65 = bits.Mul32(x2, arg1[4])
	var x67 uint32
	var x68 uint32
	x68, x67 = bits.Mul32(x2, arg1[3])
	var x69 uint32
	var x70 uint32
	x70, x69 = bits.Mul32(x2, arg1[2])
	var x71 uint32
	var x72 uint32
	x72, x71 = bits.Mul32(x2, arg1[1])
	var x73 uint32
	var x74 uint32
	x74, x73 = bits.Mul32(x2, arg1[0])
	var x75 uint32
	_, x75 = bits.Mul32(x2, arg1[8])
	var x77 uint32
	var x78 uint32
	x78, x77 = bits.Mul32(x2, arg1[7])
	var x79 uint32
	var x80 uint32
	x80, x79 = bits.Mul32(x2, arg1[6])
	var x81 uint32
	var x82 uint32
	x82, x81 = bits.Mul32(x2, arg1[5])
	var x83 uint32
	var x84 uint32
	x84, x83 = bits.Mul32(x2, arg1[4])
	var x85 uint32
	var x86 uint32
	x86, x85 = bits.Mul32(x2, arg1[3])
	var x87 uint32
	var x88 uint32
	x88, x87 = bits.Mul32(x2, arg1[2])
	var x89 uint32
	var x90 uint32
	x90, x89 = bits.Mul32(x2, arg1[1])
	var x91 uint32
	var x92 uint32
	x92, x91 = bits.Mul32(x2, arg1[0])
	var x93 uint32
	_, x93 = bits.Mul32(arg3, x1)
	var x95 uint32
	var x96 uint32
	x96, x95 = bits.Mul32(arg3, arg1[8])
	var x97 uint32
	var x98 uint32
	x98, x97 = bits.Mul32(arg3, arg1[7])
	var x99 uint32
	var x100 uint32
	x100, x99 = bits.Mul32(arg3, arg1[6])
	var x101 uint32
	var x102 uint32
	x102, x101 = bits.Mul32(arg3, arg1[5])
	var x103 uint32
	var x104 uint32
	x104, x103 = bits.Mul32(arg3, arg1[4])
	var x105 uint32
	var x106 uint32
	x106, x105 = bits.Mul32(arg3, arg1[3])
	var x107 uint32
	var x108 uint32
	x108, x107 = bits.Mul32(arg3, arg1[2])
	var x109 uint32
	var x110 uint32
	x110, x109 = bits.Mul32(arg3, arg1[1])
	var x111 uint32
	var x112 uint32
	x112, x111 = bits.Mul32(arg3, arg1[0])
	var x113 uint32
	x113, _ = bits.Add32(x96, x3, uint32(0x0))
	var x115 uint32
	x115, _ = bits.Add32(x113, x5, uint32(0x0))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x98, x7, uint32(0x0))
	var x119 uint32
	x119, _ = bits.Add32(x115, x8, uint32(uint1(x118)))
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x117, x11, uint32(0x0))
	var x123 uint32
	x123, _ = bits.Add32(x119, x9, uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x100, x13, uint32(0x0))
	var x127 uint32
	var x128 uint32
	x127, x128 = bits.Add32(x121, x14, uint32(uint1(x126)))
	var x129 uint32
	x129, _ = bits.Add32(x123, x12, uint32(uint1(x128)))
	var x131 uint32
	var x132 uint32
	x131, x132 = bits.Add32(x125, x19, uint32(0x0))
	var x133 uint32
	var x134 uint32
	x133, x134 = bits.Add32(x127, x17, uint32(uint1(x132)))
	var x135 uint32
	x135, _ = bits.Add32(x129, x15, uint32(uint1(x134)))
	var x137 uint32
	var x138 uint32
	x137, x138 = bits.Add32(x102, x21, uint32(0x0))
	var x139 uint32
	var x140 uint32
	x139, x140 = bits.Add32(x131, x22, uint32(uint1(x138)))
	var x141 uint32
	var x142 uint32
	x141, x142 = bits.Add32(x133, x20, uint32(uint1(x140)))
	var x143 uint32
	x143, _ = bits.Add32(x135, x18, uint32(uint1(x142)))
	var x145 uint32
	var x146 uint32
	x145, x146 = bits.Add32(x137, x29, uint32(0x0))
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x139, x27, uint32(uint1(x146)))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x141, x25, uint32(uint1(x148)))
	var x151 uint32
	x151, _ = bits.Add32(x143, x23, uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x104, x31, uint32(0x0))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x145, x32, uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x147, x30, uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x149, x28, uint32(uint1(x158)))
	var x161 uint32
	x161, _ = bits.Add32(x151, x26, uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x153, x41, uint32(0x0))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Add32(x155, x39, uint32(uint1(x164)))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x157, x37, uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x159, x35, uint32(uint1(x168)))
	var x171 uint32
	x171, _ = bits.Add32(x161, x33, uint32(uint1(x170)))
	var x173 uint32
	var x174 uint32
	x173, x174 = bits.Add32(x106, x43, uint32(0x0))
	var x175 uint32
	var x176 uint32
	x175, x176 = bits.Add32(x163, x44, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x165, x42, uint32(uint1(x176)))
	var x179 uint32
	var x180 uint32
	x179, x180 = bits.Add32(x167, x40, uint32(uint1(x178)))
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x169, x38, uint32(uint1(x180)))
	var x183 uint32
	x183, _ = bits.Add32(x171, x36, uint32(uint1(x182)))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x173, x55, uint32(0x0))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x175, x53, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x177, x51, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x179, x49, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x181, x47, uint32(uint1(x192)))
	var x195 uint32
	x195, _ = bits.Add32(x183, x45, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x108, x57, uint32(0x0))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x185, x58, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x187, x56, uint32(uint1(x200)))
	var x203 uint32
	var x204 uint32
	x203, x204 = bits.Add32(x189, x54, uint32(uint1(x202)))
	var x205 uint32
	var x206 uint32
	x205, x206 = bits.Add32(x191, x52, uint32(uint1(x204)))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x193, x50, uint32(uint1(x206)))
	var x209 uint32
	x209, _ = bits.Add32(x195, x48, uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x197, x71, uint32(0x0))
	var x213 uint32
	var x214 uint32
	x213, x214 = bits.Add32(x199, x69, uint32(uint1(x212)))
	var x215 uint32
	var x216 uint32
	x215, x216 = bits.Add32(x201, x67, uint32(uint1(x214)))
	var x217 uint32
	var x218 uint32
	x217, x218 = bits.Add32(x203, x65, uint32(uint1(x216)))
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x205, x63, uint32(uint1(x218)))
	var x221 uint32
	var x222 uint32
	x221, x222 = bits.Add32(x207, x61, uint32(uint1(x220)))
	var x223 uint32
	x223, _ = bits.Add32(x209, x59, uint32(uint1(x222)))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x110, x73, uint32(0x0))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x211, x74, uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x213, x72, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x215, x70, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x217, x68, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x219, x66, uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x221, x64, uint32(uint1(x236)))
	var x239 uint32
	x239, _ = bits.Add32(x223, x62, uint32(uint1(x238)))
	var x241 uint32
	var x242 uint32
	x241, x242 = bits.Add32(x225, x89, uint32(0x0))
	var x243 uint32
	var x244 uint32
	x243, x244 = bits.Add32(x227, x87, uint32(uint1(x242)))
	var x245 uint32
	var x246 uint32
	x245, x246 = bits.Add32(x229, x85, uint32(uint1(x244)))
	var x247 uint32
	var x248 uint32
	x247, x248 = bits.Add32(x231, x83, uint32(uint1(x246)))
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x233, x81, uint32(uint1(x248)))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x235, x79, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x237, x77, uint32(uint1(x252)))
	var x255 uint32
	x255, _ = bits.Add32(x239, x75, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x112, x91, uint32(0x0))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x241, x92, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x243, x90, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x245, x88, uint32(uint1(x262)))
	var x265 uint32
	var x266 uint32
	x265, x266 = bits.Add32(x247, x86, uint32(uint1(x264)))
	var x267 uint32
	var x268 uint32
	x267, x268 = bits.Add32(x249, x84, uint32(uint1(x266)))
	var x269 uint32
	var x270 uint32
	x269, x270 = bits.Add32(x251, x82, uint32(uint1(x268)))
	var x271 uint32
	var x272 uint32
	x271, x272 = bits.Add32(x253, x80, uint32(uint1(x270)))
	var x273 uint32
	x273, _ = bits.Add32(x255, x78, uint32(uint1(x272)))
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x257, x109, uint32(0x0))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x259, x107, uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x261, x105, uint32(uint1(x278)))
	var x281 uint32
	var x282 uint32
	x281, x282 = bits.Add32(x263, x103, uint32(uint1(x280)))
	var x283 uint32
	var x284 uint32
	x283, x284 = bits.Add32(x265, x101, uint32(uint1(x282)))
	var x285 uint32
	var x286 uint32
	x285, x286 = bits.Add32(x267, x99, uint32(uint1(x284)))
	var x287 uint32
	var x288 uint32
	x287, x288 = bits.Add32(x269, x97, uint32(uint1(x286)))
	var x289 uint32
	var x290 uint32
	x289, x290 = bits.Add32(x271, x95, uint32(uint1(x288)))
	var x291 uint32
	x291, _ = bits.Add32(x273, x93, uint32(uint1(x290)))
	var x293 uint32
	cmovznzU32(&x293, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x294 uint32
	cmovznzU32(&x294, uint1((arg4 >> 31)), uint32(0x0), 0xffffffff)
	var x295 uint32
	_, x295 = bits.Mul32(x294, arg2[0])
	var x297 uint32
	_, x297 = bits.Mul32(x294, arg2[1])
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x294, arg2[0])
	var x301 uint32
	_, x301 = bits.Mul32(x294, arg2[2])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x294, arg2[1])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x294, arg2[0])
	var x307 uint32
	_, x307 = bits.Mul32(x294, arg2[3])
	var x309 uint32
	var x310 uint32
	x310, x309 = bits.Mul32(x294, arg2[2])
	var x311 uint32
	var x312 uint32
	x312, x311 = bits.Mul32(x294, arg2[1])
	var x313 uint32
	var x314 uint32
	x314, x313 = bits.Mul32(x294, arg2[0])
	var x315 uint32
	_, x315 = bits.Mul32(x294, arg2[4])
	var x317 uint32
	var x318 uint32
	x318, x317 = bits.Mul32(x294, arg2[3])
	var x319 uint32
	var x320 uint32
	x320, x319 = bits.Mul32(x294, arg2[2])
	var x321 uint32
	var x322 uint32
	x322, x321 = bits.Mul32(x294, arg2[1])
	var x323 uint32
	var x324 uint32
	x324, x323 = bits.Mul32(x294, arg2[0])
	var x325 uint32
	_, x325 = bits.Mul32(x294, arg2[5])
	var x327 uint32
	var x328 uint32
	x328, x327 = bits.Mul32(x294, arg2[4])
	var x329 uint32
	var x330 uint32
	x330, x329 = bits.Mul32(x294, arg2[3])
	var x331 uint32
	var x332 uint32
	x332, x331 = bits.Mul32(x294, arg2[2])
	var x333 uint32
	var x334 uint32
	x334, x333 = bits.Mul32(x294, arg2[1])
	var x335 uint32
	var x336 uint32
	x336, x335 = bits.Mul32(x294, arg2[0])
	var x337 uint32
	_, x337 = bits.Mul32(x294, arg2[6])
	var x339 uint32
	var x340 uint32
	x340, x339 = bits.Mul32(x294, arg2[5])
	var x341 uint32
	var x342 uint32
	x342, x341 = bits.Mul32(x294, arg2[4])
	var x343 uint32
	var x344 uint32
	x344, x343 = bits.Mul32(x294, arg2[3])
	var x345 uint32
	var x346 uint32
	x346, x345 = bits.Mul32(x294, arg2[2])
	var x347 uint32
	var x348 uint32
	x348, x347 = bits.Mul32(x294, arg2[1])
	var x349 uint32
	var x350 uint32
	x350, x349 = bits.Mul32(x294, arg2[0])
	var x351 uint32
	_, x351 = bits.Mul32(x294, arg2[7])
	var x353 uint32
	var x354 uint32
	x354, x353 = bits.Mul32(x294, arg2[6])
	var x355 uint32
	var x356 uint32
	x356, x355 = bits.Mul32(x294, arg2[5])
	var x357 uint32
	var x358 uint32
	x358, x357 = bits.Mul32(x294, arg2[4])
	var x359 uint32
	var x360 uint32
	x360, x359 = bits.Mul32(x294, arg2[3])
	var x361 uint32
	var x362 uint32
	x362, x361 = bits.Mul32(x294, arg2[2])
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x294, arg2[1])
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x294, arg2[0])
	var x367 uint32
	_, x367 = bits.Mul32(x294, arg2[8])
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x294, arg2[7])
	var x371 uint32
	var x372 uint32
	x372, x371 = bits.Mul32(x294, arg2[6])
	var x373 uint32
	var x374 uint32
	x374, x373 = bits.Mul32(x294, arg2[5])
	var x375 uint32
	var x376 uint32
	x376, x375 = bits.Mul32(x294, arg2[4])
	var x377 uint32
	var x378 uint32
	x378, x377 = bits.Mul32(x294, arg2[3])
	var x379 uint32
	var x380 uint32
	x380, x379 = bits.Mul32(x294, arg2[2])
	var x381 uint32
	var x382 uint32
	x382, x381 = bits.Mul32(x294, arg2[1])
	var x383 uint32
	var x384 uint32
	x384, x383 = bits.Mul32(x294, arg2[0])
	var x385 uint32
	_, x385 = bits.Mul32(arg4, x293)
	var x387 uint32
	var x388 uint32
	x388, x387 = bits.Mul32(arg4, arg2[8])
	var x389 uint32
	var x390 uint32
	x390, x389 = bits.Mul32(arg4, arg2[7])
	var x391 uint32
	var x392 uint32
	x392, x391 = bits.Mul32(arg4, arg2[6])
	var x393 uint32
	var x394 uint32
	x394, x393 = bits.Mul32(arg4, arg2[5])
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(arg4, arg2[4])
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(arg4, arg2[3])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(arg4, arg2[2])
	var x401 uint32
	var x402 uint32
	x402, x401 = bits.Mul32(arg4, arg2[1])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(arg4, arg2[0])
	var x405 uint32
	x405, _ = bits.Add32(x388, x295, uint32(0x0))
	var x407 uint32
	x407, _ = bits.Add32(x405, x297, uint32(0x0))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x390, x299, uint32(0x0))
	var x411 uint32
	x411, _ = bits.Add32(x407, x300, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x409, x303, uint32(0x0))
	var x415 uint32
	x415, _ = bits.Add32(x411, x301, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x392, x305, uint32(0x0))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x413, x306, uint32(uint1(x418)))
	var x421 uint32
	x421, _ = bits.Add32(x415, x304, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x417, x311, uint32(0x0))
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x419, x309, uint32(uint1(x424)))
	var x427 uint32
	x427, _ = bits.Add32(x421, x307, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x394, x313, uint32(0x0))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x423, x314, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x425, x312, uint32(uint1(x432)))
	var x435 uint32
	x435, _ = bits.Add32(x427, x310, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x429, x321, uint32(0x0))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x431, x319, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x433, x317, uint32(uint1(x440)))
	var x443 uint32
	x443, _ = bits.Add32(x435, x315, uint32(uint1(x442)))
	var x445 uint32
	var x446 uint32
	x445, x446 = bits.Add32(x396, x323, uint32(0x0))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x437, x324, uint32(uint1(x446)))
	var x449 uint32
	var x450 uint32
	x449, x450 = bits.Add32(x439, x322, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x441, x320, uint32(uint1(x450)))
	var x453 uint32
	x453, _ = bits.Add32(x443, x318, uint32(uint1(x452)))
	var x455 uint32
	var x456 uint32
	x455, x456 = bits.Add32(x445, x333, uint32(0x0))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x447, x331, uint32(uint1(x456)))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x449, x329, uint32(uint1(x458)))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x451, x327, uint32(uint1(x460)))
	var x463 uint32
	x463, _ = bits.Add32(x453, x325, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x398, x335, uint32(0x0))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x455, x336, uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x457, x334, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x459, x332, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x461, x330, uint32(uint1(x472)))
	var x475 uint32
	x475, _ = bits.Add32(x463, x328, uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x465, x347, uint32(0x0))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x467, x345, uint32(uint1(x478)))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x469, x343, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x471, x341, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x473, x339, uint32(uint1(x484)))
	var x487 uint32
	x487, _ = bits.Add32(x475, x337, uint32(uint1(x486)))
	var x489 uint32
	var x490 uint32
	x489, x490 = bits.Add32(x400, x349, uint32(0x0))
	var x491 uint32
	var x492 uint32
	x491, x492 = bits.Add32(x477, x350, uint32(uint1(x490)))
	var x493 uint32
	var x494 uint32
	x493, x494 = bits.Add32(x479, x348, uint32(uint1(x492)))
	var x495 uint32
	var x496 uint32
	x495, x496 = bits.Add32(x481, x346, uint32(uint1(x494)))
	var x497 uint32
	var x498 uint32
	x497, x498 = bits.Add32(x483, x344, uint32(uint1(x496)))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x485, x342, uint32(uint1(x498)))
	var x501 uint32
	x501, _ = bits.Add32(x487, x340, uint32(uint1(x500)))
	var x503 uint32
	var x504 uint32
	x503, x504 = bits.Add32(x489, x363, uint32(0x0))
	var x505 uint32
	var x506 uint32
	x505, x506 = bits.Add32(x491, x361, uint32(uint1(x504)))
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x493, x359, uint32(uint1(x506)))
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32(x495, x357, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x497, x355, uint32(uint1(x510)))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x499, x353, uint32(uint1(x512)))
	var x515 uint32
	x515, _ = bits.Add32(x501, x351, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x402, x365, uint32(0x0))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x503, x366, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x505, x364, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x507, x362, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x509, x360, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x511, x358, uint32(uint1(x526)))
	var x529 uint32
	var x530 uint32
	x529, x530 = bits.Add32(x513, x356, uint32(uint1(x528)))
	var x531 uint32
	x531, _ = bits.Add32(x515, x354, uint32(uint1(x530)))
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x517, x381, uint32(0x0))
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x519, x379, uint32(uint1(x534)))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x521, x377, uint32(uint1(x536)))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x523, x375, uint32(uint1(x538)))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x525, x373, uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x527, x371, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x529, x369, uint32(uint1(x544)))
	var x547 uint32
	x547, _ = bits.Add32(x531, x367, uint32(uint1(x546)))
	var x549 uint32
	var x550 uint32
	x549, x550 = bits.Add32(x404, x383, uint32(0x0))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(x533, x384, uint32(uint1(x550)))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x535, x382, uint32(uint1(x552)))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x537, x380, uint32(uint1(x554)))
	var x557 uint32
	var x558 uint32
	x557, x558 = bits.Add32(x539, x378, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Add32(x541, x376, uint32(uint1(x558)))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Add32(x543, x374, uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Add32(x545, x372, uint32(uint1(x562)))
	var x565 uint32
	x565, _ = bits.Add32(x547, x370, uint32(uint1(x564)))
	var x567 uint32
	var x568 uint32
	x567, x568 = bits.Add32(x549, x401, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x551, x399, uint32(uint1(x568)))
	var x571 uint32
	var x572 uint32
	x571, x572 = bits.Add32(x553, x397, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x555, x395, uint32(uint1(x572)))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x557, x393, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x559, x391, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x561, x389, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x563, x387, uint32(uint1(x580)))
	var x583 uint32
	x583, _ = bits.Add32(x565, x385, uint32(uint1(x582)))
	var x585 uint32
	cmovznzU32(&x585, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x586 uint32
	cmovznzU32(&x586, uint1((arg5 >> 31)), uint32(0x0), 0xffffffff)
	var x587 uint32
	_, x587 = bits.Mul32(x586, arg1[0])
	var x589 uint32
	_, x589 = bits.Mul32(x586, arg1[1])
	var x591 uint32
	var x592 uint32
	x592, x591 = bits.Mul32(x586, arg1[0])
	var x593 uint32
	_, x593 = bits.Mul32(x586, arg1[2])
	var x595 uint32
	var x596 uint32
	x596, x595 = bits.Mul32(x586, arg1[1])
	var x597 uint32
	var x598 uint32
	x598, x597 = bits.Mul32(x586, arg1[0])
	var x599 uint32
	_, x599 = bits.Mul32(x586, arg1[3])
	var x601 uint32
	var x602 uint32
	x602, x601 = bits.Mul32(x586, arg1[2])
	var x603 uint32
	var x604 uint32
	x604, x603 = bits.Mul32(x586, arg1[1])
	var x605 uint32
	var x606 uint32
	x606, x605 = bits.Mul32(x586, arg1[0])
	var x607 uint32
	_, x607 = bits.Mul32(x586, arg1[4])
	var x609 uint32
	var x610 uint32
	x610, x609 = bits.Mul32(x586, arg1[3])
	var x611 uint32
	var x612 uint32
	x612, x611 = bits.Mul32(x586, arg1[2])
	var x613 uint32
	var x614 uint32
	x614, x613 = bits.Mul32(x586, arg1[1])
	var x615 uint32
	var x616 uint32
	x616, x615 = bits.Mul32(x586, arg1[0])
	var x617 uint32
	_, x617 = bits.Mul32(x586, arg1[5])
	var x619 uint32
	var x620 uint32
	x620, x619 = bits.Mul32(x586, arg1[4])
	var x621 uint32
	var x622 uint32
	x622, x621 = bits.Mul32(x586, arg1[3])
	var x623 uint32
	var x624 uint32
	x624, x623 = bits.Mul32(x586, arg1[2])
	var x625 uint32
	var x626 uint32
	x626, x625 = bits.Mul32(x586, arg1[1])
	var x627 uint32
	var x628 uint32
	x628, x627 = bits.Mul32(x586, arg1[0])
	var x629 uint32
	_, x629 = bits.Mul32(x586, arg1[6])
	var x631 uint32
	var x632 uint32
	x632, x631 = bits.Mul32(x586, arg1[5])
	var x633 uint32
	var x634 uint32
	x634, x633 = bits.Mul32(x586, arg1[4])
	var x635 uint32
	var x636 uint32
	x636, x635 = bits.Mul32(x586, arg1[3])
	var x637 uint32
	var x638 uint32
	x638, x637 = bits.Mul32(x586, arg1[2])
	var x639 uint32
	var x640 uint32
	x640, x639 = bits.Mul32(x586, arg1[1])
	var x641 uint32
	var x642 uint32
	x642, x641 = bits.Mul32(x586, arg1[0])
	var x643 uint32
	_, x643 = bits.Mul32(x586, arg1[7])
	var x645 uint32
	var x646 uint32
	x646, x645 = bits.Mul32(x586, arg1[6])
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x586, arg1[5])
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x586, arg1[4])
	var x651 uint32
	var x652 uint32
	x652, x651 = bits.Mul32(x586, arg1[3])
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x586, arg1[2])
	var x655 uint32
	var x656 uint32
	x656, x655 = bits.Mul32(x586, arg1[1])
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32(x586, arg1[0])
	var x659 uint32
	_, x659 = bits.Mul32(x586, arg1[8])
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x586, arg1[7])
	var x663 uint32
	var x664 uint32
	x664, x663 = bits.Mul32(x586, arg1[6])
	var x665 uint32
	var x666 uint32
	x666, x665 = bits.Mul32(x586, arg1[5])
	var x667 uint32
	var x668 uint32
	x668, x667 = bits.Mul32(x586, arg1[4])
	var x669 uint32
	var x670 uint32
	x670, x669 = bits.Mul32(x586, arg1[3])
	var x671 uint32
	var x672 uint32
	x672, x671 = bits.Mul32(x586, arg1[2])
	var x673 uint32
	var x674 uint32
	x674, x673 = bits.Mul32(x586, arg1[1])
	var x675 uint32
	var x676 uint32
	x676, x675 = bits.Mul32(x586, arg1[0])
	var x677 uint32
	_, x677 = bits.Mul32(arg5, x585)
	var x679 uint32
	var x680 uint32
	x680, x679 = bits.Mul32(arg5, arg1[8])
	var x681 uint32
	var x682 uint32
	x682, x681 = bits.Mul32(arg5, arg1[7])
	var x683 uint32
	var x684 uint32
	x684, x683 = bits.Mul32(arg5, arg1[6])
	var x685 uint32
	var x686 uint32
	x686, x685 = bits.Mul32(arg5, arg1[5])
	var x687 uint32
	var x688 uint32
	x688, x687 = bits.Mul32(arg5, arg1[4])
	var x689 uint32
	var x690 uint32
	x690, x689 = bits.Mul32(arg5, arg1[3])
	var x691 uint32
	var x692 uint32
	x692, x691 = bits.Mul32(arg5, arg1[2])
	var x693 uint32
	var x694 uint32
	x694, x693 = bits.Mul32(arg5, arg1[1])
	var x695 uint32
	var x696 uint32
	x696, x695 = bits.Mul32(arg5, arg1[0])
	var x697 uint32
	x697, _ = bits.Add32(x680, x587, uint32(0x0))
	var x699 uint32
	x699, _ = bits.Add32(x697, x589, uint32(0x0))
	var x701 uint32
	var x702 uint32
	x701, x702 = bits.Add32(x682, x591, uint32(0x0))
	var x703 uint32
	x703, _ = bits.Add32(x699, x592, uint32(uint1(x702)))
	var x705 uint32
	var x706 uint32
	x705, x706 = bits.Add32(x701, x595, uint32(0x0))
	var x707 uint32
	x707, _ = bits.Add32(x703, x593, uint32(uint1(x706)))
	var x709 uint32
	var x710 uint32
	x709, x710 = bits.Add32(x684, x597, uint32(0x0))
	var x711 uint32
	var x712 uint32
	x711, x712 = bits.Add32(x705, x598, uint32(uint1(x710)))
	var x713 uint32
	x713, _ = bits.Add32(x707, x596, uint32(uint1(x712)))
	var x715 uint32
	var x716 uint32
	x715, x716 = bits.Add32(x709, x603, uint32(0x0))
	var x717 uint32
	var x718 uint32
	x717, x718 = bits.Add32(x711, x601, uint32(uint1(x716)))
	var x719 uint32
	x719, _ = bits.Add32(x713, x599, uint32(uint1(x718)))
	var x721 uint32
	var x722 uint32
	x721, x722 = bits.Add32(x686, x605, uint32(0x0))
	var x723 uint32
	var x724 uint32
	x723, x724 = bits.Add32(x715, x606, uint32(uint1(x722)))
	var x725 uint32
	var x726 uint32
	x725, x726 = bits.Add32(x717, x604, uint32(uint1(x724)))
	var x727 uint32
	x727, _ = bits.Add32(x719, x602, uint32(uint1(x726)))
	var x729 uint32
	var x730 uint32
	x729, x730 = bits.Add32(x721, x613, uint32(0x0))
	var x731 uint32
	var x732 uint32
	x731, x732 = bits.Add32(x723, x611, uint32(uint1(x730)))
	var x733 uint32
	var x734 uint32
	x733, x734 = bits.Add32(x725, x609, uint32(uint1(x732)))
	var x735 uint32
	x735, _ = bits.Add32(x727, x607, uint32(uint1(x734)))
	var x737 uint32
	var x738 uint32
	x737, x738 = bits.Add32(x688, x615, uint32(0x0))
	var x739 uint32
	var x740 uint32
	x739, x740 = bits.Add32(x729, x616, uint32(uint1(x738)))
	var x741 uint32
	var x742 uint32
	x741, x742 = bits.Add32(x731, x614, uint32(uint1(x740)))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x733, x612, uint32(uint1(x742)))
	var x745 uint32
	x745, _ = bits.Add32(x735, x610, uint32(uint1(x744)))
	var x747 uint32
	var x748 uint32
	x747, x748 = bits.Add32(x737, x625, uint32(0x0))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x739, x623, uint32(uint1(x748)))
	var x751 uint32
	var x752 uint32
	x751, x752 = bits.Add32(x741, x621, uint32(uint1(x750)))
	var x753 uint32
	var x754 uint32
	x753, x754 = bits.Add32(x743, x619, uint32(uint1(x752)))
	var x755 uint32
	x755, _ = bits.Add32(x745, x617, uint32(uint1(x754)))
	var x757 uint32
	var x758 uint32
	x757, x758 = bits.Add32(x690, x627, uint32(0x0))
	var x759 uint32
	var x760 uint32
	x759, x760 = bits.Add32(x747, x628, uint32(uint1(x758)))
	var x761 uint32
	var x762 uint32
	x761, x762 = bits.Add32(x749, x626, uint32(uint1(x760)))
	var x763 uint32
	var x764 uint32
	x763, x764 = bits.Add32(x751, x624, uint32(uint1(x762)))
	var x765 uint32
	var x766 uint32
	x765, x766 = bits.Add32(x753, x622, uint32(uint1(x764)))
	var x767 uint32
	x767, _ = bits.Add32(x755, x620, uint32(uint1(x766)))
	var x769 uint32
	var x770 uint32
	x769, x770 = bits.Add32(x757, x639, uint32(0x0))
	var x771 uint32
	var x772 uint32
	x771, x772 = bits.Add32(x759, x637, uint32(uint1(x770)))
	var x773 uint32
	var x774 uint32
	x773, x774 = bits.Add32(x761, x635, uint32(uint1(x772)))
	var x775 uint32
	var x776 uint32
	x775, x776 = bits.Add32(x763, x633, uint32(uint1(x774)))
	var x777 uint32
	var x778 uint32
	x777, x778 = bits.Add32(x765, x631, uint32(uint1(x776)))
	var x779 uint32
	x779, _ = bits.Add32(x767, x629, uint32(uint1(x778)))
	var x781 uint32
	var x782 uint32
	x781, x782 = bits.Add32(x692, x641, uint32(0x0))
	var x783 uint32
	var x784 uint32
	x783, x784 = bits.Add32(x769, x642, uint32(uint1(x782)))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x771, x640, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x773, x638, uint32(uint1(x786)))
	var x789 uint32
	var x790 uint32
	x789, x790 = bits.Add32(x775, x636, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x777, x634, uint32(uint1(x790)))
	var x793 uint32
	x793, _ = bits.Add32(x779, x632, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x781, x655, uint32(0x0))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x783, x653, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(x785, x651, uint32(uint1(x798)))
	var x801 uint32
	var x802 uint32
	x801, x802 = bits.Add32(x787, x649, uint32(uint1(x800)))
	var x803 uint32
	var x804 uint32
	x803, x804 = bits.Add32(x789, x647, uint32(uint1(x802)))
	var x805 uint32
	var x806 uint32
	x805, x806 = bits.Add32(x791, x645, uint32(uint1(x804)))
	var x807 uint32
	x807, _ = bits.Add32(x793, x643, uint32(uint1(x806)))
	var x809 uint32
	var x810 uint32
	x809, x810 = bits.Add32(x694, x657, uint32(0x0))
	var x811 uint32
	var x812 uint32
	x811, x812 = bits.Add32(x795, x658, uint32(uint1(x810)))
	var x813 uint32
	var x814 uint32
	x813, x814 = bits.Add32(x797, x656, uint32(uint1(x812)))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x799, x654, uint32(uint1(x814)))
	var x817 uint32
	var x818 uint32
	x817, x818 = bits.Add32(x801, x652, uint32(uint1(x816)))
	var x819 uint32
	var x820 uint32
	x819, x820 = bits.Add32(x803, x650, uint32(uint1(x818)))
	var x821 uint32
	var x822 uint32
	x821, x822 = bits.Add32(x805, x648, uint32(uint1(x820)))
	var x823 uint32
	x823, _ = bits.Add32(x807, x646, uint32(uint1(x822)))
	var x825 uint32
	var x826 uint32
	x825, x826 = bits.Add32(x809, x673, uint32(0x0))
	var x827 uint32
	var x828 uint32
	x827, x828 = bits.Add32(x811, x671, uint32(uint1(x826)))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x813, x669, uint32(uint1(x828)))
	var x831 uint32
	var x832 uint32
	x831, x832 = bits.Add32(x815, x667, uint32(uint1(x830)))
	var x833 uint32
	var x834 uint32
	x833, x834 = bits.Add32(x817, x665, uint32(uint1(x832)))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x819, x663, uint32(uint1(x834)))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x821, x661, uint32(uint1(x836)))
	var x839 uint32
	x839, _ = bits.Add32(x823, x659, uint32(uint1(x838)))
	var x841 uint32
	var x842 uint32
	x841, x842 = bits.Add32(x696, x675, uint32(0x0))
	var x843 uint32
	var x844 uint32
	x843, x844 = bits.Add32(x825, x676, uint32(uint1(x842)))
	var x845 uint32
	var x846 uint32
	x845, x846 = bits.Add32(x827, x674, uint32(uint1(x844)))
	var x847 uint32
	var x848 uint32
	x847, x848 = bits.Add32(x829, x672, uint32(uint1(x846)))
	var x849 uint32
	var x850 uint32
	x849, x850 = bits.Add32(x831, x670, uint32(uint1(x848)))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x833, x668, uint32(uint1(x850)))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x835, x666, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x837, x664, uint32(uint1(x854)))
	var x857 uint32
	x857, _ = bits.Add32(x839, x662, uint32(uint1(x856)))
	var x859 uint32
	var x860 uint32
	x859, x860 = bits.Add32(x841, x693, uint32(0x0))
	var x861 uint32
	var x862 uint32
	x861, x862 = bits.Add32(x843, x691, uint32(uint1(x860)))
	var x863 uint32
	var x864 uint32
	x863, x864 = bits.Add32(x845, x689, uint32(uint1(x862)))
	var x865 uint32
	var x866 uint32
	x865, x866 = bits.Add32(x847, x687, uint32(uint1(x864)))
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x849, x685, uint32(uint1(x866)))
	var x869 uint32
	var x870 uint32
	x869, x870 = bits.Add32(x851, x683, uint32(uint1(x868)))
	var x871 uint32
	var x872 uint32
	x871, x872 = bits.Add32(x853, x681, uint32(uint1(x870)))
	var x873 uint32
	var x874 uint32
	x873, x874 = bits.Add32(x855, x679, uint32(uint1(x872)))
	var x875 uint32
	x875, _ = bits.Add32(x857, x677, uint32(uint1(x874)))
	var x877 uint32
	cmovznzU32(&x877, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x878 uint32
	cmovznzU32(&x878, uint1((arg6 >> 31)), uint32(0x0), 0xffffffff)
	var x879 uint32
	_, x879 = bits.Mul32(x878, arg2[0])
	var x881 uint32
	_, x881 = bits.Mul32(x878, arg2[1])
	var x883 uint32
	var x884 uint32
	x884, x883 = bits.Mul32(x878, arg2[0])
	var x885 uint32
	_, x885 = bits.Mul32(x878, arg2[2])
	var x887 uint32
	var x888 uint32
	x888, x887 = bits.Mul32(x878, arg2[1])
	var x889 uint32
	var x890 uint32
	x890, x889 = bits.Mul32(x878, arg2[0])
	var x891 uint32
	_, x891 = bits.Mul32(x878, arg2[3])
	var x893 uint32
	var x894 uint32
	x894, x893 = bits.Mul32(x878, arg2[2])
	var x895 uint32
	var x896 uint32
	x896, x895 = bits.Mul32(x878, arg2[1])
	var x897 uint32
	var x898 uint32
	x898, x897 = bits.Mul32(x878, arg2[0])
	var x899 uint32
	_, x899 = bits.Mul32(x878, arg2[4])
	var x901 uint32
	var x902 uint32
	x902, x901 = bits.Mul32(x878, arg2[3])
	var x903 uint32
	var x904 uint32
	x904, x903 = bits.Mul32(x878, arg2[2])
	var x905 uint32
	var x906 uint32
	x906, x905 = bits.Mul32(x878, arg2[1])
	var x907 uint32
	var x908 uint32
	x908, x907 = bits.Mul32(x878, arg2[0])
	var x909 uint32
	_, x909 = bits.Mul32(x878, arg2[5])
	var x911 uint32
	var x912 uint32
	x912, x911 = bits.Mul32(x878, arg2[4])
	var x913 uint32
	var x914 uint32
	x914, x913 = bits.Mul32(x878, arg2[3])
	var x915 uint32
	var x916 uint32
	x916, x915 = bits.Mul32(x878, arg2[2])
	var x917 uint32
	var x918 uint32
	x918, x917 = bits.Mul32(x878, arg2[1])
	var x919 uint32
	var x920 uint32
	x920, x919 = bits.Mul32(x878, arg2[0])
	var x921 uint32
	_, x921 = bits.Mul32(x878, arg2[6])
	var x923 uint32
	var x924 uint32
	x924, x923 = bits.Mul32(x878, arg2[5])
	var x925 uint32
	var x926 uint32
	x926, x925 = bits.Mul32(x878, arg2[4])
	var x927 uint32
	var x928 uint32
	x928, x927 = bits.Mul32(x878, arg2[3])
	var x929 uint32
	var x930 uint32
	x930, x929 = bits.Mul32(x878, arg2[2])
	var x931 uint32
	var x932 uint32
	x932, x931 = bits.Mul32(x878, arg2[1])
	var x933 uint32
	var x934 uint32
	x934, x933 = bits.Mul32(x878, arg2[0])
	var x935 uint32
	_, x935 = bits.Mul32(x878, arg2[7])
	var x937 uint32
	var x938 uint32
	x938, x937 = bits.Mul32(x878, arg2[6])
	var x939 uint32
	var x940 uint32
	x940, x939 = bits.Mul32(x878, arg2[5])
	var x941 uint32
	var x942 uint32
	x942, x941 = bits.Mul32(x878, arg2[4])
	var x943 uint32
	var x944 uint32
	x944, x943 = bits.Mul32(x878, arg2[3])
	var x945 uint32
	var x946 uint32
	x946, x945 = bits.Mul32(x878, arg2[2])
	var x947 uint32
	var x948 uint32
	x948, x947 = bits.Mul32(x878, arg2[1])
	var x949 uint32
	var x950 uint32
	x950, x949 = bits.Mul32(x878, arg2[0])
	var x951 uint32
	_, x951 = bits.Mul32(x878, arg2[8])
	var x953 uint32
	var x954 uint32
	x954, x953 = bits.Mul32(x878, arg2[7])
	var x955 uint32
	var x956 uint32
	x956, x955 = bits.Mul32(x878, arg2[6])
	var x957 uint32
	var x958 uint32
	x958, x957 = bits.Mul32(x878, arg2[5])
	var x959 uint32
	var x960 uint32
	x960, x959 = bits.Mul32(x878, arg2[4])
	var x961 uint32
	var x962 uint32
	x962, x961 = bits.Mul32(x878, arg2[3])
	var x963 uint32
	var x964 uint32
	x964, x963 = bits.Mul32(x878, arg2[2])
	var x965 uint32
	var x966 uint32
	x966, x965 = bits.Mul32(x878, arg2[1])
	var x967 uint32
	var x968 uint32
	x968, x967 = bits.Mul32(x878, arg2[0])
	var x969 uint32
	_, x969 = bits.Mul32(arg6, x877)
	var x971 uint32
	var x972 uint32
	x972, x971 = bits.Mul32(arg6, arg2[8])
	var x973 uint32
	var x974 uint32
	x974, x973 = bits.Mul32(arg6, arg2[7])
	var x975 uint32
	var x976 uint32
	x976, x975 = bits.Mul32(arg6, arg2[6])
	var x977 uint32
	var x978 uint32
	x978, x977 = bits.Mul32(arg6, arg2[5])
	var x979 uint32
	var x980 uint32
	x980, x979 = bits.Mul32(arg6, arg2[4])
	var x981 uint32
	var x982 uint32
	x982, x981 = bits.Mul32(arg6, arg2[3])
	var x983 uint32
	var x984 uint32
	x984, x983 = bits.Mul32(arg6, arg2[2])
	var x985 uint32
	var x986 uint32
	x986, x985 = bits.Mul32(arg6, arg2[1])
	var x987 uint32
	var x988 uint32
	x988, x987 = bits.Mul32(arg6, arg2[0])
	var x989 uint32
	x989, _ = bits.Add32(x972, x879, uint32(0x0))
	var x991 uint32
	x991, _ = bits.Add32(x989, x881, uint32(0x0))
	var x993 uint32
	var x994 uint32
	x993, x994 = bits.Add32(x974, x883, uint32(0x0))
	var x995 uint32
	x995, _ = bits.Add32(x991, x884, uint32(uint1(x994)))
	var x997 uint32
	var x998 uint32
	x997, x998 = bits.Add32(x993, x887, uint32(0x0))
	var x999 uint32
	x999, _ = bits.Add32(x995, x885, uint32(uint1(x998)))
	var x1001 uint32
	var x1002 uint32
	x1001, x1002 = bits.Add32(x976, x889, uint32(0x0))
	var x1003 uint32
	var x1004 uint32
	x1003, x1004 = bits.Add32(x997, x890, uint32(uint1(x1002)))
	var x1005 uint32
	x1005, _ = bits.Add32(x999, x888, uint32(uint1(x1004)))
	var x1007 uint32
	var x1008 uint32
	x1007, x1008 = bits.Add32(x1001, x895, uint32(0x0))
	var x1009 uint32
	var x1010 uint32
	x1009, x1010 = bits.Add32(x1003, x893, uint32(uint1(x1008)))
	var x1011 uint32
	x1011, _ = bits.Add32(x1005, x891, uint32(uint1(x1010)))
	var x1013 uint32
	var x1014 uint32
	x1013, x1014 = bits.Add32(x978, x897, uint32(0x0))
	var x1015 uint32
	var x1016 uint32
	x1015, x1016 = bits.Add32(x1007, x898, uint32(uint1(x1014)))
	var x1017 uint32
	var x1018 uint32
	x1017, x1018 = bits.Add32(x1009, x896, uint32(uint1(x1016)))
	var x1019 uint32
	x1019, _ = bits.Add32(x1011, x894, uint32(uint1(x1018)))
	var x1021 uint32
	var x1022 uint32
	x1021, x1022 = bits.Add32(x1013, x905, uint32(0x0))
	var x1023 uint32
	var x1024 uint32
	x1023, x1024 = bits.Add32(x1015, x903, uint32(uint1(x1022)))
	var x1025 uint32
	var x1026 uint32
	x1025, x1026 = bits.Add32(x1017, x901, uint32(uint1(x1024)))
	var x1027 uint32
	x1027, _ = bits.Add32(x1019, x899, uint32(uint1(x1026)))
	var x1029 uint32
	var x1030 uint32
	x1029, x1030 = bits.Add32(x980, x907, uint32(0x0))
	var x1031 uint32
	var x1032 uint32
	x1031, x1032 = bits.Add32(x1021, x908, uint32(uint1(x1030)))
	var x1033 uint32
	var x1034 uint32
	x1033, x1034 = bits.Add32(x1023, x906, uint32(uint1(x1032)))
	var x1035 uint32
	var x1036 uint32
	x1035, x1036 = bits.Add32(x1025, x904, uint32(uint1(x1034)))
	var x1037 uint32
	x1037, _ = bits.Add32(x1027, x902, uint32(uint1(x1036)))
	var x1039 uint32
	var x1040 uint32
	x1039, x1040 = bits.Add32(x1029, x917, uint32(0x0))
	var x1041 uint32
	var x1042 uint32
	x1041, x1042 = bits.Add32(x1031, x915, uint32(uint1(x1040)))
	var x1043 uint32
	var x1044 uint32
	x1043, x1044 = bits.Add32(x1033, x913, uint32(uint1(x1042)))
	var x1045 uint32
	var x1046 uint32
	x1045, x1046 = bits.Add32(x1035, x911, uint32(uint1(x1044)))
	var x1047 uint32
	x1047, _ = bits.Add32(x1037, x909, uint32(uint1(x1046)))
	var x1049 uint32
	var x1050 uint32
	x1049, x1050 = bits.Add32(x982, x919, uint32(0x0))
	var x1051 uint32
	var x1052 uint32
	x1051, x1052 = bits.Add32(x1039, x920, uint32(uint1(x1050)))
	var x1053 uint32
	var x1054 uint32
	x1053, x1054 = bits.Add32(x1041, x918, uint32(uint1(x1052)))
	var x1055 uint32
	var x1056 uint32
	x1055, x1056 = bits.Add32(x1043, x916, uint32(uint1(x1054)))
	var x1057 uint32
	var x1058 uint32
	x1057, x1058 = bits.Add32(x1045, x914, uint32(uint1(x1056)))
	var x1059 uint32
	x1059, _ = bits.Add32(x1047, x912, uint32(uint1(x1058)))
	var x1061 uint32
	var x1062 uint32
	x1061, x1062 = bits.Add32(x1049, x931, uint32(0x0))
	var x1063 uint32
	var x1064 uint32
	x1063, x1064 = bits.Add32(x1051, x929, uint32(uint1(x1062)))
	var x1065 uint32
	var x1066 uint32
	x1065, x1066 = bits.Add32(x1053, x927, uint32(uint1(x1064)))
	var x1067 uint32
	var x1068 uint32
	x1067, x1068 = bits.Add32(x1055, x925, uint32(uint1(x1066)))
	var x1069 uint32
	var x1070 uint32
	x1069, x1070 = bits.Add32(x1057, x923, uint32(uint1(x1068)))
	var x1071 uint32
	x1071, _ = bits.Add32(x1059, x921, uint32(uint1(x1070)))
	var x1073 uint32
	var x1074 uint32
	x1073, x1074 = bits.Add32(x984, x933, uint32(0x0))
	var x1075 uint32
	var x1076 uint32
	x1075, x1076 = bits.Add32(x1061, x934, uint32(uint1(x1074)))
	var x1077 uint32
	var x1078 uint32
	x1077, x1078 = bits.Add32(x1063, x932, uint32(uint1(x1076)))
	var x1079 uint32
	var x1080 uint32
	x1079, x1080 = bits.Add32(x1065, x930, uint32(uint1(x1078)))
	var x1081 uint32
	var x1082 uint32
	x1081, x1082 = bits.Add32(x1067, x928, uint32(uint1(x1080)))
	var x1083 uint32
	var x1084 uint32
	x1083, x1084 = bits.Add32(x1069, x926, uint32(uint1(x1082)))
	var x1085 uint32
	x1085, _ = bits.Add32(x1071, x924, uint32(uint1(x1084)))
	var x1087 uint32
	var x1088 uint32
	x1087, x1088 = bits.Add32(x1073, x947, uint32(0x0))
	var x1089 uint32
	var x1090 uint32
	x1089, x1090 = bits.Add32(x1075, x945, uint32(uint1(x1088)))
	var x1091 uint32
	var x1092 uint32
	x1091, x1092 = bits.Add32(x1077, x943, uint32(uint1(x1090)))
	var x1093 uint32
	var x1094 uint32
	x1093, x1094 = bits.Add32(x1079, x941, uint32(uint1(x1092)))
	var x1095 uint32
	var x1096 uint32
	x1095, x1096 = bits.Add32(x1081, x939, uint32(uint1(x1094)))
	var x1097 uint32
	var x1098 uint32
	x1097, x1098 = bits.Add32(x1083, x937, uint32(uint1(x1096)))
	var x1099 uint32
	x1099, _ = bits.Add32(x1085, x935, uint32(uint1(x1098)))
	var x1101 uint32
	var x1102 uint32
	x1101, x1102 = bits.Add32(x986, x949, uint32(0x0))
	var x1103 uint32
	var x1104 uint32
	x1103, x1104 = bits.Add32(x1087, x950, uint32(uint1(x1102)))
	var x1105 uint32
	var x1106 uint32
	x1105, x1106 = bits.Add32(x1089, x948, uint32(uint1(x1104)))
	var x1107 uint32
	var x1108 uint32
	x1107, x1108 = bits.Add32(x1091, x946, uint32(uint1(x1106)))
	var x1109 uint32
	var x1110 uint32
	x1109, x1110 = bits.Add32(x1093, x944, uint32(uint1(x1108)))
	var x1111 uint32
	var x1112 uint32
	x1111, x1112 = bits.Add32(x1095, x942, uint32(uint1(x1110)))
	var x1113 uint32
	var x1114 uint32
	x1113, x1114 = bits.Add32(x1097, x940, uint32(uint1(x1112)))
	var x1115 uint32
	x1115, _ = bits.Add32(x1099, x938, uint32(uint1(x1114)))
	var x1117 uint32
	var x1118 uint32
	x1117, x1118 = bits.Add32(x1101, x965, uint32(0x0))
	var x1119 uint32
	var x1120 uint32
	x1119, x1120 = bits.Add32(x1103, x963, uint32(uint1(x1118)))
	var x1121 uint32
	var x1122 uint32
	x1121, x1122 = bits.Add32(x1105, x961, uint32(uint1(x1120)))
	var x1123 uint32
	var x1124 uint32
	x1123, x1124 = bits.Add32(x1107, x959, uint32(uint1(x1122)))
	var x1125 uint32
	var x1126 uint32
	x1125, x1126 = bits.Add32(x1109, x957, uint32(uint1(x1124)))
	var x1127 uint32
	var x1128 uint32
	x1127, x1128 = bits.Add32(x1111, x955, uint32(uint1(x1126)))
	var x1129 uint32
	var x1130 uint32
	x1129, x1130 = bits.Add32(x1113, x953, uint32(uint1(x1128)))
	var x1131 uint32
	x1131, _ = bits.Add32(x1115, x951, uint32(uint1(x1130)))
	var x1133 uint32
	var x1134 uint32
	x1133, x1134 = bits.Add32(x988, x967, uint32(0x0))
	var x1135 uint32
	var x1136 uint32
	x1135, x1136 = bits.Add32(x1117, x968, uint32(uint1(x1134)))
	var x1137 uint32
	var x1138 uint32
	x1137, x1138 = bits.Add32(x1119, x966, uint32(uint1(x1136)))
	var x1139 uint32
	var x1140 uint32
	x1139, x1140 = bits.Add32(x1121, x964, uint32(uint1(x1138)))
	var x1141 uint32
	var x1142 uint32
	x1141, x1142 = bits.Add32(x1123, x962, uint32(uint1(x1140)))
	var x1143 uint32
	var x1144 uint32
	x1143, x1144 = bits.Add32(x1125, x960, uint32(uint1(x1142)))
	var x1145 uint32
	var x1146 uint32
	x1145, x1146 = bits.Add32(x1127, x958, uint32(uint1(x1144)))
	var x1147 uint32
	var x1148 uint32
	x1147, x1148 = bits.Add32(x1129, x956, uint32(uint1(x1146)))
	var x1149 uint32
	x1149, _ = bits.Add32(x1131, x954, uint32(uint1(x1148)))
	var x1151 uint32
	var x1152 uint32
	x1151, x1152 = bits.Add32(x1133, x985, uint32(0x0))
	var x1153 uint32
	var x1154 uint32
	x1153, x1154 = bits.Add32(x1135, x983, uint32(uint1(x1152)))
	var x1155 uint32
	var x1156 uint32
	x1155, x1156 = bits.Add32(x1137, x981, uint32(uint1(x1154)))
	var x1157 uint32
	var x1158 uint32
	x1157, x1158 = bits.Add32(x1139, x979, uint32(uint1(x1156)))
	var x1159 uint32
	var x1160 uint32
	x1159, x1160 = bits.Add32(x1141, x977, uint32(uint1(x1158)))
	var x1161 uint32
	var x1162 uint32
	x1161, x1162 = bits.Add32(x1143, x975, uint32(uint1(x1160)))
	var x1163 uint32
	var x1164 uint32
	x1163, x1164 = bits.Add32(x1145, x973, uint32(uint1(x1162)))
	var x1165 uint32
	var x1166 uint32
	x1165, x1166 = bits.Add32(x1147, x971, uint32(uint1(x1164)))
	var x1167 uint32
	x1167, _ = bits.Add32(x1149, x969, uint32(uint1(x1166)))
	var x1169 uint32
	var x1170 uint32
	x1169, x1170 = bits.Add32(x111, x403, uint32(0x0))
	var x1171 uint32
	var x1172 uint32
	x1171, x1172 = bits.Add32(x275, x567, uint32(uint1(x1170)))
	var x1173 uint32
	var x1174 uint32
	x1173, x1174 = bits.Add32(x277, x569, uint32(uint1(x1172)))
	var x1175 uint32
	var x1176 uint32
	x1175, x1176 = bits.Add32(x279, x571, uint32(uint1(x1174)))
	var x1177 uint32
	var x1178 uint32
	x1177, x1178 = bits.Add32(x281, x573, uint32(uint1(x1176)))
	var x1179 uint32
	var x1180 uint32
	x1179, x1180 = bits.Add32(x283, x575, uint32(uint1(x1178)))
	var x1181 uint32
	var x1182 uint32
	x1181, x1182 = bits.Add32(x285, x577, uint32(uint1(x1180)))
	var x1183 uint32
	var x1184 uint32
	x1183, x1184 = bits.Add32(x287, x579, uint32(uint1(x1182)))
	var x1185 uint32
	var x1186 uint32
	x1185, x1186 = bits.Add32(x289, x581, uint32(uint1(x1184)))
	var x1187 uint32
	x1187, _ = bits.Add32(x291, x583, uint32(uint1(x1186)))
	var x1189 uint32
	var x1190 uint32
	x1189, x1190 = bits.Add32(x695, x987, uint32(0x0))
	var x1191 uint32
	var x1192 uint32
	x1191, x1192 = bits.Add32(x859, x1151, uint32(uint1(x1190)))
	var x1193 uint32
	var x1194 uint32
	x1193, x1194 = bits.Add32(x861, x1153, uint32(uint1(x1192)))
	var x1195 uint32
	var x1196 uint32
	x1195, x1196 = bits.Add32(x863, x1155, uint32(uint1(x1194)))
	var x1197 uint32
	var x1198 uint32
	x1197, x1198 = bits.Add32(x865, x1157, uint32(uint1(x1196)))
	var x1199 uint32
	var x1200 uint32
	x1199, x1200 = bits.Add32(x867, x1159, uint32(uint1(x1198)))
	var x1201 uint32
	var x1202 uint32
	x1201, x1202 = bits.Add32(x869, x1161, uint32(uint1(x1200)))
	var x1203 uint32
	var x1204 uint32
	x1203, x1204 = bits.Add32(x871, x1163, uint32(uint1(x1202)))
	var x1205 uint32
	var x1206 uint32
	x1205, x1206 = bits.Add32(x873, x1165, uint32(uint1(x1204)))
	var x1207 uint32
	x1207, _ = bits.Add32(x875, x1167, uint32(uint1(x1206)))
	x1209 := ((x1169 >> 30) | ((x1171 << 2) & 0xffffffff))
	x1210 := ((x1171 >> 30) | ((x1173 << 2) & 0xffffffff))
	x1211 := ((x1173 >> 30) | ((x1175 << 2) & 0xffffffff))
	x1212 := ((x1175 >> 30) | ((x1177 << 2) & 0xffffffff))
	x1213 := ((x1177 >> 30) | ((x1179 << 2) & 0xffffffff))
	x1214 := ((x1179 >> 30) | ((x1181 << 2) & 0xffffffff))
	x1215 := ((x1181 >> 30) | ((x1183 << 2) & 0xffffffff))
	x1216 := ((x1183 >> 30) | ((x1185 << 2) & 0xffffffff))
	x1217 := ((x1185 >> 30) | ((x1187 << 2) & 0xffffffff))
	x1218 := ((x1189 >> 30) | ((x1191 << 2) & 0xffffffff))
	x1219 := ((x1191 >> 30) | ((x1193 << 2) & 0xffffffff))
	x1220 := ((x1193 >> 30) | ((x1195 << 2) & 0xffffffff))
	x1221 := ((x1195 >> 30) | ((x1197 << 2) & 0xffffffff))
	x1222 := ((x1197 >> 30) | ((x1199 << 2) & 0xffffffff))
	x1223 := ((x1199 >> 30) | ((x1201 << 2) & 0xffffffff))
	x1224 := ((x1201 >> 30) | ((x1203 << 2) & 0xffffffff))
	x1225 := ((x1203 >> 30) | ((x1205 << 2) & 0xffffffff))
	x1226 := ((x1205 >> 30) | ((x1207 << 2) & 0xffffffff))
	out1[0] = x1209
	out1[1] = x1210
	out1[2] = x1211
	out1[3] = x1212
	out1[4] = x1213
	out1[5] = x1214
	out1[6] = x1215
	out1[7] = x1216
	out1[8] = x1217
	out2[0] = x1218
	out2[1] = x1219
	out2[2] = x1220
	out2[3] = x1221
	out2[4] = x1222
	out2[5] = x1223
	out2[6] = x1224
	out2[7] = x1225
	out2[8] = x1226
}

// UpdateVr computes a update_vr.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [0x0 ~> 0xffffffff]
//   arg4: [0x0 ~> 0xffffffff]
//   arg5: [0x0 ~> 0xffffffff]
//   arg6: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func UpdateVr(out1 *[8]uint32, out2 *[8]uint32, arg1 *[8]uint32, arg2 *[8]uint32, arg3 uint32, arg4 uint32, arg5 uint32, arg6 uint32) {
	x1 := uint1((arg3 >> 31))
	x2 := (uint32((uint64((^arg3)) + uint64(0x1))) & 0xffffffff)
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(uint32(0x0), x2, uint32(0x0))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x14)))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x16)))
	var x19 uint32
	cmovznzU32(&x19, uint1(x18), uint32(0x0), 0xffffffff)
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x3, (x19 & 0xfffffc2f), uint32(0x0))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x5, (x19 & 0xfffffffe), uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x7, x19, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x9, x19, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, x19, uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, x19, uint32(uint1(x29)))
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x15, x19, uint32(uint1(x31)))
	var x34 uint32
	x34, _ = bits.Add32(x17, x19, uint32(uint1(x33)))
	var x36 uint32
	cmovznzU32(&x36, x1, arg3, x20)
	var x37 uint32
	cmovznzU32(&x37, x1, uint32(0x0), x22)
	var x38 uint32
	cmovznzU32(&x38, x1, uint32(0x0), x24)
	var x39 uint32
	cmovznzU32(&x39, x1, uint32(0x0), x26)
	var x40 uint32
	cmovznzU32(&x40, x1, uint32(0x0), x28)
	var x41 uint32
	cmovznzU32(&x41, x1, uint32(0x0), x30)
	var x42 uint32
	cmovznzU32(&x42, x1, uint32(0x0), x32)
	var x43 uint32
	cmovznzU32(&x43, x1, uint32(0x0), x34)
	x44 := uint1((arg4 >> 31))
	x45 := (uint32((uint64((^arg4)) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	var x47 uint32
	x46, x47 = bits.Sub32(uint32(0x0), x45, uint32(0x0))
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x47)))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x49)))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x51)))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x59)))
	var x62 uint32
	cmovznzU32(&x62, uint1(x61), uint32(0x0), 0xffffffff)
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(x46, (x62 & 0xfffffc2f), uint32(0x0))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(x48, (x62 & 0xfffffffe), uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x67, x68 = bits.Add32(x50, x62, uint32(uint1(x66)))
	var x69 uint32
	var x70 uint32
	x69, x70 = bits.Add32(x52, x62, uint32(uint1(x68)))
	var x71 uint32
	var x72 uint32
	x71, x72 = bits.Add32(x54, x62, uint32(uint1(x70)))
	var x73 uint32
	var x74 uint32
	x73, x74 = bits.Add32(x56, x62, uint32(uint1(x72)))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Add32(x58, x62, uint32(uint1(x74)))
	var x77 uint32
	x77, _ = bits.Add32(x60, x62, uint32(uint1(x76)))
	var x79 uint32
	cmovznzU32(&x79, x44, arg4, x63)
	var x80 uint32
	cmovznzU32(&x80, x44, uint32(0x0), x65)
	var x81 uint32
	cmovznzU32(&x81, x44, uint32(0x0), x67)
	var x82 uint32
	cmovznzU32(&x82, x44, uint32(0x0), x69)
	var x83 uint32
	cmovznzU32(&x83, x44, uint32(0x0), x71)
	var x84 uint32
	cmovznzU32(&x84, x44, uint32(0x0), x73)
	var x85 uint32
	cmovznzU32(&x85, x44, uint32(0x0), x75)
	var x86 uint32
	cmovznzU32(&x86, x44, uint32(0x0), x77)
	x87 := uint1((arg5 >> 31))
	x88 := (uint32((uint64((^arg5)) + uint64(0x1))) & 0xffffffff)
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Sub32(uint32(0x0), x88, uint32(0x0))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x90)))
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x92)))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x103, x104 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x102)))
	var x105 uint32
	cmovznzU32(&x105, uint1(x104), uint32(0x0), 0xffffffff)
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x89, (x105 & 0xfffffc2f), uint32(0x0))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x91, (x105 & 0xfffffffe), uint32(uint1(x107)))
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x93, x105, uint32(uint1(x109)))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x95, x105, uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x97, x105, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x99, x105, uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(x101, x105, uint32(uint1(x117)))
	var x120 uint32
	x120, _ = bits.Add32(x103, x105, uint32(uint1(x119)))
	var x122 uint32
	cmovznzU32(&x122, x87, arg5, x106)
	var x123 uint32
	cmovznzU32(&x123, x87, uint32(0x0), x108)
	var x124 uint32
	cmovznzU32(&x124, x87, uint32(0x0), x110)
	var x125 uint32
	cmovznzU32(&x125, x87, uint32(0x0), x112)
	var x126 uint32
	cmovznzU32(&x126, x87, uint32(0x0), x114)
	var x127 uint32
	cmovznzU32(&x127, x87, uint32(0x0), x116)
	var x128 uint32
	cmovznzU32(&x128, x87, uint32(0x0), x118)
	var x129 uint32
	cmovznzU32(&x129, x87, uint32(0x0), x120)
	x130 := uint1((arg6 >> 31))
	x131 := (uint32((uint64((^arg6)) + uint64(0x1))) & 0xffffffff)
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Sub32(uint32(0x0), x131, uint32(0x0))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x141)))
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x143)))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x145)))
	var x148 uint32
	cmovznzU32(&x148, uint1(x147), uint32(0x0), 0xffffffff)
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x132, (x148 & 0xfffffc2f), uint32(0x0))
	var x151 uint32
	var x152 uint32
	x151, x152 = bits.Add32(x134, (x148 & 0xfffffffe), uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x136, x148, uint32(uint1(x152)))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x138, x148, uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x140, x148, uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x142, x148, uint32(uint1(x158)))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x144, x148, uint32(uint1(x160)))
	var x163 uint32
	x163, _ = bits.Add32(x146, x148, uint32(uint1(x162)))
	var x165 uint32
	cmovznzU32(&x165, x130, arg6, x149)
	var x166 uint32
	cmovznzU32(&x166, x130, uint32(0x0), x151)
	var x167 uint32
	cmovznzU32(&x167, x130, uint32(0x0), x153)
	var x168 uint32
	cmovznzU32(&x168, x130, uint32(0x0), x155)
	var x169 uint32
	cmovznzU32(&x169, x130, uint32(0x0), x157)
	var x170 uint32
	cmovznzU32(&x170, x130, uint32(0x0), x159)
	var x171 uint32
	cmovznzU32(&x171, x130, uint32(0x0), x161)
	var x172 uint32
	cmovznzU32(&x172, x130, uint32(0x0), x163)
	var x173 uint32
	var x174 uint32
	x174, x173 = bits.Mul32(x36, arg1[7])
	var x175 uint32
	var x176 uint32
	x176, x175 = bits.Mul32(x36, arg1[6])
	var x177 uint32
	var x178 uint32
	x178, x177 = bits.Mul32(x36, arg1[5])
	var x179 uint32
	var x180 uint32
	x180, x179 = bits.Mul32(x36, arg1[4])
	var x181 uint32
	var x182 uint32
	x182, x181 = bits.Mul32(x36, arg1[3])
	var x183 uint32
	var x184 uint32
	x184, x183 = bits.Mul32(x36, arg1[2])
	var x185 uint32
	var x186 uint32
	x186, x185 = bits.Mul32(x36, arg1[1])
	var x187 uint32
	var x188 uint32
	x188, x187 = bits.Mul32(x36, arg1[0])
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x188, x185, uint32(0x0))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x186, x183, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x184, x181, uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x182, x179, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x180, x177, uint32(uint1(x196)))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x178, x175, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x176, x173, uint32(uint1(x200)))
	x203 := (uint32(uint1(x202)) + x174)
	var x204 uint32
	_, x204 = bits.Mul32(x187, 0xd2253531)
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x204, 0xffffffff)
	var x208 uint32
	var x209 uint32
	x209, x208 = bits.Mul32(x204, 0xffffffff)
	var x210 uint32
	var x211 uint32
	x211, x210 = bits.Mul32(x204, 0xffffffff)
	var x212 uint32
	var x213 uint32
	x213, x212 = bits.Mul32(x204, 0xffffffff)
	var x214 uint32
	var x215 uint32
	x215, x214 = bits.Mul32(x204, 0xffffffff)
	var x216 uint32
	var x217 uint32
	x217, x216 = bits.Mul32(x204, 0xffffffff)
	var x218 uint32
	var x219 uint32
	x219, x218 = bits.Mul32(x204, 0xfffffffe)
	var x220 uint32
	var x221 uint32
	x221, x220 = bits.Mul32(x204, 0xfffffc2f)
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32(x221, x218, uint32(0x0))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x219, x216, uint32(uint1(x223)))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x217, x214, uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x215, x212, uint32(uint1(x227)))
	var x230 uint32
	var x231 uint32
	x230, x231 = bits.Add32(x213, x210, uint32(uint1(x229)))
	var x232 uint32
	var x233 uint32
	x232, x233 = bits.Add32(x211, x208, uint32(uint1(x231)))
	var x234 uint32
	var x235 uint32
	x234, x235 = bits.Add32(x209, x206, uint32(uint1(x233)))
	x236 := (uint32(uint1(x235)) + x207)
	var x238 uint32
	_, x238 = bits.Add32(x187, x220, uint32(0x0))
	var x239 uint32
	var x240 uint32
	x239, x240 = bits.Add32(x189, x222, uint32(uint1(x238)))
	var x241 uint32
	var x242 uint32
	x241, x242 = bits.Add32(x191, x224, uint32(uint1(x240)))
	var x243 uint32
	var x244 uint32
	x243, x244 = bits.Add32(x193, x226, uint32(uint1(x242)))
	var x245 uint32
	var x246 uint32
	x245, x246 = bits.Add32(x195, x228, uint32(uint1(x244)))
	var x247 uint32
	var x248 uint32
	x247, x248 = bits.Add32(x197, x230, uint32(uint1(x246)))
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x199, x232, uint32(uint1(x248)))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x201, x234, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x203, x236, uint32(uint1(x252)))
	var x255 uint32
	var x256 uint32
	x256, x255 = bits.Mul32(x37, arg1[7])
	var x257 uint32
	var x258 uint32
	x258, x257 = bits.Mul32(x37, arg1[6])
	var x259 uint32
	var x260 uint32
	x260, x259 = bits.Mul32(x37, arg1[5])
	var x261 uint32
	var x262 uint32
	x262, x261 = bits.Mul32(x37, arg1[4])
	var x263 uint32
	var x264 uint32
	x264, x263 = bits.Mul32(x37, arg1[3])
	var x265 uint32
	var x266 uint32
	x266, x265 = bits.Mul32(x37, arg1[2])
	var x267 uint32
	var x268 uint32
	x268, x267 = bits.Mul32(x37, arg1[1])
	var x269 uint32
	var x270 uint32
	x270, x269 = bits.Mul32(x37, arg1[0])
	var x271 uint32
	var x272 uint32
	x271, x272 = bits.Add32(x270, x267, uint32(0x0))
	var x273 uint32
	var x274 uint32
	x273, x274 = bits.Add32(x268, x265, uint32(uint1(x272)))
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x266, x263, uint32(uint1(x274)))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x264, x261, uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x262, x259, uint32(uint1(x278)))
	var x281 uint32
	var x282 uint32
	x281, x282 = bits.Add32(x260, x257, uint32(uint1(x280)))
	var x283 uint32
	var x284 uint32
	x283, x284 = bits.Add32(x258, x255, uint32(uint1(x282)))
	x285 := (uint32(uint1(x284)) + x256)
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Add32(x239, x269, uint32(0x0))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Add32(x241, x271, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x243, x273, uint32(uint1(x289)))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x245, x275, uint32(uint1(x291)))
	var x294 uint32
	var x295 uint32
	x294, x295 = bits.Add32(x247, x277, uint32(uint1(x293)))
	var x296 uint32
	var x297 uint32
	x296, x297 = bits.Add32(x249, x279, uint32(uint1(x295)))
	var x298 uint32
	var x299 uint32
	x298, x299 = bits.Add32(x251, x281, uint32(uint1(x297)))
	var x300 uint32
	var x301 uint32
	x300, x301 = bits.Add32(x253, x283, uint32(uint1(x299)))
	var x302 uint32
	var x303 uint32
	x302, x303 = bits.Add32(uint32(uint1(x254)), x285, uint32(uint1(x301)))
	var x304 uint32
	_, x304 = bits.Mul32(x286, 0xd2253531)
	var x306 uint32
	var x307 uint32
	x307, x306 = bits.Mul32(x304, 0xffffffff)
	var x308 uint32
	var x309 uint32
	x309, x308 = bits.Mul32(x304, 0xffffffff)
	var x310 uint32
	var x311 uint32
	x311, x310 = bits.Mul32(x304, 0xffffffff)
	var x312 uint32
	var x313 uint32
	x313, x312 = bits.Mul32(x304, 0xffffffff)
	var x314 uint32
	var x315 uint32
	x315, x314 = bits.Mul32(x304, 0xffffffff)
	var x316 uint32
	var x317 uint32
	x317, x316 = bits.Mul32(x304, 0xffffffff)
	var x318 uint32
	var x319 uint32
	x319, x318 = bits.Mul32(x304, 0xfffffffe)
	var x320 uint32
	var x321 uint32
	x321, x320 = bits.Mul32(x304, 0xfffffc2f)
	var x322 uint32
	var x323 uint32
	x322, x323 = bits.Add32(x321, x318, uint32(0x0))
	var x324 uint32
	var x325 uint32
	x324, x325 = bits.Add32(x319, x316, uint32(uint1(x323)))
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x317, x314, uint32(uint1(x325)))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x315, x312, uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x313, x310, uint32(uint1(x329)))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x311, x308, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x309, x306, uint32(uint1(x333)))
	x336 := (uint32(uint1(x335)) + x307)
	var x338 uint32
	_, x338 = bits.Add32(x286, x320, uint32(0x0))
	var x339 uint32
	var x340 uint32
	x339, x340 = bits.Add32(x288, x322, uint32(uint1(x338)))
	var x341 uint32
	var x342 uint32
	x341, x342 = bits.Add32(x290, x324, uint32(uint1(x340)))
	var x343 uint32
	var x344 uint32
	x343, x344 = bits.Add32(x292, x326, uint32(uint1(x342)))
	var x345 uint32
	var x346 uint32
	x345, x346 = bits.Add32(x294, x328, uint32(uint1(x344)))
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x296, x330, uint32(uint1(x346)))
	var x349 uint32
	var x350 uint32
	x349, x350 = bits.Add32(x298, x332, uint32(uint1(x348)))
	var x351 uint32
	var x352 uint32
	x351, x352 = bits.Add32(x300, x334, uint32(uint1(x350)))
	var x353 uint32
	var x354 uint32
	x353, x354 = bits.Add32(x302, x336, uint32(uint1(x352)))
	x355 := (uint32(uint1(x354)) + uint32(uint1(x303)))
	var x356 uint32
	var x357 uint32
	x357, x356 = bits.Mul32(x38, arg1[7])
	var x358 uint32
	var x359 uint32
	x359, x358 = bits.Mul32(x38, arg1[6])
	var x360 uint32
	var x361 uint32
	x361, x360 = bits.Mul32(x38, arg1[5])
	var x362 uint32
	var x363 uint32
	x363, x362 = bits.Mul32(x38, arg1[4])
	var x364 uint32
	var x365 uint32
	x365, x364 = bits.Mul32(x38, arg1[3])
	var x366 uint32
	var x367 uint32
	x367, x366 = bits.Mul32(x38, arg1[2])
	var x368 uint32
	var x369 uint32
	x369, x368 = bits.Mul32(x38, arg1[1])
	var x370 uint32
	var x371 uint32
	x371, x370 = bits.Mul32(x38, arg1[0])
	var x372 uint32
	var x373 uint32
	x372, x373 = bits.Add32(x371, x368, uint32(0x0))
	var x374 uint32
	var x375 uint32
	x374, x375 = bits.Add32(x369, x366, uint32(uint1(x373)))
	var x376 uint32
	var x377 uint32
	x376, x377 = bits.Add32(x367, x364, uint32(uint1(x375)))
	var x378 uint32
	var x379 uint32
	x378, x379 = bits.Add32(x365, x362, uint32(uint1(x377)))
	var x380 uint32
	var x381 uint32
	x380, x381 = bits.Add32(x363, x360, uint32(uint1(x379)))
	var x382 uint32
	var x383 uint32
	x382, x383 = bits.Add32(x361, x358, uint32(uint1(x381)))
	var x384 uint32
	var x385 uint32
	x384, x385 = bits.Add32(x359, x356, uint32(uint1(x383)))
	x386 := (uint32(uint1(x385)) + x357)
	var x387 uint32
	var x388 uint32
	x387, x388 = bits.Add32(x339, x370, uint32(0x0))
	var x389 uint32
	var x390 uint32
	x389, x390 = bits.Add32(x341, x372, uint32(uint1(x388)))
	var x391 uint32
	var x392 uint32
	x391, x392 = bits.Add32(x343, x374, uint32(uint1(x390)))
	var x393 uint32
	var x394 uint32
	x393, x394 = bits.Add32(x345, x376, uint32(uint1(x392)))
	var x395 uint32
	var x396 uint32
	x395, x396 = bits.Add32(x347, x378, uint32(uint1(x394)))
	var x397 uint32
	var x398 uint32
	x397, x398 = bits.Add32(x349, x380, uint32(uint1(x396)))
	var x399 uint32
	var x400 uint32
	x399, x400 = bits.Add32(x351, x382, uint32(uint1(x398)))
	var x401 uint32
	var x402 uint32
	x401, x402 = bits.Add32(x353, x384, uint32(uint1(x400)))
	var x403 uint32
	var x404 uint32
	x403, x404 = bits.Add32(x355, x386, uint32(uint1(x402)))
	var x405 uint32
	_, x405 = bits.Mul32(x387, 0xd2253531)
	var x407 uint32
	var x408 uint32
	x408, x407 = bits.Mul32(x405, 0xffffffff)
	var x409 uint32
	var x410 uint32
	x410, x409 = bits.Mul32(x405, 0xffffffff)
	var x411 uint32
	var x412 uint32
	x412, x411 = bits.Mul32(x405, 0xffffffff)
	var x413 uint32
	var x414 uint32
	x414, x413 = bits.Mul32(x405, 0xffffffff)
	var x415 uint32
	var x416 uint32
	x416, x415 = bits.Mul32(x405, 0xffffffff)
	var x417 uint32
	var x418 uint32
	x418, x417 = bits.Mul32(x405, 0xffffffff)
	var x419 uint32
	var x420 uint32
	x420, x419 = bits.Mul32(x405, 0xfffffffe)
	var x421 uint32
	var x422 uint32
	x422, x421 = bits.Mul32(x405, 0xfffffc2f)
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x422, x419, uint32(0x0))
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x420, x417, uint32(uint1(x424)))
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x418, x415, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x416, x413, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x414, x411, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x412, x409, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x410, x407, uint32(uint1(x434)))
	x437 := (uint32(uint1(x436)) + x408)
	var x439 uint32
	_, x439 = bits.Add32(x387, x421, uint32(0x0))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x389, x423, uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x391, x425, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x444, x445 = bits.Add32(x393, x427, uint32(uint1(x443)))
	var x446 uint32
	var x447 uint32
	x446, x447 = bits.Add32(x395, x429, uint32(uint1(x445)))
	var x448 uint32
	var x449 uint32
	x448, x449 = bits.Add32(x397, x431, uint32(uint1(x447)))
	var x450 uint32
	var x451 uint32
	x450, x451 = bits.Add32(x399, x433, uint32(uint1(x449)))
	var x452 uint32
	var x453 uint32
	x452, x453 = bits.Add32(x401, x435, uint32(uint1(x451)))
	var x454 uint32
	var x455 uint32
	x454, x455 = bits.Add32(x403, x437, uint32(uint1(x453)))
	x456 := (uint32(uint1(x455)) + uint32(uint1(x404)))
	var x457 uint32
	var x458 uint32
	x458, x457 = bits.Mul32(x39, arg1[7])
	var x459 uint32
	var x460 uint32
	x460, x459 = bits.Mul32(x39, arg1[6])
	var x461 uint32
	var x462 uint32
	x462, x461 = bits.Mul32(x39, arg1[5])
	var x463 uint32
	var x464 uint32
	x464, x463 = bits.Mul32(x39, arg1[4])
	var x465 uint32
	var x466 uint32
	x466, x465 = bits.Mul32(x39, arg1[3])
	var x467 uint32
	var x468 uint32
	x468, x467 = bits.Mul32(x39, arg1[2])
	var x469 uint32
	var x470 uint32
	x470, x469 = bits.Mul32(x39, arg1[1])
	var x471 uint32
	var x472 uint32
	x472, x471 = bits.Mul32(x39, arg1[0])
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x472, x469, uint32(0x0))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x470, x467, uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x468, x465, uint32(uint1(x476)))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x466, x463, uint32(uint1(x478)))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x464, x461, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x462, x459, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x460, x457, uint32(uint1(x484)))
	x487 := (uint32(uint1(x486)) + x458)
	var x488 uint32
	var x489 uint32
	x488, x489 = bits.Add32(x440, x471, uint32(0x0))
	var x490 uint32
	var x491 uint32
	x490, x491 = bits.Add32(x442, x473, uint32(uint1(x489)))
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x444, x475, uint32(uint1(x491)))
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x446, x477, uint32(uint1(x493)))
	var x496 uint32
	var x497 uint32
	x496, x497 = bits.Add32(x448, x479, uint32(uint1(x495)))
	var x498 uint32
	var x499 uint32
	x498, x499 = bits.Add32(x450, x481, uint32(uint1(x497)))
	var x500 uint32
	var x501 uint32
	x500, x501 = bits.Add32(x452, x483, uint32(uint1(x499)))
	var x502 uint32
	var x503 uint32
	x502, x503 = bits.Add32(x454, x485, uint32(uint1(x501)))
	var x504 uint32
	var x505 uint32
	x504, x505 = bits.Add32(x456, x487, uint32(uint1(x503)))
	var x506 uint32
	_, x506 = bits.Mul32(x488, 0xd2253531)
	var x508 uint32
	var x509 uint32
	x509, x508 = bits.Mul32(x506, 0xffffffff)
	var x510 uint32
	var x511 uint32
	x511, x510 = bits.Mul32(x506, 0xffffffff)
	var x512 uint32
	var x513 uint32
	x513, x512 = bits.Mul32(x506, 0xffffffff)
	var x514 uint32
	var x515 uint32
	x515, x514 = bits.Mul32(x506, 0xffffffff)
	var x516 uint32
	var x517 uint32
	x517, x516 = bits.Mul32(x506, 0xffffffff)
	var x518 uint32
	var x519 uint32
	x519, x518 = bits.Mul32(x506, 0xffffffff)
	var x520 uint32
	var x521 uint32
	x521, x520 = bits.Mul32(x506, 0xfffffffe)
	var x522 uint32
	var x523 uint32
	x523, x522 = bits.Mul32(x506, 0xfffffc2f)
	var x524 uint32
	var x525 uint32
	x524, x525 = bits.Add32(x523, x520, uint32(0x0))
	var x526 uint32
	var x527 uint32
	x526, x527 = bits.Add32(x521, x518, uint32(uint1(x525)))
	var x528 uint32
	var x529 uint32
	x528, x529 = bits.Add32(x519, x516, uint32(uint1(x527)))
	var x530 uint32
	var x531 uint32
	x530, x531 = bits.Add32(x517, x514, uint32(uint1(x529)))
	var x532 uint32
	var x533 uint32
	x532, x533 = bits.Add32(x515, x512, uint32(uint1(x531)))
	var x534 uint32
	var x535 uint32
	x534, x535 = bits.Add32(x513, x510, uint32(uint1(x533)))
	var x536 uint32
	var x537 uint32
	x536, x537 = bits.Add32(x511, x508, uint32(uint1(x535)))
	x538 := (uint32(uint1(x537)) + x509)
	var x540 uint32
	_, x540 = bits.Add32(x488, x522, uint32(0x0))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x490, x524, uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x492, x526, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x494, x528, uint32(uint1(x544)))
	var x547 uint32
	var x548 uint32
	x547, x548 = bits.Add32(x496, x530, uint32(uint1(x546)))
	var x549 uint32
	var x550 uint32
	x549, x550 = bits.Add32(x498, x532, uint32(uint1(x548)))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(x500, x534, uint32(uint1(x550)))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x502, x536, uint32(uint1(x552)))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x504, x538, uint32(uint1(x554)))
	x557 := (uint32(uint1(x556)) + uint32(uint1(x505)))
	var x558 uint32
	var x559 uint32
	x559, x558 = bits.Mul32(x40, arg1[7])
	var x560 uint32
	var x561 uint32
	x561, x560 = bits.Mul32(x40, arg1[6])
	var x562 uint32
	var x563 uint32
	x563, x562 = bits.Mul32(x40, arg1[5])
	var x564 uint32
	var x565 uint32
	x565, x564 = bits.Mul32(x40, arg1[4])
	var x566 uint32
	var x567 uint32
	x567, x566 = bits.Mul32(x40, arg1[3])
	var x568 uint32
	var x569 uint32
	x569, x568 = bits.Mul32(x40, arg1[2])
	var x570 uint32
	var x571 uint32
	x571, x570 = bits.Mul32(x40, arg1[1])
	var x572 uint32
	var x573 uint32
	x573, x572 = bits.Mul32(x40, arg1[0])
	var x574 uint32
	var x575 uint32
	x574, x575 = bits.Add32(x573, x570, uint32(0x0))
	var x576 uint32
	var x577 uint32
	x576, x577 = bits.Add32(x571, x568, uint32(uint1(x575)))
	var x578 uint32
	var x579 uint32
	x578, x579 = bits.Add32(x569, x566, uint32(uint1(x577)))
	var x580 uint32
	var x581 uint32
	x580, x581 = bits.Add32(x567, x564, uint32(uint1(x579)))
	var x582 uint32
	var x583 uint32
	x582, x583 = bits.Add32(x565, x562, uint32(uint1(x581)))
	var x584 uint32
	var x585 uint32
	x584, x585 = bits.Add32(x563, x560, uint32(uint1(x583)))
	var x586 uint32
	var x587 uint32
	x586, x587 = bits.Add32(x561, x558, uint32(uint1(x585)))
	x588 := (uint32(uint1(x587)) + x559)
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x541, x572, uint32(0x0))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x543, x574, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x545, x576, uint32(uint1(x592)))
	var x595 uint32
	var x596 uint32
	x595, x596 = bits.Add32(x547, x578, uint32(uint1(x594)))
	var x597 uint32
	var x598 uint32
	x597, x598 = bits.Add32(x549, x580, uint32(uint1(x596)))
	var x599 uint32
	var x600 uint32
	x599, x600 = bits.Add32(x551, x582, uint32(uint1(x598)))
	var x601 uint32
	var x602 uint32
	x601, x602 = bits.Add32(x553, x584, uint32(uint1(x600)))
	var x603 uint32
	var x604 uint32
	x603, x604 = bits.Add32(x555, x586, uint32(uint1(x602)))
	var x605 uint32
	var x606 uint32
	x605, x606 = bits.Add32(x557, x588, uint32(uint1(x604)))
	var x607 uint32
	_, x607 = bits.Mul32(x589, 0xd2253531)
	var x609 uint32
	var x610 uint32
	x610, x609 = bits.Mul32(x607, 0xffffffff)
	var x611 uint32
	var x612 uint32
	x612, x611 = bits.Mul32(x607, 0xffffffff)
	var x613 uint32
	var x614 uint32
	x614, x613 = bits.Mul32(x607, 0xffffffff)
	var x615 uint32
	var x616 uint32
	x616, x615 = bits.Mul32(x607, 0xffffffff)
	var x617 uint32
	var x618 uint32
	x618, x617 = bits.Mul32(x607, 0xffffffff)
	var x619 uint32
	var x620 uint32
	x620, x619 = bits.Mul32(x607, 0xffffffff)
	var x621 uint32
	var x622 uint32
	x622, x621 = bits.Mul32(x607, 0xfffffffe)
	var x623 uint32
	var x624 uint32
	x624, x623 = bits.Mul32(x607, 0xfffffc2f)
	var x625 uint32
	var x626 uint32
	x625, x626 = bits.Add32(x624, x621, uint32(0x0))
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x622, x619, uint32(uint1(x626)))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x620, x617, uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x618, x615, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x616, x613, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x614, x611, uint32(uint1(x634)))
	var x637 uint32
	var x638 uint32
	x637, x638 = bits.Add32(x612, x609, uint32(uint1(x636)))
	x639 := (uint32(uint1(x638)) + x610)
	var x641 uint32
	_, x641 = bits.Add32(x589, x623, uint32(0x0))
	var x642 uint32
	var x643 uint32
	x642, x643 = bits.Add32(x591, x625, uint32(uint1(x641)))
	var x644 uint32
	var x645 uint32
	x644, x645 = bits.Add32(x593, x627, uint32(uint1(x643)))
	var x646 uint32
	var x647 uint32
	x646, x647 = bits.Add32(x595, x629, uint32(uint1(x645)))
	var x648 uint32
	var x649 uint32
	x648, x649 = bits.Add32(x597, x631, uint32(uint1(x647)))
	var x650 uint32
	var x651 uint32
	x650, x651 = bits.Add32(x599, x633, uint32(uint1(x649)))
	var x652 uint32
	var x653 uint32
	x652, x653 = bits.Add32(x601, x635, uint32(uint1(x651)))
	var x654 uint32
	var x655 uint32
	x654, x655 = bits.Add32(x603, x637, uint32(uint1(x653)))
	var x656 uint32
	var x657 uint32
	x656, x657 = bits.Add32(x605, x639, uint32(uint1(x655)))
	x658 := (uint32(uint1(x657)) + uint32(uint1(x606)))
	var x659 uint32
	var x660 uint32
	x660, x659 = bits.Mul32(x41, arg1[7])
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x41, arg1[6])
	var x663 uint32
	var x664 uint32
	x664, x663 = bits.Mul32(x41, arg1[5])
	var x665 uint32
	var x666 uint32
	x666, x665 = bits.Mul32(x41, arg1[4])
	var x667 uint32
	var x668 uint32
	x668, x667 = bits.Mul32(x41, arg1[3])
	var x669 uint32
	var x670 uint32
	x670, x669 = bits.Mul32(x41, arg1[2])
	var x671 uint32
	var x672 uint32
	x672, x671 = bits.Mul32(x41, arg1[1])
	var x673 uint32
	var x674 uint32
	x674, x673 = bits.Mul32(x41, arg1[0])
	var x675 uint32
	var x676 uint32
	x675, x676 = bits.Add32(x674, x671, uint32(0x0))
	var x677 uint32
	var x678 uint32
	x677, x678 = bits.Add32(x672, x669, uint32(uint1(x676)))
	var x679 uint32
	var x680 uint32
	x679, x680 = bits.Add32(x670, x667, uint32(uint1(x678)))
	var x681 uint32
	var x682 uint32
	x681, x682 = bits.Add32(x668, x665, uint32(uint1(x680)))
	var x683 uint32
	var x684 uint32
	x683, x684 = bits.Add32(x666, x663, uint32(uint1(x682)))
	var x685 uint32
	var x686 uint32
	x685, x686 = bits.Add32(x664, x661, uint32(uint1(x684)))
	var x687 uint32
	var x688 uint32
	x687, x688 = bits.Add32(x662, x659, uint32(uint1(x686)))
	x689 := (uint32(uint1(x688)) + x660)
	var x690 uint32
	var x691 uint32
	x690, x691 = bits.Add32(x642, x673, uint32(0x0))
	var x692 uint32
	var x693 uint32
	x692, x693 = bits.Add32(x644, x675, uint32(uint1(x691)))
	var x694 uint32
	var x695 uint32
	x694, x695 = bits.Add32(x646, x677, uint32(uint1(x693)))
	var x696 uint32
	var x697 uint32
	x696, x697 = bits.Add32(x648, x679, uint32(uint1(x695)))
	var x698 uint32
	var x699 uint32
	x698, x699 = bits.Add32(x650, x681, uint32(uint1(x697)))
	var x700 uint32
	var x701 uint32
	x700, x701 = bits.Add32(x652, x683, uint32(uint1(x699)))
	var x702 uint32
	var x703 uint32
	x702, x703 = bits.Add32(x654, x685, uint32(uint1(x701)))
	var x704 uint32
	var x705 uint32
	x704, x705 = bits.Add32(x656, x687, uint32(uint1(x703)))
	var x706 uint32
	var x707 uint32
	x706, x707 = bits.Add32(x658, x689, uint32(uint1(x705)))
	var x708 uint32
	_, x708 = bits.Mul32(x690, 0xd2253531)
	var x710 uint32
	var x711 uint32
	x711, x710 = bits.Mul32(x708, 0xffffffff)
	var x712 uint32
	var x713 uint32
	x713, x712 = bits.Mul32(x708, 0xffffffff)
	var x714 uint32
	var x715 uint32
	x715, x714 = bits.Mul32(x708, 0xffffffff)
	var x716 uint32
	var x717 uint32
	x717, x716 = bits.Mul32(x708, 0xffffffff)
	var x718 uint32
	var x719 uint32
	x719, x718 = bits.Mul32(x708, 0xffffffff)
	var x720 uint32
	var x721 uint32
	x721, x720 = bits.Mul32(x708, 0xffffffff)
	var x722 uint32
	var x723 uint32
	x723, x722 = bits.Mul32(x708, 0xfffffffe)
	var x724 uint32
	var x725 uint32
	x725, x724 = bits.Mul32(x708, 0xfffffc2f)
	var x726 uint32
	var x727 uint32
	x726, x727 = bits.Add32(x725, x722, uint32(0x0))
	var x728 uint32
	var x729 uint32
	x728, x729 = bits.Add32(x723, x720, uint32(uint1(x727)))
	var x730 uint32
	var x731 uint32
	x730, x731 = bits.Add32(x721, x718, uint32(uint1(x729)))
	var x732 uint32
	var x733 uint32
	x732, x733 = bits.Add32(x719, x716, uint32(uint1(x731)))
	var x734 uint32
	var x735 uint32
	x734, x735 = bits.Add32(x717, x714, uint32(uint1(x733)))
	var x736 uint32
	var x737 uint32
	x736, x737 = bits.Add32(x715, x712, uint32(uint1(x735)))
	var x738 uint32
	var x739 uint32
	x738, x739 = bits.Add32(x713, x710, uint32(uint1(x737)))
	x740 := (uint32(uint1(x739)) + x711)
	var x742 uint32
	_, x742 = bits.Add32(x690, x724, uint32(0x0))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x692, x726, uint32(uint1(x742)))
	var x745 uint32
	var x746 uint32
	x745, x746 = bits.Add32(x694, x728, uint32(uint1(x744)))
	var x747 uint32
	var x748 uint32
	x747, x748 = bits.Add32(x696, x730, uint32(uint1(x746)))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x698, x732, uint32(uint1(x748)))
	var x751 uint32
	var x752 uint32
	x751, x752 = bits.Add32(x700, x734, uint32(uint1(x750)))
	var x753 uint32
	var x754 uint32
	x753, x754 = bits.Add32(x702, x736, uint32(uint1(x752)))
	var x755 uint32
	var x756 uint32
	x755, x756 = bits.Add32(x704, x738, uint32(uint1(x754)))
	var x757 uint32
	var x758 uint32
	x757, x758 = bits.Add32(x706, x740, uint32(uint1(x756)))
	x759 := (uint32(uint1(x758)) + uint32(uint1(x707)))
	var x760 uint32
	var x761 uint32
	x761, x760 = bits.Mul32(x42, arg1[7])
	var x762 uint32
	var x763 uint32
	x763, x762 = bits.Mul32(x42, arg1[6])
	var x764 uint32
	var x765 uint32
	x765, x764 = bits.Mul32(x42, arg1[5])
	var x766 uint32
	var x767 uint32
	x767, x766 = bits.Mul32(x42, arg1[4])
	var x768 uint32
	var x769 uint32
	x769, x768 = bits.Mul32(x42, arg1[3])
	var x770 uint32
	var x771 uint32
	x771, x770 = bits.Mul32(x42, arg1[2])
	var x772 uint32
	var x773 uint32
	x773, x772 = bits.Mul32(x42, arg1[1])
	var x774 uint32
	var x775 uint32
	x775, x774 = bits.Mul32(x42, arg1[0])
	var x776 uint32
	var x777 uint32
	x776, x777 = bits.Add32(x775, x772, uint32(0x0))
	var x778 uint32
	var x779 uint32
	x778, x779 = bits.Add32(x773, x770, uint32(uint1(x777)))
	var x780 uint32
	var x781 uint32
	x780, x781 = bits.Add32(x771, x768, uint32(uint1(x779)))
	var x782 uint32
	var x783 uint32
	x782, x783 = bits.Add32(x769, x766, uint32(uint1(x781)))
	var x784 uint32
	var x785 uint32
	x784, x785 = bits.Add32(x767, x764, uint32(uint1(x783)))
	var x786 uint32
	var x787 uint32
	x786, x787 = bits.Add32(x765, x762, uint32(uint1(x785)))
	var x788 uint32
	var x789 uint32
	x788, x789 = bits.Add32(x763, x760, uint32(uint1(x787)))
	x790 := (uint32(uint1(x789)) + x761)
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x743, x774, uint32(0x0))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x745, x776, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x747, x778, uint32(uint1(x794)))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x749, x780, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(x751, x782, uint32(uint1(x798)))
	var x801 uint32
	var x802 uint32
	x801, x802 = bits.Add32(x753, x784, uint32(uint1(x800)))
	var x803 uint32
	var x804 uint32
	x803, x804 = bits.Add32(x755, x786, uint32(uint1(x802)))
	var x805 uint32
	var x806 uint32
	x805, x806 = bits.Add32(x757, x788, uint32(uint1(x804)))
	var x807 uint32
	var x808 uint32
	x807, x808 = bits.Add32(x759, x790, uint32(uint1(x806)))
	var x809 uint32
	_, x809 = bits.Mul32(x791, 0xd2253531)
	var x811 uint32
	var x812 uint32
	x812, x811 = bits.Mul32(x809, 0xffffffff)
	var x813 uint32
	var x814 uint32
	x814, x813 = bits.Mul32(x809, 0xffffffff)
	var x815 uint32
	var x816 uint32
	x816, x815 = bits.Mul32(x809, 0xffffffff)
	var x817 uint32
	var x818 uint32
	x818, x817 = bits.Mul32(x809, 0xffffffff)
	var x819 uint32
	var x820 uint32
	x820, x819 = bits.Mul32(x809, 0xffffffff)
	var x821 uint32
	var x822 uint32
	x822, x821 = bits.Mul32(x809, 0xffffffff)
	var x823 uint32
	var x824 uint32
	x824, x823 = bits.Mul32(x809, 0xfffffffe)
	var x825 uint32
	var x826 uint32
	x826, x825 = bits.Mul32(x809, 0xfffffc2f)
	var x827 uint32
	var x828 uint32
	x827, x828 = bits.Add32(x826, x823, uint32(0x0))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x824, x821, uint32(uint1(x828)))
	var x831 uint32
	var x832 uint32
	x831, x832 = bits.Add32(x822, x819, uint32(uint1(x830)))
	var x833 uint32
	var x834 uint32
	x833, x834 = bits.Add32(x820, x817, uint32(uint1(x832)))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x818, x815, uint32(uint1(x834)))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x816, x813, uint32(uint1(x836)))
	var x839 uint32
	var x840 uint32
	x839, x840 = bits.Add32(x814, x811, uint32(uint1(x838)))
	x841 := (uint32(uint1(x840)) + x812)
	var x843 uint32
	_, x843 = bits.Add32(x791, x825, uint32(0x0))
	var x844 uint32
	var x845 uint32
	x844, x845 = bits.Add32(x793, x827, uint32(uint1(x843)))
	var x846 uint32
	var x847 uint32
	x846, x847 = bits.Add32(x795, x829, uint32(uint1(x845)))
	var x848 uint32
	var x849 uint32
	x848, x849 = bits.Add32(x797, x831, uint32(uint1(x847)))
	var x850 uint32
	var x851 uint32
	x850, x851 = bits.Add32(x799, x833, uint32(uint1(x849)))
	var x852 uint32
	var x853 uint32
	x852, x853 = bits.Add32(x801, x835, uint32(uint1(x851)))
	var x854 uint32
	var x855 uint32
	x854, x855 = bits.Add32(x803, x837, uint32(uint1(x853)))
	var x856 uint32
	var x857 uint32
	x856, x857 = bits.Add32(x805, x839, uint32(uint1(x855)))
	var x858 uint32
	var x859 uint32
	x858, x859 = bits.Add32(x807, x841, uint32(uint1(x857)))
	x860 := (uint32(uint1(x859)) + uint32(uint1(x808)))
	var x861 uint32
	var x862 uint32
	x862, x861 = bits.Mul32(x43, arg1[7])
	var x863 uint32
	var x864 uint32
	x864, x863 = bits.Mul32(x43, arg1[6])
	var x865 uint32
	var x866 uint32
	x866, x865 = bits.Mul32(x43, arg1[5])
	var x867 uint32
	var x868 uint32
	x868, x867 = bits.Mul32(x43, arg1[4])
	var x869 uint32
	var x870 uint32
	x870, x869 = bits.Mul32(x43, arg1[3])
	var x871 uint32
	var x872 uint32
	x872, x871 = bits.Mul32(x43, arg1[2])
	var x873 uint32
	var x874 uint32
	x874, x873 = bits.Mul32(x43, arg1[1])
	var x875 uint32
	var x876 uint32
	x876, x875 = bits.Mul32(x43, arg1[0])
	var x877 uint32
	var x878 uint32
	x877, x878 = bits.Add32(x876, x873, uint32(0x0))
	var x879 uint32
	var x880 uint32
	x879, x880 = bits.Add32(x874, x871, uint32(uint1(x878)))
	var x881 uint32
	var x882 uint32
	x881, x882 = bits.Add32(x872, x869, uint32(uint1(x880)))
	var x883 uint32
	var x884 uint32
	x883, x884 = bits.Add32(x870, x867, uint32(uint1(x882)))
	var x885 uint32
	var x886 uint32
	x885, x886 = bits.Add32(x868, x865, uint32(uint1(x884)))
	var x887 uint32
	var x888 uint32
	x887, x888 = bits.Add32(x866, x863, uint32(uint1(x886)))
	var x889 uint32
	var x890 uint32
	x889, x890 = bits.Add32(x864, x861, uint32(uint1(x888)))
	x891 := (uint32(uint1(x890)) + x862)
	var x892 uint32
	var x893 uint32
	x892, x893 = bits.Add32(x844, x875, uint32(0x0))
	var x894 uint32
	var x895 uint32
	x894, x895 = bits.Add32(x846, x877, uint32(uint1(x893)))
	var x896 uint32
	var x897 uint32
	x896, x897 = bits.Add32(x848, x879, uint32(uint1(x895)))
	var x898 uint32
	var x899 uint32
	x898, x899 = bits.Add32(x850, x881, uint32(uint1(x897)))
	var x900 uint32
	var x901 uint32
	x900, x901 = bits.Add32(x852, x883, uint32(uint1(x899)))
	var x902 uint32
	var x903 uint32
	x902, x903 = bits.Add32(x854, x885, uint32(uint1(x901)))
	var x904 uint32
	var x905 uint32
	x904, x905 = bits.Add32(x856, x887, uint32(uint1(x903)))
	var x906 uint32
	var x907 uint32
	x906, x907 = bits.Add32(x858, x889, uint32(uint1(x905)))
	var x908 uint32
	var x909 uint32
	x908, x909 = bits.Add32(x860, x891, uint32(uint1(x907)))
	var x910 uint32
	_, x910 = bits.Mul32(x892, 0xd2253531)
	var x912 uint32
	var x913 uint32
	x913, x912 = bits.Mul32(x910, 0xffffffff)
	var x914 uint32
	var x915 uint32
	x915, x914 = bits.Mul32(x910, 0xffffffff)
	var x916 uint32
	var x917 uint32
	x917, x916 = bits.Mul32(x910, 0xffffffff)
	var x918 uint32
	var x919 uint32
	x919, x918 = bits.Mul32(x910, 0xffffffff)
	var x920 uint32
	var x921 uint32
	x921, x920 = bits.Mul32(x910, 0xffffffff)
	var x922 uint32
	var x923 uint32
	x923, x922 = bits.Mul32(x910, 0xffffffff)
	var x924 uint32
	var x925 uint32
	x925, x924 = bits.Mul32(x910, 0xfffffffe)
	var x926 uint32
	var x927 uint32
	x927, x926 = bits.Mul32(x910, 0xfffffc2f)
	var x928 uint32
	var x929 uint32
	x928, x929 = bits.Add32(x927, x924, uint32(0x0))
	var x930 uint32
	var x931 uint32
	x930, x931 = bits.Add32(x925, x922, uint32(uint1(x929)))
	var x932 uint32
	var x933 uint32
	x932, x933 = bits.Add32(x923, x920, uint32(uint1(x931)))
	var x934 uint32
	var x935 uint32
	x934, x935 = bits.Add32(x921, x918, uint32(uint1(x933)))
	var x936 uint32
	var x937 uint32
	x936, x937 = bits.Add32(x919, x916, uint32(uint1(x935)))
	var x938 uint32
	var x939 uint32
	x938, x939 = bits.Add32(x917, x914, uint32(uint1(x937)))
	var x940 uint32
	var x941 uint32
	x940, x941 = bits.Add32(x915, x912, uint32(uint1(x939)))
	x942 := (uint32(uint1(x941)) + x913)
	var x944 uint32
	_, x944 = bits.Add32(x892, x926, uint32(0x0))
	var x945 uint32
	var x946 uint32
	x945, x946 = bits.Add32(x894, x928, uint32(uint1(x944)))
	var x947 uint32
	var x948 uint32
	x947, x948 = bits.Add32(x896, x930, uint32(uint1(x946)))
	var x949 uint32
	var x950 uint32
	x949, x950 = bits.Add32(x898, x932, uint32(uint1(x948)))
	var x951 uint32
	var x952 uint32
	x951, x952 = bits.Add32(x900, x934, uint32(uint1(x950)))
	var x953 uint32
	var x954 uint32
	x953, x954 = bits.Add32(x902, x936, uint32(uint1(x952)))
	var x955 uint32
	var x956 uint32
	x955, x956 = bits.Add32(x904, x938, uint32(uint1(x954)))
	var x957 uint32
	var x958 uint32
	x957, x958 = bits.Add32(x906, x940, uint32(uint1(x956)))
	var x959 uint32
	var x960 uint32
	x959, x960 = bits.Add32(x908, x942, uint32(uint1(x958)))
	x961 := (uint32(uint1(x960)) + uint32(uint1(x909)))
	var x962 uint32
	var x963 uint32
	x962, x963 = bits.Sub32(x945, 0xfffffc2f, uint32(0x0))
	var x964 uint32
	var x965 uint32
	x964, x965 = bits.Sub32(x947, 0xfffffffe, uint32(uint1(x963)))
	var x966 uint32
	var x967 uint32
	x966, x967 = bits.Sub32(x949, 0xffffffff, uint32(uint1(x965)))
	var x968 uint32
	var x969 uint32
	x968, x969 = bits.Sub32(x951, 0xffffffff, uint32(uint1(x967)))
	var x970 uint32
	var x971 uint32
	x970, x971 = bits.Sub32(x953, 0xffffffff, uint32(uint1(x969)))
	var x972 uint32
	var x973 uint32
	x972, x973 = bits.Sub32(x955, 0xffffffff, uint32(uint1(x971)))
	var x974 uint32
	var x975 uint32
	x974, x975 = bits.Sub32(x957, 0xffffffff, uint32(uint1(x973)))
	var x976 uint32
	var x977 uint32
	x976, x977 = bits.Sub32(x959, 0xffffffff, uint32(uint1(x975)))
	var x979 uint32
	_, x979 = bits.Sub32(x961, uint32(0x0), uint32(uint1(x977)))
	var x980 uint32
	cmovznzU32(&x980, uint1(x979), x962, x945)
	var x981 uint32
	cmovznzU32(&x981, uint1(x979), x964, x947)
	var x982 uint32
	cmovznzU32(&x982, uint1(x979), x966, x949)
	var x983 uint32
	cmovznzU32(&x983, uint1(x979), x968, x951)
	var x984 uint32
	cmovznzU32(&x984, uint1(x979), x970, x953)
	var x985 uint32
	cmovznzU32(&x985, uint1(x979), x972, x955)
	var x986 uint32
	cmovznzU32(&x986, uint1(x979), x974, x957)
	var x987 uint32
	cmovznzU32(&x987, uint1(x979), x976, x959)
	var x988 uint32
	var x989 uint32
	x989, x988 = bits.Mul32(x79, arg2[7])
	var x990 uint32
	var x991 uint32
	x991, x990 = bits.Mul32(x79, arg2[6])
	var x992 uint32
	var x993 uint32
	x993, x992 = bits.Mul32(x79, arg2[5])
	var x994 uint32
	var x995 uint32
	x995, x994 = bits.Mul32(x79, arg2[4])
	var x996 uint32
	var x997 uint32
	x997, x996 = bits.Mul32(x79, arg2[3])
	var x998 uint32
	var x999 uint32
	x999, x998 = bits.Mul32(x79, arg2[2])
	var x1000 uint32
	var x1001 uint32
	x1001, x1000 = bits.Mul32(x79, arg2[1])
	var x1002 uint32
	var x1003 uint32
	x1003, x1002 = bits.Mul32(x79, arg2[0])
	var x1004 uint32
	var x1005 uint32
	x1004, x1005 = bits.Add32(x1003, x1000, uint32(0x0))
	var x1006 uint32
	var x1007 uint32
	x1006, x1007 = bits.Add32(x1001, x998, uint32(uint1(x1005)))
	var x1008 uint32
	var x1009 uint32
	x1008, x1009 = bits.Add32(x999, x996, uint32(uint1(x1007)))
	var x1010 uint32
	var x1011 uint32
	x1010, x1011 = bits.Add32(x997, x994, uint32(uint1(x1009)))
	var x1012 uint32
	var x1013 uint32
	x1012, x1013 = bits.Add32(x995, x992, uint32(uint1(x1011)))
	var x1014 uint32
	var x1015 uint32
	x1014, x1015 = bits.Add32(x993, x990, uint32(uint1(x1013)))
	var x1016 uint32
	var x1017 uint32
	x1016, x1017 = bits.Add32(x991, x988, uint32(uint1(x1015)))
	x1018 := (uint32(uint1(x1017)) + x989)
	var x1019 uint32
	_, x1019 = bits.Mul32(x1002, 0xd2253531)
	var x1021 uint32
	var x1022 uint32
	x1022, x1021 = bits.Mul32(x1019, 0xffffffff)
	var x1023 uint32
	var x1024 uint32
	x1024, x1023 = bits.Mul32(x1019, 0xffffffff)
	var x1025 uint32
	var x1026 uint32
	x1026, x1025 = bits.Mul32(x1019, 0xffffffff)
	var x1027 uint32
	var x1028 uint32
	x1028, x1027 = bits.Mul32(x1019, 0xffffffff)
	var x1029 uint32
	var x1030 uint32
	x1030, x1029 = bits.Mul32(x1019, 0xffffffff)
	var x1031 uint32
	var x1032 uint32
	x1032, x1031 = bits.Mul32(x1019, 0xffffffff)
	var x1033 uint32
	var x1034 uint32
	x1034, x1033 = bits.Mul32(x1019, 0xfffffffe)
	var x1035 uint32
	var x1036 uint32
	x1036, x1035 = bits.Mul32(x1019, 0xfffffc2f)
	var x1037 uint32
	var x1038 uint32
	x1037, x1038 = bits.Add32(x1036, x1033, uint32(0x0))
	var x1039 uint32
	var x1040 uint32
	x1039, x1040 = bits.Add32(x1034, x1031, uint32(uint1(x1038)))
	var x1041 uint32
	var x1042 uint32
	x1041, x1042 = bits.Add32(x1032, x1029, uint32(uint1(x1040)))
	var x1043 uint32
	var x1044 uint32
	x1043, x1044 = bits.Add32(x1030, x1027, uint32(uint1(x1042)))
	var x1045 uint32
	var x1046 uint32
	x1045, x1046 = bits.Add32(x1028, x1025, uint32(uint1(x1044)))
	var x1047 uint32
	var x1048 uint32
	x1047, x1048 = bits.Add32(x1026, x1023, uint32(uint1(x1046)))
	var x1049 uint32
	var x1050 uint32
	x1049, x1050 = bits.Add32(x1024, x1021, uint32(uint1(x1048)))
	x1051 := (uint32(uint1(x1050)) + x1022)
	var x1053 uint32
	_, x1053 = bits.Add32(x1002, x1035, uint32(0x0))
	var x1054 uint32
	var x1055 uint32
	x1054, x1055 = bits.Add32(x1004, x1037, uint32(uint1(x1053)))
	var x1056 uint32
	var x1057 uint32
	x1056, x1057 = bits.Add32(x1006, x1039, uint32(uint1(x1055)))
	var x1058 uint32
	var x1059 uint32
	x1058, x1059 = bits.Add32(x1008, x1041, uint32(uint1(x1057)))
	var x1060 uint32
	var x1061 uint32
	x1060, x1061 = bits.Add32(x1010, x1043, uint32(uint1(x1059)))
	var x1062 uint32
	var x1063 uint32
	x1062, x1063 = bits.Add32(x1012, x1045, uint32(uint1(x1061)))
	var x1064 uint32
	var x1065 uint32
	x1064, x1065 = bits.Add32(x1014, x1047, uint32(uint1(x1063)))
	var x1066 uint32
	var x1067 uint32
	x1066, x1067 = bits.Add32(x1016, x1049, uint32(uint1(x1065)))
	var x1068 uint32
	var x1069 uint32
	x1068, x1069 = bits.Add32(x1018, x1051, uint32(uint1(x1067)))
	var x1070 uint32
	var x1071 uint32
	x1071, x1070 = bits.Mul32(x80, arg2[7])
	var x1072 uint32
	var x1073 uint32
	x1073, x1072 = bits.Mul32(x80, arg2[6])
	var x1074 uint32
	var x1075 uint32
	x1075, x1074 = bits.Mul32(x80, arg2[5])
	var x1076 uint32
	var x1077 uint32
	x1077, x1076 = bits.Mul32(x80, arg2[4])
	var x1078 uint32
	var x1079 uint32
	x1079, x1078 = bits.Mul32(x80, arg2[3])
	var x1080 uint32
	var x1081 uint32
	x1081, x1080 = bits.Mul32(x80, arg2[2])
	var x1082 uint32
	var x1083 uint32
	x1083, x1082 = bits.Mul32(x80, arg2[1])
	var x1084 uint32
	var x1085 uint32
	x1085, x1084 = bits.Mul32(x80, arg2[0])
	var x1086 uint32
	var x1087 uint32
	x1086, x1087 = bits.Add32(x1085, x1082, uint32(0x0))
	var x1088 uint32
	var x1089 uint32
	x1088, x1089 = bits.Add32(x1083, x1080, uint32(uint1(x1087)))
	var x1090 uint32
	var x1091 uint32
	x1090, x1091 = bits.Add32(x1081, x1078, uint32(uint1(x1089)))
	var x1092 uint32
	var x1093 uint32
	x1092, x1093 = bits.Add32(x1079, x1076, uint32(uint1(x1091)))
	var x1094 uint32
	var x1095 uint32
	x1094, x1095 = bits.Add32(x1077, x1074, uint32(uint1(x1093)))
	var x1096 uint32
	var x1097 uint32
	x1096, x1097 = bits.Add32(x1075, x1072, uint32(uint1(x1095)))
	var x1098 uint32
	var x1099 uint32
	x1098, x1099 = bits.Add32(x1073, x1070, uint32(uint1(x1097)))
	x1100 := (uint32(uint1(x1099)) + x1071)
	var x1101 uint32
	var x1102 uint32
	x1101, x1102 = bits.Add32(x1054, x1084, uint32(0x0))
	var x1103 uint32
	var x1104 uint32
	x1103, x1104 = bits.Add32(x1056, x1086, uint32(uint1(x1102)))
	var x1105 uint32
	var x1106 uint32
	x1105, x1106 = bits.Add32(x1058, x1088, uint32(uint1(x1104)))
	var x1107 uint32
	var x1108 uint32
	x1107, x1108 = bits.Add32(x1060, x1090, uint32(uint1(x1106)))
	var x1109 uint32
	var x1110 uint32
	x1109, x1110 = bits.Add32(x1062, x1092, uint32(uint1(x1108)))
	var x1111 uint32
	var x1112 uint32
	x1111, x1112 = bits.Add32(x1064, x1094, uint32(uint1(x1110)))
	var x1113 uint32
	var x1114 uint32
	x1113, x1114 = bits.Add32(x1066, x1096, uint32(uint1(x1112)))
	var x1115 uint32
	var x1116 uint32
	x1115, x1116 = bits.Add32(x1068, x1098, uint32(uint1(x1114)))
	var x1117 uint32
	var x1118 uint32
	x1117, x1118 = bits.Add32(uint32(uint1(x1069)), x1100, uint32(uint1(x1116)))
	var x1119 uint32
	_, x1119 = bits.Mul32(x1101, 0xd2253531)
	var x1121 uint32
	var x1122 uint32
	x1122, x1121 = bits.Mul32(x1119, 0xffffffff)
	var x1123 uint32
	var x1124 uint32
	x1124, x1123 = bits.Mul32(x1119, 0xffffffff)
	var x1125 uint32
	var x1126 uint32
	x1126, x1125 = bits.Mul32(x1119, 0xffffffff)
	var x1127 uint32
	var x1128 uint32
	x1128, x1127 = bits.Mul32(x1119, 0xffffffff)
	var x1129 uint32
	var x1130 uint32
	x1130, x1129 = bits.Mul32(x1119, 0xffffffff)
	var x1131 uint32
	var x1132 uint32
	x1132, x1131 = bits.Mul32(x1119, 0xffffffff)
	var x1133 uint32
	var x1134 uint32
	x1134, x1133 = bits.Mul32(x1119, 0xfffffffe)
	var x1135 uint32
	var x1136 uint32
	x1136, x1135 = bits.Mul32(x1119, 0xfffffc2f)
	var x1137 uint32
	var x1138 uint32
	x1137, x1138 = bits.Add32(x1136, x1133, uint32(0x0))
	var x1139 uint32
	var x1140 uint32
	x1139, x1140 = bits.Add32(x1134, x1131, uint32(uint1(x1138)))
	var x1141 uint32
	var x1142 uint32
	x1141, x1142 = bits.Add32(x1132, x1129, uint32(uint1(x1140)))
	var x1143 uint32
	var x1144 uint32
	x1143, x1144 = bits.Add32(x1130, x1127, uint32(uint1(x1142)))
	var x1145 uint32
	var x1146 uint32
	x1145, x1146 = bits.Add32(x1128, x1125, uint32(uint1(x1144)))
	var x1147 uint32
	var x1148 uint32
	x1147, x1148 = bits.Add32(x1126, x1123, uint32(uint1(x1146)))
	var x1149 uint32
	var x1150 uint32
	x1149, x1150 = bits.Add32(x1124, x1121, uint32(uint1(x1148)))
	x1151 := (uint32(uint1(x1150)) + x1122)
	var x1153 uint32
	_, x1153 = bits.Add32(x1101, x1135, uint32(0x0))
	var x1154 uint32
	var x1155 uint32
	x1154, x1155 = bits.Add32(x1103, x1137, uint32(uint1(x1153)))
	var x1156 uint32
	var x1157 uint32
	x1156, x1157 = bits.Add32(x1105, x1139, uint32(uint1(x1155)))
	var x1158 uint32
	var x1159 uint32
	x1158, x1159 = bits.Add32(x1107, x1141, uint32(uint1(x1157)))
	var x1160 uint32
	var x1161 uint32
	x1160, x1161 = bits.Add32(x1109, x1143, uint32(uint1(x1159)))
	var x1162 uint32
	var x1163 uint32
	x1162, x1163 = bits.Add32(x1111, x1145, uint32(uint1(x1161)))
	var x1164 uint32
	var x1165 uint32
	x1164, x1165 = bits.Add32(x1113, x1147, uint32(uint1(x1163)))
	var x1166 uint32
	var x1167 uint32
	x1166, x1167 = bits.Add32(x1115, x1149, uint32(uint1(x1165)))
	var x1168 uint32
	var x1169 uint32
	x1168, x1169 = bits.Add32(x1117, x1151, uint32(uint1(x1167)))
	x1170 := (uint32(uint1(x1169)) + uint32(uint1(x1118)))
	var x1171 uint32
	var x1172 uint32
	x1172, x1171 = bits.Mul32(x81, arg2[7])
	var x1173 uint32
	var x1174 uint32
	x1174, x1173 = bits.Mul32(x81, arg2[6])
	var x1175 uint32
	var x1176 uint32
	x1176, x1175 = bits.Mul32(x81, arg2[5])
	var x1177 uint32
	var x1178 uint32
	x1178, x1177 = bits.Mul32(x81, arg2[4])
	var x1179 uint32
	var x1180 uint32
	x1180, x1179 = bits.Mul32(x81, arg2[3])
	var x1181 uint32
	var x1182 uint32
	x1182, x1181 = bits.Mul32(x81, arg2[2])
	var x1183 uint32
	var x1184 uint32
	x1184, x1183 = bits.Mul32(x81, arg2[1])
	var x1185 uint32
	var x1186 uint32
	x1186, x1185 = bits.Mul32(x81, arg2[0])
	var x1187 uint32
	var x1188 uint32
	x1187, x1188 = bits.Add32(x1186, x1183, uint32(0x0))
	var x1189 uint32
	var x1190 uint32
	x1189, x1190 = bits.Add32(x1184, x1181, uint32(uint1(x1188)))
	var x1191 uint32
	var x1192 uint32
	x1191, x1192 = bits.Add32(x1182, x1179, uint32(uint1(x1190)))
	var x1193 uint32
	var x1194 uint32
	x1193, x1194 = bits.Add32(x1180, x1177, uint32(uint1(x1192)))
	var x1195 uint32
	var x1196 uint32
	x1195, x1196 = bits.Add32(x1178, x1175, uint32(uint1(x1194)))
	var x1197 uint32
	var x1198 uint32
	x1197, x1198 = bits.Add32(x1176, x1173, uint32(uint1(x1196)))
	var x1199 uint32
	var x1200 uint32
	x1199, x1200 = bits.Add32(x1174, x1171, uint32(uint1(x1198)))
	x1201 := (uint32(uint1(x1200)) + x1172)
	var x1202 uint32
	var x1203 uint32
	x1202, x1203 = bits.Add32(x1154, x1185, uint32(0x0))
	var x1204 uint32
	var x1205 uint32
	x1204, x1205 = bits.Add32(x1156, x1187, uint32(uint1(x1203)))
	var x1206 uint32
	var x1207 uint32
	x1206, x1207 = bits.Add32(x1158, x1189, uint32(uint1(x1205)))
	var x1208 uint32
	var x1209 uint32
	x1208, x1209 = bits.Add32(x1160, x1191, uint32(uint1(x1207)))
	var x1210 uint32
	var x1211 uint32
	x1210, x1211 = bits.Add32(x1162, x1193, uint32(uint1(x1209)))
	var x1212 uint32
	var x1213 uint32
	x1212, x1213 = bits.Add32(x1164, x1195, uint32(uint1(x1211)))
	var x1214 uint32
	var x1215 uint32
	x1214, x1215 = bits.Add32(x1166, x1197, uint32(uint1(x1213)))
	var x1216 uint32
	var x1217 uint32
	x1216, x1217 = bits.Add32(x1168, x1199, uint32(uint1(x1215)))
	var x1218 uint32
	var x1219 uint32
	x1218, x1219 = bits.Add32(x1170, x1201, uint32(uint1(x1217)))
	var x1220 uint32
	_, x1220 = bits.Mul32(x1202, 0xd2253531)
	var x1222 uint32
	var x1223 uint32
	x1223, x1222 = bits.Mul32(x1220, 0xffffffff)
	var x1224 uint32
	var x1225 uint32
	x1225, x1224 = bits.Mul32(x1220, 0xffffffff)
	var x1226 uint32
	var x1227 uint32
	x1227, x1226 = bits.Mul32(x1220, 0xffffffff)
	var x1228 uint32
	var x1229 uint32
	x1229, x1228 = bits.Mul32(x1220, 0xffffffff)
	var x1230 uint32
	var x1231 uint32
	x1231, x1230 = bits.Mul32(x1220, 0xffffffff)
	var x1232 uint32
	var x1233 uint32
	x1233, x1232 = bits.Mul32(x1220, 0xffffffff)
	var x1234 uint32
	var x1235 uint32
	x1235, x1234 = bits.Mul32(x1220, 0xfffffffe)
	var x1236 uint32
	var x1237 uint32
	x1237, x1236 = bits.Mul32(x1220, 0xfffffc2f)
	var x1238 uint32
	var x1239 uint32
	x1238, x1239 = bits.Add32(x1237, x1234, uint32(0x0))
	var x1240 uint32
	var x1241 uint32
	x1240, x1241 = bits.Add32(x1235, x1232, uint32(uint1(x1239)))
	var x1242 uint32
	var x1243 uint32
	x1242, x1243 = bits.Add32(x1233, x1230, uint32(uint1(x1241)))
	var x1244 uint32
	var x1245 uint32
	x1244, x1245 = bits.Add32(x1231, x1228, uint32(uint1(x1243)))
	var x1246 uint32
	var x1247 uint32
	x1246, x1247 = bits.Add32(x1229, x1226, uint32(uint1(x1245)))
	var x1248 uint32
	var x1249 uint32
	x1248, x1249 = bits.Add32(x1227, x1224, uint32(uint1(x1247)))
	var x1250 uint32
	var x1251 uint32
	x1250, x1251 = bits.Add32(x1225, x1222, uint32(uint1(x1249)))
	x1252 := (uint32(uint1(x1251)) + x1223)
	var x1254 uint32
	_, x1254 = bits.Add32(x1202, x1236, uint32(0x0))
	var x1255 uint32
	var x1256 uint32
	x1255, x1256 = bits.Add32(x1204, x1238, uint32(uint1(x1254)))
	var x1257 uint32
	var x1258 uint32
	x1257, x1258 = bits.Add32(x1206, x1240, uint32(uint1(x1256)))
	var x1259 uint32
	var x1260 uint32
	x1259, x1260 = bits.Add32(x1208, x1242, uint32(uint1(x1258)))
	var x1261 uint32
	var x1262 uint32
	x1261, x1262 = bits.Add32(x1210, x1244, uint32(uint1(x1260)))
	var x1263 uint32
	var x1264 uint32
	x1263, x1264 = bits.Add32(x1212, x1246, uint32(uint1(x1262)))
	var x1265 uint32
	var x1266 uint32
	x1265, x1266 = bits.Add32(x1214, x1248, uint32(uint1(x1264)))
	var x1267 uint32
	var x1268 uint32
	x1267, x1268 = bits.Add32(x1216, x1250, uint32(uint1(x1266)))
	var x1269 uint32
	var x1270 uint32
	x1269, x1270 = bits.Add32(x1218, x1252, uint32(uint1(x1268)))
	x1271 := (uint32(uint1(x1270)) + uint32(uint1(x1219)))
	var x1272 uint32
	var x1273 uint32
	x1273, x1272 = bits.Mul32(x82, arg2[7])
	var x1274 uint32
	var x1275 uint32
	x1275, x1274 = bits.Mul32(x82, arg2[6])
	var x1276 uint32
	var x1277 uint32
	x1277, x1276 = bits.Mul32(x82, arg2[5])
	var x1278 uint32
	var x1279 uint32
	x1279, x1278 = bits.Mul32(x82, arg2[4])
	var x1280 uint32
	var x1281 uint32
	x1281, x1280 = bits.Mul32(x82, arg2[3])
	var x1282 uint32
	var x1283 uint32
	x1283, x1282 = bits.Mul32(x82, arg2[2])
	var x1284 uint32
	var x1285 uint32
	x1285, x1284 = bits.Mul32(x82, arg2[1])
	var x1286 uint32
	var x1287 uint32
	x1287, x1286 = bits.Mul32(x82, arg2[0])
	var x1288 uint32
	var x1289 uint32
	x1288, x1289 = bits.Add32(x1287, x1284, uint32(0x0))
	var x1290 uint32
	var x1291 uint32
	x1290, x1291 = bits.Add32(x1285, x1282, uint32(uint1(x1289)))
	var x1292 uint32
	var x1293 uint32
	x1292, x1293 = bits.Add32(x1283, x1280, uint32(uint1(x1291)))
	var x1294 uint32
	var x1295 uint32
	x1294, x1295 = bits.Add32(x1281, x1278, uint32(uint1(x1293)))
	var x1296 uint32
	var x1297 uint32
	x1296, x1297 = bits.Add32(x1279, x1276, uint32(uint1(x1295)))
	var x1298 uint32
	var x1299 uint32
	x1298, x1299 = bits.Add32(x1277, x1274, uint32(uint1(x1297)))
	var x1300 uint32
	var x1301 uint32
	x1300, x1301 = bits.Add32(x1275, x1272, uint32(uint1(x1299)))
	x1302 := (uint32(uint1(x1301)) + x1273)
	var x1303 uint32
	var x1304 uint32
	x1303, x1304 = bits.Add32(x1255, x1286, uint32(0x0))
	var x1305 uint32
	var x1306 uint32
	x1305, x1306 = bits.Add32(x1257, x1288, uint32(uint1(x1304)))
	var x1307 uint32
	var x1308 uint32
	x1307, x1308 = bits.Add32(x1259, x1290, uint32(uint1(x1306)))
	var x1309 uint32
	var x1310 uint32
	x1309, x1310 = bits.Add32(x1261, x1292, uint32(uint1(x1308)))
	var x1311 uint32
	var x1312 uint32
	x1311, x1312 = bits.Add32(x1263, x1294, uint32(uint1(x1310)))
	var x1313 uint32
	var x1314 uint32
	x1313, x1314 = bits.Add32(x1265, x1296, uint32(uint1(x1312)))
	var x1315 uint32
	var x1316 uint32
	x1315, x1316 = bits.Add32(x1267, x1298, uint32(uint1(x1314)))
	var x1317 uint32
	var x1318 uint32
	x1317, x1318 = bits.Add32(x1269, x1300, uint32(uint1(x1316)))
	var x1319 uint32
	var x1320 uint32
	x1319, x1320 = bits.Add32(x1271, x1302, uint32(uint1(x1318)))
	var x1321 uint32
	_, x1321 = bits.Mul32(x1303, 0xd2253531)
	var x1323 uint32
	var x1324 uint32
	x1324, x1323 = bits.Mul32(x1321, 0xffffffff)
	var x1325 uint32
	var x1326 uint32
	x1326, x1325 = bits.Mul32(x1321, 0xffffffff)
	var x1327 uint32
	var x1328 uint32
	x1328, x1327 = bits.Mul32(x1321, 0xffffffff)
	var x1329 uint32
	var x1330 uint32
	x1330, x1329 = bits.Mul32(x1321, 0xffffffff)
	var x1331 uint32
	var x1332 uint32
	x1332, x1331 = bits.Mul32(x1321, 0xffffffff)
	var x1333 uint32
	var x1334 uint32
	x1334, x1333 = bits.Mul32(x1321, 0xffffffff)
	var x1335 uint32
	var x1336 uint32
	x1336, x1335 = bits.Mul32(x1321, 0xfffffffe)
	var x1337 uint32
	var x1338 uint32
	x1338, x1337 = bits.Mul32(x1321, 0xfffffc2f)
	var x1339 uint32
	var x1340 uint32
	x1339, x1340 = bits.Add32(x1338, x1335, uint32(0x0))
	var x1341 uint32
	var x1342 uint32
	x1341, x1342 = bits.Add32(x1336, x1333, uint32(uint1(x1340)))
	var x1343 uint32
	var x1344 uint32
	x1343, x1344 = bits.Add32(x1334, x1331, uint32(uint1(x1342)))
	var x1345 uint32
	var x1346 uint32
	x1345, x1346 = bits.Add32(x1332, x1329, uint32(uint1(x1344)))
	var x1347 uint32
	var x1348 uint32
	x1347, x1348 = bits.Add32(x1330, x1327, uint32(uint1(x1346)))
	var x1349 uint32
	var x1350 uint32
	x1349, x1350 = bits.Add32(x1328, x1325, uint32(uint1(x1348)))
	var x1351 uint32
	var x1352 uint32
	x1351, x1352 = bits.Add32(x1326, x1323, uint32(uint1(x1350)))
	x1353 := (uint32(uint1(x1352)) + x1324)
	var x1355 uint32
	_, x1355 = bits.Add32(x1303, x1337, uint32(0x0))
	var x1356 uint32
	var x1357 uint32
	x1356, x1357 = bits.Add32(x1305, x1339, uint32(uint1(x1355)))
	var x1358 uint32
	var x1359 uint32
	x1358, x1359 = bits.Add32(x1307, x1341, uint32(uint1(x1357)))
	var x1360 uint32
	var x1361 uint32
	x1360, x1361 = bits.Add32(x1309, x1343, uint32(uint1(x1359)))
	var x1362 uint32
	var x1363 uint32
	x1362, x1363 = bits.Add32(x1311, x1345, uint32(uint1(x1361)))
	var x1364 uint32
	var x1365 uint32
	x1364, x1365 = bits.Add32(x1313, x1347, uint32(uint1(x1363)))
	var x1366 uint32
	var x1367 uint32
	x1366, x1367 = bits.Add32(x1315, x1349, uint32(uint1(x1365)))
	var x1368 uint32
	var x1369 uint32
	x1368, x1369 = bits.Add32(x1317, x1351, uint32(uint1(x1367)))
	var x1370 uint32
	var x1371 uint32
	x1370, x1371 = bits.Add32(x1319, x1353, uint32(uint1(x1369)))
	x1372 := (uint32(uint1(x1371)) + uint32(uint1(x1320)))
	var x1373 uint32
	var x1374 uint32
	x1374, x1373 = bits.Mul32(x83, arg2[7])
	var x1375 uint32
	var x1376 uint32
	x1376, x1375 = bits.Mul32(x83, arg2[6])
	var x1377 uint32
	var x1378 uint32
	x1378, x1377 = bits.Mul32(x83, arg2[5])
	var x1379 uint32
	var x1380 uint32
	x1380, x1379 = bits.Mul32(x83, arg2[4])
	var x1381 uint32
	var x1382 uint32
	x1382, x1381 = bits.Mul32(x83, arg2[3])
	var x1383 uint32
	var x1384 uint32
	x1384, x1383 = bits.Mul32(x83, arg2[2])
	var x1385 uint32
	var x1386 uint32
	x1386, x1385 = bits.Mul32(x83, arg2[1])
	var x1387 uint32
	var x1388 uint32
	x1388, x1387 = bits.Mul32(x83, arg2[0])
	var x1389 uint32
	var x1390 uint32
	x1389, x1390 = bits.Add32(x1388, x1385, uint32(0x0))
	var x1391 uint32
	var x1392 uint32
	x1391, x1392 = bits.Add32(x1386, x1383, uint32(uint1(x1390)))
	var x1393 uint32
	var x1394 uint32
	x1393, x1394 = bits.Add32(x1384, x1381, uint32(uint1(x1392)))
	var x1395 uint32
	var x1396 uint32
	x1395, x1396 = bits.Add32(x1382, x1379, uint32(uint1(x1394)))
	var x1397 uint32
	var x1398 uint32
	x1397, x1398 = bits.Add32(x1380, x1377, uint32(uint1(x1396)))
	var x1399 uint32
	var x1400 uint32
	x1399, x1400 = bits.Add32(x1378, x1375, uint32(uint1(x1398)))
	var x1401 uint32
	var x1402 uint32
	x1401, x1402 = bits.Add32(x1376, x1373, uint32(uint1(x1400)))
	x1403 := (uint32(uint1(x1402)) + x1374)
	var x1404 uint32
	var x1405 uint32
	x1404, x1405 = bits.Add32(x1356, x1387, uint32(0x0))
	var x1406 uint32
	var x1407 uint32
	x1406, x1407 = bits.Add32(x1358, x1389, uint32(uint1(x1405)))
	var x1408 uint32
	var x1409 uint32
	x1408, x1409 = bits.Add32(x1360, x1391, uint32(uint1(x1407)))
	var x1410 uint32
	var x1411 uint32
	x1410, x1411 = bits.Add32(x1362, x1393, uint32(uint1(x1409)))
	var x1412 uint32
	var x1413 uint32
	x1412, x1413 = bits.Add32(x1364, x1395, uint32(uint1(x1411)))
	var x1414 uint32
	var x1415 uint32
	x1414, x1415 = bits.Add32(x1366, x1397, uint32(uint1(x1413)))
	var x1416 uint32
	var x1417 uint32
	x1416, x1417 = bits.Add32(x1368, x1399, uint32(uint1(x1415)))
	var x1418 uint32
	var x1419 uint32
	x1418, x1419 = bits.Add32(x1370, x1401, uint32(uint1(x1417)))
	var x1420 uint32
	var x1421 uint32
	x1420, x1421 = bits.Add32(x1372, x1403, uint32(uint1(x1419)))
	var x1422 uint32
	_, x1422 = bits.Mul32(x1404, 0xd2253531)
	var x1424 uint32
	var x1425 uint32
	x1425, x1424 = bits.Mul32(x1422, 0xffffffff)
	var x1426 uint32
	var x1427 uint32
	x1427, x1426 = bits.Mul32(x1422, 0xffffffff)
	var x1428 uint32
	var x1429 uint32
	x1429, x1428 = bits.Mul32(x1422, 0xffffffff)
	var x1430 uint32
	var x1431 uint32
	x1431, x1430 = bits.Mul32(x1422, 0xffffffff)
	var x1432 uint32
	var x1433 uint32
	x1433, x1432 = bits.Mul32(x1422, 0xffffffff)
	var x1434 uint32
	var x1435 uint32
	x1435, x1434 = bits.Mul32(x1422, 0xffffffff)
	var x1436 uint32
	var x1437 uint32
	x1437, x1436 = bits.Mul32(x1422, 0xfffffffe)
	var x1438 uint32
	var x1439 uint32
	x1439, x1438 = bits.Mul32(x1422, 0xfffffc2f)
	var x1440 uint32
	var x1441 uint32
	x1440, x1441 = bits.Add32(x1439, x1436, uint32(0x0))
	var x1442 uint32
	var x1443 uint32
	x1442, x1443 = bits.Add32(x1437, x1434, uint32(uint1(x1441)))
	var x1444 uint32
	var x1445 uint32
	x1444, x1445 = bits.Add32(x1435, x1432, uint32(uint1(x1443)))
	var x1446 uint32
	var x1447 uint32
	x1446, x1447 = bits.Add32(x1433, x1430, uint32(uint1(x1445)))
	var x1448 uint32
	var x1449 uint32
	x1448, x1449 = bits.Add32(x1431, x1428, uint32(uint1(x1447)))
	var x1450 uint32
	var x1451 uint32
	x1450, x1451 = bits.Add32(x1429, x1426, uint32(uint1(x1449)))
	var x1452 uint32
	var x1453 uint32
	x1452, x1453 = bits.Add32(x1427, x1424, uint32(uint1(x1451)))
	x1454 := (uint32(uint1(x1453)) + x1425)
	var x1456 uint32
	_, x1456 = bits.Add32(x1404, x1438, uint32(0x0))
	var x1457 uint32
	var x1458 uint32
	x1457, x1458 = bits.Add32(x1406, x1440, uint32(uint1(x1456)))
	var x1459 uint32
	var x1460 uint32
	x1459, x1460 = bits.Add32(x1408, x1442, uint32(uint1(x1458)))
	var x1461 uint32
	var x1462 uint32
	x1461, x1462 = bits.Add32(x1410, x1444, uint32(uint1(x1460)))
	var x1463 uint32
	var x1464 uint32
	x1463, x1464 = bits.Add32(x1412, x1446, uint32(uint1(x1462)))
	var x1465 uint32
	var x1466 uint32
	x1465, x1466 = bits.Add32(x1414, x1448, uint32(uint1(x1464)))
	var x1467 uint32
	var x1468 uint32
	x1467, x1468 = bits.Add32(x1416, x1450, uint32(uint1(x1466)))
	var x1469 uint32
	var x1470 uint32
	x1469, x1470 = bits.Add32(x1418, x1452, uint32(uint1(x1468)))
	var x1471 uint32
	var x1472 uint32
	x1471, x1472 = bits.Add32(x1420, x1454, uint32(uint1(x1470)))
	x1473 := (uint32(uint1(x1472)) + uint32(uint1(x1421)))
	var x1474 uint32
	var x1475 uint32
	x1475, x1474 = bits.Mul32(x84, arg2[7])
	var x1476 uint32
	var x1477 uint32
	x1477, x1476 = bits.Mul32(x84, arg2[6])
	var x1478 uint32
	var x1479 uint32
	x1479, x1478 = bits.Mul32(x84, arg2[5])
	var x1480 uint32
	var x1481 uint32
	x1481, x1480 = bits.Mul32(x84, arg2[4])
	var x1482 uint32
	var x1483 uint32
	x1483, x1482 = bits.Mul32(x84, arg2[3])
	var x1484 uint32
	var x1485 uint32
	x1485, x1484 = bits.Mul32(x84, arg2[2])
	var x1486 uint32
	var x1487 uint32
	x1487, x1486 = bits.Mul32(x84, arg2[1])
	var x1488 uint32
	var x1489 uint32
	x1489, x1488 = bits.Mul32(x84, arg2[0])
	var x1490 uint32
	var x1491 uint32
	x1490, x1491 = bits.Add32(x1489, x1486, uint32(0x0))
	var x1492 uint32
	var x1493 uint32
	x1492, x1493 = bits.Add32(x1487, x1484, uint32(uint1(x1491)))
	var x1494 uint32
	var x1495 uint32
	x1494, x1495 = bits.Add32(x1485, x1482, uint32(uint1(x1493)))
	var x1496 uint32
	var x1497 uint32
	x1496, x1497 = bits.Add32(x1483, x1480, uint32(uint1(x1495)))
	var x1498 uint32
	var x1499 uint32
	x1498, x1499 = bits.Add32(x1481, x1478, uint32(uint1(x1497)))
	var x1500 uint32
	var x1501 uint32
	x1500, x1501 = bits.Add32(x1479, x1476, uint32(uint1(x1499)))
	var x1502 uint32
	var x1503 uint32
	x1502, x1503 = bits.Add32(x1477, x1474, uint32(uint1(x1501)))
	x1504 := (uint32(uint1(x1503)) + x1475)
	var x1505 uint32
	var x1506 uint32
	x1505, x1506 = bits.Add32(x1457, x1488, uint32(0x0))
	var x1507 uint32
	var x1508 uint32
	x1507, x1508 = bits.Add32(x1459, x1490, uint32(uint1(x1506)))
	var x1509 uint32
	var x1510 uint32
	x1509, x1510 = bits.Add32(x1461, x1492, uint32(uint1(x1508)))
	var x1511 uint32
	var x1512 uint32
	x1511, x1512 = bits.Add32(x1463, x1494, uint32(uint1(x1510)))
	var x1513 uint32
	var x1514 uint32
	x1513, x1514 = bits.Add32(x1465, x1496, uint32(uint1(x1512)))
	var x1515 uint32
	var x1516 uint32
	x1515, x1516 = bits.Add32(x1467, x1498, uint32(uint1(x1514)))
	var x1517 uint32
	var x1518 uint32
	x1517, x1518 = bits.Add32(x1469, x1500, uint32(uint1(x1516)))
	var x1519 uint32
	var x1520 uint32
	x1519, x1520 = bits.Add32(x1471, x1502, uint32(uint1(x1518)))
	var x1521 uint32
	var x1522 uint32
	x1521, x1522 = bits.Add32(x1473, x1504, uint32(uint1(x1520)))
	var x1523 uint32
	_, x1523 = bits.Mul32(x1505, 0xd2253531)
	var x1525 uint32
	var x1526 uint32
	x1526, x1525 = bits.Mul32(x1523, 0xffffffff)
	var x1527 uint32
	var x1528 uint32
	x1528, x1527 = bits.Mul32(x1523, 0xffffffff)
	var x1529 uint32
	var x1530 uint32
	x1530, x1529 = bits.Mul32(x1523, 0xffffffff)
	var x1531 uint32
	var x1532 uint32
	x1532, x1531 = bits.Mul32(x1523, 0xffffffff)
	var x1533 uint32
	var x1534 uint32
	x1534, x1533 = bits.Mul32(x1523, 0xffffffff)
	var x1535 uint32
	var x1536 uint32
	x1536, x1535 = bits.Mul32(x1523, 0xffffffff)
	var x1537 uint32
	var x1538 uint32
	x1538, x1537 = bits.Mul32(x1523, 0xfffffffe)
	var x1539 uint32
	var x1540 uint32
	x1540, x1539 = bits.Mul32(x1523, 0xfffffc2f)
	var x1541 uint32
	var x1542 uint32
	x1541, x1542 = bits.Add32(x1540, x1537, uint32(0x0))
	var x1543 uint32
	var x1544 uint32
	x1543, x1544 = bits.Add32(x1538, x1535, uint32(uint1(x1542)))
	var x1545 uint32
	var x1546 uint32
	x1545, x1546 = bits.Add32(x1536, x1533, uint32(uint1(x1544)))
	var x1547 uint32
	var x1548 uint32
	x1547, x1548 = bits.Add32(x1534, x1531, uint32(uint1(x1546)))
	var x1549 uint32
	var x1550 uint32
	x1549, x1550 = bits.Add32(x1532, x1529, uint32(uint1(x1548)))
	var x1551 uint32
	var x1552 uint32
	x1551, x1552 = bits.Add32(x1530, x1527, uint32(uint1(x1550)))
	var x1553 uint32
	var x1554 uint32
	x1553, x1554 = bits.Add32(x1528, x1525, uint32(uint1(x1552)))
	x1555 := (uint32(uint1(x1554)) + x1526)
	var x1557 uint32
	_, x1557 = bits.Add32(x1505, x1539, uint32(0x0))
	var x1558 uint32
	var x1559 uint32
	x1558, x1559 = bits.Add32(x1507, x1541, uint32(uint1(x1557)))
	var x1560 uint32
	var x1561 uint32
	x1560, x1561 = bits.Add32(x1509, x1543, uint32(uint1(x1559)))
	var x1562 uint32
	var x1563 uint32
	x1562, x1563 = bits.Add32(x1511, x1545, uint32(uint1(x1561)))
	var x1564 uint32
	var x1565 uint32
	x1564, x1565 = bits.Add32(x1513, x1547, uint32(uint1(x1563)))
	var x1566 uint32
	var x1567 uint32
	x1566, x1567 = bits.Add32(x1515, x1549, uint32(uint1(x1565)))
	var x1568 uint32
	var x1569 uint32
	x1568, x1569 = bits.Add32(x1517, x1551, uint32(uint1(x1567)))
	var x1570 uint32
	var x1571 uint32
	x1570, x1571 = bits.Add32(x1519, x1553, uint32(uint1(x1569)))
	var x1572 uint32
	var x1573 uint32
	x1572, x1573 = bits.Add32(x1521, x1555, uint32(uint1(x1571)))
	x1574 := (uint32(uint1(x1573)) + uint32(uint1(x1522)))
	var x1575 uint32
	var x1576 uint32
	x1576, x1575 = bits.Mul32(x85, arg2[7])
	var x1577 uint32
	var x1578 uint32
	x1578, x1577 = bits.Mul32(x85, arg2[6])
	var x1579 uint32
	var x1580 uint32
	x1580, x1579 = bits.Mul32(x85, arg2[5])
	var x1581 uint32
	var x1582 uint32
	x1582, x1581 = bits.Mul32(x85, arg2[4])
	var x1583 uint32
	var x1584 uint32
	x1584, x1583 = bits.Mul32(x85, arg2[3])
	var x1585 uint32
	var x1586 uint32
	x1586, x1585 = bits.Mul32(x85, arg2[2])
	var x1587 uint32
	var x1588 uint32
	x1588, x1587 = bits.Mul32(x85, arg2[1])
	var x1589 uint32
	var x1590 uint32
	x1590, x1589 = bits.Mul32(x85, arg2[0])
	var x1591 uint32
	var x1592 uint32
	x1591, x1592 = bits.Add32(x1590, x1587, uint32(0x0))
	var x1593 uint32
	var x1594 uint32
	x1593, x1594 = bits.Add32(x1588, x1585, uint32(uint1(x1592)))
	var x1595 uint32
	var x1596 uint32
	x1595, x1596 = bits.Add32(x1586, x1583, uint32(uint1(x1594)))
	var x1597 uint32
	var x1598 uint32
	x1597, x1598 = bits.Add32(x1584, x1581, uint32(uint1(x1596)))
	var x1599 uint32
	var x1600 uint32
	x1599, x1600 = bits.Add32(x1582, x1579, uint32(uint1(x1598)))
	var x1601 uint32
	var x1602 uint32
	x1601, x1602 = bits.Add32(x1580, x1577, uint32(uint1(x1600)))
	var x1603 uint32
	var x1604 uint32
	x1603, x1604 = bits.Add32(x1578, x1575, uint32(uint1(x1602)))
	x1605 := (uint32(uint1(x1604)) + x1576)
	var x1606 uint32
	var x1607 uint32
	x1606, x1607 = bits.Add32(x1558, x1589, uint32(0x0))
	var x1608 uint32
	var x1609 uint32
	x1608, x1609 = bits.Add32(x1560, x1591, uint32(uint1(x1607)))
	var x1610 uint32
	var x1611 uint32
	x1610, x1611 = bits.Add32(x1562, x1593, uint32(uint1(x1609)))
	var x1612 uint32
	var x1613 uint32
	x1612, x1613 = bits.Add32(x1564, x1595, uint32(uint1(x1611)))
	var x1614 uint32
	var x1615 uint32
	x1614, x1615 = bits.Add32(x1566, x1597, uint32(uint1(x1613)))
	var x1616 uint32
	var x1617 uint32
	x1616, x1617 = bits.Add32(x1568, x1599, uint32(uint1(x1615)))
	var x1618 uint32
	var x1619 uint32
	x1618, x1619 = bits.Add32(x1570, x1601, uint32(uint1(x1617)))
	var x1620 uint32
	var x1621 uint32
	x1620, x1621 = bits.Add32(x1572, x1603, uint32(uint1(x1619)))
	var x1622 uint32
	var x1623 uint32
	x1622, x1623 = bits.Add32(x1574, x1605, uint32(uint1(x1621)))
	var x1624 uint32
	_, x1624 = bits.Mul32(x1606, 0xd2253531)
	var x1626 uint32
	var x1627 uint32
	x1627, x1626 = bits.Mul32(x1624, 0xffffffff)
	var x1628 uint32
	var x1629 uint32
	x1629, x1628 = bits.Mul32(x1624, 0xffffffff)
	var x1630 uint32
	var x1631 uint32
	x1631, x1630 = bits.Mul32(x1624, 0xffffffff)
	var x1632 uint32
	var x1633 uint32
	x1633, x1632 = bits.Mul32(x1624, 0xffffffff)
	var x1634 uint32
	var x1635 uint32
	x1635, x1634 = bits.Mul32(x1624, 0xffffffff)
	var x1636 uint32
	var x1637 uint32
	x1637, x1636 = bits.Mul32(x1624, 0xffffffff)
	var x1638 uint32
	var x1639 uint32
	x1639, x1638 = bits.Mul32(x1624, 0xfffffffe)
	var x1640 uint32
	var x1641 uint32
	x1641, x1640 = bits.Mul32(x1624, 0xfffffc2f)
	var x1642 uint32
	var x1643 uint32
	x1642, x1643 = bits.Add32(x1641, x1638, uint32(0x0))
	var x1644 uint32
	var x1645 uint32
	x1644, x1645 = bits.Add32(x1639, x1636, uint32(uint1(x1643)))
	var x1646 uint32
	var x1647 uint32
	x1646, x1647 = bits.Add32(x1637, x1634, uint32(uint1(x1645)))
	var x1648 uint32
	var x1649 uint32
	x1648, x1649 = bits.Add32(x1635, x1632, uint32(uint1(x1647)))
	var x1650 uint32
	var x1651 uint32
	x1650, x1651 = bits.Add32(x1633, x1630, uint32(uint1(x1649)))
	var x1652 uint32
	var x1653 uint32
	x1652, x1653 = bits.Add32(x1631, x1628, uint32(uint1(x1651)))
	var x1654 uint32
	var x1655 uint32
	x1654, x1655 = bits.Add32(x1629, x1626, uint32(uint1(x1653)))
	x1656 := (uint32(uint1(x1655)) + x1627)
	var x1658 uint32
	_, x1658 = bits.Add32(x1606, x1640, uint32(0x0))
	var x1659 uint32
	var x1660 uint32
	x1659, x1660 = bits.Add32(x1608, x1642, uint32(uint1(x1658)))
	var x1661 uint32
	var x1662 uint32
	x1661, x1662 = bits.Add32(x1610, x1644, uint32(uint1(x1660)))
	var x1663 uint32
	var x1664 uint32
	x1663, x1664 = bits.Add32(x1612, x1646, uint32(uint1(x1662)))
	var x1665 uint32
	var x1666 uint32
	x1665, x1666 = bits.Add32(x1614, x1648, uint32(uint1(x1664)))
	var x1667 uint32
	var x1668 uint32
	x1667, x1668 = bits.Add32(x1616, x1650, uint32(uint1(x1666)))
	var x1669 uint32
	var x1670 uint32
	x1669, x1670 = bits.Add32(x1618, x1652, uint32(uint1(x1668)))
	var x1671 uint32
	var x1672 uint32
	x1671, x1672 = bits.Add32(x1620, x1654, uint32(uint1(x1670)))
	var x1673 uint32
	var x1674 uint32
	x1673, x1674 = bits.Add32(x1622, x1656, uint32(uint1(x1672)))
	x1675 := (uint32(uint1(x1674)) + uint32(uint1(x1623)))
	var x1676 uint32
	var x1677 uint32
	x1677, x1676 = bits.Mul32(x86, arg2[7])
	var x1678 uint32
	var x1679 uint32
	x1679, x1678 = bits.Mul32(x86, arg2[6])
	var x1680 uint32
	var x1681 uint32
	x1681, x1680 = bits.Mul32(x86, arg2[5])
	var x1682 uint32
	var x1683 uint32
	x1683, x1682 = bits.Mul32(x86, arg2[4])
	var x1684 uint32
	var x1685 uint32
	x1685, x1684 = bits.Mul32(x86, arg2[3])
	var x1686 uint32
	var x1687 uint32
	x1687, x1686 = bits.Mul32(x86, arg2[2])
	var x1688 uint32
	var x1689 uint32
	x1689, x1688 = bits.Mul32(x86, arg2[1])
	var x1690 uint32
	var x1691 uint32
	x1691, x1690 = bits.Mul32(x86, arg2[0])
	var x1692 uint32
	var x1693 uint32
	x1692, x1693 = bits.Add32(x1691, x1688, uint32(0x0))
	var x1694 uint32
	var x1695 uint32
	x1694, x1695 = bits.Add32(x1689, x1686, uint32(uint1(x1693)))
	var x1696 uint32
	var x1697 uint32
	x1696, x1697 = bits.Add32(x1687, x1684, uint32(uint1(x1695)))
	var x1698 uint32
	var x1699 uint32
	x1698, x1699 = bits.Add32(x1685, x1682, uint32(uint1(x1697)))
	var x1700 uint32
	var x1701 uint32
	x1700, x1701 = bits.Add32(x1683, x1680, uint32(uint1(x1699)))
	var x1702 uint32
	var x1703 uint32
	x1702, x1703 = bits.Add32(x1681, x1678, uint32(uint1(x1701)))
	var x1704 uint32
	var x1705 uint32
	x1704, x1705 = bits.Add32(x1679, x1676, uint32(uint1(x1703)))
	x1706 := (uint32(uint1(x1705)) + x1677)
	var x1707 uint32
	var x1708 uint32
	x1707, x1708 = bits.Add32(x1659, x1690, uint32(0x0))
	var x1709 uint32
	var x1710 uint32
	x1709, x1710 = bits.Add32(x1661, x1692, uint32(uint1(x1708)))
	var x1711 uint32
	var x1712 uint32
	x1711, x1712 = bits.Add32(x1663, x1694, uint32(uint1(x1710)))
	var x1713 uint32
	var x1714 uint32
	x1713, x1714 = bits.Add32(x1665, x1696, uint32(uint1(x1712)))
	var x1715 uint32
	var x1716 uint32
	x1715, x1716 = bits.Add32(x1667, x1698, uint32(uint1(x1714)))
	var x1717 uint32
	var x1718 uint32
	x1717, x1718 = bits.Add32(x1669, x1700, uint32(uint1(x1716)))
	var x1719 uint32
	var x1720 uint32
	x1719, x1720 = bits.Add32(x1671, x1702, uint32(uint1(x1718)))
	var x1721 uint32
	var x1722 uint32
	x1721, x1722 = bits.Add32(x1673, x1704, uint32(uint1(x1720)))
	var x1723 uint32
	var x1724 uint32
	x1723, x1724 = bits.Add32(x1675, x1706, uint32(uint1(x1722)))
	var x1725 uint32
	_, x1725 = bits.Mul32(x1707, 0xd2253531)
	var x1727 uint32
	var x1728 uint32
	x1728, x1727 = bits.Mul32(x1725, 0xffffffff)
	var x1729 uint32
	var x1730 uint32
	x1730, x1729 = bits.Mul32(x1725, 0xffffffff)
	var x1731 uint32
	var x1732 uint32
	x1732, x1731 = bits.Mul32(x1725, 0xffffffff)
	var x1733 uint32
	var x1734 uint32
	x1734, x1733 = bits.Mul32(x1725, 0xffffffff)
	var x1735 uint32
	var x1736 uint32
	x1736, x1735 = bits.Mul32(x1725, 0xffffffff)
	var x1737 uint32
	var x1738 uint32
	x1738, x1737 = bits.Mul32(x1725, 0xffffffff)
	var x1739 uint32
	var x1740 uint32
	x1740, x1739 = bits.Mul32(x1725, 0xfffffffe)
	var x1741 uint32
	var x1742 uint32
	x1742, x1741 = bits.Mul32(x1725, 0xfffffc2f)
	var x1743 uint32
	var x1744 uint32
	x1743, x1744 = bits.Add32(x1742, x1739, uint32(0x0))
	var x1745 uint32
	var x1746 uint32
	x1745, x1746 = bits.Add32(x1740, x1737, uint32(uint1(x1744)))
	var x1747 uint32
	var x1748 uint32
	x1747, x1748 = bits.Add32(x1738, x1735, uint32(uint1(x1746)))
	var x1749 uint32
	var x1750 uint32
	x1749, x1750 = bits.Add32(x1736, x1733, uint32(uint1(x1748)))
	var x1751 uint32
	var x1752 uint32
	x1751, x1752 = bits.Add32(x1734, x1731, uint32(uint1(x1750)))
	var x1753 uint32
	var x1754 uint32
	x1753, x1754 = bits.Add32(x1732, x1729, uint32(uint1(x1752)))
	var x1755 uint32
	var x1756 uint32
	x1755, x1756 = bits.Add32(x1730, x1727, uint32(uint1(x1754)))
	x1757 := (uint32(uint1(x1756)) + x1728)
	var x1759 uint32
	_, x1759 = bits.Add32(x1707, x1741, uint32(0x0))
	var x1760 uint32
	var x1761 uint32
	x1760, x1761 = bits.Add32(x1709, x1743, uint32(uint1(x1759)))
	var x1762 uint32
	var x1763 uint32
	x1762, x1763 = bits.Add32(x1711, x1745, uint32(uint1(x1761)))
	var x1764 uint32
	var x1765 uint32
	x1764, x1765 = bits.Add32(x1713, x1747, uint32(uint1(x1763)))
	var x1766 uint32
	var x1767 uint32
	x1766, x1767 = bits.Add32(x1715, x1749, uint32(uint1(x1765)))
	var x1768 uint32
	var x1769 uint32
	x1768, x1769 = bits.Add32(x1717, x1751, uint32(uint1(x1767)))
	var x1770 uint32
	var x1771 uint32
	x1770, x1771 = bits.Add32(x1719, x1753, uint32(uint1(x1769)))
	var x1772 uint32
	var x1773 uint32
	x1772, x1773 = bits.Add32(x1721, x1755, uint32(uint1(x1771)))
	var x1774 uint32
	var x1775 uint32
	x1774, x1775 = bits.Add32(x1723, x1757, uint32(uint1(x1773)))
	x1776 := (uint32(uint1(x1775)) + uint32(uint1(x1724)))
	var x1777 uint32
	var x1778 uint32
	x1777, x1778 = bits.Sub32(x1760, 0xfffffc2f, uint32(0x0))
	var x1779 uint32
	var x1780 uint32
	x1779, x1780 = bits.Sub32(x1762, 0xfffffffe, uint32(uint1(x1778)))
	var x1781 uint32
	var x1782 uint32
	x1781, x1782 = bits.Sub32(x1764, 0xffffffff, uint32(uint1(x1780)))
	var x1783 uint32
	var x1784 uint32
	x1783, x1784 = bits.Sub32(x1766, 0xffffffff, uint32(uint1(x1782)))
	var x1785 uint32
	var x1786 uint32
	x1785, x1786 = bits.Sub32(x1768, 0xffffffff, uint32(uint1(x1784)))
	var x1787 uint32
	var x1788 uint32
	x1787, x1788 = bits.Sub32(x1770, 0xffffffff, uint32(uint1(x1786)))
	var x1789 uint32
	var x1790 uint32
	x1789, x1790 = bits.Sub32(x1772, 0xffffffff, uint32(uint1(x1788)))
	var x1791 uint32
	var x1792 uint32
	x1791, x1792 = bits.Sub32(x1774, 0xffffffff, uint32(uint1(x1790)))
	var x1794 uint32
	_, x1794 = bits.Sub32(x1776, uint32(0x0), uint32(uint1(x1792)))
	var x1795 uint32
	cmovznzU32(&x1795, uint1(x1794), x1777, x1760)
	var x1796 uint32
	cmovznzU32(&x1796, uint1(x1794), x1779, x1762)
	var x1797 uint32
	cmovznzU32(&x1797, uint1(x1794), x1781, x1764)
	var x1798 uint32
	cmovznzU32(&x1798, uint1(x1794), x1783, x1766)
	var x1799 uint32
	cmovznzU32(&x1799, uint1(x1794), x1785, x1768)
	var x1800 uint32
	cmovznzU32(&x1800, uint1(x1794), x1787, x1770)
	var x1801 uint32
	cmovznzU32(&x1801, uint1(x1794), x1789, x1772)
	var x1802 uint32
	cmovznzU32(&x1802, uint1(x1794), x1791, x1774)
	var x1803 uint32
	var x1804 uint32
	x1804, x1803 = bits.Mul32(x122, arg1[7])
	var x1805 uint32
	var x1806 uint32
	x1806, x1805 = bits.Mul32(x122, arg1[6])
	var x1807 uint32
	var x1808 uint32
	x1808, x1807 = bits.Mul32(x122, arg1[5])
	var x1809 uint32
	var x1810 uint32
	x1810, x1809 = bits.Mul32(x122, arg1[4])
	var x1811 uint32
	var x1812 uint32
	x1812, x1811 = bits.Mul32(x122, arg1[3])
	var x1813 uint32
	var x1814 uint32
	x1814, x1813 = bits.Mul32(x122, arg1[2])
	var x1815 uint32
	var x1816 uint32
	x1816, x1815 = bits.Mul32(x122, arg1[1])
	var x1817 uint32
	var x1818 uint32
	x1818, x1817 = bits.Mul32(x122, arg1[0])
	var x1819 uint32
	var x1820 uint32
	x1819, x1820 = bits.Add32(x1818, x1815, uint32(0x0))
	var x1821 uint32
	var x1822 uint32
	x1821, x1822 = bits.Add32(x1816, x1813, uint32(uint1(x1820)))
	var x1823 uint32
	var x1824 uint32
	x1823, x1824 = bits.Add32(x1814, x1811, uint32(uint1(x1822)))
	var x1825 uint32
	var x1826 uint32
	x1825, x1826 = bits.Add32(x1812, x1809, uint32(uint1(x1824)))
	var x1827 uint32
	var x1828 uint32
	x1827, x1828 = bits.Add32(x1810, x1807, uint32(uint1(x1826)))
	var x1829 uint32
	var x1830 uint32
	x1829, x1830 = bits.Add32(x1808, x1805, uint32(uint1(x1828)))
	var x1831 uint32
	var x1832 uint32
	x1831, x1832 = bits.Add32(x1806, x1803, uint32(uint1(x1830)))
	x1833 := (uint32(uint1(x1832)) + x1804)
	var x1834 uint32
	_, x1834 = bits.Mul32(x1817, 0xd2253531)
	var x1836 uint32
	var x1837 uint32
	x1837, x1836 = bits.Mul32(x1834, 0xffffffff)
	var x1838 uint32
	var x1839 uint32
	x1839, x1838 = bits.Mul32(x1834, 0xffffffff)
	var x1840 uint32
	var x1841 uint32
	x1841, x1840 = bits.Mul32(x1834, 0xffffffff)
	var x1842 uint32
	var x1843 uint32
	x1843, x1842 = bits.Mul32(x1834, 0xffffffff)
	var x1844 uint32
	var x1845 uint32
	x1845, x1844 = bits.Mul32(x1834, 0xffffffff)
	var x1846 uint32
	var x1847 uint32
	x1847, x1846 = bits.Mul32(x1834, 0xffffffff)
	var x1848 uint32
	var x1849 uint32
	x1849, x1848 = bits.Mul32(x1834, 0xfffffffe)
	var x1850 uint32
	var x1851 uint32
	x1851, x1850 = bits.Mul32(x1834, 0xfffffc2f)
	var x1852 uint32
	var x1853 uint32
	x1852, x1853 = bits.Add32(x1851, x1848, uint32(0x0))
	var x1854 uint32
	var x1855 uint32
	x1854, x1855 = bits.Add32(x1849, x1846, uint32(uint1(x1853)))
	var x1856 uint32
	var x1857 uint32
	x1856, x1857 = bits.Add32(x1847, x1844, uint32(uint1(x1855)))
	var x1858 uint32
	var x1859 uint32
	x1858, x1859 = bits.Add32(x1845, x1842, uint32(uint1(x1857)))
	var x1860 uint32
	var x1861 uint32
	x1860, x1861 = bits.Add32(x1843, x1840, uint32(uint1(x1859)))
	var x1862 uint32
	var x1863 uint32
	x1862, x1863 = bits.Add32(x1841, x1838, uint32(uint1(x1861)))
	var x1864 uint32
	var x1865 uint32
	x1864, x1865 = bits.Add32(x1839, x1836, uint32(uint1(x1863)))
	x1866 := (uint32(uint1(x1865)) + x1837)
	var x1868 uint32
	_, x1868 = bits.Add32(x1817, x1850, uint32(0x0))
	var x1869 uint32
	var x1870 uint32
	x1869, x1870 = bits.Add32(x1819, x1852, uint32(uint1(x1868)))
	var x1871 uint32
	var x1872 uint32
	x1871, x1872 = bits.Add32(x1821, x1854, uint32(uint1(x1870)))
	var x1873 uint32
	var x1874 uint32
	x1873, x1874 = bits.Add32(x1823, x1856, uint32(uint1(x1872)))
	var x1875 uint32
	var x1876 uint32
	x1875, x1876 = bits.Add32(x1825, x1858, uint32(uint1(x1874)))
	var x1877 uint32
	var x1878 uint32
	x1877, x1878 = bits.Add32(x1827, x1860, uint32(uint1(x1876)))
	var x1879 uint32
	var x1880 uint32
	x1879, x1880 = bits.Add32(x1829, x1862, uint32(uint1(x1878)))
	var x1881 uint32
	var x1882 uint32
	x1881, x1882 = bits.Add32(x1831, x1864, uint32(uint1(x1880)))
	var x1883 uint32
	var x1884 uint32
	x1883, x1884 = bits.Add32(x1833, x1866, uint32(uint1(x1882)))
	var x1885 uint32
	var x1886 uint32
	x1886, x1885 = bits.Mul32(x123, arg1[7])
	var x1887 uint32
	var x1888 uint32
	x1888, x1887 = bits.Mul32(x123, arg1[6])
	var x1889 uint32
	var x1890 uint32
	x1890, x1889 = bits.Mul32(x123, arg1[5])
	var x1891 uint32
	var x1892 uint32
	x1892, x1891 = bits.Mul32(x123, arg1[4])
	var x1893 uint32
	var x1894 uint32
	x1894, x1893 = bits.Mul32(x123, arg1[3])
	var x1895 uint32
	var x1896 uint32
	x1896, x1895 = bits.Mul32(x123, arg1[2])
	var x1897 uint32
	var x1898 uint32
	x1898, x1897 = bits.Mul32(x123, arg1[1])
	var x1899 uint32
	var x1900 uint32
	x1900, x1899 = bits.Mul32(x123, arg1[0])
	var x1901 uint32
	var x1902 uint32
	x1901, x1902 = bits.Add32(x1900, x1897, uint32(0x0))
	var x1903 uint32
	var x1904 uint32
	x1903, x1904 = bits.Add32(x1898, x1895, uint32(uint1(x1902)))
	var x1905 uint32
	var x1906 uint32
	x1905, x1906 = bits.Add32(x1896, x1893, uint32(uint1(x1904)))
	var x1907 uint32
	var x1908 uint32
	x1907, x1908 = bits.Add32(x1894, x1891, uint32(uint1(x1906)))
	var x1909 uint32
	var x1910 uint32
	x1909, x1910 = bits.Add32(x1892, x1889, uint32(uint1(x1908)))
	var x1911 uint32
	var x1912 uint32
	x1911, x1912 = bits.Add32(x1890, x1887, uint32(uint1(x1910)))
	var x1913 uint32
	var x1914 uint32
	x1913, x1914 = bits.Add32(x1888, x1885, uint32(uint1(x1912)))
	x1915 := (uint32(uint1(x1914)) + x1886)
	var x1916 uint32
	var x1917 uint32
	x1916, x1917 = bits.Add32(x1869, x1899, uint32(0x0))
	var x1918 uint32
	var x1919 uint32
	x1918, x1919 = bits.Add32(x1871, x1901, uint32(uint1(x1917)))
	var x1920 uint32
	var x1921 uint32
	x1920, x1921 = bits.Add32(x1873, x1903, uint32(uint1(x1919)))
	var x1922 uint32
	var x1923 uint32
	x1922, x1923 = bits.Add32(x1875, x1905, uint32(uint1(x1921)))
	var x1924 uint32
	var x1925 uint32
	x1924, x1925 = bits.Add32(x1877, x1907, uint32(uint1(x1923)))
	var x1926 uint32
	var x1927 uint32
	x1926, x1927 = bits.Add32(x1879, x1909, uint32(uint1(x1925)))
	var x1928 uint32
	var x1929 uint32
	x1928, x1929 = bits.Add32(x1881, x1911, uint32(uint1(x1927)))
	var x1930 uint32
	var x1931 uint32
	x1930, x1931 = bits.Add32(x1883, x1913, uint32(uint1(x1929)))
	var x1932 uint32
	var x1933 uint32
	x1932, x1933 = bits.Add32(uint32(uint1(x1884)), x1915, uint32(uint1(x1931)))
	var x1934 uint32
	_, x1934 = bits.Mul32(x1916, 0xd2253531)
	var x1936 uint32
	var x1937 uint32
	x1937, x1936 = bits.Mul32(x1934, 0xffffffff)
	var x1938 uint32
	var x1939 uint32
	x1939, x1938 = bits.Mul32(x1934, 0xffffffff)
	var x1940 uint32
	var x1941 uint32
	x1941, x1940 = bits.Mul32(x1934, 0xffffffff)
	var x1942 uint32
	var x1943 uint32
	x1943, x1942 = bits.Mul32(x1934, 0xffffffff)
	var x1944 uint32
	var x1945 uint32
	x1945, x1944 = bits.Mul32(x1934, 0xffffffff)
	var x1946 uint32
	var x1947 uint32
	x1947, x1946 = bits.Mul32(x1934, 0xffffffff)
	var x1948 uint32
	var x1949 uint32
	x1949, x1948 = bits.Mul32(x1934, 0xfffffffe)
	var x1950 uint32
	var x1951 uint32
	x1951, x1950 = bits.Mul32(x1934, 0xfffffc2f)
	var x1952 uint32
	var x1953 uint32
	x1952, x1953 = bits.Add32(x1951, x1948, uint32(0x0))
	var x1954 uint32
	var x1955 uint32
	x1954, x1955 = bits.Add32(x1949, x1946, uint32(uint1(x1953)))
	var x1956 uint32
	var x1957 uint32
	x1956, x1957 = bits.Add32(x1947, x1944, uint32(uint1(x1955)))
	var x1958 uint32
	var x1959 uint32
	x1958, x1959 = bits.Add32(x1945, x1942, uint32(uint1(x1957)))
	var x1960 uint32
	var x1961 uint32
	x1960, x1961 = bits.Add32(x1943, x1940, uint32(uint1(x1959)))
	var x1962 uint32
	var x1963 uint32
	x1962, x1963 = bits.Add32(x1941, x1938, uint32(uint1(x1961)))
	var x1964 uint32
	var x1965 uint32
	x1964, x1965 = bits.Add32(x1939, x1936, uint32(uint1(x1963)))
	x1966 := (uint32(uint1(x1965)) + x1937)
	var x1968 uint32
	_, x1968 = bits.Add32(x1916, x1950, uint32(0x0))
	var x1969 uint32
	var x1970 uint32
	x1969, x1970 = bits.Add32(x1918, x1952, uint32(uint1(x1968)))
	var x1971 uint32
	var x1972 uint32
	x1971, x1972 = bits.Add32(x1920, x1954, uint32(uint1(x1970)))
	var x1973 uint32
	var x1974 uint32
	x1973, x1974 = bits.Add32(x1922, x1956, uint32(uint1(x1972)))
	var x1975 uint32
	var x1976 uint32
	x1975, x1976 = bits.Add32(x1924, x1958, uint32(uint1(x1974)))
	var x1977 uint32
	var x1978 uint32
	x1977, x1978 = bits.Add32(x1926, x1960, uint32(uint1(x1976)))
	var x1979 uint32
	var x1980 uint32
	x1979, x1980 = bits.Add32(x1928, x1962, uint32(uint1(x1978)))
	var x1981 uint32
	var x1982 uint32
	x1981, x1982 = bits.Add32(x1930, x1964, uint32(uint1(x1980)))
	var x1983 uint32
	var x1984 uint32
	x1983, x1984 = bits.Add32(x1932, x1966, uint32(uint1(x1982)))
	x1985 := (uint32(uint1(x1984)) + uint32(uint1(x1933)))
	var x1986 uint32
	var x1987 uint32
	x1987, x1986 = bits.Mul32(x124, arg1[7])
	var x1988 uint32
	var x1989 uint32
	x1989, x1988 = bits.Mul32(x124, arg1[6])
	var x1990 uint32
	var x1991 uint32
	x1991, x1990 = bits.Mul32(x124, arg1[5])
	var x1992 uint32
	var x1993 uint32
	x1993, x1992 = bits.Mul32(x124, arg1[4])
	var x1994 uint32
	var x1995 uint32
	x1995, x1994 = bits.Mul32(x124, arg1[3])
	var x1996 uint32
	var x1997 uint32
	x1997, x1996 = bits.Mul32(x124, arg1[2])
	var x1998 uint32
	var x1999 uint32
	x1999, x1998 = bits.Mul32(x124, arg1[1])
	var x2000 uint32
	var x2001 uint32
	x2001, x2000 = bits.Mul32(x124, arg1[0])
	var x2002 uint32
	var x2003 uint32
	x2002, x2003 = bits.Add32(x2001, x1998, uint32(0x0))
	var x2004 uint32
	var x2005 uint32
	x2004, x2005 = bits.Add32(x1999, x1996, uint32(uint1(x2003)))
	var x2006 uint32
	var x2007 uint32
	x2006, x2007 = bits.Add32(x1997, x1994, uint32(uint1(x2005)))
	var x2008 uint32
	var x2009 uint32
	x2008, x2009 = bits.Add32(x1995, x1992, uint32(uint1(x2007)))
	var x2010 uint32
	var x2011 uint32
	x2010, x2011 = bits.Add32(x1993, x1990, uint32(uint1(x2009)))
	var x2012 uint32
	var x2013 uint32
	x2012, x2013 = bits.Add32(x1991, x1988, uint32(uint1(x2011)))
	var x2014 uint32
	var x2015 uint32
	x2014, x2015 = bits.Add32(x1989, x1986, uint32(uint1(x2013)))
	x2016 := (uint32(uint1(x2015)) + x1987)
	var x2017 uint32
	var x2018 uint32
	x2017, x2018 = bits.Add32(x1969, x2000, uint32(0x0))
	var x2019 uint32
	var x2020 uint32
	x2019, x2020 = bits.Add32(x1971, x2002, uint32(uint1(x2018)))
	var x2021 uint32
	var x2022 uint32
	x2021, x2022 = bits.Add32(x1973, x2004, uint32(uint1(x2020)))
	var x2023 uint32
	var x2024 uint32
	x2023, x2024 = bits.Add32(x1975, x2006, uint32(uint1(x2022)))
	var x2025 uint32
	var x2026 uint32
	x2025, x2026 = bits.Add32(x1977, x2008, uint32(uint1(x2024)))
	var x2027 uint32
	var x2028 uint32
	x2027, x2028 = bits.Add32(x1979, x2010, uint32(uint1(x2026)))
	var x2029 uint32
	var x2030 uint32
	x2029, x2030 = bits.Add32(x1981, x2012, uint32(uint1(x2028)))
	var x2031 uint32
	var x2032 uint32
	x2031, x2032 = bits.Add32(x1983, x2014, uint32(uint1(x2030)))
	var x2033 uint32
	var x2034 uint32
	x2033, x2034 = bits.Add32(x1985, x2016, uint32(uint1(x2032)))
	var x2035 uint32
	_, x2035 = bits.Mul32(x2017, 0xd2253531)
	var x2037 uint32
	var x2038 uint32
	x2038, x2037 = bits.Mul32(x2035, 0xffffffff)
	var x2039 uint32
	var x2040 uint32
	x2040, x2039 = bits.Mul32(x2035, 0xffffffff)
	var x2041 uint32
	var x2042 uint32
	x2042, x2041 = bits.Mul32(x2035, 0xffffffff)
	var x2043 uint32
	var x2044 uint32
	x2044, x2043 = bits.Mul32(x2035, 0xffffffff)
	var x2045 uint32
	var x2046 uint32
	x2046, x2045 = bits.Mul32(x2035, 0xffffffff)
	var x2047 uint32
	var x2048 uint32
	x2048, x2047 = bits.Mul32(x2035, 0xffffffff)
	var x2049 uint32
	var x2050 uint32
	x2050, x2049 = bits.Mul32(x2035, 0xfffffffe)
	var x2051 uint32
	var x2052 uint32
	x2052, x2051 = bits.Mul32(x2035, 0xfffffc2f)
	var x2053 uint32
	var x2054 uint32
	x2053, x2054 = bits.Add32(x2052, x2049, uint32(0x0))
	var x2055 uint32
	var x2056 uint32
	x2055, x2056 = bits.Add32(x2050, x2047, uint32(uint1(x2054)))
	var x2057 uint32
	var x2058 uint32
	x2057, x2058 = bits.Add32(x2048, x2045, uint32(uint1(x2056)))
	var x2059 uint32
	var x2060 uint32
	x2059, x2060 = bits.Add32(x2046, x2043, uint32(uint1(x2058)))
	var x2061 uint32
	var x2062 uint32
	x2061, x2062 = bits.Add32(x2044, x2041, uint32(uint1(x2060)))
	var x2063 uint32
	var x2064 uint32
	x2063, x2064 = bits.Add32(x2042, x2039, uint32(uint1(x2062)))
	var x2065 uint32
	var x2066 uint32
	x2065, x2066 = bits.Add32(x2040, x2037, uint32(uint1(x2064)))
	x2067 := (uint32(uint1(x2066)) + x2038)
	var x2069 uint32
	_, x2069 = bits.Add32(x2017, x2051, uint32(0x0))
	var x2070 uint32
	var x2071 uint32
	x2070, x2071 = bits.Add32(x2019, x2053, uint32(uint1(x2069)))
	var x2072 uint32
	var x2073 uint32
	x2072, x2073 = bits.Add32(x2021, x2055, uint32(uint1(x2071)))
	var x2074 uint32
	var x2075 uint32
	x2074, x2075 = bits.Add32(x2023, x2057, uint32(uint1(x2073)))
	var x2076 uint32
	var x2077 uint32
	x2076, x2077 = bits.Add32(x2025, x2059, uint32(uint1(x2075)))
	var x2078 uint32
	var x2079 uint32
	x2078, x2079 = bits.Add32(x2027, x2061, uint32(uint1(x2077)))
	var x2080 uint32
	var x2081 uint32
	x2080, x2081 = bits.Add32(x2029, x2063, uint32(uint1(x2079)))
	var x2082 uint32
	var x2083 uint32
	x2082, x2083 = bits.Add32(x2031, x2065, uint32(uint1(x2081)))
	var x2084 uint32
	var x2085 uint32
	x2084, x2085 = bits.Add32(x2033, x2067, uint32(uint1(x2083)))
	x2086 := (uint32(uint1(x2085)) + uint32(uint1(x2034)))
	var x2087 uint32
	var x2088 uint32
	x2088, x2087 = bits.Mul32(x125, arg1[7])
	var x2089 uint32
	var x2090 uint32
	x2090, x2089 = bits.Mul32(x125, arg1[6])
	var x2091 uint32
	var x2092 uint32
	x2092, x2091 = bits.Mul32(x125, arg1[5])
	var x2093 uint32
	var x2094 uint32
	x2094, x2093 = bits.Mul32(x125, arg1[4])
	var x2095 uint32
	var x2096 uint32
	x2096, x2095 = bits.Mul32(x125, arg1[3])
	var x2097 uint32
	var x2098 uint32
	x2098, x2097 = bits.Mul32(x125, arg1[2])
	var x2099 uint32
	var x2100 uint32
	x2100, x2099 = bits.Mul32(x125, arg1[1])
	var x2101 uint32
	var x2102 uint32
	x2102, x2101 = bits.Mul32(x125, arg1[0])
	var x2103 uint32
	var x2104 uint32
	x2103, x2104 = bits.Add32(x2102, x2099, uint32(0x0))
	var x2105 uint32
	var x2106 uint32
	x2105, x2106 = bits.Add32(x2100, x2097, uint32(uint1(x2104)))
	var x2107 uint32
	var x2108 uint32
	x2107, x2108 = bits.Add32(x2098, x2095, uint32(uint1(x2106)))
	var x2109 uint32
	var x2110 uint32
	x2109, x2110 = bits.Add32(x2096, x2093, uint32(uint1(x2108)))
	var x2111 uint32
	var x2112 uint32
	x2111, x2112 = bits.Add32(x2094, x2091, uint32(uint1(x2110)))
	var x2113 uint32
	var x2114 uint32
	x2113, x2114 = bits.Add32(x2092, x2089, uint32(uint1(x2112)))
	var x2115 uint32
	var x2116 uint32
	x2115, x2116 = bits.Add32(x2090, x2087, uint32(uint1(x2114)))
	x2117 := (uint32(uint1(x2116)) + x2088)
	var x2118 uint32
	var x2119 uint32
	x2118, x2119 = bits.Add32(x2070, x2101, uint32(0x0))
	var x2120 uint32
	var x2121 uint32
	x2120, x2121 = bits.Add32(x2072, x2103, uint32(uint1(x2119)))
	var x2122 uint32
	var x2123 uint32
	x2122, x2123 = bits.Add32(x2074, x2105, uint32(uint1(x2121)))
	var x2124 uint32
	var x2125 uint32
	x2124, x2125 = bits.Add32(x2076, x2107, uint32(uint1(x2123)))
	var x2126 uint32
	var x2127 uint32
	x2126, x2127 = bits.Add32(x2078, x2109, uint32(uint1(x2125)))
	var x2128 uint32
	var x2129 uint32
	x2128, x2129 = bits.Add32(x2080, x2111, uint32(uint1(x2127)))
	var x2130 uint32
	var x2131 uint32
	x2130, x2131 = bits.Add32(x2082, x2113, uint32(uint1(x2129)))
	var x2132 uint32
	var x2133 uint32
	x2132, x2133 = bits.Add32(x2084, x2115, uint32(uint1(x2131)))
	var x2134 uint32
	var x2135 uint32
	x2134, x2135 = bits.Add32(x2086, x2117, uint32(uint1(x2133)))
	var x2136 uint32
	_, x2136 = bits.Mul32(x2118, 0xd2253531)
	var x2138 uint32
	var x2139 uint32
	x2139, x2138 = bits.Mul32(x2136, 0xffffffff)
	var x2140 uint32
	var x2141 uint32
	x2141, x2140 = bits.Mul32(x2136, 0xffffffff)
	var x2142 uint32
	var x2143 uint32
	x2143, x2142 = bits.Mul32(x2136, 0xffffffff)
	var x2144 uint32
	var x2145 uint32
	x2145, x2144 = bits.Mul32(x2136, 0xffffffff)
	var x2146 uint32
	var x2147 uint32
	x2147, x2146 = bits.Mul32(x2136, 0xffffffff)
	var x2148 uint32
	var x2149 uint32
	x2149, x2148 = bits.Mul32(x2136, 0xffffffff)
	var x2150 uint32
	var x2151 uint32
	x2151, x2150 = bits.Mul32(x2136, 0xfffffffe)
	var x2152 uint32
	var x2153 uint32
	x2153, x2152 = bits.Mul32(x2136, 0xfffffc2f)
	var x2154 uint32
	var x2155 uint32
	x2154, x2155 = bits.Add32(x2153, x2150, uint32(0x0))
	var x2156 uint32
	var x2157 uint32
	x2156, x2157 = bits.Add32(x2151, x2148, uint32(uint1(x2155)))
	var x2158 uint32
	var x2159 uint32
	x2158, x2159 = bits.Add32(x2149, x2146, uint32(uint1(x2157)))
	var x2160 uint32
	var x2161 uint32
	x2160, x2161 = bits.Add32(x2147, x2144, uint32(uint1(x2159)))
	var x2162 uint32
	var x2163 uint32
	x2162, x2163 = bits.Add32(x2145, x2142, uint32(uint1(x2161)))
	var x2164 uint32
	var x2165 uint32
	x2164, x2165 = bits.Add32(x2143, x2140, uint32(uint1(x2163)))
	var x2166 uint32
	var x2167 uint32
	x2166, x2167 = bits.Add32(x2141, x2138, uint32(uint1(x2165)))
	x2168 := (uint32(uint1(x2167)) + x2139)
	var x2170 uint32
	_, x2170 = bits.Add32(x2118, x2152, uint32(0x0))
	var x2171 uint32
	var x2172 uint32
	x2171, x2172 = bits.Add32(x2120, x2154, uint32(uint1(x2170)))
	var x2173 uint32
	var x2174 uint32
	x2173, x2174 = bits.Add32(x2122, x2156, uint32(uint1(x2172)))
	var x2175 uint32
	var x2176 uint32
	x2175, x2176 = bits.Add32(x2124, x2158, uint32(uint1(x2174)))
	var x2177 uint32
	var x2178 uint32
	x2177, x2178 = bits.Add32(x2126, x2160, uint32(uint1(x2176)))
	var x2179 uint32
	var x2180 uint32
	x2179, x2180 = bits.Add32(x2128, x2162, uint32(uint1(x2178)))
	var x2181 uint32
	var x2182 uint32
	x2181, x2182 = bits.Add32(x2130, x2164, uint32(uint1(x2180)))
	var x2183 uint32
	var x2184 uint32
	x2183, x2184 = bits.Add32(x2132, x2166, uint32(uint1(x2182)))
	var x2185 uint32
	var x2186 uint32
	x2185, x2186 = bits.Add32(x2134, x2168, uint32(uint1(x2184)))
	x2187 := (uint32(uint1(x2186)) + uint32(uint1(x2135)))
	var x2188 uint32
	var x2189 uint32
	x2189, x2188 = bits.Mul32(x126, arg1[7])
	var x2190 uint32
	var x2191 uint32
	x2191, x2190 = bits.Mul32(x126, arg1[6])
	var x2192 uint32
	var x2193 uint32
	x2193, x2192 = bits.Mul32(x126, arg1[5])
	var x2194 uint32
	var x2195 uint32
	x2195, x2194 = bits.Mul32(x126, arg1[4])
	var x2196 uint32
	var x2197 uint32
	x2197, x2196 = bits.Mul32(x126, arg1[3])
	var x2198 uint32
	var x2199 uint32
	x2199, x2198 = bits.Mul32(x126, arg1[2])
	var x2200 uint32
	var x2201 uint32
	x2201, x2200 = bits.Mul32(x126, arg1[1])
	var x2202 uint32
	var x2203 uint32
	x2203, x2202 = bits.Mul32(x126, arg1[0])
	var x2204 uint32
	var x2205 uint32
	x2204, x2205 = bits.Add32(x2203, x2200, uint32(0x0))
	var x2206 uint32
	var x2207 uint32
	x2206, x2207 = bits.Add32(x2201, x2198, uint32(uint1(x2205)))
	var x2208 uint32
	var x2209 uint32
	x2208, x2209 = bits.Add32(x2199, x2196, uint32(uint1(x2207)))
	var x2210 uint32
	var x2211 uint32
	x2210, x2211 = bits.Add32(x2197, x2194, uint32(uint1(x2209)))
	var x2212 uint32
	var x2213 uint32
	x2212, x2213 = bits.Add32(x2195, x2192, uint32(uint1(x2211)))
	var x2214 uint32
	var x2215 uint32
	x2214, x2215 = bits.Add32(x2193, x2190, uint32(uint1(x2213)))
	var x2216 uint32
	var x2217 uint32
	x2216, x2217 = bits.Add32(x2191, x2188, uint32(uint1(x2215)))
	x2218 := (uint32(uint1(x2217)) + x2189)
	var x2219 uint32
	var x2220 uint32
	x2219, x2220 = bits.Add32(x2171, x2202, uint32(0x0))
	var x2221 uint32
	var x2222 uint32
	x2221, x2222 = bits.Add32(x2173, x2204, uint32(uint1(x2220)))
	var x2223 uint32
	var x2224 uint32
	x2223, x2224 = bits.Add32(x2175, x2206, uint32(uint1(x2222)))
	var x2225 uint32
	var x2226 uint32
	x2225, x2226 = bits.Add32(x2177, x2208, uint32(uint1(x2224)))
	var x2227 uint32
	var x2228 uint32
	x2227, x2228 = bits.Add32(x2179, x2210, uint32(uint1(x2226)))
	var x2229 uint32
	var x2230 uint32
	x2229, x2230 = bits.Add32(x2181, x2212, uint32(uint1(x2228)))
	var x2231 uint32
	var x2232 uint32
	x2231, x2232 = bits.Add32(x2183, x2214, uint32(uint1(x2230)))
	var x2233 uint32
	var x2234 uint32
	x2233, x2234 = bits.Add32(x2185, x2216, uint32(uint1(x2232)))
	var x2235 uint32
	var x2236 uint32
	x2235, x2236 = bits.Add32(x2187, x2218, uint32(uint1(x2234)))
	var x2237 uint32
	_, x2237 = bits.Mul32(x2219, 0xd2253531)
	var x2239 uint32
	var x2240 uint32
	x2240, x2239 = bits.Mul32(x2237, 0xffffffff)
	var x2241 uint32
	var x2242 uint32
	x2242, x2241 = bits.Mul32(x2237, 0xffffffff)
	var x2243 uint32
	var x2244 uint32
	x2244, x2243 = bits.Mul32(x2237, 0xffffffff)
	var x2245 uint32
	var x2246 uint32
	x2246, x2245 = bits.Mul32(x2237, 0xffffffff)
	var x2247 uint32
	var x2248 uint32
	x2248, x2247 = bits.Mul32(x2237, 0xffffffff)
	var x2249 uint32
	var x2250 uint32
	x2250, x2249 = bits.Mul32(x2237, 0xffffffff)
	var x2251 uint32
	var x2252 uint32
	x2252, x2251 = bits.Mul32(x2237, 0xfffffffe)
	var x2253 uint32
	var x2254 uint32
	x2254, x2253 = bits.Mul32(x2237, 0xfffffc2f)
	var x2255 uint32
	var x2256 uint32
	x2255, x2256 = bits.Add32(x2254, x2251, uint32(0x0))
	var x2257 uint32
	var x2258 uint32
	x2257, x2258 = bits.Add32(x2252, x2249, uint32(uint1(x2256)))
	var x2259 uint32
	var x2260 uint32
	x2259, x2260 = bits.Add32(x2250, x2247, uint32(uint1(x2258)))
	var x2261 uint32
	var x2262 uint32
	x2261, x2262 = bits.Add32(x2248, x2245, uint32(uint1(x2260)))
	var x2263 uint32
	var x2264 uint32
	x2263, x2264 = bits.Add32(x2246, x2243, uint32(uint1(x2262)))
	var x2265 uint32
	var x2266 uint32
	x2265, x2266 = bits.Add32(x2244, x2241, uint32(uint1(x2264)))
	var x2267 uint32
	var x2268 uint32
	x2267, x2268 = bits.Add32(x2242, x2239, uint32(uint1(x2266)))
	x2269 := (uint32(uint1(x2268)) + x2240)
	var x2271 uint32
	_, x2271 = bits.Add32(x2219, x2253, uint32(0x0))
	var x2272 uint32
	var x2273 uint32
	x2272, x2273 = bits.Add32(x2221, x2255, uint32(uint1(x2271)))
	var x2274 uint32
	var x2275 uint32
	x2274, x2275 = bits.Add32(x2223, x2257, uint32(uint1(x2273)))
	var x2276 uint32
	var x2277 uint32
	x2276, x2277 = bits.Add32(x2225, x2259, uint32(uint1(x2275)))
	var x2278 uint32
	var x2279 uint32
	x2278, x2279 = bits.Add32(x2227, x2261, uint32(uint1(x2277)))
	var x2280 uint32
	var x2281 uint32
	x2280, x2281 = bits.Add32(x2229, x2263, uint32(uint1(x2279)))
	var x2282 uint32
	var x2283 uint32
	x2282, x2283 = bits.Add32(x2231, x2265, uint32(uint1(x2281)))
	var x2284 uint32
	var x2285 uint32
	x2284, x2285 = bits.Add32(x2233, x2267, uint32(uint1(x2283)))
	var x2286 uint32
	var x2287 uint32
	x2286, x2287 = bits.Add32(x2235, x2269, uint32(uint1(x2285)))
	x2288 := (uint32(uint1(x2287)) + uint32(uint1(x2236)))
	var x2289 uint32
	var x2290 uint32
	x2290, x2289 = bits.Mul32(x127, arg1[7])
	var x2291 uint32
	var x2292 uint32
	x2292, x2291 = bits.Mul32(x127, arg1[6])
	var x2293 uint32
	var x2294 uint32
	x2294, x2293 = bits.Mul32(x127, arg1[5])
	var x2295 uint32
	var x2296 uint32
	x2296, x2295 = bits.Mul32(x127, arg1[4])
	var x2297 uint32
	var x2298 uint32
	x2298, x2297 = bits.Mul32(x127, arg1[3])
	var x2299 uint32
	var x2300 uint32
	x2300, x2299 = bits.Mul32(x127, arg1[2])
	var x2301 uint32
	var x2302 uint32
	x2302, x2301 = bits.Mul32(x127, arg1[1])
	var x2303 uint32
	var x2304 uint32
	x2304, x2303 = bits.Mul32(x127, arg1[0])
	var x2305 uint32
	var x2306 uint32
	x2305, x2306 = bits.Add32(x2304, x2301, uint32(0x0))
	var x2307 uint32
	var x2308 uint32
	x2307, x2308 = bits.Add32(x2302, x2299, uint32(uint1(x2306)))
	var x2309 uint32
	var x2310 uint32
	x2309, x2310 = bits.Add32(x2300, x2297, uint32(uint1(x2308)))
	var x2311 uint32
	var x2312 uint32
	x2311, x2312 = bits.Add32(x2298, x2295, uint32(uint1(x2310)))
	var x2313 uint32
	var x2314 uint32
	x2313, x2314 = bits.Add32(x2296, x2293, uint32(uint1(x2312)))
	var x2315 uint32
	var x2316 uint32
	x2315, x2316 = bits.Add32(x2294, x2291, uint32(uint1(x2314)))
	var x2317 uint32
	var x2318 uint32
	x2317, x2318 = bits.Add32(x2292, x2289, uint32(uint1(x2316)))
	x2319 := (uint32(uint1(x2318)) + x2290)
	var x2320 uint32
	var x2321 uint32
	x2320, x2321 = bits.Add32(x2272, x2303, uint32(0x0))
	var x2322 uint32
	var x2323 uint32
	x2322, x2323 = bits.Add32(x2274, x2305, uint32(uint1(x2321)))
	var x2324 uint32
	var x2325 uint32
	x2324, x2325 = bits.Add32(x2276, x2307, uint32(uint1(x2323)))
	var x2326 uint32
	var x2327 uint32
	x2326, x2327 = bits.Add32(x2278, x2309, uint32(uint1(x2325)))
	var x2328 uint32
	var x2329 uint32
	x2328, x2329 = bits.Add32(x2280, x2311, uint32(uint1(x2327)))
	var x2330 uint32
	var x2331 uint32
	x2330, x2331 = bits.Add32(x2282, x2313, uint32(uint1(x2329)))
	var x2332 uint32
	var x2333 uint32
	x2332, x2333 = bits.Add32(x2284, x2315, uint32(uint1(x2331)))
	var x2334 uint32
	var x2335 uint32
	x2334, x2335 = bits.Add32(x2286, x2317, uint32(uint1(x2333)))
	var x2336 uint32
	var x2337 uint32
	x2336, x2337 = bits.Add32(x2288, x2319, uint32(uint1(x2335)))
	var x2338 uint32
	_, x2338 = bits.Mul32(x2320, 0xd2253531)
	var x2340 uint32
	var x2341 uint32
	x2341, x2340 = bits.Mul32(x2338, 0xffffffff)
	var x2342 uint32
	var x2343 uint32
	x2343, x2342 = bits.Mul32(x2338, 0xffffffff)
	var x2344 uint32
	var x2345 uint32
	x2345, x2344 = bits.Mul32(x2338, 0xffffffff)
	var x2346 uint32
	var x2347 uint32
	x2347, x2346 = bits.Mul32(x2338, 0xffffffff)
	var x2348 uint32
	var x2349 uint32
	x2349, x2348 = bits.Mul32(x2338, 0xffffffff)
	var x2350 uint32
	var x2351 uint32
	x2351, x2350 = bits.Mul32(x2338, 0xffffffff)
	var x2352 uint32
	var x2353 uint32
	x2353, x2352 = bits.Mul32(x2338, 0xfffffffe)
	var x2354 uint32
	var x2355 uint32
	x2355, x2354 = bits.Mul32(x2338, 0xfffffc2f)
	var x2356 uint32
	var x2357 uint32
	x2356, x2357 = bits.Add32(x2355, x2352, uint32(0x0))
	var x2358 uint32
	var x2359 uint32
	x2358, x2359 = bits.Add32(x2353, x2350, uint32(uint1(x2357)))
	var x2360 uint32
	var x2361 uint32
	x2360, x2361 = bits.Add32(x2351, x2348, uint32(uint1(x2359)))
	var x2362 uint32
	var x2363 uint32
	x2362, x2363 = bits.Add32(x2349, x2346, uint32(uint1(x2361)))
	var x2364 uint32
	var x2365 uint32
	x2364, x2365 = bits.Add32(x2347, x2344, uint32(uint1(x2363)))
	var x2366 uint32
	var x2367 uint32
	x2366, x2367 = bits.Add32(x2345, x2342, uint32(uint1(x2365)))
	var x2368 uint32
	var x2369 uint32
	x2368, x2369 = bits.Add32(x2343, x2340, uint32(uint1(x2367)))
	x2370 := (uint32(uint1(x2369)) + x2341)
	var x2372 uint32
	_, x2372 = bits.Add32(x2320, x2354, uint32(0x0))
	var x2373 uint32
	var x2374 uint32
	x2373, x2374 = bits.Add32(x2322, x2356, uint32(uint1(x2372)))
	var x2375 uint32
	var x2376 uint32
	x2375, x2376 = bits.Add32(x2324, x2358, uint32(uint1(x2374)))
	var x2377 uint32
	var x2378 uint32
	x2377, x2378 = bits.Add32(x2326, x2360, uint32(uint1(x2376)))
	var x2379 uint32
	var x2380 uint32
	x2379, x2380 = bits.Add32(x2328, x2362, uint32(uint1(x2378)))
	var x2381 uint32
	var x2382 uint32
	x2381, x2382 = bits.Add32(x2330, x2364, uint32(uint1(x2380)))
	var x2383 uint32
	var x2384 uint32
	x2383, x2384 = bits.Add32(x2332, x2366, uint32(uint1(x2382)))
	var x2385 uint32
	var x2386 uint32
	x2385, x2386 = bits.Add32(x2334, x2368, uint32(uint1(x2384)))
	var x2387 uint32
	var x2388 uint32
	x2387, x2388 = bits.Add32(x2336, x2370, uint32(uint1(x2386)))
	x2389 := (uint32(uint1(x2388)) + uint32(uint1(x2337)))
	var x2390 uint32
	var x2391 uint32
	x2391, x2390 = bits.Mul32(x128, arg1[7])
	var x2392 uint32
	var x2393 uint32
	x2393, x2392 = bits.Mul32(x128, arg1[6])
	var x2394 uint32
	var x2395 uint32
	x2395, x2394 = bits.Mul32(x128, arg1[5])
	var x2396 uint32
	var x2397 uint32
	x2397, x2396 = bits.Mul32(x128, arg1[4])
	var x2398 uint32
	var x2399 uint32
	x2399, x2398 = bits.Mul32(x128, arg1[3])
	var x2400 uint32
	var x2401 uint32
	x2401, x2400 = bits.Mul32(x128, arg1[2])
	var x2402 uint32
	var x2403 uint32
	x2403, x2402 = bits.Mul32(x128, arg1[1])
	var x2404 uint32
	var x2405 uint32
	x2405, x2404 = bits.Mul32(x128, arg1[0])
	var x2406 uint32
	var x2407 uint32
	x2406, x2407 = bits.Add32(x2405, x2402, uint32(0x0))
	var x2408 uint32
	var x2409 uint32
	x2408, x2409 = bits.Add32(x2403, x2400, uint32(uint1(x2407)))
	var x2410 uint32
	var x2411 uint32
	x2410, x2411 = bits.Add32(x2401, x2398, uint32(uint1(x2409)))
	var x2412 uint32
	var x2413 uint32
	x2412, x2413 = bits.Add32(x2399, x2396, uint32(uint1(x2411)))
	var x2414 uint32
	var x2415 uint32
	x2414, x2415 = bits.Add32(x2397, x2394, uint32(uint1(x2413)))
	var x2416 uint32
	var x2417 uint32
	x2416, x2417 = bits.Add32(x2395, x2392, uint32(uint1(x2415)))
	var x2418 uint32
	var x2419 uint32
	x2418, x2419 = bits.Add32(x2393, x2390, uint32(uint1(x2417)))
	x2420 := (uint32(uint1(x2419)) + x2391)
	var x2421 uint32
	var x2422 uint32
	x2421, x2422 = bits.Add32(x2373, x2404, uint32(0x0))
	var x2423 uint32
	var x2424 uint32
	x2423, x2424 = bits.Add32(x2375, x2406, uint32(uint1(x2422)))
	var x2425 uint32
	var x2426 uint32
	x2425, x2426 = bits.Add32(x2377, x2408, uint32(uint1(x2424)))
	var x2427 uint32
	var x2428 uint32
	x2427, x2428 = bits.Add32(x2379, x2410, uint32(uint1(x2426)))
	var x2429 uint32
	var x2430 uint32
	x2429, x2430 = bits.Add32(x2381, x2412, uint32(uint1(x2428)))
	var x2431 uint32
	var x2432 uint32
	x2431, x2432 = bits.Add32(x2383, x2414, uint32(uint1(x2430)))
	var x2433 uint32
	var x2434 uint32
	x2433, x2434 = bits.Add32(x2385, x2416, uint32(uint1(x2432)))
	var x2435 uint32
	var x2436 uint32
	x2435, x2436 = bits.Add32(x2387, x2418, uint32(uint1(x2434)))
	var x2437 uint32
	var x2438 uint32
	x2437, x2438 = bits.Add32(x2389, x2420, uint32(uint1(x2436)))
	var x2439 uint32
	_, x2439 = bits.Mul32(x2421, 0xd2253531)
	var x2441 uint32
	var x2442 uint32
	x2442, x2441 = bits.Mul32(x2439, 0xffffffff)
	var x2443 uint32
	var x2444 uint32
	x2444, x2443 = bits.Mul32(x2439, 0xffffffff)
	var x2445 uint32
	var x2446 uint32
	x2446, x2445 = bits.Mul32(x2439, 0xffffffff)
	var x2447 uint32
	var x2448 uint32
	x2448, x2447 = bits.Mul32(x2439, 0xffffffff)
	var x2449 uint32
	var x2450 uint32
	x2450, x2449 = bits.Mul32(x2439, 0xffffffff)
	var x2451 uint32
	var x2452 uint32
	x2452, x2451 = bits.Mul32(x2439, 0xffffffff)
	var x2453 uint32
	var x2454 uint32
	x2454, x2453 = bits.Mul32(x2439, 0xfffffffe)
	var x2455 uint32
	var x2456 uint32
	x2456, x2455 = bits.Mul32(x2439, 0xfffffc2f)
	var x2457 uint32
	var x2458 uint32
	x2457, x2458 = bits.Add32(x2456, x2453, uint32(0x0))
	var x2459 uint32
	var x2460 uint32
	x2459, x2460 = bits.Add32(x2454, x2451, uint32(uint1(x2458)))
	var x2461 uint32
	var x2462 uint32
	x2461, x2462 = bits.Add32(x2452, x2449, uint32(uint1(x2460)))
	var x2463 uint32
	var x2464 uint32
	x2463, x2464 = bits.Add32(x2450, x2447, uint32(uint1(x2462)))
	var x2465 uint32
	var x2466 uint32
	x2465, x2466 = bits.Add32(x2448, x2445, uint32(uint1(x2464)))
	var x2467 uint32
	var x2468 uint32
	x2467, x2468 = bits.Add32(x2446, x2443, uint32(uint1(x2466)))
	var x2469 uint32
	var x2470 uint32
	x2469, x2470 = bits.Add32(x2444, x2441, uint32(uint1(x2468)))
	x2471 := (uint32(uint1(x2470)) + x2442)
	var x2473 uint32
	_, x2473 = bits.Add32(x2421, x2455, uint32(0x0))
	var x2474 uint32
	var x2475 uint32
	x2474, x2475 = bits.Add32(x2423, x2457, uint32(uint1(x2473)))
	var x2476 uint32
	var x2477 uint32
	x2476, x2477 = bits.Add32(x2425, x2459, uint32(uint1(x2475)))
	var x2478 uint32
	var x2479 uint32
	x2478, x2479 = bits.Add32(x2427, x2461, uint32(uint1(x2477)))
	var x2480 uint32
	var x2481 uint32
	x2480, x2481 = bits.Add32(x2429, x2463, uint32(uint1(x2479)))
	var x2482 uint32
	var x2483 uint32
	x2482, x2483 = bits.Add32(x2431, x2465, uint32(uint1(x2481)))
	var x2484 uint32
	var x2485 uint32
	x2484, x2485 = bits.Add32(x2433, x2467, uint32(uint1(x2483)))
	var x2486 uint32
	var x2487 uint32
	x2486, x2487 = bits.Add32(x2435, x2469, uint32(uint1(x2485)))
	var x2488 uint32
	var x2489 uint32
	x2488, x2489 = bits.Add32(x2437, x2471, uint32(uint1(x2487)))
	x2490 := (uint32(uint1(x2489)) + uint32(uint1(x2438)))
	var x2491 uint32
	var x2492 uint32
	x2492, x2491 = bits.Mul32(x129, arg1[7])
	var x2493 uint32
	var x2494 uint32
	x2494, x2493 = bits.Mul32(x129, arg1[6])
	var x2495 uint32
	var x2496 uint32
	x2496, x2495 = bits.Mul32(x129, arg1[5])
	var x2497 uint32
	var x2498 uint32
	x2498, x2497 = bits.Mul32(x129, arg1[4])
	var x2499 uint32
	var x2500 uint32
	x2500, x2499 = bits.Mul32(x129, arg1[3])
	var x2501 uint32
	var x2502 uint32
	x2502, x2501 = bits.Mul32(x129, arg1[2])
	var x2503 uint32
	var x2504 uint32
	x2504, x2503 = bits.Mul32(x129, arg1[1])
	var x2505 uint32
	var x2506 uint32
	x2506, x2505 = bits.Mul32(x129, arg1[0])
	var x2507 uint32
	var x2508 uint32
	x2507, x2508 = bits.Add32(x2506, x2503, uint32(0x0))
	var x2509 uint32
	var x2510 uint32
	x2509, x2510 = bits.Add32(x2504, x2501, uint32(uint1(x2508)))
	var x2511 uint32
	var x2512 uint32
	x2511, x2512 = bits.Add32(x2502, x2499, uint32(uint1(x2510)))
	var x2513 uint32
	var x2514 uint32
	x2513, x2514 = bits.Add32(x2500, x2497, uint32(uint1(x2512)))
	var x2515 uint32
	var x2516 uint32
	x2515, x2516 = bits.Add32(x2498, x2495, uint32(uint1(x2514)))
	var x2517 uint32
	var x2518 uint32
	x2517, x2518 = bits.Add32(x2496, x2493, uint32(uint1(x2516)))
	var x2519 uint32
	var x2520 uint32
	x2519, x2520 = bits.Add32(x2494, x2491, uint32(uint1(x2518)))
	x2521 := (uint32(uint1(x2520)) + x2492)
	var x2522 uint32
	var x2523 uint32
	x2522, x2523 = bits.Add32(x2474, x2505, uint32(0x0))
	var x2524 uint32
	var x2525 uint32
	x2524, x2525 = bits.Add32(x2476, x2507, uint32(uint1(x2523)))
	var x2526 uint32
	var x2527 uint32
	x2526, x2527 = bits.Add32(x2478, x2509, uint32(uint1(x2525)))
	var x2528 uint32
	var x2529 uint32
	x2528, x2529 = bits.Add32(x2480, x2511, uint32(uint1(x2527)))
	var x2530 uint32
	var x2531 uint32
	x2530, x2531 = bits.Add32(x2482, x2513, uint32(uint1(x2529)))
	var x2532 uint32
	var x2533 uint32
	x2532, x2533 = bits.Add32(x2484, x2515, uint32(uint1(x2531)))
	var x2534 uint32
	var x2535 uint32
	x2534, x2535 = bits.Add32(x2486, x2517, uint32(uint1(x2533)))
	var x2536 uint32
	var x2537 uint32
	x2536, x2537 = bits.Add32(x2488, x2519, uint32(uint1(x2535)))
	var x2538 uint32
	var x2539 uint32
	x2538, x2539 = bits.Add32(x2490, x2521, uint32(uint1(x2537)))
	var x2540 uint32
	_, x2540 = bits.Mul32(x2522, 0xd2253531)
	var x2542 uint32
	var x2543 uint32
	x2543, x2542 = bits.Mul32(x2540, 0xffffffff)
	var x2544 uint32
	var x2545 uint32
	x2545, x2544 = bits.Mul32(x2540, 0xffffffff)
	var x2546 uint32
	var x2547 uint32
	x2547, x2546 = bits.Mul32(x2540, 0xffffffff)
	var x2548 uint32
	var x2549 uint32
	x2549, x2548 = bits.Mul32(x2540, 0xffffffff)
	var x2550 uint32
	var x2551 uint32
	x2551, x2550 = bits.Mul32(x2540, 0xffffffff)
	var x2552 uint32
	var x2553 uint32
	x2553, x2552 = bits.Mul32(x2540, 0xffffffff)
	var x2554 uint32
	var x2555 uint32
	x2555, x2554 = bits.Mul32(x2540, 0xfffffffe)
	var x2556 uint32
	var x2557 uint32
	x2557, x2556 = bits.Mul32(x2540, 0xfffffc2f)
	var x2558 uint32
	var x2559 uint32
	x2558, x2559 = bits.Add32(x2557, x2554, uint32(0x0))
	var x2560 uint32
	var x2561 uint32
	x2560, x2561 = bits.Add32(x2555, x2552, uint32(uint1(x2559)))
	var x2562 uint32
	var x2563 uint32
	x2562, x2563 = bits.Add32(x2553, x2550, uint32(uint1(x2561)))
	var x2564 uint32
	var x2565 uint32
	x2564, x2565 = bits.Add32(x2551, x2548, uint32(uint1(x2563)))
	var x2566 uint32
	var x2567 uint32
	x2566, x2567 = bits.Add32(x2549, x2546, uint32(uint1(x2565)))
	var x2568 uint32
	var x2569 uint32
	x2568, x2569 = bits.Add32(x2547, x2544, uint32(uint1(x2567)))
	var x2570 uint32
	var x2571 uint32
	x2570, x2571 = bits.Add32(x2545, x2542, uint32(uint1(x2569)))
	x2572 := (uint32(uint1(x2571)) + x2543)
	var x2574 uint32
	_, x2574 = bits.Add32(x2522, x2556, uint32(0x0))
	var x2575 uint32
	var x2576 uint32
	x2575, x2576 = bits.Add32(x2524, x2558, uint32(uint1(x2574)))
	var x2577 uint32
	var x2578 uint32
	x2577, x2578 = bits.Add32(x2526, x2560, uint32(uint1(x2576)))
	var x2579 uint32
	var x2580 uint32
	x2579, x2580 = bits.Add32(x2528, x2562, uint32(uint1(x2578)))
	var x2581 uint32
	var x2582 uint32
	x2581, x2582 = bits.Add32(x2530, x2564, uint32(uint1(x2580)))
	var x2583 uint32
	var x2584 uint32
	x2583, x2584 = bits.Add32(x2532, x2566, uint32(uint1(x2582)))
	var x2585 uint32
	var x2586 uint32
	x2585, x2586 = bits.Add32(x2534, x2568, uint32(uint1(x2584)))
	var x2587 uint32
	var x2588 uint32
	x2587, x2588 = bits.Add32(x2536, x2570, uint32(uint1(x2586)))
	var x2589 uint32
	var x2590 uint32
	x2589, x2590 = bits.Add32(x2538, x2572, uint32(uint1(x2588)))
	x2591 := (uint32(uint1(x2590)) + uint32(uint1(x2539)))
	var x2592 uint32
	var x2593 uint32
	x2592, x2593 = bits.Sub32(x2575, 0xfffffc2f, uint32(0x0))
	var x2594 uint32
	var x2595 uint32
	x2594, x2595 = bits.Sub32(x2577, 0xfffffffe, uint32(uint1(x2593)))
	var x2596 uint32
	var x2597 uint32
	x2596, x2597 = bits.Sub32(x2579, 0xffffffff, uint32(uint1(x2595)))
	var x2598 uint32
	var x2599 uint32
	x2598, x2599 = bits.Sub32(x2581, 0xffffffff, uint32(uint1(x2597)))
	var x2600 uint32
	var x2601 uint32
	x2600, x2601 = bits.Sub32(x2583, 0xffffffff, uint32(uint1(x2599)))
	var x2602 uint32
	var x2603 uint32
	x2602, x2603 = bits.Sub32(x2585, 0xffffffff, uint32(uint1(x2601)))
	var x2604 uint32
	var x2605 uint32
	x2604, x2605 = bits.Sub32(x2587, 0xffffffff, uint32(uint1(x2603)))
	var x2606 uint32
	var x2607 uint32
	x2606, x2607 = bits.Sub32(x2589, 0xffffffff, uint32(uint1(x2605)))
	var x2609 uint32
	_, x2609 = bits.Sub32(x2591, uint32(0x0), uint32(uint1(x2607)))
	var x2610 uint32
	cmovznzU32(&x2610, uint1(x2609), x2592, x2575)
	var x2611 uint32
	cmovznzU32(&x2611, uint1(x2609), x2594, x2577)
	var x2612 uint32
	cmovznzU32(&x2612, uint1(x2609), x2596, x2579)
	var x2613 uint32
	cmovznzU32(&x2613, uint1(x2609), x2598, x2581)
	var x2614 uint32
	cmovznzU32(&x2614, uint1(x2609), x2600, x2583)
	var x2615 uint32
	cmovznzU32(&x2615, uint1(x2609), x2602, x2585)
	var x2616 uint32
	cmovznzU32(&x2616, uint1(x2609), x2604, x2587)
	var x2617 uint32
	cmovznzU32(&x2617, uint1(x2609), x2606, x2589)
	var x2618 uint32
	var x2619 uint32
	x2619, x2618 = bits.Mul32(x165, arg2[7])
	var x2620 uint32
	var x2621 uint32
	x2621, x2620 = bits.Mul32(x165, arg2[6])
	var x2622 uint32
	var x2623 uint32
	x2623, x2622 = bits.Mul32(x165, arg2[5])
	var x2624 uint32
	var x2625 uint32
	x2625, x2624 = bits.Mul32(x165, arg2[4])
	var x2626 uint32
	var x2627 uint32
	x2627, x2626 = bits.Mul32(x165, arg2[3])
	var x2628 uint32
	var x2629 uint32
	x2629, x2628 = bits.Mul32(x165, arg2[2])
	var x2630 uint32
	var x2631 uint32
	x2631, x2630 = bits.Mul32(x165, arg2[1])
	var x2632 uint32
	var x2633 uint32
	x2633, x2632 = bits.Mul32(x165, arg2[0])
	var x2634 uint32
	var x2635 uint32
	x2634, x2635 = bits.Add32(x2633, x2630, uint32(0x0))
	var x2636 uint32
	var x2637 uint32
	x2636, x2637 = bits.Add32(x2631, x2628, uint32(uint1(x2635)))
	var x2638 uint32
	var x2639 uint32
	x2638, x2639 = bits.Add32(x2629, x2626, uint32(uint1(x2637)))
	var x2640 uint32
	var x2641 uint32
	x2640, x2641 = bits.Add32(x2627, x2624, uint32(uint1(x2639)))
	var x2642 uint32
	var x2643 uint32
	x2642, x2643 = bits.Add32(x2625, x2622, uint32(uint1(x2641)))
	var x2644 uint32
	var x2645 uint32
	x2644, x2645 = bits.Add32(x2623, x2620, uint32(uint1(x2643)))
	var x2646 uint32
	var x2647 uint32
	x2646, x2647 = bits.Add32(x2621, x2618, uint32(uint1(x2645)))
	x2648 := (uint32(uint1(x2647)) + x2619)
	var x2649 uint32
	_, x2649 = bits.Mul32(x2632, 0xd2253531)
	var x2651 uint32
	var x2652 uint32
	x2652, x2651 = bits.Mul32(x2649, 0xffffffff)
	var x2653 uint32
	var x2654 uint32
	x2654, x2653 = bits.Mul32(x2649, 0xffffffff)
	var x2655 uint32
	var x2656 uint32
	x2656, x2655 = bits.Mul32(x2649, 0xffffffff)
	var x2657 uint32
	var x2658 uint32
	x2658, x2657 = bits.Mul32(x2649, 0xffffffff)
	var x2659 uint32
	var x2660 uint32
	x2660, x2659 = bits.Mul32(x2649, 0xffffffff)
	var x2661 uint32
	var x2662 uint32
	x2662, x2661 = bits.Mul32(x2649, 0xffffffff)
	var x2663 uint32
	var x2664 uint32
	x2664, x2663 = bits.Mul32(x2649, 0xfffffffe)
	var x2665 uint32
	var x2666 uint32
	x2666, x2665 = bits.Mul32(x2649, 0xfffffc2f)
	var x2667 uint32
	var x2668 uint32
	x2667, x2668 = bits.Add32(x2666, x2663, uint32(0x0))
	var x2669 uint32
	var x2670 uint32
	x2669, x2670 = bits.Add32(x2664, x2661, uint32(uint1(x2668)))
	var x2671 uint32
	var x2672 uint32
	x2671, x2672 = bits.Add32(x2662, x2659, uint32(uint1(x2670)))
	var x2673 uint32
	var x2674 uint32
	x2673, x2674 = bits.Add32(x2660, x2657, uint32(uint1(x2672)))
	var x2675 uint32
	var x2676 uint32
	x2675, x2676 = bits.Add32(x2658, x2655, uint32(uint1(x2674)))
	var x2677 uint32
	var x2678 uint32
	x2677, x2678 = bits.Add32(x2656, x2653, uint32(uint1(x2676)))
	var x2679 uint32
	var x2680 uint32
	x2679, x2680 = bits.Add32(x2654, x2651, uint32(uint1(x2678)))
	x2681 := (uint32(uint1(x2680)) + x2652)
	var x2683 uint32
	_, x2683 = bits.Add32(x2632, x2665, uint32(0x0))
	var x2684 uint32
	var x2685 uint32
	x2684, x2685 = bits.Add32(x2634, x2667, uint32(uint1(x2683)))
	var x2686 uint32
	var x2687 uint32
	x2686, x2687 = bits.Add32(x2636, x2669, uint32(uint1(x2685)))
	var x2688 uint32
	var x2689 uint32
	x2688, x2689 = bits.Add32(x2638, x2671, uint32(uint1(x2687)))
	var x2690 uint32
	var x2691 uint32
	x2690, x2691 = bits.Add32(x2640, x2673, uint32(uint1(x2689)))
	var x2692 uint32
	var x2693 uint32
	x2692, x2693 = bits.Add32(x2642, x2675, uint32(uint1(x2691)))
	var x2694 uint32
	var x2695 uint32
	x2694, x2695 = bits.Add32(x2644, x2677, uint32(uint1(x2693)))
	var x2696 uint32
	var x2697 uint32
	x2696, x2697 = bits.Add32(x2646, x2679, uint32(uint1(x2695)))
	var x2698 uint32
	var x2699 uint32
	x2698, x2699 = bits.Add32(x2648, x2681, uint32(uint1(x2697)))
	var x2700 uint32
	var x2701 uint32
	x2701, x2700 = bits.Mul32(x166, arg2[7])
	var x2702 uint32
	var x2703 uint32
	x2703, x2702 = bits.Mul32(x166, arg2[6])
	var x2704 uint32
	var x2705 uint32
	x2705, x2704 = bits.Mul32(x166, arg2[5])
	var x2706 uint32
	var x2707 uint32
	x2707, x2706 = bits.Mul32(x166, arg2[4])
	var x2708 uint32
	var x2709 uint32
	x2709, x2708 = bits.Mul32(x166, arg2[3])
	var x2710 uint32
	var x2711 uint32
	x2711, x2710 = bits.Mul32(x166, arg2[2])
	var x2712 uint32
	var x2713 uint32
	x2713, x2712 = bits.Mul32(x166, arg2[1])
	var x2714 uint32
	var x2715 uint32
	x2715, x2714 = bits.Mul32(x166, arg2[0])
	var x2716 uint32
	var x2717 uint32
	x2716, x2717 = bits.Add32(x2715, x2712, uint32(0x0))
	var x2718 uint32
	var x2719 uint32
	x2718, x2719 = bits.Add32(x2713, x2710, uint32(uint1(x2717)))
	var x2720 uint32
	var x2721 uint32
	x2720, x2721 = bits.Add32(x2711, x2708, uint32(uint1(x2719)))
	var x2722 uint32
	var x2723 uint32
	x2722, x2723 = bits.Add32(x2709, x2706, uint32(uint1(x2721)))
	var x2724 uint32
	var x2725 uint32
	x2724, x2725 = bits.Add32(x2707, x2704, uint32(uint1(x2723)))
	var x2726 uint32
	var x2727 uint32
	x2726, x2727 = bits.Add32(x2705, x2702, uint32(uint1(x2725)))
	var x2728 uint32
	var x2729 uint32
	x2728, x2729 = bits.Add32(x2703, x2700, uint32(uint1(x2727)))
	x2730 := (uint32(uint1(x2729)) + x2701)
	var x2731 uint32
	var x2732 uint32
	x2731, x2732 = bits.Add32(x2684, x2714, uint32(0x0))
	var x2733 uint32
	var x2734 uint32
	x2733, x2734 = bits.Add32(x2686, x2716, uint32(uint1(x2732)))
	var x2735 uint32
	var x2736 uint32
	x2735, x2736 = bits.Add32(x2688, x2718, uint32(uint1(x2734)))
	var x2737 uint32
	var x2738 uint32
	x2737, x2738 = bits.Add32(x2690, x2720, uint32(uint1(x2736)))
	var x2739 uint32
	var x2740 uint32
	x2739, x2740 = bits.Add32(x2692, x2722, uint32(uint1(x2738)))
	var x2741 uint32
	var x2742 uint32
	x2741, x2742 = bits.Add32(x2694, x2724, uint32(uint1(x2740)))
	var x2743 uint32
	var x2744 uint32
	x2743, x2744 = bits.Add32(x2696, x2726, uint32(uint1(x2742)))
	var x2745 uint32
	var x2746 uint32
	x2745, x2746 = bits.Add32(x2698, x2728, uint32(uint1(x2744)))
	var x2747 uint32
	var x2748 uint32
	x2747, x2748 = bits.Add32(uint32(uint1(x2699)), x2730, uint32(uint1(x2746)))
	var x2749 uint32
	_, x2749 = bits.Mul32(x2731, 0xd2253531)
	var x2751 uint32
	var x2752 uint32
	x2752, x2751 = bits.Mul32(x2749, 0xffffffff)
	var x2753 uint32
	var x2754 uint32
	x2754, x2753 = bits.Mul32(x2749, 0xffffffff)
	var x2755 uint32
	var x2756 uint32
	x2756, x2755 = bits.Mul32(x2749, 0xffffffff)
	var x2757 uint32
	var x2758 uint32
	x2758, x2757 = bits.Mul32(x2749, 0xffffffff)
	var x2759 uint32
	var x2760 uint32
	x2760, x2759 = bits.Mul32(x2749, 0xffffffff)
	var x2761 uint32
	var x2762 uint32
	x2762, x2761 = bits.Mul32(x2749, 0xffffffff)
	var x2763 uint32
	var x2764 uint32
	x2764, x2763 = bits.Mul32(x2749, 0xfffffffe)
	var x2765 uint32
	var x2766 uint32
	x2766, x2765 = bits.Mul32(x2749, 0xfffffc2f)
	var x2767 uint32
	var x2768 uint32
	x2767, x2768 = bits.Add32(x2766, x2763, uint32(0x0))
	var x2769 uint32
	var x2770 uint32
	x2769, x2770 = bits.Add32(x2764, x2761, uint32(uint1(x2768)))
	var x2771 uint32
	var x2772 uint32
	x2771, x2772 = bits.Add32(x2762, x2759, uint32(uint1(x2770)))
	var x2773 uint32
	var x2774 uint32
	x2773, x2774 = bits.Add32(x2760, x2757, uint32(uint1(x2772)))
	var x2775 uint32
	var x2776 uint32
	x2775, x2776 = bits.Add32(x2758, x2755, uint32(uint1(x2774)))
	var x2777 uint32
	var x2778 uint32
	x2777, x2778 = bits.Add32(x2756, x2753, uint32(uint1(x2776)))
	var x2779 uint32
	var x2780 uint32
	x2779, x2780 = bits.Add32(x2754, x2751, uint32(uint1(x2778)))
	x2781 := (uint32(uint1(x2780)) + x2752)
	var x2783 uint32
	_, x2783 = bits.Add32(x2731, x2765, uint32(0x0))
	var x2784 uint32
	var x2785 uint32
	x2784, x2785 = bits.Add32(x2733, x2767, uint32(uint1(x2783)))
	var x2786 uint32
	var x2787 uint32
	x2786, x2787 = bits.Add32(x2735, x2769, uint32(uint1(x2785)))
	var x2788 uint32
	var x2789 uint32
	x2788, x2789 = bits.Add32(x2737, x2771, uint32(uint1(x2787)))
	var x2790 uint32
	var x2791 uint32
	x2790, x2791 = bits.Add32(x2739, x2773, uint32(uint1(x2789)))
	var x2792 uint32
	var x2793 uint32
	x2792, x2793 = bits.Add32(x2741, x2775, uint32(uint1(x2791)))
	var x2794 uint32
	var x2795 uint32
	x2794, x2795 = bits.Add32(x2743, x2777, uint32(uint1(x2793)))
	var x2796 uint32
	var x2797 uint32
	x2796, x2797 = bits.Add32(x2745, x2779, uint32(uint1(x2795)))
	var x2798 uint32
	var x2799 uint32
	x2798, x2799 = bits.Add32(x2747, x2781, uint32(uint1(x2797)))
	x2800 := (uint32(uint1(x2799)) + uint32(uint1(x2748)))
	var x2801 uint32
	var x2802 uint32
	x2802, x2801 = bits.Mul32(x167, arg2[7])
	var x2803 uint32
	var x2804 uint32
	x2804, x2803 = bits.Mul32(x167, arg2[6])
	var x2805 uint32
	var x2806 uint32
	x2806, x2805 = bits.Mul32(x167, arg2[5])
	var x2807 uint32
	var x2808 uint32
	x2808, x2807 = bits.Mul32(x167, arg2[4])
	var x2809 uint32
	var x2810 uint32
	x2810, x2809 = bits.Mul32(x167, arg2[3])
	var x2811 uint32
	var x2812 uint32
	x2812, x2811 = bits.Mul32(x167, arg2[2])
	var x2813 uint32
	var x2814 uint32
	x2814, x2813 = bits.Mul32(x167, arg2[1])
	var x2815 uint32
	var x2816 uint32
	x2816, x2815 = bits.Mul32(x167, arg2[0])
	var x2817 uint32
	var x2818 uint32
	x2817, x2818 = bits.Add32(x2816, x2813, uint32(0x0))
	var x2819 uint32
	var x2820 uint32
	x2819, x2820 = bits.Add32(x2814, x2811, uint32(uint1(x2818)))
	var x2821 uint32
	var x2822 uint32
	x2821, x2822 = bits.Add32(x2812, x2809, uint32(uint1(x2820)))
	var x2823 uint32
	var x2824 uint32
	x2823, x2824 = bits.Add32(x2810, x2807, uint32(uint1(x2822)))
	var x2825 uint32
	var x2826 uint32
	x2825, x2826 = bits.Add32(x2808, x2805, uint32(uint1(x2824)))
	var x2827 uint32
	var x2828 uint32
	x2827, x2828 = bits.Add32(x2806, x2803, uint32(uint1(x2826)))
	var x2829 uint32
	var x2830 uint32
	x2829, x2830 = bits.Add32(x2804, x2801, uint32(uint1(x2828)))
	x2831 := (uint32(uint1(x2830)) + x2802)
	var x2832 uint32
	var x2833 uint32
	x2832, x2833 = bits.Add32(x2784, x2815, uint32(0x0))
	var x2834 uint32
	var x2835 uint32
	x2834, x2835 = bits.Add32(x2786, x2817, uint32(uint1(x2833)))
	var x2836 uint32
	var x2837 uint32
	x2836, x2837 = bits.Add32(x2788, x2819, uint32(uint1(x2835)))
	var x2838 uint32
	var x2839 uint32
	x2838, x2839 = bits.Add32(x2790, x2821, uint32(uint1(x2837)))
	var x2840 uint32
	var x2841 uint32
	x2840, x2841 = bits.Add32(x2792, x2823, uint32(uint1(x2839)))
	var x2842 uint32
	var x2843 uint32
	x2842, x2843 = bits.Add32(x2794, x2825, uint32(uint1(x2841)))
	var x2844 uint32
	var x2845 uint32
	x2844, x2845 = bits.Add32(x2796, x2827, uint32(uint1(x2843)))
	var x2846 uint32
	var x2847 uint32
	x2846, x2847 = bits.Add32(x2798, x2829, uint32(uint1(x2845)))
	var x2848 uint32
	var x2849 uint32
	x2848, x2849 = bits.Add32(x2800, x2831, uint32(uint1(x2847)))
	var x2850 uint32
	_, x2850 = bits.Mul32(x2832, 0xd2253531)
	var x2852 uint32
	var x2853 uint32
	x2853, x2852 = bits.Mul32(x2850, 0xffffffff)
	var x2854 uint32
	var x2855 uint32
	x2855, x2854 = bits.Mul32(x2850, 0xffffffff)
	var x2856 uint32
	var x2857 uint32
	x2857, x2856 = bits.Mul32(x2850, 0xffffffff)
	var x2858 uint32
	var x2859 uint32
	x2859, x2858 = bits.Mul32(x2850, 0xffffffff)
	var x2860 uint32
	var x2861 uint32
	x2861, x2860 = bits.Mul32(x2850, 0xffffffff)
	var x2862 uint32
	var x2863 uint32
	x2863, x2862 = bits.Mul32(x2850, 0xffffffff)
	var x2864 uint32
	var x2865 uint32
	x2865, x2864 = bits.Mul32(x2850, 0xfffffffe)
	var x2866 uint32
	var x2867 uint32
	x2867, x2866 = bits.Mul32(x2850, 0xfffffc2f)
	var x2868 uint32
	var x2869 uint32
	x2868, x2869 = bits.Add32(x2867, x2864, uint32(0x0))
	var x2870 uint32
	var x2871 uint32
	x2870, x2871 = bits.Add32(x2865, x2862, uint32(uint1(x2869)))
	var x2872 uint32
	var x2873 uint32
	x2872, x2873 = bits.Add32(x2863, x2860, uint32(uint1(x2871)))
	var x2874 uint32
	var x2875 uint32
	x2874, x2875 = bits.Add32(x2861, x2858, uint32(uint1(x2873)))
	var x2876 uint32
	var x2877 uint32
	x2876, x2877 = bits.Add32(x2859, x2856, uint32(uint1(x2875)))
	var x2878 uint32
	var x2879 uint32
	x2878, x2879 = bits.Add32(x2857, x2854, uint32(uint1(x2877)))
	var x2880 uint32
	var x2881 uint32
	x2880, x2881 = bits.Add32(x2855, x2852, uint32(uint1(x2879)))
	x2882 := (uint32(uint1(x2881)) + x2853)
	var x2884 uint32
	_, x2884 = bits.Add32(x2832, x2866, uint32(0x0))
	var x2885 uint32
	var x2886 uint32
	x2885, x2886 = bits.Add32(x2834, x2868, uint32(uint1(x2884)))
	var x2887 uint32
	var x2888 uint32
	x2887, x2888 = bits.Add32(x2836, x2870, uint32(uint1(x2886)))
	var x2889 uint32
	var x2890 uint32
	x2889, x2890 = bits.Add32(x2838, x2872, uint32(uint1(x2888)))
	var x2891 uint32
	var x2892 uint32
	x2891, x2892 = bits.Add32(x2840, x2874, uint32(uint1(x2890)))
	var x2893 uint32
	var x2894 uint32
	x2893, x2894 = bits.Add32(x2842, x2876, uint32(uint1(x2892)))
	var x2895 uint32
	var x2896 uint32
	x2895, x2896 = bits.Add32(x2844, x2878, uint32(uint1(x2894)))
	var x2897 uint32
	var x2898 uint32
	x2897, x2898 = bits.Add32(x2846, x2880, uint32(uint1(x2896)))
	var x2899 uint32
	var x2900 uint32
	x2899, x2900 = bits.Add32(x2848, x2882, uint32(uint1(x2898)))
	x2901 := (uint32(uint1(x2900)) + uint32(uint1(x2849)))
	var x2902 uint32
	var x2903 uint32
	x2903, x2902 = bits.Mul32(x168, arg2[7])
	var x2904 uint32
	var x2905 uint32
	x2905, x2904 = bits.Mul32(x168, arg2[6])
	var x2906 uint32
	var x2907 uint32
	x2907, x2906 = bits.Mul32(x168, arg2[5])
	var x2908 uint32
	var x2909 uint32
	x2909, x2908 = bits.Mul32(x168, arg2[4])
	var x2910 uint32
	var x2911 uint32
	x2911, x2910 = bits.Mul32(x168, arg2[3])
	var x2912 uint32
	var x2913 uint32
	x2913, x2912 = bits.Mul32(x168, arg2[2])
	var x2914 uint32
	var x2915 uint32
	x2915, x2914 = bits.Mul32(x168, arg2[1])
	var x2916 uint32
	var x2917 uint32
	x2917, x2916 = bits.Mul32(x168, arg2[0])
	var x2918 uint32
	var x2919 uint32
	x2918, x2919 = bits.Add32(x2917, x2914, uint32(0x0))
	var x2920 uint32
	var x2921 uint32
	x2920, x2921 = bits.Add32(x2915, x2912, uint32(uint1(x2919)))
	var x2922 uint32
	var x2923 uint32
	x2922, x2923 = bits.Add32(x2913, x2910, uint32(uint1(x2921)))
	var x2924 uint32
	var x2925 uint32
	x2924, x2925 = bits.Add32(x2911, x2908, uint32(uint1(x2923)))
	var x2926 uint32
	var x2927 uint32
	x2926, x2927 = bits.Add32(x2909, x2906, uint32(uint1(x2925)))
	var x2928 uint32
	var x2929 uint32
	x2928, x2929 = bits.Add32(x2907, x2904, uint32(uint1(x2927)))
	var x2930 uint32
	var x2931 uint32
	x2930, x2931 = bits.Add32(x2905, x2902, uint32(uint1(x2929)))
	x2932 := (uint32(uint1(x2931)) + x2903)
	var x2933 uint32
	var x2934 uint32
	x2933, x2934 = bits.Add32(x2885, x2916, uint32(0x0))
	var x2935 uint32
	var x2936 uint32
	x2935, x2936 = bits.Add32(x2887, x2918, uint32(uint1(x2934)))
	var x2937 uint32
	var x2938 uint32
	x2937, x2938 = bits.Add32(x2889, x2920, uint32(uint1(x2936)))
	var x2939 uint32
	var x2940 uint32
	x2939, x2940 = bits.Add32(x2891, x2922, uint32(uint1(x2938)))
	var x2941 uint32
	var x2942 uint32
	x2941, x2942 = bits.Add32(x2893, x2924, uint32(uint1(x2940)))
	var x2943 uint32
	var x2944 uint32
	x2943, x2944 = bits.Add32(x2895, x2926, uint32(uint1(x2942)))
	var x2945 uint32
	var x2946 uint32
	x2945, x2946 = bits.Add32(x2897, x2928, uint32(uint1(x2944)))
	var x2947 uint32
	var x2948 uint32
	x2947, x2948 = bits.Add32(x2899, x2930, uint32(uint1(x2946)))
	var x2949 uint32
	var x2950 uint32
	x2949, x2950 = bits.Add32(x2901, x2932, uint32(uint1(x2948)))
	var x2951 uint32
	_, x2951 = bits.Mul32(x2933, 0xd2253531)
	var x2953 uint32
	var x2954 uint32
	x2954, x2953 = bits.Mul32(x2951, 0xffffffff)
	var x2955 uint32
	var x2956 uint32
	x2956, x2955 = bits.Mul32(x2951, 0xffffffff)
	var x2957 uint32
	var x2958 uint32
	x2958, x2957 = bits.Mul32(x2951, 0xffffffff)
	var x2959 uint32
	var x2960 uint32
	x2960, x2959 = bits.Mul32(x2951, 0xffffffff)
	var x2961 uint32
	var x2962 uint32
	x2962, x2961 = bits.Mul32(x2951, 0xffffffff)
	var x2963 uint32
	var x2964 uint32
	x2964, x2963 = bits.Mul32(x2951, 0xffffffff)
	var x2965 uint32
	var x2966 uint32
	x2966, x2965 = bits.Mul32(x2951, 0xfffffffe)
	var x2967 uint32
	var x2968 uint32
	x2968, x2967 = bits.Mul32(x2951, 0xfffffc2f)
	var x2969 uint32
	var x2970 uint32
	x2969, x2970 = bits.Add32(x2968, x2965, uint32(0x0))
	var x2971 uint32
	var x2972 uint32
	x2971, x2972 = bits.Add32(x2966, x2963, uint32(uint1(x2970)))
	var x2973 uint32
	var x2974 uint32
	x2973, x2974 = bits.Add32(x2964, x2961, uint32(uint1(x2972)))
	var x2975 uint32
	var x2976 uint32
	x2975, x2976 = bits.Add32(x2962, x2959, uint32(uint1(x2974)))
	var x2977 uint32
	var x2978 uint32
	x2977, x2978 = bits.Add32(x2960, x2957, uint32(uint1(x2976)))
	var x2979 uint32
	var x2980 uint32
	x2979, x2980 = bits.Add32(x2958, x2955, uint32(uint1(x2978)))
	var x2981 uint32
	var x2982 uint32
	x2981, x2982 = bits.Add32(x2956, x2953, uint32(uint1(x2980)))
	x2983 := (uint32(uint1(x2982)) + x2954)
	var x2985 uint32
	_, x2985 = bits.Add32(x2933, x2967, uint32(0x0))
	var x2986 uint32
	var x2987 uint32
	x2986, x2987 = bits.Add32(x2935, x2969, uint32(uint1(x2985)))
	var x2988 uint32
	var x2989 uint32
	x2988, x2989 = bits.Add32(x2937, x2971, uint32(uint1(x2987)))
	var x2990 uint32
	var x2991 uint32
	x2990, x2991 = bits.Add32(x2939, x2973, uint32(uint1(x2989)))
	var x2992 uint32
	var x2993 uint32
	x2992, x2993 = bits.Add32(x2941, x2975, uint32(uint1(x2991)))
	var x2994 uint32
	var x2995 uint32
	x2994, x2995 = bits.Add32(x2943, x2977, uint32(uint1(x2993)))
	var x2996 uint32
	var x2997 uint32
	x2996, x2997 = bits.Add32(x2945, x2979, uint32(uint1(x2995)))
	var x2998 uint32
	var x2999 uint32
	x2998, x2999 = bits.Add32(x2947, x2981, uint32(uint1(x2997)))
	var x3000 uint32
	var x3001 uint32
	x3000, x3001 = bits.Add32(x2949, x2983, uint32(uint1(x2999)))
	x3002 := (uint32(uint1(x3001)) + uint32(uint1(x2950)))
	var x3003 uint32
	var x3004 uint32
	x3004, x3003 = bits.Mul32(x169, arg2[7])
	var x3005 uint32
	var x3006 uint32
	x3006, x3005 = bits.Mul32(x169, arg2[6])
	var x3007 uint32
	var x3008 uint32
	x3008, x3007 = bits.Mul32(x169, arg2[5])
	var x3009 uint32
	var x3010 uint32
	x3010, x3009 = bits.Mul32(x169, arg2[4])
	var x3011 uint32
	var x3012 uint32
	x3012, x3011 = bits.Mul32(x169, arg2[3])
	var x3013 uint32
	var x3014 uint32
	x3014, x3013 = bits.Mul32(x169, arg2[2])
	var x3015 uint32
	var x3016 uint32
	x3016, x3015 = bits.Mul32(x169, arg2[1])
	var x3017 uint32
	var x3018 uint32
	x3018, x3017 = bits.Mul32(x169, arg2[0])
	var x3019 uint32
	var x3020 uint32
	x3019, x3020 = bits.Add32(x3018, x3015, uint32(0x0))
	var x3021 uint32
	var x3022 uint32
	x3021, x3022 = bits.Add32(x3016, x3013, uint32(uint1(x3020)))
	var x3023 uint32
	var x3024 uint32
	x3023, x3024 = bits.Add32(x3014, x3011, uint32(uint1(x3022)))
	var x3025 uint32
	var x3026 uint32
	x3025, x3026 = bits.Add32(x3012, x3009, uint32(uint1(x3024)))
	var x3027 uint32
	var x3028 uint32
	x3027, x3028 = bits.Add32(x3010, x3007, uint32(uint1(x3026)))
	var x3029 uint32
	var x3030 uint32
	x3029, x3030 = bits.Add32(x3008, x3005, uint32(uint1(x3028)))
	var x3031 uint32
	var x3032 uint32
	x3031, x3032 = bits.Add32(x3006, x3003, uint32(uint1(x3030)))
	x3033 := (uint32(uint1(x3032)) + x3004)
	var x3034 uint32
	var x3035 uint32
	x3034, x3035 = bits.Add32(x2986, x3017, uint32(0x0))
	var x3036 uint32
	var x3037 uint32
	x3036, x3037 = bits.Add32(x2988, x3019, uint32(uint1(x3035)))
	var x3038 uint32
	var x3039 uint32
	x3038, x3039 = bits.Add32(x2990, x3021, uint32(uint1(x3037)))
	var x3040 uint32
	var x3041 uint32
	x3040, x3041 = bits.Add32(x2992, x3023, uint32(uint1(x3039)))
	var x3042 uint32
	var x3043 uint32
	x3042, x3043 = bits.Add32(x2994, x3025, uint32(uint1(x3041)))
	var x3044 uint32
	var x3045 uint32
	x3044, x3045 = bits.Add32(x2996, x3027, uint32(uint1(x3043)))
	var x3046 uint32
	var x3047 uint32
	x3046, x3047 = bits.Add32(x2998, x3029, uint32(uint1(x3045)))
	var x3048 uint32
	var x3049 uint32
	x3048, x3049 = bits.Add32(x3000, x3031, uint32(uint1(x3047)))
	var x3050 uint32
	var x3051 uint32
	x3050, x3051 = bits.Add32(x3002, x3033, uint32(uint1(x3049)))
	var x3052 uint32
	_, x3052 = bits.Mul32(x3034, 0xd2253531)
	var x3054 uint32
	var x3055 uint32
	x3055, x3054 = bits.Mul32(x3052, 0xffffffff)
	var x3056 uint32
	var x3057 uint32
	x3057, x3056 = bits.Mul32(x3052, 0xffffffff)
	var x3058 uint32
	var x3059 uint32
	x3059, x3058 = bits.Mul32(x3052, 0xffffffff)
	var x3060 uint32
	var x3061 uint32
	x3061, x3060 = bits.Mul32(x3052, 0xffffffff)
	var x3062 uint32
	var x3063 uint32
	x3063, x3062 = bits.Mul32(x3052, 0xffffffff)
	var x3064 uint32
	var x3065 uint32
	x3065, x3064 = bits.Mul32(x3052, 0xffffffff)
	var x3066 uint32
	var x3067 uint32
	x3067, x3066 = bits.Mul32(x3052, 0xfffffffe)
	var x3068 uint32
	var x3069 uint32
	x3069, x3068 = bits.Mul32(x3052, 0xfffffc2f)
	var x3070 uint32
	var x3071 uint32
	x3070, x3071 = bits.Add32(x3069, x3066, uint32(0x0))
	var x3072 uint32
	var x3073 uint32
	x3072, x3073 = bits.Add32(x3067, x3064, uint32(uint1(x3071)))
	var x3074 uint32
	var x3075 uint32
	x3074, x3075 = bits.Add32(x3065, x3062, uint32(uint1(x3073)))
	var x3076 uint32
	var x3077 uint32
	x3076, x3077 = bits.Add32(x3063, x3060, uint32(uint1(x3075)))
	var x3078 uint32
	var x3079 uint32
	x3078, x3079 = bits.Add32(x3061, x3058, uint32(uint1(x3077)))
	var x3080 uint32
	var x3081 uint32
	x3080, x3081 = bits.Add32(x3059, x3056, uint32(uint1(x3079)))
	var x3082 uint32
	var x3083 uint32
	x3082, x3083 = bits.Add32(x3057, x3054, uint32(uint1(x3081)))
	x3084 := (uint32(uint1(x3083)) + x3055)
	var x3086 uint32
	_, x3086 = bits.Add32(x3034, x3068, uint32(0x0))
	var x3087 uint32
	var x3088 uint32
	x3087, x3088 = bits.Add32(x3036, x3070, uint32(uint1(x3086)))
	var x3089 uint32
	var x3090 uint32
	x3089, x3090 = bits.Add32(x3038, x3072, uint32(uint1(x3088)))
	var x3091 uint32
	var x3092 uint32
	x3091, x3092 = bits.Add32(x3040, x3074, uint32(uint1(x3090)))
	var x3093 uint32
	var x3094 uint32
	x3093, x3094 = bits.Add32(x3042, x3076, uint32(uint1(x3092)))
	var x3095 uint32
	var x3096 uint32
	x3095, x3096 = bits.Add32(x3044, x3078, uint32(uint1(x3094)))
	var x3097 uint32
	var x3098 uint32
	x3097, x3098 = bits.Add32(x3046, x3080, uint32(uint1(x3096)))
	var x3099 uint32
	var x3100 uint32
	x3099, x3100 = bits.Add32(x3048, x3082, uint32(uint1(x3098)))
	var x3101 uint32
	var x3102 uint32
	x3101, x3102 = bits.Add32(x3050, x3084, uint32(uint1(x3100)))
	x3103 := (uint32(uint1(x3102)) + uint32(uint1(x3051)))
	var x3104 uint32
	var x3105 uint32
	x3105, x3104 = bits.Mul32(x170, arg2[7])
	var x3106 uint32
	var x3107 uint32
	x3107, x3106 = bits.Mul32(x170, arg2[6])
	var x3108 uint32
	var x3109 uint32
	x3109, x3108 = bits.Mul32(x170, arg2[5])
	var x3110 uint32
	var x3111 uint32
	x3111, x3110 = bits.Mul32(x170, arg2[4])
	var x3112 uint32
	var x3113 uint32
	x3113, x3112 = bits.Mul32(x170, arg2[3])
	var x3114 uint32
	var x3115 uint32
	x3115, x3114 = bits.Mul32(x170, arg2[2])
	var x3116 uint32
	var x3117 uint32
	x3117, x3116 = bits.Mul32(x170, arg2[1])
	var x3118 uint32
	var x3119 uint32
	x3119, x3118 = bits.Mul32(x170, arg2[0])
	var x3120 uint32
	var x3121 uint32
	x3120, x3121 = bits.Add32(x3119, x3116, uint32(0x0))
	var x3122 uint32
	var x3123 uint32
	x3122, x3123 = bits.Add32(x3117, x3114, uint32(uint1(x3121)))
	var x3124 uint32
	var x3125 uint32
	x3124, x3125 = bits.Add32(x3115, x3112, uint32(uint1(x3123)))
	var x3126 uint32
	var x3127 uint32
	x3126, x3127 = bits.Add32(x3113, x3110, uint32(uint1(x3125)))
	var x3128 uint32
	var x3129 uint32
	x3128, x3129 = bits.Add32(x3111, x3108, uint32(uint1(x3127)))
	var x3130 uint32
	var x3131 uint32
	x3130, x3131 = bits.Add32(x3109, x3106, uint32(uint1(x3129)))
	var x3132 uint32
	var x3133 uint32
	x3132, x3133 = bits.Add32(x3107, x3104, uint32(uint1(x3131)))
	x3134 := (uint32(uint1(x3133)) + x3105)
	var x3135 uint32
	var x3136 uint32
	x3135, x3136 = bits.Add32(x3087, x3118, uint32(0x0))
	var x3137 uint32
	var x3138 uint32
	x3137, x3138 = bits.Add32(x3089, x3120, uint32(uint1(x3136)))
	var x3139 uint32
	var x3140 uint32
	x3139, x3140 = bits.Add32(x3091, x3122, uint32(uint1(x3138)))
	var x3141 uint32
	var x3142 uint32
	x3141, x3142 = bits.Add32(x3093, x3124, uint32(uint1(x3140)))
	var x3143 uint32
	var x3144 uint32
	x3143, x3144 = bits.Add32(x3095, x3126, uint32(uint1(x3142)))
	var x3145 uint32
	var x3146 uint32
	x3145, x3146 = bits.Add32(x3097, x3128, uint32(uint1(x3144)))
	var x3147 uint32
	var x3148 uint32
	x3147, x3148 = bits.Add32(x3099, x3130, uint32(uint1(x3146)))
	var x3149 uint32
	var x3150 uint32
	x3149, x3150 = bits.Add32(x3101, x3132, uint32(uint1(x3148)))
	var x3151 uint32
	var x3152 uint32
	x3151, x3152 = bits.Add32(x3103, x3134, uint32(uint1(x3150)))
	var x3153 uint32
	_, x3153 = bits.Mul32(x3135, 0xd2253531)
	var x3155 uint32
	var x3156 uint32
	x3156, x3155 = bits.Mul32(x3153, 0xffffffff)
	var x3157 uint32
	var x3158 uint32
	x3158, x3157 = bits.Mul32(x3153, 0xffffffff)
	var x3159 uint32
	var x3160 uint32
	x3160, x3159 = bits.Mul32(x3153, 0xffffffff)
	var x3161 uint32
	var x3162 uint32
	x3162, x3161 = bits.Mul32(x3153, 0xffffffff)
	var x3163 uint32
	var x3164 uint32
	x3164, x3163 = bits.Mul32(x3153, 0xffffffff)
	var x3165 uint32
	var x3166 uint32
	x3166, x3165 = bits.Mul32(x3153, 0xffffffff)
	var x3167 uint32
	var x3168 uint32
	x3168, x3167 = bits.Mul32(x3153, 0xfffffffe)
	var x3169 uint32
	var x3170 uint32
	x3170, x3169 = bits.Mul32(x3153, 0xfffffc2f)
	var x3171 uint32
	var x3172 uint32
	x3171, x3172 = bits.Add32(x3170, x3167, uint32(0x0))
	var x3173 uint32
	var x3174 uint32
	x3173, x3174 = bits.Add32(x3168, x3165, uint32(uint1(x3172)))
	var x3175 uint32
	var x3176 uint32
	x3175, x3176 = bits.Add32(x3166, x3163, uint32(uint1(x3174)))
	var x3177 uint32
	var x3178 uint32
	x3177, x3178 = bits.Add32(x3164, x3161, uint32(uint1(x3176)))
	var x3179 uint32
	var x3180 uint32
	x3179, x3180 = bits.Add32(x3162, x3159, uint32(uint1(x3178)))
	var x3181 uint32
	var x3182 uint32
	x3181, x3182 = bits.Add32(x3160, x3157, uint32(uint1(x3180)))
	var x3183 uint32
	var x3184 uint32
	x3183, x3184 = bits.Add32(x3158, x3155, uint32(uint1(x3182)))
	x3185 := (uint32(uint1(x3184)) + x3156)
	var x3187 uint32
	_, x3187 = bits.Add32(x3135, x3169, uint32(0x0))
	var x3188 uint32
	var x3189 uint32
	x3188, x3189 = bits.Add32(x3137, x3171, uint32(uint1(x3187)))
	var x3190 uint32
	var x3191 uint32
	x3190, x3191 = bits.Add32(x3139, x3173, uint32(uint1(x3189)))
	var x3192 uint32
	var x3193 uint32
	x3192, x3193 = bits.Add32(x3141, x3175, uint32(uint1(x3191)))
	var x3194 uint32
	var x3195 uint32
	x3194, x3195 = bits.Add32(x3143, x3177, uint32(uint1(x3193)))
	var x3196 uint32
	var x3197 uint32
	x3196, x3197 = bits.Add32(x3145, x3179, uint32(uint1(x3195)))
	var x3198 uint32
	var x3199 uint32
	x3198, x3199 = bits.Add32(x3147, x3181, uint32(uint1(x3197)))
	var x3200 uint32
	var x3201 uint32
	x3200, x3201 = bits.Add32(x3149, x3183, uint32(uint1(x3199)))
	var x3202 uint32
	var x3203 uint32
	x3202, x3203 = bits.Add32(x3151, x3185, uint32(uint1(x3201)))
	x3204 := (uint32(uint1(x3203)) + uint32(uint1(x3152)))
	var x3205 uint32
	var x3206 uint32
	x3206, x3205 = bits.Mul32(x171, arg2[7])
	var x3207 uint32
	var x3208 uint32
	x3208, x3207 = bits.Mul32(x171, arg2[6])
	var x3209 uint32
	var x3210 uint32
	x3210, x3209 = bits.Mul32(x171, arg2[5])
	var x3211 uint32
	var x3212 uint32
	x3212, x3211 = bits.Mul32(x171, arg2[4])
	var x3213 uint32
	var x3214 uint32
	x3214, x3213 = bits.Mul32(x171, arg2[3])
	var x3215 uint32
	var x3216 uint32
	x3216, x3215 = bits.Mul32(x171, arg2[2])
	var x3217 uint32
	var x3218 uint32
	x3218, x3217 = bits.Mul32(x171, arg2[1])
	var x3219 uint32
	var x3220 uint32
	x3220, x3219 = bits.Mul32(x171, arg2[0])
	var x3221 uint32
	var x3222 uint32
	x3221, x3222 = bits.Add32(x3220, x3217, uint32(0x0))
	var x3223 uint32
	var x3224 uint32
	x3223, x3224 = bits.Add32(x3218, x3215, uint32(uint1(x3222)))
	var x3225 uint32
	var x3226 uint32
	x3225, x3226 = bits.Add32(x3216, x3213, uint32(uint1(x3224)))
	var x3227 uint32
	var x3228 uint32
	x3227, x3228 = bits.Add32(x3214, x3211, uint32(uint1(x3226)))
	var x3229 uint32
	var x3230 uint32
	x3229, x3230 = bits.Add32(x3212, x3209, uint32(uint1(x3228)))
	var x3231 uint32
	var x3232 uint32
	x3231, x3232 = bits.Add32(x3210, x3207, uint32(uint1(x3230)))
	var x3233 uint32
	var x3234 uint32
	x3233, x3234 = bits.Add32(x3208, x3205, uint32(uint1(x3232)))
	x3235 := (uint32(uint1(x3234)) + x3206)
	var x3236 uint32
	var x3237 uint32
	x3236, x3237 = bits.Add32(x3188, x3219, uint32(0x0))
	var x3238 uint32
	var x3239 uint32
	x3238, x3239 = bits.Add32(x3190, x3221, uint32(uint1(x3237)))
	var x3240 uint32
	var x3241 uint32
	x3240, x3241 = bits.Add32(x3192, x3223, uint32(uint1(x3239)))
	var x3242 uint32
	var x3243 uint32
	x3242, x3243 = bits.Add32(x3194, x3225, uint32(uint1(x3241)))
	var x3244 uint32
	var x3245 uint32
	x3244, x3245 = bits.Add32(x3196, x3227, uint32(uint1(x3243)))
	var x3246 uint32
	var x3247 uint32
	x3246, x3247 = bits.Add32(x3198, x3229, uint32(uint1(x3245)))
	var x3248 uint32
	var x3249 uint32
	x3248, x3249 = bits.Add32(x3200, x3231, uint32(uint1(x3247)))
	var x3250 uint32
	var x3251 uint32
	x3250, x3251 = bits.Add32(x3202, x3233, uint32(uint1(x3249)))
	var x3252 uint32
	var x3253 uint32
	x3252, x3253 = bits.Add32(x3204, x3235, uint32(uint1(x3251)))
	var x3254 uint32
	_, x3254 = bits.Mul32(x3236, 0xd2253531)
	var x3256 uint32
	var x3257 uint32
	x3257, x3256 = bits.Mul32(x3254, 0xffffffff)
	var x3258 uint32
	var x3259 uint32
	x3259, x3258 = bits.Mul32(x3254, 0xffffffff)
	var x3260 uint32
	var x3261 uint32
	x3261, x3260 = bits.Mul32(x3254, 0xffffffff)
	var x3262 uint32
	var x3263 uint32
	x3263, x3262 = bits.Mul32(x3254, 0xffffffff)
	var x3264 uint32
	var x3265 uint32
	x3265, x3264 = bits.Mul32(x3254, 0xffffffff)
	var x3266 uint32
	var x3267 uint32
	x3267, x3266 = bits.Mul32(x3254, 0xffffffff)
	var x3268 uint32
	var x3269 uint32
	x3269, x3268 = bits.Mul32(x3254, 0xfffffffe)
	var x3270 uint32
	var x3271 uint32
	x3271, x3270 = bits.Mul32(x3254, 0xfffffc2f)
	var x3272 uint32
	var x3273 uint32
	x3272, x3273 = bits.Add32(x3271, x3268, uint32(0x0))
	var x3274 uint32
	var x3275 uint32
	x3274, x3275 = bits.Add32(x3269, x3266, uint32(uint1(x3273)))
	var x3276 uint32
	var x3277 uint32
	x3276, x3277 = bits.Add32(x3267, x3264, uint32(uint1(x3275)))
	var x3278 uint32
	var x3279 uint32
	x3278, x3279 = bits.Add32(x3265, x3262, uint32(uint1(x3277)))
	var x3280 uint32
	var x3281 uint32
	x3280, x3281 = bits.Add32(x3263, x3260, uint32(uint1(x3279)))
	var x3282 uint32
	var x3283 uint32
	x3282, x3283 = bits.Add32(x3261, x3258, uint32(uint1(x3281)))
	var x3284 uint32
	var x3285 uint32
	x3284, x3285 = bits.Add32(x3259, x3256, uint32(uint1(x3283)))
	x3286 := (uint32(uint1(x3285)) + x3257)
	var x3288 uint32
	_, x3288 = bits.Add32(x3236, x3270, uint32(0x0))
	var x3289 uint32
	var x3290 uint32
	x3289, x3290 = bits.Add32(x3238, x3272, uint32(uint1(x3288)))
	var x3291 uint32
	var x3292 uint32
	x3291, x3292 = bits.Add32(x3240, x3274, uint32(uint1(x3290)))
	var x3293 uint32
	var x3294 uint32
	x3293, x3294 = bits.Add32(x3242, x3276, uint32(uint1(x3292)))
	var x3295 uint32
	var x3296 uint32
	x3295, x3296 = bits.Add32(x3244, x3278, uint32(uint1(x3294)))
	var x3297 uint32
	var x3298 uint32
	x3297, x3298 = bits.Add32(x3246, x3280, uint32(uint1(x3296)))
	var x3299 uint32
	var x3300 uint32
	x3299, x3300 = bits.Add32(x3248, x3282, uint32(uint1(x3298)))
	var x3301 uint32
	var x3302 uint32
	x3301, x3302 = bits.Add32(x3250, x3284, uint32(uint1(x3300)))
	var x3303 uint32
	var x3304 uint32
	x3303, x3304 = bits.Add32(x3252, x3286, uint32(uint1(x3302)))
	x3305 := (uint32(uint1(x3304)) + uint32(uint1(x3253)))
	var x3306 uint32
	var x3307 uint32
	x3307, x3306 = bits.Mul32(x172, arg2[7])
	var x3308 uint32
	var x3309 uint32
	x3309, x3308 = bits.Mul32(x172, arg2[6])
	var x3310 uint32
	var x3311 uint32
	x3311, x3310 = bits.Mul32(x172, arg2[5])
	var x3312 uint32
	var x3313 uint32
	x3313, x3312 = bits.Mul32(x172, arg2[4])
	var x3314 uint32
	var x3315 uint32
	x3315, x3314 = bits.Mul32(x172, arg2[3])
	var x3316 uint32
	var x3317 uint32
	x3317, x3316 = bits.Mul32(x172, arg2[2])
	var x3318 uint32
	var x3319 uint32
	x3319, x3318 = bits.Mul32(x172, arg2[1])
	var x3320 uint32
	var x3321 uint32
	x3321, x3320 = bits.Mul32(x172, arg2[0])
	var x3322 uint32
	var x3323 uint32
	x3322, x3323 = bits.Add32(x3321, x3318, uint32(0x0))
	var x3324 uint32
	var x3325 uint32
	x3324, x3325 = bits.Add32(x3319, x3316, uint32(uint1(x3323)))
	var x3326 uint32
	var x3327 uint32
	x3326, x3327 = bits.Add32(x3317, x3314, uint32(uint1(x3325)))
	var x3328 uint32
	var x3329 uint32
	x3328, x3329 = bits.Add32(x3315, x3312, uint32(uint1(x3327)))
	var x3330 uint32
	var x3331 uint32
	x3330, x3331 = bits.Add32(x3313, x3310, uint32(uint1(x3329)))
	var x3332 uint32
	var x3333 uint32
	x3332, x3333 = bits.Add32(x3311, x3308, uint32(uint1(x3331)))
	var x3334 uint32
	var x3335 uint32
	x3334, x3335 = bits.Add32(x3309, x3306, uint32(uint1(x3333)))
	x3336 := (uint32(uint1(x3335)) + x3307)
	var x3337 uint32
	var x3338 uint32
	x3337, x3338 = bits.Add32(x3289, x3320, uint32(0x0))
	var x3339 uint32
	var x3340 uint32
	x3339, x3340 = bits.Add32(x3291, x3322, uint32(uint1(x3338)))
	var x3341 uint32
	var x3342 uint32
	x3341, x3342 = bits.Add32(x3293, x3324, uint32(uint1(x3340)))
	var x3343 uint32
	var x3344 uint32
	x3343, x3344 = bits.Add32(x3295, x3326, uint32(uint1(x3342)))
	var x3345 uint32
	var x3346 uint32
	x3345, x3346 = bits.Add32(x3297, x3328, uint32(uint1(x3344)))
	var x3347 uint32
	var x3348 uint32
	x3347, x3348 = bits.Add32(x3299, x3330, uint32(uint1(x3346)))
	var x3349 uint32
	var x3350 uint32
	x3349, x3350 = bits.Add32(x3301, x3332, uint32(uint1(x3348)))
	var x3351 uint32
	var x3352 uint32
	x3351, x3352 = bits.Add32(x3303, x3334, uint32(uint1(x3350)))
	var x3353 uint32
	var x3354 uint32
	x3353, x3354 = bits.Add32(x3305, x3336, uint32(uint1(x3352)))
	var x3355 uint32
	_, x3355 = bits.Mul32(x3337, 0xd2253531)
	var x3357 uint32
	var x3358 uint32
	x3358, x3357 = bits.Mul32(x3355, 0xffffffff)
	var x3359 uint32
	var x3360 uint32
	x3360, x3359 = bits.Mul32(x3355, 0xffffffff)
	var x3361 uint32
	var x3362 uint32
	x3362, x3361 = bits.Mul32(x3355, 0xffffffff)
	var x3363 uint32
	var x3364 uint32
	x3364, x3363 = bits.Mul32(x3355, 0xffffffff)
	var x3365 uint32
	var x3366 uint32
	x3366, x3365 = bits.Mul32(x3355, 0xffffffff)
	var x3367 uint32
	var x3368 uint32
	x3368, x3367 = bits.Mul32(x3355, 0xffffffff)
	var x3369 uint32
	var x3370 uint32
	x3370, x3369 = bits.Mul32(x3355, 0xfffffffe)
	var x3371 uint32
	var x3372 uint32
	x3372, x3371 = bits.Mul32(x3355, 0xfffffc2f)
	var x3373 uint32
	var x3374 uint32
	x3373, x3374 = bits.Add32(x3372, x3369, uint32(0x0))
	var x3375 uint32
	var x3376 uint32
	x3375, x3376 = bits.Add32(x3370, x3367, uint32(uint1(x3374)))
	var x3377 uint32
	var x3378 uint32
	x3377, x3378 = bits.Add32(x3368, x3365, uint32(uint1(x3376)))
	var x3379 uint32
	var x3380 uint32
	x3379, x3380 = bits.Add32(x3366, x3363, uint32(uint1(x3378)))
	var x3381 uint32
	var x3382 uint32
	x3381, x3382 = bits.Add32(x3364, x3361, uint32(uint1(x3380)))
	var x3383 uint32
	var x3384 uint32
	x3383, x3384 = bits.Add32(x3362, x3359, uint32(uint1(x3382)))
	var x3385 uint32
	var x3386 uint32
	x3385, x3386 = bits.Add32(x3360, x3357, uint32(uint1(x3384)))
	x3387 := (uint32(uint1(x3386)) + x3358)
	var x3389 uint32
	_, x3389 = bits.Add32(x3337, x3371, uint32(0x0))
	var x3390 uint32
	var x3391 uint32
	x3390, x3391 = bits.Add32(x3339, x3373, uint32(uint1(x3389)))
	var x3392 uint32
	var x3393 uint32
	x3392, x3393 = bits.Add32(x3341, x3375, uint32(uint1(x3391)))
	var x3394 uint32
	var x3395 uint32
	x3394, x3395 = bits.Add32(x3343, x3377, uint32(uint1(x3393)))
	var x3396 uint32
	var x3397 uint32
	x3396, x3397 = bits.Add32(x3345, x3379, uint32(uint1(x3395)))
	var x3398 uint32
	var x3399 uint32
	x3398, x3399 = bits.Add32(x3347, x3381, uint32(uint1(x3397)))
	var x3400 uint32
	var x3401 uint32
	x3400, x3401 = bits.Add32(x3349, x3383, uint32(uint1(x3399)))
	var x3402 uint32
	var x3403 uint32
	x3402, x3403 = bits.Add32(x3351, x3385, uint32(uint1(x3401)))
	var x3404 uint32
	var x3405 uint32
	x3404, x3405 = bits.Add32(x3353, x3387, uint32(uint1(x3403)))
	x3406 := (uint32(uint1(x3405)) + uint32(uint1(x3354)))
	var x3407 uint32
	var x3408 uint32
	x3407, x3408 = bits.Sub32(x3390, 0xfffffc2f, uint32(0x0))
	var x3409 uint32
	var x3410 uint32
	x3409, x3410 = bits.Sub32(x3392, 0xfffffffe, uint32(uint1(x3408)))
	var x3411 uint32
	var x3412 uint32
	x3411, x3412 = bits.Sub32(x3394, 0xffffffff, uint32(uint1(x3410)))
	var x3413 uint32
	var x3414 uint32
	x3413, x3414 = bits.Sub32(x3396, 0xffffffff, uint32(uint1(x3412)))
	var x3415 uint32
	var x3416 uint32
	x3415, x3416 = bits.Sub32(x3398, 0xffffffff, uint32(uint1(x3414)))
	var x3417 uint32
	var x3418 uint32
	x3417, x3418 = bits.Sub32(x3400, 0xffffffff, uint32(uint1(x3416)))
	var x3419 uint32
	var x3420 uint32
	x3419, x3420 = bits.Sub32(x3402, 0xffffffff, uint32(uint1(x3418)))
	var x3421 uint32
	var x3422 uint32
	x3421, x3422 = bits.Sub32(x3404, 0xffffffff, uint32(uint1(x3420)))
	var x3424 uint32
	_, x3424 = bits.Sub32(x3406, uint32(0x0), uint32(uint1(x3422)))
	var x3425 uint32
	cmovznzU32(&x3425, uint1(x3424), x3407, x3390)
	var x3426 uint32
	cmovznzU32(&x3426, uint1(x3424), x3409, x3392)
	var x3427 uint32
	cmovznzU32(&x3427, uint1(x3424), x3411, x3394)
	var x3428 uint32
	cmovznzU32(&x3428, uint1(x3424), x3413, x3396)
	var x3429 uint32
	cmovznzU32(&x3429, uint1(x3424), x3415, x3398)
	var x3430 uint32
	cmovznzU32(&x3430, uint1(x3424), x3417, x3400)
	var x3431 uint32
	cmovznzU32(&x3431, uint1(x3424), x3419, x3402)
	var x3432 uint32
	cmovznzU32(&x3432, uint1(x3424), x3421, x3404)
	var x3433 uint32
	var x3434 uint32
	x3433, x3434 = bits.Add32(x980, x1795, uint32(0x0))
	var x3435 uint32
	var x3436 uint32
	x3435, x3436 = bits.Add32(x981, x1796, uint32(uint1(x3434)))
	var x3437 uint32
	var x3438 uint32
	x3437, x3438 = bits.Add32(x982, x1797, uint32(uint1(x3436)))
	var x3439 uint32
	var x3440 uint32
	x3439, x3440 = bits.Add32(x983, x1798, uint32(uint1(x3438)))
	var x3441 uint32
	var x3442 uint32
	x3441, x3442 = bits.Add32(x984, x1799, uint32(uint1(x3440)))
	var x3443 uint32
	var x3444 uint32
	x3443, x3444 = bits.Add32(x985, x1800, uint32(uint1(x3442)))
	var x3445 uint32
	var x3446 uint32
	x3445, x3446 = bits.Add32(x986, x1801, uint32(uint1(x3444)))
	var x3447 uint32
	var x3448 uint32
	x3447, x3448 = bits.Add32(x987, x1802, uint32(uint1(x3446)))
	var x3449 uint32
	var x3450 uint32
	x3449, x3450 = bits.Sub32(x3433, 0xfffffc2f, uint32(0x0))
	var x3451 uint32
	var x3452 uint32
	x3451, x3452 = bits.Sub32(x3435, 0xfffffffe, uint32(uint1(x3450)))
	var x3453 uint32
	var x3454 uint32
	x3453, x3454 = bits.Sub32(x3437, 0xffffffff, uint32(uint1(x3452)))
	var x3455 uint32
	var x3456 uint32
	x3455, x3456 = bits.Sub32(x3439, 0xffffffff, uint32(uint1(x3454)))
	var x3457 uint32
	var x3458 uint32
	x3457, x3458 = bits.Sub32(x3441, 0xffffffff, uint32(uint1(x3456)))
	var x3459 uint32
	var x3460 uint32
	x3459, x3460 = bits.Sub32(x3443, 0xffffffff, uint32(uint1(x3458)))
	var x3461 uint32
	var x3462 uint32
	x3461, x3462 = bits.Sub32(x3445, 0xffffffff, uint32(uint1(x3460)))
	var x3463 uint32
	var x3464 uint32
	x3463, x3464 = bits.Sub32(x3447, 0xffffffff, uint32(uint1(x3462)))
	var x3466 uint32
	_, x3466 = bits.Sub32(uint32(uint1(x3448)), uint32(0x0), uint32(uint1(x3464)))
	var x3467 uint32
	cmovznzU32(&x3467, uint1(x3466), x3449, x3433)
	var x3468 uint32
	cmovznzU32(&x3468, uint1(x3466), x3451, x3435)
	var x3469 uint32
	cmovznzU32(&x3469, uint1(x3466), x3453, x3437)
	var x3470 uint32
	cmovznzU32(&x3470, uint1(x3466), x3455, x3439)
	var x3471 uint32
	cmovznzU32(&x3471, uint1(x3466), x3457, x3441)
	var x3472 uint32
	cmovznzU32(&x3472, uint1(x3466), x3459, x3443)
	var x3473 uint32
	cmovznzU32(&x3473, uint1(x3466), x3461, x3445)
	var x3474 uint32
	cmovznzU32(&x3474, uint1(x3466), x3463, x3447)
	var x3475 uint32
	var x3476 uint32
	x3475, x3476 = bits.Add32(x2610, x3425, uint32(0x0))
	var x3477 uint32
	var x3478 uint32
	x3477, x3478 = bits.Add32(x2611, x3426, uint32(uint1(x3476)))
	var x3479 uint32
	var x3480 uint32
	x3479, x3480 = bits.Add32(x2612, x3427, uint32(uint1(x3478)))
	var x3481 uint32
	var x3482 uint32
	x3481, x3482 = bits.Add32(x2613, x3428, uint32(uint1(x3480)))
	var x3483 uint32
	var x3484 uint32
	x3483, x3484 = bits.Add32(x2614, x3429, uint32(uint1(x3482)))
	var x3485 uint32
	var x3486 uint32
	x3485, x3486 = bits.Add32(x2615, x3430, uint32(uint1(x3484)))
	var x3487 uint32
	var x3488 uint32
	x3487, x3488 = bits.Add32(x2616, x3431, uint32(uint1(x3486)))
	var x3489 uint32
	var x3490 uint32
	x3489, x3490 = bits.Add32(x2617, x3432, uint32(uint1(x3488)))
	var x3491 uint32
	var x3492 uint32
	x3491, x3492 = bits.Sub32(x3475, 0xfffffc2f, uint32(0x0))
	var x3493 uint32
	var x3494 uint32
	x3493, x3494 = bits.Sub32(x3477, 0xfffffffe, uint32(uint1(x3492)))
	var x3495 uint32
	var x3496 uint32
	x3495, x3496 = bits.Sub32(x3479, 0xffffffff, uint32(uint1(x3494)))
	var x3497 uint32
	var x3498 uint32
	x3497, x3498 = bits.Sub32(x3481, 0xffffffff, uint32(uint1(x3496)))
	var x3499 uint32
	var x3500 uint32
	x3499, x3500 = bits.Sub32(x3483, 0xffffffff, uint32(uint1(x3498)))
	var x3501 uint32
	var x3502 uint32
	x3501, x3502 = bits.Sub32(x3485, 0xffffffff, uint32(uint1(x3500)))
	var x3503 uint32
	var x3504 uint32
	x3503, x3504 = bits.Sub32(x3487, 0xffffffff, uint32(uint1(x3502)))
	var x3505 uint32
	var x3506 uint32
	x3505, x3506 = bits.Sub32(x3489, 0xffffffff, uint32(uint1(x3504)))
	var x3508 uint32
	_, x3508 = bits.Sub32(uint32(uint1(x3490)), uint32(0x0), uint32(uint1(x3506)))
	var x3509 uint32
	cmovznzU32(&x3509, uint1(x3508), x3491, x3475)
	var x3510 uint32
	cmovznzU32(&x3510, uint1(x3508), x3493, x3477)
	var x3511 uint32
	cmovznzU32(&x3511, uint1(x3508), x3495, x3479)
	var x3512 uint32
	cmovznzU32(&x3512, uint1(x3508), x3497, x3481)
	var x3513 uint32
	cmovznzU32(&x3513, uint1(x3508), x3499, x3483)
	var x3514 uint32
	cmovznzU32(&x3514, uint1(x3508), x3501, x3485)
	var x3515 uint32
	cmovznzU32(&x3515, uint1(x3508), x3503, x3487)
	var x3516 uint32
	cmovznzU32(&x3516, uint1(x3508), x3505, x3489)
	out1[0] = x3467
	out1[1] = x3468
	out1[2] = x3469
	out1[3] = x3470
	out1[4] = x3471
	out1[5] = x3472
	out1[6] = x3473
	out1[7] = x3474
	out2[0] = x3509
	out2[1] = x3510
	out2[2] = x3511
	out2[3] = x3512
	out2[4] = x3513
	out2[5] = x3514
	out2[6] = x3515
	out2[7] = x3516
}

// The function JumpdivstepPrecomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecomp(out1 *[8]uint32) {
	out1[0] = 0xc48c8afb
	out1[1] = 0xe502666f
	out1[2] = 0x91c3d7cb
	out1[3] = 0x121e095d
	out1[4] = 0x2e3db814
	out1[5] = 0x30077e42
	out1[6] = 0x1be4d4f4
	out1[7] = 0xa1670faf
}

// The function JumpdivstepPrecompHd returns the precomputed value for the (half-delta) jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecompHd(out1 *[8]uint32) {
	out1[0] = 0x1734d92c
	out1[1] = 0x75aab184
	out1[2] = 0xf7701add
	out1[3] = 0x13420144
	out1[4] = 0xe84ba82e
	out1[5] = 0xa1e3b264
	out1[6] = 0xfd90c052
	out1[7] = 0x5f85a069
}
