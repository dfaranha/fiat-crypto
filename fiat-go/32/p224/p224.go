// Code generated by Fiat Cryptography. DO NOT EDIT.
//
// Autogenerated: 'src/ExtractionOCaml/word_by_word_montgomery' --lang Go --relax-primitive-carry-to-bitwidth 32,64 --cmovznz-by-mul --internal-static --package-case flatcase --public-function-case UpperCamelCase --private-function-case camelCase --public-type-case UpperCamelCase --private-type-case camelCase --no-prefix-fiat --doc-newline-in-typedef-bounds --doc-prepend-header 'Code generated by Fiat Cryptography. DO NOT EDIT.' --doc-text-before-function-name '' --doc-text-before-type-name '' --package-name p224 '' 32 '2^224 - 2^96 + 1' mul square add sub opp from_montgomery to_montgomery nonzero selectznz to_bytes from_bytes one msat sat_from_bytes divstep divstep_precomp inner_loop inner_loop_hd update_fg update_vr jumpdivstep_precomp jumpdivstep_precomp_hd
//
// curve description (via package name): p224
//
// machine_wordsize = 32 (from "32")
//
// requested operations: mul, square, add, sub, opp, from_montgomery, to_montgomery, nonzero, selectznz, to_bytes, from_bytes, one, msat, sat_from_bytes, divstep, divstep_precomp, inner_loop, inner_loop_hd, update_fg, update_vr, jumpdivstep_precomp, jumpdivstep_precomp_hd
//
// m = 0xffffffffffffffffffffffffffffffff000000000000000000000001 (from "2^224 - 2^96 + 1")
//
//
//
// NOTE: In addition to the bounds specified above each function, all
//
//   functions synthesized for this Montgomery arithmetic require the
//
//   input to be strictly less than the prime modulus (m), and also
//
//   require the input to be in the unique saturated representation.
//
//   All functions also ensure that these two properties are true of
//
//   return values.
//
//
//
// Computed values:
//
//   eval z = z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216)
//
//   twos_complement_eval z = if (z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192)) & (2^224-1) < 2^223 then (z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192)) & (2^224-1) else ((z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192)) & (2^224-1)) - 2^224
package p224

import "math/bits"

type uint1 uint64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927
type int1 int64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927

// MontgomeryDomainFieldElement is a field element in the Montgomery domain.
//
// Bounds:
//
//   [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
type MontgomeryDomainFieldElement [7]uint32

// NonMontgomeryDomainFieldElement is a field element NOT in the Montgomery domain.
//
// Bounds:
//
//   [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
type NonMontgomeryDomainFieldElement [7]uint32

// cmovznzU32 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0xffffffff]
//   arg3: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func cmovznzU32(out1 *uint32, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := (uint32(arg1) * 0xffffffff)
	x2 := ((x1 & arg3) | ((^x1) & arg2))
	*out1 = x2
}

// cmovznzU1 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1]
//   arg3: [0x0 ~> 0x1]
// Output Bounds:
//   out1: [0x0 ~> 0x1]
func cmovznzU1(out1 *uint1, arg1 uint1, arg2 uint1, arg3 uint1) {
	x1 := ((arg1 & arg3) | ((^arg1) & arg2))
	*out1 = x1
}

// Mul multiplies two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Mul(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[0]
	var x8 uint32
	var x9 uint32
	x9, x8 = bits.Mul32(x7, arg2[6])
	var x10 uint32
	var x11 uint32
	x11, x10 = bits.Mul32(x7, arg2[5])
	var x12 uint32
	var x13 uint32
	x13, x12 = bits.Mul32(x7, arg2[4])
	var x14 uint32
	var x15 uint32
	x15, x14 = bits.Mul32(x7, arg2[3])
	var x16 uint32
	var x17 uint32
	x17, x16 = bits.Mul32(x7, arg2[2])
	var x18 uint32
	var x19 uint32
	x19, x18 = bits.Mul32(x7, arg2[1])
	var x20 uint32
	var x21 uint32
	x21, x20 = bits.Mul32(x7, arg2[0])
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x21, x18, uint32(0x0))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x19, x16, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x17, x14, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x15, x12, uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, x10, uint32(uint1(x29)))
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x11, x8, uint32(uint1(x31)))
	x34 := (uint32(uint1(x33)) + x9)
	var x35 uint32
	_, x35 = bits.Mul32(x20, 0xffffffff)
	var x37 uint32
	var x38 uint32
	x38, x37 = bits.Mul32(x35, 0xffffffff)
	var x39 uint32
	var x40 uint32
	x40, x39 = bits.Mul32(x35, 0xffffffff)
	var x41 uint32
	var x42 uint32
	x42, x41 = bits.Mul32(x35, 0xffffffff)
	var x43 uint32
	var x44 uint32
	x44, x43 = bits.Mul32(x35, 0xffffffff)
	var x45 uint32
	var x46 uint32
	x45, x46 = bits.Add32(x44, x41, uint32(0x0))
	var x47 uint32
	var x48 uint32
	x47, x48 = bits.Add32(x42, x39, uint32(uint1(x46)))
	var x49 uint32
	var x50 uint32
	x49, x50 = bits.Add32(x40, x37, uint32(uint1(x48)))
	x51 := (uint32(uint1(x50)) + x38)
	var x53 uint32
	_, x53 = bits.Add32(x20, x35, uint32(0x0))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Add32(x22, uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x24, uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x26, x43, uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x28, x45, uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x30, x47, uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x32, x49, uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x34, x51, uint32(uint1(x65)))
	var x68 uint32
	var x69 uint32
	x69, x68 = bits.Mul32(x1, arg2[6])
	var x70 uint32
	var x71 uint32
	x71, x70 = bits.Mul32(x1, arg2[5])
	var x72 uint32
	var x73 uint32
	x73, x72 = bits.Mul32(x1, arg2[4])
	var x74 uint32
	var x75 uint32
	x75, x74 = bits.Mul32(x1, arg2[3])
	var x76 uint32
	var x77 uint32
	x77, x76 = bits.Mul32(x1, arg2[2])
	var x78 uint32
	var x79 uint32
	x79, x78 = bits.Mul32(x1, arg2[1])
	var x80 uint32
	var x81 uint32
	x81, x80 = bits.Mul32(x1, arg2[0])
	var x82 uint32
	var x83 uint32
	x82, x83 = bits.Add32(x81, x78, uint32(0x0))
	var x84 uint32
	var x85 uint32
	x84, x85 = bits.Add32(x79, x76, uint32(uint1(x83)))
	var x86 uint32
	var x87 uint32
	x86, x87 = bits.Add32(x77, x74, uint32(uint1(x85)))
	var x88 uint32
	var x89 uint32
	x88, x89 = bits.Add32(x75, x72, uint32(uint1(x87)))
	var x90 uint32
	var x91 uint32
	x90, x91 = bits.Add32(x73, x70, uint32(uint1(x89)))
	var x92 uint32
	var x93 uint32
	x92, x93 = bits.Add32(x71, x68, uint32(uint1(x91)))
	x94 := (uint32(uint1(x93)) + x69)
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Add32(x54, x80, uint32(0x0))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Add32(x56, x82, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Add32(x58, x84, uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Add32(x60, x86, uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x103, x104 = bits.Add32(x62, x88, uint32(uint1(x102)))
	var x105 uint32
	var x106 uint32
	x105, x106 = bits.Add32(x64, x90, uint32(uint1(x104)))
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Add32(x66, x92, uint32(uint1(x106)))
	var x109 uint32
	var x110 uint32
	x109, x110 = bits.Add32(uint32(uint1(x67)), x94, uint32(uint1(x108)))
	var x111 uint32
	_, x111 = bits.Mul32(x95, 0xffffffff)
	var x113 uint32
	var x114 uint32
	x114, x113 = bits.Mul32(x111, 0xffffffff)
	var x115 uint32
	var x116 uint32
	x116, x115 = bits.Mul32(x111, 0xffffffff)
	var x117 uint32
	var x118 uint32
	x118, x117 = bits.Mul32(x111, 0xffffffff)
	var x119 uint32
	var x120 uint32
	x120, x119 = bits.Mul32(x111, 0xffffffff)
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x120, x117, uint32(0x0))
	var x123 uint32
	var x124 uint32
	x123, x124 = bits.Add32(x118, x115, uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x116, x113, uint32(uint1(x124)))
	x127 := (uint32(uint1(x126)) + x114)
	var x129 uint32
	_, x129 = bits.Add32(x95, x111, uint32(0x0))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x97, uint32(0x0), uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x99, uint32(0x0), uint32(uint1(x131)))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x101, x119, uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x103, x121, uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x105, x123, uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32(x107, x125, uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Add32(x109, x127, uint32(uint1(x141)))
	x144 := (uint32(uint1(x143)) + uint32(uint1(x110)))
	var x145 uint32
	var x146 uint32
	x146, x145 = bits.Mul32(x2, arg2[6])
	var x147 uint32
	var x148 uint32
	x148, x147 = bits.Mul32(x2, arg2[5])
	var x149 uint32
	var x150 uint32
	x150, x149 = bits.Mul32(x2, arg2[4])
	var x151 uint32
	var x152 uint32
	x152, x151 = bits.Mul32(x2, arg2[3])
	var x153 uint32
	var x154 uint32
	x154, x153 = bits.Mul32(x2, arg2[2])
	var x155 uint32
	var x156 uint32
	x156, x155 = bits.Mul32(x2, arg2[1])
	var x157 uint32
	var x158 uint32
	x158, x157 = bits.Mul32(x2, arg2[0])
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x158, x155, uint32(0x0))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x156, x153, uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x154, x151, uint32(uint1(x162)))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Add32(x152, x149, uint32(uint1(x164)))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x150, x147, uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x148, x145, uint32(uint1(x168)))
	x171 := (uint32(uint1(x170)) + x146)
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x130, x157, uint32(0x0))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x132, x159, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x134, x161, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x136, x163, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x138, x165, uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32(x140, x167, uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x142, x169, uint32(uint1(x183)))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Add32(x144, x171, uint32(uint1(x185)))
	var x188 uint32
	_, x188 = bits.Mul32(x172, 0xffffffff)
	var x190 uint32
	var x191 uint32
	x191, x190 = bits.Mul32(x188, 0xffffffff)
	var x192 uint32
	var x193 uint32
	x193, x192 = bits.Mul32(x188, 0xffffffff)
	var x194 uint32
	var x195 uint32
	x195, x194 = bits.Mul32(x188, 0xffffffff)
	var x196 uint32
	var x197 uint32
	x197, x196 = bits.Mul32(x188, 0xffffffff)
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Add32(x197, x194, uint32(0x0))
	var x200 uint32
	var x201 uint32
	x200, x201 = bits.Add32(x195, x192, uint32(uint1(x199)))
	var x202 uint32
	var x203 uint32
	x202, x203 = bits.Add32(x193, x190, uint32(uint1(x201)))
	x204 := (uint32(uint1(x203)) + x191)
	var x206 uint32
	_, x206 = bits.Add32(x172, x188, uint32(0x0))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x174, uint32(0x0), uint32(uint1(x206)))
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x176, uint32(0x0), uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x178, x196, uint32(uint1(x210)))
	var x213 uint32
	var x214 uint32
	x213, x214 = bits.Add32(x180, x198, uint32(uint1(x212)))
	var x215 uint32
	var x216 uint32
	x215, x216 = bits.Add32(x182, x200, uint32(uint1(x214)))
	var x217 uint32
	var x218 uint32
	x217, x218 = bits.Add32(x184, x202, uint32(uint1(x216)))
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x186, x204, uint32(uint1(x218)))
	x221 := (uint32(uint1(x220)) + uint32(uint1(x187)))
	var x222 uint32
	var x223 uint32
	x223, x222 = bits.Mul32(x3, arg2[6])
	var x224 uint32
	var x225 uint32
	x225, x224 = bits.Mul32(x3, arg2[5])
	var x226 uint32
	var x227 uint32
	x227, x226 = bits.Mul32(x3, arg2[4])
	var x228 uint32
	var x229 uint32
	x229, x228 = bits.Mul32(x3, arg2[3])
	var x230 uint32
	var x231 uint32
	x231, x230 = bits.Mul32(x3, arg2[2])
	var x232 uint32
	var x233 uint32
	x233, x232 = bits.Mul32(x3, arg2[1])
	var x234 uint32
	var x235 uint32
	x235, x234 = bits.Mul32(x3, arg2[0])
	var x236 uint32
	var x237 uint32
	x236, x237 = bits.Add32(x235, x232, uint32(0x0))
	var x238 uint32
	var x239 uint32
	x238, x239 = bits.Add32(x233, x230, uint32(uint1(x237)))
	var x240 uint32
	var x241 uint32
	x240, x241 = bits.Add32(x231, x228, uint32(uint1(x239)))
	var x242 uint32
	var x243 uint32
	x242, x243 = bits.Add32(x229, x226, uint32(uint1(x241)))
	var x244 uint32
	var x245 uint32
	x244, x245 = bits.Add32(x227, x224, uint32(uint1(x243)))
	var x246 uint32
	var x247 uint32
	x246, x247 = bits.Add32(x225, x222, uint32(uint1(x245)))
	x248 := (uint32(uint1(x247)) + x223)
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x207, x234, uint32(0x0))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x209, x236, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x211, x238, uint32(uint1(x252)))
	var x255 uint32
	var x256 uint32
	x255, x256 = bits.Add32(x213, x240, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x215, x242, uint32(uint1(x256)))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x217, x244, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x219, x246, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x221, x248, uint32(uint1(x262)))
	var x265 uint32
	_, x265 = bits.Mul32(x249, 0xffffffff)
	var x267 uint32
	var x268 uint32
	x268, x267 = bits.Mul32(x265, 0xffffffff)
	var x269 uint32
	var x270 uint32
	x270, x269 = bits.Mul32(x265, 0xffffffff)
	var x271 uint32
	var x272 uint32
	x272, x271 = bits.Mul32(x265, 0xffffffff)
	var x273 uint32
	var x274 uint32
	x274, x273 = bits.Mul32(x265, 0xffffffff)
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x274, x271, uint32(0x0))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x272, x269, uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x270, x267, uint32(uint1(x278)))
	x281 := (uint32(uint1(x280)) + x268)
	var x283 uint32
	_, x283 = bits.Add32(x249, x265, uint32(0x0))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x251, uint32(0x0), uint32(uint1(x283)))
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Add32(x253, uint32(0x0), uint32(uint1(x285)))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Add32(x255, x273, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x257, x275, uint32(uint1(x289)))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x259, x277, uint32(uint1(x291)))
	var x294 uint32
	var x295 uint32
	x294, x295 = bits.Add32(x261, x279, uint32(uint1(x293)))
	var x296 uint32
	var x297 uint32
	x296, x297 = bits.Add32(x263, x281, uint32(uint1(x295)))
	x298 := (uint32(uint1(x297)) + uint32(uint1(x264)))
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x4, arg2[6])
	var x301 uint32
	var x302 uint32
	x302, x301 = bits.Mul32(x4, arg2[5])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x4, arg2[4])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x4, arg2[3])
	var x307 uint32
	var x308 uint32
	x308, x307 = bits.Mul32(x4, arg2[2])
	var x309 uint32
	var x310 uint32
	x310, x309 = bits.Mul32(x4, arg2[1])
	var x311 uint32
	var x312 uint32
	x312, x311 = bits.Mul32(x4, arg2[0])
	var x313 uint32
	var x314 uint32
	x313, x314 = bits.Add32(x312, x309, uint32(0x0))
	var x315 uint32
	var x316 uint32
	x315, x316 = bits.Add32(x310, x307, uint32(uint1(x314)))
	var x317 uint32
	var x318 uint32
	x317, x318 = bits.Add32(x308, x305, uint32(uint1(x316)))
	var x319 uint32
	var x320 uint32
	x319, x320 = bits.Add32(x306, x303, uint32(uint1(x318)))
	var x321 uint32
	var x322 uint32
	x321, x322 = bits.Add32(x304, x301, uint32(uint1(x320)))
	var x323 uint32
	var x324 uint32
	x323, x324 = bits.Add32(x302, x299, uint32(uint1(x322)))
	x325 := (uint32(uint1(x324)) + x300)
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x284, x311, uint32(0x0))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x286, x313, uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x288, x315, uint32(uint1(x329)))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x290, x317, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x292, x319, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x294, x321, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x296, x323, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x298, x325, uint32(uint1(x339)))
	var x342 uint32
	_, x342 = bits.Mul32(x326, 0xffffffff)
	var x344 uint32
	var x345 uint32
	x345, x344 = bits.Mul32(x342, 0xffffffff)
	var x346 uint32
	var x347 uint32
	x347, x346 = bits.Mul32(x342, 0xffffffff)
	var x348 uint32
	var x349 uint32
	x349, x348 = bits.Mul32(x342, 0xffffffff)
	var x350 uint32
	var x351 uint32
	x351, x350 = bits.Mul32(x342, 0xffffffff)
	var x352 uint32
	var x353 uint32
	x352, x353 = bits.Add32(x351, x348, uint32(0x0))
	var x354 uint32
	var x355 uint32
	x354, x355 = bits.Add32(x349, x346, uint32(uint1(x353)))
	var x356 uint32
	var x357 uint32
	x356, x357 = bits.Add32(x347, x344, uint32(uint1(x355)))
	x358 := (uint32(uint1(x357)) + x345)
	var x360 uint32
	_, x360 = bits.Add32(x326, x342, uint32(0x0))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x328, uint32(0x0), uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x363, x364 = bits.Add32(x330, uint32(0x0), uint32(uint1(x362)))
	var x365 uint32
	var x366 uint32
	x365, x366 = bits.Add32(x332, x350, uint32(uint1(x364)))
	var x367 uint32
	var x368 uint32
	x367, x368 = bits.Add32(x334, x352, uint32(uint1(x366)))
	var x369 uint32
	var x370 uint32
	x369, x370 = bits.Add32(x336, x354, uint32(uint1(x368)))
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x338, x356, uint32(uint1(x370)))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x340, x358, uint32(uint1(x372)))
	x375 := (uint32(uint1(x374)) + uint32(uint1(x341)))
	var x376 uint32
	var x377 uint32
	x377, x376 = bits.Mul32(x5, arg2[6])
	var x378 uint32
	var x379 uint32
	x379, x378 = bits.Mul32(x5, arg2[5])
	var x380 uint32
	var x381 uint32
	x381, x380 = bits.Mul32(x5, arg2[4])
	var x382 uint32
	var x383 uint32
	x383, x382 = bits.Mul32(x5, arg2[3])
	var x384 uint32
	var x385 uint32
	x385, x384 = bits.Mul32(x5, arg2[2])
	var x386 uint32
	var x387 uint32
	x387, x386 = bits.Mul32(x5, arg2[1])
	var x388 uint32
	var x389 uint32
	x389, x388 = bits.Mul32(x5, arg2[0])
	var x390 uint32
	var x391 uint32
	x390, x391 = bits.Add32(x389, x386, uint32(0x0))
	var x392 uint32
	var x393 uint32
	x392, x393 = bits.Add32(x387, x384, uint32(uint1(x391)))
	var x394 uint32
	var x395 uint32
	x394, x395 = bits.Add32(x385, x382, uint32(uint1(x393)))
	var x396 uint32
	var x397 uint32
	x396, x397 = bits.Add32(x383, x380, uint32(uint1(x395)))
	var x398 uint32
	var x399 uint32
	x398, x399 = bits.Add32(x381, x378, uint32(uint1(x397)))
	var x400 uint32
	var x401 uint32
	x400, x401 = bits.Add32(x379, x376, uint32(uint1(x399)))
	x402 := (uint32(uint1(x401)) + x377)
	var x403 uint32
	var x404 uint32
	x403, x404 = bits.Add32(x361, x388, uint32(0x0))
	var x405 uint32
	var x406 uint32
	x405, x406 = bits.Add32(x363, x390, uint32(uint1(x404)))
	var x407 uint32
	var x408 uint32
	x407, x408 = bits.Add32(x365, x392, uint32(uint1(x406)))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x367, x394, uint32(uint1(x408)))
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(x369, x396, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x371, x398, uint32(uint1(x412)))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x373, x400, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x375, x402, uint32(uint1(x416)))
	var x419 uint32
	_, x419 = bits.Mul32(x403, 0xffffffff)
	var x421 uint32
	var x422 uint32
	x422, x421 = bits.Mul32(x419, 0xffffffff)
	var x423 uint32
	var x424 uint32
	x424, x423 = bits.Mul32(x419, 0xffffffff)
	var x425 uint32
	var x426 uint32
	x426, x425 = bits.Mul32(x419, 0xffffffff)
	var x427 uint32
	var x428 uint32
	x428, x427 = bits.Mul32(x419, 0xffffffff)
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x428, x425, uint32(0x0))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x426, x423, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x424, x421, uint32(uint1(x432)))
	x435 := (uint32(uint1(x434)) + x422)
	var x437 uint32
	_, x437 = bits.Add32(x403, x419, uint32(0x0))
	var x438 uint32
	var x439 uint32
	x438, x439 = bits.Add32(x405, uint32(0x0), uint32(uint1(x437)))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x407, uint32(0x0), uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x409, x427, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x444, x445 = bits.Add32(x411, x429, uint32(uint1(x443)))
	var x446 uint32
	var x447 uint32
	x446, x447 = bits.Add32(x413, x431, uint32(uint1(x445)))
	var x448 uint32
	var x449 uint32
	x448, x449 = bits.Add32(x415, x433, uint32(uint1(x447)))
	var x450 uint32
	var x451 uint32
	x450, x451 = bits.Add32(x417, x435, uint32(uint1(x449)))
	x452 := (uint32(uint1(x451)) + uint32(uint1(x418)))
	var x453 uint32
	var x454 uint32
	x454, x453 = bits.Mul32(x6, arg2[6])
	var x455 uint32
	var x456 uint32
	x456, x455 = bits.Mul32(x6, arg2[5])
	var x457 uint32
	var x458 uint32
	x458, x457 = bits.Mul32(x6, arg2[4])
	var x459 uint32
	var x460 uint32
	x460, x459 = bits.Mul32(x6, arg2[3])
	var x461 uint32
	var x462 uint32
	x462, x461 = bits.Mul32(x6, arg2[2])
	var x463 uint32
	var x464 uint32
	x464, x463 = bits.Mul32(x6, arg2[1])
	var x465 uint32
	var x466 uint32
	x466, x465 = bits.Mul32(x6, arg2[0])
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x466, x463, uint32(0x0))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x464, x461, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x462, x459, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x460, x457, uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x458, x455, uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x456, x453, uint32(uint1(x476)))
	x479 := (uint32(uint1(x478)) + x454)
	var x480 uint32
	var x481 uint32
	x480, x481 = bits.Add32(x438, x465, uint32(0x0))
	var x482 uint32
	var x483 uint32
	x482, x483 = bits.Add32(x440, x467, uint32(uint1(x481)))
	var x484 uint32
	var x485 uint32
	x484, x485 = bits.Add32(x442, x469, uint32(uint1(x483)))
	var x486 uint32
	var x487 uint32
	x486, x487 = bits.Add32(x444, x471, uint32(uint1(x485)))
	var x488 uint32
	var x489 uint32
	x488, x489 = bits.Add32(x446, x473, uint32(uint1(x487)))
	var x490 uint32
	var x491 uint32
	x490, x491 = bits.Add32(x448, x475, uint32(uint1(x489)))
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x450, x477, uint32(uint1(x491)))
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x452, x479, uint32(uint1(x493)))
	var x496 uint32
	_, x496 = bits.Mul32(x480, 0xffffffff)
	var x498 uint32
	var x499 uint32
	x499, x498 = bits.Mul32(x496, 0xffffffff)
	var x500 uint32
	var x501 uint32
	x501, x500 = bits.Mul32(x496, 0xffffffff)
	var x502 uint32
	var x503 uint32
	x503, x502 = bits.Mul32(x496, 0xffffffff)
	var x504 uint32
	var x505 uint32
	x505, x504 = bits.Mul32(x496, 0xffffffff)
	var x506 uint32
	var x507 uint32
	x506, x507 = bits.Add32(x505, x502, uint32(0x0))
	var x508 uint32
	var x509 uint32
	x508, x509 = bits.Add32(x503, x500, uint32(uint1(x507)))
	var x510 uint32
	var x511 uint32
	x510, x511 = bits.Add32(x501, x498, uint32(uint1(x509)))
	x512 := (uint32(uint1(x511)) + x499)
	var x514 uint32
	_, x514 = bits.Add32(x480, x496, uint32(0x0))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x482, uint32(0x0), uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x484, uint32(0x0), uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x486, x504, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x488, x506, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x490, x508, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x492, x510, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x494, x512, uint32(uint1(x526)))
	x529 := (uint32(uint1(x528)) + uint32(uint1(x495)))
	var x530 uint32
	var x531 uint32
	x530, x531 = bits.Sub32(x515, uint32(0x1), uint32(0x0))
	var x532 uint32
	var x533 uint32
	x532, x533 = bits.Sub32(x517, uint32(0x0), uint32(uint1(x531)))
	var x534 uint32
	var x535 uint32
	x534, x535 = bits.Sub32(x519, uint32(0x0), uint32(uint1(x533)))
	var x536 uint32
	var x537 uint32
	x536, x537 = bits.Sub32(x521, 0xffffffff, uint32(uint1(x535)))
	var x538 uint32
	var x539 uint32
	x538, x539 = bits.Sub32(x523, 0xffffffff, uint32(uint1(x537)))
	var x540 uint32
	var x541 uint32
	x540, x541 = bits.Sub32(x525, 0xffffffff, uint32(uint1(x539)))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Sub32(x527, 0xffffffff, uint32(uint1(x541)))
	var x545 uint32
	_, x545 = bits.Sub32(x529, uint32(0x0), uint32(uint1(x543)))
	var x546 uint32
	cmovznzU32(&x546, uint1(x545), x530, x515)
	var x547 uint32
	cmovznzU32(&x547, uint1(x545), x532, x517)
	var x548 uint32
	cmovznzU32(&x548, uint1(x545), x534, x519)
	var x549 uint32
	cmovznzU32(&x549, uint1(x545), x536, x521)
	var x550 uint32
	cmovznzU32(&x550, uint1(x545), x538, x523)
	var x551 uint32
	cmovznzU32(&x551, uint1(x545), x540, x525)
	var x552 uint32
	cmovznzU32(&x552, uint1(x545), x542, x527)
	out1[0] = x546
	out1[1] = x547
	out1[2] = x548
	out1[3] = x549
	out1[4] = x550
	out1[5] = x551
	out1[6] = x552
}

// Square squares a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
//   0 ≤ eval out1 < m
//
func Square(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[0]
	var x8 uint32
	var x9 uint32
	x9, x8 = bits.Mul32(x7, arg1[6])
	var x10 uint32
	var x11 uint32
	x11, x10 = bits.Mul32(x7, arg1[5])
	var x12 uint32
	var x13 uint32
	x13, x12 = bits.Mul32(x7, arg1[4])
	var x14 uint32
	var x15 uint32
	x15, x14 = bits.Mul32(x7, arg1[3])
	var x16 uint32
	var x17 uint32
	x17, x16 = bits.Mul32(x7, arg1[2])
	var x18 uint32
	var x19 uint32
	x19, x18 = bits.Mul32(x7, arg1[1])
	var x20 uint32
	var x21 uint32
	x21, x20 = bits.Mul32(x7, arg1[0])
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x21, x18, uint32(0x0))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x19, x16, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x17, x14, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x15, x12, uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, x10, uint32(uint1(x29)))
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x11, x8, uint32(uint1(x31)))
	x34 := (uint32(uint1(x33)) + x9)
	var x35 uint32
	_, x35 = bits.Mul32(x20, 0xffffffff)
	var x37 uint32
	var x38 uint32
	x38, x37 = bits.Mul32(x35, 0xffffffff)
	var x39 uint32
	var x40 uint32
	x40, x39 = bits.Mul32(x35, 0xffffffff)
	var x41 uint32
	var x42 uint32
	x42, x41 = bits.Mul32(x35, 0xffffffff)
	var x43 uint32
	var x44 uint32
	x44, x43 = bits.Mul32(x35, 0xffffffff)
	var x45 uint32
	var x46 uint32
	x45, x46 = bits.Add32(x44, x41, uint32(0x0))
	var x47 uint32
	var x48 uint32
	x47, x48 = bits.Add32(x42, x39, uint32(uint1(x46)))
	var x49 uint32
	var x50 uint32
	x49, x50 = bits.Add32(x40, x37, uint32(uint1(x48)))
	x51 := (uint32(uint1(x50)) + x38)
	var x53 uint32
	_, x53 = bits.Add32(x20, x35, uint32(0x0))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Add32(x22, uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x24, uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x26, x43, uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x28, x45, uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x30, x47, uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x32, x49, uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x34, x51, uint32(uint1(x65)))
	var x68 uint32
	var x69 uint32
	x69, x68 = bits.Mul32(x1, arg1[6])
	var x70 uint32
	var x71 uint32
	x71, x70 = bits.Mul32(x1, arg1[5])
	var x72 uint32
	var x73 uint32
	x73, x72 = bits.Mul32(x1, arg1[4])
	var x74 uint32
	var x75 uint32
	x75, x74 = bits.Mul32(x1, arg1[3])
	var x76 uint32
	var x77 uint32
	x77, x76 = bits.Mul32(x1, arg1[2])
	var x78 uint32
	var x79 uint32
	x79, x78 = bits.Mul32(x1, arg1[1])
	var x80 uint32
	var x81 uint32
	x81, x80 = bits.Mul32(x1, arg1[0])
	var x82 uint32
	var x83 uint32
	x82, x83 = bits.Add32(x81, x78, uint32(0x0))
	var x84 uint32
	var x85 uint32
	x84, x85 = bits.Add32(x79, x76, uint32(uint1(x83)))
	var x86 uint32
	var x87 uint32
	x86, x87 = bits.Add32(x77, x74, uint32(uint1(x85)))
	var x88 uint32
	var x89 uint32
	x88, x89 = bits.Add32(x75, x72, uint32(uint1(x87)))
	var x90 uint32
	var x91 uint32
	x90, x91 = bits.Add32(x73, x70, uint32(uint1(x89)))
	var x92 uint32
	var x93 uint32
	x92, x93 = bits.Add32(x71, x68, uint32(uint1(x91)))
	x94 := (uint32(uint1(x93)) + x69)
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Add32(x54, x80, uint32(0x0))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Add32(x56, x82, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Add32(x58, x84, uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Add32(x60, x86, uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x103, x104 = bits.Add32(x62, x88, uint32(uint1(x102)))
	var x105 uint32
	var x106 uint32
	x105, x106 = bits.Add32(x64, x90, uint32(uint1(x104)))
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Add32(x66, x92, uint32(uint1(x106)))
	var x109 uint32
	var x110 uint32
	x109, x110 = bits.Add32(uint32(uint1(x67)), x94, uint32(uint1(x108)))
	var x111 uint32
	_, x111 = bits.Mul32(x95, 0xffffffff)
	var x113 uint32
	var x114 uint32
	x114, x113 = bits.Mul32(x111, 0xffffffff)
	var x115 uint32
	var x116 uint32
	x116, x115 = bits.Mul32(x111, 0xffffffff)
	var x117 uint32
	var x118 uint32
	x118, x117 = bits.Mul32(x111, 0xffffffff)
	var x119 uint32
	var x120 uint32
	x120, x119 = bits.Mul32(x111, 0xffffffff)
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x120, x117, uint32(0x0))
	var x123 uint32
	var x124 uint32
	x123, x124 = bits.Add32(x118, x115, uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x116, x113, uint32(uint1(x124)))
	x127 := (uint32(uint1(x126)) + x114)
	var x129 uint32
	_, x129 = bits.Add32(x95, x111, uint32(0x0))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x97, uint32(0x0), uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x99, uint32(0x0), uint32(uint1(x131)))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x101, x119, uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x103, x121, uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x105, x123, uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32(x107, x125, uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Add32(x109, x127, uint32(uint1(x141)))
	x144 := (uint32(uint1(x143)) + uint32(uint1(x110)))
	var x145 uint32
	var x146 uint32
	x146, x145 = bits.Mul32(x2, arg1[6])
	var x147 uint32
	var x148 uint32
	x148, x147 = bits.Mul32(x2, arg1[5])
	var x149 uint32
	var x150 uint32
	x150, x149 = bits.Mul32(x2, arg1[4])
	var x151 uint32
	var x152 uint32
	x152, x151 = bits.Mul32(x2, arg1[3])
	var x153 uint32
	var x154 uint32
	x154, x153 = bits.Mul32(x2, arg1[2])
	var x155 uint32
	var x156 uint32
	x156, x155 = bits.Mul32(x2, arg1[1])
	var x157 uint32
	var x158 uint32
	x158, x157 = bits.Mul32(x2, arg1[0])
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x158, x155, uint32(0x0))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x156, x153, uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x154, x151, uint32(uint1(x162)))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Add32(x152, x149, uint32(uint1(x164)))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x150, x147, uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x148, x145, uint32(uint1(x168)))
	x171 := (uint32(uint1(x170)) + x146)
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x130, x157, uint32(0x0))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x132, x159, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x134, x161, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x136, x163, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x138, x165, uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32(x140, x167, uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x142, x169, uint32(uint1(x183)))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Add32(x144, x171, uint32(uint1(x185)))
	var x188 uint32
	_, x188 = bits.Mul32(x172, 0xffffffff)
	var x190 uint32
	var x191 uint32
	x191, x190 = bits.Mul32(x188, 0xffffffff)
	var x192 uint32
	var x193 uint32
	x193, x192 = bits.Mul32(x188, 0xffffffff)
	var x194 uint32
	var x195 uint32
	x195, x194 = bits.Mul32(x188, 0xffffffff)
	var x196 uint32
	var x197 uint32
	x197, x196 = bits.Mul32(x188, 0xffffffff)
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Add32(x197, x194, uint32(0x0))
	var x200 uint32
	var x201 uint32
	x200, x201 = bits.Add32(x195, x192, uint32(uint1(x199)))
	var x202 uint32
	var x203 uint32
	x202, x203 = bits.Add32(x193, x190, uint32(uint1(x201)))
	x204 := (uint32(uint1(x203)) + x191)
	var x206 uint32
	_, x206 = bits.Add32(x172, x188, uint32(0x0))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x174, uint32(0x0), uint32(uint1(x206)))
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x176, uint32(0x0), uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x178, x196, uint32(uint1(x210)))
	var x213 uint32
	var x214 uint32
	x213, x214 = bits.Add32(x180, x198, uint32(uint1(x212)))
	var x215 uint32
	var x216 uint32
	x215, x216 = bits.Add32(x182, x200, uint32(uint1(x214)))
	var x217 uint32
	var x218 uint32
	x217, x218 = bits.Add32(x184, x202, uint32(uint1(x216)))
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x186, x204, uint32(uint1(x218)))
	x221 := (uint32(uint1(x220)) + uint32(uint1(x187)))
	var x222 uint32
	var x223 uint32
	x223, x222 = bits.Mul32(x3, arg1[6])
	var x224 uint32
	var x225 uint32
	x225, x224 = bits.Mul32(x3, arg1[5])
	var x226 uint32
	var x227 uint32
	x227, x226 = bits.Mul32(x3, arg1[4])
	var x228 uint32
	var x229 uint32
	x229, x228 = bits.Mul32(x3, arg1[3])
	var x230 uint32
	var x231 uint32
	x231, x230 = bits.Mul32(x3, arg1[2])
	var x232 uint32
	var x233 uint32
	x233, x232 = bits.Mul32(x3, arg1[1])
	var x234 uint32
	var x235 uint32
	x235, x234 = bits.Mul32(x3, arg1[0])
	var x236 uint32
	var x237 uint32
	x236, x237 = bits.Add32(x235, x232, uint32(0x0))
	var x238 uint32
	var x239 uint32
	x238, x239 = bits.Add32(x233, x230, uint32(uint1(x237)))
	var x240 uint32
	var x241 uint32
	x240, x241 = bits.Add32(x231, x228, uint32(uint1(x239)))
	var x242 uint32
	var x243 uint32
	x242, x243 = bits.Add32(x229, x226, uint32(uint1(x241)))
	var x244 uint32
	var x245 uint32
	x244, x245 = bits.Add32(x227, x224, uint32(uint1(x243)))
	var x246 uint32
	var x247 uint32
	x246, x247 = bits.Add32(x225, x222, uint32(uint1(x245)))
	x248 := (uint32(uint1(x247)) + x223)
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x207, x234, uint32(0x0))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x209, x236, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x211, x238, uint32(uint1(x252)))
	var x255 uint32
	var x256 uint32
	x255, x256 = bits.Add32(x213, x240, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x215, x242, uint32(uint1(x256)))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x217, x244, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x219, x246, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x221, x248, uint32(uint1(x262)))
	var x265 uint32
	_, x265 = bits.Mul32(x249, 0xffffffff)
	var x267 uint32
	var x268 uint32
	x268, x267 = bits.Mul32(x265, 0xffffffff)
	var x269 uint32
	var x270 uint32
	x270, x269 = bits.Mul32(x265, 0xffffffff)
	var x271 uint32
	var x272 uint32
	x272, x271 = bits.Mul32(x265, 0xffffffff)
	var x273 uint32
	var x274 uint32
	x274, x273 = bits.Mul32(x265, 0xffffffff)
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x274, x271, uint32(0x0))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x272, x269, uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x270, x267, uint32(uint1(x278)))
	x281 := (uint32(uint1(x280)) + x268)
	var x283 uint32
	_, x283 = bits.Add32(x249, x265, uint32(0x0))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x251, uint32(0x0), uint32(uint1(x283)))
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Add32(x253, uint32(0x0), uint32(uint1(x285)))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Add32(x255, x273, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x257, x275, uint32(uint1(x289)))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x259, x277, uint32(uint1(x291)))
	var x294 uint32
	var x295 uint32
	x294, x295 = bits.Add32(x261, x279, uint32(uint1(x293)))
	var x296 uint32
	var x297 uint32
	x296, x297 = bits.Add32(x263, x281, uint32(uint1(x295)))
	x298 := (uint32(uint1(x297)) + uint32(uint1(x264)))
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x4, arg1[6])
	var x301 uint32
	var x302 uint32
	x302, x301 = bits.Mul32(x4, arg1[5])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x4, arg1[4])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x4, arg1[3])
	var x307 uint32
	var x308 uint32
	x308, x307 = bits.Mul32(x4, arg1[2])
	var x309 uint32
	var x310 uint32
	x310, x309 = bits.Mul32(x4, arg1[1])
	var x311 uint32
	var x312 uint32
	x312, x311 = bits.Mul32(x4, arg1[0])
	var x313 uint32
	var x314 uint32
	x313, x314 = bits.Add32(x312, x309, uint32(0x0))
	var x315 uint32
	var x316 uint32
	x315, x316 = bits.Add32(x310, x307, uint32(uint1(x314)))
	var x317 uint32
	var x318 uint32
	x317, x318 = bits.Add32(x308, x305, uint32(uint1(x316)))
	var x319 uint32
	var x320 uint32
	x319, x320 = bits.Add32(x306, x303, uint32(uint1(x318)))
	var x321 uint32
	var x322 uint32
	x321, x322 = bits.Add32(x304, x301, uint32(uint1(x320)))
	var x323 uint32
	var x324 uint32
	x323, x324 = bits.Add32(x302, x299, uint32(uint1(x322)))
	x325 := (uint32(uint1(x324)) + x300)
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x284, x311, uint32(0x0))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x286, x313, uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x288, x315, uint32(uint1(x329)))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x290, x317, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x292, x319, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x294, x321, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x296, x323, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x298, x325, uint32(uint1(x339)))
	var x342 uint32
	_, x342 = bits.Mul32(x326, 0xffffffff)
	var x344 uint32
	var x345 uint32
	x345, x344 = bits.Mul32(x342, 0xffffffff)
	var x346 uint32
	var x347 uint32
	x347, x346 = bits.Mul32(x342, 0xffffffff)
	var x348 uint32
	var x349 uint32
	x349, x348 = bits.Mul32(x342, 0xffffffff)
	var x350 uint32
	var x351 uint32
	x351, x350 = bits.Mul32(x342, 0xffffffff)
	var x352 uint32
	var x353 uint32
	x352, x353 = bits.Add32(x351, x348, uint32(0x0))
	var x354 uint32
	var x355 uint32
	x354, x355 = bits.Add32(x349, x346, uint32(uint1(x353)))
	var x356 uint32
	var x357 uint32
	x356, x357 = bits.Add32(x347, x344, uint32(uint1(x355)))
	x358 := (uint32(uint1(x357)) + x345)
	var x360 uint32
	_, x360 = bits.Add32(x326, x342, uint32(0x0))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x328, uint32(0x0), uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x363, x364 = bits.Add32(x330, uint32(0x0), uint32(uint1(x362)))
	var x365 uint32
	var x366 uint32
	x365, x366 = bits.Add32(x332, x350, uint32(uint1(x364)))
	var x367 uint32
	var x368 uint32
	x367, x368 = bits.Add32(x334, x352, uint32(uint1(x366)))
	var x369 uint32
	var x370 uint32
	x369, x370 = bits.Add32(x336, x354, uint32(uint1(x368)))
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x338, x356, uint32(uint1(x370)))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x340, x358, uint32(uint1(x372)))
	x375 := (uint32(uint1(x374)) + uint32(uint1(x341)))
	var x376 uint32
	var x377 uint32
	x377, x376 = bits.Mul32(x5, arg1[6])
	var x378 uint32
	var x379 uint32
	x379, x378 = bits.Mul32(x5, arg1[5])
	var x380 uint32
	var x381 uint32
	x381, x380 = bits.Mul32(x5, arg1[4])
	var x382 uint32
	var x383 uint32
	x383, x382 = bits.Mul32(x5, arg1[3])
	var x384 uint32
	var x385 uint32
	x385, x384 = bits.Mul32(x5, arg1[2])
	var x386 uint32
	var x387 uint32
	x387, x386 = bits.Mul32(x5, arg1[1])
	var x388 uint32
	var x389 uint32
	x389, x388 = bits.Mul32(x5, arg1[0])
	var x390 uint32
	var x391 uint32
	x390, x391 = bits.Add32(x389, x386, uint32(0x0))
	var x392 uint32
	var x393 uint32
	x392, x393 = bits.Add32(x387, x384, uint32(uint1(x391)))
	var x394 uint32
	var x395 uint32
	x394, x395 = bits.Add32(x385, x382, uint32(uint1(x393)))
	var x396 uint32
	var x397 uint32
	x396, x397 = bits.Add32(x383, x380, uint32(uint1(x395)))
	var x398 uint32
	var x399 uint32
	x398, x399 = bits.Add32(x381, x378, uint32(uint1(x397)))
	var x400 uint32
	var x401 uint32
	x400, x401 = bits.Add32(x379, x376, uint32(uint1(x399)))
	x402 := (uint32(uint1(x401)) + x377)
	var x403 uint32
	var x404 uint32
	x403, x404 = bits.Add32(x361, x388, uint32(0x0))
	var x405 uint32
	var x406 uint32
	x405, x406 = bits.Add32(x363, x390, uint32(uint1(x404)))
	var x407 uint32
	var x408 uint32
	x407, x408 = bits.Add32(x365, x392, uint32(uint1(x406)))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x367, x394, uint32(uint1(x408)))
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(x369, x396, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x371, x398, uint32(uint1(x412)))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x373, x400, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x375, x402, uint32(uint1(x416)))
	var x419 uint32
	_, x419 = bits.Mul32(x403, 0xffffffff)
	var x421 uint32
	var x422 uint32
	x422, x421 = bits.Mul32(x419, 0xffffffff)
	var x423 uint32
	var x424 uint32
	x424, x423 = bits.Mul32(x419, 0xffffffff)
	var x425 uint32
	var x426 uint32
	x426, x425 = bits.Mul32(x419, 0xffffffff)
	var x427 uint32
	var x428 uint32
	x428, x427 = bits.Mul32(x419, 0xffffffff)
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x428, x425, uint32(0x0))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x426, x423, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x424, x421, uint32(uint1(x432)))
	x435 := (uint32(uint1(x434)) + x422)
	var x437 uint32
	_, x437 = bits.Add32(x403, x419, uint32(0x0))
	var x438 uint32
	var x439 uint32
	x438, x439 = bits.Add32(x405, uint32(0x0), uint32(uint1(x437)))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x407, uint32(0x0), uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x409, x427, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x444, x445 = bits.Add32(x411, x429, uint32(uint1(x443)))
	var x446 uint32
	var x447 uint32
	x446, x447 = bits.Add32(x413, x431, uint32(uint1(x445)))
	var x448 uint32
	var x449 uint32
	x448, x449 = bits.Add32(x415, x433, uint32(uint1(x447)))
	var x450 uint32
	var x451 uint32
	x450, x451 = bits.Add32(x417, x435, uint32(uint1(x449)))
	x452 := (uint32(uint1(x451)) + uint32(uint1(x418)))
	var x453 uint32
	var x454 uint32
	x454, x453 = bits.Mul32(x6, arg1[6])
	var x455 uint32
	var x456 uint32
	x456, x455 = bits.Mul32(x6, arg1[5])
	var x457 uint32
	var x458 uint32
	x458, x457 = bits.Mul32(x6, arg1[4])
	var x459 uint32
	var x460 uint32
	x460, x459 = bits.Mul32(x6, arg1[3])
	var x461 uint32
	var x462 uint32
	x462, x461 = bits.Mul32(x6, arg1[2])
	var x463 uint32
	var x464 uint32
	x464, x463 = bits.Mul32(x6, arg1[1])
	var x465 uint32
	var x466 uint32
	x466, x465 = bits.Mul32(x6, arg1[0])
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x466, x463, uint32(0x0))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x464, x461, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x462, x459, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x460, x457, uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x458, x455, uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x456, x453, uint32(uint1(x476)))
	x479 := (uint32(uint1(x478)) + x454)
	var x480 uint32
	var x481 uint32
	x480, x481 = bits.Add32(x438, x465, uint32(0x0))
	var x482 uint32
	var x483 uint32
	x482, x483 = bits.Add32(x440, x467, uint32(uint1(x481)))
	var x484 uint32
	var x485 uint32
	x484, x485 = bits.Add32(x442, x469, uint32(uint1(x483)))
	var x486 uint32
	var x487 uint32
	x486, x487 = bits.Add32(x444, x471, uint32(uint1(x485)))
	var x488 uint32
	var x489 uint32
	x488, x489 = bits.Add32(x446, x473, uint32(uint1(x487)))
	var x490 uint32
	var x491 uint32
	x490, x491 = bits.Add32(x448, x475, uint32(uint1(x489)))
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x450, x477, uint32(uint1(x491)))
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x452, x479, uint32(uint1(x493)))
	var x496 uint32
	_, x496 = bits.Mul32(x480, 0xffffffff)
	var x498 uint32
	var x499 uint32
	x499, x498 = bits.Mul32(x496, 0xffffffff)
	var x500 uint32
	var x501 uint32
	x501, x500 = bits.Mul32(x496, 0xffffffff)
	var x502 uint32
	var x503 uint32
	x503, x502 = bits.Mul32(x496, 0xffffffff)
	var x504 uint32
	var x505 uint32
	x505, x504 = bits.Mul32(x496, 0xffffffff)
	var x506 uint32
	var x507 uint32
	x506, x507 = bits.Add32(x505, x502, uint32(0x0))
	var x508 uint32
	var x509 uint32
	x508, x509 = bits.Add32(x503, x500, uint32(uint1(x507)))
	var x510 uint32
	var x511 uint32
	x510, x511 = bits.Add32(x501, x498, uint32(uint1(x509)))
	x512 := (uint32(uint1(x511)) + x499)
	var x514 uint32
	_, x514 = bits.Add32(x480, x496, uint32(0x0))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x482, uint32(0x0), uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x484, uint32(0x0), uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x486, x504, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x488, x506, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x490, x508, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x492, x510, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x494, x512, uint32(uint1(x526)))
	x529 := (uint32(uint1(x528)) + uint32(uint1(x495)))
	var x530 uint32
	var x531 uint32
	x530, x531 = bits.Sub32(x515, uint32(0x1), uint32(0x0))
	var x532 uint32
	var x533 uint32
	x532, x533 = bits.Sub32(x517, uint32(0x0), uint32(uint1(x531)))
	var x534 uint32
	var x535 uint32
	x534, x535 = bits.Sub32(x519, uint32(0x0), uint32(uint1(x533)))
	var x536 uint32
	var x537 uint32
	x536, x537 = bits.Sub32(x521, 0xffffffff, uint32(uint1(x535)))
	var x538 uint32
	var x539 uint32
	x538, x539 = bits.Sub32(x523, 0xffffffff, uint32(uint1(x537)))
	var x540 uint32
	var x541 uint32
	x540, x541 = bits.Sub32(x525, 0xffffffff, uint32(uint1(x539)))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Sub32(x527, 0xffffffff, uint32(uint1(x541)))
	var x545 uint32
	_, x545 = bits.Sub32(x529, uint32(0x0), uint32(uint1(x543)))
	var x546 uint32
	cmovznzU32(&x546, uint1(x545), x530, x515)
	var x547 uint32
	cmovznzU32(&x547, uint1(x545), x532, x517)
	var x548 uint32
	cmovznzU32(&x548, uint1(x545), x534, x519)
	var x549 uint32
	cmovznzU32(&x549, uint1(x545), x536, x521)
	var x550 uint32
	cmovznzU32(&x550, uint1(x545), x538, x523)
	var x551 uint32
	cmovznzU32(&x551, uint1(x545), x540, x525)
	var x552 uint32
	cmovznzU32(&x552, uint1(x545), x542, x527)
	out1[0] = x546
	out1[1] = x547
	out1[2] = x548
	out1[3] = x549
	out1[4] = x550
	out1[5] = x551
	out1[6] = x552
}

// Add adds two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Add(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Add32(arg1[0], arg2[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Add32(arg1[1], arg2[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Add32(arg1[2], arg2[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Add32(arg1[3], arg2[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Add32(arg1[4], arg2[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Add32(arg1[5], arg2[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Add32(arg1[6], arg2[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(x1, uint32(0x1), uint32(0x0))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Sub32(x3, uint32(0x0), uint32(uint1(x16)))
	var x19 uint32
	var x20 uint32
	x19, x20 = bits.Sub32(x5, uint32(0x0), uint32(uint1(x18)))
	var x21 uint32
	var x22 uint32
	x21, x22 = bits.Sub32(x7, 0xffffffff, uint32(uint1(x20)))
	var x23 uint32
	var x24 uint32
	x23, x24 = bits.Sub32(x9, 0xffffffff, uint32(uint1(x22)))
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Sub32(x11, 0xffffffff, uint32(uint1(x24)))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Sub32(x13, 0xffffffff, uint32(uint1(x26)))
	var x30 uint32
	_, x30 = bits.Sub32(uint32(uint1(x14)), uint32(0x0), uint32(uint1(x28)))
	var x31 uint32
	cmovznzU32(&x31, uint1(x30), x15, x1)
	var x32 uint32
	cmovznzU32(&x32, uint1(x30), x17, x3)
	var x33 uint32
	cmovznzU32(&x33, uint1(x30), x19, x5)
	var x34 uint32
	cmovznzU32(&x34, uint1(x30), x21, x7)
	var x35 uint32
	cmovznzU32(&x35, uint1(x30), x23, x9)
	var x36 uint32
	cmovznzU32(&x36, uint1(x30), x25, x11)
	var x37 uint32
	cmovznzU32(&x37, uint1(x30), x27, x13)
	out1[0] = x31
	out1[1] = x32
	out1[2] = x33
	out1[3] = x34
	out1[4] = x35
	out1[5] = x36
	out1[6] = x37
}

// Sub subtracts two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Sub(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Sub32(arg1[0], arg2[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(arg1[1], arg2[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(arg1[2], arg2[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(arg1[3], arg2[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(arg1[4], arg2[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(arg1[5], arg2[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(arg1[6], arg2[6], uint32(uint1(x12)))
	var x15 uint32
	cmovznzU32(&x15, uint1(x14), uint32(0x0), 0xffffffff)
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(x1, uint32((uint1(x15) & 0x1)), uint32(0x0))
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x3, uint32(0x0), uint32(uint1(x17)))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x5, uint32(0x0), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x7, x15, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x9, x15, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x11, x15, uint32(uint1(x25)))
	var x28 uint32
	x28, _ = bits.Add32(x13, x15, uint32(uint1(x27)))
	out1[0] = x16
	out1[1] = x18
	out1[2] = x20
	out1[3] = x22
	out1[4] = x24
	out1[5] = x26
	out1[6] = x28
}

// Opp negates a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
//   0 ≤ eval out1 < m
//
func Opp(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Sub32(uint32(0x0), arg1[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(uint32(0x0), arg1[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(uint32(0x0), arg1[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(uint32(0x0), arg1[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(uint32(0x0), arg1[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(uint32(0x0), arg1[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(uint32(0x0), arg1[6], uint32(uint1(x12)))
	var x15 uint32
	cmovznzU32(&x15, uint1(x14), uint32(0x0), 0xffffffff)
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(x1, uint32((uint1(x15) & 0x1)), uint32(0x0))
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x3, uint32(0x0), uint32(uint1(x17)))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x5, uint32(0x0), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x7, x15, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x9, x15, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x11, x15, uint32(uint1(x25)))
	var x28 uint32
	x28, _ = bits.Add32(x13, x15, uint32(uint1(x27)))
	out1[0] = x16
	out1[1] = x18
	out1[2] = x20
	out1[3] = x22
	out1[4] = x24
	out1[5] = x26
	out1[6] = x28
}

// FromMontgomery translates a field element out of the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval out1 mod m = (eval arg1 * ((2^32)⁻¹ mod m)^7) mod m
//   0 ≤ eval out1 < m
//
func FromMontgomery(out1 *NonMontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	x1 := arg1[0]
	var x2 uint32
	_, x2 = bits.Mul32(x1, 0xffffffff)
	var x4 uint32
	var x5 uint32
	x5, x4 = bits.Mul32(x2, 0xffffffff)
	var x6 uint32
	var x7 uint32
	x7, x6 = bits.Mul32(x2, 0xffffffff)
	var x8 uint32
	var x9 uint32
	x9, x8 = bits.Mul32(x2, 0xffffffff)
	var x10 uint32
	var x11 uint32
	x11, x10 = bits.Mul32(x2, 0xffffffff)
	var x12 uint32
	var x13 uint32
	x12, x13 = bits.Add32(x11, x8, uint32(0x0))
	var x14 uint32
	var x15 uint32
	x14, x15 = bits.Add32(x9, x6, uint32(uint1(x13)))
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(x7, x4, uint32(uint1(x15)))
	var x19 uint32
	_, x19 = bits.Add32(x1, x2, uint32(0x0))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(uint32(uint1(x19)), arg1[1], uint32(0x0))
	var x22 uint32
	_, x22 = bits.Mul32(x20, 0xffffffff)
	var x24 uint32
	var x25 uint32
	x25, x24 = bits.Mul32(x22, 0xffffffff)
	var x26 uint32
	var x27 uint32
	x27, x26 = bits.Mul32(x22, 0xffffffff)
	var x28 uint32
	var x29 uint32
	x29, x28 = bits.Mul32(x22, 0xffffffff)
	var x30 uint32
	var x31 uint32
	x31, x30 = bits.Mul32(x22, 0xffffffff)
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x31, x28, uint32(0x0))
	var x34 uint32
	var x35 uint32
	x34, x35 = bits.Add32(x29, x26, uint32(uint1(x33)))
	var x36 uint32
	var x37 uint32
	x36, x37 = bits.Add32(x27, x24, uint32(uint1(x35)))
	var x38 uint32
	var x39 uint32
	x38, x39 = bits.Add32(x12, x30, uint32(0x0))
	var x40 uint32
	var x41 uint32
	x40, x41 = bits.Add32(x14, x32, uint32(uint1(x39)))
	var x42 uint32
	var x43 uint32
	x42, x43 = bits.Add32(x16, x34, uint32(uint1(x41)))
	var x44 uint32
	var x45 uint32
	x44, x45 = bits.Add32((uint32(uint1(x17)) + x5), x36, uint32(uint1(x43)))
	var x46 uint32
	var x47 uint32
	x46, x47 = bits.Add32(uint32(0x0), (uint32(uint1(x37)) + x25), uint32(uint1(x45)))
	var x49 uint32
	_, x49 = bits.Add32(x20, x22, uint32(0x0))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32((uint32(uint1(x49)) + uint32(uint1(x21))), arg1[2], uint32(0x0))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Add32(x10, uint32(0x0), uint32(uint1(x51)))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Add32(x38, uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x40, uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x42, uint32(0x0), uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x44, uint32(0x0), uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x46, uint32(0x0), uint32(uint1(x61)))
	var x64 uint32
	_, x64 = bits.Mul32(x50, 0xffffffff)
	var x66 uint32
	var x67 uint32
	x67, x66 = bits.Mul32(x64, 0xffffffff)
	var x68 uint32
	var x69 uint32
	x69, x68 = bits.Mul32(x64, 0xffffffff)
	var x70 uint32
	var x71 uint32
	x71, x70 = bits.Mul32(x64, 0xffffffff)
	var x72 uint32
	var x73 uint32
	x73, x72 = bits.Mul32(x64, 0xffffffff)
	var x74 uint32
	var x75 uint32
	x74, x75 = bits.Add32(x73, x70, uint32(0x0))
	var x76 uint32
	var x77 uint32
	x76, x77 = bits.Add32(x71, x68, uint32(uint1(x75)))
	var x78 uint32
	var x79 uint32
	x78, x79 = bits.Add32(x69, x66, uint32(uint1(x77)))
	var x81 uint32
	_, x81 = bits.Add32(x50, x64, uint32(0x0))
	var x82 uint32
	var x83 uint32
	x82, x83 = bits.Add32(x52, uint32(0x0), uint32(uint1(x81)))
	var x84 uint32
	var x85 uint32
	x84, x85 = bits.Add32(x54, uint32(0x0), uint32(uint1(x83)))
	var x86 uint32
	var x87 uint32
	x86, x87 = bits.Add32(x56, x72, uint32(uint1(x85)))
	var x88 uint32
	var x89 uint32
	x88, x89 = bits.Add32(x58, x74, uint32(uint1(x87)))
	var x90 uint32
	var x91 uint32
	x90, x91 = bits.Add32(x60, x76, uint32(uint1(x89)))
	var x92 uint32
	var x93 uint32
	x92, x93 = bits.Add32(x62, x78, uint32(uint1(x91)))
	var x94 uint32
	var x95 uint32
	x94, x95 = bits.Add32((uint32(uint1(x63)) + uint32(uint1(x47))), (uint32(uint1(x79)) + x67), uint32(uint1(x93)))
	var x96 uint32
	var x97 uint32
	x96, x97 = bits.Add32(x82, arg1[3], uint32(0x0))
	var x98 uint32
	var x99 uint32
	x98, x99 = bits.Add32(x84, uint32(0x0), uint32(uint1(x97)))
	var x100 uint32
	var x101 uint32
	x100, x101 = bits.Add32(x86, uint32(0x0), uint32(uint1(x99)))
	var x102 uint32
	var x103 uint32
	x102, x103 = bits.Add32(x88, uint32(0x0), uint32(uint1(x101)))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32(x90, uint32(0x0), uint32(uint1(x103)))
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x92, uint32(0x0), uint32(uint1(x105)))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x94, uint32(0x0), uint32(uint1(x107)))
	var x110 uint32
	_, x110 = bits.Mul32(x96, 0xffffffff)
	var x112 uint32
	var x113 uint32
	x113, x112 = bits.Mul32(x110, 0xffffffff)
	var x114 uint32
	var x115 uint32
	x115, x114 = bits.Mul32(x110, 0xffffffff)
	var x116 uint32
	var x117 uint32
	x117, x116 = bits.Mul32(x110, 0xffffffff)
	var x118 uint32
	var x119 uint32
	x119, x118 = bits.Mul32(x110, 0xffffffff)
	var x120 uint32
	var x121 uint32
	x120, x121 = bits.Add32(x119, x116, uint32(0x0))
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x117, x114, uint32(uint1(x121)))
	var x124 uint32
	var x125 uint32
	x124, x125 = bits.Add32(x115, x112, uint32(uint1(x123)))
	var x127 uint32
	_, x127 = bits.Add32(x96, x110, uint32(0x0))
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x98, uint32(0x0), uint32(uint1(x127)))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x100, uint32(0x0), uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x102, x118, uint32(uint1(x131)))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x104, x120, uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x106, x122, uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x108, x124, uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32((uint32(uint1(x109)) + uint32(uint1(x95))), (uint32(uint1(x125)) + x113), uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Add32(x128, arg1[4], uint32(0x0))
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Add32(x130, uint32(0x0), uint32(uint1(x143)))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Add32(x132, uint32(0x0), uint32(uint1(x145)))
	var x148 uint32
	var x149 uint32
	x148, x149 = bits.Add32(x134, uint32(0x0), uint32(uint1(x147)))
	var x150 uint32
	var x151 uint32
	x150, x151 = bits.Add32(x136, uint32(0x0), uint32(uint1(x149)))
	var x152 uint32
	var x153 uint32
	x152, x153 = bits.Add32(x138, uint32(0x0), uint32(uint1(x151)))
	var x154 uint32
	var x155 uint32
	x154, x155 = bits.Add32(x140, uint32(0x0), uint32(uint1(x153)))
	var x156 uint32
	_, x156 = bits.Mul32(x142, 0xffffffff)
	var x158 uint32
	var x159 uint32
	x159, x158 = bits.Mul32(x156, 0xffffffff)
	var x160 uint32
	var x161 uint32
	x161, x160 = bits.Mul32(x156, 0xffffffff)
	var x162 uint32
	var x163 uint32
	x163, x162 = bits.Mul32(x156, 0xffffffff)
	var x164 uint32
	var x165 uint32
	x165, x164 = bits.Mul32(x156, 0xffffffff)
	var x166 uint32
	var x167 uint32
	x166, x167 = bits.Add32(x165, x162, uint32(0x0))
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x163, x160, uint32(uint1(x167)))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x161, x158, uint32(uint1(x169)))
	var x173 uint32
	_, x173 = bits.Add32(x142, x156, uint32(0x0))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x144, uint32(0x0), uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x146, uint32(0x0), uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x148, x164, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x150, x166, uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32(x152, x168, uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x154, x170, uint32(uint1(x183)))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Add32((uint32(uint1(x155)) + uint32(uint1(x141))), (uint32(uint1(x171)) + x159), uint32(uint1(x185)))
	var x188 uint32
	var x189 uint32
	x188, x189 = bits.Add32(x174, arg1[5], uint32(0x0))
	var x190 uint32
	var x191 uint32
	x190, x191 = bits.Add32(x176, uint32(0x0), uint32(uint1(x189)))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Add32(x178, uint32(0x0), uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x194, x195 = bits.Add32(x180, uint32(0x0), uint32(uint1(x193)))
	var x196 uint32
	var x197 uint32
	x196, x197 = bits.Add32(x182, uint32(0x0), uint32(uint1(x195)))
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Add32(x184, uint32(0x0), uint32(uint1(x197)))
	var x200 uint32
	var x201 uint32
	x200, x201 = bits.Add32(x186, uint32(0x0), uint32(uint1(x199)))
	var x202 uint32
	_, x202 = bits.Mul32(x188, 0xffffffff)
	var x204 uint32
	var x205 uint32
	x205, x204 = bits.Mul32(x202, 0xffffffff)
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x202, 0xffffffff)
	var x208 uint32
	var x209 uint32
	x209, x208 = bits.Mul32(x202, 0xffffffff)
	var x210 uint32
	var x211 uint32
	x211, x210 = bits.Mul32(x202, 0xffffffff)
	var x212 uint32
	var x213 uint32
	x212, x213 = bits.Add32(x211, x208, uint32(0x0))
	var x214 uint32
	var x215 uint32
	x214, x215 = bits.Add32(x209, x206, uint32(uint1(x213)))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x207, x204, uint32(uint1(x215)))
	var x219 uint32
	_, x219 = bits.Add32(x188, x202, uint32(0x0))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x190, uint32(0x0), uint32(uint1(x219)))
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32(x192, uint32(0x0), uint32(uint1(x221)))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x194, x210, uint32(uint1(x223)))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x196, x212, uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x198, x214, uint32(uint1(x227)))
	var x230 uint32
	var x231 uint32
	x230, x231 = bits.Add32(x200, x216, uint32(uint1(x229)))
	var x232 uint32
	var x233 uint32
	x232, x233 = bits.Add32((uint32(uint1(x201)) + uint32(uint1(x187))), (uint32(uint1(x217)) + x205), uint32(uint1(x231)))
	var x234 uint32
	var x235 uint32
	x234, x235 = bits.Add32(x220, arg1[6], uint32(0x0))
	var x236 uint32
	var x237 uint32
	x236, x237 = bits.Add32(x222, uint32(0x0), uint32(uint1(x235)))
	var x238 uint32
	var x239 uint32
	x238, x239 = bits.Add32(x224, uint32(0x0), uint32(uint1(x237)))
	var x240 uint32
	var x241 uint32
	x240, x241 = bits.Add32(x226, uint32(0x0), uint32(uint1(x239)))
	var x242 uint32
	var x243 uint32
	x242, x243 = bits.Add32(x228, uint32(0x0), uint32(uint1(x241)))
	var x244 uint32
	var x245 uint32
	x244, x245 = bits.Add32(x230, uint32(0x0), uint32(uint1(x243)))
	var x246 uint32
	var x247 uint32
	x246, x247 = bits.Add32(x232, uint32(0x0), uint32(uint1(x245)))
	var x248 uint32
	_, x248 = bits.Mul32(x234, 0xffffffff)
	var x250 uint32
	var x251 uint32
	x251, x250 = bits.Mul32(x248, 0xffffffff)
	var x252 uint32
	var x253 uint32
	x253, x252 = bits.Mul32(x248, 0xffffffff)
	var x254 uint32
	var x255 uint32
	x255, x254 = bits.Mul32(x248, 0xffffffff)
	var x256 uint32
	var x257 uint32
	x257, x256 = bits.Mul32(x248, 0xffffffff)
	var x258 uint32
	var x259 uint32
	x258, x259 = bits.Add32(x257, x254, uint32(0x0))
	var x260 uint32
	var x261 uint32
	x260, x261 = bits.Add32(x255, x252, uint32(uint1(x259)))
	var x262 uint32
	var x263 uint32
	x262, x263 = bits.Add32(x253, x250, uint32(uint1(x261)))
	var x265 uint32
	_, x265 = bits.Add32(x234, x248, uint32(0x0))
	var x266 uint32
	var x267 uint32
	x266, x267 = bits.Add32(x236, uint32(0x0), uint32(uint1(x265)))
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32(x238, uint32(0x0), uint32(uint1(x267)))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x240, x256, uint32(uint1(x269)))
	var x272 uint32
	var x273 uint32
	x272, x273 = bits.Add32(x242, x258, uint32(uint1(x271)))
	var x274 uint32
	var x275 uint32
	x274, x275 = bits.Add32(x244, x260, uint32(uint1(x273)))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x246, x262, uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32((uint32(uint1(x247)) + uint32(uint1(x233))), (uint32(uint1(x263)) + x251), uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Sub32(x266, uint32(0x1), uint32(0x0))
	var x282 uint32
	var x283 uint32
	x282, x283 = bits.Sub32(x268, uint32(0x0), uint32(uint1(x281)))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Sub32(x270, uint32(0x0), uint32(uint1(x283)))
	var x286 uint32
	var x287 uint32
	x286, x287 = bits.Sub32(x272, 0xffffffff, uint32(uint1(x285)))
	var x288 uint32
	var x289 uint32
	x288, x289 = bits.Sub32(x274, 0xffffffff, uint32(uint1(x287)))
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Sub32(x276, 0xffffffff, uint32(uint1(x289)))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Sub32(x278, 0xffffffff, uint32(uint1(x291)))
	var x295 uint32
	_, x295 = bits.Sub32(uint32(uint1(x279)), uint32(0x0), uint32(uint1(x293)))
	var x296 uint32
	cmovznzU32(&x296, uint1(x295), x280, x266)
	var x297 uint32
	cmovznzU32(&x297, uint1(x295), x282, x268)
	var x298 uint32
	cmovznzU32(&x298, uint1(x295), x284, x270)
	var x299 uint32
	cmovznzU32(&x299, uint1(x295), x286, x272)
	var x300 uint32
	cmovznzU32(&x300, uint1(x295), x288, x274)
	var x301 uint32
	cmovznzU32(&x301, uint1(x295), x290, x276)
	var x302 uint32
	cmovznzU32(&x302, uint1(x295), x292, x278)
	out1[0] = x296
	out1[1] = x297
	out1[2] = x298
	out1[3] = x299
	out1[4] = x300
	out1[5] = x301
	out1[6] = x302
}

// ToMontgomery translates a field element into the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = eval arg1 mod m
//   0 ≤ eval out1 < m
//
func ToMontgomery(out1 *MontgomeryDomainFieldElement, arg1 *NonMontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[0]
	var x8 uint32
	var x9 uint32
	x9, x8 = bits.Mul32(x7, 0xffffffff)
	var x10 uint32
	var x11 uint32
	x11, x10 = bits.Mul32(x7, 0xffffffff)
	var x12 uint32
	var x13 uint32
	x13, x12 = bits.Mul32(x7, 0xfffffffe)
	var x14 uint32
	var x15 uint32
	x14, x15 = bits.Add32(x13, x10, uint32(0x0))
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(x11, x8, uint32(uint1(x15)))
	var x18 uint32
	_, x18 = bits.Mul32(x7, 0xffffffff)
	var x20 uint32
	var x21 uint32
	x21, x20 = bits.Mul32(x18, 0xffffffff)
	var x22 uint32
	var x23 uint32
	x23, x22 = bits.Mul32(x18, 0xffffffff)
	var x24 uint32
	var x25 uint32
	x25, x24 = bits.Mul32(x18, 0xffffffff)
	var x26 uint32
	var x27 uint32
	x27, x26 = bits.Mul32(x18, 0xffffffff)
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x27, x24, uint32(0x0))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x25, x22, uint32(uint1(x29)))
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x23, x20, uint32(uint1(x31)))
	var x34 uint32
	var x35 uint32
	x34, x35 = bits.Add32(x12, x26, uint32(0x0))
	var x36 uint32
	var x37 uint32
	x36, x37 = bits.Add32(x14, x28, uint32(uint1(x35)))
	var x38 uint32
	var x39 uint32
	x38, x39 = bits.Add32(x16, x30, uint32(uint1(x37)))
	var x40 uint32
	var x41 uint32
	x40, x41 = bits.Add32((uint32(uint1(x17)) + x9), x32, uint32(uint1(x39)))
	var x42 uint32
	var x43 uint32
	x42, x43 = bits.Add32(uint32(0x0), (uint32(uint1(x33)) + x21), uint32(uint1(x41)))
	var x44 uint32
	var x45 uint32
	x45, x44 = bits.Mul32(x1, 0xffffffff)
	var x46 uint32
	var x47 uint32
	x47, x46 = bits.Mul32(x1, 0xffffffff)
	var x48 uint32
	var x49 uint32
	x49, x48 = bits.Mul32(x1, 0xfffffffe)
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32(x49, x46, uint32(0x0))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Add32(x47, x44, uint32(uint1(x51)))
	var x55 uint32
	_, x55 = bits.Add32(x7, x18, uint32(0x0))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(uint32(uint1(x55)), x1, uint32(0x0))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x36, x48, uint32(0x0))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x38, x50, uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x40, x52, uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x42, (uint32(uint1(x53)) + x45), uint32(uint1(x63)))
	var x66 uint32
	_, x66 = bits.Mul32(x56, 0xffffffff)
	var x68 uint32
	var x69 uint32
	x69, x68 = bits.Mul32(x66, 0xffffffff)
	var x70 uint32
	var x71 uint32
	x71, x70 = bits.Mul32(x66, 0xffffffff)
	var x72 uint32
	var x73 uint32
	x73, x72 = bits.Mul32(x66, 0xffffffff)
	var x74 uint32
	var x75 uint32
	x75, x74 = bits.Mul32(x66, 0xffffffff)
	var x76 uint32
	var x77 uint32
	x76, x77 = bits.Add32(x75, x72, uint32(0x0))
	var x78 uint32
	var x79 uint32
	x78, x79 = bits.Add32(x73, x70, uint32(uint1(x77)))
	var x80 uint32
	var x81 uint32
	x80, x81 = bits.Add32(x71, x68, uint32(uint1(x79)))
	var x82 uint32
	var x83 uint32
	x82, x83 = bits.Add32(x58, x74, uint32(0x0))
	var x84 uint32
	var x85 uint32
	x84, x85 = bits.Add32(x60, x76, uint32(uint1(x83)))
	var x86 uint32
	var x87 uint32
	x86, x87 = bits.Add32(x62, x78, uint32(uint1(x85)))
	var x88 uint32
	var x89 uint32
	x88, x89 = bits.Add32(x64, x80, uint32(uint1(x87)))
	var x90 uint32
	var x91 uint32
	x90, x91 = bits.Add32((uint32(uint1(x65)) + uint32(uint1(x43))), (uint32(uint1(x81)) + x69), uint32(uint1(x89)))
	var x92 uint32
	var x93 uint32
	x93, x92 = bits.Mul32(x2, 0xffffffff)
	var x94 uint32
	var x95 uint32
	x95, x94 = bits.Mul32(x2, 0xffffffff)
	var x96 uint32
	var x97 uint32
	x97, x96 = bits.Mul32(x2, 0xfffffffe)
	var x98 uint32
	var x99 uint32
	x98, x99 = bits.Add32(x97, x94, uint32(0x0))
	var x100 uint32
	var x101 uint32
	x100, x101 = bits.Add32(x95, x92, uint32(uint1(x99)))
	var x103 uint32
	_, x103 = bits.Add32(x56, x66, uint32(0x0))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32((uint32(uint1(x103)) + uint32(uint1(x57))), x2, uint32(0x0))
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x34, uint32(0x0), uint32(uint1(x105)))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x82, uint32(0x0), uint32(uint1(x107)))
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x84, x96, uint32(uint1(x109)))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x86, x98, uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x88, x100, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x90, (uint32(uint1(x101)) + x93), uint32(uint1(x115)))
	var x118 uint32
	_, x118 = bits.Mul32(x104, 0xffffffff)
	var x120 uint32
	var x121 uint32
	x121, x120 = bits.Mul32(x118, 0xffffffff)
	var x122 uint32
	var x123 uint32
	x123, x122 = bits.Mul32(x118, 0xffffffff)
	var x124 uint32
	var x125 uint32
	x125, x124 = bits.Mul32(x118, 0xffffffff)
	var x126 uint32
	var x127 uint32
	x127, x126 = bits.Mul32(x118, 0xffffffff)
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x127, x124, uint32(0x0))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x125, x122, uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x123, x120, uint32(uint1(x131)))
	var x135 uint32
	_, x135 = bits.Add32(x104, x118, uint32(0x0))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x106, uint32(0x0), uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x108, uint32(0x0), uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32(x110, x126, uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Add32(x112, x128, uint32(uint1(x141)))
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Add32(x114, x130, uint32(uint1(x143)))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Add32(x116, x132, uint32(uint1(x145)))
	var x148 uint32
	var x149 uint32
	x148, x149 = bits.Add32((uint32(uint1(x117)) + uint32(uint1(x91))), (uint32(uint1(x133)) + x121), uint32(uint1(x147)))
	var x150 uint32
	var x151 uint32
	x151, x150 = bits.Mul32(x3, 0xffffffff)
	var x152 uint32
	var x153 uint32
	x153, x152 = bits.Mul32(x3, 0xffffffff)
	var x154 uint32
	var x155 uint32
	x155, x154 = bits.Mul32(x3, 0xfffffffe)
	var x156 uint32
	var x157 uint32
	x156, x157 = bits.Add32(x155, x152, uint32(0x0))
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x153, x150, uint32(uint1(x157)))
	var x160 uint32
	var x161 uint32
	x160, x161 = bits.Add32(x136, x3, uint32(0x0))
	var x162 uint32
	var x163 uint32
	x162, x163 = bits.Add32(x138, uint32(0x0), uint32(uint1(x161)))
	var x164 uint32
	var x165 uint32
	x164, x165 = bits.Add32(x140, uint32(0x0), uint32(uint1(x163)))
	var x166 uint32
	var x167 uint32
	x166, x167 = bits.Add32(x142, x154, uint32(uint1(x165)))
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x144, x156, uint32(uint1(x167)))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x146, x158, uint32(uint1(x169)))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x148, (uint32(uint1(x159)) + x151), uint32(uint1(x171)))
	var x174 uint32
	_, x174 = bits.Mul32(x160, 0xffffffff)
	var x176 uint32
	var x177 uint32
	x177, x176 = bits.Mul32(x174, 0xffffffff)
	var x178 uint32
	var x179 uint32
	x179, x178 = bits.Mul32(x174, 0xffffffff)
	var x180 uint32
	var x181 uint32
	x181, x180 = bits.Mul32(x174, 0xffffffff)
	var x182 uint32
	var x183 uint32
	x183, x182 = bits.Mul32(x174, 0xffffffff)
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x183, x180, uint32(0x0))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Add32(x181, x178, uint32(uint1(x185)))
	var x188 uint32
	var x189 uint32
	x188, x189 = bits.Add32(x179, x176, uint32(uint1(x187)))
	var x191 uint32
	_, x191 = bits.Add32(x160, x174, uint32(0x0))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Add32(x162, uint32(0x0), uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x194, x195 = bits.Add32(x164, uint32(0x0), uint32(uint1(x193)))
	var x196 uint32
	var x197 uint32
	x196, x197 = bits.Add32(x166, x182, uint32(uint1(x195)))
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Add32(x168, x184, uint32(uint1(x197)))
	var x200 uint32
	var x201 uint32
	x200, x201 = bits.Add32(x170, x186, uint32(uint1(x199)))
	var x202 uint32
	var x203 uint32
	x202, x203 = bits.Add32(x172, x188, uint32(uint1(x201)))
	var x204 uint32
	var x205 uint32
	x204, x205 = bits.Add32((uint32(uint1(x173)) + uint32(uint1(x149))), (uint32(uint1(x189)) + x177), uint32(uint1(x203)))
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x4, 0xffffffff)
	var x208 uint32
	var x209 uint32
	x209, x208 = bits.Mul32(x4, 0xffffffff)
	var x210 uint32
	var x211 uint32
	x211, x210 = bits.Mul32(x4, 0xfffffffe)
	var x212 uint32
	var x213 uint32
	x212, x213 = bits.Add32(x211, x208, uint32(0x0))
	var x214 uint32
	var x215 uint32
	x214, x215 = bits.Add32(x209, x206, uint32(uint1(x213)))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x192, x4, uint32(0x0))
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x194, uint32(0x0), uint32(uint1(x217)))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x196, uint32(0x0), uint32(uint1(x219)))
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32(x198, x210, uint32(uint1(x221)))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x200, x212, uint32(uint1(x223)))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x202, x214, uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x204, (uint32(uint1(x215)) + x207), uint32(uint1(x227)))
	var x230 uint32
	_, x230 = bits.Mul32(x216, 0xffffffff)
	var x232 uint32
	var x233 uint32
	x233, x232 = bits.Mul32(x230, 0xffffffff)
	var x234 uint32
	var x235 uint32
	x235, x234 = bits.Mul32(x230, 0xffffffff)
	var x236 uint32
	var x237 uint32
	x237, x236 = bits.Mul32(x230, 0xffffffff)
	var x238 uint32
	var x239 uint32
	x239, x238 = bits.Mul32(x230, 0xffffffff)
	var x240 uint32
	var x241 uint32
	x240, x241 = bits.Add32(x239, x236, uint32(0x0))
	var x242 uint32
	var x243 uint32
	x242, x243 = bits.Add32(x237, x234, uint32(uint1(x241)))
	var x244 uint32
	var x245 uint32
	x244, x245 = bits.Add32(x235, x232, uint32(uint1(x243)))
	var x247 uint32
	_, x247 = bits.Add32(x216, x230, uint32(0x0))
	var x248 uint32
	var x249 uint32
	x248, x249 = bits.Add32(x218, uint32(0x0), uint32(uint1(x247)))
	var x250 uint32
	var x251 uint32
	x250, x251 = bits.Add32(x220, uint32(0x0), uint32(uint1(x249)))
	var x252 uint32
	var x253 uint32
	x252, x253 = bits.Add32(x222, x238, uint32(uint1(x251)))
	var x254 uint32
	var x255 uint32
	x254, x255 = bits.Add32(x224, x240, uint32(uint1(x253)))
	var x256 uint32
	var x257 uint32
	x256, x257 = bits.Add32(x226, x242, uint32(uint1(x255)))
	var x258 uint32
	var x259 uint32
	x258, x259 = bits.Add32(x228, x244, uint32(uint1(x257)))
	var x260 uint32
	var x261 uint32
	x260, x261 = bits.Add32((uint32(uint1(x229)) + uint32(uint1(x205))), (uint32(uint1(x245)) + x233), uint32(uint1(x259)))
	var x262 uint32
	var x263 uint32
	x263, x262 = bits.Mul32(x5, 0xffffffff)
	var x264 uint32
	var x265 uint32
	x265, x264 = bits.Mul32(x5, 0xffffffff)
	var x266 uint32
	var x267 uint32
	x267, x266 = bits.Mul32(x5, 0xfffffffe)
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32(x267, x264, uint32(0x0))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x265, x262, uint32(uint1(x269)))
	var x272 uint32
	var x273 uint32
	x272, x273 = bits.Add32(x248, x5, uint32(0x0))
	var x274 uint32
	var x275 uint32
	x274, x275 = bits.Add32(x250, uint32(0x0), uint32(uint1(x273)))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x252, uint32(0x0), uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x254, x266, uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x256, x268, uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x282, x283 = bits.Add32(x258, x270, uint32(uint1(x281)))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x260, (uint32(uint1(x271)) + x263), uint32(uint1(x283)))
	var x286 uint32
	_, x286 = bits.Mul32(x272, 0xffffffff)
	var x288 uint32
	var x289 uint32
	x289, x288 = bits.Mul32(x286, 0xffffffff)
	var x290 uint32
	var x291 uint32
	x291, x290 = bits.Mul32(x286, 0xffffffff)
	var x292 uint32
	var x293 uint32
	x293, x292 = bits.Mul32(x286, 0xffffffff)
	var x294 uint32
	var x295 uint32
	x295, x294 = bits.Mul32(x286, 0xffffffff)
	var x296 uint32
	var x297 uint32
	x296, x297 = bits.Add32(x295, x292, uint32(0x0))
	var x298 uint32
	var x299 uint32
	x298, x299 = bits.Add32(x293, x290, uint32(uint1(x297)))
	var x300 uint32
	var x301 uint32
	x300, x301 = bits.Add32(x291, x288, uint32(uint1(x299)))
	var x303 uint32
	_, x303 = bits.Add32(x272, x286, uint32(0x0))
	var x304 uint32
	var x305 uint32
	x304, x305 = bits.Add32(x274, uint32(0x0), uint32(uint1(x303)))
	var x306 uint32
	var x307 uint32
	x306, x307 = bits.Add32(x276, uint32(0x0), uint32(uint1(x305)))
	var x308 uint32
	var x309 uint32
	x308, x309 = bits.Add32(x278, x294, uint32(uint1(x307)))
	var x310 uint32
	var x311 uint32
	x310, x311 = bits.Add32(x280, x296, uint32(uint1(x309)))
	var x312 uint32
	var x313 uint32
	x312, x313 = bits.Add32(x282, x298, uint32(uint1(x311)))
	var x314 uint32
	var x315 uint32
	x314, x315 = bits.Add32(x284, x300, uint32(uint1(x313)))
	var x316 uint32
	var x317 uint32
	x316, x317 = bits.Add32((uint32(uint1(x285)) + uint32(uint1(x261))), (uint32(uint1(x301)) + x289), uint32(uint1(x315)))
	var x318 uint32
	var x319 uint32
	x319, x318 = bits.Mul32(x6, 0xffffffff)
	var x320 uint32
	var x321 uint32
	x321, x320 = bits.Mul32(x6, 0xffffffff)
	var x322 uint32
	var x323 uint32
	x323, x322 = bits.Mul32(x6, 0xfffffffe)
	var x324 uint32
	var x325 uint32
	x324, x325 = bits.Add32(x323, x320, uint32(0x0))
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Add32(x321, x318, uint32(uint1(x325)))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Add32(x304, x6, uint32(0x0))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x306, uint32(0x0), uint32(uint1(x329)))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x308, uint32(0x0), uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x310, x322, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x312, x324, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x314, x326, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x316, (uint32(uint1(x327)) + x319), uint32(uint1(x339)))
	var x342 uint32
	_, x342 = bits.Mul32(x328, 0xffffffff)
	var x344 uint32
	var x345 uint32
	x345, x344 = bits.Mul32(x342, 0xffffffff)
	var x346 uint32
	var x347 uint32
	x347, x346 = bits.Mul32(x342, 0xffffffff)
	var x348 uint32
	var x349 uint32
	x349, x348 = bits.Mul32(x342, 0xffffffff)
	var x350 uint32
	var x351 uint32
	x351, x350 = bits.Mul32(x342, 0xffffffff)
	var x352 uint32
	var x353 uint32
	x352, x353 = bits.Add32(x351, x348, uint32(0x0))
	var x354 uint32
	var x355 uint32
	x354, x355 = bits.Add32(x349, x346, uint32(uint1(x353)))
	var x356 uint32
	var x357 uint32
	x356, x357 = bits.Add32(x347, x344, uint32(uint1(x355)))
	var x359 uint32
	_, x359 = bits.Add32(x328, x342, uint32(0x0))
	var x360 uint32
	var x361 uint32
	x360, x361 = bits.Add32(x330, uint32(0x0), uint32(uint1(x359)))
	var x362 uint32
	var x363 uint32
	x362, x363 = bits.Add32(x332, uint32(0x0), uint32(uint1(x361)))
	var x364 uint32
	var x365 uint32
	x364, x365 = bits.Add32(x334, x350, uint32(uint1(x363)))
	var x366 uint32
	var x367 uint32
	x366, x367 = bits.Add32(x336, x352, uint32(uint1(x365)))
	var x368 uint32
	var x369 uint32
	x368, x369 = bits.Add32(x338, x354, uint32(uint1(x367)))
	var x370 uint32
	var x371 uint32
	x370, x371 = bits.Add32(x340, x356, uint32(uint1(x369)))
	var x372 uint32
	var x373 uint32
	x372, x373 = bits.Add32((uint32(uint1(x341)) + uint32(uint1(x317))), (uint32(uint1(x357)) + x345), uint32(uint1(x371)))
	var x374 uint32
	var x375 uint32
	x374, x375 = bits.Sub32(x360, uint32(0x1), uint32(0x0))
	var x376 uint32
	var x377 uint32
	x376, x377 = bits.Sub32(x362, uint32(0x0), uint32(uint1(x375)))
	var x378 uint32
	var x379 uint32
	x378, x379 = bits.Sub32(x364, uint32(0x0), uint32(uint1(x377)))
	var x380 uint32
	var x381 uint32
	x380, x381 = bits.Sub32(x366, 0xffffffff, uint32(uint1(x379)))
	var x382 uint32
	var x383 uint32
	x382, x383 = bits.Sub32(x368, 0xffffffff, uint32(uint1(x381)))
	var x384 uint32
	var x385 uint32
	x384, x385 = bits.Sub32(x370, 0xffffffff, uint32(uint1(x383)))
	var x386 uint32
	var x387 uint32
	x386, x387 = bits.Sub32(x372, 0xffffffff, uint32(uint1(x385)))
	var x389 uint32
	_, x389 = bits.Sub32(uint32(uint1(x373)), uint32(0x0), uint32(uint1(x387)))
	var x390 uint32
	cmovznzU32(&x390, uint1(x389), x374, x360)
	var x391 uint32
	cmovznzU32(&x391, uint1(x389), x376, x362)
	var x392 uint32
	cmovznzU32(&x392, uint1(x389), x378, x364)
	var x393 uint32
	cmovznzU32(&x393, uint1(x389), x380, x366)
	var x394 uint32
	cmovznzU32(&x394, uint1(x389), x382, x368)
	var x395 uint32
	cmovznzU32(&x395, uint1(x389), x384, x370)
	var x396 uint32
	cmovznzU32(&x396, uint1(x389), x386, x372)
	out1[0] = x390
	out1[1] = x391
	out1[2] = x392
	out1[3] = x393
	out1[4] = x394
	out1[5] = x395
	out1[6] = x396
}

// Nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func Nonzero(out1 *uint32, arg1 *[7]uint32) {
	x1 := (arg1[0] | (arg1[1] | (arg1[2] | (arg1[3] | (arg1[4] | (arg1[5] | arg1[6]))))))
	*out1 = x1
}

// Selectznz is a multi-limb conditional select.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Selectznz(out1 *[7]uint32, arg1 uint1, arg2 *[7]uint32, arg3 *[7]uint32) {
	var x1 uint32
	cmovznzU32(&x1, arg1, arg2[0], arg3[0])
	var x2 uint32
	cmovznzU32(&x2, arg1, arg2[1], arg3[1])
	var x3 uint32
	cmovznzU32(&x3, arg1, arg2[2], arg3[2])
	var x4 uint32
	cmovznzU32(&x4, arg1, arg2[3], arg3[3])
	var x5 uint32
	cmovznzU32(&x5, arg1, arg2[4], arg3[4])
	var x6 uint32
	cmovznzU32(&x6, arg1, arg2[5], arg3[5])
	var x7 uint32
	cmovznzU32(&x7, arg1, arg2[6], arg3[6])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
}

// ToBytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..27]
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
func ToBytes(out1 *[28]uint8, arg1 *[7]uint32) {
	x1 := arg1[6]
	x2 := arg1[5]
	x3 := arg1[4]
	x4 := arg1[3]
	x5 := arg1[2]
	x6 := arg1[1]
	x7 := arg1[0]
	x8 := (uint8(x7) & 0xff)
	x9 := (x7 >> 8)
	x10 := (uint8(x9) & 0xff)
	x11 := (x9 >> 8)
	x12 := (uint8(x11) & 0xff)
	x13 := uint8((x11 >> 8))
	x14 := (uint8(x6) & 0xff)
	x15 := (x6 >> 8)
	x16 := (uint8(x15) & 0xff)
	x17 := (x15 >> 8)
	x18 := (uint8(x17) & 0xff)
	x19 := uint8((x17 >> 8))
	x20 := (uint8(x5) & 0xff)
	x21 := (x5 >> 8)
	x22 := (uint8(x21) & 0xff)
	x23 := (x21 >> 8)
	x24 := (uint8(x23) & 0xff)
	x25 := uint8((x23 >> 8))
	x26 := (uint8(x4) & 0xff)
	x27 := (x4 >> 8)
	x28 := (uint8(x27) & 0xff)
	x29 := (x27 >> 8)
	x30 := (uint8(x29) & 0xff)
	x31 := uint8((x29 >> 8))
	x32 := (uint8(x3) & 0xff)
	x33 := (x3 >> 8)
	x34 := (uint8(x33) & 0xff)
	x35 := (x33 >> 8)
	x36 := (uint8(x35) & 0xff)
	x37 := uint8((x35 >> 8))
	x38 := (uint8(x2) & 0xff)
	x39 := (x2 >> 8)
	x40 := (uint8(x39) & 0xff)
	x41 := (x39 >> 8)
	x42 := (uint8(x41) & 0xff)
	x43 := uint8((x41 >> 8))
	x44 := (uint8(x1) & 0xff)
	x45 := (x1 >> 8)
	x46 := (uint8(x45) & 0xff)
	x47 := (x45 >> 8)
	x48 := (uint8(x47) & 0xff)
	x49 := uint8((x47 >> 8))
	out1[0] = x8
	out1[1] = x10
	out1[2] = x12
	out1[3] = x13
	out1[4] = x14
	out1[5] = x16
	out1[6] = x18
	out1[7] = x19
	out1[8] = x20
	out1[9] = x22
	out1[10] = x24
	out1[11] = x25
	out1[12] = x26
	out1[13] = x28
	out1[14] = x30
	out1[15] = x31
	out1[16] = x32
	out1[17] = x34
	out1[18] = x36
	out1[19] = x37
	out1[20] = x38
	out1[21] = x40
	out1[22] = x42
	out1[23] = x43
	out1[24] = x44
	out1[25] = x46
	out1[26] = x48
	out1[27] = x49
}

// FromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Preconditions:
//   0 ≤ bytes_eval arg1 < m
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func FromBytes(out1 *[7]uint32, arg1 *[28]uint8) {
	x1 := (uint32(arg1[27]) << 24)
	x2 := (uint32(arg1[26]) << 16)
	x3 := (uint32(arg1[25]) << 8)
	x4 := arg1[24]
	x5 := (uint32(arg1[23]) << 24)
	x6 := (uint32(arg1[22]) << 16)
	x7 := (uint32(arg1[21]) << 8)
	x8 := arg1[20]
	x9 := (uint32(arg1[19]) << 24)
	x10 := (uint32(arg1[18]) << 16)
	x11 := (uint32(arg1[17]) << 8)
	x12 := arg1[16]
	x13 := (uint32(arg1[15]) << 24)
	x14 := (uint32(arg1[14]) << 16)
	x15 := (uint32(arg1[13]) << 8)
	x16 := arg1[12]
	x17 := (uint32(arg1[11]) << 24)
	x18 := (uint32(arg1[10]) << 16)
	x19 := (uint32(arg1[9]) << 8)
	x20 := arg1[8]
	x21 := (uint32(arg1[7]) << 24)
	x22 := (uint32(arg1[6]) << 16)
	x23 := (uint32(arg1[5]) << 8)
	x24 := arg1[4]
	x25 := (uint32(arg1[3]) << 24)
	x26 := (uint32(arg1[2]) << 16)
	x27 := (uint32(arg1[1]) << 8)
	x28 := arg1[0]
	x29 := (x27 + uint32(x28))
	x30 := (x26 + x29)
	x31 := (x25 + x30)
	x32 := (x23 + uint32(x24))
	x33 := (x22 + x32)
	x34 := (x21 + x33)
	x35 := (x19 + uint32(x20))
	x36 := (x18 + x35)
	x37 := (x17 + x36)
	x38 := (x15 + uint32(x16))
	x39 := (x14 + x38)
	x40 := (x13 + x39)
	x41 := (x11 + uint32(x12))
	x42 := (x10 + x41)
	x43 := (x9 + x42)
	x44 := (x7 + uint32(x8))
	x45 := (x6 + x44)
	x46 := (x5 + x45)
	x47 := (x3 + uint32(x4))
	x48 := (x2 + x47)
	x49 := (x1 + x48)
	out1[0] = x31
	out1[1] = x34
	out1[2] = x37
	out1[3] = x40
	out1[4] = x43
	out1[5] = x46
	out1[6] = x49
}

// SetOne returns the field element one in the Montgomery domain.
//
// Postconditions:
//   eval (from_montgomery out1) mod m = 1 mod m
//   0 ≤ eval out1 < m
//
func SetOne(out1 *MontgomeryDomainFieldElement) {
	out1[0] = 0xffffffff
	out1[1] = 0xffffffff
	out1[2] = 0xffffffff
	out1[3] = uint32(0x0)
	out1[4] = uint32(0x0)
	out1[5] = uint32(0x0)
	out1[6] = uint32(0x0)
}

// Msat returns the saturated representation of the prime modulus.
//
// Postconditions:
//   twos_complement_eval out1 = m
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Msat(out1 *[8]uint32) {
	out1[0] = uint32(0x1)
	out1[1] = uint32(0x0)
	out1[2] = uint32(0x0)
	out1[3] = 0xffffffff
	out1[4] = 0xffffffff
	out1[5] = 0xffffffff
	out1[6] = 0xffffffff
	out1[7] = uint32(0x0)
}

// The function SatFromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func SatFromBytes(out1 *[8]uint32, arg1 *[28]uint8) {
	x1 := (uint32(arg1[27]) << 24)
	x2 := (uint32(arg1[26]) << 16)
	x3 := (uint32(arg1[25]) << 8)
	x4 := arg1[24]
	x5 := (uint32(arg1[23]) << 24)
	x6 := (uint32(arg1[22]) << 16)
	x7 := (uint32(arg1[21]) << 8)
	x8 := arg1[20]
	x9 := (uint32(arg1[19]) << 24)
	x10 := (uint32(arg1[18]) << 16)
	x11 := (uint32(arg1[17]) << 8)
	x12 := arg1[16]
	x13 := (uint32(arg1[15]) << 24)
	x14 := (uint32(arg1[14]) << 16)
	x15 := (uint32(arg1[13]) << 8)
	x16 := arg1[12]
	x17 := (uint32(arg1[11]) << 24)
	x18 := (uint32(arg1[10]) << 16)
	x19 := (uint32(arg1[9]) << 8)
	x20 := arg1[8]
	x21 := (uint32(arg1[7]) << 24)
	x22 := (uint32(arg1[6]) << 16)
	x23 := (uint32(arg1[5]) << 8)
	x24 := arg1[4]
	x25 := (uint32(arg1[3]) << 24)
	x26 := (uint32(arg1[2]) << 16)
	x27 := (uint32(arg1[1]) << 8)
	x28 := arg1[0]
	x29 := (x27 + uint32(x28))
	x30 := (x26 + x29)
	x31 := (x25 + x30)
	x32 := (x23 + uint32(x24))
	x33 := (x22 + x32)
	x34 := (x21 + x33)
	x35 := (x19 + uint32(x20))
	x36 := (x18 + x35)
	x37 := (x17 + x36)
	x38 := (x15 + uint32(x16))
	x39 := (x14 + x38)
	x40 := (x13 + x39)
	x41 := (x11 + uint32(x12))
	x42 := (x10 + x41)
	x43 := (x9 + x42)
	x44 := (x7 + uint32(x8))
	x45 := (x6 + x44)
	x46 := (x5 + x45)
	x47 := (x3 + uint32(x4))
	x48 := (x2 + x47)
	x49 := (x1 + x48)
	out1[0] = x31
	out1[1] = x34
	out1[2] = x37
	out1[3] = x40
	out1[4] = x43
	out1[5] = x46
	out1[6] = x49
	out1[7] = uint32(0x0)
}

// Divstep computes a divstep.
//
// Preconditions:
//   0 ≤ eval arg4 < m
//   0 ≤ eval arg5 < m
// Postconditions:
//   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
//   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
//   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
//   eval (from_montgomery out4) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval (from_montgomery arg5)) mod m else (2 * eval (from_montgomery arg4)) mod m)
//   eval (from_montgomery out5) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval (from_montgomery arg4) - eval (from_montgomery arg4)) mod m else (eval (from_montgomery arg5) + (twos_complement_eval arg3 mod 2) * eval (from_montgomery arg4)) mod m)
//   0 ≤ eval out5 < m
//   0 ≤ eval out4 < m
//   0 ≤ eval out2 < m
//   0 ≤ eval out3 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg4: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg5: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out4: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out5: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Divstep(out1 *uint32, out2 *[8]uint32, out3 *[8]uint32, out4 *[7]uint32, out5 *[7]uint32, arg1 uint32, arg2 *[8]uint32, arg3 *[8]uint32, arg4 *[7]uint32, arg5 *[7]uint32) {
	var x1 uint32
	x1, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	x3 := (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1))
	var x4 uint32
	x4, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	var x6 uint32
	cmovznzU32(&x6, x3, arg1, x4)
	var x7 uint32
	cmovznzU32(&x7, x3, arg2[0], arg3[0])
	var x8 uint32
	cmovznzU32(&x8, x3, arg2[1], arg3[1])
	var x9 uint32
	cmovznzU32(&x9, x3, arg2[2], arg3[2])
	var x10 uint32
	cmovznzU32(&x10, x3, arg2[3], arg3[3])
	var x11 uint32
	cmovznzU32(&x11, x3, arg2[4], arg3[4])
	var x12 uint32
	cmovznzU32(&x12, x3, arg2[5], arg3[5])
	var x13 uint32
	cmovznzU32(&x13, x3, arg2[6], arg3[6])
	var x14 uint32
	cmovznzU32(&x14, x3, arg2[7], arg3[7])
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Add32(uint32(0x1), (^arg2[0]), uint32(0x0))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Add32(uint32(0x0), (^arg2[1]), uint32(uint1(x16)))
	var x19 uint32
	var x20 uint32
	x19, x20 = bits.Add32(uint32(0x0), (^arg2[2]), uint32(uint1(x18)))
	var x21 uint32
	var x22 uint32
	x21, x22 = bits.Add32(uint32(0x0), (^arg2[3]), uint32(uint1(x20)))
	var x23 uint32
	var x24 uint32
	x23, x24 = bits.Add32(uint32(0x0), (^arg2[4]), uint32(uint1(x22)))
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Add32(uint32(0x0), (^arg2[5]), uint32(uint1(x24)))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Add32(uint32(0x0), (^arg2[6]), uint32(uint1(x26)))
	var x29 uint32
	x29, _ = bits.Add32(uint32(0x0), (^arg2[7]), uint32(uint1(x28)))
	var x31 uint32
	cmovznzU32(&x31, x3, arg3[0], x15)
	var x32 uint32
	cmovznzU32(&x32, x3, arg3[1], x17)
	var x33 uint32
	cmovznzU32(&x33, x3, arg3[2], x19)
	var x34 uint32
	cmovznzU32(&x34, x3, arg3[3], x21)
	var x35 uint32
	cmovznzU32(&x35, x3, arg3[4], x23)
	var x36 uint32
	cmovznzU32(&x36, x3, arg3[5], x25)
	var x37 uint32
	cmovznzU32(&x37, x3, arg3[6], x27)
	var x38 uint32
	cmovznzU32(&x38, x3, arg3[7], x29)
	var x39 uint32
	cmovznzU32(&x39, x3, arg4[0], arg5[0])
	var x40 uint32
	cmovznzU32(&x40, x3, arg4[1], arg5[1])
	var x41 uint32
	cmovznzU32(&x41, x3, arg4[2], arg5[2])
	var x42 uint32
	cmovznzU32(&x42, x3, arg4[3], arg5[3])
	var x43 uint32
	cmovznzU32(&x43, x3, arg4[4], arg5[4])
	var x44 uint32
	cmovznzU32(&x44, x3, arg4[5], arg5[5])
	var x45 uint32
	cmovznzU32(&x45, x3, arg4[6], arg5[6])
	var x46 uint32
	var x47 uint32
	x46, x47 = bits.Add32(x39, x39, uint32(0x0))
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Add32(x40, x40, uint32(uint1(x47)))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32(x41, x41, uint32(uint1(x49)))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Add32(x42, x42, uint32(uint1(x51)))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Add32(x43, x43, uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x44, x44, uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x45, x45, uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Sub32(x46, uint32(0x1), uint32(0x0))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Sub32(x48, uint32(0x0), uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Sub32(x50, uint32(0x0), uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Sub32(x52, 0xffffffff, uint32(uint1(x65)))
	var x68 uint32
	var x69 uint32
	x68, x69 = bits.Sub32(x54, 0xffffffff, uint32(uint1(x67)))
	var x70 uint32
	var x71 uint32
	x70, x71 = bits.Sub32(x56, 0xffffffff, uint32(uint1(x69)))
	var x72 uint32
	var x73 uint32
	x72, x73 = bits.Sub32(x58, 0xffffffff, uint32(uint1(x71)))
	var x75 uint32
	_, x75 = bits.Sub32(uint32(uint1(x59)), uint32(0x0), uint32(uint1(x73)))
	x76 := arg4[6]
	x77 := arg4[5]
	x78 := arg4[4]
	x79 := arg4[3]
	x80 := arg4[2]
	x81 := arg4[1]
	x82 := arg4[0]
	var x83 uint32
	var x84 uint32
	x83, x84 = bits.Sub32(uint32(0x0), x82, uint32(0x0))
	var x85 uint32
	var x86 uint32
	x85, x86 = bits.Sub32(uint32(0x0), x81, uint32(uint1(x84)))
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Sub32(uint32(0x0), x80, uint32(uint1(x86)))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Sub32(uint32(0x0), x79, uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Sub32(uint32(0x0), x78, uint32(uint1(x90)))
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Sub32(uint32(0x0), x77, uint32(uint1(x92)))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Sub32(uint32(0x0), x76, uint32(uint1(x94)))
	var x97 uint32
	cmovznzU32(&x97, uint1(x96), uint32(0x0), 0xffffffff)
	var x98 uint32
	var x99 uint32
	x98, x99 = bits.Add32(x83, uint32((uint1(x97) & 0x1)), uint32(0x0))
	var x100 uint32
	var x101 uint32
	x100, x101 = bits.Add32(x85, uint32(0x0), uint32(uint1(x99)))
	var x102 uint32
	var x103 uint32
	x102, x103 = bits.Add32(x87, uint32(0x0), uint32(uint1(x101)))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32(x89, x97, uint32(uint1(x103)))
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x91, x97, uint32(uint1(x105)))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x93, x97, uint32(uint1(x107)))
	var x110 uint32
	x110, _ = bits.Add32(x95, x97, uint32(uint1(x109)))
	var x112 uint32
	cmovznzU32(&x112, x3, arg5[0], x98)
	var x113 uint32
	cmovznzU32(&x113, x3, arg5[1], x100)
	var x114 uint32
	cmovznzU32(&x114, x3, arg5[2], x102)
	var x115 uint32
	cmovznzU32(&x115, x3, arg5[3], x104)
	var x116 uint32
	cmovznzU32(&x116, x3, arg5[4], x106)
	var x117 uint32
	cmovznzU32(&x117, x3, arg5[5], x108)
	var x118 uint32
	cmovznzU32(&x118, x3, arg5[6], x110)
	x119 := (uint1(x31) & 0x1)
	var x120 uint32
	cmovznzU32(&x120, x119, uint32(0x0), x7)
	var x121 uint32
	cmovznzU32(&x121, x119, uint32(0x0), x8)
	var x122 uint32
	cmovznzU32(&x122, x119, uint32(0x0), x9)
	var x123 uint32
	cmovznzU32(&x123, x119, uint32(0x0), x10)
	var x124 uint32
	cmovznzU32(&x124, x119, uint32(0x0), x11)
	var x125 uint32
	cmovznzU32(&x125, x119, uint32(0x0), x12)
	var x126 uint32
	cmovznzU32(&x126, x119, uint32(0x0), x13)
	var x127 uint32
	cmovznzU32(&x127, x119, uint32(0x0), x14)
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x31, x120, uint32(0x0))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x32, x121, uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x33, x122, uint32(uint1(x131)))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x34, x123, uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x35, x124, uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x36, x125, uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32(x37, x126, uint32(uint1(x139)))
	var x142 uint32
	x142, _ = bits.Add32(x38, x127, uint32(uint1(x141)))
	var x144 uint32
	cmovznzU32(&x144, x119, uint32(0x0), x39)
	var x145 uint32
	cmovznzU32(&x145, x119, uint32(0x0), x40)
	var x146 uint32
	cmovznzU32(&x146, x119, uint32(0x0), x41)
	var x147 uint32
	cmovznzU32(&x147, x119, uint32(0x0), x42)
	var x148 uint32
	cmovznzU32(&x148, x119, uint32(0x0), x43)
	var x149 uint32
	cmovznzU32(&x149, x119, uint32(0x0), x44)
	var x150 uint32
	cmovznzU32(&x150, x119, uint32(0x0), x45)
	var x151 uint32
	var x152 uint32
	x151, x152 = bits.Add32(x112, x144, uint32(0x0))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x113, x145, uint32(uint1(x152)))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x114, x146, uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x115, x147, uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x116, x148, uint32(uint1(x158)))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x117, x149, uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x118, x150, uint32(uint1(x162)))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Sub32(x151, uint32(0x1), uint32(0x0))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Sub32(x153, uint32(0x0), uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Sub32(x155, uint32(0x0), uint32(uint1(x168)))
	var x171 uint32
	var x172 uint32
	x171, x172 = bits.Sub32(x157, 0xffffffff, uint32(uint1(x170)))
	var x173 uint32
	var x174 uint32
	x173, x174 = bits.Sub32(x159, 0xffffffff, uint32(uint1(x172)))
	var x175 uint32
	var x176 uint32
	x175, x176 = bits.Sub32(x161, 0xffffffff, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Sub32(x163, 0xffffffff, uint32(uint1(x176)))
	var x180 uint32
	_, x180 = bits.Sub32(uint32(uint1(x164)), uint32(0x0), uint32(uint1(x178)))
	x181 := (uint32((uint64(x6) + uint64(0x1))) & 0xffffffff)
	x182 := ((x128 >> 1) | ((x130 << 31) & 0xffffffff))
	x183 := ((x130 >> 1) | ((x132 << 31) & 0xffffffff))
	x184 := ((x132 >> 1) | ((x134 << 31) & 0xffffffff))
	x185 := ((x134 >> 1) | ((x136 << 31) & 0xffffffff))
	x186 := ((x136 >> 1) | ((x138 << 31) & 0xffffffff))
	x187 := ((x138 >> 1) | ((x140 << 31) & 0xffffffff))
	x188 := ((x140 >> 1) | ((x142 << 31) & 0xffffffff))
	x189 := ((x142 & 0x80000000) | (x142 >> 1))
	var x190 uint32
	cmovznzU32(&x190, uint1(x75), x60, x46)
	var x191 uint32
	cmovznzU32(&x191, uint1(x75), x62, x48)
	var x192 uint32
	cmovznzU32(&x192, uint1(x75), x64, x50)
	var x193 uint32
	cmovznzU32(&x193, uint1(x75), x66, x52)
	var x194 uint32
	cmovznzU32(&x194, uint1(x75), x68, x54)
	var x195 uint32
	cmovznzU32(&x195, uint1(x75), x70, x56)
	var x196 uint32
	cmovznzU32(&x196, uint1(x75), x72, x58)
	var x197 uint32
	cmovznzU32(&x197, uint1(x180), x165, x151)
	var x198 uint32
	cmovznzU32(&x198, uint1(x180), x167, x153)
	var x199 uint32
	cmovznzU32(&x199, uint1(x180), x169, x155)
	var x200 uint32
	cmovznzU32(&x200, uint1(x180), x171, x157)
	var x201 uint32
	cmovznzU32(&x201, uint1(x180), x173, x159)
	var x202 uint32
	cmovznzU32(&x202, uint1(x180), x175, x161)
	var x203 uint32
	cmovznzU32(&x203, uint1(x180), x177, x163)
	*out1 = x181
	out2[0] = x7
	out2[1] = x8
	out2[2] = x9
	out2[3] = x10
	out2[4] = x11
	out2[5] = x12
	out2[6] = x13
	out2[7] = x14
	out3[0] = x182
	out3[1] = x183
	out3[2] = x184
	out3[3] = x185
	out3[4] = x186
	out3[5] = x187
	out3[6] = x188
	out3[7] = x189
	out4[0] = x190
	out4[1] = x191
	out4[2] = x192
	out4[3] = x193
	out4[4] = x194
	out4[5] = x195
	out4[6] = x196
	out5[0] = x197
	out5[1] = x198
	out5[2] = x199
	out5[3] = x200
	out5[4] = x201
	out5[5] = x202
	out5[6] = x203
}

// DivstepPrecomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func DivstepPrecomp(out1 *[7]uint32) {
	out1[0] = 0x800000
	out1[1] = uint32(0x0)
	out1[2] = uint32(0x0)
	out1[3] = uint32(0x0)
	out1[4] = uint32(0x0)
	out1[5] = uint32(0x0)
	out1[6] = uint32(0x0)
}

// InnerLoop computes a inner_loop.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [0x0 ~> 0xffffffff]
//   out3: [0x0 ~> 0xffffffff]
//   out4: [0x0 ~> 0xffffffff]
//   out5: [0x0 ~> 0xffffffff]
func InnerLoop(out1 *uint32, out2 *uint32, out3 *uint32, out4 *uint32, out5 *uint32, arg1 uint32, arg2 *[8]uint32, arg3 *[8]uint32) {
	x1 := (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg1, (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff))
	var x3 uint32
	cmovznzU32(&x3, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg2[0], arg3[0])
	var x4 uint32
	cmovznzU32(&x4, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg3[0], (uint32((uint64((^arg2[0])) + uint64(0x1))) & 0xffffffff))
	var x5 uint1
	cmovznzU1(&x5, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x6 uint1
	cmovznzU1(&x6, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x0, 0x1)
	var x7 uint32
	cmovznzU32(&x7, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), uint32(0x0), 0xffffffff)
	var x8 uint1
	cmovznzU1(&x8, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x9 uint32
	cmovznzU32(&x9, (uint1(x4) & 0x1), uint32(0x0), x3)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x4) & 0x1), 0x0, x5)
	var x11 uint1
	cmovznzU1(&x11, (uint1(x4) & 0x1), 0x0, x6)
	x12 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x13 uint32
	cmovznzU32(&x13, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x2))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), x3, (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)), (uint32((uint64((^x3)) + uint64(0x1))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x6) + uint32(x6)), (uint32(x8) + uint32(x11)))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x8) + uint32(x11)), (uint32((uint64((^(uint32(x6) + uint32(x6)))) + uint64(0x1))) & 0xffffffff))
	var x20 uint32
	cmovznzU32(&x20, (uint1(x15) & 0x1), uint32(0x0), x14)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x15) & 0x1), uint32(0x0), x16)
	var x22 uint32
	cmovznzU32(&x22, (uint1(x15) & 0x1), uint32(0x0), x17)
	x23 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x24 uint32
	cmovznzU32(&x24, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x13))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), x14, (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)), (uint32((uint64((^x14)) + uint64(0x1))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x16) + uint64(x16))) & 0xffffffff), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (x17 + x17), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x16) + uint64(x16))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff), (uint32((uint64((^(x17 + x17))) + uint64(0x1))) & 0xffffffff))
	var x31 uint32
	cmovznzU32(&x31, (uint1(x26) & 0x1), uint32(0x0), x25)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x26) & 0x1), uint32(0x0), x27)
	var x33 uint32
	cmovznzU32(&x33, (uint1(x26) & 0x1), uint32(0x0), x28)
	x34 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x35 uint32
	cmovznzU32(&x35, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x24))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), x25, (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)), (uint32((uint64((^x25)) + uint64(0x1))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x28))) & 0xffffffff), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x28) + uint64(x28))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x42 uint32
	cmovznzU32(&x42, (uint1(x37) & 0x1), uint32(0x0), x36)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x37) & 0x1), uint32(0x0), x38)
	var x44 uint32
	cmovznzU32(&x44, (uint1(x37) & 0x1), uint32(0x0), x39)
	x45 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	cmovznzU32(&x46, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x35))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), x36, (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)), (uint32((uint64((^x36)) + uint64(0x1))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x39))) & 0xffffffff), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x39) + uint64(x39))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x53 uint32
	cmovznzU32(&x53, (uint1(x48) & 0x1), uint32(0x0), x47)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x48) & 0x1), uint32(0x0), x49)
	var x55 uint32
	cmovznzU32(&x55, (uint1(x48) & 0x1), uint32(0x0), x50)
	x56 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x57 uint32
	cmovznzU32(&x57, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x46))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), x47, (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)), (uint32((uint64((^x47)) + uint64(0x1))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x50))) & 0xffffffff), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x50) + uint64(x50))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x64 uint32
	cmovznzU32(&x64, (uint1(x59) & 0x1), uint32(0x0), x58)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x59) & 0x1), uint32(0x0), x60)
	var x66 uint32
	cmovznzU32(&x66, (uint1(x59) & 0x1), uint32(0x0), x61)
	x67 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x68 uint32
	cmovznzU32(&x68, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x57))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), x58, (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)), (uint32((uint64((^x58)) + uint64(0x1))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x61))) & 0xffffffff), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x61) + uint64(x61))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x75 uint32
	cmovznzU32(&x75, (uint1(x70) & 0x1), uint32(0x0), x69)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x70) & 0x1), uint32(0x0), x71)
	var x77 uint32
	cmovznzU32(&x77, (uint1(x70) & 0x1), uint32(0x0), x72)
	x78 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	cmovznzU32(&x79, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x68))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), x69, (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)), (uint32((uint64((^x69)) + uint64(0x1))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x72))) & 0xffffffff), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x72) + uint64(x72))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x86 uint32
	cmovznzU32(&x86, (uint1(x81) & 0x1), uint32(0x0), x80)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x81) & 0x1), uint32(0x0), x82)
	var x88 uint32
	cmovznzU32(&x88, (uint1(x81) & 0x1), uint32(0x0), x83)
	x89 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x90 uint32
	cmovznzU32(&x90, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x79))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), x80, (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)), (uint32((uint64((^x80)) + uint64(0x1))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x83))) & 0xffffffff), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x83) + uint64(x83))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x97 uint32
	cmovznzU32(&x97, (uint1(x92) & 0x1), uint32(0x0), x91)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x92) & 0x1), uint32(0x0), x93)
	var x99 uint32
	cmovznzU32(&x99, (uint1(x92) & 0x1), uint32(0x0), x94)
	x100 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x101 uint32
	cmovznzU32(&x101, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x90))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), x91, (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)), (uint32((uint64((^x91)) + uint64(0x1))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x94))) & 0xffffffff), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x94) + uint64(x94))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x108 uint32
	cmovznzU32(&x108, (uint1(x103) & 0x1), uint32(0x0), x102)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x103) & 0x1), uint32(0x0), x104)
	var x110 uint32
	cmovznzU32(&x110, (uint1(x103) & 0x1), uint32(0x0), x105)
	x111 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x112 uint32
	cmovznzU32(&x112, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x101))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), x102, (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)), (uint32((uint64((^x102)) + uint64(0x1))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x105))) & 0xffffffff), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x105) + uint64(x105))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x119 uint32
	cmovznzU32(&x119, (uint1(x114) & 0x1), uint32(0x0), x113)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x114) & 0x1), uint32(0x0), x115)
	var x121 uint32
	cmovznzU32(&x121, (uint1(x114) & 0x1), uint32(0x0), x116)
	x122 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x123 uint32
	cmovznzU32(&x123, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x112))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), x113, (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)), (uint32((uint64((^x113)) + uint64(0x1))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x116))) & 0xffffffff), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x116) + uint64(x116))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x130 uint32
	cmovznzU32(&x130, (uint1(x125) & 0x1), uint32(0x0), x124)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x125) & 0x1), uint32(0x0), x126)
	var x132 uint32
	cmovznzU32(&x132, (uint1(x125) & 0x1), uint32(0x0), x127)
	x133 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x134 uint32
	cmovznzU32(&x134, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x123))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), x124, (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)), (uint32((uint64((^x124)) + uint64(0x1))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x127))) & 0xffffffff), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x127) + uint64(x127))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x141 uint32
	cmovznzU32(&x141, (uint1(x136) & 0x1), uint32(0x0), x135)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x136) & 0x1), uint32(0x0), x137)
	var x143 uint32
	cmovznzU32(&x143, (uint1(x136) & 0x1), uint32(0x0), x138)
	x144 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x145 uint32
	cmovznzU32(&x145, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x134))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), x135, (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)), (uint32((uint64((^x135)) + uint64(0x1))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x138))) & 0xffffffff), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x138) + uint64(x138))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x152 uint32
	cmovznzU32(&x152, (uint1(x147) & 0x1), uint32(0x0), x146)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x147) & 0x1), uint32(0x0), x148)
	var x154 uint32
	cmovznzU32(&x154, (uint1(x147) & 0x1), uint32(0x0), x149)
	x155 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x156 uint32
	cmovznzU32(&x156, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x145))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), x146, (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)), (uint32((uint64((^x146)) + uint64(0x1))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x149))) & 0xffffffff), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x149) + uint64(x149))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x163 uint32
	cmovznzU32(&x163, (uint1(x158) & 0x1), uint32(0x0), x157)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x158) & 0x1), uint32(0x0), x159)
	var x165 uint32
	cmovznzU32(&x165, (uint1(x158) & 0x1), uint32(0x0), x160)
	x166 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x167 uint32
	cmovznzU32(&x167, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x156))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), x157, (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)), (uint32((uint64((^x157)) + uint64(0x1))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x160))) & 0xffffffff), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x160) + uint64(x160))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x174 uint32
	cmovznzU32(&x174, (uint1(x169) & 0x1), uint32(0x0), x168)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x169) & 0x1), uint32(0x0), x170)
	var x176 uint32
	cmovznzU32(&x176, (uint1(x169) & 0x1), uint32(0x0), x171)
	x177 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x178 uint32
	cmovznzU32(&x178, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x167))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), x168, (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)), (uint32((uint64((^x168)) + uint64(0x1))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x171))) & 0xffffffff), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x171) + uint64(x171))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x185 uint32
	cmovznzU32(&x185, (uint1(x180) & 0x1), uint32(0x0), x179)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x180) & 0x1), uint32(0x0), x181)
	var x187 uint32
	cmovznzU32(&x187, (uint1(x180) & 0x1), uint32(0x0), x182)
	x188 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x189 uint32
	cmovznzU32(&x189, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x178))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), x179, (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)), (uint32((uint64((^x179)) + uint64(0x1))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x182))) & 0xffffffff), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x182) + uint64(x182))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x196 uint32
	cmovznzU32(&x196, (uint1(x191) & 0x1), uint32(0x0), x190)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x191) & 0x1), uint32(0x0), x192)
	var x198 uint32
	cmovznzU32(&x198, (uint1(x191) & 0x1), uint32(0x0), x193)
	x199 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x200 uint32
	cmovznzU32(&x200, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x189))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), x190, (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)), (uint32((uint64((^x190)) + uint64(0x1))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x193))) & 0xffffffff), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x193) + uint64(x193))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x207 uint32
	cmovznzU32(&x207, (uint1(x202) & 0x1), uint32(0x0), x201)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x202) & 0x1), uint32(0x0), x203)
	var x209 uint32
	cmovznzU32(&x209, (uint1(x202) & 0x1), uint32(0x0), x204)
	x210 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x211 uint32
	cmovznzU32(&x211, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x200))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), x201, (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)), (uint32((uint64((^x201)) + uint64(0x1))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x204))) & 0xffffffff), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x204) + uint64(x204))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x218 uint32
	cmovznzU32(&x218, (uint1(x213) & 0x1), uint32(0x0), x212)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x213) & 0x1), uint32(0x0), x214)
	var x220 uint32
	cmovznzU32(&x220, (uint1(x213) & 0x1), uint32(0x0), x215)
	x221 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x222 uint32
	cmovznzU32(&x222, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x211))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), x212, (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)), (uint32((uint64((^x212)) + uint64(0x1))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x215))) & 0xffffffff), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x215) + uint64(x215))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x229 uint32
	cmovznzU32(&x229, (uint1(x224) & 0x1), uint32(0x0), x223)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x224) & 0x1), uint32(0x0), x225)
	var x231 uint32
	cmovznzU32(&x231, (uint1(x224) & 0x1), uint32(0x0), x226)
	x232 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x233 uint32
	cmovznzU32(&x233, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x222))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), x223, (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)), (uint32((uint64((^x223)) + uint64(0x1))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x226))) & 0xffffffff), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x226) + uint64(x226))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x240 uint32
	cmovznzU32(&x240, (uint1(x235) & 0x1), uint32(0x0), x234)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x235) & 0x1), uint32(0x0), x236)
	var x242 uint32
	cmovznzU32(&x242, (uint1(x235) & 0x1), uint32(0x0), x237)
	x243 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x244 uint32
	cmovznzU32(&x244, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x233))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), x234, (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)), (uint32((uint64((^x234)) + uint64(0x1))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x237))) & 0xffffffff), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x237) + uint64(x237))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x251 uint32
	cmovznzU32(&x251, (uint1(x246) & 0x1), uint32(0x0), x245)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x246) & 0x1), uint32(0x0), x247)
	var x253 uint32
	cmovznzU32(&x253, (uint1(x246) & 0x1), uint32(0x0), x248)
	x254 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x255 uint32
	cmovznzU32(&x255, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x244))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), x245, (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)), (uint32((uint64((^x245)) + uint64(0x1))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x248))) & 0xffffffff), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x248) + uint64(x248))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x262 uint32
	cmovznzU32(&x262, (uint1(x257) & 0x1), uint32(0x0), x256)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x257) & 0x1), uint32(0x0), x258)
	var x264 uint32
	cmovznzU32(&x264, (uint1(x257) & 0x1), uint32(0x0), x259)
	x265 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x266 uint32
	cmovznzU32(&x266, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x255))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), x256, (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)), (uint32((uint64((^x256)) + uint64(0x1))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x259))) & 0xffffffff), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x259) + uint64(x259))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x273 uint32
	cmovznzU32(&x273, (uint1(x268) & 0x1), uint32(0x0), x267)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x268) & 0x1), uint32(0x0), x269)
	var x275 uint32
	cmovznzU32(&x275, (uint1(x268) & 0x1), uint32(0x0), x270)
	x276 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x277 uint32
	cmovznzU32(&x277, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x266))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), x267, (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)), (uint32((uint64((^x267)) + uint64(0x1))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x270))) & 0xffffffff), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x270) + uint64(x270))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x284 uint32
	cmovznzU32(&x284, (uint1(x279) & 0x1), uint32(0x0), x278)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x279) & 0x1), uint32(0x0), x280)
	var x286 uint32
	cmovznzU32(&x286, (uint1(x279) & 0x1), uint32(0x0), x281)
	x287 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x288 uint32
	cmovznzU32(&x288, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x277))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), x278, (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)), (uint32((uint64((^x278)) + uint64(0x1))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x281))) & 0xffffffff), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x281) + uint64(x281))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x295 uint32
	cmovznzU32(&x295, (uint1(x290) & 0x1), uint32(0x0), x289)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x290) & 0x1), uint32(0x0), x291)
	var x297 uint32
	cmovznzU32(&x297, (uint1(x290) & 0x1), uint32(0x0), x292)
	x298 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x299 uint32
	cmovznzU32(&x299, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x288))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), x289, (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)), (uint32((uint64((^x289)) + uint64(0x1))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x292))) & 0xffffffff), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x292) + uint64(x292))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x306 uint32
	cmovznzU32(&x306, (uint1(x301) & 0x1), uint32(0x0), x300)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x301) & 0x1), uint32(0x0), x302)
	var x308 uint32
	cmovznzU32(&x308, (uint1(x301) & 0x1), uint32(0x0), x303)
	x309 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x310 uint32
	cmovznzU32(&x310, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x299))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), x300, (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)), (uint32((uint64((^x300)) + uint64(0x1))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x303))) & 0xffffffff), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x303) + uint64(x303))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x317 uint32
	cmovznzU32(&x317, (uint1(x312) & 0x1), uint32(0x0), x311)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x312) & 0x1), uint32(0x0), x313)
	var x319 uint32
	cmovznzU32(&x319, (uint1(x312) & 0x1), uint32(0x0), x314)
	x320 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x321 uint32
	cmovznzU32(&x321, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x310))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1)), (uint32((uint64((^x311)) + uint64(0x1))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x314))) & 0xffffffff), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x326 uint32
	cmovznzU32(&x326, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x314) + uint64(x314))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x327 uint32
	cmovznzU32(&x327, (uint1(x322) & 0x1), uint32(0x0), x323)
	var x328 uint32
	cmovznzU32(&x328, (uint1(x322) & 0x1), uint32(0x0), x324)
	x329 := (uint32((uint64(0x1) + uint64(x321))) & 0xffffffff)
	x330 := (uint32((uint64(x323) + uint64(x323))) & 0xffffffff)
	x331 := (uint32((uint64(x324) + uint64(x324))) & 0xffffffff)
	x332 := (uint32((uint64(x325) + uint64(x327))) & 0xffffffff)
	x333 := (uint32((uint64(x326) + uint64(x328))) & 0xffffffff)
	*out1 = x329
	*out2 = x330
	*out3 = x331
	*out4 = x332
	*out5 = x333
}

// InnerLoopHd computes a inner_loop_hd.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [0x0 ~> 0xffffffff]
//   out3: [0x0 ~> 0xffffffff]
//   out4: [0x0 ~> 0xffffffff]
//   out5: [0x0 ~> 0xffffffff]
func InnerLoopHd(out1 *uint32, out2 *uint32, out3 *uint32, out4 *uint32, out5 *uint32, arg1 uint32, arg2 *[8]uint32, arg3 *[8]uint32) {
	x1 := (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg1, (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff))
	var x3 uint32
	cmovznzU32(&x3, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg2[0], arg3[0])
	var x4 uint32
	cmovznzU32(&x4, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg3[0], (uint32((uint64((^arg2[0])) + uint64(0x1))) & 0xffffffff))
	var x5 uint1
	cmovznzU1(&x5, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x6 uint1
	cmovznzU1(&x6, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x0, 0x1)
	var x7 uint32
	cmovznzU32(&x7, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), uint32(0x0), 0xffffffff)
	var x8 uint1
	cmovznzU1(&x8, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x9 uint32
	cmovznzU32(&x9, (uint1(x4) & 0x1), uint32(0x0), x3)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x4) & 0x1), 0x0, x5)
	var x11 uint1
	cmovznzU1(&x11, (uint1(x4) & 0x1), 0x0, x6)
	x12 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x13 uint32
	cmovznzU32(&x13, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x2))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), x3, (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)), (uint32((uint64((^x3)) + uint64(0x1))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x6) + uint32(x6)), (uint32(x8) + uint32(x11)))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x8) + uint32(x11)), (uint32((uint64((^(uint32(x6) + uint32(x6)))) + uint64(0x1))) & 0xffffffff))
	var x20 uint32
	cmovznzU32(&x20, (uint1(x15) & 0x1), uint32(0x0), x14)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x15) & 0x1), uint32(0x0), x16)
	var x22 uint32
	cmovznzU32(&x22, (uint1(x15) & 0x1), uint32(0x0), x17)
	x23 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x24 uint32
	cmovznzU32(&x24, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x13))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), x14, (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)), (uint32((uint64((^x14)) + uint64(0x1))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x16) + uint64(x16))) & 0xffffffff), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (x17 + x17), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x16) + uint64(x16))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff), (uint32((uint64((^(x17 + x17))) + uint64(0x1))) & 0xffffffff))
	var x31 uint32
	cmovznzU32(&x31, (uint1(x26) & 0x1), uint32(0x0), x25)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x26) & 0x1), uint32(0x0), x27)
	var x33 uint32
	cmovznzU32(&x33, (uint1(x26) & 0x1), uint32(0x0), x28)
	x34 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x35 uint32
	cmovznzU32(&x35, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x24))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), x25, (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)), (uint32((uint64((^x25)) + uint64(0x1))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x28))) & 0xffffffff), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x28) + uint64(x28))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x42 uint32
	cmovznzU32(&x42, (uint1(x37) & 0x1), uint32(0x0), x36)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x37) & 0x1), uint32(0x0), x38)
	var x44 uint32
	cmovznzU32(&x44, (uint1(x37) & 0x1), uint32(0x0), x39)
	x45 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	cmovznzU32(&x46, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x35))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), x36, (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)), (uint32((uint64((^x36)) + uint64(0x1))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x39))) & 0xffffffff), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x39) + uint64(x39))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x53 uint32
	cmovznzU32(&x53, (uint1(x48) & 0x1), uint32(0x0), x47)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x48) & 0x1), uint32(0x0), x49)
	var x55 uint32
	cmovznzU32(&x55, (uint1(x48) & 0x1), uint32(0x0), x50)
	x56 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x57 uint32
	cmovznzU32(&x57, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x46))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), x47, (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)), (uint32((uint64((^x47)) + uint64(0x1))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x50))) & 0xffffffff), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x50) + uint64(x50))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x64 uint32
	cmovznzU32(&x64, (uint1(x59) & 0x1), uint32(0x0), x58)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x59) & 0x1), uint32(0x0), x60)
	var x66 uint32
	cmovznzU32(&x66, (uint1(x59) & 0x1), uint32(0x0), x61)
	x67 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x68 uint32
	cmovznzU32(&x68, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x57))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), x58, (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)), (uint32((uint64((^x58)) + uint64(0x1))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x61))) & 0xffffffff), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x61) + uint64(x61))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x75 uint32
	cmovznzU32(&x75, (uint1(x70) & 0x1), uint32(0x0), x69)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x70) & 0x1), uint32(0x0), x71)
	var x77 uint32
	cmovznzU32(&x77, (uint1(x70) & 0x1), uint32(0x0), x72)
	x78 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	cmovznzU32(&x79, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x68))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), x69, (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)), (uint32((uint64((^x69)) + uint64(0x1))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x72))) & 0xffffffff), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x72) + uint64(x72))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x86 uint32
	cmovznzU32(&x86, (uint1(x81) & 0x1), uint32(0x0), x80)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x81) & 0x1), uint32(0x0), x82)
	var x88 uint32
	cmovznzU32(&x88, (uint1(x81) & 0x1), uint32(0x0), x83)
	x89 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x90 uint32
	cmovznzU32(&x90, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x79))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), x80, (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)), (uint32((uint64((^x80)) + uint64(0x1))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x83))) & 0xffffffff), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x83) + uint64(x83))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x97 uint32
	cmovznzU32(&x97, (uint1(x92) & 0x1), uint32(0x0), x91)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x92) & 0x1), uint32(0x0), x93)
	var x99 uint32
	cmovznzU32(&x99, (uint1(x92) & 0x1), uint32(0x0), x94)
	x100 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x101 uint32
	cmovznzU32(&x101, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x90))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), x91, (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)), (uint32((uint64((^x91)) + uint64(0x1))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x94))) & 0xffffffff), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x94) + uint64(x94))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x108 uint32
	cmovznzU32(&x108, (uint1(x103) & 0x1), uint32(0x0), x102)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x103) & 0x1), uint32(0x0), x104)
	var x110 uint32
	cmovznzU32(&x110, (uint1(x103) & 0x1), uint32(0x0), x105)
	x111 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x112 uint32
	cmovznzU32(&x112, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x101))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), x102, (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)), (uint32((uint64((^x102)) + uint64(0x1))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x105))) & 0xffffffff), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x105) + uint64(x105))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x119 uint32
	cmovznzU32(&x119, (uint1(x114) & 0x1), uint32(0x0), x113)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x114) & 0x1), uint32(0x0), x115)
	var x121 uint32
	cmovznzU32(&x121, (uint1(x114) & 0x1), uint32(0x0), x116)
	x122 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x123 uint32
	cmovznzU32(&x123, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x112))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), x113, (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)), (uint32((uint64((^x113)) + uint64(0x1))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x116))) & 0xffffffff), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x116) + uint64(x116))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x130 uint32
	cmovznzU32(&x130, (uint1(x125) & 0x1), uint32(0x0), x124)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x125) & 0x1), uint32(0x0), x126)
	var x132 uint32
	cmovznzU32(&x132, (uint1(x125) & 0x1), uint32(0x0), x127)
	x133 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x134 uint32
	cmovznzU32(&x134, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x123))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), x124, (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)), (uint32((uint64((^x124)) + uint64(0x1))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x127))) & 0xffffffff), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x127) + uint64(x127))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x141 uint32
	cmovznzU32(&x141, (uint1(x136) & 0x1), uint32(0x0), x135)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x136) & 0x1), uint32(0x0), x137)
	var x143 uint32
	cmovznzU32(&x143, (uint1(x136) & 0x1), uint32(0x0), x138)
	x144 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x145 uint32
	cmovznzU32(&x145, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x134))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), x135, (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)), (uint32((uint64((^x135)) + uint64(0x1))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x138))) & 0xffffffff), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x138) + uint64(x138))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x152 uint32
	cmovznzU32(&x152, (uint1(x147) & 0x1), uint32(0x0), x146)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x147) & 0x1), uint32(0x0), x148)
	var x154 uint32
	cmovznzU32(&x154, (uint1(x147) & 0x1), uint32(0x0), x149)
	x155 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x156 uint32
	cmovznzU32(&x156, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x145))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), x146, (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)), (uint32((uint64((^x146)) + uint64(0x1))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x149))) & 0xffffffff), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x149) + uint64(x149))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x163 uint32
	cmovznzU32(&x163, (uint1(x158) & 0x1), uint32(0x0), x157)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x158) & 0x1), uint32(0x0), x159)
	var x165 uint32
	cmovznzU32(&x165, (uint1(x158) & 0x1), uint32(0x0), x160)
	x166 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x167 uint32
	cmovznzU32(&x167, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x156))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), x157, (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)), (uint32((uint64((^x157)) + uint64(0x1))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x160))) & 0xffffffff), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x160) + uint64(x160))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x174 uint32
	cmovznzU32(&x174, (uint1(x169) & 0x1), uint32(0x0), x168)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x169) & 0x1), uint32(0x0), x170)
	var x176 uint32
	cmovznzU32(&x176, (uint1(x169) & 0x1), uint32(0x0), x171)
	x177 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x178 uint32
	cmovznzU32(&x178, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x167))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), x168, (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)), (uint32((uint64((^x168)) + uint64(0x1))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x171))) & 0xffffffff), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x171) + uint64(x171))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x185 uint32
	cmovznzU32(&x185, (uint1(x180) & 0x1), uint32(0x0), x179)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x180) & 0x1), uint32(0x0), x181)
	var x187 uint32
	cmovznzU32(&x187, (uint1(x180) & 0x1), uint32(0x0), x182)
	x188 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x189 uint32
	cmovznzU32(&x189, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x178))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), x179, (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)), (uint32((uint64((^x179)) + uint64(0x1))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x182))) & 0xffffffff), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x182) + uint64(x182))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x196 uint32
	cmovznzU32(&x196, (uint1(x191) & 0x1), uint32(0x0), x190)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x191) & 0x1), uint32(0x0), x192)
	var x198 uint32
	cmovznzU32(&x198, (uint1(x191) & 0x1), uint32(0x0), x193)
	x199 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x200 uint32
	cmovznzU32(&x200, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x189))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), x190, (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)), (uint32((uint64((^x190)) + uint64(0x1))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x193))) & 0xffffffff), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x193) + uint64(x193))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x207 uint32
	cmovznzU32(&x207, (uint1(x202) & 0x1), uint32(0x0), x201)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x202) & 0x1), uint32(0x0), x203)
	var x209 uint32
	cmovznzU32(&x209, (uint1(x202) & 0x1), uint32(0x0), x204)
	x210 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x211 uint32
	cmovznzU32(&x211, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x200))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), x201, (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)), (uint32((uint64((^x201)) + uint64(0x1))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x204))) & 0xffffffff), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x204) + uint64(x204))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x218 uint32
	cmovznzU32(&x218, (uint1(x213) & 0x1), uint32(0x0), x212)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x213) & 0x1), uint32(0x0), x214)
	var x220 uint32
	cmovznzU32(&x220, (uint1(x213) & 0x1), uint32(0x0), x215)
	x221 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x222 uint32
	cmovznzU32(&x222, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x211))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), x212, (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)), (uint32((uint64((^x212)) + uint64(0x1))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x215))) & 0xffffffff), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x215) + uint64(x215))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x229 uint32
	cmovznzU32(&x229, (uint1(x224) & 0x1), uint32(0x0), x223)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x224) & 0x1), uint32(0x0), x225)
	var x231 uint32
	cmovznzU32(&x231, (uint1(x224) & 0x1), uint32(0x0), x226)
	x232 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x233 uint32
	cmovznzU32(&x233, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x222))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), x223, (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)), (uint32((uint64((^x223)) + uint64(0x1))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x226))) & 0xffffffff), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x226) + uint64(x226))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x240 uint32
	cmovznzU32(&x240, (uint1(x235) & 0x1), uint32(0x0), x234)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x235) & 0x1), uint32(0x0), x236)
	var x242 uint32
	cmovznzU32(&x242, (uint1(x235) & 0x1), uint32(0x0), x237)
	x243 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x244 uint32
	cmovznzU32(&x244, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x233))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), x234, (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)), (uint32((uint64((^x234)) + uint64(0x1))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x237))) & 0xffffffff), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x237) + uint64(x237))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x251 uint32
	cmovznzU32(&x251, (uint1(x246) & 0x1), uint32(0x0), x245)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x246) & 0x1), uint32(0x0), x247)
	var x253 uint32
	cmovznzU32(&x253, (uint1(x246) & 0x1), uint32(0x0), x248)
	x254 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x255 uint32
	cmovznzU32(&x255, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x244))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), x245, (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)), (uint32((uint64((^x245)) + uint64(0x1))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x248))) & 0xffffffff), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x248) + uint64(x248))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x262 uint32
	cmovznzU32(&x262, (uint1(x257) & 0x1), uint32(0x0), x256)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x257) & 0x1), uint32(0x0), x258)
	var x264 uint32
	cmovznzU32(&x264, (uint1(x257) & 0x1), uint32(0x0), x259)
	x265 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x266 uint32
	cmovznzU32(&x266, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x255))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), x256, (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)), (uint32((uint64((^x256)) + uint64(0x1))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x259))) & 0xffffffff), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x259) + uint64(x259))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x273 uint32
	cmovznzU32(&x273, (uint1(x268) & 0x1), uint32(0x0), x267)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x268) & 0x1), uint32(0x0), x269)
	var x275 uint32
	cmovznzU32(&x275, (uint1(x268) & 0x1), uint32(0x0), x270)
	x276 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x277 uint32
	cmovznzU32(&x277, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x266))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), x267, (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)), (uint32((uint64((^x267)) + uint64(0x1))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x270))) & 0xffffffff), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x270) + uint64(x270))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x284 uint32
	cmovznzU32(&x284, (uint1(x279) & 0x1), uint32(0x0), x278)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x279) & 0x1), uint32(0x0), x280)
	var x286 uint32
	cmovznzU32(&x286, (uint1(x279) & 0x1), uint32(0x0), x281)
	x287 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x288 uint32
	cmovznzU32(&x288, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x277))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), x278, (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)), (uint32((uint64((^x278)) + uint64(0x1))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x281))) & 0xffffffff), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x281) + uint64(x281))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x295 uint32
	cmovznzU32(&x295, (uint1(x290) & 0x1), uint32(0x0), x289)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x290) & 0x1), uint32(0x0), x291)
	var x297 uint32
	cmovznzU32(&x297, (uint1(x290) & 0x1), uint32(0x0), x292)
	x298 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x299 uint32
	cmovznzU32(&x299, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x288))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), x289, (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)), (uint32((uint64((^x289)) + uint64(0x1))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x292))) & 0xffffffff), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x292) + uint64(x292))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x306 uint32
	cmovznzU32(&x306, (uint1(x301) & 0x1), uint32(0x0), x300)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x301) & 0x1), uint32(0x0), x302)
	var x308 uint32
	cmovznzU32(&x308, (uint1(x301) & 0x1), uint32(0x0), x303)
	x309 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x310 uint32
	cmovznzU32(&x310, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x299))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), x300, (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)), (uint32((uint64((^x300)) + uint64(0x1))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x303))) & 0xffffffff), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x303) + uint64(x303))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x317 uint32
	cmovznzU32(&x317, (uint1(x312) & 0x1), uint32(0x0), x311)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x312) & 0x1), uint32(0x0), x313)
	var x319 uint32
	cmovznzU32(&x319, (uint1(x312) & 0x1), uint32(0x0), x314)
	x320 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x321 uint32
	cmovznzU32(&x321, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x310))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1)), (uint32((uint64((^x311)) + uint64(0x1))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x314))) & 0xffffffff), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x326 uint32
	cmovznzU32(&x326, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x314) + uint64(x314))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x327 uint32
	cmovznzU32(&x327, (uint1(x322) & 0x1), uint32(0x0), x323)
	var x328 uint32
	cmovznzU32(&x328, (uint1(x322) & 0x1), uint32(0x0), x324)
	x329 := (uint32((uint64(0x2) + uint64(x321))) & 0xffffffff)
	x330 := (uint32((uint64(x323) + uint64(x323))) & 0xffffffff)
	x331 := (uint32((uint64(x324) + uint64(x324))) & 0xffffffff)
	x332 := (uint32((uint64(x325) + uint64(x327))) & 0xffffffff)
	x333 := (uint32((uint64(x326) + uint64(x328))) & 0xffffffff)
	*out1 = x329
	*out2 = x330
	*out3 = x331
	*out4 = x332
	*out5 = x333
}

// UpdateFg computes a update_fg.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [0x0 ~> 0xffffffff]
//   arg4: [0x0 ~> 0xffffffff]
//   arg5: [0x0 ~> 0xffffffff]
//   arg6: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func UpdateFg(out1 *[8]uint32, out2 *[8]uint32, arg1 *[8]uint32, arg2 *[8]uint32, arg3 uint32, arg4 uint32, arg5 uint32, arg6 uint32) {
	var x1 uint32
	cmovznzU32(&x1, uint1((arg1[7] >> 31)), uint32(0x0), 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, uint1((arg3 >> 31)), uint32(0x0), 0xffffffff)
	var x3 uint32
	_, x3 = bits.Mul32(x2, arg1[0])
	var x5 uint32
	_, x5 = bits.Mul32(x2, arg1[1])
	var x7 uint32
	var x8 uint32
	x8, x7 = bits.Mul32(x2, arg1[0])
	var x9 uint32
	_, x9 = bits.Mul32(x2, arg1[2])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x2, arg1[1])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x2, arg1[0])
	var x15 uint32
	_, x15 = bits.Mul32(x2, arg1[3])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x2, arg1[2])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x2, arg1[1])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x2, arg1[0])
	var x23 uint32
	_, x23 = bits.Mul32(x2, arg1[4])
	var x25 uint32
	var x26 uint32
	x26, x25 = bits.Mul32(x2, arg1[3])
	var x27 uint32
	var x28 uint32
	x28, x27 = bits.Mul32(x2, arg1[2])
	var x29 uint32
	var x30 uint32
	x30, x29 = bits.Mul32(x2, arg1[1])
	var x31 uint32
	var x32 uint32
	x32, x31 = bits.Mul32(x2, arg1[0])
	var x33 uint32
	_, x33 = bits.Mul32(x2, arg1[5])
	var x35 uint32
	var x36 uint32
	x36, x35 = bits.Mul32(x2, arg1[4])
	var x37 uint32
	var x38 uint32
	x38, x37 = bits.Mul32(x2, arg1[3])
	var x39 uint32
	var x40 uint32
	x40, x39 = bits.Mul32(x2, arg1[2])
	var x41 uint32
	var x42 uint32
	x42, x41 = bits.Mul32(x2, arg1[1])
	var x43 uint32
	var x44 uint32
	x44, x43 = bits.Mul32(x2, arg1[0])
	var x45 uint32
	_, x45 = bits.Mul32(x2, arg1[6])
	var x47 uint32
	var x48 uint32
	x48, x47 = bits.Mul32(x2, arg1[5])
	var x49 uint32
	var x50 uint32
	x50, x49 = bits.Mul32(x2, arg1[4])
	var x51 uint32
	var x52 uint32
	x52, x51 = bits.Mul32(x2, arg1[3])
	var x53 uint32
	var x54 uint32
	x54, x53 = bits.Mul32(x2, arg1[2])
	var x55 uint32
	var x56 uint32
	x56, x55 = bits.Mul32(x2, arg1[1])
	var x57 uint32
	var x58 uint32
	x58, x57 = bits.Mul32(x2, arg1[0])
	var x59 uint32
	_, x59 = bits.Mul32(x2, arg1[7])
	var x61 uint32
	var x62 uint32
	x62, x61 = bits.Mul32(x2, arg1[6])
	var x63 uint32
	var x64 uint32
	x64, x63 = bits.Mul32(x2, arg1[5])
	var x65 uint32
	var x66 uint32
	x66, x65 = bits.Mul32(x2, arg1[4])
	var x67 uint32
	var x68 uint32
	x68, x67 = bits.Mul32(x2, arg1[3])
	var x69 uint32
	var x70 uint32
	x70, x69 = bits.Mul32(x2, arg1[2])
	var x71 uint32
	var x72 uint32
	x72, x71 = bits.Mul32(x2, arg1[1])
	var x73 uint32
	var x74 uint32
	x74, x73 = bits.Mul32(x2, arg1[0])
	var x75 uint32
	_, x75 = bits.Mul32(arg3, x1)
	var x77 uint32
	var x78 uint32
	x78, x77 = bits.Mul32(arg3, arg1[7])
	var x79 uint32
	var x80 uint32
	x80, x79 = bits.Mul32(arg3, arg1[6])
	var x81 uint32
	var x82 uint32
	x82, x81 = bits.Mul32(arg3, arg1[5])
	var x83 uint32
	var x84 uint32
	x84, x83 = bits.Mul32(arg3, arg1[4])
	var x85 uint32
	var x86 uint32
	x86, x85 = bits.Mul32(arg3, arg1[3])
	var x87 uint32
	var x88 uint32
	x88, x87 = bits.Mul32(arg3, arg1[2])
	var x89 uint32
	var x90 uint32
	x90, x89 = bits.Mul32(arg3, arg1[1])
	var x91 uint32
	var x92 uint32
	x92, x91 = bits.Mul32(arg3, arg1[0])
	var x93 uint32
	x93, _ = bits.Add32(x78, x3, uint32(0x0))
	var x95 uint32
	x95, _ = bits.Add32(x93, x5, uint32(0x0))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Add32(x80, x7, uint32(0x0))
	var x99 uint32
	x99, _ = bits.Add32(x95, x8, uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Add32(x97, x11, uint32(0x0))
	var x103 uint32
	x103, _ = bits.Add32(x99, x9, uint32(uint1(x102)))
	var x105 uint32
	var x106 uint32
	x105, x106 = bits.Add32(x82, x13, uint32(0x0))
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Add32(x101, x14, uint32(uint1(x106)))
	var x109 uint32
	x109, _ = bits.Add32(x103, x12, uint32(uint1(x108)))
	var x111 uint32
	var x112 uint32
	x111, x112 = bits.Add32(x105, x19, uint32(0x0))
	var x113 uint32
	var x114 uint32
	x113, x114 = bits.Add32(x107, x17, uint32(uint1(x112)))
	var x115 uint32
	x115, _ = bits.Add32(x109, x15, uint32(uint1(x114)))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x84, x21, uint32(0x0))
	var x119 uint32
	var x120 uint32
	x119, x120 = bits.Add32(x111, x22, uint32(uint1(x118)))
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x113, x20, uint32(uint1(x120)))
	var x123 uint32
	x123, _ = bits.Add32(x115, x18, uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x117, x29, uint32(0x0))
	var x127 uint32
	var x128 uint32
	x127, x128 = bits.Add32(x119, x27, uint32(uint1(x126)))
	var x129 uint32
	var x130 uint32
	x129, x130 = bits.Add32(x121, x25, uint32(uint1(x128)))
	var x131 uint32
	x131, _ = bits.Add32(x123, x23, uint32(uint1(x130)))
	var x133 uint32
	var x134 uint32
	x133, x134 = bits.Add32(x86, x31, uint32(0x0))
	var x135 uint32
	var x136 uint32
	x135, x136 = bits.Add32(x125, x32, uint32(uint1(x134)))
	var x137 uint32
	var x138 uint32
	x137, x138 = bits.Add32(x127, x30, uint32(uint1(x136)))
	var x139 uint32
	var x140 uint32
	x139, x140 = bits.Add32(x129, x28, uint32(uint1(x138)))
	var x141 uint32
	x141, _ = bits.Add32(x131, x26, uint32(uint1(x140)))
	var x143 uint32
	var x144 uint32
	x143, x144 = bits.Add32(x133, x41, uint32(0x0))
	var x145 uint32
	var x146 uint32
	x145, x146 = bits.Add32(x135, x39, uint32(uint1(x144)))
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x137, x37, uint32(uint1(x146)))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x139, x35, uint32(uint1(x148)))
	var x151 uint32
	x151, _ = bits.Add32(x141, x33, uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x88, x43, uint32(0x0))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x143, x44, uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x145, x42, uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x147, x40, uint32(uint1(x158)))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x149, x38, uint32(uint1(x160)))
	var x163 uint32
	x163, _ = bits.Add32(x151, x36, uint32(uint1(x162)))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Add32(x153, x55, uint32(0x0))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x155, x53, uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x157, x51, uint32(uint1(x168)))
	var x171 uint32
	var x172 uint32
	x171, x172 = bits.Add32(x159, x49, uint32(uint1(x170)))
	var x173 uint32
	var x174 uint32
	x173, x174 = bits.Add32(x161, x47, uint32(uint1(x172)))
	var x175 uint32
	x175, _ = bits.Add32(x163, x45, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x90, x57, uint32(0x0))
	var x179 uint32
	var x180 uint32
	x179, x180 = bits.Add32(x165, x58, uint32(uint1(x178)))
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x167, x56, uint32(uint1(x180)))
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x169, x54, uint32(uint1(x182)))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x171, x52, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x173, x50, uint32(uint1(x186)))
	var x189 uint32
	x189, _ = bits.Add32(x175, x48, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x177, x71, uint32(0x0))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x179, x69, uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x181, x67, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x183, x65, uint32(uint1(x196)))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x185, x63, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x187, x61, uint32(uint1(x200)))
	var x203 uint32
	x203, _ = bits.Add32(x189, x59, uint32(uint1(x202)))
	var x205 uint32
	var x206 uint32
	x205, x206 = bits.Add32(x92, x73, uint32(0x0))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x191, x74, uint32(uint1(x206)))
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x193, x72, uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x195, x70, uint32(uint1(x210)))
	var x213 uint32
	var x214 uint32
	x213, x214 = bits.Add32(x197, x68, uint32(uint1(x212)))
	var x215 uint32
	var x216 uint32
	x215, x216 = bits.Add32(x199, x66, uint32(uint1(x214)))
	var x217 uint32
	var x218 uint32
	x217, x218 = bits.Add32(x201, x64, uint32(uint1(x216)))
	var x219 uint32
	x219, _ = bits.Add32(x203, x62, uint32(uint1(x218)))
	var x221 uint32
	var x222 uint32
	x221, x222 = bits.Add32(x205, x89, uint32(0x0))
	var x223 uint32
	var x224 uint32
	x223, x224 = bits.Add32(x207, x87, uint32(uint1(x222)))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x209, x85, uint32(uint1(x224)))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x211, x83, uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x213, x81, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x215, x79, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x217, x77, uint32(uint1(x232)))
	var x235 uint32
	x235, _ = bits.Add32(x219, x75, uint32(uint1(x234)))
	var x237 uint32
	cmovznzU32(&x237, uint1((arg2[7] >> 31)), uint32(0x0), 0xffffffff)
	var x238 uint32
	cmovznzU32(&x238, uint1((arg4 >> 31)), uint32(0x0), 0xffffffff)
	var x239 uint32
	_, x239 = bits.Mul32(x238, arg2[0])
	var x241 uint32
	_, x241 = bits.Mul32(x238, arg2[1])
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x238, arg2[0])
	var x245 uint32
	_, x245 = bits.Mul32(x238, arg2[2])
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x238, arg2[1])
	var x249 uint32
	var x250 uint32
	x250, x249 = bits.Mul32(x238, arg2[0])
	var x251 uint32
	_, x251 = bits.Mul32(x238, arg2[3])
	var x253 uint32
	var x254 uint32
	x254, x253 = bits.Mul32(x238, arg2[2])
	var x255 uint32
	var x256 uint32
	x256, x255 = bits.Mul32(x238, arg2[1])
	var x257 uint32
	var x258 uint32
	x258, x257 = bits.Mul32(x238, arg2[0])
	var x259 uint32
	_, x259 = bits.Mul32(x238, arg2[4])
	var x261 uint32
	var x262 uint32
	x262, x261 = bits.Mul32(x238, arg2[3])
	var x263 uint32
	var x264 uint32
	x264, x263 = bits.Mul32(x238, arg2[2])
	var x265 uint32
	var x266 uint32
	x266, x265 = bits.Mul32(x238, arg2[1])
	var x267 uint32
	var x268 uint32
	x268, x267 = bits.Mul32(x238, arg2[0])
	var x269 uint32
	_, x269 = bits.Mul32(x238, arg2[5])
	var x271 uint32
	var x272 uint32
	x272, x271 = bits.Mul32(x238, arg2[4])
	var x273 uint32
	var x274 uint32
	x274, x273 = bits.Mul32(x238, arg2[3])
	var x275 uint32
	var x276 uint32
	x276, x275 = bits.Mul32(x238, arg2[2])
	var x277 uint32
	var x278 uint32
	x278, x277 = bits.Mul32(x238, arg2[1])
	var x279 uint32
	var x280 uint32
	x280, x279 = bits.Mul32(x238, arg2[0])
	var x281 uint32
	_, x281 = bits.Mul32(x238, arg2[6])
	var x283 uint32
	var x284 uint32
	x284, x283 = bits.Mul32(x238, arg2[5])
	var x285 uint32
	var x286 uint32
	x286, x285 = bits.Mul32(x238, arg2[4])
	var x287 uint32
	var x288 uint32
	x288, x287 = bits.Mul32(x238, arg2[3])
	var x289 uint32
	var x290 uint32
	x290, x289 = bits.Mul32(x238, arg2[2])
	var x291 uint32
	var x292 uint32
	x292, x291 = bits.Mul32(x238, arg2[1])
	var x293 uint32
	var x294 uint32
	x294, x293 = bits.Mul32(x238, arg2[0])
	var x295 uint32
	_, x295 = bits.Mul32(x238, arg2[7])
	var x297 uint32
	var x298 uint32
	x298, x297 = bits.Mul32(x238, arg2[6])
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x238, arg2[5])
	var x301 uint32
	var x302 uint32
	x302, x301 = bits.Mul32(x238, arg2[4])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x238, arg2[3])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x238, arg2[2])
	var x307 uint32
	var x308 uint32
	x308, x307 = bits.Mul32(x238, arg2[1])
	var x309 uint32
	var x310 uint32
	x310, x309 = bits.Mul32(x238, arg2[0])
	var x311 uint32
	_, x311 = bits.Mul32(arg4, x237)
	var x313 uint32
	var x314 uint32
	x314, x313 = bits.Mul32(arg4, arg2[7])
	var x315 uint32
	var x316 uint32
	x316, x315 = bits.Mul32(arg4, arg2[6])
	var x317 uint32
	var x318 uint32
	x318, x317 = bits.Mul32(arg4, arg2[5])
	var x319 uint32
	var x320 uint32
	x320, x319 = bits.Mul32(arg4, arg2[4])
	var x321 uint32
	var x322 uint32
	x322, x321 = bits.Mul32(arg4, arg2[3])
	var x323 uint32
	var x324 uint32
	x324, x323 = bits.Mul32(arg4, arg2[2])
	var x325 uint32
	var x326 uint32
	x326, x325 = bits.Mul32(arg4, arg2[1])
	var x327 uint32
	var x328 uint32
	x328, x327 = bits.Mul32(arg4, arg2[0])
	var x329 uint32
	x329, _ = bits.Add32(x314, x239, uint32(0x0))
	var x331 uint32
	x331, _ = bits.Add32(x329, x241, uint32(0x0))
	var x333 uint32
	var x334 uint32
	x333, x334 = bits.Add32(x316, x243, uint32(0x0))
	var x335 uint32
	x335, _ = bits.Add32(x331, x244, uint32(uint1(x334)))
	var x337 uint32
	var x338 uint32
	x337, x338 = bits.Add32(x333, x247, uint32(0x0))
	var x339 uint32
	x339, _ = bits.Add32(x335, x245, uint32(uint1(x338)))
	var x341 uint32
	var x342 uint32
	x341, x342 = bits.Add32(x318, x249, uint32(0x0))
	var x343 uint32
	var x344 uint32
	x343, x344 = bits.Add32(x337, x250, uint32(uint1(x342)))
	var x345 uint32
	x345, _ = bits.Add32(x339, x248, uint32(uint1(x344)))
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x341, x255, uint32(0x0))
	var x349 uint32
	var x350 uint32
	x349, x350 = bits.Add32(x343, x253, uint32(uint1(x348)))
	var x351 uint32
	x351, _ = bits.Add32(x345, x251, uint32(uint1(x350)))
	var x353 uint32
	var x354 uint32
	x353, x354 = bits.Add32(x320, x257, uint32(0x0))
	var x355 uint32
	var x356 uint32
	x355, x356 = bits.Add32(x347, x258, uint32(uint1(x354)))
	var x357 uint32
	var x358 uint32
	x357, x358 = bits.Add32(x349, x256, uint32(uint1(x356)))
	var x359 uint32
	x359, _ = bits.Add32(x351, x254, uint32(uint1(x358)))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x353, x265, uint32(0x0))
	var x363 uint32
	var x364 uint32
	x363, x364 = bits.Add32(x355, x263, uint32(uint1(x362)))
	var x365 uint32
	var x366 uint32
	x365, x366 = bits.Add32(x357, x261, uint32(uint1(x364)))
	var x367 uint32
	x367, _ = bits.Add32(x359, x259, uint32(uint1(x366)))
	var x369 uint32
	var x370 uint32
	x369, x370 = bits.Add32(x322, x267, uint32(0x0))
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x361, x268, uint32(uint1(x370)))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x363, x266, uint32(uint1(x372)))
	var x375 uint32
	var x376 uint32
	x375, x376 = bits.Add32(x365, x264, uint32(uint1(x374)))
	var x377 uint32
	x377, _ = bits.Add32(x367, x262, uint32(uint1(x376)))
	var x379 uint32
	var x380 uint32
	x379, x380 = bits.Add32(x369, x277, uint32(0x0))
	var x381 uint32
	var x382 uint32
	x381, x382 = bits.Add32(x371, x275, uint32(uint1(x380)))
	var x383 uint32
	var x384 uint32
	x383, x384 = bits.Add32(x373, x273, uint32(uint1(x382)))
	var x385 uint32
	var x386 uint32
	x385, x386 = bits.Add32(x375, x271, uint32(uint1(x384)))
	var x387 uint32
	x387, _ = bits.Add32(x377, x269, uint32(uint1(x386)))
	var x389 uint32
	var x390 uint32
	x389, x390 = bits.Add32(x324, x279, uint32(0x0))
	var x391 uint32
	var x392 uint32
	x391, x392 = bits.Add32(x379, x280, uint32(uint1(x390)))
	var x393 uint32
	var x394 uint32
	x393, x394 = bits.Add32(x381, x278, uint32(uint1(x392)))
	var x395 uint32
	var x396 uint32
	x395, x396 = bits.Add32(x383, x276, uint32(uint1(x394)))
	var x397 uint32
	var x398 uint32
	x397, x398 = bits.Add32(x385, x274, uint32(uint1(x396)))
	var x399 uint32
	x399, _ = bits.Add32(x387, x272, uint32(uint1(x398)))
	var x401 uint32
	var x402 uint32
	x401, x402 = bits.Add32(x389, x291, uint32(0x0))
	var x403 uint32
	var x404 uint32
	x403, x404 = bits.Add32(x391, x289, uint32(uint1(x402)))
	var x405 uint32
	var x406 uint32
	x405, x406 = bits.Add32(x393, x287, uint32(uint1(x404)))
	var x407 uint32
	var x408 uint32
	x407, x408 = bits.Add32(x395, x285, uint32(uint1(x406)))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x397, x283, uint32(uint1(x408)))
	var x411 uint32
	x411, _ = bits.Add32(x399, x281, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x326, x293, uint32(0x0))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x401, x294, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x403, x292, uint32(uint1(x416)))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x405, x290, uint32(uint1(x418)))
	var x421 uint32
	var x422 uint32
	x421, x422 = bits.Add32(x407, x288, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x409, x286, uint32(uint1(x422)))
	var x425 uint32
	x425, _ = bits.Add32(x411, x284, uint32(uint1(x424)))
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x413, x307, uint32(0x0))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x415, x305, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x417, x303, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x419, x301, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x421, x299, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x423, x297, uint32(uint1(x436)))
	var x439 uint32
	x439, _ = bits.Add32(x425, x295, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x328, x309, uint32(0x0))
	var x443 uint32
	var x444 uint32
	x443, x444 = bits.Add32(x427, x310, uint32(uint1(x442)))
	var x445 uint32
	var x446 uint32
	x445, x446 = bits.Add32(x429, x308, uint32(uint1(x444)))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x431, x306, uint32(uint1(x446)))
	var x449 uint32
	var x450 uint32
	x449, x450 = bits.Add32(x433, x304, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x435, x302, uint32(uint1(x450)))
	var x453 uint32
	var x454 uint32
	x453, x454 = bits.Add32(x437, x300, uint32(uint1(x452)))
	var x455 uint32
	x455, _ = bits.Add32(x439, x298, uint32(uint1(x454)))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x441, x325, uint32(0x0))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x443, x323, uint32(uint1(x458)))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x445, x321, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x447, x319, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x449, x317, uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x451, x315, uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x453, x313, uint32(uint1(x468)))
	var x471 uint32
	x471, _ = bits.Add32(x455, x311, uint32(uint1(x470)))
	var x473 uint32
	cmovznzU32(&x473, uint1((arg1[7] >> 31)), uint32(0x0), 0xffffffff)
	var x474 uint32
	cmovznzU32(&x474, uint1((arg5 >> 31)), uint32(0x0), 0xffffffff)
	var x475 uint32
	_, x475 = bits.Mul32(x474, arg1[0])
	var x477 uint32
	_, x477 = bits.Mul32(x474, arg1[1])
	var x479 uint32
	var x480 uint32
	x480, x479 = bits.Mul32(x474, arg1[0])
	var x481 uint32
	_, x481 = bits.Mul32(x474, arg1[2])
	var x483 uint32
	var x484 uint32
	x484, x483 = bits.Mul32(x474, arg1[1])
	var x485 uint32
	var x486 uint32
	x486, x485 = bits.Mul32(x474, arg1[0])
	var x487 uint32
	_, x487 = bits.Mul32(x474, arg1[3])
	var x489 uint32
	var x490 uint32
	x490, x489 = bits.Mul32(x474, arg1[2])
	var x491 uint32
	var x492 uint32
	x492, x491 = bits.Mul32(x474, arg1[1])
	var x493 uint32
	var x494 uint32
	x494, x493 = bits.Mul32(x474, arg1[0])
	var x495 uint32
	_, x495 = bits.Mul32(x474, arg1[4])
	var x497 uint32
	var x498 uint32
	x498, x497 = bits.Mul32(x474, arg1[3])
	var x499 uint32
	var x500 uint32
	x500, x499 = bits.Mul32(x474, arg1[2])
	var x501 uint32
	var x502 uint32
	x502, x501 = bits.Mul32(x474, arg1[1])
	var x503 uint32
	var x504 uint32
	x504, x503 = bits.Mul32(x474, arg1[0])
	var x505 uint32
	_, x505 = bits.Mul32(x474, arg1[5])
	var x507 uint32
	var x508 uint32
	x508, x507 = bits.Mul32(x474, arg1[4])
	var x509 uint32
	var x510 uint32
	x510, x509 = bits.Mul32(x474, arg1[3])
	var x511 uint32
	var x512 uint32
	x512, x511 = bits.Mul32(x474, arg1[2])
	var x513 uint32
	var x514 uint32
	x514, x513 = bits.Mul32(x474, arg1[1])
	var x515 uint32
	var x516 uint32
	x516, x515 = bits.Mul32(x474, arg1[0])
	var x517 uint32
	_, x517 = bits.Mul32(x474, arg1[6])
	var x519 uint32
	var x520 uint32
	x520, x519 = bits.Mul32(x474, arg1[5])
	var x521 uint32
	var x522 uint32
	x522, x521 = bits.Mul32(x474, arg1[4])
	var x523 uint32
	var x524 uint32
	x524, x523 = bits.Mul32(x474, arg1[3])
	var x525 uint32
	var x526 uint32
	x526, x525 = bits.Mul32(x474, arg1[2])
	var x527 uint32
	var x528 uint32
	x528, x527 = bits.Mul32(x474, arg1[1])
	var x529 uint32
	var x530 uint32
	x530, x529 = bits.Mul32(x474, arg1[0])
	var x531 uint32
	_, x531 = bits.Mul32(x474, arg1[7])
	var x533 uint32
	var x534 uint32
	x534, x533 = bits.Mul32(x474, arg1[6])
	var x535 uint32
	var x536 uint32
	x536, x535 = bits.Mul32(x474, arg1[5])
	var x537 uint32
	var x538 uint32
	x538, x537 = bits.Mul32(x474, arg1[4])
	var x539 uint32
	var x540 uint32
	x540, x539 = bits.Mul32(x474, arg1[3])
	var x541 uint32
	var x542 uint32
	x542, x541 = bits.Mul32(x474, arg1[2])
	var x543 uint32
	var x544 uint32
	x544, x543 = bits.Mul32(x474, arg1[1])
	var x545 uint32
	var x546 uint32
	x546, x545 = bits.Mul32(x474, arg1[0])
	var x547 uint32
	_, x547 = bits.Mul32(arg5, x473)
	var x549 uint32
	var x550 uint32
	x550, x549 = bits.Mul32(arg5, arg1[7])
	var x551 uint32
	var x552 uint32
	x552, x551 = bits.Mul32(arg5, arg1[6])
	var x553 uint32
	var x554 uint32
	x554, x553 = bits.Mul32(arg5, arg1[5])
	var x555 uint32
	var x556 uint32
	x556, x555 = bits.Mul32(arg5, arg1[4])
	var x557 uint32
	var x558 uint32
	x558, x557 = bits.Mul32(arg5, arg1[3])
	var x559 uint32
	var x560 uint32
	x560, x559 = bits.Mul32(arg5, arg1[2])
	var x561 uint32
	var x562 uint32
	x562, x561 = bits.Mul32(arg5, arg1[1])
	var x563 uint32
	var x564 uint32
	x564, x563 = bits.Mul32(arg5, arg1[0])
	var x565 uint32
	x565, _ = bits.Add32(x550, x475, uint32(0x0))
	var x567 uint32
	x567, _ = bits.Add32(x565, x477, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x552, x479, uint32(0x0))
	var x571 uint32
	x571, _ = bits.Add32(x567, x480, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x569, x483, uint32(0x0))
	var x575 uint32
	x575, _ = bits.Add32(x571, x481, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x554, x485, uint32(0x0))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x573, x486, uint32(uint1(x578)))
	var x581 uint32
	x581, _ = bits.Add32(x575, x484, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x577, x491, uint32(0x0))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x579, x489, uint32(uint1(x584)))
	var x587 uint32
	x587, _ = bits.Add32(x581, x487, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x556, x493, uint32(0x0))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x583, x494, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x585, x492, uint32(uint1(x592)))
	var x595 uint32
	x595, _ = bits.Add32(x587, x490, uint32(uint1(x594)))
	var x597 uint32
	var x598 uint32
	x597, x598 = bits.Add32(x589, x501, uint32(0x0))
	var x599 uint32
	var x600 uint32
	x599, x600 = bits.Add32(x591, x499, uint32(uint1(x598)))
	var x601 uint32
	var x602 uint32
	x601, x602 = bits.Add32(x593, x497, uint32(uint1(x600)))
	var x603 uint32
	x603, _ = bits.Add32(x595, x495, uint32(uint1(x602)))
	var x605 uint32
	var x606 uint32
	x605, x606 = bits.Add32(x558, x503, uint32(0x0))
	var x607 uint32
	var x608 uint32
	x607, x608 = bits.Add32(x597, x504, uint32(uint1(x606)))
	var x609 uint32
	var x610 uint32
	x609, x610 = bits.Add32(x599, x502, uint32(uint1(x608)))
	var x611 uint32
	var x612 uint32
	x611, x612 = bits.Add32(x601, x500, uint32(uint1(x610)))
	var x613 uint32
	x613, _ = bits.Add32(x603, x498, uint32(uint1(x612)))
	var x615 uint32
	var x616 uint32
	x615, x616 = bits.Add32(x605, x513, uint32(0x0))
	var x617 uint32
	var x618 uint32
	x617, x618 = bits.Add32(x607, x511, uint32(uint1(x616)))
	var x619 uint32
	var x620 uint32
	x619, x620 = bits.Add32(x609, x509, uint32(uint1(x618)))
	var x621 uint32
	var x622 uint32
	x621, x622 = bits.Add32(x611, x507, uint32(uint1(x620)))
	var x623 uint32
	x623, _ = bits.Add32(x613, x505, uint32(uint1(x622)))
	var x625 uint32
	var x626 uint32
	x625, x626 = bits.Add32(x560, x515, uint32(0x0))
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x615, x516, uint32(uint1(x626)))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x617, x514, uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x619, x512, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x621, x510, uint32(uint1(x632)))
	var x635 uint32
	x635, _ = bits.Add32(x623, x508, uint32(uint1(x634)))
	var x637 uint32
	var x638 uint32
	x637, x638 = bits.Add32(x625, x527, uint32(0x0))
	var x639 uint32
	var x640 uint32
	x639, x640 = bits.Add32(x627, x525, uint32(uint1(x638)))
	var x641 uint32
	var x642 uint32
	x641, x642 = bits.Add32(x629, x523, uint32(uint1(x640)))
	var x643 uint32
	var x644 uint32
	x643, x644 = bits.Add32(x631, x521, uint32(uint1(x642)))
	var x645 uint32
	var x646 uint32
	x645, x646 = bits.Add32(x633, x519, uint32(uint1(x644)))
	var x647 uint32
	x647, _ = bits.Add32(x635, x517, uint32(uint1(x646)))
	var x649 uint32
	var x650 uint32
	x649, x650 = bits.Add32(x562, x529, uint32(0x0))
	var x651 uint32
	var x652 uint32
	x651, x652 = bits.Add32(x637, x530, uint32(uint1(x650)))
	var x653 uint32
	var x654 uint32
	x653, x654 = bits.Add32(x639, x528, uint32(uint1(x652)))
	var x655 uint32
	var x656 uint32
	x655, x656 = bits.Add32(x641, x526, uint32(uint1(x654)))
	var x657 uint32
	var x658 uint32
	x657, x658 = bits.Add32(x643, x524, uint32(uint1(x656)))
	var x659 uint32
	var x660 uint32
	x659, x660 = bits.Add32(x645, x522, uint32(uint1(x658)))
	var x661 uint32
	x661, _ = bits.Add32(x647, x520, uint32(uint1(x660)))
	var x663 uint32
	var x664 uint32
	x663, x664 = bits.Add32(x649, x543, uint32(0x0))
	var x665 uint32
	var x666 uint32
	x665, x666 = bits.Add32(x651, x541, uint32(uint1(x664)))
	var x667 uint32
	var x668 uint32
	x667, x668 = bits.Add32(x653, x539, uint32(uint1(x666)))
	var x669 uint32
	var x670 uint32
	x669, x670 = bits.Add32(x655, x537, uint32(uint1(x668)))
	var x671 uint32
	var x672 uint32
	x671, x672 = bits.Add32(x657, x535, uint32(uint1(x670)))
	var x673 uint32
	var x674 uint32
	x673, x674 = bits.Add32(x659, x533, uint32(uint1(x672)))
	var x675 uint32
	x675, _ = bits.Add32(x661, x531, uint32(uint1(x674)))
	var x677 uint32
	var x678 uint32
	x677, x678 = bits.Add32(x564, x545, uint32(0x0))
	var x679 uint32
	var x680 uint32
	x679, x680 = bits.Add32(x663, x546, uint32(uint1(x678)))
	var x681 uint32
	var x682 uint32
	x681, x682 = bits.Add32(x665, x544, uint32(uint1(x680)))
	var x683 uint32
	var x684 uint32
	x683, x684 = bits.Add32(x667, x542, uint32(uint1(x682)))
	var x685 uint32
	var x686 uint32
	x685, x686 = bits.Add32(x669, x540, uint32(uint1(x684)))
	var x687 uint32
	var x688 uint32
	x687, x688 = bits.Add32(x671, x538, uint32(uint1(x686)))
	var x689 uint32
	var x690 uint32
	x689, x690 = bits.Add32(x673, x536, uint32(uint1(x688)))
	var x691 uint32
	x691, _ = bits.Add32(x675, x534, uint32(uint1(x690)))
	var x693 uint32
	var x694 uint32
	x693, x694 = bits.Add32(x677, x561, uint32(0x0))
	var x695 uint32
	var x696 uint32
	x695, x696 = bits.Add32(x679, x559, uint32(uint1(x694)))
	var x697 uint32
	var x698 uint32
	x697, x698 = bits.Add32(x681, x557, uint32(uint1(x696)))
	var x699 uint32
	var x700 uint32
	x699, x700 = bits.Add32(x683, x555, uint32(uint1(x698)))
	var x701 uint32
	var x702 uint32
	x701, x702 = bits.Add32(x685, x553, uint32(uint1(x700)))
	var x703 uint32
	var x704 uint32
	x703, x704 = bits.Add32(x687, x551, uint32(uint1(x702)))
	var x705 uint32
	var x706 uint32
	x705, x706 = bits.Add32(x689, x549, uint32(uint1(x704)))
	var x707 uint32
	x707, _ = bits.Add32(x691, x547, uint32(uint1(x706)))
	var x709 uint32
	cmovznzU32(&x709, uint1((arg2[7] >> 31)), uint32(0x0), 0xffffffff)
	var x710 uint32
	cmovznzU32(&x710, uint1((arg6 >> 31)), uint32(0x0), 0xffffffff)
	var x711 uint32
	_, x711 = bits.Mul32(x710, arg2[0])
	var x713 uint32
	_, x713 = bits.Mul32(x710, arg2[1])
	var x715 uint32
	var x716 uint32
	x716, x715 = bits.Mul32(x710, arg2[0])
	var x717 uint32
	_, x717 = bits.Mul32(x710, arg2[2])
	var x719 uint32
	var x720 uint32
	x720, x719 = bits.Mul32(x710, arg2[1])
	var x721 uint32
	var x722 uint32
	x722, x721 = bits.Mul32(x710, arg2[0])
	var x723 uint32
	_, x723 = bits.Mul32(x710, arg2[3])
	var x725 uint32
	var x726 uint32
	x726, x725 = bits.Mul32(x710, arg2[2])
	var x727 uint32
	var x728 uint32
	x728, x727 = bits.Mul32(x710, arg2[1])
	var x729 uint32
	var x730 uint32
	x730, x729 = bits.Mul32(x710, arg2[0])
	var x731 uint32
	_, x731 = bits.Mul32(x710, arg2[4])
	var x733 uint32
	var x734 uint32
	x734, x733 = bits.Mul32(x710, arg2[3])
	var x735 uint32
	var x736 uint32
	x736, x735 = bits.Mul32(x710, arg2[2])
	var x737 uint32
	var x738 uint32
	x738, x737 = bits.Mul32(x710, arg2[1])
	var x739 uint32
	var x740 uint32
	x740, x739 = bits.Mul32(x710, arg2[0])
	var x741 uint32
	_, x741 = bits.Mul32(x710, arg2[5])
	var x743 uint32
	var x744 uint32
	x744, x743 = bits.Mul32(x710, arg2[4])
	var x745 uint32
	var x746 uint32
	x746, x745 = bits.Mul32(x710, arg2[3])
	var x747 uint32
	var x748 uint32
	x748, x747 = bits.Mul32(x710, arg2[2])
	var x749 uint32
	var x750 uint32
	x750, x749 = bits.Mul32(x710, arg2[1])
	var x751 uint32
	var x752 uint32
	x752, x751 = bits.Mul32(x710, arg2[0])
	var x753 uint32
	_, x753 = bits.Mul32(x710, arg2[6])
	var x755 uint32
	var x756 uint32
	x756, x755 = bits.Mul32(x710, arg2[5])
	var x757 uint32
	var x758 uint32
	x758, x757 = bits.Mul32(x710, arg2[4])
	var x759 uint32
	var x760 uint32
	x760, x759 = bits.Mul32(x710, arg2[3])
	var x761 uint32
	var x762 uint32
	x762, x761 = bits.Mul32(x710, arg2[2])
	var x763 uint32
	var x764 uint32
	x764, x763 = bits.Mul32(x710, arg2[1])
	var x765 uint32
	var x766 uint32
	x766, x765 = bits.Mul32(x710, arg2[0])
	var x767 uint32
	_, x767 = bits.Mul32(x710, arg2[7])
	var x769 uint32
	var x770 uint32
	x770, x769 = bits.Mul32(x710, arg2[6])
	var x771 uint32
	var x772 uint32
	x772, x771 = bits.Mul32(x710, arg2[5])
	var x773 uint32
	var x774 uint32
	x774, x773 = bits.Mul32(x710, arg2[4])
	var x775 uint32
	var x776 uint32
	x776, x775 = bits.Mul32(x710, arg2[3])
	var x777 uint32
	var x778 uint32
	x778, x777 = bits.Mul32(x710, arg2[2])
	var x779 uint32
	var x780 uint32
	x780, x779 = bits.Mul32(x710, arg2[1])
	var x781 uint32
	var x782 uint32
	x782, x781 = bits.Mul32(x710, arg2[0])
	var x783 uint32
	_, x783 = bits.Mul32(arg6, x709)
	var x785 uint32
	var x786 uint32
	x786, x785 = bits.Mul32(arg6, arg2[7])
	var x787 uint32
	var x788 uint32
	x788, x787 = bits.Mul32(arg6, arg2[6])
	var x789 uint32
	var x790 uint32
	x790, x789 = bits.Mul32(arg6, arg2[5])
	var x791 uint32
	var x792 uint32
	x792, x791 = bits.Mul32(arg6, arg2[4])
	var x793 uint32
	var x794 uint32
	x794, x793 = bits.Mul32(arg6, arg2[3])
	var x795 uint32
	var x796 uint32
	x796, x795 = bits.Mul32(arg6, arg2[2])
	var x797 uint32
	var x798 uint32
	x798, x797 = bits.Mul32(arg6, arg2[1])
	var x799 uint32
	var x800 uint32
	x800, x799 = bits.Mul32(arg6, arg2[0])
	var x801 uint32
	x801, _ = bits.Add32(x786, x711, uint32(0x0))
	var x803 uint32
	x803, _ = bits.Add32(x801, x713, uint32(0x0))
	var x805 uint32
	var x806 uint32
	x805, x806 = bits.Add32(x788, x715, uint32(0x0))
	var x807 uint32
	x807, _ = bits.Add32(x803, x716, uint32(uint1(x806)))
	var x809 uint32
	var x810 uint32
	x809, x810 = bits.Add32(x805, x719, uint32(0x0))
	var x811 uint32
	x811, _ = bits.Add32(x807, x717, uint32(uint1(x810)))
	var x813 uint32
	var x814 uint32
	x813, x814 = bits.Add32(x790, x721, uint32(0x0))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x809, x722, uint32(uint1(x814)))
	var x817 uint32
	x817, _ = bits.Add32(x811, x720, uint32(uint1(x816)))
	var x819 uint32
	var x820 uint32
	x819, x820 = bits.Add32(x813, x727, uint32(0x0))
	var x821 uint32
	var x822 uint32
	x821, x822 = bits.Add32(x815, x725, uint32(uint1(x820)))
	var x823 uint32
	x823, _ = bits.Add32(x817, x723, uint32(uint1(x822)))
	var x825 uint32
	var x826 uint32
	x825, x826 = bits.Add32(x792, x729, uint32(0x0))
	var x827 uint32
	var x828 uint32
	x827, x828 = bits.Add32(x819, x730, uint32(uint1(x826)))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x821, x728, uint32(uint1(x828)))
	var x831 uint32
	x831, _ = bits.Add32(x823, x726, uint32(uint1(x830)))
	var x833 uint32
	var x834 uint32
	x833, x834 = bits.Add32(x825, x737, uint32(0x0))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x827, x735, uint32(uint1(x834)))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x829, x733, uint32(uint1(x836)))
	var x839 uint32
	x839, _ = bits.Add32(x831, x731, uint32(uint1(x838)))
	var x841 uint32
	var x842 uint32
	x841, x842 = bits.Add32(x794, x739, uint32(0x0))
	var x843 uint32
	var x844 uint32
	x843, x844 = bits.Add32(x833, x740, uint32(uint1(x842)))
	var x845 uint32
	var x846 uint32
	x845, x846 = bits.Add32(x835, x738, uint32(uint1(x844)))
	var x847 uint32
	var x848 uint32
	x847, x848 = bits.Add32(x837, x736, uint32(uint1(x846)))
	var x849 uint32
	x849, _ = bits.Add32(x839, x734, uint32(uint1(x848)))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x841, x749, uint32(0x0))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x843, x747, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x845, x745, uint32(uint1(x854)))
	var x857 uint32
	var x858 uint32
	x857, x858 = bits.Add32(x847, x743, uint32(uint1(x856)))
	var x859 uint32
	x859, _ = bits.Add32(x849, x741, uint32(uint1(x858)))
	var x861 uint32
	var x862 uint32
	x861, x862 = bits.Add32(x796, x751, uint32(0x0))
	var x863 uint32
	var x864 uint32
	x863, x864 = bits.Add32(x851, x752, uint32(uint1(x862)))
	var x865 uint32
	var x866 uint32
	x865, x866 = bits.Add32(x853, x750, uint32(uint1(x864)))
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x855, x748, uint32(uint1(x866)))
	var x869 uint32
	var x870 uint32
	x869, x870 = bits.Add32(x857, x746, uint32(uint1(x868)))
	var x871 uint32
	x871, _ = bits.Add32(x859, x744, uint32(uint1(x870)))
	var x873 uint32
	var x874 uint32
	x873, x874 = bits.Add32(x861, x763, uint32(0x0))
	var x875 uint32
	var x876 uint32
	x875, x876 = bits.Add32(x863, x761, uint32(uint1(x874)))
	var x877 uint32
	var x878 uint32
	x877, x878 = bits.Add32(x865, x759, uint32(uint1(x876)))
	var x879 uint32
	var x880 uint32
	x879, x880 = bits.Add32(x867, x757, uint32(uint1(x878)))
	var x881 uint32
	var x882 uint32
	x881, x882 = bits.Add32(x869, x755, uint32(uint1(x880)))
	var x883 uint32
	x883, _ = bits.Add32(x871, x753, uint32(uint1(x882)))
	var x885 uint32
	var x886 uint32
	x885, x886 = bits.Add32(x798, x765, uint32(0x0))
	var x887 uint32
	var x888 uint32
	x887, x888 = bits.Add32(x873, x766, uint32(uint1(x886)))
	var x889 uint32
	var x890 uint32
	x889, x890 = bits.Add32(x875, x764, uint32(uint1(x888)))
	var x891 uint32
	var x892 uint32
	x891, x892 = bits.Add32(x877, x762, uint32(uint1(x890)))
	var x893 uint32
	var x894 uint32
	x893, x894 = bits.Add32(x879, x760, uint32(uint1(x892)))
	var x895 uint32
	var x896 uint32
	x895, x896 = bits.Add32(x881, x758, uint32(uint1(x894)))
	var x897 uint32
	x897, _ = bits.Add32(x883, x756, uint32(uint1(x896)))
	var x899 uint32
	var x900 uint32
	x899, x900 = bits.Add32(x885, x779, uint32(0x0))
	var x901 uint32
	var x902 uint32
	x901, x902 = bits.Add32(x887, x777, uint32(uint1(x900)))
	var x903 uint32
	var x904 uint32
	x903, x904 = bits.Add32(x889, x775, uint32(uint1(x902)))
	var x905 uint32
	var x906 uint32
	x905, x906 = bits.Add32(x891, x773, uint32(uint1(x904)))
	var x907 uint32
	var x908 uint32
	x907, x908 = bits.Add32(x893, x771, uint32(uint1(x906)))
	var x909 uint32
	var x910 uint32
	x909, x910 = bits.Add32(x895, x769, uint32(uint1(x908)))
	var x911 uint32
	x911, _ = bits.Add32(x897, x767, uint32(uint1(x910)))
	var x913 uint32
	var x914 uint32
	x913, x914 = bits.Add32(x800, x781, uint32(0x0))
	var x915 uint32
	var x916 uint32
	x915, x916 = bits.Add32(x899, x782, uint32(uint1(x914)))
	var x917 uint32
	var x918 uint32
	x917, x918 = bits.Add32(x901, x780, uint32(uint1(x916)))
	var x919 uint32
	var x920 uint32
	x919, x920 = bits.Add32(x903, x778, uint32(uint1(x918)))
	var x921 uint32
	var x922 uint32
	x921, x922 = bits.Add32(x905, x776, uint32(uint1(x920)))
	var x923 uint32
	var x924 uint32
	x923, x924 = bits.Add32(x907, x774, uint32(uint1(x922)))
	var x925 uint32
	var x926 uint32
	x925, x926 = bits.Add32(x909, x772, uint32(uint1(x924)))
	var x927 uint32
	x927, _ = bits.Add32(x911, x770, uint32(uint1(x926)))
	var x929 uint32
	var x930 uint32
	x929, x930 = bits.Add32(x913, x797, uint32(0x0))
	var x931 uint32
	var x932 uint32
	x931, x932 = bits.Add32(x915, x795, uint32(uint1(x930)))
	var x933 uint32
	var x934 uint32
	x933, x934 = bits.Add32(x917, x793, uint32(uint1(x932)))
	var x935 uint32
	var x936 uint32
	x935, x936 = bits.Add32(x919, x791, uint32(uint1(x934)))
	var x937 uint32
	var x938 uint32
	x937, x938 = bits.Add32(x921, x789, uint32(uint1(x936)))
	var x939 uint32
	var x940 uint32
	x939, x940 = bits.Add32(x923, x787, uint32(uint1(x938)))
	var x941 uint32
	var x942 uint32
	x941, x942 = bits.Add32(x925, x785, uint32(uint1(x940)))
	var x943 uint32
	x943, _ = bits.Add32(x927, x783, uint32(uint1(x942)))
	var x945 uint32
	var x946 uint32
	x945, x946 = bits.Add32(x91, x327, uint32(0x0))
	var x947 uint32
	var x948 uint32
	x947, x948 = bits.Add32(x221, x457, uint32(uint1(x946)))
	var x949 uint32
	var x950 uint32
	x949, x950 = bits.Add32(x223, x459, uint32(uint1(x948)))
	var x951 uint32
	var x952 uint32
	x951, x952 = bits.Add32(x225, x461, uint32(uint1(x950)))
	var x953 uint32
	var x954 uint32
	x953, x954 = bits.Add32(x227, x463, uint32(uint1(x952)))
	var x955 uint32
	var x956 uint32
	x955, x956 = bits.Add32(x229, x465, uint32(uint1(x954)))
	var x957 uint32
	var x958 uint32
	x957, x958 = bits.Add32(x231, x467, uint32(uint1(x956)))
	var x959 uint32
	var x960 uint32
	x959, x960 = bits.Add32(x233, x469, uint32(uint1(x958)))
	var x961 uint32
	x961, _ = bits.Add32(x235, x471, uint32(uint1(x960)))
	var x963 uint32
	var x964 uint32
	x963, x964 = bits.Add32(x563, x799, uint32(0x0))
	var x965 uint32
	var x966 uint32
	x965, x966 = bits.Add32(x693, x929, uint32(uint1(x964)))
	var x967 uint32
	var x968 uint32
	x967, x968 = bits.Add32(x695, x931, uint32(uint1(x966)))
	var x969 uint32
	var x970 uint32
	x969, x970 = bits.Add32(x697, x933, uint32(uint1(x968)))
	var x971 uint32
	var x972 uint32
	x971, x972 = bits.Add32(x699, x935, uint32(uint1(x970)))
	var x973 uint32
	var x974 uint32
	x973, x974 = bits.Add32(x701, x937, uint32(uint1(x972)))
	var x975 uint32
	var x976 uint32
	x975, x976 = bits.Add32(x703, x939, uint32(uint1(x974)))
	var x977 uint32
	var x978 uint32
	x977, x978 = bits.Add32(x705, x941, uint32(uint1(x976)))
	var x979 uint32
	x979, _ = bits.Add32(x707, x943, uint32(uint1(x978)))
	x981 := ((x945 >> 30) | ((x947 << 2) & 0xffffffff))
	x982 := ((x947 >> 30) | ((x949 << 2) & 0xffffffff))
	x983 := ((x949 >> 30) | ((x951 << 2) & 0xffffffff))
	x984 := ((x951 >> 30) | ((x953 << 2) & 0xffffffff))
	x985 := ((x953 >> 30) | ((x955 << 2) & 0xffffffff))
	x986 := ((x955 >> 30) | ((x957 << 2) & 0xffffffff))
	x987 := ((x957 >> 30) | ((x959 << 2) & 0xffffffff))
	x988 := ((x959 >> 30) | ((x961 << 2) & 0xffffffff))
	x989 := ((x963 >> 30) | ((x965 << 2) & 0xffffffff))
	x990 := ((x965 >> 30) | ((x967 << 2) & 0xffffffff))
	x991 := ((x967 >> 30) | ((x969 << 2) & 0xffffffff))
	x992 := ((x969 >> 30) | ((x971 << 2) & 0xffffffff))
	x993 := ((x971 >> 30) | ((x973 << 2) & 0xffffffff))
	x994 := ((x973 >> 30) | ((x975 << 2) & 0xffffffff))
	x995 := ((x975 >> 30) | ((x977 << 2) & 0xffffffff))
	x996 := ((x977 >> 30) | ((x979 << 2) & 0xffffffff))
	out1[0] = x981
	out1[1] = x982
	out1[2] = x983
	out1[3] = x984
	out1[4] = x985
	out1[5] = x986
	out1[6] = x987
	out1[7] = x988
	out2[0] = x989
	out2[1] = x990
	out2[2] = x991
	out2[3] = x992
	out2[4] = x993
	out2[5] = x994
	out2[6] = x995
	out2[7] = x996
}

// UpdateVr computes a update_vr.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [0x0 ~> 0xffffffff]
//   arg4: [0x0 ~> 0xffffffff]
//   arg5: [0x0 ~> 0xffffffff]
//   arg6: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func UpdateVr(out1 *[7]uint32, out2 *[7]uint32, arg1 *[7]uint32, arg2 *[7]uint32, arg3 uint32, arg4 uint32, arg5 uint32, arg6 uint32) {
	x1 := uint1((arg3 >> 31))
	x2 := (uint32((uint64((^arg3)) + uint64(0x1))) & 0xffffffff)
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(uint32(0x0), x2, uint32(0x0))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x14)))
	var x17 uint32
	cmovznzU32(&x17, uint1(x16), uint32(0x0), 0xffffffff)
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x3, uint32((uint1(x17) & 0x1)), uint32(0x0))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x5, uint32(0x0), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x7, uint32(0x0), uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x9, x17, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x11, x17, uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x13, x17, uint32(uint1(x27)))
	var x30 uint32
	x30, _ = bits.Add32(x15, x17, uint32(uint1(x29)))
	var x32 uint32
	cmovznzU32(&x32, x1, arg3, x18)
	var x33 uint32
	cmovznzU32(&x33, x1, uint32(0x0), x20)
	var x34 uint32
	cmovznzU32(&x34, x1, uint32(0x0), x22)
	var x35 uint32
	cmovznzU32(&x35, x1, uint32(0x0), x24)
	var x36 uint32
	cmovznzU32(&x36, x1, uint32(0x0), x26)
	var x37 uint32
	cmovznzU32(&x37, x1, uint32(0x0), x28)
	var x38 uint32
	cmovznzU32(&x38, x1, uint32(0x0), x30)
	x39 := uint1((arg4 >> 31))
	x40 := (uint32((uint64((^arg4)) + uint64(0x1))) & 0xffffffff)
	var x41 uint32
	var x42 uint32
	x41, x42 = bits.Sub32(uint32(0x0), x40, uint32(0x0))
	var x43 uint32
	var x44 uint32
	x43, x44 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x42)))
	var x45 uint32
	var x46 uint32
	x45, x46 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x44)))
	var x47 uint32
	var x48 uint32
	x47, x48 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x46)))
	var x49 uint32
	var x50 uint32
	x49, x50 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x48)))
	var x51 uint32
	var x52 uint32
	x51, x52 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x50)))
	var x53 uint32
	var x54 uint32
	x53, x54 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x52)))
	var x55 uint32
	cmovznzU32(&x55, uint1(x54), uint32(0x0), 0xffffffff)
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x41, uint32((uint1(x55) & 0x1)), uint32(0x0))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Add32(x43, uint32(0x0), uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Add32(x45, uint32(0x0), uint32(uint1(x59)))
	var x62 uint32
	var x63 uint32
	x62, x63 = bits.Add32(x47, x55, uint32(uint1(x61)))
	var x64 uint32
	var x65 uint32
	x64, x65 = bits.Add32(x49, x55, uint32(uint1(x63)))
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x51, x55, uint32(uint1(x65)))
	var x68 uint32
	x68, _ = bits.Add32(x53, x55, uint32(uint1(x67)))
	var x70 uint32
	cmovznzU32(&x70, x39, arg4, x56)
	var x71 uint32
	cmovznzU32(&x71, x39, uint32(0x0), x58)
	var x72 uint32
	cmovznzU32(&x72, x39, uint32(0x0), x60)
	var x73 uint32
	cmovznzU32(&x73, x39, uint32(0x0), x62)
	var x74 uint32
	cmovznzU32(&x74, x39, uint32(0x0), x64)
	var x75 uint32
	cmovznzU32(&x75, x39, uint32(0x0), x66)
	var x76 uint32
	cmovznzU32(&x76, x39, uint32(0x0), x68)
	x77 := uint1((arg5 >> 31))
	x78 := (uint32((uint64((^arg5)) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Sub32(uint32(0x0), x78, uint32(0x0))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x80)))
	var x83 uint32
	var x84 uint32
	x83, x84 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x82)))
	var x85 uint32
	var x86 uint32
	x85, x86 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x84)))
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x86)))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x90)))
	var x93 uint32
	cmovznzU32(&x93, uint1(x92), uint32(0x0), 0xffffffff)
	var x94 uint32
	var x95 uint32
	x94, x95 = bits.Add32(x79, uint32((uint1(x93) & 0x1)), uint32(0x0))
	var x96 uint32
	var x97 uint32
	x96, x97 = bits.Add32(x81, uint32(0x0), uint32(uint1(x95)))
	var x98 uint32
	var x99 uint32
	x98, x99 = bits.Add32(x83, uint32(0x0), uint32(uint1(x97)))
	var x100 uint32
	var x101 uint32
	x100, x101 = bits.Add32(x85, x93, uint32(uint1(x99)))
	var x102 uint32
	var x103 uint32
	x102, x103 = bits.Add32(x87, x93, uint32(uint1(x101)))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32(x89, x93, uint32(uint1(x103)))
	var x106 uint32
	x106, _ = bits.Add32(x91, x93, uint32(uint1(x105)))
	var x108 uint32
	cmovznzU32(&x108, x77, arg5, x94)
	var x109 uint32
	cmovznzU32(&x109, x77, uint32(0x0), x96)
	var x110 uint32
	cmovznzU32(&x110, x77, uint32(0x0), x98)
	var x111 uint32
	cmovznzU32(&x111, x77, uint32(0x0), x100)
	var x112 uint32
	cmovznzU32(&x112, x77, uint32(0x0), x102)
	var x113 uint32
	cmovznzU32(&x113, x77, uint32(0x0), x104)
	var x114 uint32
	cmovznzU32(&x114, x77, uint32(0x0), x106)
	x115 := uint1((arg6 >> 31))
	x116 := (uint32((uint64((^arg6)) + uint64(0x1))) & 0xffffffff)
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Sub32(uint32(0x0), x116, uint32(0x0))
	var x119 uint32
	var x120 uint32
	x119, x120 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x118)))
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x120)))
	var x123 uint32
	var x124 uint32
	x123, x124 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x124)))
	var x127 uint32
	var x128 uint32
	x127, x128 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x126)))
	var x129 uint32
	var x130 uint32
	x129, x130 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x128)))
	var x131 uint32
	cmovznzU32(&x131, uint1(x130), uint32(0x0), 0xffffffff)
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x117, uint32((uint1(x131) & 0x1)), uint32(0x0))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x119, uint32(0x0), uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x121, uint32(0x0), uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x123, x131, uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32(x125, x131, uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Add32(x127, x131, uint32(uint1(x141)))
	var x144 uint32
	x144, _ = bits.Add32(x129, x131, uint32(uint1(x143)))
	var x146 uint32
	cmovznzU32(&x146, x115, arg6, x132)
	var x147 uint32
	cmovznzU32(&x147, x115, uint32(0x0), x134)
	var x148 uint32
	cmovznzU32(&x148, x115, uint32(0x0), x136)
	var x149 uint32
	cmovznzU32(&x149, x115, uint32(0x0), x138)
	var x150 uint32
	cmovznzU32(&x150, x115, uint32(0x0), x140)
	var x151 uint32
	cmovznzU32(&x151, x115, uint32(0x0), x142)
	var x152 uint32
	cmovznzU32(&x152, x115, uint32(0x0), x144)
	var x153 uint32
	var x154 uint32
	x154, x153 = bits.Mul32(x32, arg1[6])
	var x155 uint32
	var x156 uint32
	x156, x155 = bits.Mul32(x32, arg1[5])
	var x157 uint32
	var x158 uint32
	x158, x157 = bits.Mul32(x32, arg1[4])
	var x159 uint32
	var x160 uint32
	x160, x159 = bits.Mul32(x32, arg1[3])
	var x161 uint32
	var x162 uint32
	x162, x161 = bits.Mul32(x32, arg1[2])
	var x163 uint32
	var x164 uint32
	x164, x163 = bits.Mul32(x32, arg1[1])
	var x165 uint32
	var x166 uint32
	x166, x165 = bits.Mul32(x32, arg1[0])
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x166, x163, uint32(0x0))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x164, x161, uint32(uint1(x168)))
	var x171 uint32
	var x172 uint32
	x171, x172 = bits.Add32(x162, x159, uint32(uint1(x170)))
	var x173 uint32
	var x174 uint32
	x173, x174 = bits.Add32(x160, x157, uint32(uint1(x172)))
	var x175 uint32
	var x176 uint32
	x175, x176 = bits.Add32(x158, x155, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x156, x153, uint32(uint1(x176)))
	x179 := (uint32(uint1(x178)) + x154)
	var x180 uint32
	_, x180 = bits.Mul32(x165, 0xffffffff)
	var x182 uint32
	var x183 uint32
	x183, x182 = bits.Mul32(x180, 0xffffffff)
	var x184 uint32
	var x185 uint32
	x185, x184 = bits.Mul32(x180, 0xffffffff)
	var x186 uint32
	var x187 uint32
	x187, x186 = bits.Mul32(x180, 0xffffffff)
	var x188 uint32
	var x189 uint32
	x189, x188 = bits.Mul32(x180, 0xffffffff)
	var x190 uint32
	var x191 uint32
	x190, x191 = bits.Add32(x189, x186, uint32(0x0))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Add32(x187, x184, uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x194, x195 = bits.Add32(x185, x182, uint32(uint1(x193)))
	x196 := (uint32(uint1(x195)) + x183)
	var x198 uint32
	_, x198 = bits.Add32(x165, x180, uint32(0x0))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x167, uint32(0x0), uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x169, uint32(0x0), uint32(uint1(x200)))
	var x203 uint32
	var x204 uint32
	x203, x204 = bits.Add32(x171, x188, uint32(uint1(x202)))
	var x205 uint32
	var x206 uint32
	x205, x206 = bits.Add32(x173, x190, uint32(uint1(x204)))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x175, x192, uint32(uint1(x206)))
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x177, x194, uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x179, x196, uint32(uint1(x210)))
	var x213 uint32
	var x214 uint32
	x214, x213 = bits.Mul32(x33, arg1[6])
	var x215 uint32
	var x216 uint32
	x216, x215 = bits.Mul32(x33, arg1[5])
	var x217 uint32
	var x218 uint32
	x218, x217 = bits.Mul32(x33, arg1[4])
	var x219 uint32
	var x220 uint32
	x220, x219 = bits.Mul32(x33, arg1[3])
	var x221 uint32
	var x222 uint32
	x222, x221 = bits.Mul32(x33, arg1[2])
	var x223 uint32
	var x224 uint32
	x224, x223 = bits.Mul32(x33, arg1[1])
	var x225 uint32
	var x226 uint32
	x226, x225 = bits.Mul32(x33, arg1[0])
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x226, x223, uint32(0x0))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x224, x221, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x222, x219, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x220, x217, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x218, x215, uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x216, x213, uint32(uint1(x236)))
	x239 := (uint32(uint1(x238)) + x214)
	var x240 uint32
	var x241 uint32
	x240, x241 = bits.Add32(x199, x225, uint32(0x0))
	var x242 uint32
	var x243 uint32
	x242, x243 = bits.Add32(x201, x227, uint32(uint1(x241)))
	var x244 uint32
	var x245 uint32
	x244, x245 = bits.Add32(x203, x229, uint32(uint1(x243)))
	var x246 uint32
	var x247 uint32
	x246, x247 = bits.Add32(x205, x231, uint32(uint1(x245)))
	var x248 uint32
	var x249 uint32
	x248, x249 = bits.Add32(x207, x233, uint32(uint1(x247)))
	var x250 uint32
	var x251 uint32
	x250, x251 = bits.Add32(x209, x235, uint32(uint1(x249)))
	var x252 uint32
	var x253 uint32
	x252, x253 = bits.Add32(x211, x237, uint32(uint1(x251)))
	var x254 uint32
	var x255 uint32
	x254, x255 = bits.Add32(uint32(uint1(x212)), x239, uint32(uint1(x253)))
	var x256 uint32
	_, x256 = bits.Mul32(x240, 0xffffffff)
	var x258 uint32
	var x259 uint32
	x259, x258 = bits.Mul32(x256, 0xffffffff)
	var x260 uint32
	var x261 uint32
	x261, x260 = bits.Mul32(x256, 0xffffffff)
	var x262 uint32
	var x263 uint32
	x263, x262 = bits.Mul32(x256, 0xffffffff)
	var x264 uint32
	var x265 uint32
	x265, x264 = bits.Mul32(x256, 0xffffffff)
	var x266 uint32
	var x267 uint32
	x266, x267 = bits.Add32(x265, x262, uint32(0x0))
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32(x263, x260, uint32(uint1(x267)))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x261, x258, uint32(uint1(x269)))
	x272 := (uint32(uint1(x271)) + x259)
	var x274 uint32
	_, x274 = bits.Add32(x240, x256, uint32(0x0))
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x242, uint32(0x0), uint32(uint1(x274)))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x244, uint32(0x0), uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x246, x264, uint32(uint1(x278)))
	var x281 uint32
	var x282 uint32
	x281, x282 = bits.Add32(x248, x266, uint32(uint1(x280)))
	var x283 uint32
	var x284 uint32
	x283, x284 = bits.Add32(x250, x268, uint32(uint1(x282)))
	var x285 uint32
	var x286 uint32
	x285, x286 = bits.Add32(x252, x270, uint32(uint1(x284)))
	var x287 uint32
	var x288 uint32
	x287, x288 = bits.Add32(x254, x272, uint32(uint1(x286)))
	x289 := (uint32(uint1(x288)) + uint32(uint1(x255)))
	var x290 uint32
	var x291 uint32
	x291, x290 = bits.Mul32(x34, arg1[6])
	var x292 uint32
	var x293 uint32
	x293, x292 = bits.Mul32(x34, arg1[5])
	var x294 uint32
	var x295 uint32
	x295, x294 = bits.Mul32(x34, arg1[4])
	var x296 uint32
	var x297 uint32
	x297, x296 = bits.Mul32(x34, arg1[3])
	var x298 uint32
	var x299 uint32
	x299, x298 = bits.Mul32(x34, arg1[2])
	var x300 uint32
	var x301 uint32
	x301, x300 = bits.Mul32(x34, arg1[1])
	var x302 uint32
	var x303 uint32
	x303, x302 = bits.Mul32(x34, arg1[0])
	var x304 uint32
	var x305 uint32
	x304, x305 = bits.Add32(x303, x300, uint32(0x0))
	var x306 uint32
	var x307 uint32
	x306, x307 = bits.Add32(x301, x298, uint32(uint1(x305)))
	var x308 uint32
	var x309 uint32
	x308, x309 = bits.Add32(x299, x296, uint32(uint1(x307)))
	var x310 uint32
	var x311 uint32
	x310, x311 = bits.Add32(x297, x294, uint32(uint1(x309)))
	var x312 uint32
	var x313 uint32
	x312, x313 = bits.Add32(x295, x292, uint32(uint1(x311)))
	var x314 uint32
	var x315 uint32
	x314, x315 = bits.Add32(x293, x290, uint32(uint1(x313)))
	x316 := (uint32(uint1(x315)) + x291)
	var x317 uint32
	var x318 uint32
	x317, x318 = bits.Add32(x275, x302, uint32(0x0))
	var x319 uint32
	var x320 uint32
	x319, x320 = bits.Add32(x277, x304, uint32(uint1(x318)))
	var x321 uint32
	var x322 uint32
	x321, x322 = bits.Add32(x279, x306, uint32(uint1(x320)))
	var x323 uint32
	var x324 uint32
	x323, x324 = bits.Add32(x281, x308, uint32(uint1(x322)))
	var x325 uint32
	var x326 uint32
	x325, x326 = bits.Add32(x283, x310, uint32(uint1(x324)))
	var x327 uint32
	var x328 uint32
	x327, x328 = bits.Add32(x285, x312, uint32(uint1(x326)))
	var x329 uint32
	var x330 uint32
	x329, x330 = bits.Add32(x287, x314, uint32(uint1(x328)))
	var x331 uint32
	var x332 uint32
	x331, x332 = bits.Add32(x289, x316, uint32(uint1(x330)))
	var x333 uint32
	_, x333 = bits.Mul32(x317, 0xffffffff)
	var x335 uint32
	var x336 uint32
	x336, x335 = bits.Mul32(x333, 0xffffffff)
	var x337 uint32
	var x338 uint32
	x338, x337 = bits.Mul32(x333, 0xffffffff)
	var x339 uint32
	var x340 uint32
	x340, x339 = bits.Mul32(x333, 0xffffffff)
	var x341 uint32
	var x342 uint32
	x342, x341 = bits.Mul32(x333, 0xffffffff)
	var x343 uint32
	var x344 uint32
	x343, x344 = bits.Add32(x342, x339, uint32(0x0))
	var x345 uint32
	var x346 uint32
	x345, x346 = bits.Add32(x340, x337, uint32(uint1(x344)))
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x338, x335, uint32(uint1(x346)))
	x349 := (uint32(uint1(x348)) + x336)
	var x351 uint32
	_, x351 = bits.Add32(x317, x333, uint32(0x0))
	var x352 uint32
	var x353 uint32
	x352, x353 = bits.Add32(x319, uint32(0x0), uint32(uint1(x351)))
	var x354 uint32
	var x355 uint32
	x354, x355 = bits.Add32(x321, uint32(0x0), uint32(uint1(x353)))
	var x356 uint32
	var x357 uint32
	x356, x357 = bits.Add32(x323, x341, uint32(uint1(x355)))
	var x358 uint32
	var x359 uint32
	x358, x359 = bits.Add32(x325, x343, uint32(uint1(x357)))
	var x360 uint32
	var x361 uint32
	x360, x361 = bits.Add32(x327, x345, uint32(uint1(x359)))
	var x362 uint32
	var x363 uint32
	x362, x363 = bits.Add32(x329, x347, uint32(uint1(x361)))
	var x364 uint32
	var x365 uint32
	x364, x365 = bits.Add32(x331, x349, uint32(uint1(x363)))
	x366 := (uint32(uint1(x365)) + uint32(uint1(x332)))
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x35, arg1[6])
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x35, arg1[5])
	var x371 uint32
	var x372 uint32
	x372, x371 = bits.Mul32(x35, arg1[4])
	var x373 uint32
	var x374 uint32
	x374, x373 = bits.Mul32(x35, arg1[3])
	var x375 uint32
	var x376 uint32
	x376, x375 = bits.Mul32(x35, arg1[2])
	var x377 uint32
	var x378 uint32
	x378, x377 = bits.Mul32(x35, arg1[1])
	var x379 uint32
	var x380 uint32
	x380, x379 = bits.Mul32(x35, arg1[0])
	var x381 uint32
	var x382 uint32
	x381, x382 = bits.Add32(x380, x377, uint32(0x0))
	var x383 uint32
	var x384 uint32
	x383, x384 = bits.Add32(x378, x375, uint32(uint1(x382)))
	var x385 uint32
	var x386 uint32
	x385, x386 = bits.Add32(x376, x373, uint32(uint1(x384)))
	var x387 uint32
	var x388 uint32
	x387, x388 = bits.Add32(x374, x371, uint32(uint1(x386)))
	var x389 uint32
	var x390 uint32
	x389, x390 = bits.Add32(x372, x369, uint32(uint1(x388)))
	var x391 uint32
	var x392 uint32
	x391, x392 = bits.Add32(x370, x367, uint32(uint1(x390)))
	x393 := (uint32(uint1(x392)) + x368)
	var x394 uint32
	var x395 uint32
	x394, x395 = bits.Add32(x352, x379, uint32(0x0))
	var x396 uint32
	var x397 uint32
	x396, x397 = bits.Add32(x354, x381, uint32(uint1(x395)))
	var x398 uint32
	var x399 uint32
	x398, x399 = bits.Add32(x356, x383, uint32(uint1(x397)))
	var x400 uint32
	var x401 uint32
	x400, x401 = bits.Add32(x358, x385, uint32(uint1(x399)))
	var x402 uint32
	var x403 uint32
	x402, x403 = bits.Add32(x360, x387, uint32(uint1(x401)))
	var x404 uint32
	var x405 uint32
	x404, x405 = bits.Add32(x362, x389, uint32(uint1(x403)))
	var x406 uint32
	var x407 uint32
	x406, x407 = bits.Add32(x364, x391, uint32(uint1(x405)))
	var x408 uint32
	var x409 uint32
	x408, x409 = bits.Add32(x366, x393, uint32(uint1(x407)))
	var x410 uint32
	_, x410 = bits.Mul32(x394, 0xffffffff)
	var x412 uint32
	var x413 uint32
	x413, x412 = bits.Mul32(x410, 0xffffffff)
	var x414 uint32
	var x415 uint32
	x415, x414 = bits.Mul32(x410, 0xffffffff)
	var x416 uint32
	var x417 uint32
	x417, x416 = bits.Mul32(x410, 0xffffffff)
	var x418 uint32
	var x419 uint32
	x419, x418 = bits.Mul32(x410, 0xffffffff)
	var x420 uint32
	var x421 uint32
	x420, x421 = bits.Add32(x419, x416, uint32(0x0))
	var x422 uint32
	var x423 uint32
	x422, x423 = bits.Add32(x417, x414, uint32(uint1(x421)))
	var x424 uint32
	var x425 uint32
	x424, x425 = bits.Add32(x415, x412, uint32(uint1(x423)))
	x426 := (uint32(uint1(x425)) + x413)
	var x428 uint32
	_, x428 = bits.Add32(x394, x410, uint32(0x0))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x396, uint32(0x0), uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x398, uint32(0x0), uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x400, x418, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x402, x420, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x404, x422, uint32(uint1(x436)))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x406, x424, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x408, x426, uint32(uint1(x440)))
	x443 := (uint32(uint1(x442)) + uint32(uint1(x409)))
	var x444 uint32
	var x445 uint32
	x445, x444 = bits.Mul32(x36, arg1[6])
	var x446 uint32
	var x447 uint32
	x447, x446 = bits.Mul32(x36, arg1[5])
	var x448 uint32
	var x449 uint32
	x449, x448 = bits.Mul32(x36, arg1[4])
	var x450 uint32
	var x451 uint32
	x451, x450 = bits.Mul32(x36, arg1[3])
	var x452 uint32
	var x453 uint32
	x453, x452 = bits.Mul32(x36, arg1[2])
	var x454 uint32
	var x455 uint32
	x455, x454 = bits.Mul32(x36, arg1[1])
	var x456 uint32
	var x457 uint32
	x457, x456 = bits.Mul32(x36, arg1[0])
	var x458 uint32
	var x459 uint32
	x458, x459 = bits.Add32(x457, x454, uint32(0x0))
	var x460 uint32
	var x461 uint32
	x460, x461 = bits.Add32(x455, x452, uint32(uint1(x459)))
	var x462 uint32
	var x463 uint32
	x462, x463 = bits.Add32(x453, x450, uint32(uint1(x461)))
	var x464 uint32
	var x465 uint32
	x464, x465 = bits.Add32(x451, x448, uint32(uint1(x463)))
	var x466 uint32
	var x467 uint32
	x466, x467 = bits.Add32(x449, x446, uint32(uint1(x465)))
	var x468 uint32
	var x469 uint32
	x468, x469 = bits.Add32(x447, x444, uint32(uint1(x467)))
	x470 := (uint32(uint1(x469)) + x445)
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x429, x456, uint32(0x0))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x431, x458, uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x433, x460, uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x435, x462, uint32(uint1(x476)))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x437, x464, uint32(uint1(x478)))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x439, x466, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x441, x468, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x443, x470, uint32(uint1(x484)))
	var x487 uint32
	_, x487 = bits.Mul32(x471, 0xffffffff)
	var x489 uint32
	var x490 uint32
	x490, x489 = bits.Mul32(x487, 0xffffffff)
	var x491 uint32
	var x492 uint32
	x492, x491 = bits.Mul32(x487, 0xffffffff)
	var x493 uint32
	var x494 uint32
	x494, x493 = bits.Mul32(x487, 0xffffffff)
	var x495 uint32
	var x496 uint32
	x496, x495 = bits.Mul32(x487, 0xffffffff)
	var x497 uint32
	var x498 uint32
	x497, x498 = bits.Add32(x496, x493, uint32(0x0))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x494, x491, uint32(uint1(x498)))
	var x501 uint32
	var x502 uint32
	x501, x502 = bits.Add32(x492, x489, uint32(uint1(x500)))
	x503 := (uint32(uint1(x502)) + x490)
	var x505 uint32
	_, x505 = bits.Add32(x471, x487, uint32(0x0))
	var x506 uint32
	var x507 uint32
	x506, x507 = bits.Add32(x473, uint32(0x0), uint32(uint1(x505)))
	var x508 uint32
	var x509 uint32
	x508, x509 = bits.Add32(x475, uint32(0x0), uint32(uint1(x507)))
	var x510 uint32
	var x511 uint32
	x510, x511 = bits.Add32(x477, x495, uint32(uint1(x509)))
	var x512 uint32
	var x513 uint32
	x512, x513 = bits.Add32(x479, x497, uint32(uint1(x511)))
	var x514 uint32
	var x515 uint32
	x514, x515 = bits.Add32(x481, x499, uint32(uint1(x513)))
	var x516 uint32
	var x517 uint32
	x516, x517 = bits.Add32(x483, x501, uint32(uint1(x515)))
	var x518 uint32
	var x519 uint32
	x518, x519 = bits.Add32(x485, x503, uint32(uint1(x517)))
	x520 := (uint32(uint1(x519)) + uint32(uint1(x486)))
	var x521 uint32
	var x522 uint32
	x522, x521 = bits.Mul32(x37, arg1[6])
	var x523 uint32
	var x524 uint32
	x524, x523 = bits.Mul32(x37, arg1[5])
	var x525 uint32
	var x526 uint32
	x526, x525 = bits.Mul32(x37, arg1[4])
	var x527 uint32
	var x528 uint32
	x528, x527 = bits.Mul32(x37, arg1[3])
	var x529 uint32
	var x530 uint32
	x530, x529 = bits.Mul32(x37, arg1[2])
	var x531 uint32
	var x532 uint32
	x532, x531 = bits.Mul32(x37, arg1[1])
	var x533 uint32
	var x534 uint32
	x534, x533 = bits.Mul32(x37, arg1[0])
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x534, x531, uint32(0x0))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x532, x529, uint32(uint1(x536)))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x530, x527, uint32(uint1(x538)))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x528, x525, uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x526, x523, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x524, x521, uint32(uint1(x544)))
	x547 := (uint32(uint1(x546)) + x522)
	var x548 uint32
	var x549 uint32
	x548, x549 = bits.Add32(x506, x533, uint32(0x0))
	var x550 uint32
	var x551 uint32
	x550, x551 = bits.Add32(x508, x535, uint32(uint1(x549)))
	var x552 uint32
	var x553 uint32
	x552, x553 = bits.Add32(x510, x537, uint32(uint1(x551)))
	var x554 uint32
	var x555 uint32
	x554, x555 = bits.Add32(x512, x539, uint32(uint1(x553)))
	var x556 uint32
	var x557 uint32
	x556, x557 = bits.Add32(x514, x541, uint32(uint1(x555)))
	var x558 uint32
	var x559 uint32
	x558, x559 = bits.Add32(x516, x543, uint32(uint1(x557)))
	var x560 uint32
	var x561 uint32
	x560, x561 = bits.Add32(x518, x545, uint32(uint1(x559)))
	var x562 uint32
	var x563 uint32
	x562, x563 = bits.Add32(x520, x547, uint32(uint1(x561)))
	var x564 uint32
	_, x564 = bits.Mul32(x548, 0xffffffff)
	var x566 uint32
	var x567 uint32
	x567, x566 = bits.Mul32(x564, 0xffffffff)
	var x568 uint32
	var x569 uint32
	x569, x568 = bits.Mul32(x564, 0xffffffff)
	var x570 uint32
	var x571 uint32
	x571, x570 = bits.Mul32(x564, 0xffffffff)
	var x572 uint32
	var x573 uint32
	x573, x572 = bits.Mul32(x564, 0xffffffff)
	var x574 uint32
	var x575 uint32
	x574, x575 = bits.Add32(x573, x570, uint32(0x0))
	var x576 uint32
	var x577 uint32
	x576, x577 = bits.Add32(x571, x568, uint32(uint1(x575)))
	var x578 uint32
	var x579 uint32
	x578, x579 = bits.Add32(x569, x566, uint32(uint1(x577)))
	x580 := (uint32(uint1(x579)) + x567)
	var x582 uint32
	_, x582 = bits.Add32(x548, x564, uint32(0x0))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x550, uint32(0x0), uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x552, uint32(0x0), uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x554, x572, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x556, x574, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x558, x576, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x560, x578, uint32(uint1(x592)))
	var x595 uint32
	var x596 uint32
	x595, x596 = bits.Add32(x562, x580, uint32(uint1(x594)))
	x597 := (uint32(uint1(x596)) + uint32(uint1(x563)))
	var x598 uint32
	var x599 uint32
	x599, x598 = bits.Mul32(x38, arg1[6])
	var x600 uint32
	var x601 uint32
	x601, x600 = bits.Mul32(x38, arg1[5])
	var x602 uint32
	var x603 uint32
	x603, x602 = bits.Mul32(x38, arg1[4])
	var x604 uint32
	var x605 uint32
	x605, x604 = bits.Mul32(x38, arg1[3])
	var x606 uint32
	var x607 uint32
	x607, x606 = bits.Mul32(x38, arg1[2])
	var x608 uint32
	var x609 uint32
	x609, x608 = bits.Mul32(x38, arg1[1])
	var x610 uint32
	var x611 uint32
	x611, x610 = bits.Mul32(x38, arg1[0])
	var x612 uint32
	var x613 uint32
	x612, x613 = bits.Add32(x611, x608, uint32(0x0))
	var x614 uint32
	var x615 uint32
	x614, x615 = bits.Add32(x609, x606, uint32(uint1(x613)))
	var x616 uint32
	var x617 uint32
	x616, x617 = bits.Add32(x607, x604, uint32(uint1(x615)))
	var x618 uint32
	var x619 uint32
	x618, x619 = bits.Add32(x605, x602, uint32(uint1(x617)))
	var x620 uint32
	var x621 uint32
	x620, x621 = bits.Add32(x603, x600, uint32(uint1(x619)))
	var x622 uint32
	var x623 uint32
	x622, x623 = bits.Add32(x601, x598, uint32(uint1(x621)))
	x624 := (uint32(uint1(x623)) + x599)
	var x625 uint32
	var x626 uint32
	x625, x626 = bits.Add32(x583, x610, uint32(0x0))
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x585, x612, uint32(uint1(x626)))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x587, x614, uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x589, x616, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x591, x618, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x593, x620, uint32(uint1(x634)))
	var x637 uint32
	var x638 uint32
	x637, x638 = bits.Add32(x595, x622, uint32(uint1(x636)))
	var x639 uint32
	var x640 uint32
	x639, x640 = bits.Add32(x597, x624, uint32(uint1(x638)))
	var x641 uint32
	_, x641 = bits.Mul32(x625, 0xffffffff)
	var x643 uint32
	var x644 uint32
	x644, x643 = bits.Mul32(x641, 0xffffffff)
	var x645 uint32
	var x646 uint32
	x646, x645 = bits.Mul32(x641, 0xffffffff)
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x641, 0xffffffff)
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x641, 0xffffffff)
	var x651 uint32
	var x652 uint32
	x651, x652 = bits.Add32(x650, x647, uint32(0x0))
	var x653 uint32
	var x654 uint32
	x653, x654 = bits.Add32(x648, x645, uint32(uint1(x652)))
	var x655 uint32
	var x656 uint32
	x655, x656 = bits.Add32(x646, x643, uint32(uint1(x654)))
	x657 := (uint32(uint1(x656)) + x644)
	var x659 uint32
	_, x659 = bits.Add32(x625, x641, uint32(0x0))
	var x660 uint32
	var x661 uint32
	x660, x661 = bits.Add32(x627, uint32(0x0), uint32(uint1(x659)))
	var x662 uint32
	var x663 uint32
	x662, x663 = bits.Add32(x629, uint32(0x0), uint32(uint1(x661)))
	var x664 uint32
	var x665 uint32
	x664, x665 = bits.Add32(x631, x649, uint32(uint1(x663)))
	var x666 uint32
	var x667 uint32
	x666, x667 = bits.Add32(x633, x651, uint32(uint1(x665)))
	var x668 uint32
	var x669 uint32
	x668, x669 = bits.Add32(x635, x653, uint32(uint1(x667)))
	var x670 uint32
	var x671 uint32
	x670, x671 = bits.Add32(x637, x655, uint32(uint1(x669)))
	var x672 uint32
	var x673 uint32
	x672, x673 = bits.Add32(x639, x657, uint32(uint1(x671)))
	x674 := (uint32(uint1(x673)) + uint32(uint1(x640)))
	var x675 uint32
	var x676 uint32
	x675, x676 = bits.Sub32(x660, uint32(0x1), uint32(0x0))
	var x677 uint32
	var x678 uint32
	x677, x678 = bits.Sub32(x662, uint32(0x0), uint32(uint1(x676)))
	var x679 uint32
	var x680 uint32
	x679, x680 = bits.Sub32(x664, uint32(0x0), uint32(uint1(x678)))
	var x681 uint32
	var x682 uint32
	x681, x682 = bits.Sub32(x666, 0xffffffff, uint32(uint1(x680)))
	var x683 uint32
	var x684 uint32
	x683, x684 = bits.Sub32(x668, 0xffffffff, uint32(uint1(x682)))
	var x685 uint32
	var x686 uint32
	x685, x686 = bits.Sub32(x670, 0xffffffff, uint32(uint1(x684)))
	var x687 uint32
	var x688 uint32
	x687, x688 = bits.Sub32(x672, 0xffffffff, uint32(uint1(x686)))
	var x690 uint32
	_, x690 = bits.Sub32(x674, uint32(0x0), uint32(uint1(x688)))
	var x691 uint32
	cmovznzU32(&x691, uint1(x690), x675, x660)
	var x692 uint32
	cmovznzU32(&x692, uint1(x690), x677, x662)
	var x693 uint32
	cmovznzU32(&x693, uint1(x690), x679, x664)
	var x694 uint32
	cmovznzU32(&x694, uint1(x690), x681, x666)
	var x695 uint32
	cmovznzU32(&x695, uint1(x690), x683, x668)
	var x696 uint32
	cmovznzU32(&x696, uint1(x690), x685, x670)
	var x697 uint32
	cmovznzU32(&x697, uint1(x690), x687, x672)
	var x698 uint32
	var x699 uint32
	x699, x698 = bits.Mul32(x70, arg2[6])
	var x700 uint32
	var x701 uint32
	x701, x700 = bits.Mul32(x70, arg2[5])
	var x702 uint32
	var x703 uint32
	x703, x702 = bits.Mul32(x70, arg2[4])
	var x704 uint32
	var x705 uint32
	x705, x704 = bits.Mul32(x70, arg2[3])
	var x706 uint32
	var x707 uint32
	x707, x706 = bits.Mul32(x70, arg2[2])
	var x708 uint32
	var x709 uint32
	x709, x708 = bits.Mul32(x70, arg2[1])
	var x710 uint32
	var x711 uint32
	x711, x710 = bits.Mul32(x70, arg2[0])
	var x712 uint32
	var x713 uint32
	x712, x713 = bits.Add32(x711, x708, uint32(0x0))
	var x714 uint32
	var x715 uint32
	x714, x715 = bits.Add32(x709, x706, uint32(uint1(x713)))
	var x716 uint32
	var x717 uint32
	x716, x717 = bits.Add32(x707, x704, uint32(uint1(x715)))
	var x718 uint32
	var x719 uint32
	x718, x719 = bits.Add32(x705, x702, uint32(uint1(x717)))
	var x720 uint32
	var x721 uint32
	x720, x721 = bits.Add32(x703, x700, uint32(uint1(x719)))
	var x722 uint32
	var x723 uint32
	x722, x723 = bits.Add32(x701, x698, uint32(uint1(x721)))
	x724 := (uint32(uint1(x723)) + x699)
	var x725 uint32
	_, x725 = bits.Mul32(x710, 0xffffffff)
	var x727 uint32
	var x728 uint32
	x728, x727 = bits.Mul32(x725, 0xffffffff)
	var x729 uint32
	var x730 uint32
	x730, x729 = bits.Mul32(x725, 0xffffffff)
	var x731 uint32
	var x732 uint32
	x732, x731 = bits.Mul32(x725, 0xffffffff)
	var x733 uint32
	var x734 uint32
	x734, x733 = bits.Mul32(x725, 0xffffffff)
	var x735 uint32
	var x736 uint32
	x735, x736 = bits.Add32(x734, x731, uint32(0x0))
	var x737 uint32
	var x738 uint32
	x737, x738 = bits.Add32(x732, x729, uint32(uint1(x736)))
	var x739 uint32
	var x740 uint32
	x739, x740 = bits.Add32(x730, x727, uint32(uint1(x738)))
	x741 := (uint32(uint1(x740)) + x728)
	var x743 uint32
	_, x743 = bits.Add32(x710, x725, uint32(0x0))
	var x744 uint32
	var x745 uint32
	x744, x745 = bits.Add32(x712, uint32(0x0), uint32(uint1(x743)))
	var x746 uint32
	var x747 uint32
	x746, x747 = bits.Add32(x714, uint32(0x0), uint32(uint1(x745)))
	var x748 uint32
	var x749 uint32
	x748, x749 = bits.Add32(x716, x733, uint32(uint1(x747)))
	var x750 uint32
	var x751 uint32
	x750, x751 = bits.Add32(x718, x735, uint32(uint1(x749)))
	var x752 uint32
	var x753 uint32
	x752, x753 = bits.Add32(x720, x737, uint32(uint1(x751)))
	var x754 uint32
	var x755 uint32
	x754, x755 = bits.Add32(x722, x739, uint32(uint1(x753)))
	var x756 uint32
	var x757 uint32
	x756, x757 = bits.Add32(x724, x741, uint32(uint1(x755)))
	var x758 uint32
	var x759 uint32
	x759, x758 = bits.Mul32(x71, arg2[6])
	var x760 uint32
	var x761 uint32
	x761, x760 = bits.Mul32(x71, arg2[5])
	var x762 uint32
	var x763 uint32
	x763, x762 = bits.Mul32(x71, arg2[4])
	var x764 uint32
	var x765 uint32
	x765, x764 = bits.Mul32(x71, arg2[3])
	var x766 uint32
	var x767 uint32
	x767, x766 = bits.Mul32(x71, arg2[2])
	var x768 uint32
	var x769 uint32
	x769, x768 = bits.Mul32(x71, arg2[1])
	var x770 uint32
	var x771 uint32
	x771, x770 = bits.Mul32(x71, arg2[0])
	var x772 uint32
	var x773 uint32
	x772, x773 = bits.Add32(x771, x768, uint32(0x0))
	var x774 uint32
	var x775 uint32
	x774, x775 = bits.Add32(x769, x766, uint32(uint1(x773)))
	var x776 uint32
	var x777 uint32
	x776, x777 = bits.Add32(x767, x764, uint32(uint1(x775)))
	var x778 uint32
	var x779 uint32
	x778, x779 = bits.Add32(x765, x762, uint32(uint1(x777)))
	var x780 uint32
	var x781 uint32
	x780, x781 = bits.Add32(x763, x760, uint32(uint1(x779)))
	var x782 uint32
	var x783 uint32
	x782, x783 = bits.Add32(x761, x758, uint32(uint1(x781)))
	x784 := (uint32(uint1(x783)) + x759)
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x744, x770, uint32(0x0))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x746, x772, uint32(uint1(x786)))
	var x789 uint32
	var x790 uint32
	x789, x790 = bits.Add32(x748, x774, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x750, x776, uint32(uint1(x790)))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x752, x778, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x754, x780, uint32(uint1(x794)))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x756, x782, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(uint32(uint1(x757)), x784, uint32(uint1(x798)))
	var x801 uint32
	_, x801 = bits.Mul32(x785, 0xffffffff)
	var x803 uint32
	var x804 uint32
	x804, x803 = bits.Mul32(x801, 0xffffffff)
	var x805 uint32
	var x806 uint32
	x806, x805 = bits.Mul32(x801, 0xffffffff)
	var x807 uint32
	var x808 uint32
	x808, x807 = bits.Mul32(x801, 0xffffffff)
	var x809 uint32
	var x810 uint32
	x810, x809 = bits.Mul32(x801, 0xffffffff)
	var x811 uint32
	var x812 uint32
	x811, x812 = bits.Add32(x810, x807, uint32(0x0))
	var x813 uint32
	var x814 uint32
	x813, x814 = bits.Add32(x808, x805, uint32(uint1(x812)))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x806, x803, uint32(uint1(x814)))
	x817 := (uint32(uint1(x816)) + x804)
	var x819 uint32
	_, x819 = bits.Add32(x785, x801, uint32(0x0))
	var x820 uint32
	var x821 uint32
	x820, x821 = bits.Add32(x787, uint32(0x0), uint32(uint1(x819)))
	var x822 uint32
	var x823 uint32
	x822, x823 = bits.Add32(x789, uint32(0x0), uint32(uint1(x821)))
	var x824 uint32
	var x825 uint32
	x824, x825 = bits.Add32(x791, x809, uint32(uint1(x823)))
	var x826 uint32
	var x827 uint32
	x826, x827 = bits.Add32(x793, x811, uint32(uint1(x825)))
	var x828 uint32
	var x829 uint32
	x828, x829 = bits.Add32(x795, x813, uint32(uint1(x827)))
	var x830 uint32
	var x831 uint32
	x830, x831 = bits.Add32(x797, x815, uint32(uint1(x829)))
	var x832 uint32
	var x833 uint32
	x832, x833 = bits.Add32(x799, x817, uint32(uint1(x831)))
	x834 := (uint32(uint1(x833)) + uint32(uint1(x800)))
	var x835 uint32
	var x836 uint32
	x836, x835 = bits.Mul32(x72, arg2[6])
	var x837 uint32
	var x838 uint32
	x838, x837 = bits.Mul32(x72, arg2[5])
	var x839 uint32
	var x840 uint32
	x840, x839 = bits.Mul32(x72, arg2[4])
	var x841 uint32
	var x842 uint32
	x842, x841 = bits.Mul32(x72, arg2[3])
	var x843 uint32
	var x844 uint32
	x844, x843 = bits.Mul32(x72, arg2[2])
	var x845 uint32
	var x846 uint32
	x846, x845 = bits.Mul32(x72, arg2[1])
	var x847 uint32
	var x848 uint32
	x848, x847 = bits.Mul32(x72, arg2[0])
	var x849 uint32
	var x850 uint32
	x849, x850 = bits.Add32(x848, x845, uint32(0x0))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x846, x843, uint32(uint1(x850)))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x844, x841, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x842, x839, uint32(uint1(x854)))
	var x857 uint32
	var x858 uint32
	x857, x858 = bits.Add32(x840, x837, uint32(uint1(x856)))
	var x859 uint32
	var x860 uint32
	x859, x860 = bits.Add32(x838, x835, uint32(uint1(x858)))
	x861 := (uint32(uint1(x860)) + x836)
	var x862 uint32
	var x863 uint32
	x862, x863 = bits.Add32(x820, x847, uint32(0x0))
	var x864 uint32
	var x865 uint32
	x864, x865 = bits.Add32(x822, x849, uint32(uint1(x863)))
	var x866 uint32
	var x867 uint32
	x866, x867 = bits.Add32(x824, x851, uint32(uint1(x865)))
	var x868 uint32
	var x869 uint32
	x868, x869 = bits.Add32(x826, x853, uint32(uint1(x867)))
	var x870 uint32
	var x871 uint32
	x870, x871 = bits.Add32(x828, x855, uint32(uint1(x869)))
	var x872 uint32
	var x873 uint32
	x872, x873 = bits.Add32(x830, x857, uint32(uint1(x871)))
	var x874 uint32
	var x875 uint32
	x874, x875 = bits.Add32(x832, x859, uint32(uint1(x873)))
	var x876 uint32
	var x877 uint32
	x876, x877 = bits.Add32(x834, x861, uint32(uint1(x875)))
	var x878 uint32
	_, x878 = bits.Mul32(x862, 0xffffffff)
	var x880 uint32
	var x881 uint32
	x881, x880 = bits.Mul32(x878, 0xffffffff)
	var x882 uint32
	var x883 uint32
	x883, x882 = bits.Mul32(x878, 0xffffffff)
	var x884 uint32
	var x885 uint32
	x885, x884 = bits.Mul32(x878, 0xffffffff)
	var x886 uint32
	var x887 uint32
	x887, x886 = bits.Mul32(x878, 0xffffffff)
	var x888 uint32
	var x889 uint32
	x888, x889 = bits.Add32(x887, x884, uint32(0x0))
	var x890 uint32
	var x891 uint32
	x890, x891 = bits.Add32(x885, x882, uint32(uint1(x889)))
	var x892 uint32
	var x893 uint32
	x892, x893 = bits.Add32(x883, x880, uint32(uint1(x891)))
	x894 := (uint32(uint1(x893)) + x881)
	var x896 uint32
	_, x896 = bits.Add32(x862, x878, uint32(0x0))
	var x897 uint32
	var x898 uint32
	x897, x898 = bits.Add32(x864, uint32(0x0), uint32(uint1(x896)))
	var x899 uint32
	var x900 uint32
	x899, x900 = bits.Add32(x866, uint32(0x0), uint32(uint1(x898)))
	var x901 uint32
	var x902 uint32
	x901, x902 = bits.Add32(x868, x886, uint32(uint1(x900)))
	var x903 uint32
	var x904 uint32
	x903, x904 = bits.Add32(x870, x888, uint32(uint1(x902)))
	var x905 uint32
	var x906 uint32
	x905, x906 = bits.Add32(x872, x890, uint32(uint1(x904)))
	var x907 uint32
	var x908 uint32
	x907, x908 = bits.Add32(x874, x892, uint32(uint1(x906)))
	var x909 uint32
	var x910 uint32
	x909, x910 = bits.Add32(x876, x894, uint32(uint1(x908)))
	x911 := (uint32(uint1(x910)) + uint32(uint1(x877)))
	var x912 uint32
	var x913 uint32
	x913, x912 = bits.Mul32(x73, arg2[6])
	var x914 uint32
	var x915 uint32
	x915, x914 = bits.Mul32(x73, arg2[5])
	var x916 uint32
	var x917 uint32
	x917, x916 = bits.Mul32(x73, arg2[4])
	var x918 uint32
	var x919 uint32
	x919, x918 = bits.Mul32(x73, arg2[3])
	var x920 uint32
	var x921 uint32
	x921, x920 = bits.Mul32(x73, arg2[2])
	var x922 uint32
	var x923 uint32
	x923, x922 = bits.Mul32(x73, arg2[1])
	var x924 uint32
	var x925 uint32
	x925, x924 = bits.Mul32(x73, arg2[0])
	var x926 uint32
	var x927 uint32
	x926, x927 = bits.Add32(x925, x922, uint32(0x0))
	var x928 uint32
	var x929 uint32
	x928, x929 = bits.Add32(x923, x920, uint32(uint1(x927)))
	var x930 uint32
	var x931 uint32
	x930, x931 = bits.Add32(x921, x918, uint32(uint1(x929)))
	var x932 uint32
	var x933 uint32
	x932, x933 = bits.Add32(x919, x916, uint32(uint1(x931)))
	var x934 uint32
	var x935 uint32
	x934, x935 = bits.Add32(x917, x914, uint32(uint1(x933)))
	var x936 uint32
	var x937 uint32
	x936, x937 = bits.Add32(x915, x912, uint32(uint1(x935)))
	x938 := (uint32(uint1(x937)) + x913)
	var x939 uint32
	var x940 uint32
	x939, x940 = bits.Add32(x897, x924, uint32(0x0))
	var x941 uint32
	var x942 uint32
	x941, x942 = bits.Add32(x899, x926, uint32(uint1(x940)))
	var x943 uint32
	var x944 uint32
	x943, x944 = bits.Add32(x901, x928, uint32(uint1(x942)))
	var x945 uint32
	var x946 uint32
	x945, x946 = bits.Add32(x903, x930, uint32(uint1(x944)))
	var x947 uint32
	var x948 uint32
	x947, x948 = bits.Add32(x905, x932, uint32(uint1(x946)))
	var x949 uint32
	var x950 uint32
	x949, x950 = bits.Add32(x907, x934, uint32(uint1(x948)))
	var x951 uint32
	var x952 uint32
	x951, x952 = bits.Add32(x909, x936, uint32(uint1(x950)))
	var x953 uint32
	var x954 uint32
	x953, x954 = bits.Add32(x911, x938, uint32(uint1(x952)))
	var x955 uint32
	_, x955 = bits.Mul32(x939, 0xffffffff)
	var x957 uint32
	var x958 uint32
	x958, x957 = bits.Mul32(x955, 0xffffffff)
	var x959 uint32
	var x960 uint32
	x960, x959 = bits.Mul32(x955, 0xffffffff)
	var x961 uint32
	var x962 uint32
	x962, x961 = bits.Mul32(x955, 0xffffffff)
	var x963 uint32
	var x964 uint32
	x964, x963 = bits.Mul32(x955, 0xffffffff)
	var x965 uint32
	var x966 uint32
	x965, x966 = bits.Add32(x964, x961, uint32(0x0))
	var x967 uint32
	var x968 uint32
	x967, x968 = bits.Add32(x962, x959, uint32(uint1(x966)))
	var x969 uint32
	var x970 uint32
	x969, x970 = bits.Add32(x960, x957, uint32(uint1(x968)))
	x971 := (uint32(uint1(x970)) + x958)
	var x973 uint32
	_, x973 = bits.Add32(x939, x955, uint32(0x0))
	var x974 uint32
	var x975 uint32
	x974, x975 = bits.Add32(x941, uint32(0x0), uint32(uint1(x973)))
	var x976 uint32
	var x977 uint32
	x976, x977 = bits.Add32(x943, uint32(0x0), uint32(uint1(x975)))
	var x978 uint32
	var x979 uint32
	x978, x979 = bits.Add32(x945, x963, uint32(uint1(x977)))
	var x980 uint32
	var x981 uint32
	x980, x981 = bits.Add32(x947, x965, uint32(uint1(x979)))
	var x982 uint32
	var x983 uint32
	x982, x983 = bits.Add32(x949, x967, uint32(uint1(x981)))
	var x984 uint32
	var x985 uint32
	x984, x985 = bits.Add32(x951, x969, uint32(uint1(x983)))
	var x986 uint32
	var x987 uint32
	x986, x987 = bits.Add32(x953, x971, uint32(uint1(x985)))
	x988 := (uint32(uint1(x987)) + uint32(uint1(x954)))
	var x989 uint32
	var x990 uint32
	x990, x989 = bits.Mul32(x74, arg2[6])
	var x991 uint32
	var x992 uint32
	x992, x991 = bits.Mul32(x74, arg2[5])
	var x993 uint32
	var x994 uint32
	x994, x993 = bits.Mul32(x74, arg2[4])
	var x995 uint32
	var x996 uint32
	x996, x995 = bits.Mul32(x74, arg2[3])
	var x997 uint32
	var x998 uint32
	x998, x997 = bits.Mul32(x74, arg2[2])
	var x999 uint32
	var x1000 uint32
	x1000, x999 = bits.Mul32(x74, arg2[1])
	var x1001 uint32
	var x1002 uint32
	x1002, x1001 = bits.Mul32(x74, arg2[0])
	var x1003 uint32
	var x1004 uint32
	x1003, x1004 = bits.Add32(x1002, x999, uint32(0x0))
	var x1005 uint32
	var x1006 uint32
	x1005, x1006 = bits.Add32(x1000, x997, uint32(uint1(x1004)))
	var x1007 uint32
	var x1008 uint32
	x1007, x1008 = bits.Add32(x998, x995, uint32(uint1(x1006)))
	var x1009 uint32
	var x1010 uint32
	x1009, x1010 = bits.Add32(x996, x993, uint32(uint1(x1008)))
	var x1011 uint32
	var x1012 uint32
	x1011, x1012 = bits.Add32(x994, x991, uint32(uint1(x1010)))
	var x1013 uint32
	var x1014 uint32
	x1013, x1014 = bits.Add32(x992, x989, uint32(uint1(x1012)))
	x1015 := (uint32(uint1(x1014)) + x990)
	var x1016 uint32
	var x1017 uint32
	x1016, x1017 = bits.Add32(x974, x1001, uint32(0x0))
	var x1018 uint32
	var x1019 uint32
	x1018, x1019 = bits.Add32(x976, x1003, uint32(uint1(x1017)))
	var x1020 uint32
	var x1021 uint32
	x1020, x1021 = bits.Add32(x978, x1005, uint32(uint1(x1019)))
	var x1022 uint32
	var x1023 uint32
	x1022, x1023 = bits.Add32(x980, x1007, uint32(uint1(x1021)))
	var x1024 uint32
	var x1025 uint32
	x1024, x1025 = bits.Add32(x982, x1009, uint32(uint1(x1023)))
	var x1026 uint32
	var x1027 uint32
	x1026, x1027 = bits.Add32(x984, x1011, uint32(uint1(x1025)))
	var x1028 uint32
	var x1029 uint32
	x1028, x1029 = bits.Add32(x986, x1013, uint32(uint1(x1027)))
	var x1030 uint32
	var x1031 uint32
	x1030, x1031 = bits.Add32(x988, x1015, uint32(uint1(x1029)))
	var x1032 uint32
	_, x1032 = bits.Mul32(x1016, 0xffffffff)
	var x1034 uint32
	var x1035 uint32
	x1035, x1034 = bits.Mul32(x1032, 0xffffffff)
	var x1036 uint32
	var x1037 uint32
	x1037, x1036 = bits.Mul32(x1032, 0xffffffff)
	var x1038 uint32
	var x1039 uint32
	x1039, x1038 = bits.Mul32(x1032, 0xffffffff)
	var x1040 uint32
	var x1041 uint32
	x1041, x1040 = bits.Mul32(x1032, 0xffffffff)
	var x1042 uint32
	var x1043 uint32
	x1042, x1043 = bits.Add32(x1041, x1038, uint32(0x0))
	var x1044 uint32
	var x1045 uint32
	x1044, x1045 = bits.Add32(x1039, x1036, uint32(uint1(x1043)))
	var x1046 uint32
	var x1047 uint32
	x1046, x1047 = bits.Add32(x1037, x1034, uint32(uint1(x1045)))
	x1048 := (uint32(uint1(x1047)) + x1035)
	var x1050 uint32
	_, x1050 = bits.Add32(x1016, x1032, uint32(0x0))
	var x1051 uint32
	var x1052 uint32
	x1051, x1052 = bits.Add32(x1018, uint32(0x0), uint32(uint1(x1050)))
	var x1053 uint32
	var x1054 uint32
	x1053, x1054 = bits.Add32(x1020, uint32(0x0), uint32(uint1(x1052)))
	var x1055 uint32
	var x1056 uint32
	x1055, x1056 = bits.Add32(x1022, x1040, uint32(uint1(x1054)))
	var x1057 uint32
	var x1058 uint32
	x1057, x1058 = bits.Add32(x1024, x1042, uint32(uint1(x1056)))
	var x1059 uint32
	var x1060 uint32
	x1059, x1060 = bits.Add32(x1026, x1044, uint32(uint1(x1058)))
	var x1061 uint32
	var x1062 uint32
	x1061, x1062 = bits.Add32(x1028, x1046, uint32(uint1(x1060)))
	var x1063 uint32
	var x1064 uint32
	x1063, x1064 = bits.Add32(x1030, x1048, uint32(uint1(x1062)))
	x1065 := (uint32(uint1(x1064)) + uint32(uint1(x1031)))
	var x1066 uint32
	var x1067 uint32
	x1067, x1066 = bits.Mul32(x75, arg2[6])
	var x1068 uint32
	var x1069 uint32
	x1069, x1068 = bits.Mul32(x75, arg2[5])
	var x1070 uint32
	var x1071 uint32
	x1071, x1070 = bits.Mul32(x75, arg2[4])
	var x1072 uint32
	var x1073 uint32
	x1073, x1072 = bits.Mul32(x75, arg2[3])
	var x1074 uint32
	var x1075 uint32
	x1075, x1074 = bits.Mul32(x75, arg2[2])
	var x1076 uint32
	var x1077 uint32
	x1077, x1076 = bits.Mul32(x75, arg2[1])
	var x1078 uint32
	var x1079 uint32
	x1079, x1078 = bits.Mul32(x75, arg2[0])
	var x1080 uint32
	var x1081 uint32
	x1080, x1081 = bits.Add32(x1079, x1076, uint32(0x0))
	var x1082 uint32
	var x1083 uint32
	x1082, x1083 = bits.Add32(x1077, x1074, uint32(uint1(x1081)))
	var x1084 uint32
	var x1085 uint32
	x1084, x1085 = bits.Add32(x1075, x1072, uint32(uint1(x1083)))
	var x1086 uint32
	var x1087 uint32
	x1086, x1087 = bits.Add32(x1073, x1070, uint32(uint1(x1085)))
	var x1088 uint32
	var x1089 uint32
	x1088, x1089 = bits.Add32(x1071, x1068, uint32(uint1(x1087)))
	var x1090 uint32
	var x1091 uint32
	x1090, x1091 = bits.Add32(x1069, x1066, uint32(uint1(x1089)))
	x1092 := (uint32(uint1(x1091)) + x1067)
	var x1093 uint32
	var x1094 uint32
	x1093, x1094 = bits.Add32(x1051, x1078, uint32(0x0))
	var x1095 uint32
	var x1096 uint32
	x1095, x1096 = bits.Add32(x1053, x1080, uint32(uint1(x1094)))
	var x1097 uint32
	var x1098 uint32
	x1097, x1098 = bits.Add32(x1055, x1082, uint32(uint1(x1096)))
	var x1099 uint32
	var x1100 uint32
	x1099, x1100 = bits.Add32(x1057, x1084, uint32(uint1(x1098)))
	var x1101 uint32
	var x1102 uint32
	x1101, x1102 = bits.Add32(x1059, x1086, uint32(uint1(x1100)))
	var x1103 uint32
	var x1104 uint32
	x1103, x1104 = bits.Add32(x1061, x1088, uint32(uint1(x1102)))
	var x1105 uint32
	var x1106 uint32
	x1105, x1106 = bits.Add32(x1063, x1090, uint32(uint1(x1104)))
	var x1107 uint32
	var x1108 uint32
	x1107, x1108 = bits.Add32(x1065, x1092, uint32(uint1(x1106)))
	var x1109 uint32
	_, x1109 = bits.Mul32(x1093, 0xffffffff)
	var x1111 uint32
	var x1112 uint32
	x1112, x1111 = bits.Mul32(x1109, 0xffffffff)
	var x1113 uint32
	var x1114 uint32
	x1114, x1113 = bits.Mul32(x1109, 0xffffffff)
	var x1115 uint32
	var x1116 uint32
	x1116, x1115 = bits.Mul32(x1109, 0xffffffff)
	var x1117 uint32
	var x1118 uint32
	x1118, x1117 = bits.Mul32(x1109, 0xffffffff)
	var x1119 uint32
	var x1120 uint32
	x1119, x1120 = bits.Add32(x1118, x1115, uint32(0x0))
	var x1121 uint32
	var x1122 uint32
	x1121, x1122 = bits.Add32(x1116, x1113, uint32(uint1(x1120)))
	var x1123 uint32
	var x1124 uint32
	x1123, x1124 = bits.Add32(x1114, x1111, uint32(uint1(x1122)))
	x1125 := (uint32(uint1(x1124)) + x1112)
	var x1127 uint32
	_, x1127 = bits.Add32(x1093, x1109, uint32(0x0))
	var x1128 uint32
	var x1129 uint32
	x1128, x1129 = bits.Add32(x1095, uint32(0x0), uint32(uint1(x1127)))
	var x1130 uint32
	var x1131 uint32
	x1130, x1131 = bits.Add32(x1097, uint32(0x0), uint32(uint1(x1129)))
	var x1132 uint32
	var x1133 uint32
	x1132, x1133 = bits.Add32(x1099, x1117, uint32(uint1(x1131)))
	var x1134 uint32
	var x1135 uint32
	x1134, x1135 = bits.Add32(x1101, x1119, uint32(uint1(x1133)))
	var x1136 uint32
	var x1137 uint32
	x1136, x1137 = bits.Add32(x1103, x1121, uint32(uint1(x1135)))
	var x1138 uint32
	var x1139 uint32
	x1138, x1139 = bits.Add32(x1105, x1123, uint32(uint1(x1137)))
	var x1140 uint32
	var x1141 uint32
	x1140, x1141 = bits.Add32(x1107, x1125, uint32(uint1(x1139)))
	x1142 := (uint32(uint1(x1141)) + uint32(uint1(x1108)))
	var x1143 uint32
	var x1144 uint32
	x1144, x1143 = bits.Mul32(x76, arg2[6])
	var x1145 uint32
	var x1146 uint32
	x1146, x1145 = bits.Mul32(x76, arg2[5])
	var x1147 uint32
	var x1148 uint32
	x1148, x1147 = bits.Mul32(x76, arg2[4])
	var x1149 uint32
	var x1150 uint32
	x1150, x1149 = bits.Mul32(x76, arg2[3])
	var x1151 uint32
	var x1152 uint32
	x1152, x1151 = bits.Mul32(x76, arg2[2])
	var x1153 uint32
	var x1154 uint32
	x1154, x1153 = bits.Mul32(x76, arg2[1])
	var x1155 uint32
	var x1156 uint32
	x1156, x1155 = bits.Mul32(x76, arg2[0])
	var x1157 uint32
	var x1158 uint32
	x1157, x1158 = bits.Add32(x1156, x1153, uint32(0x0))
	var x1159 uint32
	var x1160 uint32
	x1159, x1160 = bits.Add32(x1154, x1151, uint32(uint1(x1158)))
	var x1161 uint32
	var x1162 uint32
	x1161, x1162 = bits.Add32(x1152, x1149, uint32(uint1(x1160)))
	var x1163 uint32
	var x1164 uint32
	x1163, x1164 = bits.Add32(x1150, x1147, uint32(uint1(x1162)))
	var x1165 uint32
	var x1166 uint32
	x1165, x1166 = bits.Add32(x1148, x1145, uint32(uint1(x1164)))
	var x1167 uint32
	var x1168 uint32
	x1167, x1168 = bits.Add32(x1146, x1143, uint32(uint1(x1166)))
	x1169 := (uint32(uint1(x1168)) + x1144)
	var x1170 uint32
	var x1171 uint32
	x1170, x1171 = bits.Add32(x1128, x1155, uint32(0x0))
	var x1172 uint32
	var x1173 uint32
	x1172, x1173 = bits.Add32(x1130, x1157, uint32(uint1(x1171)))
	var x1174 uint32
	var x1175 uint32
	x1174, x1175 = bits.Add32(x1132, x1159, uint32(uint1(x1173)))
	var x1176 uint32
	var x1177 uint32
	x1176, x1177 = bits.Add32(x1134, x1161, uint32(uint1(x1175)))
	var x1178 uint32
	var x1179 uint32
	x1178, x1179 = bits.Add32(x1136, x1163, uint32(uint1(x1177)))
	var x1180 uint32
	var x1181 uint32
	x1180, x1181 = bits.Add32(x1138, x1165, uint32(uint1(x1179)))
	var x1182 uint32
	var x1183 uint32
	x1182, x1183 = bits.Add32(x1140, x1167, uint32(uint1(x1181)))
	var x1184 uint32
	var x1185 uint32
	x1184, x1185 = bits.Add32(x1142, x1169, uint32(uint1(x1183)))
	var x1186 uint32
	_, x1186 = bits.Mul32(x1170, 0xffffffff)
	var x1188 uint32
	var x1189 uint32
	x1189, x1188 = bits.Mul32(x1186, 0xffffffff)
	var x1190 uint32
	var x1191 uint32
	x1191, x1190 = bits.Mul32(x1186, 0xffffffff)
	var x1192 uint32
	var x1193 uint32
	x1193, x1192 = bits.Mul32(x1186, 0xffffffff)
	var x1194 uint32
	var x1195 uint32
	x1195, x1194 = bits.Mul32(x1186, 0xffffffff)
	var x1196 uint32
	var x1197 uint32
	x1196, x1197 = bits.Add32(x1195, x1192, uint32(0x0))
	var x1198 uint32
	var x1199 uint32
	x1198, x1199 = bits.Add32(x1193, x1190, uint32(uint1(x1197)))
	var x1200 uint32
	var x1201 uint32
	x1200, x1201 = bits.Add32(x1191, x1188, uint32(uint1(x1199)))
	x1202 := (uint32(uint1(x1201)) + x1189)
	var x1204 uint32
	_, x1204 = bits.Add32(x1170, x1186, uint32(0x0))
	var x1205 uint32
	var x1206 uint32
	x1205, x1206 = bits.Add32(x1172, uint32(0x0), uint32(uint1(x1204)))
	var x1207 uint32
	var x1208 uint32
	x1207, x1208 = bits.Add32(x1174, uint32(0x0), uint32(uint1(x1206)))
	var x1209 uint32
	var x1210 uint32
	x1209, x1210 = bits.Add32(x1176, x1194, uint32(uint1(x1208)))
	var x1211 uint32
	var x1212 uint32
	x1211, x1212 = bits.Add32(x1178, x1196, uint32(uint1(x1210)))
	var x1213 uint32
	var x1214 uint32
	x1213, x1214 = bits.Add32(x1180, x1198, uint32(uint1(x1212)))
	var x1215 uint32
	var x1216 uint32
	x1215, x1216 = bits.Add32(x1182, x1200, uint32(uint1(x1214)))
	var x1217 uint32
	var x1218 uint32
	x1217, x1218 = bits.Add32(x1184, x1202, uint32(uint1(x1216)))
	x1219 := (uint32(uint1(x1218)) + uint32(uint1(x1185)))
	var x1220 uint32
	var x1221 uint32
	x1220, x1221 = bits.Sub32(x1205, uint32(0x1), uint32(0x0))
	var x1222 uint32
	var x1223 uint32
	x1222, x1223 = bits.Sub32(x1207, uint32(0x0), uint32(uint1(x1221)))
	var x1224 uint32
	var x1225 uint32
	x1224, x1225 = bits.Sub32(x1209, uint32(0x0), uint32(uint1(x1223)))
	var x1226 uint32
	var x1227 uint32
	x1226, x1227 = bits.Sub32(x1211, 0xffffffff, uint32(uint1(x1225)))
	var x1228 uint32
	var x1229 uint32
	x1228, x1229 = bits.Sub32(x1213, 0xffffffff, uint32(uint1(x1227)))
	var x1230 uint32
	var x1231 uint32
	x1230, x1231 = bits.Sub32(x1215, 0xffffffff, uint32(uint1(x1229)))
	var x1232 uint32
	var x1233 uint32
	x1232, x1233 = bits.Sub32(x1217, 0xffffffff, uint32(uint1(x1231)))
	var x1235 uint32
	_, x1235 = bits.Sub32(x1219, uint32(0x0), uint32(uint1(x1233)))
	var x1236 uint32
	cmovznzU32(&x1236, uint1(x1235), x1220, x1205)
	var x1237 uint32
	cmovznzU32(&x1237, uint1(x1235), x1222, x1207)
	var x1238 uint32
	cmovznzU32(&x1238, uint1(x1235), x1224, x1209)
	var x1239 uint32
	cmovznzU32(&x1239, uint1(x1235), x1226, x1211)
	var x1240 uint32
	cmovznzU32(&x1240, uint1(x1235), x1228, x1213)
	var x1241 uint32
	cmovznzU32(&x1241, uint1(x1235), x1230, x1215)
	var x1242 uint32
	cmovznzU32(&x1242, uint1(x1235), x1232, x1217)
	var x1243 uint32
	var x1244 uint32
	x1244, x1243 = bits.Mul32(x108, arg1[6])
	var x1245 uint32
	var x1246 uint32
	x1246, x1245 = bits.Mul32(x108, arg1[5])
	var x1247 uint32
	var x1248 uint32
	x1248, x1247 = bits.Mul32(x108, arg1[4])
	var x1249 uint32
	var x1250 uint32
	x1250, x1249 = bits.Mul32(x108, arg1[3])
	var x1251 uint32
	var x1252 uint32
	x1252, x1251 = bits.Mul32(x108, arg1[2])
	var x1253 uint32
	var x1254 uint32
	x1254, x1253 = bits.Mul32(x108, arg1[1])
	var x1255 uint32
	var x1256 uint32
	x1256, x1255 = bits.Mul32(x108, arg1[0])
	var x1257 uint32
	var x1258 uint32
	x1257, x1258 = bits.Add32(x1256, x1253, uint32(0x0))
	var x1259 uint32
	var x1260 uint32
	x1259, x1260 = bits.Add32(x1254, x1251, uint32(uint1(x1258)))
	var x1261 uint32
	var x1262 uint32
	x1261, x1262 = bits.Add32(x1252, x1249, uint32(uint1(x1260)))
	var x1263 uint32
	var x1264 uint32
	x1263, x1264 = bits.Add32(x1250, x1247, uint32(uint1(x1262)))
	var x1265 uint32
	var x1266 uint32
	x1265, x1266 = bits.Add32(x1248, x1245, uint32(uint1(x1264)))
	var x1267 uint32
	var x1268 uint32
	x1267, x1268 = bits.Add32(x1246, x1243, uint32(uint1(x1266)))
	x1269 := (uint32(uint1(x1268)) + x1244)
	var x1270 uint32
	_, x1270 = bits.Mul32(x1255, 0xffffffff)
	var x1272 uint32
	var x1273 uint32
	x1273, x1272 = bits.Mul32(x1270, 0xffffffff)
	var x1274 uint32
	var x1275 uint32
	x1275, x1274 = bits.Mul32(x1270, 0xffffffff)
	var x1276 uint32
	var x1277 uint32
	x1277, x1276 = bits.Mul32(x1270, 0xffffffff)
	var x1278 uint32
	var x1279 uint32
	x1279, x1278 = bits.Mul32(x1270, 0xffffffff)
	var x1280 uint32
	var x1281 uint32
	x1280, x1281 = bits.Add32(x1279, x1276, uint32(0x0))
	var x1282 uint32
	var x1283 uint32
	x1282, x1283 = bits.Add32(x1277, x1274, uint32(uint1(x1281)))
	var x1284 uint32
	var x1285 uint32
	x1284, x1285 = bits.Add32(x1275, x1272, uint32(uint1(x1283)))
	x1286 := (uint32(uint1(x1285)) + x1273)
	var x1288 uint32
	_, x1288 = bits.Add32(x1255, x1270, uint32(0x0))
	var x1289 uint32
	var x1290 uint32
	x1289, x1290 = bits.Add32(x1257, uint32(0x0), uint32(uint1(x1288)))
	var x1291 uint32
	var x1292 uint32
	x1291, x1292 = bits.Add32(x1259, uint32(0x0), uint32(uint1(x1290)))
	var x1293 uint32
	var x1294 uint32
	x1293, x1294 = bits.Add32(x1261, x1278, uint32(uint1(x1292)))
	var x1295 uint32
	var x1296 uint32
	x1295, x1296 = bits.Add32(x1263, x1280, uint32(uint1(x1294)))
	var x1297 uint32
	var x1298 uint32
	x1297, x1298 = bits.Add32(x1265, x1282, uint32(uint1(x1296)))
	var x1299 uint32
	var x1300 uint32
	x1299, x1300 = bits.Add32(x1267, x1284, uint32(uint1(x1298)))
	var x1301 uint32
	var x1302 uint32
	x1301, x1302 = bits.Add32(x1269, x1286, uint32(uint1(x1300)))
	var x1303 uint32
	var x1304 uint32
	x1304, x1303 = bits.Mul32(x109, arg1[6])
	var x1305 uint32
	var x1306 uint32
	x1306, x1305 = bits.Mul32(x109, arg1[5])
	var x1307 uint32
	var x1308 uint32
	x1308, x1307 = bits.Mul32(x109, arg1[4])
	var x1309 uint32
	var x1310 uint32
	x1310, x1309 = bits.Mul32(x109, arg1[3])
	var x1311 uint32
	var x1312 uint32
	x1312, x1311 = bits.Mul32(x109, arg1[2])
	var x1313 uint32
	var x1314 uint32
	x1314, x1313 = bits.Mul32(x109, arg1[1])
	var x1315 uint32
	var x1316 uint32
	x1316, x1315 = bits.Mul32(x109, arg1[0])
	var x1317 uint32
	var x1318 uint32
	x1317, x1318 = bits.Add32(x1316, x1313, uint32(0x0))
	var x1319 uint32
	var x1320 uint32
	x1319, x1320 = bits.Add32(x1314, x1311, uint32(uint1(x1318)))
	var x1321 uint32
	var x1322 uint32
	x1321, x1322 = bits.Add32(x1312, x1309, uint32(uint1(x1320)))
	var x1323 uint32
	var x1324 uint32
	x1323, x1324 = bits.Add32(x1310, x1307, uint32(uint1(x1322)))
	var x1325 uint32
	var x1326 uint32
	x1325, x1326 = bits.Add32(x1308, x1305, uint32(uint1(x1324)))
	var x1327 uint32
	var x1328 uint32
	x1327, x1328 = bits.Add32(x1306, x1303, uint32(uint1(x1326)))
	x1329 := (uint32(uint1(x1328)) + x1304)
	var x1330 uint32
	var x1331 uint32
	x1330, x1331 = bits.Add32(x1289, x1315, uint32(0x0))
	var x1332 uint32
	var x1333 uint32
	x1332, x1333 = bits.Add32(x1291, x1317, uint32(uint1(x1331)))
	var x1334 uint32
	var x1335 uint32
	x1334, x1335 = bits.Add32(x1293, x1319, uint32(uint1(x1333)))
	var x1336 uint32
	var x1337 uint32
	x1336, x1337 = bits.Add32(x1295, x1321, uint32(uint1(x1335)))
	var x1338 uint32
	var x1339 uint32
	x1338, x1339 = bits.Add32(x1297, x1323, uint32(uint1(x1337)))
	var x1340 uint32
	var x1341 uint32
	x1340, x1341 = bits.Add32(x1299, x1325, uint32(uint1(x1339)))
	var x1342 uint32
	var x1343 uint32
	x1342, x1343 = bits.Add32(x1301, x1327, uint32(uint1(x1341)))
	var x1344 uint32
	var x1345 uint32
	x1344, x1345 = bits.Add32(uint32(uint1(x1302)), x1329, uint32(uint1(x1343)))
	var x1346 uint32
	_, x1346 = bits.Mul32(x1330, 0xffffffff)
	var x1348 uint32
	var x1349 uint32
	x1349, x1348 = bits.Mul32(x1346, 0xffffffff)
	var x1350 uint32
	var x1351 uint32
	x1351, x1350 = bits.Mul32(x1346, 0xffffffff)
	var x1352 uint32
	var x1353 uint32
	x1353, x1352 = bits.Mul32(x1346, 0xffffffff)
	var x1354 uint32
	var x1355 uint32
	x1355, x1354 = bits.Mul32(x1346, 0xffffffff)
	var x1356 uint32
	var x1357 uint32
	x1356, x1357 = bits.Add32(x1355, x1352, uint32(0x0))
	var x1358 uint32
	var x1359 uint32
	x1358, x1359 = bits.Add32(x1353, x1350, uint32(uint1(x1357)))
	var x1360 uint32
	var x1361 uint32
	x1360, x1361 = bits.Add32(x1351, x1348, uint32(uint1(x1359)))
	x1362 := (uint32(uint1(x1361)) + x1349)
	var x1364 uint32
	_, x1364 = bits.Add32(x1330, x1346, uint32(0x0))
	var x1365 uint32
	var x1366 uint32
	x1365, x1366 = bits.Add32(x1332, uint32(0x0), uint32(uint1(x1364)))
	var x1367 uint32
	var x1368 uint32
	x1367, x1368 = bits.Add32(x1334, uint32(0x0), uint32(uint1(x1366)))
	var x1369 uint32
	var x1370 uint32
	x1369, x1370 = bits.Add32(x1336, x1354, uint32(uint1(x1368)))
	var x1371 uint32
	var x1372 uint32
	x1371, x1372 = bits.Add32(x1338, x1356, uint32(uint1(x1370)))
	var x1373 uint32
	var x1374 uint32
	x1373, x1374 = bits.Add32(x1340, x1358, uint32(uint1(x1372)))
	var x1375 uint32
	var x1376 uint32
	x1375, x1376 = bits.Add32(x1342, x1360, uint32(uint1(x1374)))
	var x1377 uint32
	var x1378 uint32
	x1377, x1378 = bits.Add32(x1344, x1362, uint32(uint1(x1376)))
	x1379 := (uint32(uint1(x1378)) + uint32(uint1(x1345)))
	var x1380 uint32
	var x1381 uint32
	x1381, x1380 = bits.Mul32(x110, arg1[6])
	var x1382 uint32
	var x1383 uint32
	x1383, x1382 = bits.Mul32(x110, arg1[5])
	var x1384 uint32
	var x1385 uint32
	x1385, x1384 = bits.Mul32(x110, arg1[4])
	var x1386 uint32
	var x1387 uint32
	x1387, x1386 = bits.Mul32(x110, arg1[3])
	var x1388 uint32
	var x1389 uint32
	x1389, x1388 = bits.Mul32(x110, arg1[2])
	var x1390 uint32
	var x1391 uint32
	x1391, x1390 = bits.Mul32(x110, arg1[1])
	var x1392 uint32
	var x1393 uint32
	x1393, x1392 = bits.Mul32(x110, arg1[0])
	var x1394 uint32
	var x1395 uint32
	x1394, x1395 = bits.Add32(x1393, x1390, uint32(0x0))
	var x1396 uint32
	var x1397 uint32
	x1396, x1397 = bits.Add32(x1391, x1388, uint32(uint1(x1395)))
	var x1398 uint32
	var x1399 uint32
	x1398, x1399 = bits.Add32(x1389, x1386, uint32(uint1(x1397)))
	var x1400 uint32
	var x1401 uint32
	x1400, x1401 = bits.Add32(x1387, x1384, uint32(uint1(x1399)))
	var x1402 uint32
	var x1403 uint32
	x1402, x1403 = bits.Add32(x1385, x1382, uint32(uint1(x1401)))
	var x1404 uint32
	var x1405 uint32
	x1404, x1405 = bits.Add32(x1383, x1380, uint32(uint1(x1403)))
	x1406 := (uint32(uint1(x1405)) + x1381)
	var x1407 uint32
	var x1408 uint32
	x1407, x1408 = bits.Add32(x1365, x1392, uint32(0x0))
	var x1409 uint32
	var x1410 uint32
	x1409, x1410 = bits.Add32(x1367, x1394, uint32(uint1(x1408)))
	var x1411 uint32
	var x1412 uint32
	x1411, x1412 = bits.Add32(x1369, x1396, uint32(uint1(x1410)))
	var x1413 uint32
	var x1414 uint32
	x1413, x1414 = bits.Add32(x1371, x1398, uint32(uint1(x1412)))
	var x1415 uint32
	var x1416 uint32
	x1415, x1416 = bits.Add32(x1373, x1400, uint32(uint1(x1414)))
	var x1417 uint32
	var x1418 uint32
	x1417, x1418 = bits.Add32(x1375, x1402, uint32(uint1(x1416)))
	var x1419 uint32
	var x1420 uint32
	x1419, x1420 = bits.Add32(x1377, x1404, uint32(uint1(x1418)))
	var x1421 uint32
	var x1422 uint32
	x1421, x1422 = bits.Add32(x1379, x1406, uint32(uint1(x1420)))
	var x1423 uint32
	_, x1423 = bits.Mul32(x1407, 0xffffffff)
	var x1425 uint32
	var x1426 uint32
	x1426, x1425 = bits.Mul32(x1423, 0xffffffff)
	var x1427 uint32
	var x1428 uint32
	x1428, x1427 = bits.Mul32(x1423, 0xffffffff)
	var x1429 uint32
	var x1430 uint32
	x1430, x1429 = bits.Mul32(x1423, 0xffffffff)
	var x1431 uint32
	var x1432 uint32
	x1432, x1431 = bits.Mul32(x1423, 0xffffffff)
	var x1433 uint32
	var x1434 uint32
	x1433, x1434 = bits.Add32(x1432, x1429, uint32(0x0))
	var x1435 uint32
	var x1436 uint32
	x1435, x1436 = bits.Add32(x1430, x1427, uint32(uint1(x1434)))
	var x1437 uint32
	var x1438 uint32
	x1437, x1438 = bits.Add32(x1428, x1425, uint32(uint1(x1436)))
	x1439 := (uint32(uint1(x1438)) + x1426)
	var x1441 uint32
	_, x1441 = bits.Add32(x1407, x1423, uint32(0x0))
	var x1442 uint32
	var x1443 uint32
	x1442, x1443 = bits.Add32(x1409, uint32(0x0), uint32(uint1(x1441)))
	var x1444 uint32
	var x1445 uint32
	x1444, x1445 = bits.Add32(x1411, uint32(0x0), uint32(uint1(x1443)))
	var x1446 uint32
	var x1447 uint32
	x1446, x1447 = bits.Add32(x1413, x1431, uint32(uint1(x1445)))
	var x1448 uint32
	var x1449 uint32
	x1448, x1449 = bits.Add32(x1415, x1433, uint32(uint1(x1447)))
	var x1450 uint32
	var x1451 uint32
	x1450, x1451 = bits.Add32(x1417, x1435, uint32(uint1(x1449)))
	var x1452 uint32
	var x1453 uint32
	x1452, x1453 = bits.Add32(x1419, x1437, uint32(uint1(x1451)))
	var x1454 uint32
	var x1455 uint32
	x1454, x1455 = bits.Add32(x1421, x1439, uint32(uint1(x1453)))
	x1456 := (uint32(uint1(x1455)) + uint32(uint1(x1422)))
	var x1457 uint32
	var x1458 uint32
	x1458, x1457 = bits.Mul32(x111, arg1[6])
	var x1459 uint32
	var x1460 uint32
	x1460, x1459 = bits.Mul32(x111, arg1[5])
	var x1461 uint32
	var x1462 uint32
	x1462, x1461 = bits.Mul32(x111, arg1[4])
	var x1463 uint32
	var x1464 uint32
	x1464, x1463 = bits.Mul32(x111, arg1[3])
	var x1465 uint32
	var x1466 uint32
	x1466, x1465 = bits.Mul32(x111, arg1[2])
	var x1467 uint32
	var x1468 uint32
	x1468, x1467 = bits.Mul32(x111, arg1[1])
	var x1469 uint32
	var x1470 uint32
	x1470, x1469 = bits.Mul32(x111, arg1[0])
	var x1471 uint32
	var x1472 uint32
	x1471, x1472 = bits.Add32(x1470, x1467, uint32(0x0))
	var x1473 uint32
	var x1474 uint32
	x1473, x1474 = bits.Add32(x1468, x1465, uint32(uint1(x1472)))
	var x1475 uint32
	var x1476 uint32
	x1475, x1476 = bits.Add32(x1466, x1463, uint32(uint1(x1474)))
	var x1477 uint32
	var x1478 uint32
	x1477, x1478 = bits.Add32(x1464, x1461, uint32(uint1(x1476)))
	var x1479 uint32
	var x1480 uint32
	x1479, x1480 = bits.Add32(x1462, x1459, uint32(uint1(x1478)))
	var x1481 uint32
	var x1482 uint32
	x1481, x1482 = bits.Add32(x1460, x1457, uint32(uint1(x1480)))
	x1483 := (uint32(uint1(x1482)) + x1458)
	var x1484 uint32
	var x1485 uint32
	x1484, x1485 = bits.Add32(x1442, x1469, uint32(0x0))
	var x1486 uint32
	var x1487 uint32
	x1486, x1487 = bits.Add32(x1444, x1471, uint32(uint1(x1485)))
	var x1488 uint32
	var x1489 uint32
	x1488, x1489 = bits.Add32(x1446, x1473, uint32(uint1(x1487)))
	var x1490 uint32
	var x1491 uint32
	x1490, x1491 = bits.Add32(x1448, x1475, uint32(uint1(x1489)))
	var x1492 uint32
	var x1493 uint32
	x1492, x1493 = bits.Add32(x1450, x1477, uint32(uint1(x1491)))
	var x1494 uint32
	var x1495 uint32
	x1494, x1495 = bits.Add32(x1452, x1479, uint32(uint1(x1493)))
	var x1496 uint32
	var x1497 uint32
	x1496, x1497 = bits.Add32(x1454, x1481, uint32(uint1(x1495)))
	var x1498 uint32
	var x1499 uint32
	x1498, x1499 = bits.Add32(x1456, x1483, uint32(uint1(x1497)))
	var x1500 uint32
	_, x1500 = bits.Mul32(x1484, 0xffffffff)
	var x1502 uint32
	var x1503 uint32
	x1503, x1502 = bits.Mul32(x1500, 0xffffffff)
	var x1504 uint32
	var x1505 uint32
	x1505, x1504 = bits.Mul32(x1500, 0xffffffff)
	var x1506 uint32
	var x1507 uint32
	x1507, x1506 = bits.Mul32(x1500, 0xffffffff)
	var x1508 uint32
	var x1509 uint32
	x1509, x1508 = bits.Mul32(x1500, 0xffffffff)
	var x1510 uint32
	var x1511 uint32
	x1510, x1511 = bits.Add32(x1509, x1506, uint32(0x0))
	var x1512 uint32
	var x1513 uint32
	x1512, x1513 = bits.Add32(x1507, x1504, uint32(uint1(x1511)))
	var x1514 uint32
	var x1515 uint32
	x1514, x1515 = bits.Add32(x1505, x1502, uint32(uint1(x1513)))
	x1516 := (uint32(uint1(x1515)) + x1503)
	var x1518 uint32
	_, x1518 = bits.Add32(x1484, x1500, uint32(0x0))
	var x1519 uint32
	var x1520 uint32
	x1519, x1520 = bits.Add32(x1486, uint32(0x0), uint32(uint1(x1518)))
	var x1521 uint32
	var x1522 uint32
	x1521, x1522 = bits.Add32(x1488, uint32(0x0), uint32(uint1(x1520)))
	var x1523 uint32
	var x1524 uint32
	x1523, x1524 = bits.Add32(x1490, x1508, uint32(uint1(x1522)))
	var x1525 uint32
	var x1526 uint32
	x1525, x1526 = bits.Add32(x1492, x1510, uint32(uint1(x1524)))
	var x1527 uint32
	var x1528 uint32
	x1527, x1528 = bits.Add32(x1494, x1512, uint32(uint1(x1526)))
	var x1529 uint32
	var x1530 uint32
	x1529, x1530 = bits.Add32(x1496, x1514, uint32(uint1(x1528)))
	var x1531 uint32
	var x1532 uint32
	x1531, x1532 = bits.Add32(x1498, x1516, uint32(uint1(x1530)))
	x1533 := (uint32(uint1(x1532)) + uint32(uint1(x1499)))
	var x1534 uint32
	var x1535 uint32
	x1535, x1534 = bits.Mul32(x112, arg1[6])
	var x1536 uint32
	var x1537 uint32
	x1537, x1536 = bits.Mul32(x112, arg1[5])
	var x1538 uint32
	var x1539 uint32
	x1539, x1538 = bits.Mul32(x112, arg1[4])
	var x1540 uint32
	var x1541 uint32
	x1541, x1540 = bits.Mul32(x112, arg1[3])
	var x1542 uint32
	var x1543 uint32
	x1543, x1542 = bits.Mul32(x112, arg1[2])
	var x1544 uint32
	var x1545 uint32
	x1545, x1544 = bits.Mul32(x112, arg1[1])
	var x1546 uint32
	var x1547 uint32
	x1547, x1546 = bits.Mul32(x112, arg1[0])
	var x1548 uint32
	var x1549 uint32
	x1548, x1549 = bits.Add32(x1547, x1544, uint32(0x0))
	var x1550 uint32
	var x1551 uint32
	x1550, x1551 = bits.Add32(x1545, x1542, uint32(uint1(x1549)))
	var x1552 uint32
	var x1553 uint32
	x1552, x1553 = bits.Add32(x1543, x1540, uint32(uint1(x1551)))
	var x1554 uint32
	var x1555 uint32
	x1554, x1555 = bits.Add32(x1541, x1538, uint32(uint1(x1553)))
	var x1556 uint32
	var x1557 uint32
	x1556, x1557 = bits.Add32(x1539, x1536, uint32(uint1(x1555)))
	var x1558 uint32
	var x1559 uint32
	x1558, x1559 = bits.Add32(x1537, x1534, uint32(uint1(x1557)))
	x1560 := (uint32(uint1(x1559)) + x1535)
	var x1561 uint32
	var x1562 uint32
	x1561, x1562 = bits.Add32(x1519, x1546, uint32(0x0))
	var x1563 uint32
	var x1564 uint32
	x1563, x1564 = bits.Add32(x1521, x1548, uint32(uint1(x1562)))
	var x1565 uint32
	var x1566 uint32
	x1565, x1566 = bits.Add32(x1523, x1550, uint32(uint1(x1564)))
	var x1567 uint32
	var x1568 uint32
	x1567, x1568 = bits.Add32(x1525, x1552, uint32(uint1(x1566)))
	var x1569 uint32
	var x1570 uint32
	x1569, x1570 = bits.Add32(x1527, x1554, uint32(uint1(x1568)))
	var x1571 uint32
	var x1572 uint32
	x1571, x1572 = bits.Add32(x1529, x1556, uint32(uint1(x1570)))
	var x1573 uint32
	var x1574 uint32
	x1573, x1574 = bits.Add32(x1531, x1558, uint32(uint1(x1572)))
	var x1575 uint32
	var x1576 uint32
	x1575, x1576 = bits.Add32(x1533, x1560, uint32(uint1(x1574)))
	var x1577 uint32
	_, x1577 = bits.Mul32(x1561, 0xffffffff)
	var x1579 uint32
	var x1580 uint32
	x1580, x1579 = bits.Mul32(x1577, 0xffffffff)
	var x1581 uint32
	var x1582 uint32
	x1582, x1581 = bits.Mul32(x1577, 0xffffffff)
	var x1583 uint32
	var x1584 uint32
	x1584, x1583 = bits.Mul32(x1577, 0xffffffff)
	var x1585 uint32
	var x1586 uint32
	x1586, x1585 = bits.Mul32(x1577, 0xffffffff)
	var x1587 uint32
	var x1588 uint32
	x1587, x1588 = bits.Add32(x1586, x1583, uint32(0x0))
	var x1589 uint32
	var x1590 uint32
	x1589, x1590 = bits.Add32(x1584, x1581, uint32(uint1(x1588)))
	var x1591 uint32
	var x1592 uint32
	x1591, x1592 = bits.Add32(x1582, x1579, uint32(uint1(x1590)))
	x1593 := (uint32(uint1(x1592)) + x1580)
	var x1595 uint32
	_, x1595 = bits.Add32(x1561, x1577, uint32(0x0))
	var x1596 uint32
	var x1597 uint32
	x1596, x1597 = bits.Add32(x1563, uint32(0x0), uint32(uint1(x1595)))
	var x1598 uint32
	var x1599 uint32
	x1598, x1599 = bits.Add32(x1565, uint32(0x0), uint32(uint1(x1597)))
	var x1600 uint32
	var x1601 uint32
	x1600, x1601 = bits.Add32(x1567, x1585, uint32(uint1(x1599)))
	var x1602 uint32
	var x1603 uint32
	x1602, x1603 = bits.Add32(x1569, x1587, uint32(uint1(x1601)))
	var x1604 uint32
	var x1605 uint32
	x1604, x1605 = bits.Add32(x1571, x1589, uint32(uint1(x1603)))
	var x1606 uint32
	var x1607 uint32
	x1606, x1607 = bits.Add32(x1573, x1591, uint32(uint1(x1605)))
	var x1608 uint32
	var x1609 uint32
	x1608, x1609 = bits.Add32(x1575, x1593, uint32(uint1(x1607)))
	x1610 := (uint32(uint1(x1609)) + uint32(uint1(x1576)))
	var x1611 uint32
	var x1612 uint32
	x1612, x1611 = bits.Mul32(x113, arg1[6])
	var x1613 uint32
	var x1614 uint32
	x1614, x1613 = bits.Mul32(x113, arg1[5])
	var x1615 uint32
	var x1616 uint32
	x1616, x1615 = bits.Mul32(x113, arg1[4])
	var x1617 uint32
	var x1618 uint32
	x1618, x1617 = bits.Mul32(x113, arg1[3])
	var x1619 uint32
	var x1620 uint32
	x1620, x1619 = bits.Mul32(x113, arg1[2])
	var x1621 uint32
	var x1622 uint32
	x1622, x1621 = bits.Mul32(x113, arg1[1])
	var x1623 uint32
	var x1624 uint32
	x1624, x1623 = bits.Mul32(x113, arg1[0])
	var x1625 uint32
	var x1626 uint32
	x1625, x1626 = bits.Add32(x1624, x1621, uint32(0x0))
	var x1627 uint32
	var x1628 uint32
	x1627, x1628 = bits.Add32(x1622, x1619, uint32(uint1(x1626)))
	var x1629 uint32
	var x1630 uint32
	x1629, x1630 = bits.Add32(x1620, x1617, uint32(uint1(x1628)))
	var x1631 uint32
	var x1632 uint32
	x1631, x1632 = bits.Add32(x1618, x1615, uint32(uint1(x1630)))
	var x1633 uint32
	var x1634 uint32
	x1633, x1634 = bits.Add32(x1616, x1613, uint32(uint1(x1632)))
	var x1635 uint32
	var x1636 uint32
	x1635, x1636 = bits.Add32(x1614, x1611, uint32(uint1(x1634)))
	x1637 := (uint32(uint1(x1636)) + x1612)
	var x1638 uint32
	var x1639 uint32
	x1638, x1639 = bits.Add32(x1596, x1623, uint32(0x0))
	var x1640 uint32
	var x1641 uint32
	x1640, x1641 = bits.Add32(x1598, x1625, uint32(uint1(x1639)))
	var x1642 uint32
	var x1643 uint32
	x1642, x1643 = bits.Add32(x1600, x1627, uint32(uint1(x1641)))
	var x1644 uint32
	var x1645 uint32
	x1644, x1645 = bits.Add32(x1602, x1629, uint32(uint1(x1643)))
	var x1646 uint32
	var x1647 uint32
	x1646, x1647 = bits.Add32(x1604, x1631, uint32(uint1(x1645)))
	var x1648 uint32
	var x1649 uint32
	x1648, x1649 = bits.Add32(x1606, x1633, uint32(uint1(x1647)))
	var x1650 uint32
	var x1651 uint32
	x1650, x1651 = bits.Add32(x1608, x1635, uint32(uint1(x1649)))
	var x1652 uint32
	var x1653 uint32
	x1652, x1653 = bits.Add32(x1610, x1637, uint32(uint1(x1651)))
	var x1654 uint32
	_, x1654 = bits.Mul32(x1638, 0xffffffff)
	var x1656 uint32
	var x1657 uint32
	x1657, x1656 = bits.Mul32(x1654, 0xffffffff)
	var x1658 uint32
	var x1659 uint32
	x1659, x1658 = bits.Mul32(x1654, 0xffffffff)
	var x1660 uint32
	var x1661 uint32
	x1661, x1660 = bits.Mul32(x1654, 0xffffffff)
	var x1662 uint32
	var x1663 uint32
	x1663, x1662 = bits.Mul32(x1654, 0xffffffff)
	var x1664 uint32
	var x1665 uint32
	x1664, x1665 = bits.Add32(x1663, x1660, uint32(0x0))
	var x1666 uint32
	var x1667 uint32
	x1666, x1667 = bits.Add32(x1661, x1658, uint32(uint1(x1665)))
	var x1668 uint32
	var x1669 uint32
	x1668, x1669 = bits.Add32(x1659, x1656, uint32(uint1(x1667)))
	x1670 := (uint32(uint1(x1669)) + x1657)
	var x1672 uint32
	_, x1672 = bits.Add32(x1638, x1654, uint32(0x0))
	var x1673 uint32
	var x1674 uint32
	x1673, x1674 = bits.Add32(x1640, uint32(0x0), uint32(uint1(x1672)))
	var x1675 uint32
	var x1676 uint32
	x1675, x1676 = bits.Add32(x1642, uint32(0x0), uint32(uint1(x1674)))
	var x1677 uint32
	var x1678 uint32
	x1677, x1678 = bits.Add32(x1644, x1662, uint32(uint1(x1676)))
	var x1679 uint32
	var x1680 uint32
	x1679, x1680 = bits.Add32(x1646, x1664, uint32(uint1(x1678)))
	var x1681 uint32
	var x1682 uint32
	x1681, x1682 = bits.Add32(x1648, x1666, uint32(uint1(x1680)))
	var x1683 uint32
	var x1684 uint32
	x1683, x1684 = bits.Add32(x1650, x1668, uint32(uint1(x1682)))
	var x1685 uint32
	var x1686 uint32
	x1685, x1686 = bits.Add32(x1652, x1670, uint32(uint1(x1684)))
	x1687 := (uint32(uint1(x1686)) + uint32(uint1(x1653)))
	var x1688 uint32
	var x1689 uint32
	x1689, x1688 = bits.Mul32(x114, arg1[6])
	var x1690 uint32
	var x1691 uint32
	x1691, x1690 = bits.Mul32(x114, arg1[5])
	var x1692 uint32
	var x1693 uint32
	x1693, x1692 = bits.Mul32(x114, arg1[4])
	var x1694 uint32
	var x1695 uint32
	x1695, x1694 = bits.Mul32(x114, arg1[3])
	var x1696 uint32
	var x1697 uint32
	x1697, x1696 = bits.Mul32(x114, arg1[2])
	var x1698 uint32
	var x1699 uint32
	x1699, x1698 = bits.Mul32(x114, arg1[1])
	var x1700 uint32
	var x1701 uint32
	x1701, x1700 = bits.Mul32(x114, arg1[0])
	var x1702 uint32
	var x1703 uint32
	x1702, x1703 = bits.Add32(x1701, x1698, uint32(0x0))
	var x1704 uint32
	var x1705 uint32
	x1704, x1705 = bits.Add32(x1699, x1696, uint32(uint1(x1703)))
	var x1706 uint32
	var x1707 uint32
	x1706, x1707 = bits.Add32(x1697, x1694, uint32(uint1(x1705)))
	var x1708 uint32
	var x1709 uint32
	x1708, x1709 = bits.Add32(x1695, x1692, uint32(uint1(x1707)))
	var x1710 uint32
	var x1711 uint32
	x1710, x1711 = bits.Add32(x1693, x1690, uint32(uint1(x1709)))
	var x1712 uint32
	var x1713 uint32
	x1712, x1713 = bits.Add32(x1691, x1688, uint32(uint1(x1711)))
	x1714 := (uint32(uint1(x1713)) + x1689)
	var x1715 uint32
	var x1716 uint32
	x1715, x1716 = bits.Add32(x1673, x1700, uint32(0x0))
	var x1717 uint32
	var x1718 uint32
	x1717, x1718 = bits.Add32(x1675, x1702, uint32(uint1(x1716)))
	var x1719 uint32
	var x1720 uint32
	x1719, x1720 = bits.Add32(x1677, x1704, uint32(uint1(x1718)))
	var x1721 uint32
	var x1722 uint32
	x1721, x1722 = bits.Add32(x1679, x1706, uint32(uint1(x1720)))
	var x1723 uint32
	var x1724 uint32
	x1723, x1724 = bits.Add32(x1681, x1708, uint32(uint1(x1722)))
	var x1725 uint32
	var x1726 uint32
	x1725, x1726 = bits.Add32(x1683, x1710, uint32(uint1(x1724)))
	var x1727 uint32
	var x1728 uint32
	x1727, x1728 = bits.Add32(x1685, x1712, uint32(uint1(x1726)))
	var x1729 uint32
	var x1730 uint32
	x1729, x1730 = bits.Add32(x1687, x1714, uint32(uint1(x1728)))
	var x1731 uint32
	_, x1731 = bits.Mul32(x1715, 0xffffffff)
	var x1733 uint32
	var x1734 uint32
	x1734, x1733 = bits.Mul32(x1731, 0xffffffff)
	var x1735 uint32
	var x1736 uint32
	x1736, x1735 = bits.Mul32(x1731, 0xffffffff)
	var x1737 uint32
	var x1738 uint32
	x1738, x1737 = bits.Mul32(x1731, 0xffffffff)
	var x1739 uint32
	var x1740 uint32
	x1740, x1739 = bits.Mul32(x1731, 0xffffffff)
	var x1741 uint32
	var x1742 uint32
	x1741, x1742 = bits.Add32(x1740, x1737, uint32(0x0))
	var x1743 uint32
	var x1744 uint32
	x1743, x1744 = bits.Add32(x1738, x1735, uint32(uint1(x1742)))
	var x1745 uint32
	var x1746 uint32
	x1745, x1746 = bits.Add32(x1736, x1733, uint32(uint1(x1744)))
	x1747 := (uint32(uint1(x1746)) + x1734)
	var x1749 uint32
	_, x1749 = bits.Add32(x1715, x1731, uint32(0x0))
	var x1750 uint32
	var x1751 uint32
	x1750, x1751 = bits.Add32(x1717, uint32(0x0), uint32(uint1(x1749)))
	var x1752 uint32
	var x1753 uint32
	x1752, x1753 = bits.Add32(x1719, uint32(0x0), uint32(uint1(x1751)))
	var x1754 uint32
	var x1755 uint32
	x1754, x1755 = bits.Add32(x1721, x1739, uint32(uint1(x1753)))
	var x1756 uint32
	var x1757 uint32
	x1756, x1757 = bits.Add32(x1723, x1741, uint32(uint1(x1755)))
	var x1758 uint32
	var x1759 uint32
	x1758, x1759 = bits.Add32(x1725, x1743, uint32(uint1(x1757)))
	var x1760 uint32
	var x1761 uint32
	x1760, x1761 = bits.Add32(x1727, x1745, uint32(uint1(x1759)))
	var x1762 uint32
	var x1763 uint32
	x1762, x1763 = bits.Add32(x1729, x1747, uint32(uint1(x1761)))
	x1764 := (uint32(uint1(x1763)) + uint32(uint1(x1730)))
	var x1765 uint32
	var x1766 uint32
	x1765, x1766 = bits.Sub32(x1750, uint32(0x1), uint32(0x0))
	var x1767 uint32
	var x1768 uint32
	x1767, x1768 = bits.Sub32(x1752, uint32(0x0), uint32(uint1(x1766)))
	var x1769 uint32
	var x1770 uint32
	x1769, x1770 = bits.Sub32(x1754, uint32(0x0), uint32(uint1(x1768)))
	var x1771 uint32
	var x1772 uint32
	x1771, x1772 = bits.Sub32(x1756, 0xffffffff, uint32(uint1(x1770)))
	var x1773 uint32
	var x1774 uint32
	x1773, x1774 = bits.Sub32(x1758, 0xffffffff, uint32(uint1(x1772)))
	var x1775 uint32
	var x1776 uint32
	x1775, x1776 = bits.Sub32(x1760, 0xffffffff, uint32(uint1(x1774)))
	var x1777 uint32
	var x1778 uint32
	x1777, x1778 = bits.Sub32(x1762, 0xffffffff, uint32(uint1(x1776)))
	var x1780 uint32
	_, x1780 = bits.Sub32(x1764, uint32(0x0), uint32(uint1(x1778)))
	var x1781 uint32
	cmovznzU32(&x1781, uint1(x1780), x1765, x1750)
	var x1782 uint32
	cmovznzU32(&x1782, uint1(x1780), x1767, x1752)
	var x1783 uint32
	cmovznzU32(&x1783, uint1(x1780), x1769, x1754)
	var x1784 uint32
	cmovznzU32(&x1784, uint1(x1780), x1771, x1756)
	var x1785 uint32
	cmovznzU32(&x1785, uint1(x1780), x1773, x1758)
	var x1786 uint32
	cmovznzU32(&x1786, uint1(x1780), x1775, x1760)
	var x1787 uint32
	cmovznzU32(&x1787, uint1(x1780), x1777, x1762)
	var x1788 uint32
	var x1789 uint32
	x1789, x1788 = bits.Mul32(x146, arg2[6])
	var x1790 uint32
	var x1791 uint32
	x1791, x1790 = bits.Mul32(x146, arg2[5])
	var x1792 uint32
	var x1793 uint32
	x1793, x1792 = bits.Mul32(x146, arg2[4])
	var x1794 uint32
	var x1795 uint32
	x1795, x1794 = bits.Mul32(x146, arg2[3])
	var x1796 uint32
	var x1797 uint32
	x1797, x1796 = bits.Mul32(x146, arg2[2])
	var x1798 uint32
	var x1799 uint32
	x1799, x1798 = bits.Mul32(x146, arg2[1])
	var x1800 uint32
	var x1801 uint32
	x1801, x1800 = bits.Mul32(x146, arg2[0])
	var x1802 uint32
	var x1803 uint32
	x1802, x1803 = bits.Add32(x1801, x1798, uint32(0x0))
	var x1804 uint32
	var x1805 uint32
	x1804, x1805 = bits.Add32(x1799, x1796, uint32(uint1(x1803)))
	var x1806 uint32
	var x1807 uint32
	x1806, x1807 = bits.Add32(x1797, x1794, uint32(uint1(x1805)))
	var x1808 uint32
	var x1809 uint32
	x1808, x1809 = bits.Add32(x1795, x1792, uint32(uint1(x1807)))
	var x1810 uint32
	var x1811 uint32
	x1810, x1811 = bits.Add32(x1793, x1790, uint32(uint1(x1809)))
	var x1812 uint32
	var x1813 uint32
	x1812, x1813 = bits.Add32(x1791, x1788, uint32(uint1(x1811)))
	x1814 := (uint32(uint1(x1813)) + x1789)
	var x1815 uint32
	_, x1815 = bits.Mul32(x1800, 0xffffffff)
	var x1817 uint32
	var x1818 uint32
	x1818, x1817 = bits.Mul32(x1815, 0xffffffff)
	var x1819 uint32
	var x1820 uint32
	x1820, x1819 = bits.Mul32(x1815, 0xffffffff)
	var x1821 uint32
	var x1822 uint32
	x1822, x1821 = bits.Mul32(x1815, 0xffffffff)
	var x1823 uint32
	var x1824 uint32
	x1824, x1823 = bits.Mul32(x1815, 0xffffffff)
	var x1825 uint32
	var x1826 uint32
	x1825, x1826 = bits.Add32(x1824, x1821, uint32(0x0))
	var x1827 uint32
	var x1828 uint32
	x1827, x1828 = bits.Add32(x1822, x1819, uint32(uint1(x1826)))
	var x1829 uint32
	var x1830 uint32
	x1829, x1830 = bits.Add32(x1820, x1817, uint32(uint1(x1828)))
	x1831 := (uint32(uint1(x1830)) + x1818)
	var x1833 uint32
	_, x1833 = bits.Add32(x1800, x1815, uint32(0x0))
	var x1834 uint32
	var x1835 uint32
	x1834, x1835 = bits.Add32(x1802, uint32(0x0), uint32(uint1(x1833)))
	var x1836 uint32
	var x1837 uint32
	x1836, x1837 = bits.Add32(x1804, uint32(0x0), uint32(uint1(x1835)))
	var x1838 uint32
	var x1839 uint32
	x1838, x1839 = bits.Add32(x1806, x1823, uint32(uint1(x1837)))
	var x1840 uint32
	var x1841 uint32
	x1840, x1841 = bits.Add32(x1808, x1825, uint32(uint1(x1839)))
	var x1842 uint32
	var x1843 uint32
	x1842, x1843 = bits.Add32(x1810, x1827, uint32(uint1(x1841)))
	var x1844 uint32
	var x1845 uint32
	x1844, x1845 = bits.Add32(x1812, x1829, uint32(uint1(x1843)))
	var x1846 uint32
	var x1847 uint32
	x1846, x1847 = bits.Add32(x1814, x1831, uint32(uint1(x1845)))
	var x1848 uint32
	var x1849 uint32
	x1849, x1848 = bits.Mul32(x147, arg2[6])
	var x1850 uint32
	var x1851 uint32
	x1851, x1850 = bits.Mul32(x147, arg2[5])
	var x1852 uint32
	var x1853 uint32
	x1853, x1852 = bits.Mul32(x147, arg2[4])
	var x1854 uint32
	var x1855 uint32
	x1855, x1854 = bits.Mul32(x147, arg2[3])
	var x1856 uint32
	var x1857 uint32
	x1857, x1856 = bits.Mul32(x147, arg2[2])
	var x1858 uint32
	var x1859 uint32
	x1859, x1858 = bits.Mul32(x147, arg2[1])
	var x1860 uint32
	var x1861 uint32
	x1861, x1860 = bits.Mul32(x147, arg2[0])
	var x1862 uint32
	var x1863 uint32
	x1862, x1863 = bits.Add32(x1861, x1858, uint32(0x0))
	var x1864 uint32
	var x1865 uint32
	x1864, x1865 = bits.Add32(x1859, x1856, uint32(uint1(x1863)))
	var x1866 uint32
	var x1867 uint32
	x1866, x1867 = bits.Add32(x1857, x1854, uint32(uint1(x1865)))
	var x1868 uint32
	var x1869 uint32
	x1868, x1869 = bits.Add32(x1855, x1852, uint32(uint1(x1867)))
	var x1870 uint32
	var x1871 uint32
	x1870, x1871 = bits.Add32(x1853, x1850, uint32(uint1(x1869)))
	var x1872 uint32
	var x1873 uint32
	x1872, x1873 = bits.Add32(x1851, x1848, uint32(uint1(x1871)))
	x1874 := (uint32(uint1(x1873)) + x1849)
	var x1875 uint32
	var x1876 uint32
	x1875, x1876 = bits.Add32(x1834, x1860, uint32(0x0))
	var x1877 uint32
	var x1878 uint32
	x1877, x1878 = bits.Add32(x1836, x1862, uint32(uint1(x1876)))
	var x1879 uint32
	var x1880 uint32
	x1879, x1880 = bits.Add32(x1838, x1864, uint32(uint1(x1878)))
	var x1881 uint32
	var x1882 uint32
	x1881, x1882 = bits.Add32(x1840, x1866, uint32(uint1(x1880)))
	var x1883 uint32
	var x1884 uint32
	x1883, x1884 = bits.Add32(x1842, x1868, uint32(uint1(x1882)))
	var x1885 uint32
	var x1886 uint32
	x1885, x1886 = bits.Add32(x1844, x1870, uint32(uint1(x1884)))
	var x1887 uint32
	var x1888 uint32
	x1887, x1888 = bits.Add32(x1846, x1872, uint32(uint1(x1886)))
	var x1889 uint32
	var x1890 uint32
	x1889, x1890 = bits.Add32(uint32(uint1(x1847)), x1874, uint32(uint1(x1888)))
	var x1891 uint32
	_, x1891 = bits.Mul32(x1875, 0xffffffff)
	var x1893 uint32
	var x1894 uint32
	x1894, x1893 = bits.Mul32(x1891, 0xffffffff)
	var x1895 uint32
	var x1896 uint32
	x1896, x1895 = bits.Mul32(x1891, 0xffffffff)
	var x1897 uint32
	var x1898 uint32
	x1898, x1897 = bits.Mul32(x1891, 0xffffffff)
	var x1899 uint32
	var x1900 uint32
	x1900, x1899 = bits.Mul32(x1891, 0xffffffff)
	var x1901 uint32
	var x1902 uint32
	x1901, x1902 = bits.Add32(x1900, x1897, uint32(0x0))
	var x1903 uint32
	var x1904 uint32
	x1903, x1904 = bits.Add32(x1898, x1895, uint32(uint1(x1902)))
	var x1905 uint32
	var x1906 uint32
	x1905, x1906 = bits.Add32(x1896, x1893, uint32(uint1(x1904)))
	x1907 := (uint32(uint1(x1906)) + x1894)
	var x1909 uint32
	_, x1909 = bits.Add32(x1875, x1891, uint32(0x0))
	var x1910 uint32
	var x1911 uint32
	x1910, x1911 = bits.Add32(x1877, uint32(0x0), uint32(uint1(x1909)))
	var x1912 uint32
	var x1913 uint32
	x1912, x1913 = bits.Add32(x1879, uint32(0x0), uint32(uint1(x1911)))
	var x1914 uint32
	var x1915 uint32
	x1914, x1915 = bits.Add32(x1881, x1899, uint32(uint1(x1913)))
	var x1916 uint32
	var x1917 uint32
	x1916, x1917 = bits.Add32(x1883, x1901, uint32(uint1(x1915)))
	var x1918 uint32
	var x1919 uint32
	x1918, x1919 = bits.Add32(x1885, x1903, uint32(uint1(x1917)))
	var x1920 uint32
	var x1921 uint32
	x1920, x1921 = bits.Add32(x1887, x1905, uint32(uint1(x1919)))
	var x1922 uint32
	var x1923 uint32
	x1922, x1923 = bits.Add32(x1889, x1907, uint32(uint1(x1921)))
	x1924 := (uint32(uint1(x1923)) + uint32(uint1(x1890)))
	var x1925 uint32
	var x1926 uint32
	x1926, x1925 = bits.Mul32(x148, arg2[6])
	var x1927 uint32
	var x1928 uint32
	x1928, x1927 = bits.Mul32(x148, arg2[5])
	var x1929 uint32
	var x1930 uint32
	x1930, x1929 = bits.Mul32(x148, arg2[4])
	var x1931 uint32
	var x1932 uint32
	x1932, x1931 = bits.Mul32(x148, arg2[3])
	var x1933 uint32
	var x1934 uint32
	x1934, x1933 = bits.Mul32(x148, arg2[2])
	var x1935 uint32
	var x1936 uint32
	x1936, x1935 = bits.Mul32(x148, arg2[1])
	var x1937 uint32
	var x1938 uint32
	x1938, x1937 = bits.Mul32(x148, arg2[0])
	var x1939 uint32
	var x1940 uint32
	x1939, x1940 = bits.Add32(x1938, x1935, uint32(0x0))
	var x1941 uint32
	var x1942 uint32
	x1941, x1942 = bits.Add32(x1936, x1933, uint32(uint1(x1940)))
	var x1943 uint32
	var x1944 uint32
	x1943, x1944 = bits.Add32(x1934, x1931, uint32(uint1(x1942)))
	var x1945 uint32
	var x1946 uint32
	x1945, x1946 = bits.Add32(x1932, x1929, uint32(uint1(x1944)))
	var x1947 uint32
	var x1948 uint32
	x1947, x1948 = bits.Add32(x1930, x1927, uint32(uint1(x1946)))
	var x1949 uint32
	var x1950 uint32
	x1949, x1950 = bits.Add32(x1928, x1925, uint32(uint1(x1948)))
	x1951 := (uint32(uint1(x1950)) + x1926)
	var x1952 uint32
	var x1953 uint32
	x1952, x1953 = bits.Add32(x1910, x1937, uint32(0x0))
	var x1954 uint32
	var x1955 uint32
	x1954, x1955 = bits.Add32(x1912, x1939, uint32(uint1(x1953)))
	var x1956 uint32
	var x1957 uint32
	x1956, x1957 = bits.Add32(x1914, x1941, uint32(uint1(x1955)))
	var x1958 uint32
	var x1959 uint32
	x1958, x1959 = bits.Add32(x1916, x1943, uint32(uint1(x1957)))
	var x1960 uint32
	var x1961 uint32
	x1960, x1961 = bits.Add32(x1918, x1945, uint32(uint1(x1959)))
	var x1962 uint32
	var x1963 uint32
	x1962, x1963 = bits.Add32(x1920, x1947, uint32(uint1(x1961)))
	var x1964 uint32
	var x1965 uint32
	x1964, x1965 = bits.Add32(x1922, x1949, uint32(uint1(x1963)))
	var x1966 uint32
	var x1967 uint32
	x1966, x1967 = bits.Add32(x1924, x1951, uint32(uint1(x1965)))
	var x1968 uint32
	_, x1968 = bits.Mul32(x1952, 0xffffffff)
	var x1970 uint32
	var x1971 uint32
	x1971, x1970 = bits.Mul32(x1968, 0xffffffff)
	var x1972 uint32
	var x1973 uint32
	x1973, x1972 = bits.Mul32(x1968, 0xffffffff)
	var x1974 uint32
	var x1975 uint32
	x1975, x1974 = bits.Mul32(x1968, 0xffffffff)
	var x1976 uint32
	var x1977 uint32
	x1977, x1976 = bits.Mul32(x1968, 0xffffffff)
	var x1978 uint32
	var x1979 uint32
	x1978, x1979 = bits.Add32(x1977, x1974, uint32(0x0))
	var x1980 uint32
	var x1981 uint32
	x1980, x1981 = bits.Add32(x1975, x1972, uint32(uint1(x1979)))
	var x1982 uint32
	var x1983 uint32
	x1982, x1983 = bits.Add32(x1973, x1970, uint32(uint1(x1981)))
	x1984 := (uint32(uint1(x1983)) + x1971)
	var x1986 uint32
	_, x1986 = bits.Add32(x1952, x1968, uint32(0x0))
	var x1987 uint32
	var x1988 uint32
	x1987, x1988 = bits.Add32(x1954, uint32(0x0), uint32(uint1(x1986)))
	var x1989 uint32
	var x1990 uint32
	x1989, x1990 = bits.Add32(x1956, uint32(0x0), uint32(uint1(x1988)))
	var x1991 uint32
	var x1992 uint32
	x1991, x1992 = bits.Add32(x1958, x1976, uint32(uint1(x1990)))
	var x1993 uint32
	var x1994 uint32
	x1993, x1994 = bits.Add32(x1960, x1978, uint32(uint1(x1992)))
	var x1995 uint32
	var x1996 uint32
	x1995, x1996 = bits.Add32(x1962, x1980, uint32(uint1(x1994)))
	var x1997 uint32
	var x1998 uint32
	x1997, x1998 = bits.Add32(x1964, x1982, uint32(uint1(x1996)))
	var x1999 uint32
	var x2000 uint32
	x1999, x2000 = bits.Add32(x1966, x1984, uint32(uint1(x1998)))
	x2001 := (uint32(uint1(x2000)) + uint32(uint1(x1967)))
	var x2002 uint32
	var x2003 uint32
	x2003, x2002 = bits.Mul32(x149, arg2[6])
	var x2004 uint32
	var x2005 uint32
	x2005, x2004 = bits.Mul32(x149, arg2[5])
	var x2006 uint32
	var x2007 uint32
	x2007, x2006 = bits.Mul32(x149, arg2[4])
	var x2008 uint32
	var x2009 uint32
	x2009, x2008 = bits.Mul32(x149, arg2[3])
	var x2010 uint32
	var x2011 uint32
	x2011, x2010 = bits.Mul32(x149, arg2[2])
	var x2012 uint32
	var x2013 uint32
	x2013, x2012 = bits.Mul32(x149, arg2[1])
	var x2014 uint32
	var x2015 uint32
	x2015, x2014 = bits.Mul32(x149, arg2[0])
	var x2016 uint32
	var x2017 uint32
	x2016, x2017 = bits.Add32(x2015, x2012, uint32(0x0))
	var x2018 uint32
	var x2019 uint32
	x2018, x2019 = bits.Add32(x2013, x2010, uint32(uint1(x2017)))
	var x2020 uint32
	var x2021 uint32
	x2020, x2021 = bits.Add32(x2011, x2008, uint32(uint1(x2019)))
	var x2022 uint32
	var x2023 uint32
	x2022, x2023 = bits.Add32(x2009, x2006, uint32(uint1(x2021)))
	var x2024 uint32
	var x2025 uint32
	x2024, x2025 = bits.Add32(x2007, x2004, uint32(uint1(x2023)))
	var x2026 uint32
	var x2027 uint32
	x2026, x2027 = bits.Add32(x2005, x2002, uint32(uint1(x2025)))
	x2028 := (uint32(uint1(x2027)) + x2003)
	var x2029 uint32
	var x2030 uint32
	x2029, x2030 = bits.Add32(x1987, x2014, uint32(0x0))
	var x2031 uint32
	var x2032 uint32
	x2031, x2032 = bits.Add32(x1989, x2016, uint32(uint1(x2030)))
	var x2033 uint32
	var x2034 uint32
	x2033, x2034 = bits.Add32(x1991, x2018, uint32(uint1(x2032)))
	var x2035 uint32
	var x2036 uint32
	x2035, x2036 = bits.Add32(x1993, x2020, uint32(uint1(x2034)))
	var x2037 uint32
	var x2038 uint32
	x2037, x2038 = bits.Add32(x1995, x2022, uint32(uint1(x2036)))
	var x2039 uint32
	var x2040 uint32
	x2039, x2040 = bits.Add32(x1997, x2024, uint32(uint1(x2038)))
	var x2041 uint32
	var x2042 uint32
	x2041, x2042 = bits.Add32(x1999, x2026, uint32(uint1(x2040)))
	var x2043 uint32
	var x2044 uint32
	x2043, x2044 = bits.Add32(x2001, x2028, uint32(uint1(x2042)))
	var x2045 uint32
	_, x2045 = bits.Mul32(x2029, 0xffffffff)
	var x2047 uint32
	var x2048 uint32
	x2048, x2047 = bits.Mul32(x2045, 0xffffffff)
	var x2049 uint32
	var x2050 uint32
	x2050, x2049 = bits.Mul32(x2045, 0xffffffff)
	var x2051 uint32
	var x2052 uint32
	x2052, x2051 = bits.Mul32(x2045, 0xffffffff)
	var x2053 uint32
	var x2054 uint32
	x2054, x2053 = bits.Mul32(x2045, 0xffffffff)
	var x2055 uint32
	var x2056 uint32
	x2055, x2056 = bits.Add32(x2054, x2051, uint32(0x0))
	var x2057 uint32
	var x2058 uint32
	x2057, x2058 = bits.Add32(x2052, x2049, uint32(uint1(x2056)))
	var x2059 uint32
	var x2060 uint32
	x2059, x2060 = bits.Add32(x2050, x2047, uint32(uint1(x2058)))
	x2061 := (uint32(uint1(x2060)) + x2048)
	var x2063 uint32
	_, x2063 = bits.Add32(x2029, x2045, uint32(0x0))
	var x2064 uint32
	var x2065 uint32
	x2064, x2065 = bits.Add32(x2031, uint32(0x0), uint32(uint1(x2063)))
	var x2066 uint32
	var x2067 uint32
	x2066, x2067 = bits.Add32(x2033, uint32(0x0), uint32(uint1(x2065)))
	var x2068 uint32
	var x2069 uint32
	x2068, x2069 = bits.Add32(x2035, x2053, uint32(uint1(x2067)))
	var x2070 uint32
	var x2071 uint32
	x2070, x2071 = bits.Add32(x2037, x2055, uint32(uint1(x2069)))
	var x2072 uint32
	var x2073 uint32
	x2072, x2073 = bits.Add32(x2039, x2057, uint32(uint1(x2071)))
	var x2074 uint32
	var x2075 uint32
	x2074, x2075 = bits.Add32(x2041, x2059, uint32(uint1(x2073)))
	var x2076 uint32
	var x2077 uint32
	x2076, x2077 = bits.Add32(x2043, x2061, uint32(uint1(x2075)))
	x2078 := (uint32(uint1(x2077)) + uint32(uint1(x2044)))
	var x2079 uint32
	var x2080 uint32
	x2080, x2079 = bits.Mul32(x150, arg2[6])
	var x2081 uint32
	var x2082 uint32
	x2082, x2081 = bits.Mul32(x150, arg2[5])
	var x2083 uint32
	var x2084 uint32
	x2084, x2083 = bits.Mul32(x150, arg2[4])
	var x2085 uint32
	var x2086 uint32
	x2086, x2085 = bits.Mul32(x150, arg2[3])
	var x2087 uint32
	var x2088 uint32
	x2088, x2087 = bits.Mul32(x150, arg2[2])
	var x2089 uint32
	var x2090 uint32
	x2090, x2089 = bits.Mul32(x150, arg2[1])
	var x2091 uint32
	var x2092 uint32
	x2092, x2091 = bits.Mul32(x150, arg2[0])
	var x2093 uint32
	var x2094 uint32
	x2093, x2094 = bits.Add32(x2092, x2089, uint32(0x0))
	var x2095 uint32
	var x2096 uint32
	x2095, x2096 = bits.Add32(x2090, x2087, uint32(uint1(x2094)))
	var x2097 uint32
	var x2098 uint32
	x2097, x2098 = bits.Add32(x2088, x2085, uint32(uint1(x2096)))
	var x2099 uint32
	var x2100 uint32
	x2099, x2100 = bits.Add32(x2086, x2083, uint32(uint1(x2098)))
	var x2101 uint32
	var x2102 uint32
	x2101, x2102 = bits.Add32(x2084, x2081, uint32(uint1(x2100)))
	var x2103 uint32
	var x2104 uint32
	x2103, x2104 = bits.Add32(x2082, x2079, uint32(uint1(x2102)))
	x2105 := (uint32(uint1(x2104)) + x2080)
	var x2106 uint32
	var x2107 uint32
	x2106, x2107 = bits.Add32(x2064, x2091, uint32(0x0))
	var x2108 uint32
	var x2109 uint32
	x2108, x2109 = bits.Add32(x2066, x2093, uint32(uint1(x2107)))
	var x2110 uint32
	var x2111 uint32
	x2110, x2111 = bits.Add32(x2068, x2095, uint32(uint1(x2109)))
	var x2112 uint32
	var x2113 uint32
	x2112, x2113 = bits.Add32(x2070, x2097, uint32(uint1(x2111)))
	var x2114 uint32
	var x2115 uint32
	x2114, x2115 = bits.Add32(x2072, x2099, uint32(uint1(x2113)))
	var x2116 uint32
	var x2117 uint32
	x2116, x2117 = bits.Add32(x2074, x2101, uint32(uint1(x2115)))
	var x2118 uint32
	var x2119 uint32
	x2118, x2119 = bits.Add32(x2076, x2103, uint32(uint1(x2117)))
	var x2120 uint32
	var x2121 uint32
	x2120, x2121 = bits.Add32(x2078, x2105, uint32(uint1(x2119)))
	var x2122 uint32
	_, x2122 = bits.Mul32(x2106, 0xffffffff)
	var x2124 uint32
	var x2125 uint32
	x2125, x2124 = bits.Mul32(x2122, 0xffffffff)
	var x2126 uint32
	var x2127 uint32
	x2127, x2126 = bits.Mul32(x2122, 0xffffffff)
	var x2128 uint32
	var x2129 uint32
	x2129, x2128 = bits.Mul32(x2122, 0xffffffff)
	var x2130 uint32
	var x2131 uint32
	x2131, x2130 = bits.Mul32(x2122, 0xffffffff)
	var x2132 uint32
	var x2133 uint32
	x2132, x2133 = bits.Add32(x2131, x2128, uint32(0x0))
	var x2134 uint32
	var x2135 uint32
	x2134, x2135 = bits.Add32(x2129, x2126, uint32(uint1(x2133)))
	var x2136 uint32
	var x2137 uint32
	x2136, x2137 = bits.Add32(x2127, x2124, uint32(uint1(x2135)))
	x2138 := (uint32(uint1(x2137)) + x2125)
	var x2140 uint32
	_, x2140 = bits.Add32(x2106, x2122, uint32(0x0))
	var x2141 uint32
	var x2142 uint32
	x2141, x2142 = bits.Add32(x2108, uint32(0x0), uint32(uint1(x2140)))
	var x2143 uint32
	var x2144 uint32
	x2143, x2144 = bits.Add32(x2110, uint32(0x0), uint32(uint1(x2142)))
	var x2145 uint32
	var x2146 uint32
	x2145, x2146 = bits.Add32(x2112, x2130, uint32(uint1(x2144)))
	var x2147 uint32
	var x2148 uint32
	x2147, x2148 = bits.Add32(x2114, x2132, uint32(uint1(x2146)))
	var x2149 uint32
	var x2150 uint32
	x2149, x2150 = bits.Add32(x2116, x2134, uint32(uint1(x2148)))
	var x2151 uint32
	var x2152 uint32
	x2151, x2152 = bits.Add32(x2118, x2136, uint32(uint1(x2150)))
	var x2153 uint32
	var x2154 uint32
	x2153, x2154 = bits.Add32(x2120, x2138, uint32(uint1(x2152)))
	x2155 := (uint32(uint1(x2154)) + uint32(uint1(x2121)))
	var x2156 uint32
	var x2157 uint32
	x2157, x2156 = bits.Mul32(x151, arg2[6])
	var x2158 uint32
	var x2159 uint32
	x2159, x2158 = bits.Mul32(x151, arg2[5])
	var x2160 uint32
	var x2161 uint32
	x2161, x2160 = bits.Mul32(x151, arg2[4])
	var x2162 uint32
	var x2163 uint32
	x2163, x2162 = bits.Mul32(x151, arg2[3])
	var x2164 uint32
	var x2165 uint32
	x2165, x2164 = bits.Mul32(x151, arg2[2])
	var x2166 uint32
	var x2167 uint32
	x2167, x2166 = bits.Mul32(x151, arg2[1])
	var x2168 uint32
	var x2169 uint32
	x2169, x2168 = bits.Mul32(x151, arg2[0])
	var x2170 uint32
	var x2171 uint32
	x2170, x2171 = bits.Add32(x2169, x2166, uint32(0x0))
	var x2172 uint32
	var x2173 uint32
	x2172, x2173 = bits.Add32(x2167, x2164, uint32(uint1(x2171)))
	var x2174 uint32
	var x2175 uint32
	x2174, x2175 = bits.Add32(x2165, x2162, uint32(uint1(x2173)))
	var x2176 uint32
	var x2177 uint32
	x2176, x2177 = bits.Add32(x2163, x2160, uint32(uint1(x2175)))
	var x2178 uint32
	var x2179 uint32
	x2178, x2179 = bits.Add32(x2161, x2158, uint32(uint1(x2177)))
	var x2180 uint32
	var x2181 uint32
	x2180, x2181 = bits.Add32(x2159, x2156, uint32(uint1(x2179)))
	x2182 := (uint32(uint1(x2181)) + x2157)
	var x2183 uint32
	var x2184 uint32
	x2183, x2184 = bits.Add32(x2141, x2168, uint32(0x0))
	var x2185 uint32
	var x2186 uint32
	x2185, x2186 = bits.Add32(x2143, x2170, uint32(uint1(x2184)))
	var x2187 uint32
	var x2188 uint32
	x2187, x2188 = bits.Add32(x2145, x2172, uint32(uint1(x2186)))
	var x2189 uint32
	var x2190 uint32
	x2189, x2190 = bits.Add32(x2147, x2174, uint32(uint1(x2188)))
	var x2191 uint32
	var x2192 uint32
	x2191, x2192 = bits.Add32(x2149, x2176, uint32(uint1(x2190)))
	var x2193 uint32
	var x2194 uint32
	x2193, x2194 = bits.Add32(x2151, x2178, uint32(uint1(x2192)))
	var x2195 uint32
	var x2196 uint32
	x2195, x2196 = bits.Add32(x2153, x2180, uint32(uint1(x2194)))
	var x2197 uint32
	var x2198 uint32
	x2197, x2198 = bits.Add32(x2155, x2182, uint32(uint1(x2196)))
	var x2199 uint32
	_, x2199 = bits.Mul32(x2183, 0xffffffff)
	var x2201 uint32
	var x2202 uint32
	x2202, x2201 = bits.Mul32(x2199, 0xffffffff)
	var x2203 uint32
	var x2204 uint32
	x2204, x2203 = bits.Mul32(x2199, 0xffffffff)
	var x2205 uint32
	var x2206 uint32
	x2206, x2205 = bits.Mul32(x2199, 0xffffffff)
	var x2207 uint32
	var x2208 uint32
	x2208, x2207 = bits.Mul32(x2199, 0xffffffff)
	var x2209 uint32
	var x2210 uint32
	x2209, x2210 = bits.Add32(x2208, x2205, uint32(0x0))
	var x2211 uint32
	var x2212 uint32
	x2211, x2212 = bits.Add32(x2206, x2203, uint32(uint1(x2210)))
	var x2213 uint32
	var x2214 uint32
	x2213, x2214 = bits.Add32(x2204, x2201, uint32(uint1(x2212)))
	x2215 := (uint32(uint1(x2214)) + x2202)
	var x2217 uint32
	_, x2217 = bits.Add32(x2183, x2199, uint32(0x0))
	var x2218 uint32
	var x2219 uint32
	x2218, x2219 = bits.Add32(x2185, uint32(0x0), uint32(uint1(x2217)))
	var x2220 uint32
	var x2221 uint32
	x2220, x2221 = bits.Add32(x2187, uint32(0x0), uint32(uint1(x2219)))
	var x2222 uint32
	var x2223 uint32
	x2222, x2223 = bits.Add32(x2189, x2207, uint32(uint1(x2221)))
	var x2224 uint32
	var x2225 uint32
	x2224, x2225 = bits.Add32(x2191, x2209, uint32(uint1(x2223)))
	var x2226 uint32
	var x2227 uint32
	x2226, x2227 = bits.Add32(x2193, x2211, uint32(uint1(x2225)))
	var x2228 uint32
	var x2229 uint32
	x2228, x2229 = bits.Add32(x2195, x2213, uint32(uint1(x2227)))
	var x2230 uint32
	var x2231 uint32
	x2230, x2231 = bits.Add32(x2197, x2215, uint32(uint1(x2229)))
	x2232 := (uint32(uint1(x2231)) + uint32(uint1(x2198)))
	var x2233 uint32
	var x2234 uint32
	x2234, x2233 = bits.Mul32(x152, arg2[6])
	var x2235 uint32
	var x2236 uint32
	x2236, x2235 = bits.Mul32(x152, arg2[5])
	var x2237 uint32
	var x2238 uint32
	x2238, x2237 = bits.Mul32(x152, arg2[4])
	var x2239 uint32
	var x2240 uint32
	x2240, x2239 = bits.Mul32(x152, arg2[3])
	var x2241 uint32
	var x2242 uint32
	x2242, x2241 = bits.Mul32(x152, arg2[2])
	var x2243 uint32
	var x2244 uint32
	x2244, x2243 = bits.Mul32(x152, arg2[1])
	var x2245 uint32
	var x2246 uint32
	x2246, x2245 = bits.Mul32(x152, arg2[0])
	var x2247 uint32
	var x2248 uint32
	x2247, x2248 = bits.Add32(x2246, x2243, uint32(0x0))
	var x2249 uint32
	var x2250 uint32
	x2249, x2250 = bits.Add32(x2244, x2241, uint32(uint1(x2248)))
	var x2251 uint32
	var x2252 uint32
	x2251, x2252 = bits.Add32(x2242, x2239, uint32(uint1(x2250)))
	var x2253 uint32
	var x2254 uint32
	x2253, x2254 = bits.Add32(x2240, x2237, uint32(uint1(x2252)))
	var x2255 uint32
	var x2256 uint32
	x2255, x2256 = bits.Add32(x2238, x2235, uint32(uint1(x2254)))
	var x2257 uint32
	var x2258 uint32
	x2257, x2258 = bits.Add32(x2236, x2233, uint32(uint1(x2256)))
	x2259 := (uint32(uint1(x2258)) + x2234)
	var x2260 uint32
	var x2261 uint32
	x2260, x2261 = bits.Add32(x2218, x2245, uint32(0x0))
	var x2262 uint32
	var x2263 uint32
	x2262, x2263 = bits.Add32(x2220, x2247, uint32(uint1(x2261)))
	var x2264 uint32
	var x2265 uint32
	x2264, x2265 = bits.Add32(x2222, x2249, uint32(uint1(x2263)))
	var x2266 uint32
	var x2267 uint32
	x2266, x2267 = bits.Add32(x2224, x2251, uint32(uint1(x2265)))
	var x2268 uint32
	var x2269 uint32
	x2268, x2269 = bits.Add32(x2226, x2253, uint32(uint1(x2267)))
	var x2270 uint32
	var x2271 uint32
	x2270, x2271 = bits.Add32(x2228, x2255, uint32(uint1(x2269)))
	var x2272 uint32
	var x2273 uint32
	x2272, x2273 = bits.Add32(x2230, x2257, uint32(uint1(x2271)))
	var x2274 uint32
	var x2275 uint32
	x2274, x2275 = bits.Add32(x2232, x2259, uint32(uint1(x2273)))
	var x2276 uint32
	_, x2276 = bits.Mul32(x2260, 0xffffffff)
	var x2278 uint32
	var x2279 uint32
	x2279, x2278 = bits.Mul32(x2276, 0xffffffff)
	var x2280 uint32
	var x2281 uint32
	x2281, x2280 = bits.Mul32(x2276, 0xffffffff)
	var x2282 uint32
	var x2283 uint32
	x2283, x2282 = bits.Mul32(x2276, 0xffffffff)
	var x2284 uint32
	var x2285 uint32
	x2285, x2284 = bits.Mul32(x2276, 0xffffffff)
	var x2286 uint32
	var x2287 uint32
	x2286, x2287 = bits.Add32(x2285, x2282, uint32(0x0))
	var x2288 uint32
	var x2289 uint32
	x2288, x2289 = bits.Add32(x2283, x2280, uint32(uint1(x2287)))
	var x2290 uint32
	var x2291 uint32
	x2290, x2291 = bits.Add32(x2281, x2278, uint32(uint1(x2289)))
	x2292 := (uint32(uint1(x2291)) + x2279)
	var x2294 uint32
	_, x2294 = bits.Add32(x2260, x2276, uint32(0x0))
	var x2295 uint32
	var x2296 uint32
	x2295, x2296 = bits.Add32(x2262, uint32(0x0), uint32(uint1(x2294)))
	var x2297 uint32
	var x2298 uint32
	x2297, x2298 = bits.Add32(x2264, uint32(0x0), uint32(uint1(x2296)))
	var x2299 uint32
	var x2300 uint32
	x2299, x2300 = bits.Add32(x2266, x2284, uint32(uint1(x2298)))
	var x2301 uint32
	var x2302 uint32
	x2301, x2302 = bits.Add32(x2268, x2286, uint32(uint1(x2300)))
	var x2303 uint32
	var x2304 uint32
	x2303, x2304 = bits.Add32(x2270, x2288, uint32(uint1(x2302)))
	var x2305 uint32
	var x2306 uint32
	x2305, x2306 = bits.Add32(x2272, x2290, uint32(uint1(x2304)))
	var x2307 uint32
	var x2308 uint32
	x2307, x2308 = bits.Add32(x2274, x2292, uint32(uint1(x2306)))
	x2309 := (uint32(uint1(x2308)) + uint32(uint1(x2275)))
	var x2310 uint32
	var x2311 uint32
	x2310, x2311 = bits.Sub32(x2295, uint32(0x1), uint32(0x0))
	var x2312 uint32
	var x2313 uint32
	x2312, x2313 = bits.Sub32(x2297, uint32(0x0), uint32(uint1(x2311)))
	var x2314 uint32
	var x2315 uint32
	x2314, x2315 = bits.Sub32(x2299, uint32(0x0), uint32(uint1(x2313)))
	var x2316 uint32
	var x2317 uint32
	x2316, x2317 = bits.Sub32(x2301, 0xffffffff, uint32(uint1(x2315)))
	var x2318 uint32
	var x2319 uint32
	x2318, x2319 = bits.Sub32(x2303, 0xffffffff, uint32(uint1(x2317)))
	var x2320 uint32
	var x2321 uint32
	x2320, x2321 = bits.Sub32(x2305, 0xffffffff, uint32(uint1(x2319)))
	var x2322 uint32
	var x2323 uint32
	x2322, x2323 = bits.Sub32(x2307, 0xffffffff, uint32(uint1(x2321)))
	var x2325 uint32
	_, x2325 = bits.Sub32(x2309, uint32(0x0), uint32(uint1(x2323)))
	var x2326 uint32
	cmovznzU32(&x2326, uint1(x2325), x2310, x2295)
	var x2327 uint32
	cmovznzU32(&x2327, uint1(x2325), x2312, x2297)
	var x2328 uint32
	cmovznzU32(&x2328, uint1(x2325), x2314, x2299)
	var x2329 uint32
	cmovznzU32(&x2329, uint1(x2325), x2316, x2301)
	var x2330 uint32
	cmovznzU32(&x2330, uint1(x2325), x2318, x2303)
	var x2331 uint32
	cmovznzU32(&x2331, uint1(x2325), x2320, x2305)
	var x2332 uint32
	cmovznzU32(&x2332, uint1(x2325), x2322, x2307)
	var x2333 uint32
	var x2334 uint32
	x2333, x2334 = bits.Add32(x691, x1236, uint32(0x0))
	var x2335 uint32
	var x2336 uint32
	x2335, x2336 = bits.Add32(x692, x1237, uint32(uint1(x2334)))
	var x2337 uint32
	var x2338 uint32
	x2337, x2338 = bits.Add32(x693, x1238, uint32(uint1(x2336)))
	var x2339 uint32
	var x2340 uint32
	x2339, x2340 = bits.Add32(x694, x1239, uint32(uint1(x2338)))
	var x2341 uint32
	var x2342 uint32
	x2341, x2342 = bits.Add32(x695, x1240, uint32(uint1(x2340)))
	var x2343 uint32
	var x2344 uint32
	x2343, x2344 = bits.Add32(x696, x1241, uint32(uint1(x2342)))
	var x2345 uint32
	var x2346 uint32
	x2345, x2346 = bits.Add32(x697, x1242, uint32(uint1(x2344)))
	var x2347 uint32
	var x2348 uint32
	x2347, x2348 = bits.Sub32(x2333, uint32(0x1), uint32(0x0))
	var x2349 uint32
	var x2350 uint32
	x2349, x2350 = bits.Sub32(x2335, uint32(0x0), uint32(uint1(x2348)))
	var x2351 uint32
	var x2352 uint32
	x2351, x2352 = bits.Sub32(x2337, uint32(0x0), uint32(uint1(x2350)))
	var x2353 uint32
	var x2354 uint32
	x2353, x2354 = bits.Sub32(x2339, 0xffffffff, uint32(uint1(x2352)))
	var x2355 uint32
	var x2356 uint32
	x2355, x2356 = bits.Sub32(x2341, 0xffffffff, uint32(uint1(x2354)))
	var x2357 uint32
	var x2358 uint32
	x2357, x2358 = bits.Sub32(x2343, 0xffffffff, uint32(uint1(x2356)))
	var x2359 uint32
	var x2360 uint32
	x2359, x2360 = bits.Sub32(x2345, 0xffffffff, uint32(uint1(x2358)))
	var x2362 uint32
	_, x2362 = bits.Sub32(uint32(uint1(x2346)), uint32(0x0), uint32(uint1(x2360)))
	var x2363 uint32
	cmovznzU32(&x2363, uint1(x2362), x2347, x2333)
	var x2364 uint32
	cmovznzU32(&x2364, uint1(x2362), x2349, x2335)
	var x2365 uint32
	cmovznzU32(&x2365, uint1(x2362), x2351, x2337)
	var x2366 uint32
	cmovznzU32(&x2366, uint1(x2362), x2353, x2339)
	var x2367 uint32
	cmovznzU32(&x2367, uint1(x2362), x2355, x2341)
	var x2368 uint32
	cmovznzU32(&x2368, uint1(x2362), x2357, x2343)
	var x2369 uint32
	cmovznzU32(&x2369, uint1(x2362), x2359, x2345)
	var x2370 uint32
	var x2371 uint32
	x2370, x2371 = bits.Add32(x1781, x2326, uint32(0x0))
	var x2372 uint32
	var x2373 uint32
	x2372, x2373 = bits.Add32(x1782, x2327, uint32(uint1(x2371)))
	var x2374 uint32
	var x2375 uint32
	x2374, x2375 = bits.Add32(x1783, x2328, uint32(uint1(x2373)))
	var x2376 uint32
	var x2377 uint32
	x2376, x2377 = bits.Add32(x1784, x2329, uint32(uint1(x2375)))
	var x2378 uint32
	var x2379 uint32
	x2378, x2379 = bits.Add32(x1785, x2330, uint32(uint1(x2377)))
	var x2380 uint32
	var x2381 uint32
	x2380, x2381 = bits.Add32(x1786, x2331, uint32(uint1(x2379)))
	var x2382 uint32
	var x2383 uint32
	x2382, x2383 = bits.Add32(x1787, x2332, uint32(uint1(x2381)))
	var x2384 uint32
	var x2385 uint32
	x2384, x2385 = bits.Sub32(x2370, uint32(0x1), uint32(0x0))
	var x2386 uint32
	var x2387 uint32
	x2386, x2387 = bits.Sub32(x2372, uint32(0x0), uint32(uint1(x2385)))
	var x2388 uint32
	var x2389 uint32
	x2388, x2389 = bits.Sub32(x2374, uint32(0x0), uint32(uint1(x2387)))
	var x2390 uint32
	var x2391 uint32
	x2390, x2391 = bits.Sub32(x2376, 0xffffffff, uint32(uint1(x2389)))
	var x2392 uint32
	var x2393 uint32
	x2392, x2393 = bits.Sub32(x2378, 0xffffffff, uint32(uint1(x2391)))
	var x2394 uint32
	var x2395 uint32
	x2394, x2395 = bits.Sub32(x2380, 0xffffffff, uint32(uint1(x2393)))
	var x2396 uint32
	var x2397 uint32
	x2396, x2397 = bits.Sub32(x2382, 0xffffffff, uint32(uint1(x2395)))
	var x2399 uint32
	_, x2399 = bits.Sub32(uint32(uint1(x2383)), uint32(0x0), uint32(uint1(x2397)))
	var x2400 uint32
	cmovznzU32(&x2400, uint1(x2399), x2384, x2370)
	var x2401 uint32
	cmovznzU32(&x2401, uint1(x2399), x2386, x2372)
	var x2402 uint32
	cmovznzU32(&x2402, uint1(x2399), x2388, x2374)
	var x2403 uint32
	cmovznzU32(&x2403, uint1(x2399), x2390, x2376)
	var x2404 uint32
	cmovznzU32(&x2404, uint1(x2399), x2392, x2378)
	var x2405 uint32
	cmovznzU32(&x2405, uint1(x2399), x2394, x2380)
	var x2406 uint32
	cmovznzU32(&x2406, uint1(x2399), x2396, x2382)
	out1[0] = x2363
	out1[1] = x2364
	out1[2] = x2365
	out1[3] = x2366
	out1[4] = x2367
	out1[5] = x2368
	out1[6] = x2369
	out2[0] = x2400
	out2[1] = x2401
	out2[2] = x2402
	out2[3] = x2403
	out2[4] = x2404
	out2[5] = x2405
	out2[6] = x2406
}

// The function JumpdivstepPrecomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecomp(out1 *[7]uint32) {
	out1[0] = 0x5473efda
	out1[1] = 0xca6ce021
	out1[2] = 0x1c946fe2
	out1[3] = 0xc4f33040
	out1[4] = 0xf7abcfc7
	out1[5] = 0x699fe030
	out1[6] = 0x874befd4
}

// The function JumpdivstepPrecompHd returns the precomputed value for the (half-delta) jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecompHd(out1 *[7]uint32) {
	out1[0] = 0x1849dc0
	out1[1] = 0xfea6eaa0
	out1[2] = 0x123543f
	out1[3] = 0xfd7bbe30
	out1[4] = 0x24395df
	out1[5] = 0xfe10a140
	out1[6] = 0x1ab2a1f
}
