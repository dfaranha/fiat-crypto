// Code generated by Fiat Cryptography. DO NOT EDIT.
//
// Autogenerated: 'src/ExtractionOCaml/word_by_word_montgomery' --lang Go --relax-primitive-carry-to-bitwidth 32,64 --cmovznz-by-mul --internal-static --package-case flatcase --public-function-case UpperCamelCase --private-function-case camelCase --public-type-case UpperCamelCase --private-type-case camelCase --no-prefix-fiat --doc-newline-in-typedef-bounds --doc-prepend-header 'Code generated by Fiat Cryptography. DO NOT EDIT.' --doc-text-before-function-name '' --doc-text-before-type-name '' --package-name p256 '' 32 '2^256 - 2^224 + 2^192 + 2^96 - 1' mul square add sub opp from_montgomery to_montgomery nonzero selectznz to_bytes from_bytes one msat sat_from_bytes divstep divstep_precomp inner_loop inner_loop_hd update_fg update_vr jumpdivstep_precomp jumpdivstep_precomp_hd
//
// curve description (via package name): p256
//
// machine_wordsize = 32 (from "32")
//
// requested operations: mul, square, add, sub, opp, from_montgomery, to_montgomery, nonzero, selectznz, to_bytes, from_bytes, one, msat, sat_from_bytes, divstep, divstep_precomp, inner_loop, inner_loop_hd, update_fg, update_vr, jumpdivstep_precomp, jumpdivstep_precomp_hd
//
// m = 0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff (from "2^256 - 2^224 + 2^192 + 2^96 - 1")
//
//
//
// NOTE: In addition to the bounds specified above each function, all
//
//   functions synthesized for this Montgomery arithmetic require the
//
//   input to be strictly less than the prime modulus (m), and also
//
//   require the input to be in the unique saturated representation.
//
//   All functions also ensure that these two properties are true of
//
//   return values.
//
//
//
// Computed values:
//
//   eval z = z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248)
//
//   twos_complement_eval z = if (z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)) & (2^256-1) < 2^255 then (z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)) & (2^256-1) else ((z[0] + (z[1] << 32) + (z[2] << 64) + (z[3] << 96) + (z[4] << 128) + (z[5] << 160) + (z[6] << 192) + (z[7] << 224)) & (2^256-1)) - 2^256
package p256

import "math/bits"

type uint1 uint64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927
type int1 int64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927

// MontgomeryDomainFieldElement is a field element in the Montgomery domain.
//
// Bounds:
//
//   [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
type MontgomeryDomainFieldElement [8]uint32

// NonMontgomeryDomainFieldElement is a field element NOT in the Montgomery domain.
//
// Bounds:
//
//   [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
type NonMontgomeryDomainFieldElement [8]uint32

// cmovznzU32 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0xffffffff]
//   arg3: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func cmovznzU32(out1 *uint32, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := (uint32(arg1) * 0xffffffff)
	x2 := ((x1 & arg3) | ((^x1) & arg2))
	*out1 = x2
}

// cmovznzU1 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1]
//   arg3: [0x0 ~> 0x1]
// Output Bounds:
//   out1: [0x0 ~> 0x1]
func cmovznzU1(out1 *uint1, arg1 uint1, arg2 uint1, arg3 uint1) {
	x1 := ((arg1 & arg3) | ((^arg1) & arg2))
	*out1 = x1
}

// Mul multiplies two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Mul(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[7]
	x8 := arg1[0]
	var x9 uint32
	var x10 uint32
	x10, x9 = bits.Mul32(x8, arg2[7])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x8, arg2[6])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x8, arg2[5])
	var x15 uint32
	var x16 uint32
	x16, x15 = bits.Mul32(x8, arg2[4])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x8, arg2[3])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x8, arg2[2])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x8, arg2[1])
	var x23 uint32
	var x24 uint32
	x24, x23 = bits.Mul32(x8, arg2[0])
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Add32(x24, x21, uint32(0x0))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Add32(x22, x19, uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Add32(x20, x17, uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Add32(x18, x15, uint32(uint1(x30)))
	var x33 uint32
	var x34 uint32
	x33, x34 = bits.Add32(x16, x13, uint32(uint1(x32)))
	var x35 uint32
	var x36 uint32
	x35, x36 = bits.Add32(x14, x11, uint32(uint1(x34)))
	var x37 uint32
	var x38 uint32
	x37, x38 = bits.Add32(x12, x9, uint32(uint1(x36)))
	x39 := (uint32(uint1(x38)) + x10)
	var x40 uint32
	var x41 uint32
	x41, x40 = bits.Mul32(x23, 0xffffffff)
	var x42 uint32
	var x43 uint32
	x43, x42 = bits.Mul32(x23, 0xffffffff)
	var x44 uint32
	var x45 uint32
	x45, x44 = bits.Mul32(x23, 0xffffffff)
	var x46 uint32
	var x47 uint32
	x47, x46 = bits.Mul32(x23, 0xffffffff)
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Add32(x47, x44, uint32(0x0))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32(x45, x42, uint32(uint1(x49)))
	x52 := (uint32(uint1(x51)) + x43)
	var x54 uint32
	_, x54 = bits.Add32(x23, x46, uint32(0x0))
	var x55 uint32
	var x56 uint32
	x55, x56 = bits.Add32(x25, x48, uint32(uint1(x54)))
	var x57 uint32
	var x58 uint32
	x57, x58 = bits.Add32(x27, x50, uint32(uint1(x56)))
	var x59 uint32
	var x60 uint32
	x59, x60 = bits.Add32(x29, x52, uint32(uint1(x58)))
	var x61 uint32
	var x62 uint32
	x61, x62 = bits.Add32(x31, uint32(0x0), uint32(uint1(x60)))
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(x33, uint32(0x0), uint32(uint1(x62)))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(x35, x23, uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x67, x68 = bits.Add32(x37, x40, uint32(uint1(x66)))
	var x69 uint32
	var x70 uint32
	x69, x70 = bits.Add32(x39, x41, uint32(uint1(x68)))
	var x71 uint32
	var x72 uint32
	x72, x71 = bits.Mul32(x1, arg2[7])
	var x73 uint32
	var x74 uint32
	x74, x73 = bits.Mul32(x1, arg2[6])
	var x75 uint32
	var x76 uint32
	x76, x75 = bits.Mul32(x1, arg2[5])
	var x77 uint32
	var x78 uint32
	x78, x77 = bits.Mul32(x1, arg2[4])
	var x79 uint32
	var x80 uint32
	x80, x79 = bits.Mul32(x1, arg2[3])
	var x81 uint32
	var x82 uint32
	x82, x81 = bits.Mul32(x1, arg2[2])
	var x83 uint32
	var x84 uint32
	x84, x83 = bits.Mul32(x1, arg2[1])
	var x85 uint32
	var x86 uint32
	x86, x85 = bits.Mul32(x1, arg2[0])
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Add32(x86, x83, uint32(0x0))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Add32(x84, x81, uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Add32(x82, x79, uint32(uint1(x90)))
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Add32(x80, x77, uint32(uint1(x92)))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Add32(x78, x75, uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Add32(x76, x73, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Add32(x74, x71, uint32(uint1(x98)))
	x101 := (uint32(uint1(x100)) + x72)
	var x102 uint32
	var x103 uint32
	x102, x103 = bits.Add32(x55, x85, uint32(0x0))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32(x57, x87, uint32(uint1(x103)))
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x59, x89, uint32(uint1(x105)))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x61, x91, uint32(uint1(x107)))
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x63, x93, uint32(uint1(x109)))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x65, x95, uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x67, x97, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x69, x99, uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(uint32(uint1(x70)), x101, uint32(uint1(x117)))
	var x120 uint32
	var x121 uint32
	x121, x120 = bits.Mul32(x102, 0xffffffff)
	var x122 uint32
	var x123 uint32
	x123, x122 = bits.Mul32(x102, 0xffffffff)
	var x124 uint32
	var x125 uint32
	x125, x124 = bits.Mul32(x102, 0xffffffff)
	var x126 uint32
	var x127 uint32
	x127, x126 = bits.Mul32(x102, 0xffffffff)
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x127, x124, uint32(0x0))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x125, x122, uint32(uint1(x129)))
	x132 := (uint32(uint1(x131)) + x123)
	var x134 uint32
	_, x134 = bits.Add32(x102, x126, uint32(0x0))
	var x135 uint32
	var x136 uint32
	x135, x136 = bits.Add32(x104, x128, uint32(uint1(x134)))
	var x137 uint32
	var x138 uint32
	x137, x138 = bits.Add32(x106, x130, uint32(uint1(x136)))
	var x139 uint32
	var x140 uint32
	x139, x140 = bits.Add32(x108, x132, uint32(uint1(x138)))
	var x141 uint32
	var x142 uint32
	x141, x142 = bits.Add32(x110, uint32(0x0), uint32(uint1(x140)))
	var x143 uint32
	var x144 uint32
	x143, x144 = bits.Add32(x112, uint32(0x0), uint32(uint1(x142)))
	var x145 uint32
	var x146 uint32
	x145, x146 = bits.Add32(x114, x102, uint32(uint1(x144)))
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x116, x120, uint32(uint1(x146)))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x118, x121, uint32(uint1(x148)))
	x151 := (uint32(uint1(x150)) + uint32(uint1(x119)))
	var x152 uint32
	var x153 uint32
	x153, x152 = bits.Mul32(x2, arg2[7])
	var x154 uint32
	var x155 uint32
	x155, x154 = bits.Mul32(x2, arg2[6])
	var x156 uint32
	var x157 uint32
	x157, x156 = bits.Mul32(x2, arg2[5])
	var x158 uint32
	var x159 uint32
	x159, x158 = bits.Mul32(x2, arg2[4])
	var x160 uint32
	var x161 uint32
	x161, x160 = bits.Mul32(x2, arg2[3])
	var x162 uint32
	var x163 uint32
	x163, x162 = bits.Mul32(x2, arg2[2])
	var x164 uint32
	var x165 uint32
	x165, x164 = bits.Mul32(x2, arg2[1])
	var x166 uint32
	var x167 uint32
	x167, x166 = bits.Mul32(x2, arg2[0])
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x167, x164, uint32(0x0))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x165, x162, uint32(uint1(x169)))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x163, x160, uint32(uint1(x171)))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x161, x158, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x159, x156, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x157, x154, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x155, x152, uint32(uint1(x179)))
	x182 := (uint32(uint1(x181)) + x153)
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x135, x166, uint32(0x0))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x137, x168, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x139, x170, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x141, x172, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x143, x174, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x145, x176, uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x147, x178, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x149, x180, uint32(uint1(x196)))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x151, x182, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x202, x201 = bits.Mul32(x183, 0xffffffff)
	var x203 uint32
	var x204 uint32
	x204, x203 = bits.Mul32(x183, 0xffffffff)
	var x205 uint32
	var x206 uint32
	x206, x205 = bits.Mul32(x183, 0xffffffff)
	var x207 uint32
	var x208 uint32
	x208, x207 = bits.Mul32(x183, 0xffffffff)
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x208, x205, uint32(0x0))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x206, x203, uint32(uint1(x210)))
	x213 := (uint32(uint1(x212)) + x204)
	var x215 uint32
	_, x215 = bits.Add32(x183, x207, uint32(0x0))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x185, x209, uint32(uint1(x215)))
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x187, x211, uint32(uint1(x217)))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x189, x213, uint32(uint1(x219)))
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32(x191, uint32(0x0), uint32(uint1(x221)))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x193, uint32(0x0), uint32(uint1(x223)))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x195, x183, uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x197, x201, uint32(uint1(x227)))
	var x230 uint32
	var x231 uint32
	x230, x231 = bits.Add32(x199, x202, uint32(uint1(x229)))
	x232 := (uint32(uint1(x231)) + uint32(uint1(x200)))
	var x233 uint32
	var x234 uint32
	x234, x233 = bits.Mul32(x3, arg2[7])
	var x235 uint32
	var x236 uint32
	x236, x235 = bits.Mul32(x3, arg2[6])
	var x237 uint32
	var x238 uint32
	x238, x237 = bits.Mul32(x3, arg2[5])
	var x239 uint32
	var x240 uint32
	x240, x239 = bits.Mul32(x3, arg2[4])
	var x241 uint32
	var x242 uint32
	x242, x241 = bits.Mul32(x3, arg2[3])
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x3, arg2[2])
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x3, arg2[1])
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x3, arg2[0])
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x248, x245, uint32(0x0))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x246, x243, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x244, x241, uint32(uint1(x252)))
	var x255 uint32
	var x256 uint32
	x255, x256 = bits.Add32(x242, x239, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x240, x237, uint32(uint1(x256)))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x238, x235, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x236, x233, uint32(uint1(x260)))
	x263 := (uint32(uint1(x262)) + x234)
	var x264 uint32
	var x265 uint32
	x264, x265 = bits.Add32(x216, x247, uint32(0x0))
	var x266 uint32
	var x267 uint32
	x266, x267 = bits.Add32(x218, x249, uint32(uint1(x265)))
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32(x220, x251, uint32(uint1(x267)))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x222, x253, uint32(uint1(x269)))
	var x272 uint32
	var x273 uint32
	x272, x273 = bits.Add32(x224, x255, uint32(uint1(x271)))
	var x274 uint32
	var x275 uint32
	x274, x275 = bits.Add32(x226, x257, uint32(uint1(x273)))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x228, x259, uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x230, x261, uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x232, x263, uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x283, x282 = bits.Mul32(x264, 0xffffffff)
	var x284 uint32
	var x285 uint32
	x285, x284 = bits.Mul32(x264, 0xffffffff)
	var x286 uint32
	var x287 uint32
	x287, x286 = bits.Mul32(x264, 0xffffffff)
	var x288 uint32
	var x289 uint32
	x289, x288 = bits.Mul32(x264, 0xffffffff)
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x289, x286, uint32(0x0))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x287, x284, uint32(uint1(x291)))
	x294 := (uint32(uint1(x293)) + x285)
	var x296 uint32
	_, x296 = bits.Add32(x264, x288, uint32(0x0))
	var x297 uint32
	var x298 uint32
	x297, x298 = bits.Add32(x266, x290, uint32(uint1(x296)))
	var x299 uint32
	var x300 uint32
	x299, x300 = bits.Add32(x268, x292, uint32(uint1(x298)))
	var x301 uint32
	var x302 uint32
	x301, x302 = bits.Add32(x270, x294, uint32(uint1(x300)))
	var x303 uint32
	var x304 uint32
	x303, x304 = bits.Add32(x272, uint32(0x0), uint32(uint1(x302)))
	var x305 uint32
	var x306 uint32
	x305, x306 = bits.Add32(x274, uint32(0x0), uint32(uint1(x304)))
	var x307 uint32
	var x308 uint32
	x307, x308 = bits.Add32(x276, x264, uint32(uint1(x306)))
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x278, x282, uint32(uint1(x308)))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x280, x283, uint32(uint1(x310)))
	x313 := (uint32(uint1(x312)) + uint32(uint1(x281)))
	var x314 uint32
	var x315 uint32
	x315, x314 = bits.Mul32(x4, arg2[7])
	var x316 uint32
	var x317 uint32
	x317, x316 = bits.Mul32(x4, arg2[6])
	var x318 uint32
	var x319 uint32
	x319, x318 = bits.Mul32(x4, arg2[5])
	var x320 uint32
	var x321 uint32
	x321, x320 = bits.Mul32(x4, arg2[4])
	var x322 uint32
	var x323 uint32
	x323, x322 = bits.Mul32(x4, arg2[3])
	var x324 uint32
	var x325 uint32
	x325, x324 = bits.Mul32(x4, arg2[2])
	var x326 uint32
	var x327 uint32
	x327, x326 = bits.Mul32(x4, arg2[1])
	var x328 uint32
	var x329 uint32
	x329, x328 = bits.Mul32(x4, arg2[0])
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x329, x326, uint32(0x0))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x327, x324, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x325, x322, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x323, x320, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x321, x318, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x319, x316, uint32(uint1(x339)))
	var x342 uint32
	var x343 uint32
	x342, x343 = bits.Add32(x317, x314, uint32(uint1(x341)))
	x344 := (uint32(uint1(x343)) + x315)
	var x345 uint32
	var x346 uint32
	x345, x346 = bits.Add32(x297, x328, uint32(0x0))
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x299, x330, uint32(uint1(x346)))
	var x349 uint32
	var x350 uint32
	x349, x350 = bits.Add32(x301, x332, uint32(uint1(x348)))
	var x351 uint32
	var x352 uint32
	x351, x352 = bits.Add32(x303, x334, uint32(uint1(x350)))
	var x353 uint32
	var x354 uint32
	x353, x354 = bits.Add32(x305, x336, uint32(uint1(x352)))
	var x355 uint32
	var x356 uint32
	x355, x356 = bits.Add32(x307, x338, uint32(uint1(x354)))
	var x357 uint32
	var x358 uint32
	x357, x358 = bits.Add32(x309, x340, uint32(uint1(x356)))
	var x359 uint32
	var x360 uint32
	x359, x360 = bits.Add32(x311, x342, uint32(uint1(x358)))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x313, x344, uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x345, 0xffffffff)
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x345, 0xffffffff)
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x345, 0xffffffff)
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x345, 0xffffffff)
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x370, x367, uint32(0x0))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x368, x365, uint32(uint1(x372)))
	x375 := (uint32(uint1(x374)) + x366)
	var x377 uint32
	_, x377 = bits.Add32(x345, x369, uint32(0x0))
	var x378 uint32
	var x379 uint32
	x378, x379 = bits.Add32(x347, x371, uint32(uint1(x377)))
	var x380 uint32
	var x381 uint32
	x380, x381 = bits.Add32(x349, x373, uint32(uint1(x379)))
	var x382 uint32
	var x383 uint32
	x382, x383 = bits.Add32(x351, x375, uint32(uint1(x381)))
	var x384 uint32
	var x385 uint32
	x384, x385 = bits.Add32(x353, uint32(0x0), uint32(uint1(x383)))
	var x386 uint32
	var x387 uint32
	x386, x387 = bits.Add32(x355, uint32(0x0), uint32(uint1(x385)))
	var x388 uint32
	var x389 uint32
	x388, x389 = bits.Add32(x357, x345, uint32(uint1(x387)))
	var x390 uint32
	var x391 uint32
	x390, x391 = bits.Add32(x359, x363, uint32(uint1(x389)))
	var x392 uint32
	var x393 uint32
	x392, x393 = bits.Add32(x361, x364, uint32(uint1(x391)))
	x394 := (uint32(uint1(x393)) + uint32(uint1(x362)))
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(x5, arg2[7])
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(x5, arg2[6])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(x5, arg2[5])
	var x401 uint32
	var x402 uint32
	x402, x401 = bits.Mul32(x5, arg2[4])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(x5, arg2[3])
	var x405 uint32
	var x406 uint32
	x406, x405 = bits.Mul32(x5, arg2[2])
	var x407 uint32
	var x408 uint32
	x408, x407 = bits.Mul32(x5, arg2[1])
	var x409 uint32
	var x410 uint32
	x410, x409 = bits.Mul32(x5, arg2[0])
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(x410, x407, uint32(0x0))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x408, x405, uint32(uint1(x412)))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x406, x403, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x404, x401, uint32(uint1(x416)))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x402, x399, uint32(uint1(x418)))
	var x421 uint32
	var x422 uint32
	x421, x422 = bits.Add32(x400, x397, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x398, x395, uint32(uint1(x422)))
	x425 := (uint32(uint1(x424)) + x396)
	var x426 uint32
	var x427 uint32
	x426, x427 = bits.Add32(x378, x409, uint32(0x0))
	var x428 uint32
	var x429 uint32
	x428, x429 = bits.Add32(x380, x411, uint32(uint1(x427)))
	var x430 uint32
	var x431 uint32
	x430, x431 = bits.Add32(x382, x413, uint32(uint1(x429)))
	var x432 uint32
	var x433 uint32
	x432, x433 = bits.Add32(x384, x415, uint32(uint1(x431)))
	var x434 uint32
	var x435 uint32
	x434, x435 = bits.Add32(x386, x417, uint32(uint1(x433)))
	var x436 uint32
	var x437 uint32
	x436, x437 = bits.Add32(x388, x419, uint32(uint1(x435)))
	var x438 uint32
	var x439 uint32
	x438, x439 = bits.Add32(x390, x421, uint32(uint1(x437)))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x392, x423, uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x394, x425, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x445, x444 = bits.Mul32(x426, 0xffffffff)
	var x446 uint32
	var x447 uint32
	x447, x446 = bits.Mul32(x426, 0xffffffff)
	var x448 uint32
	var x449 uint32
	x449, x448 = bits.Mul32(x426, 0xffffffff)
	var x450 uint32
	var x451 uint32
	x451, x450 = bits.Mul32(x426, 0xffffffff)
	var x452 uint32
	var x453 uint32
	x452, x453 = bits.Add32(x451, x448, uint32(0x0))
	var x454 uint32
	var x455 uint32
	x454, x455 = bits.Add32(x449, x446, uint32(uint1(x453)))
	x456 := (uint32(uint1(x455)) + x447)
	var x458 uint32
	_, x458 = bits.Add32(x426, x450, uint32(0x0))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x428, x452, uint32(uint1(x458)))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x430, x454, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x432, x456, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x434, uint32(0x0), uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x436, uint32(0x0), uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x438, x426, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x440, x444, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x442, x445, uint32(uint1(x472)))
	x475 := (uint32(uint1(x474)) + uint32(uint1(x443)))
	var x476 uint32
	var x477 uint32
	x477, x476 = bits.Mul32(x6, arg2[7])
	var x478 uint32
	var x479 uint32
	x479, x478 = bits.Mul32(x6, arg2[6])
	var x480 uint32
	var x481 uint32
	x481, x480 = bits.Mul32(x6, arg2[5])
	var x482 uint32
	var x483 uint32
	x483, x482 = bits.Mul32(x6, arg2[4])
	var x484 uint32
	var x485 uint32
	x485, x484 = bits.Mul32(x6, arg2[3])
	var x486 uint32
	var x487 uint32
	x487, x486 = bits.Mul32(x6, arg2[2])
	var x488 uint32
	var x489 uint32
	x489, x488 = bits.Mul32(x6, arg2[1])
	var x490 uint32
	var x491 uint32
	x491, x490 = bits.Mul32(x6, arg2[0])
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x491, x488, uint32(0x0))
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x489, x486, uint32(uint1(x493)))
	var x496 uint32
	var x497 uint32
	x496, x497 = bits.Add32(x487, x484, uint32(uint1(x495)))
	var x498 uint32
	var x499 uint32
	x498, x499 = bits.Add32(x485, x482, uint32(uint1(x497)))
	var x500 uint32
	var x501 uint32
	x500, x501 = bits.Add32(x483, x480, uint32(uint1(x499)))
	var x502 uint32
	var x503 uint32
	x502, x503 = bits.Add32(x481, x478, uint32(uint1(x501)))
	var x504 uint32
	var x505 uint32
	x504, x505 = bits.Add32(x479, x476, uint32(uint1(x503)))
	x506 := (uint32(uint1(x505)) + x477)
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x459, x490, uint32(0x0))
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32(x461, x492, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x463, x494, uint32(uint1(x510)))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x465, x496, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x467, x498, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x469, x500, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x471, x502, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x473, x504, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x475, x506, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x526, x525 = bits.Mul32(x507, 0xffffffff)
	var x527 uint32
	var x528 uint32
	x528, x527 = bits.Mul32(x507, 0xffffffff)
	var x529 uint32
	var x530 uint32
	x530, x529 = bits.Mul32(x507, 0xffffffff)
	var x531 uint32
	var x532 uint32
	x532, x531 = bits.Mul32(x507, 0xffffffff)
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x532, x529, uint32(0x0))
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x530, x527, uint32(uint1(x534)))
	x537 := (uint32(uint1(x536)) + x528)
	var x539 uint32
	_, x539 = bits.Add32(x507, x531, uint32(0x0))
	var x540 uint32
	var x541 uint32
	x540, x541 = bits.Add32(x509, x533, uint32(uint1(x539)))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Add32(x511, x535, uint32(uint1(x541)))
	var x544 uint32
	var x545 uint32
	x544, x545 = bits.Add32(x513, x537, uint32(uint1(x543)))
	var x546 uint32
	var x547 uint32
	x546, x547 = bits.Add32(x515, uint32(0x0), uint32(uint1(x545)))
	var x548 uint32
	var x549 uint32
	x548, x549 = bits.Add32(x517, uint32(0x0), uint32(uint1(x547)))
	var x550 uint32
	var x551 uint32
	x550, x551 = bits.Add32(x519, x507, uint32(uint1(x549)))
	var x552 uint32
	var x553 uint32
	x552, x553 = bits.Add32(x521, x525, uint32(uint1(x551)))
	var x554 uint32
	var x555 uint32
	x554, x555 = bits.Add32(x523, x526, uint32(uint1(x553)))
	x556 := (uint32(uint1(x555)) + uint32(uint1(x524)))
	var x557 uint32
	var x558 uint32
	x558, x557 = bits.Mul32(x7, arg2[7])
	var x559 uint32
	var x560 uint32
	x560, x559 = bits.Mul32(x7, arg2[6])
	var x561 uint32
	var x562 uint32
	x562, x561 = bits.Mul32(x7, arg2[5])
	var x563 uint32
	var x564 uint32
	x564, x563 = bits.Mul32(x7, arg2[4])
	var x565 uint32
	var x566 uint32
	x566, x565 = bits.Mul32(x7, arg2[3])
	var x567 uint32
	var x568 uint32
	x568, x567 = bits.Mul32(x7, arg2[2])
	var x569 uint32
	var x570 uint32
	x570, x569 = bits.Mul32(x7, arg2[1])
	var x571 uint32
	var x572 uint32
	x572, x571 = bits.Mul32(x7, arg2[0])
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x572, x569, uint32(0x0))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x570, x567, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x568, x565, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x566, x563, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x564, x561, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x562, x559, uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x560, x557, uint32(uint1(x584)))
	x587 := (uint32(uint1(x586)) + x558)
	var x588 uint32
	var x589 uint32
	x588, x589 = bits.Add32(x540, x571, uint32(0x0))
	var x590 uint32
	var x591 uint32
	x590, x591 = bits.Add32(x542, x573, uint32(uint1(x589)))
	var x592 uint32
	var x593 uint32
	x592, x593 = bits.Add32(x544, x575, uint32(uint1(x591)))
	var x594 uint32
	var x595 uint32
	x594, x595 = bits.Add32(x546, x577, uint32(uint1(x593)))
	var x596 uint32
	var x597 uint32
	x596, x597 = bits.Add32(x548, x579, uint32(uint1(x595)))
	var x598 uint32
	var x599 uint32
	x598, x599 = bits.Add32(x550, x581, uint32(uint1(x597)))
	var x600 uint32
	var x601 uint32
	x600, x601 = bits.Add32(x552, x583, uint32(uint1(x599)))
	var x602 uint32
	var x603 uint32
	x602, x603 = bits.Add32(x554, x585, uint32(uint1(x601)))
	var x604 uint32
	var x605 uint32
	x604, x605 = bits.Add32(x556, x587, uint32(uint1(x603)))
	var x606 uint32
	var x607 uint32
	x607, x606 = bits.Mul32(x588, 0xffffffff)
	var x608 uint32
	var x609 uint32
	x609, x608 = bits.Mul32(x588, 0xffffffff)
	var x610 uint32
	var x611 uint32
	x611, x610 = bits.Mul32(x588, 0xffffffff)
	var x612 uint32
	var x613 uint32
	x613, x612 = bits.Mul32(x588, 0xffffffff)
	var x614 uint32
	var x615 uint32
	x614, x615 = bits.Add32(x613, x610, uint32(0x0))
	var x616 uint32
	var x617 uint32
	x616, x617 = bits.Add32(x611, x608, uint32(uint1(x615)))
	x618 := (uint32(uint1(x617)) + x609)
	var x620 uint32
	_, x620 = bits.Add32(x588, x612, uint32(0x0))
	var x621 uint32
	var x622 uint32
	x621, x622 = bits.Add32(x590, x614, uint32(uint1(x620)))
	var x623 uint32
	var x624 uint32
	x623, x624 = bits.Add32(x592, x616, uint32(uint1(x622)))
	var x625 uint32
	var x626 uint32
	x625, x626 = bits.Add32(x594, x618, uint32(uint1(x624)))
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x596, uint32(0x0), uint32(uint1(x626)))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x598, uint32(0x0), uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x600, x588, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x602, x606, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x604, x607, uint32(uint1(x634)))
	x637 := (uint32(uint1(x636)) + uint32(uint1(x605)))
	var x638 uint32
	var x639 uint32
	x638, x639 = bits.Sub32(x621, 0xffffffff, uint32(0x0))
	var x640 uint32
	var x641 uint32
	x640, x641 = bits.Sub32(x623, 0xffffffff, uint32(uint1(x639)))
	var x642 uint32
	var x643 uint32
	x642, x643 = bits.Sub32(x625, 0xffffffff, uint32(uint1(x641)))
	var x644 uint32
	var x645 uint32
	x644, x645 = bits.Sub32(x627, uint32(0x0), uint32(uint1(x643)))
	var x646 uint32
	var x647 uint32
	x646, x647 = bits.Sub32(x629, uint32(0x0), uint32(uint1(x645)))
	var x648 uint32
	var x649 uint32
	x648, x649 = bits.Sub32(x631, uint32(0x0), uint32(uint1(x647)))
	var x650 uint32
	var x651 uint32
	x650, x651 = bits.Sub32(x633, uint32(0x1), uint32(uint1(x649)))
	var x652 uint32
	var x653 uint32
	x652, x653 = bits.Sub32(x635, 0xffffffff, uint32(uint1(x651)))
	var x655 uint32
	_, x655 = bits.Sub32(x637, uint32(0x0), uint32(uint1(x653)))
	var x656 uint32
	cmovznzU32(&x656, uint1(x655), x638, x621)
	var x657 uint32
	cmovznzU32(&x657, uint1(x655), x640, x623)
	var x658 uint32
	cmovznzU32(&x658, uint1(x655), x642, x625)
	var x659 uint32
	cmovznzU32(&x659, uint1(x655), x644, x627)
	var x660 uint32
	cmovznzU32(&x660, uint1(x655), x646, x629)
	var x661 uint32
	cmovznzU32(&x661, uint1(x655), x648, x631)
	var x662 uint32
	cmovznzU32(&x662, uint1(x655), x650, x633)
	var x663 uint32
	cmovznzU32(&x663, uint1(x655), x652, x635)
	out1[0] = x656
	out1[1] = x657
	out1[2] = x658
	out1[3] = x659
	out1[4] = x660
	out1[5] = x661
	out1[6] = x662
	out1[7] = x663
}

// Square squares a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
//   0 ≤ eval out1 < m
//
func Square(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[7]
	x8 := arg1[0]
	var x9 uint32
	var x10 uint32
	x10, x9 = bits.Mul32(x8, arg1[7])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x8, arg1[6])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x8, arg1[5])
	var x15 uint32
	var x16 uint32
	x16, x15 = bits.Mul32(x8, arg1[4])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x8, arg1[3])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x8, arg1[2])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x8, arg1[1])
	var x23 uint32
	var x24 uint32
	x24, x23 = bits.Mul32(x8, arg1[0])
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Add32(x24, x21, uint32(0x0))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Add32(x22, x19, uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Add32(x20, x17, uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Add32(x18, x15, uint32(uint1(x30)))
	var x33 uint32
	var x34 uint32
	x33, x34 = bits.Add32(x16, x13, uint32(uint1(x32)))
	var x35 uint32
	var x36 uint32
	x35, x36 = bits.Add32(x14, x11, uint32(uint1(x34)))
	var x37 uint32
	var x38 uint32
	x37, x38 = bits.Add32(x12, x9, uint32(uint1(x36)))
	x39 := (uint32(uint1(x38)) + x10)
	var x40 uint32
	var x41 uint32
	x41, x40 = bits.Mul32(x23, 0xffffffff)
	var x42 uint32
	var x43 uint32
	x43, x42 = bits.Mul32(x23, 0xffffffff)
	var x44 uint32
	var x45 uint32
	x45, x44 = bits.Mul32(x23, 0xffffffff)
	var x46 uint32
	var x47 uint32
	x47, x46 = bits.Mul32(x23, 0xffffffff)
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Add32(x47, x44, uint32(0x0))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32(x45, x42, uint32(uint1(x49)))
	x52 := (uint32(uint1(x51)) + x43)
	var x54 uint32
	_, x54 = bits.Add32(x23, x46, uint32(0x0))
	var x55 uint32
	var x56 uint32
	x55, x56 = bits.Add32(x25, x48, uint32(uint1(x54)))
	var x57 uint32
	var x58 uint32
	x57, x58 = bits.Add32(x27, x50, uint32(uint1(x56)))
	var x59 uint32
	var x60 uint32
	x59, x60 = bits.Add32(x29, x52, uint32(uint1(x58)))
	var x61 uint32
	var x62 uint32
	x61, x62 = bits.Add32(x31, uint32(0x0), uint32(uint1(x60)))
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(x33, uint32(0x0), uint32(uint1(x62)))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(x35, x23, uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x67, x68 = bits.Add32(x37, x40, uint32(uint1(x66)))
	var x69 uint32
	var x70 uint32
	x69, x70 = bits.Add32(x39, x41, uint32(uint1(x68)))
	var x71 uint32
	var x72 uint32
	x72, x71 = bits.Mul32(x1, arg1[7])
	var x73 uint32
	var x74 uint32
	x74, x73 = bits.Mul32(x1, arg1[6])
	var x75 uint32
	var x76 uint32
	x76, x75 = bits.Mul32(x1, arg1[5])
	var x77 uint32
	var x78 uint32
	x78, x77 = bits.Mul32(x1, arg1[4])
	var x79 uint32
	var x80 uint32
	x80, x79 = bits.Mul32(x1, arg1[3])
	var x81 uint32
	var x82 uint32
	x82, x81 = bits.Mul32(x1, arg1[2])
	var x83 uint32
	var x84 uint32
	x84, x83 = bits.Mul32(x1, arg1[1])
	var x85 uint32
	var x86 uint32
	x86, x85 = bits.Mul32(x1, arg1[0])
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Add32(x86, x83, uint32(0x0))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Add32(x84, x81, uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Add32(x82, x79, uint32(uint1(x90)))
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Add32(x80, x77, uint32(uint1(x92)))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Add32(x78, x75, uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Add32(x76, x73, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Add32(x74, x71, uint32(uint1(x98)))
	x101 := (uint32(uint1(x100)) + x72)
	var x102 uint32
	var x103 uint32
	x102, x103 = bits.Add32(x55, x85, uint32(0x0))
	var x104 uint32
	var x105 uint32
	x104, x105 = bits.Add32(x57, x87, uint32(uint1(x103)))
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x59, x89, uint32(uint1(x105)))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x61, x91, uint32(uint1(x107)))
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x63, x93, uint32(uint1(x109)))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x65, x95, uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x67, x97, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x69, x99, uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(uint32(uint1(x70)), x101, uint32(uint1(x117)))
	var x120 uint32
	var x121 uint32
	x121, x120 = bits.Mul32(x102, 0xffffffff)
	var x122 uint32
	var x123 uint32
	x123, x122 = bits.Mul32(x102, 0xffffffff)
	var x124 uint32
	var x125 uint32
	x125, x124 = bits.Mul32(x102, 0xffffffff)
	var x126 uint32
	var x127 uint32
	x127, x126 = bits.Mul32(x102, 0xffffffff)
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x127, x124, uint32(0x0))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(x125, x122, uint32(uint1(x129)))
	x132 := (uint32(uint1(x131)) + x123)
	var x134 uint32
	_, x134 = bits.Add32(x102, x126, uint32(0x0))
	var x135 uint32
	var x136 uint32
	x135, x136 = bits.Add32(x104, x128, uint32(uint1(x134)))
	var x137 uint32
	var x138 uint32
	x137, x138 = bits.Add32(x106, x130, uint32(uint1(x136)))
	var x139 uint32
	var x140 uint32
	x139, x140 = bits.Add32(x108, x132, uint32(uint1(x138)))
	var x141 uint32
	var x142 uint32
	x141, x142 = bits.Add32(x110, uint32(0x0), uint32(uint1(x140)))
	var x143 uint32
	var x144 uint32
	x143, x144 = bits.Add32(x112, uint32(0x0), uint32(uint1(x142)))
	var x145 uint32
	var x146 uint32
	x145, x146 = bits.Add32(x114, x102, uint32(uint1(x144)))
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x116, x120, uint32(uint1(x146)))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x118, x121, uint32(uint1(x148)))
	x151 := (uint32(uint1(x150)) + uint32(uint1(x119)))
	var x152 uint32
	var x153 uint32
	x153, x152 = bits.Mul32(x2, arg1[7])
	var x154 uint32
	var x155 uint32
	x155, x154 = bits.Mul32(x2, arg1[6])
	var x156 uint32
	var x157 uint32
	x157, x156 = bits.Mul32(x2, arg1[5])
	var x158 uint32
	var x159 uint32
	x159, x158 = bits.Mul32(x2, arg1[4])
	var x160 uint32
	var x161 uint32
	x161, x160 = bits.Mul32(x2, arg1[3])
	var x162 uint32
	var x163 uint32
	x163, x162 = bits.Mul32(x2, arg1[2])
	var x164 uint32
	var x165 uint32
	x165, x164 = bits.Mul32(x2, arg1[1])
	var x166 uint32
	var x167 uint32
	x167, x166 = bits.Mul32(x2, arg1[0])
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x167, x164, uint32(0x0))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x165, x162, uint32(uint1(x169)))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x163, x160, uint32(uint1(x171)))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x161, x158, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x159, x156, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x157, x154, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x155, x152, uint32(uint1(x179)))
	x182 := (uint32(uint1(x181)) + x153)
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x135, x166, uint32(0x0))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x137, x168, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x139, x170, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x141, x172, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x143, x174, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x145, x176, uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x147, x178, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x149, x180, uint32(uint1(x196)))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x151, x182, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x202, x201 = bits.Mul32(x183, 0xffffffff)
	var x203 uint32
	var x204 uint32
	x204, x203 = bits.Mul32(x183, 0xffffffff)
	var x205 uint32
	var x206 uint32
	x206, x205 = bits.Mul32(x183, 0xffffffff)
	var x207 uint32
	var x208 uint32
	x208, x207 = bits.Mul32(x183, 0xffffffff)
	var x209 uint32
	var x210 uint32
	x209, x210 = bits.Add32(x208, x205, uint32(0x0))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x206, x203, uint32(uint1(x210)))
	x213 := (uint32(uint1(x212)) + x204)
	var x215 uint32
	_, x215 = bits.Add32(x183, x207, uint32(0x0))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x185, x209, uint32(uint1(x215)))
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x187, x211, uint32(uint1(x217)))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x189, x213, uint32(uint1(x219)))
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32(x191, uint32(0x0), uint32(uint1(x221)))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x193, uint32(0x0), uint32(uint1(x223)))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x195, x183, uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x197, x201, uint32(uint1(x227)))
	var x230 uint32
	var x231 uint32
	x230, x231 = bits.Add32(x199, x202, uint32(uint1(x229)))
	x232 := (uint32(uint1(x231)) + uint32(uint1(x200)))
	var x233 uint32
	var x234 uint32
	x234, x233 = bits.Mul32(x3, arg1[7])
	var x235 uint32
	var x236 uint32
	x236, x235 = bits.Mul32(x3, arg1[6])
	var x237 uint32
	var x238 uint32
	x238, x237 = bits.Mul32(x3, arg1[5])
	var x239 uint32
	var x240 uint32
	x240, x239 = bits.Mul32(x3, arg1[4])
	var x241 uint32
	var x242 uint32
	x242, x241 = bits.Mul32(x3, arg1[3])
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x3, arg1[2])
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x3, arg1[1])
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x3, arg1[0])
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x248, x245, uint32(0x0))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x246, x243, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x244, x241, uint32(uint1(x252)))
	var x255 uint32
	var x256 uint32
	x255, x256 = bits.Add32(x242, x239, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x240, x237, uint32(uint1(x256)))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x238, x235, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x236, x233, uint32(uint1(x260)))
	x263 := (uint32(uint1(x262)) + x234)
	var x264 uint32
	var x265 uint32
	x264, x265 = bits.Add32(x216, x247, uint32(0x0))
	var x266 uint32
	var x267 uint32
	x266, x267 = bits.Add32(x218, x249, uint32(uint1(x265)))
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32(x220, x251, uint32(uint1(x267)))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x222, x253, uint32(uint1(x269)))
	var x272 uint32
	var x273 uint32
	x272, x273 = bits.Add32(x224, x255, uint32(uint1(x271)))
	var x274 uint32
	var x275 uint32
	x274, x275 = bits.Add32(x226, x257, uint32(uint1(x273)))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x228, x259, uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x230, x261, uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x232, x263, uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x283, x282 = bits.Mul32(x264, 0xffffffff)
	var x284 uint32
	var x285 uint32
	x285, x284 = bits.Mul32(x264, 0xffffffff)
	var x286 uint32
	var x287 uint32
	x287, x286 = bits.Mul32(x264, 0xffffffff)
	var x288 uint32
	var x289 uint32
	x289, x288 = bits.Mul32(x264, 0xffffffff)
	var x290 uint32
	var x291 uint32
	x290, x291 = bits.Add32(x289, x286, uint32(0x0))
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x287, x284, uint32(uint1(x291)))
	x294 := (uint32(uint1(x293)) + x285)
	var x296 uint32
	_, x296 = bits.Add32(x264, x288, uint32(0x0))
	var x297 uint32
	var x298 uint32
	x297, x298 = bits.Add32(x266, x290, uint32(uint1(x296)))
	var x299 uint32
	var x300 uint32
	x299, x300 = bits.Add32(x268, x292, uint32(uint1(x298)))
	var x301 uint32
	var x302 uint32
	x301, x302 = bits.Add32(x270, x294, uint32(uint1(x300)))
	var x303 uint32
	var x304 uint32
	x303, x304 = bits.Add32(x272, uint32(0x0), uint32(uint1(x302)))
	var x305 uint32
	var x306 uint32
	x305, x306 = bits.Add32(x274, uint32(0x0), uint32(uint1(x304)))
	var x307 uint32
	var x308 uint32
	x307, x308 = bits.Add32(x276, x264, uint32(uint1(x306)))
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x278, x282, uint32(uint1(x308)))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x280, x283, uint32(uint1(x310)))
	x313 := (uint32(uint1(x312)) + uint32(uint1(x281)))
	var x314 uint32
	var x315 uint32
	x315, x314 = bits.Mul32(x4, arg1[7])
	var x316 uint32
	var x317 uint32
	x317, x316 = bits.Mul32(x4, arg1[6])
	var x318 uint32
	var x319 uint32
	x319, x318 = bits.Mul32(x4, arg1[5])
	var x320 uint32
	var x321 uint32
	x321, x320 = bits.Mul32(x4, arg1[4])
	var x322 uint32
	var x323 uint32
	x323, x322 = bits.Mul32(x4, arg1[3])
	var x324 uint32
	var x325 uint32
	x325, x324 = bits.Mul32(x4, arg1[2])
	var x326 uint32
	var x327 uint32
	x327, x326 = bits.Mul32(x4, arg1[1])
	var x328 uint32
	var x329 uint32
	x329, x328 = bits.Mul32(x4, arg1[0])
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Add32(x329, x326, uint32(0x0))
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x327, x324, uint32(uint1(x331)))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x325, x322, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x323, x320, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x321, x318, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x319, x316, uint32(uint1(x339)))
	var x342 uint32
	var x343 uint32
	x342, x343 = bits.Add32(x317, x314, uint32(uint1(x341)))
	x344 := (uint32(uint1(x343)) + x315)
	var x345 uint32
	var x346 uint32
	x345, x346 = bits.Add32(x297, x328, uint32(0x0))
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x299, x330, uint32(uint1(x346)))
	var x349 uint32
	var x350 uint32
	x349, x350 = bits.Add32(x301, x332, uint32(uint1(x348)))
	var x351 uint32
	var x352 uint32
	x351, x352 = bits.Add32(x303, x334, uint32(uint1(x350)))
	var x353 uint32
	var x354 uint32
	x353, x354 = bits.Add32(x305, x336, uint32(uint1(x352)))
	var x355 uint32
	var x356 uint32
	x355, x356 = bits.Add32(x307, x338, uint32(uint1(x354)))
	var x357 uint32
	var x358 uint32
	x357, x358 = bits.Add32(x309, x340, uint32(uint1(x356)))
	var x359 uint32
	var x360 uint32
	x359, x360 = bits.Add32(x311, x342, uint32(uint1(x358)))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x313, x344, uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x345, 0xffffffff)
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x345, 0xffffffff)
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x345, 0xffffffff)
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x345, 0xffffffff)
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x370, x367, uint32(0x0))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x368, x365, uint32(uint1(x372)))
	x375 := (uint32(uint1(x374)) + x366)
	var x377 uint32
	_, x377 = bits.Add32(x345, x369, uint32(0x0))
	var x378 uint32
	var x379 uint32
	x378, x379 = bits.Add32(x347, x371, uint32(uint1(x377)))
	var x380 uint32
	var x381 uint32
	x380, x381 = bits.Add32(x349, x373, uint32(uint1(x379)))
	var x382 uint32
	var x383 uint32
	x382, x383 = bits.Add32(x351, x375, uint32(uint1(x381)))
	var x384 uint32
	var x385 uint32
	x384, x385 = bits.Add32(x353, uint32(0x0), uint32(uint1(x383)))
	var x386 uint32
	var x387 uint32
	x386, x387 = bits.Add32(x355, uint32(0x0), uint32(uint1(x385)))
	var x388 uint32
	var x389 uint32
	x388, x389 = bits.Add32(x357, x345, uint32(uint1(x387)))
	var x390 uint32
	var x391 uint32
	x390, x391 = bits.Add32(x359, x363, uint32(uint1(x389)))
	var x392 uint32
	var x393 uint32
	x392, x393 = bits.Add32(x361, x364, uint32(uint1(x391)))
	x394 := (uint32(uint1(x393)) + uint32(uint1(x362)))
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(x5, arg1[7])
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(x5, arg1[6])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(x5, arg1[5])
	var x401 uint32
	var x402 uint32
	x402, x401 = bits.Mul32(x5, arg1[4])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(x5, arg1[3])
	var x405 uint32
	var x406 uint32
	x406, x405 = bits.Mul32(x5, arg1[2])
	var x407 uint32
	var x408 uint32
	x408, x407 = bits.Mul32(x5, arg1[1])
	var x409 uint32
	var x410 uint32
	x410, x409 = bits.Mul32(x5, arg1[0])
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(x410, x407, uint32(0x0))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x408, x405, uint32(uint1(x412)))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x406, x403, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x404, x401, uint32(uint1(x416)))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x402, x399, uint32(uint1(x418)))
	var x421 uint32
	var x422 uint32
	x421, x422 = bits.Add32(x400, x397, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x398, x395, uint32(uint1(x422)))
	x425 := (uint32(uint1(x424)) + x396)
	var x426 uint32
	var x427 uint32
	x426, x427 = bits.Add32(x378, x409, uint32(0x0))
	var x428 uint32
	var x429 uint32
	x428, x429 = bits.Add32(x380, x411, uint32(uint1(x427)))
	var x430 uint32
	var x431 uint32
	x430, x431 = bits.Add32(x382, x413, uint32(uint1(x429)))
	var x432 uint32
	var x433 uint32
	x432, x433 = bits.Add32(x384, x415, uint32(uint1(x431)))
	var x434 uint32
	var x435 uint32
	x434, x435 = bits.Add32(x386, x417, uint32(uint1(x433)))
	var x436 uint32
	var x437 uint32
	x436, x437 = bits.Add32(x388, x419, uint32(uint1(x435)))
	var x438 uint32
	var x439 uint32
	x438, x439 = bits.Add32(x390, x421, uint32(uint1(x437)))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x392, x423, uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x394, x425, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x445, x444 = bits.Mul32(x426, 0xffffffff)
	var x446 uint32
	var x447 uint32
	x447, x446 = bits.Mul32(x426, 0xffffffff)
	var x448 uint32
	var x449 uint32
	x449, x448 = bits.Mul32(x426, 0xffffffff)
	var x450 uint32
	var x451 uint32
	x451, x450 = bits.Mul32(x426, 0xffffffff)
	var x452 uint32
	var x453 uint32
	x452, x453 = bits.Add32(x451, x448, uint32(0x0))
	var x454 uint32
	var x455 uint32
	x454, x455 = bits.Add32(x449, x446, uint32(uint1(x453)))
	x456 := (uint32(uint1(x455)) + x447)
	var x458 uint32
	_, x458 = bits.Add32(x426, x450, uint32(0x0))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x428, x452, uint32(uint1(x458)))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x430, x454, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x432, x456, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x434, uint32(0x0), uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x436, uint32(0x0), uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x438, x426, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x440, x444, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x442, x445, uint32(uint1(x472)))
	x475 := (uint32(uint1(x474)) + uint32(uint1(x443)))
	var x476 uint32
	var x477 uint32
	x477, x476 = bits.Mul32(x6, arg1[7])
	var x478 uint32
	var x479 uint32
	x479, x478 = bits.Mul32(x6, arg1[6])
	var x480 uint32
	var x481 uint32
	x481, x480 = bits.Mul32(x6, arg1[5])
	var x482 uint32
	var x483 uint32
	x483, x482 = bits.Mul32(x6, arg1[4])
	var x484 uint32
	var x485 uint32
	x485, x484 = bits.Mul32(x6, arg1[3])
	var x486 uint32
	var x487 uint32
	x487, x486 = bits.Mul32(x6, arg1[2])
	var x488 uint32
	var x489 uint32
	x489, x488 = bits.Mul32(x6, arg1[1])
	var x490 uint32
	var x491 uint32
	x491, x490 = bits.Mul32(x6, arg1[0])
	var x492 uint32
	var x493 uint32
	x492, x493 = bits.Add32(x491, x488, uint32(0x0))
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x489, x486, uint32(uint1(x493)))
	var x496 uint32
	var x497 uint32
	x496, x497 = bits.Add32(x487, x484, uint32(uint1(x495)))
	var x498 uint32
	var x499 uint32
	x498, x499 = bits.Add32(x485, x482, uint32(uint1(x497)))
	var x500 uint32
	var x501 uint32
	x500, x501 = bits.Add32(x483, x480, uint32(uint1(x499)))
	var x502 uint32
	var x503 uint32
	x502, x503 = bits.Add32(x481, x478, uint32(uint1(x501)))
	var x504 uint32
	var x505 uint32
	x504, x505 = bits.Add32(x479, x476, uint32(uint1(x503)))
	x506 := (uint32(uint1(x505)) + x477)
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x459, x490, uint32(0x0))
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32(x461, x492, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x463, x494, uint32(uint1(x510)))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x465, x496, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x467, x498, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x469, x500, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x471, x502, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x473, x504, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x475, x506, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x526, x525 = bits.Mul32(x507, 0xffffffff)
	var x527 uint32
	var x528 uint32
	x528, x527 = bits.Mul32(x507, 0xffffffff)
	var x529 uint32
	var x530 uint32
	x530, x529 = bits.Mul32(x507, 0xffffffff)
	var x531 uint32
	var x532 uint32
	x532, x531 = bits.Mul32(x507, 0xffffffff)
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x532, x529, uint32(0x0))
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x530, x527, uint32(uint1(x534)))
	x537 := (uint32(uint1(x536)) + x528)
	var x539 uint32
	_, x539 = bits.Add32(x507, x531, uint32(0x0))
	var x540 uint32
	var x541 uint32
	x540, x541 = bits.Add32(x509, x533, uint32(uint1(x539)))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Add32(x511, x535, uint32(uint1(x541)))
	var x544 uint32
	var x545 uint32
	x544, x545 = bits.Add32(x513, x537, uint32(uint1(x543)))
	var x546 uint32
	var x547 uint32
	x546, x547 = bits.Add32(x515, uint32(0x0), uint32(uint1(x545)))
	var x548 uint32
	var x549 uint32
	x548, x549 = bits.Add32(x517, uint32(0x0), uint32(uint1(x547)))
	var x550 uint32
	var x551 uint32
	x550, x551 = bits.Add32(x519, x507, uint32(uint1(x549)))
	var x552 uint32
	var x553 uint32
	x552, x553 = bits.Add32(x521, x525, uint32(uint1(x551)))
	var x554 uint32
	var x555 uint32
	x554, x555 = bits.Add32(x523, x526, uint32(uint1(x553)))
	x556 := (uint32(uint1(x555)) + uint32(uint1(x524)))
	var x557 uint32
	var x558 uint32
	x558, x557 = bits.Mul32(x7, arg1[7])
	var x559 uint32
	var x560 uint32
	x560, x559 = bits.Mul32(x7, arg1[6])
	var x561 uint32
	var x562 uint32
	x562, x561 = bits.Mul32(x7, arg1[5])
	var x563 uint32
	var x564 uint32
	x564, x563 = bits.Mul32(x7, arg1[4])
	var x565 uint32
	var x566 uint32
	x566, x565 = bits.Mul32(x7, arg1[3])
	var x567 uint32
	var x568 uint32
	x568, x567 = bits.Mul32(x7, arg1[2])
	var x569 uint32
	var x570 uint32
	x570, x569 = bits.Mul32(x7, arg1[1])
	var x571 uint32
	var x572 uint32
	x572, x571 = bits.Mul32(x7, arg1[0])
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x572, x569, uint32(0x0))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x570, x567, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x568, x565, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x566, x563, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x564, x561, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x562, x559, uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x560, x557, uint32(uint1(x584)))
	x587 := (uint32(uint1(x586)) + x558)
	var x588 uint32
	var x589 uint32
	x588, x589 = bits.Add32(x540, x571, uint32(0x0))
	var x590 uint32
	var x591 uint32
	x590, x591 = bits.Add32(x542, x573, uint32(uint1(x589)))
	var x592 uint32
	var x593 uint32
	x592, x593 = bits.Add32(x544, x575, uint32(uint1(x591)))
	var x594 uint32
	var x595 uint32
	x594, x595 = bits.Add32(x546, x577, uint32(uint1(x593)))
	var x596 uint32
	var x597 uint32
	x596, x597 = bits.Add32(x548, x579, uint32(uint1(x595)))
	var x598 uint32
	var x599 uint32
	x598, x599 = bits.Add32(x550, x581, uint32(uint1(x597)))
	var x600 uint32
	var x601 uint32
	x600, x601 = bits.Add32(x552, x583, uint32(uint1(x599)))
	var x602 uint32
	var x603 uint32
	x602, x603 = bits.Add32(x554, x585, uint32(uint1(x601)))
	var x604 uint32
	var x605 uint32
	x604, x605 = bits.Add32(x556, x587, uint32(uint1(x603)))
	var x606 uint32
	var x607 uint32
	x607, x606 = bits.Mul32(x588, 0xffffffff)
	var x608 uint32
	var x609 uint32
	x609, x608 = bits.Mul32(x588, 0xffffffff)
	var x610 uint32
	var x611 uint32
	x611, x610 = bits.Mul32(x588, 0xffffffff)
	var x612 uint32
	var x613 uint32
	x613, x612 = bits.Mul32(x588, 0xffffffff)
	var x614 uint32
	var x615 uint32
	x614, x615 = bits.Add32(x613, x610, uint32(0x0))
	var x616 uint32
	var x617 uint32
	x616, x617 = bits.Add32(x611, x608, uint32(uint1(x615)))
	x618 := (uint32(uint1(x617)) + x609)
	var x620 uint32
	_, x620 = bits.Add32(x588, x612, uint32(0x0))
	var x621 uint32
	var x622 uint32
	x621, x622 = bits.Add32(x590, x614, uint32(uint1(x620)))
	var x623 uint32
	var x624 uint32
	x623, x624 = bits.Add32(x592, x616, uint32(uint1(x622)))
	var x625 uint32
	var x626 uint32
	x625, x626 = bits.Add32(x594, x618, uint32(uint1(x624)))
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x596, uint32(0x0), uint32(uint1(x626)))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x598, uint32(0x0), uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x600, x588, uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x602, x606, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x604, x607, uint32(uint1(x634)))
	x637 := (uint32(uint1(x636)) + uint32(uint1(x605)))
	var x638 uint32
	var x639 uint32
	x638, x639 = bits.Sub32(x621, 0xffffffff, uint32(0x0))
	var x640 uint32
	var x641 uint32
	x640, x641 = bits.Sub32(x623, 0xffffffff, uint32(uint1(x639)))
	var x642 uint32
	var x643 uint32
	x642, x643 = bits.Sub32(x625, 0xffffffff, uint32(uint1(x641)))
	var x644 uint32
	var x645 uint32
	x644, x645 = bits.Sub32(x627, uint32(0x0), uint32(uint1(x643)))
	var x646 uint32
	var x647 uint32
	x646, x647 = bits.Sub32(x629, uint32(0x0), uint32(uint1(x645)))
	var x648 uint32
	var x649 uint32
	x648, x649 = bits.Sub32(x631, uint32(0x0), uint32(uint1(x647)))
	var x650 uint32
	var x651 uint32
	x650, x651 = bits.Sub32(x633, uint32(0x1), uint32(uint1(x649)))
	var x652 uint32
	var x653 uint32
	x652, x653 = bits.Sub32(x635, 0xffffffff, uint32(uint1(x651)))
	var x655 uint32
	_, x655 = bits.Sub32(x637, uint32(0x0), uint32(uint1(x653)))
	var x656 uint32
	cmovznzU32(&x656, uint1(x655), x638, x621)
	var x657 uint32
	cmovznzU32(&x657, uint1(x655), x640, x623)
	var x658 uint32
	cmovznzU32(&x658, uint1(x655), x642, x625)
	var x659 uint32
	cmovznzU32(&x659, uint1(x655), x644, x627)
	var x660 uint32
	cmovznzU32(&x660, uint1(x655), x646, x629)
	var x661 uint32
	cmovznzU32(&x661, uint1(x655), x648, x631)
	var x662 uint32
	cmovznzU32(&x662, uint1(x655), x650, x633)
	var x663 uint32
	cmovznzU32(&x663, uint1(x655), x652, x635)
	out1[0] = x656
	out1[1] = x657
	out1[2] = x658
	out1[3] = x659
	out1[4] = x660
	out1[5] = x661
	out1[6] = x662
	out1[7] = x663
}

// Add adds two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Add(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Add32(arg1[0], arg2[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Add32(arg1[1], arg2[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Add32(arg1[2], arg2[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Add32(arg1[3], arg2[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Add32(arg1[4], arg2[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Add32(arg1[5], arg2[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Add32(arg1[6], arg2[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Add32(arg1[7], arg2[7], uint32(uint1(x14)))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Sub32(x1, 0xffffffff, uint32(0x0))
	var x19 uint32
	var x20 uint32
	x19, x20 = bits.Sub32(x3, 0xffffffff, uint32(uint1(x18)))
	var x21 uint32
	var x22 uint32
	x21, x22 = bits.Sub32(x5, 0xffffffff, uint32(uint1(x20)))
	var x23 uint32
	var x24 uint32
	x23, x24 = bits.Sub32(x7, uint32(0x0), uint32(uint1(x22)))
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Sub32(x9, uint32(0x0), uint32(uint1(x24)))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Sub32(x11, uint32(0x0), uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Sub32(x13, uint32(0x1), uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Sub32(x15, 0xffffffff, uint32(uint1(x30)))
	var x34 uint32
	_, x34 = bits.Sub32(uint32(uint1(x16)), uint32(0x0), uint32(uint1(x32)))
	var x35 uint32
	cmovznzU32(&x35, uint1(x34), x17, x1)
	var x36 uint32
	cmovznzU32(&x36, uint1(x34), x19, x3)
	var x37 uint32
	cmovznzU32(&x37, uint1(x34), x21, x5)
	var x38 uint32
	cmovznzU32(&x38, uint1(x34), x23, x7)
	var x39 uint32
	cmovznzU32(&x39, uint1(x34), x25, x9)
	var x40 uint32
	cmovznzU32(&x40, uint1(x34), x27, x11)
	var x41 uint32
	cmovznzU32(&x41, uint1(x34), x29, x13)
	var x42 uint32
	cmovznzU32(&x42, uint1(x34), x31, x15)
	out1[0] = x35
	out1[1] = x36
	out1[2] = x37
	out1[3] = x38
	out1[4] = x39
	out1[5] = x40
	out1[6] = x41
	out1[7] = x42
}

// Sub subtracts two field elements in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
//   0 ≤ eval arg2 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
//   0 ≤ eval out1 < m
//
func Sub(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement, arg2 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Sub32(arg1[0], arg2[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(arg1[1], arg2[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(arg1[2], arg2[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(arg1[3], arg2[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(arg1[4], arg2[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(arg1[5], arg2[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(arg1[6], arg2[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(arg1[7], arg2[7], uint32(uint1(x14)))
	var x17 uint32
	cmovznzU32(&x17, uint1(x16), uint32(0x0), 0xffffffff)
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x1, x17, uint32(0x0))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x3, x17, uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x5, x17, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x7, uint32(0x0), uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x9, uint32(0x0), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, uint32(0x0), uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, uint32((uint1(x17) & 0x1)), uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(x15, x17, uint32(uint1(x31)))
	out1[0] = x18
	out1[1] = x20
	out1[2] = x22
	out1[3] = x24
	out1[4] = x26
	out1[5] = x28
	out1[6] = x30
	out1[7] = x32
}

// Opp negates a field element in the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
//   0 ≤ eval out1 < m
//
func Opp(out1 *MontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	var x1 uint32
	var x2 uint32
	x1, x2 = bits.Sub32(uint32(0x0), arg1[0], uint32(0x0))
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(uint32(0x0), arg1[1], uint32(uint1(x2)))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(uint32(0x0), arg1[2], uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(uint32(0x0), arg1[3], uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(uint32(0x0), arg1[4], uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(uint32(0x0), arg1[5], uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(uint32(0x0), arg1[6], uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(uint32(0x0), arg1[7], uint32(uint1(x14)))
	var x17 uint32
	cmovznzU32(&x17, uint1(x16), uint32(0x0), 0xffffffff)
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(x1, x17, uint32(0x0))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x3, x17, uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x5, x17, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x7, uint32(0x0), uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x9, uint32(0x0), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, uint32(0x0), uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, uint32((uint1(x17) & 0x1)), uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(x15, x17, uint32(uint1(x31)))
	out1[0] = x18
	out1[1] = x20
	out1[2] = x22
	out1[3] = x24
	out1[4] = x26
	out1[5] = x28
	out1[6] = x30
	out1[7] = x32
}

// FromMontgomery translates a field element out of the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval out1 mod m = (eval arg1 * ((2^32)⁻¹ mod m)^8) mod m
//   0 ≤ eval out1 < m
//
func FromMontgomery(out1 *NonMontgomeryDomainFieldElement, arg1 *MontgomeryDomainFieldElement) {
	x1 := arg1[0]
	var x2 uint32
	var x3 uint32
	x3, x2 = bits.Mul32(x1, 0xffffffff)
	var x4 uint32
	var x5 uint32
	x5, x4 = bits.Mul32(x1, 0xffffffff)
	var x6 uint32
	var x7 uint32
	x7, x6 = bits.Mul32(x1, 0xffffffff)
	var x8 uint32
	var x9 uint32
	x9, x8 = bits.Mul32(x1, 0xffffffff)
	var x10 uint32
	var x11 uint32
	x10, x11 = bits.Add32(x9, x6, uint32(0x0))
	var x12 uint32
	var x13 uint32
	x12, x13 = bits.Add32(x7, x4, uint32(uint1(x11)))
	var x15 uint32
	_, x15 = bits.Add32(x1, x8, uint32(0x0))
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(uint32(0x0), x10, uint32(uint1(x15)))
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(uint32(0x0), x12, uint32(uint1(x17)))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(uint32(0x0), (uint32(uint1(x13)) + x5), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x16, arg1[1], uint32(0x0))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x18, uint32(0x0), uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x20, uint32(0x0), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x29, x28 = bits.Mul32(x22, 0xffffffff)
	var x30 uint32
	var x31 uint32
	x31, x30 = bits.Mul32(x22, 0xffffffff)
	var x32 uint32
	var x33 uint32
	x33, x32 = bits.Mul32(x22, 0xffffffff)
	var x34 uint32
	var x35 uint32
	x35, x34 = bits.Mul32(x22, 0xffffffff)
	var x36 uint32
	var x37 uint32
	x36, x37 = bits.Add32(x35, x32, uint32(0x0))
	var x38 uint32
	var x39 uint32
	x38, x39 = bits.Add32(x33, x30, uint32(uint1(x37)))
	var x41 uint32
	_, x41 = bits.Add32(x22, x34, uint32(0x0))
	var x42 uint32
	var x43 uint32
	x42, x43 = bits.Add32(x24, x36, uint32(uint1(x41)))
	var x44 uint32
	var x45 uint32
	x44, x45 = bits.Add32(x26, x38, uint32(uint1(x43)))
	var x46 uint32
	var x47 uint32
	x46, x47 = bits.Add32((uint32(uint1(x27)) + uint32(uint1(x21))), (uint32(uint1(x39)) + x31), uint32(uint1(x45)))
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Add32(x2, x22, uint32(0x0))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Add32(x3, x28, uint32(uint1(x49)))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Add32(x42, arg1[2], uint32(0x0))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Add32(x44, uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Add32(x46, uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x59, x58 = bits.Mul32(x52, 0xffffffff)
	var x60 uint32
	var x61 uint32
	x61, x60 = bits.Mul32(x52, 0xffffffff)
	var x62 uint32
	var x63 uint32
	x63, x62 = bits.Mul32(x52, 0xffffffff)
	var x64 uint32
	var x65 uint32
	x65, x64 = bits.Mul32(x52, 0xffffffff)
	var x66 uint32
	var x67 uint32
	x66, x67 = bits.Add32(x65, x62, uint32(0x0))
	var x68 uint32
	var x69 uint32
	x68, x69 = bits.Add32(x63, x60, uint32(uint1(x67)))
	var x71 uint32
	_, x71 = bits.Add32(x52, x64, uint32(0x0))
	var x72 uint32
	var x73 uint32
	x72, x73 = bits.Add32(x54, x66, uint32(uint1(x71)))
	var x74 uint32
	var x75 uint32
	x74, x75 = bits.Add32(x56, x68, uint32(uint1(x73)))
	var x76 uint32
	var x77 uint32
	x76, x77 = bits.Add32((uint32(uint1(x57)) + uint32(uint1(x47))), (uint32(uint1(x69)) + x61), uint32(uint1(x75)))
	var x78 uint32
	var x79 uint32
	x78, x79 = bits.Add32(x1, uint32(0x0), uint32(uint1(x77)))
	var x80 uint32
	var x81 uint32
	x80, x81 = bits.Add32(x48, uint32(0x0), uint32(uint1(x79)))
	var x82 uint32
	var x83 uint32
	x82, x83 = bits.Add32(x50, x52, uint32(uint1(x81)))
	var x84 uint32
	var x85 uint32
	x84, x85 = bits.Add32((uint32(uint1(x51)) + x29), x58, uint32(uint1(x83)))
	var x86 uint32
	var x87 uint32
	x86, x87 = bits.Add32(x72, arg1[3], uint32(0x0))
	var x88 uint32
	var x89 uint32
	x88, x89 = bits.Add32(x74, uint32(0x0), uint32(uint1(x87)))
	var x90 uint32
	var x91 uint32
	x90, x91 = bits.Add32(x76, uint32(0x0), uint32(uint1(x89)))
	var x92 uint32
	var x93 uint32
	x92, x93 = bits.Add32(x78, uint32(0x0), uint32(uint1(x91)))
	var x94 uint32
	var x95 uint32
	x94, x95 = bits.Add32(x80, uint32(0x0), uint32(uint1(x93)))
	var x96 uint32
	var x97 uint32
	x96, x97 = bits.Add32(x82, uint32(0x0), uint32(uint1(x95)))
	var x98 uint32
	var x99 uint32
	x98, x99 = bits.Add32(x84, uint32(0x0), uint32(uint1(x97)))
	var x100 uint32
	var x101 uint32
	x100, x101 = bits.Add32((uint32(uint1(x85)) + x59), uint32(0x0), uint32(uint1(x99)))
	var x102 uint32
	var x103 uint32
	x103, x102 = bits.Mul32(x86, 0xffffffff)
	var x104 uint32
	var x105 uint32
	x105, x104 = bits.Mul32(x86, 0xffffffff)
	var x106 uint32
	var x107 uint32
	x107, x106 = bits.Mul32(x86, 0xffffffff)
	var x108 uint32
	var x109 uint32
	x109, x108 = bits.Mul32(x86, 0xffffffff)
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x109, x106, uint32(0x0))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x107, x104, uint32(uint1(x111)))
	var x115 uint32
	_, x115 = bits.Add32(x86, x108, uint32(0x0))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x88, x110, uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(x90, x112, uint32(uint1(x117)))
	var x120 uint32
	var x121 uint32
	x120, x121 = bits.Add32(x92, (uint32(uint1(x113)) + x105), uint32(uint1(x119)))
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x94, uint32(0x0), uint32(uint1(x121)))
	var x124 uint32
	var x125 uint32
	x124, x125 = bits.Add32(x96, uint32(0x0), uint32(uint1(x123)))
	var x126 uint32
	var x127 uint32
	x126, x127 = bits.Add32(x98, x86, uint32(uint1(x125)))
	var x128 uint32
	var x129 uint32
	x128, x129 = bits.Add32(x100, x102, uint32(uint1(x127)))
	var x130 uint32
	var x131 uint32
	x130, x131 = bits.Add32(uint32(uint1(x101)), x103, uint32(uint1(x129)))
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Add32(x116, arg1[4], uint32(0x0))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Add32(x118, uint32(0x0), uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Add32(x120, uint32(0x0), uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Add32(x122, uint32(0x0), uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Add32(x124, uint32(0x0), uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Add32(x126, uint32(0x0), uint32(uint1(x141)))
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Add32(x128, uint32(0x0), uint32(uint1(x143)))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Add32(x130, uint32(0x0), uint32(uint1(x145)))
	var x148 uint32
	var x149 uint32
	x149, x148 = bits.Mul32(x132, 0xffffffff)
	var x150 uint32
	var x151 uint32
	x151, x150 = bits.Mul32(x132, 0xffffffff)
	var x152 uint32
	var x153 uint32
	x153, x152 = bits.Mul32(x132, 0xffffffff)
	var x154 uint32
	var x155 uint32
	x155, x154 = bits.Mul32(x132, 0xffffffff)
	var x156 uint32
	var x157 uint32
	x156, x157 = bits.Add32(x155, x152, uint32(0x0))
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x153, x150, uint32(uint1(x157)))
	var x161 uint32
	_, x161 = bits.Add32(x132, x154, uint32(0x0))
	var x162 uint32
	var x163 uint32
	x162, x163 = bits.Add32(x134, x156, uint32(uint1(x161)))
	var x164 uint32
	var x165 uint32
	x164, x165 = bits.Add32(x136, x158, uint32(uint1(x163)))
	var x166 uint32
	var x167 uint32
	x166, x167 = bits.Add32(x138, (uint32(uint1(x159)) + x151), uint32(uint1(x165)))
	var x168 uint32
	var x169 uint32
	x168, x169 = bits.Add32(x140, uint32(0x0), uint32(uint1(x167)))
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x142, uint32(0x0), uint32(uint1(x169)))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x144, x132, uint32(uint1(x171)))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x146, x148, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32((uint32(uint1(x147)) + uint32(uint1(x131))), x149, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x162, arg1[5], uint32(0x0))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x164, uint32(0x0), uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32(x166, uint32(0x0), uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x168, uint32(0x0), uint32(uint1(x183)))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Add32(x170, uint32(0x0), uint32(uint1(x185)))
	var x188 uint32
	var x189 uint32
	x188, x189 = bits.Add32(x172, uint32(0x0), uint32(uint1(x187)))
	var x190 uint32
	var x191 uint32
	x190, x191 = bits.Add32(x174, uint32(0x0), uint32(uint1(x189)))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Add32(x176, uint32(0x0), uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x195, x194 = bits.Mul32(x178, 0xffffffff)
	var x196 uint32
	var x197 uint32
	x197, x196 = bits.Mul32(x178, 0xffffffff)
	var x198 uint32
	var x199 uint32
	x199, x198 = bits.Mul32(x178, 0xffffffff)
	var x200 uint32
	var x201 uint32
	x201, x200 = bits.Mul32(x178, 0xffffffff)
	var x202 uint32
	var x203 uint32
	x202, x203 = bits.Add32(x201, x198, uint32(0x0))
	var x204 uint32
	var x205 uint32
	x204, x205 = bits.Add32(x199, x196, uint32(uint1(x203)))
	var x207 uint32
	_, x207 = bits.Add32(x178, x200, uint32(0x0))
	var x208 uint32
	var x209 uint32
	x208, x209 = bits.Add32(x180, x202, uint32(uint1(x207)))
	var x210 uint32
	var x211 uint32
	x210, x211 = bits.Add32(x182, x204, uint32(uint1(x209)))
	var x212 uint32
	var x213 uint32
	x212, x213 = bits.Add32(x184, (uint32(uint1(x205)) + x197), uint32(uint1(x211)))
	var x214 uint32
	var x215 uint32
	x214, x215 = bits.Add32(x186, uint32(0x0), uint32(uint1(x213)))
	var x216 uint32
	var x217 uint32
	x216, x217 = bits.Add32(x188, uint32(0x0), uint32(uint1(x215)))
	var x218 uint32
	var x219 uint32
	x218, x219 = bits.Add32(x190, x178, uint32(uint1(x217)))
	var x220 uint32
	var x221 uint32
	x220, x221 = bits.Add32(x192, x194, uint32(uint1(x219)))
	var x222 uint32
	var x223 uint32
	x222, x223 = bits.Add32((uint32(uint1(x193)) + uint32(uint1(x177))), x195, uint32(uint1(x221)))
	var x224 uint32
	var x225 uint32
	x224, x225 = bits.Add32(x208, arg1[6], uint32(0x0))
	var x226 uint32
	var x227 uint32
	x226, x227 = bits.Add32(x210, uint32(0x0), uint32(uint1(x225)))
	var x228 uint32
	var x229 uint32
	x228, x229 = bits.Add32(x212, uint32(0x0), uint32(uint1(x227)))
	var x230 uint32
	var x231 uint32
	x230, x231 = bits.Add32(x214, uint32(0x0), uint32(uint1(x229)))
	var x232 uint32
	var x233 uint32
	x232, x233 = bits.Add32(x216, uint32(0x0), uint32(uint1(x231)))
	var x234 uint32
	var x235 uint32
	x234, x235 = bits.Add32(x218, uint32(0x0), uint32(uint1(x233)))
	var x236 uint32
	var x237 uint32
	x236, x237 = bits.Add32(x220, uint32(0x0), uint32(uint1(x235)))
	var x238 uint32
	var x239 uint32
	x238, x239 = bits.Add32(x222, uint32(0x0), uint32(uint1(x237)))
	var x240 uint32
	var x241 uint32
	x241, x240 = bits.Mul32(x224, 0xffffffff)
	var x242 uint32
	var x243 uint32
	x243, x242 = bits.Mul32(x224, 0xffffffff)
	var x244 uint32
	var x245 uint32
	x245, x244 = bits.Mul32(x224, 0xffffffff)
	var x246 uint32
	var x247 uint32
	x247, x246 = bits.Mul32(x224, 0xffffffff)
	var x248 uint32
	var x249 uint32
	x248, x249 = bits.Add32(x247, x244, uint32(0x0))
	var x250 uint32
	var x251 uint32
	x250, x251 = bits.Add32(x245, x242, uint32(uint1(x249)))
	var x253 uint32
	_, x253 = bits.Add32(x224, x246, uint32(0x0))
	var x254 uint32
	var x255 uint32
	x254, x255 = bits.Add32(x226, x248, uint32(uint1(x253)))
	var x256 uint32
	var x257 uint32
	x256, x257 = bits.Add32(x228, x250, uint32(uint1(x255)))
	var x258 uint32
	var x259 uint32
	x258, x259 = bits.Add32(x230, (uint32(uint1(x251)) + x243), uint32(uint1(x257)))
	var x260 uint32
	var x261 uint32
	x260, x261 = bits.Add32(x232, uint32(0x0), uint32(uint1(x259)))
	var x262 uint32
	var x263 uint32
	x262, x263 = bits.Add32(x234, uint32(0x0), uint32(uint1(x261)))
	var x264 uint32
	var x265 uint32
	x264, x265 = bits.Add32(x236, x224, uint32(uint1(x263)))
	var x266 uint32
	var x267 uint32
	x266, x267 = bits.Add32(x238, x240, uint32(uint1(x265)))
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32((uint32(uint1(x239)) + uint32(uint1(x223))), x241, uint32(uint1(x267)))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x254, arg1[7], uint32(0x0))
	var x272 uint32
	var x273 uint32
	x272, x273 = bits.Add32(x256, uint32(0x0), uint32(uint1(x271)))
	var x274 uint32
	var x275 uint32
	x274, x275 = bits.Add32(x258, uint32(0x0), uint32(uint1(x273)))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x260, uint32(0x0), uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x262, uint32(0x0), uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x264, uint32(0x0), uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x282, x283 = bits.Add32(x266, uint32(0x0), uint32(uint1(x281)))
	var x284 uint32
	var x285 uint32
	x284, x285 = bits.Add32(x268, uint32(0x0), uint32(uint1(x283)))
	var x286 uint32
	var x287 uint32
	x287, x286 = bits.Mul32(x270, 0xffffffff)
	var x288 uint32
	var x289 uint32
	x289, x288 = bits.Mul32(x270, 0xffffffff)
	var x290 uint32
	var x291 uint32
	x291, x290 = bits.Mul32(x270, 0xffffffff)
	var x292 uint32
	var x293 uint32
	x293, x292 = bits.Mul32(x270, 0xffffffff)
	var x294 uint32
	var x295 uint32
	x294, x295 = bits.Add32(x293, x290, uint32(0x0))
	var x296 uint32
	var x297 uint32
	x296, x297 = bits.Add32(x291, x288, uint32(uint1(x295)))
	var x299 uint32
	_, x299 = bits.Add32(x270, x292, uint32(0x0))
	var x300 uint32
	var x301 uint32
	x300, x301 = bits.Add32(x272, x294, uint32(uint1(x299)))
	var x302 uint32
	var x303 uint32
	x302, x303 = bits.Add32(x274, x296, uint32(uint1(x301)))
	var x304 uint32
	var x305 uint32
	x304, x305 = bits.Add32(x276, (uint32(uint1(x297)) + x289), uint32(uint1(x303)))
	var x306 uint32
	var x307 uint32
	x306, x307 = bits.Add32(x278, uint32(0x0), uint32(uint1(x305)))
	var x308 uint32
	var x309 uint32
	x308, x309 = bits.Add32(x280, uint32(0x0), uint32(uint1(x307)))
	var x310 uint32
	var x311 uint32
	x310, x311 = bits.Add32(x282, x270, uint32(uint1(x309)))
	var x312 uint32
	var x313 uint32
	x312, x313 = bits.Add32(x284, x286, uint32(uint1(x311)))
	var x314 uint32
	var x315 uint32
	x314, x315 = bits.Add32((uint32(uint1(x285)) + uint32(uint1(x269))), x287, uint32(uint1(x313)))
	var x316 uint32
	var x317 uint32
	x316, x317 = bits.Sub32(x300, 0xffffffff, uint32(0x0))
	var x318 uint32
	var x319 uint32
	x318, x319 = bits.Sub32(x302, 0xffffffff, uint32(uint1(x317)))
	var x320 uint32
	var x321 uint32
	x320, x321 = bits.Sub32(x304, 0xffffffff, uint32(uint1(x319)))
	var x322 uint32
	var x323 uint32
	x322, x323 = bits.Sub32(x306, uint32(0x0), uint32(uint1(x321)))
	var x324 uint32
	var x325 uint32
	x324, x325 = bits.Sub32(x308, uint32(0x0), uint32(uint1(x323)))
	var x326 uint32
	var x327 uint32
	x326, x327 = bits.Sub32(x310, uint32(0x0), uint32(uint1(x325)))
	var x328 uint32
	var x329 uint32
	x328, x329 = bits.Sub32(x312, uint32(0x1), uint32(uint1(x327)))
	var x330 uint32
	var x331 uint32
	x330, x331 = bits.Sub32(x314, 0xffffffff, uint32(uint1(x329)))
	var x333 uint32
	_, x333 = bits.Sub32(uint32(uint1(x315)), uint32(0x0), uint32(uint1(x331)))
	var x334 uint32
	cmovznzU32(&x334, uint1(x333), x316, x300)
	var x335 uint32
	cmovznzU32(&x335, uint1(x333), x318, x302)
	var x336 uint32
	cmovznzU32(&x336, uint1(x333), x320, x304)
	var x337 uint32
	cmovznzU32(&x337, uint1(x333), x322, x306)
	var x338 uint32
	cmovznzU32(&x338, uint1(x333), x324, x308)
	var x339 uint32
	cmovznzU32(&x339, uint1(x333), x326, x310)
	var x340 uint32
	cmovznzU32(&x340, uint1(x333), x328, x312)
	var x341 uint32
	cmovznzU32(&x341, uint1(x333), x330, x314)
	out1[0] = x334
	out1[1] = x335
	out1[2] = x336
	out1[3] = x337
	out1[4] = x338
	out1[5] = x339
	out1[6] = x340
	out1[7] = x341
}

// ToMontgomery translates a field element into the Montgomery domain.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   eval (from_montgomery out1) mod m = eval arg1 mod m
//   0 ≤ eval out1 < m
//
func ToMontgomery(out1 *MontgomeryDomainFieldElement, arg1 *NonMontgomeryDomainFieldElement) {
	x1 := arg1[1]
	x2 := arg1[2]
	x3 := arg1[3]
	x4 := arg1[4]
	x5 := arg1[5]
	x6 := arg1[6]
	x7 := arg1[7]
	x8 := arg1[0]
	var x9 uint32
	var x10 uint32
	x10, x9 = bits.Mul32(x8, 0x4)
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x8, 0xfffffffd)
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x8, 0xffffffff)
	var x15 uint32
	var x16 uint32
	x16, x15 = bits.Mul32(x8, 0xfffffffe)
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x8, 0xfffffffb)
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x8, 0xffffffff)
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x8, 0x3)
	var x23 uint32
	var x24 uint32
	x23, x24 = bits.Add32(x20, x17, uint32(0x0))
	var x25 uint32
	var x26 uint32
	x25, x26 = bits.Add32(x18, x15, uint32(uint1(x24)))
	var x27 uint32
	var x28 uint32
	x27, x28 = bits.Add32(x16, x13, uint32(uint1(x26)))
	var x29 uint32
	var x30 uint32
	x29, x30 = bits.Add32(x14, x11, uint32(uint1(x28)))
	var x31 uint32
	var x32 uint32
	x31, x32 = bits.Add32(x12, x9, uint32(uint1(x30)))
	var x33 uint32
	var x34 uint32
	x34, x33 = bits.Mul32(x21, 0xffffffff)
	var x35 uint32
	var x36 uint32
	x36, x35 = bits.Mul32(x21, 0xffffffff)
	var x37 uint32
	var x38 uint32
	x38, x37 = bits.Mul32(x21, 0xffffffff)
	var x39 uint32
	var x40 uint32
	x40, x39 = bits.Mul32(x21, 0xffffffff)
	var x41 uint32
	var x42 uint32
	x41, x42 = bits.Add32(x40, x37, uint32(0x0))
	var x43 uint32
	var x44 uint32
	x43, x44 = bits.Add32(x38, x35, uint32(uint1(x42)))
	var x46 uint32
	_, x46 = bits.Add32(x21, x39, uint32(0x0))
	var x47 uint32
	var x48 uint32
	x47, x48 = bits.Add32(x22, x41, uint32(uint1(x46)))
	var x49 uint32
	var x50 uint32
	x49, x50 = bits.Add32(x19, x43, uint32(uint1(x48)))
	var x51 uint32
	var x52 uint32
	x51, x52 = bits.Add32(x23, (uint32(uint1(x44)) + x36), uint32(uint1(x50)))
	var x53 uint32
	var x54 uint32
	x53, x54 = bits.Add32(x25, uint32(0x0), uint32(uint1(x52)))
	var x55 uint32
	var x56 uint32
	x55, x56 = bits.Add32(x27, uint32(0x0), uint32(uint1(x54)))
	var x57 uint32
	var x58 uint32
	x57, x58 = bits.Add32(x29, x21, uint32(uint1(x56)))
	var x59 uint32
	var x60 uint32
	x59, x60 = bits.Add32(x31, x33, uint32(uint1(x58)))
	var x61 uint32
	var x62 uint32
	x61, x62 = bits.Add32((uint32(uint1(x32)) + x10), x34, uint32(uint1(x60)))
	var x63 uint32
	var x64 uint32
	x64, x63 = bits.Mul32(x1, 0x4)
	var x65 uint32
	var x66 uint32
	x66, x65 = bits.Mul32(x1, 0xfffffffd)
	var x67 uint32
	var x68 uint32
	x68, x67 = bits.Mul32(x1, 0xffffffff)
	var x69 uint32
	var x70 uint32
	x70, x69 = bits.Mul32(x1, 0xfffffffe)
	var x71 uint32
	var x72 uint32
	x72, x71 = bits.Mul32(x1, 0xfffffffb)
	var x73 uint32
	var x74 uint32
	x74, x73 = bits.Mul32(x1, 0xffffffff)
	var x75 uint32
	var x76 uint32
	x76, x75 = bits.Mul32(x1, 0x3)
	var x77 uint32
	var x78 uint32
	x77, x78 = bits.Add32(x74, x71, uint32(0x0))
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Add32(x72, x69, uint32(uint1(x78)))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Add32(x70, x67, uint32(uint1(x80)))
	var x83 uint32
	var x84 uint32
	x83, x84 = bits.Add32(x68, x65, uint32(uint1(x82)))
	var x85 uint32
	var x86 uint32
	x85, x86 = bits.Add32(x66, x63, uint32(uint1(x84)))
	var x87 uint32
	var x88 uint32
	x87, x88 = bits.Add32(x47, x75, uint32(0x0))
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Add32(x49, x76, uint32(uint1(x88)))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Add32(x51, x73, uint32(uint1(x90)))
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Add32(x53, x77, uint32(uint1(x92)))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Add32(x55, x79, uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Add32(x57, x81, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Add32(x59, x83, uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Add32(x61, x85, uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x104, x103 = bits.Mul32(x87, 0xffffffff)
	var x105 uint32
	var x106 uint32
	x106, x105 = bits.Mul32(x87, 0xffffffff)
	var x107 uint32
	var x108 uint32
	x108, x107 = bits.Mul32(x87, 0xffffffff)
	var x109 uint32
	var x110 uint32
	x110, x109 = bits.Mul32(x87, 0xffffffff)
	var x111 uint32
	var x112 uint32
	x111, x112 = bits.Add32(x110, x107, uint32(0x0))
	var x113 uint32
	var x114 uint32
	x113, x114 = bits.Add32(x108, x105, uint32(uint1(x112)))
	var x116 uint32
	_, x116 = bits.Add32(x87, x109, uint32(0x0))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x89, x111, uint32(uint1(x116)))
	var x119 uint32
	var x120 uint32
	x119, x120 = bits.Add32(x91, x113, uint32(uint1(x118)))
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x93, (uint32(uint1(x114)) + x106), uint32(uint1(x120)))
	var x123 uint32
	var x124 uint32
	x123, x124 = bits.Add32(x95, uint32(0x0), uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x97, uint32(0x0), uint32(uint1(x124)))
	var x127 uint32
	var x128 uint32
	x127, x128 = bits.Add32(x99, x87, uint32(uint1(x126)))
	var x129 uint32
	var x130 uint32
	x129, x130 = bits.Add32(x101, x103, uint32(uint1(x128)))
	var x131 uint32
	var x132 uint32
	x131, x132 = bits.Add32(((uint32(uint1(x102)) + uint32(uint1(x62))) + (uint32(uint1(x86)) + x64)), x104, uint32(uint1(x130)))
	var x133 uint32
	var x134 uint32
	x134, x133 = bits.Mul32(x2, 0x4)
	var x135 uint32
	var x136 uint32
	x136, x135 = bits.Mul32(x2, 0xfffffffd)
	var x137 uint32
	var x138 uint32
	x138, x137 = bits.Mul32(x2, 0xffffffff)
	var x139 uint32
	var x140 uint32
	x140, x139 = bits.Mul32(x2, 0xfffffffe)
	var x141 uint32
	var x142 uint32
	x142, x141 = bits.Mul32(x2, 0xfffffffb)
	var x143 uint32
	var x144 uint32
	x144, x143 = bits.Mul32(x2, 0xffffffff)
	var x145 uint32
	var x146 uint32
	x146, x145 = bits.Mul32(x2, 0x3)
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x144, x141, uint32(0x0))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x142, x139, uint32(uint1(x148)))
	var x151 uint32
	var x152 uint32
	x151, x152 = bits.Add32(x140, x137, uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x138, x135, uint32(uint1(x152)))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x136, x133, uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x117, x145, uint32(0x0))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x119, x146, uint32(uint1(x158)))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x121, x143, uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x123, x147, uint32(uint1(x162)))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Add32(x125, x149, uint32(uint1(x164)))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x127, x151, uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x129, x153, uint32(uint1(x168)))
	var x171 uint32
	var x172 uint32
	x171, x172 = bits.Add32(x131, x155, uint32(uint1(x170)))
	var x173 uint32
	var x174 uint32
	x174, x173 = bits.Mul32(x157, 0xffffffff)
	var x175 uint32
	var x176 uint32
	x176, x175 = bits.Mul32(x157, 0xffffffff)
	var x177 uint32
	var x178 uint32
	x178, x177 = bits.Mul32(x157, 0xffffffff)
	var x179 uint32
	var x180 uint32
	x180, x179 = bits.Mul32(x157, 0xffffffff)
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x180, x177, uint32(0x0))
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x178, x175, uint32(uint1(x182)))
	var x186 uint32
	_, x186 = bits.Add32(x157, x179, uint32(0x0))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x159, x181, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x161, x183, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x163, (uint32(uint1(x184)) + x176), uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x165, uint32(0x0), uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x167, uint32(0x0), uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x169, x157, uint32(uint1(x196)))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x171, x173, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(((uint32(uint1(x172)) + uint32(uint1(x132))) + (uint32(uint1(x156)) + x134)), x174, uint32(uint1(x200)))
	var x203 uint32
	var x204 uint32
	x204, x203 = bits.Mul32(x3, 0x4)
	var x205 uint32
	var x206 uint32
	x206, x205 = bits.Mul32(x3, 0xfffffffd)
	var x207 uint32
	var x208 uint32
	x208, x207 = bits.Mul32(x3, 0xffffffff)
	var x209 uint32
	var x210 uint32
	x210, x209 = bits.Mul32(x3, 0xfffffffe)
	var x211 uint32
	var x212 uint32
	x212, x211 = bits.Mul32(x3, 0xfffffffb)
	var x213 uint32
	var x214 uint32
	x214, x213 = bits.Mul32(x3, 0xffffffff)
	var x215 uint32
	var x216 uint32
	x216, x215 = bits.Mul32(x3, 0x3)
	var x217 uint32
	var x218 uint32
	x217, x218 = bits.Add32(x214, x211, uint32(0x0))
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x212, x209, uint32(uint1(x218)))
	var x221 uint32
	var x222 uint32
	x221, x222 = bits.Add32(x210, x207, uint32(uint1(x220)))
	var x223 uint32
	var x224 uint32
	x223, x224 = bits.Add32(x208, x205, uint32(uint1(x222)))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x206, x203, uint32(uint1(x224)))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x187, x215, uint32(0x0))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x189, x216, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x191, x213, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x193, x217, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x195, x219, uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x197, x221, uint32(uint1(x236)))
	var x239 uint32
	var x240 uint32
	x239, x240 = bits.Add32(x199, x223, uint32(uint1(x238)))
	var x241 uint32
	var x242 uint32
	x241, x242 = bits.Add32(x201, x225, uint32(uint1(x240)))
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x227, 0xffffffff)
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x227, 0xffffffff)
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x227, 0xffffffff)
	var x249 uint32
	var x250 uint32
	x250, x249 = bits.Mul32(x227, 0xffffffff)
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x250, x247, uint32(0x0))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x248, x245, uint32(uint1(x252)))
	var x256 uint32
	_, x256 = bits.Add32(x227, x249, uint32(0x0))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x229, x251, uint32(uint1(x256)))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x231, x253, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x233, (uint32(uint1(x254)) + x246), uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x235, uint32(0x0), uint32(uint1(x262)))
	var x265 uint32
	var x266 uint32
	x265, x266 = bits.Add32(x237, uint32(0x0), uint32(uint1(x264)))
	var x267 uint32
	var x268 uint32
	x267, x268 = bits.Add32(x239, x227, uint32(uint1(x266)))
	var x269 uint32
	var x270 uint32
	x269, x270 = bits.Add32(x241, x243, uint32(uint1(x268)))
	var x271 uint32
	var x272 uint32
	x271, x272 = bits.Add32(((uint32(uint1(x242)) + uint32(uint1(x202))) + (uint32(uint1(x226)) + x204)), x244, uint32(uint1(x270)))
	var x273 uint32
	var x274 uint32
	x274, x273 = bits.Mul32(x4, 0x4)
	var x275 uint32
	var x276 uint32
	x276, x275 = bits.Mul32(x4, 0xfffffffd)
	var x277 uint32
	var x278 uint32
	x278, x277 = bits.Mul32(x4, 0xffffffff)
	var x279 uint32
	var x280 uint32
	x280, x279 = bits.Mul32(x4, 0xfffffffe)
	var x281 uint32
	var x282 uint32
	x282, x281 = bits.Mul32(x4, 0xfffffffb)
	var x283 uint32
	var x284 uint32
	x284, x283 = bits.Mul32(x4, 0xffffffff)
	var x285 uint32
	var x286 uint32
	x286, x285 = bits.Mul32(x4, 0x3)
	var x287 uint32
	var x288 uint32
	x287, x288 = bits.Add32(x284, x281, uint32(0x0))
	var x289 uint32
	var x290 uint32
	x289, x290 = bits.Add32(x282, x279, uint32(uint1(x288)))
	var x291 uint32
	var x292 uint32
	x291, x292 = bits.Add32(x280, x277, uint32(uint1(x290)))
	var x293 uint32
	var x294 uint32
	x293, x294 = bits.Add32(x278, x275, uint32(uint1(x292)))
	var x295 uint32
	var x296 uint32
	x295, x296 = bits.Add32(x276, x273, uint32(uint1(x294)))
	var x297 uint32
	var x298 uint32
	x297, x298 = bits.Add32(x257, x285, uint32(0x0))
	var x299 uint32
	var x300 uint32
	x299, x300 = bits.Add32(x259, x286, uint32(uint1(x298)))
	var x301 uint32
	var x302 uint32
	x301, x302 = bits.Add32(x261, x283, uint32(uint1(x300)))
	var x303 uint32
	var x304 uint32
	x303, x304 = bits.Add32(x263, x287, uint32(uint1(x302)))
	var x305 uint32
	var x306 uint32
	x305, x306 = bits.Add32(x265, x289, uint32(uint1(x304)))
	var x307 uint32
	var x308 uint32
	x307, x308 = bits.Add32(x267, x291, uint32(uint1(x306)))
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x269, x293, uint32(uint1(x308)))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x271, x295, uint32(uint1(x310)))
	var x313 uint32
	var x314 uint32
	x314, x313 = bits.Mul32(x297, 0xffffffff)
	var x315 uint32
	var x316 uint32
	x316, x315 = bits.Mul32(x297, 0xffffffff)
	var x317 uint32
	var x318 uint32
	x318, x317 = bits.Mul32(x297, 0xffffffff)
	var x319 uint32
	var x320 uint32
	x320, x319 = bits.Mul32(x297, 0xffffffff)
	var x321 uint32
	var x322 uint32
	x321, x322 = bits.Add32(x320, x317, uint32(0x0))
	var x323 uint32
	var x324 uint32
	x323, x324 = bits.Add32(x318, x315, uint32(uint1(x322)))
	var x326 uint32
	_, x326 = bits.Add32(x297, x319, uint32(0x0))
	var x327 uint32
	var x328 uint32
	x327, x328 = bits.Add32(x299, x321, uint32(uint1(x326)))
	var x329 uint32
	var x330 uint32
	x329, x330 = bits.Add32(x301, x323, uint32(uint1(x328)))
	var x331 uint32
	var x332 uint32
	x331, x332 = bits.Add32(x303, (uint32(uint1(x324)) + x316), uint32(uint1(x330)))
	var x333 uint32
	var x334 uint32
	x333, x334 = bits.Add32(x305, uint32(0x0), uint32(uint1(x332)))
	var x335 uint32
	var x336 uint32
	x335, x336 = bits.Add32(x307, uint32(0x0), uint32(uint1(x334)))
	var x337 uint32
	var x338 uint32
	x337, x338 = bits.Add32(x309, x297, uint32(uint1(x336)))
	var x339 uint32
	var x340 uint32
	x339, x340 = bits.Add32(x311, x313, uint32(uint1(x338)))
	var x341 uint32
	var x342 uint32
	x341, x342 = bits.Add32(((uint32(uint1(x312)) + uint32(uint1(x272))) + (uint32(uint1(x296)) + x274)), x314, uint32(uint1(x340)))
	var x343 uint32
	var x344 uint32
	x344, x343 = bits.Mul32(x5, 0x4)
	var x345 uint32
	var x346 uint32
	x346, x345 = bits.Mul32(x5, 0xfffffffd)
	var x347 uint32
	var x348 uint32
	x348, x347 = bits.Mul32(x5, 0xffffffff)
	var x349 uint32
	var x350 uint32
	x350, x349 = bits.Mul32(x5, 0xfffffffe)
	var x351 uint32
	var x352 uint32
	x352, x351 = bits.Mul32(x5, 0xfffffffb)
	var x353 uint32
	var x354 uint32
	x354, x353 = bits.Mul32(x5, 0xffffffff)
	var x355 uint32
	var x356 uint32
	x356, x355 = bits.Mul32(x5, 0x3)
	var x357 uint32
	var x358 uint32
	x357, x358 = bits.Add32(x354, x351, uint32(0x0))
	var x359 uint32
	var x360 uint32
	x359, x360 = bits.Add32(x352, x349, uint32(uint1(x358)))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x350, x347, uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x363, x364 = bits.Add32(x348, x345, uint32(uint1(x362)))
	var x365 uint32
	var x366 uint32
	x365, x366 = bits.Add32(x346, x343, uint32(uint1(x364)))
	var x367 uint32
	var x368 uint32
	x367, x368 = bits.Add32(x327, x355, uint32(0x0))
	var x369 uint32
	var x370 uint32
	x369, x370 = bits.Add32(x329, x356, uint32(uint1(x368)))
	var x371 uint32
	var x372 uint32
	x371, x372 = bits.Add32(x331, x353, uint32(uint1(x370)))
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x333, x357, uint32(uint1(x372)))
	var x375 uint32
	var x376 uint32
	x375, x376 = bits.Add32(x335, x359, uint32(uint1(x374)))
	var x377 uint32
	var x378 uint32
	x377, x378 = bits.Add32(x337, x361, uint32(uint1(x376)))
	var x379 uint32
	var x380 uint32
	x379, x380 = bits.Add32(x339, x363, uint32(uint1(x378)))
	var x381 uint32
	var x382 uint32
	x381, x382 = bits.Add32(x341, x365, uint32(uint1(x380)))
	var x383 uint32
	var x384 uint32
	x384, x383 = bits.Mul32(x367, 0xffffffff)
	var x385 uint32
	var x386 uint32
	x386, x385 = bits.Mul32(x367, 0xffffffff)
	var x387 uint32
	var x388 uint32
	x388, x387 = bits.Mul32(x367, 0xffffffff)
	var x389 uint32
	var x390 uint32
	x390, x389 = bits.Mul32(x367, 0xffffffff)
	var x391 uint32
	var x392 uint32
	x391, x392 = bits.Add32(x390, x387, uint32(0x0))
	var x393 uint32
	var x394 uint32
	x393, x394 = bits.Add32(x388, x385, uint32(uint1(x392)))
	var x396 uint32
	_, x396 = bits.Add32(x367, x389, uint32(0x0))
	var x397 uint32
	var x398 uint32
	x397, x398 = bits.Add32(x369, x391, uint32(uint1(x396)))
	var x399 uint32
	var x400 uint32
	x399, x400 = bits.Add32(x371, x393, uint32(uint1(x398)))
	var x401 uint32
	var x402 uint32
	x401, x402 = bits.Add32(x373, (uint32(uint1(x394)) + x386), uint32(uint1(x400)))
	var x403 uint32
	var x404 uint32
	x403, x404 = bits.Add32(x375, uint32(0x0), uint32(uint1(x402)))
	var x405 uint32
	var x406 uint32
	x405, x406 = bits.Add32(x377, uint32(0x0), uint32(uint1(x404)))
	var x407 uint32
	var x408 uint32
	x407, x408 = bits.Add32(x379, x367, uint32(uint1(x406)))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x381, x383, uint32(uint1(x408)))
	var x411 uint32
	var x412 uint32
	x411, x412 = bits.Add32(((uint32(uint1(x382)) + uint32(uint1(x342))) + (uint32(uint1(x366)) + x344)), x384, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x414, x413 = bits.Mul32(x6, 0x4)
	var x415 uint32
	var x416 uint32
	x416, x415 = bits.Mul32(x6, 0xfffffffd)
	var x417 uint32
	var x418 uint32
	x418, x417 = bits.Mul32(x6, 0xffffffff)
	var x419 uint32
	var x420 uint32
	x420, x419 = bits.Mul32(x6, 0xfffffffe)
	var x421 uint32
	var x422 uint32
	x422, x421 = bits.Mul32(x6, 0xfffffffb)
	var x423 uint32
	var x424 uint32
	x424, x423 = bits.Mul32(x6, 0xffffffff)
	var x425 uint32
	var x426 uint32
	x426, x425 = bits.Mul32(x6, 0x3)
	var x427 uint32
	var x428 uint32
	x427, x428 = bits.Add32(x424, x421, uint32(0x0))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x422, x419, uint32(uint1(x428)))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x420, x417, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x418, x415, uint32(uint1(x432)))
	var x435 uint32
	var x436 uint32
	x435, x436 = bits.Add32(x416, x413, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x397, x425, uint32(0x0))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x399, x426, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x401, x423, uint32(uint1(x440)))
	var x443 uint32
	var x444 uint32
	x443, x444 = bits.Add32(x403, x427, uint32(uint1(x442)))
	var x445 uint32
	var x446 uint32
	x445, x446 = bits.Add32(x405, x429, uint32(uint1(x444)))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x407, x431, uint32(uint1(x446)))
	var x449 uint32
	var x450 uint32
	x449, x450 = bits.Add32(x409, x433, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x411, x435, uint32(uint1(x450)))
	var x453 uint32
	var x454 uint32
	x454, x453 = bits.Mul32(x437, 0xffffffff)
	var x455 uint32
	var x456 uint32
	x456, x455 = bits.Mul32(x437, 0xffffffff)
	var x457 uint32
	var x458 uint32
	x458, x457 = bits.Mul32(x437, 0xffffffff)
	var x459 uint32
	var x460 uint32
	x460, x459 = bits.Mul32(x437, 0xffffffff)
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x460, x457, uint32(0x0))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x458, x455, uint32(uint1(x462)))
	var x466 uint32
	_, x466 = bits.Add32(x437, x459, uint32(0x0))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x439, x461, uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x441, x463, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x443, (uint32(uint1(x464)) + x456), uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x445, uint32(0x0), uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x447, uint32(0x0), uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x449, x437, uint32(uint1(x476)))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x451, x453, uint32(uint1(x478)))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(((uint32(uint1(x452)) + uint32(uint1(x412))) + (uint32(uint1(x436)) + x414)), x454, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x484, x483 = bits.Mul32(x7, 0x4)
	var x485 uint32
	var x486 uint32
	x486, x485 = bits.Mul32(x7, 0xfffffffd)
	var x487 uint32
	var x488 uint32
	x488, x487 = bits.Mul32(x7, 0xffffffff)
	var x489 uint32
	var x490 uint32
	x490, x489 = bits.Mul32(x7, 0xfffffffe)
	var x491 uint32
	var x492 uint32
	x492, x491 = bits.Mul32(x7, 0xfffffffb)
	var x493 uint32
	var x494 uint32
	x494, x493 = bits.Mul32(x7, 0xffffffff)
	var x495 uint32
	var x496 uint32
	x496, x495 = bits.Mul32(x7, 0x3)
	var x497 uint32
	var x498 uint32
	x497, x498 = bits.Add32(x494, x491, uint32(0x0))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x492, x489, uint32(uint1(x498)))
	var x501 uint32
	var x502 uint32
	x501, x502 = bits.Add32(x490, x487, uint32(uint1(x500)))
	var x503 uint32
	var x504 uint32
	x503, x504 = bits.Add32(x488, x485, uint32(uint1(x502)))
	var x505 uint32
	var x506 uint32
	x505, x506 = bits.Add32(x486, x483, uint32(uint1(x504)))
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x467, x495, uint32(0x0))
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32(x469, x496, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x471, x493, uint32(uint1(x510)))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x473, x497, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x475, x499, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x477, x501, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x479, x503, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x481, x505, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x524, x523 = bits.Mul32(x507, 0xffffffff)
	var x525 uint32
	var x526 uint32
	x526, x525 = bits.Mul32(x507, 0xffffffff)
	var x527 uint32
	var x528 uint32
	x528, x527 = bits.Mul32(x507, 0xffffffff)
	var x529 uint32
	var x530 uint32
	x530, x529 = bits.Mul32(x507, 0xffffffff)
	var x531 uint32
	var x532 uint32
	x531, x532 = bits.Add32(x530, x527, uint32(0x0))
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x528, x525, uint32(uint1(x532)))
	var x536 uint32
	_, x536 = bits.Add32(x507, x529, uint32(0x0))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x509, x531, uint32(uint1(x536)))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x511, x533, uint32(uint1(x538)))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x513, (uint32(uint1(x534)) + x526), uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x515, uint32(0x0), uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x517, uint32(0x0), uint32(uint1(x544)))
	var x547 uint32
	var x548 uint32
	x547, x548 = bits.Add32(x519, x507, uint32(uint1(x546)))
	var x549 uint32
	var x550 uint32
	x549, x550 = bits.Add32(x521, x523, uint32(uint1(x548)))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(((uint32(uint1(x522)) + uint32(uint1(x482))) + (uint32(uint1(x506)) + x484)), x524, uint32(uint1(x550)))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Sub32(x537, 0xffffffff, uint32(0x0))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Sub32(x539, 0xffffffff, uint32(uint1(x554)))
	var x557 uint32
	var x558 uint32
	x557, x558 = bits.Sub32(x541, 0xffffffff, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Sub32(x543, uint32(0x0), uint32(uint1(x558)))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Sub32(x545, uint32(0x0), uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Sub32(x547, uint32(0x0), uint32(uint1(x562)))
	var x565 uint32
	var x566 uint32
	x565, x566 = bits.Sub32(x549, uint32(0x1), uint32(uint1(x564)))
	var x567 uint32
	var x568 uint32
	x567, x568 = bits.Sub32(x551, 0xffffffff, uint32(uint1(x566)))
	var x570 uint32
	_, x570 = bits.Sub32(uint32(uint1(x552)), uint32(0x0), uint32(uint1(x568)))
	var x571 uint32
	cmovznzU32(&x571, uint1(x570), x553, x537)
	var x572 uint32
	cmovznzU32(&x572, uint1(x570), x555, x539)
	var x573 uint32
	cmovznzU32(&x573, uint1(x570), x557, x541)
	var x574 uint32
	cmovznzU32(&x574, uint1(x570), x559, x543)
	var x575 uint32
	cmovznzU32(&x575, uint1(x570), x561, x545)
	var x576 uint32
	cmovznzU32(&x576, uint1(x570), x563, x547)
	var x577 uint32
	cmovznzU32(&x577, uint1(x570), x565, x549)
	var x578 uint32
	cmovznzU32(&x578, uint1(x570), x567, x551)
	out1[0] = x571
	out1[1] = x572
	out1[2] = x573
	out1[3] = x574
	out1[4] = x575
	out1[5] = x576
	out1[6] = x577
	out1[7] = x578
}

// Nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func Nonzero(out1 *uint32, arg1 *[8]uint32) {
	x1 := (arg1[0] | (arg1[1] | (arg1[2] | (arg1[3] | (arg1[4] | (arg1[5] | (arg1[6] | arg1[7])))))))
	*out1 = x1
}

// Selectznz is a multi-limb conditional select.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Selectznz(out1 *[8]uint32, arg1 uint1, arg2 *[8]uint32, arg3 *[8]uint32) {
	var x1 uint32
	cmovznzU32(&x1, arg1, arg2[0], arg3[0])
	var x2 uint32
	cmovznzU32(&x2, arg1, arg2[1], arg3[1])
	var x3 uint32
	cmovznzU32(&x3, arg1, arg2[2], arg3[2])
	var x4 uint32
	cmovznzU32(&x4, arg1, arg2[3], arg3[3])
	var x5 uint32
	cmovznzU32(&x5, arg1, arg2[4], arg3[4])
	var x6 uint32
	cmovznzU32(&x6, arg1, arg2[5], arg3[5])
	var x7 uint32
	cmovznzU32(&x7, arg1, arg2[6], arg3[6])
	var x8 uint32
	cmovznzU32(&x8, arg1, arg2[7], arg3[7])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
}

// ToBytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
//
// Preconditions:
//   0 ≤ eval arg1 < m
// Postconditions:
//   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
func ToBytes(out1 *[32]uint8, arg1 *[8]uint32) {
	x1 := arg1[7]
	x2 := arg1[6]
	x3 := arg1[5]
	x4 := arg1[4]
	x5 := arg1[3]
	x6 := arg1[2]
	x7 := arg1[1]
	x8 := arg1[0]
	x9 := (uint8(x8) & 0xff)
	x10 := (x8 >> 8)
	x11 := (uint8(x10) & 0xff)
	x12 := (x10 >> 8)
	x13 := (uint8(x12) & 0xff)
	x14 := uint8((x12 >> 8))
	x15 := (uint8(x7) & 0xff)
	x16 := (x7 >> 8)
	x17 := (uint8(x16) & 0xff)
	x18 := (x16 >> 8)
	x19 := (uint8(x18) & 0xff)
	x20 := uint8((x18 >> 8))
	x21 := (uint8(x6) & 0xff)
	x22 := (x6 >> 8)
	x23 := (uint8(x22) & 0xff)
	x24 := (x22 >> 8)
	x25 := (uint8(x24) & 0xff)
	x26 := uint8((x24 >> 8))
	x27 := (uint8(x5) & 0xff)
	x28 := (x5 >> 8)
	x29 := (uint8(x28) & 0xff)
	x30 := (x28 >> 8)
	x31 := (uint8(x30) & 0xff)
	x32 := uint8((x30 >> 8))
	x33 := (uint8(x4) & 0xff)
	x34 := (x4 >> 8)
	x35 := (uint8(x34) & 0xff)
	x36 := (x34 >> 8)
	x37 := (uint8(x36) & 0xff)
	x38 := uint8((x36 >> 8))
	x39 := (uint8(x3) & 0xff)
	x40 := (x3 >> 8)
	x41 := (uint8(x40) & 0xff)
	x42 := (x40 >> 8)
	x43 := (uint8(x42) & 0xff)
	x44 := uint8((x42 >> 8))
	x45 := (uint8(x2) & 0xff)
	x46 := (x2 >> 8)
	x47 := (uint8(x46) & 0xff)
	x48 := (x46 >> 8)
	x49 := (uint8(x48) & 0xff)
	x50 := uint8((x48 >> 8))
	x51 := (uint8(x1) & 0xff)
	x52 := (x1 >> 8)
	x53 := (uint8(x52) & 0xff)
	x54 := (x52 >> 8)
	x55 := (uint8(x54) & 0xff)
	x56 := uint8((x54 >> 8))
	out1[0] = x9
	out1[1] = x11
	out1[2] = x13
	out1[3] = x14
	out1[4] = x15
	out1[5] = x17
	out1[6] = x19
	out1[7] = x20
	out1[8] = x21
	out1[9] = x23
	out1[10] = x25
	out1[11] = x26
	out1[12] = x27
	out1[13] = x29
	out1[14] = x31
	out1[15] = x32
	out1[16] = x33
	out1[17] = x35
	out1[18] = x37
	out1[19] = x38
	out1[20] = x39
	out1[21] = x41
	out1[22] = x43
	out1[23] = x44
	out1[24] = x45
	out1[25] = x47
	out1[26] = x49
	out1[27] = x50
	out1[28] = x51
	out1[29] = x53
	out1[30] = x55
	out1[31] = x56
}

// FromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Preconditions:
//   0 ≤ bytes_eval arg1 < m
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//   0 ≤ eval out1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func FromBytes(out1 *[8]uint32, arg1 *[32]uint8) {
	x1 := (uint32(arg1[31]) << 24)
	x2 := (uint32(arg1[30]) << 16)
	x3 := (uint32(arg1[29]) << 8)
	x4 := arg1[28]
	x5 := (uint32(arg1[27]) << 24)
	x6 := (uint32(arg1[26]) << 16)
	x7 := (uint32(arg1[25]) << 8)
	x8 := arg1[24]
	x9 := (uint32(arg1[23]) << 24)
	x10 := (uint32(arg1[22]) << 16)
	x11 := (uint32(arg1[21]) << 8)
	x12 := arg1[20]
	x13 := (uint32(arg1[19]) << 24)
	x14 := (uint32(arg1[18]) << 16)
	x15 := (uint32(arg1[17]) << 8)
	x16 := arg1[16]
	x17 := (uint32(arg1[15]) << 24)
	x18 := (uint32(arg1[14]) << 16)
	x19 := (uint32(arg1[13]) << 8)
	x20 := arg1[12]
	x21 := (uint32(arg1[11]) << 24)
	x22 := (uint32(arg1[10]) << 16)
	x23 := (uint32(arg1[9]) << 8)
	x24 := arg1[8]
	x25 := (uint32(arg1[7]) << 24)
	x26 := (uint32(arg1[6]) << 16)
	x27 := (uint32(arg1[5]) << 8)
	x28 := arg1[4]
	x29 := (uint32(arg1[3]) << 24)
	x30 := (uint32(arg1[2]) << 16)
	x31 := (uint32(arg1[1]) << 8)
	x32 := arg1[0]
	x33 := (x31 + uint32(x32))
	x34 := (x30 + x33)
	x35 := (x29 + x34)
	x36 := (x27 + uint32(x28))
	x37 := (x26 + x36)
	x38 := (x25 + x37)
	x39 := (x23 + uint32(x24))
	x40 := (x22 + x39)
	x41 := (x21 + x40)
	x42 := (x19 + uint32(x20))
	x43 := (x18 + x42)
	x44 := (x17 + x43)
	x45 := (x15 + uint32(x16))
	x46 := (x14 + x45)
	x47 := (x13 + x46)
	x48 := (x11 + uint32(x12))
	x49 := (x10 + x48)
	x50 := (x9 + x49)
	x51 := (x7 + uint32(x8))
	x52 := (x6 + x51)
	x53 := (x5 + x52)
	x54 := (x3 + uint32(x4))
	x55 := (x2 + x54)
	x56 := (x1 + x55)
	out1[0] = x35
	out1[1] = x38
	out1[2] = x41
	out1[3] = x44
	out1[4] = x47
	out1[5] = x50
	out1[6] = x53
	out1[7] = x56
}

// SetOne returns the field element one in the Montgomery domain.
//
// Postconditions:
//   eval (from_montgomery out1) mod m = 1 mod m
//   0 ≤ eval out1 < m
//
func SetOne(out1 *MontgomeryDomainFieldElement) {
	out1[0] = uint32(0x1)
	out1[1] = uint32(0x0)
	out1[2] = uint32(0x0)
	out1[3] = 0xffffffff
	out1[4] = 0xffffffff
	out1[5] = 0xffffffff
	out1[6] = 0xfffffffe
	out1[7] = uint32(0x0)
}

// Msat returns the saturated representation of the prime modulus.
//
// Postconditions:
//   twos_complement_eval out1 = m
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Msat(out1 *[9]uint32) {
	out1[0] = 0xffffffff
	out1[1] = 0xffffffff
	out1[2] = 0xffffffff
	out1[3] = uint32(0x0)
	out1[4] = uint32(0x0)
	out1[5] = uint32(0x0)
	out1[6] = uint32(0x1)
	out1[7] = 0xffffffff
	out1[8] = uint32(0x0)
}

// The function SatFromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func SatFromBytes(out1 *[9]uint32, arg1 *[32]uint8) {
	x1 := (uint32(arg1[31]) << 24)
	x2 := (uint32(arg1[30]) << 16)
	x3 := (uint32(arg1[29]) << 8)
	x4 := arg1[28]
	x5 := (uint32(arg1[27]) << 24)
	x6 := (uint32(arg1[26]) << 16)
	x7 := (uint32(arg1[25]) << 8)
	x8 := arg1[24]
	x9 := (uint32(arg1[23]) << 24)
	x10 := (uint32(arg1[22]) << 16)
	x11 := (uint32(arg1[21]) << 8)
	x12 := arg1[20]
	x13 := (uint32(arg1[19]) << 24)
	x14 := (uint32(arg1[18]) << 16)
	x15 := (uint32(arg1[17]) << 8)
	x16 := arg1[16]
	x17 := (uint32(arg1[15]) << 24)
	x18 := (uint32(arg1[14]) << 16)
	x19 := (uint32(arg1[13]) << 8)
	x20 := arg1[12]
	x21 := (uint32(arg1[11]) << 24)
	x22 := (uint32(arg1[10]) << 16)
	x23 := (uint32(arg1[9]) << 8)
	x24 := arg1[8]
	x25 := (uint32(arg1[7]) << 24)
	x26 := (uint32(arg1[6]) << 16)
	x27 := (uint32(arg1[5]) << 8)
	x28 := arg1[4]
	x29 := (uint32(arg1[3]) << 24)
	x30 := (uint32(arg1[2]) << 16)
	x31 := (uint32(arg1[1]) << 8)
	x32 := arg1[0]
	x33 := (x31 + uint32(x32))
	x34 := (x30 + x33)
	x35 := (x29 + x34)
	x36 := (x27 + uint32(x28))
	x37 := (x26 + x36)
	x38 := (x25 + x37)
	x39 := (x23 + uint32(x24))
	x40 := (x22 + x39)
	x41 := (x21 + x40)
	x42 := (x19 + uint32(x20))
	x43 := (x18 + x42)
	x44 := (x17 + x43)
	x45 := (x15 + uint32(x16))
	x46 := (x14 + x45)
	x47 := (x13 + x46)
	x48 := (x11 + uint32(x12))
	x49 := (x10 + x48)
	x50 := (x9 + x49)
	x51 := (x7 + uint32(x8))
	x52 := (x6 + x51)
	x53 := (x5 + x52)
	x54 := (x3 + uint32(x4))
	x55 := (x2 + x54)
	x56 := (x1 + x55)
	out1[0] = x35
	out1[1] = x38
	out1[2] = x41
	out1[3] = x44
	out1[4] = x47
	out1[5] = x50
	out1[6] = x53
	out1[7] = x56
	out1[8] = uint32(0x0)
}

// Divstep computes a divstep.
//
// Preconditions:
//   0 ≤ eval arg4 < m
//   0 ≤ eval arg5 < m
// Postconditions:
//   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
//   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
//   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
//   eval (from_montgomery out4) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval (from_montgomery arg5)) mod m else (2 * eval (from_montgomery arg4)) mod m)
//   eval (from_montgomery out5) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval (from_montgomery arg4) - eval (from_montgomery arg4)) mod m else (eval (from_montgomery arg5) + (twos_complement_eval arg3 mod 2) * eval (from_montgomery arg4)) mod m)
//   0 ≤ eval out5 < m
//   0 ≤ eval out4 < m
//   0 ≤ eval out2 < m
//   0 ≤ eval out3 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg4: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg5: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out4: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out5: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Divstep(out1 *uint32, out2 *[9]uint32, out3 *[9]uint32, out4 *[8]uint32, out5 *[8]uint32, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32, arg4 *[8]uint32, arg5 *[8]uint32) {
	var x1 uint32
	x1, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	x3 := (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1))
	var x4 uint32
	x4, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	var x6 uint32
	cmovznzU32(&x6, x3, arg1, x4)
	var x7 uint32
	cmovznzU32(&x7, x3, arg2[0], arg3[0])
	var x8 uint32
	cmovznzU32(&x8, x3, arg2[1], arg3[1])
	var x9 uint32
	cmovznzU32(&x9, x3, arg2[2], arg3[2])
	var x10 uint32
	cmovznzU32(&x10, x3, arg2[3], arg3[3])
	var x11 uint32
	cmovznzU32(&x11, x3, arg2[4], arg3[4])
	var x12 uint32
	cmovznzU32(&x12, x3, arg2[5], arg3[5])
	var x13 uint32
	cmovznzU32(&x13, x3, arg2[6], arg3[6])
	var x14 uint32
	cmovznzU32(&x14, x3, arg2[7], arg3[7])
	var x15 uint32
	cmovznzU32(&x15, x3, arg2[8], arg3[8])
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(uint32(0x1), (^arg2[0]), uint32(0x0))
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(uint32(0x0), (^arg2[1]), uint32(uint1(x17)))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(uint32(0x0), (^arg2[2]), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(uint32(0x0), (^arg2[3]), uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(uint32(0x0), (^arg2[4]), uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(uint32(0x0), (^arg2[5]), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(uint32(0x0), (^arg2[6]), uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(uint32(0x0), (^arg2[7]), uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(uint32(0x0), (^arg2[8]), uint32(uint1(x31)))
	var x34 uint32
	cmovznzU32(&x34, x3, arg3[0], x16)
	var x35 uint32
	cmovznzU32(&x35, x3, arg3[1], x18)
	var x36 uint32
	cmovznzU32(&x36, x3, arg3[2], x20)
	var x37 uint32
	cmovznzU32(&x37, x3, arg3[3], x22)
	var x38 uint32
	cmovznzU32(&x38, x3, arg3[4], x24)
	var x39 uint32
	cmovznzU32(&x39, x3, arg3[5], x26)
	var x40 uint32
	cmovznzU32(&x40, x3, arg3[6], x28)
	var x41 uint32
	cmovznzU32(&x41, x3, arg3[7], x30)
	var x42 uint32
	cmovznzU32(&x42, x3, arg3[8], x32)
	var x43 uint32
	cmovznzU32(&x43, x3, arg4[0], arg5[0])
	var x44 uint32
	cmovznzU32(&x44, x3, arg4[1], arg5[1])
	var x45 uint32
	cmovznzU32(&x45, x3, arg4[2], arg5[2])
	var x46 uint32
	cmovznzU32(&x46, x3, arg4[3], arg5[3])
	var x47 uint32
	cmovznzU32(&x47, x3, arg4[4], arg5[4])
	var x48 uint32
	cmovznzU32(&x48, x3, arg4[5], arg5[5])
	var x49 uint32
	cmovznzU32(&x49, x3, arg4[6], arg5[6])
	var x50 uint32
	cmovznzU32(&x50, x3, arg4[7], arg5[7])
	var x51 uint32
	var x52 uint32
	x51, x52 = bits.Add32(x43, x43, uint32(0x0))
	var x53 uint32
	var x54 uint32
	x53, x54 = bits.Add32(x44, x44, uint32(uint1(x52)))
	var x55 uint32
	var x56 uint32
	x55, x56 = bits.Add32(x45, x45, uint32(uint1(x54)))
	var x57 uint32
	var x58 uint32
	x57, x58 = bits.Add32(x46, x46, uint32(uint1(x56)))
	var x59 uint32
	var x60 uint32
	x59, x60 = bits.Add32(x47, x47, uint32(uint1(x58)))
	var x61 uint32
	var x62 uint32
	x61, x62 = bits.Add32(x48, x48, uint32(uint1(x60)))
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(x49, x49, uint32(uint1(x62)))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(x50, x50, uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x67, x68 = bits.Sub32(x51, 0xffffffff, uint32(0x0))
	var x69 uint32
	var x70 uint32
	x69, x70 = bits.Sub32(x53, 0xffffffff, uint32(uint1(x68)))
	var x71 uint32
	var x72 uint32
	x71, x72 = bits.Sub32(x55, 0xffffffff, uint32(uint1(x70)))
	var x73 uint32
	var x74 uint32
	x73, x74 = bits.Sub32(x57, uint32(0x0), uint32(uint1(x72)))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Sub32(x59, uint32(0x0), uint32(uint1(x74)))
	var x77 uint32
	var x78 uint32
	x77, x78 = bits.Sub32(x61, uint32(0x0), uint32(uint1(x76)))
	var x79 uint32
	var x80 uint32
	x79, x80 = bits.Sub32(x63, uint32(0x1), uint32(uint1(x78)))
	var x81 uint32
	var x82 uint32
	x81, x82 = bits.Sub32(x65, 0xffffffff, uint32(uint1(x80)))
	var x84 uint32
	_, x84 = bits.Sub32(uint32(uint1(x66)), uint32(0x0), uint32(uint1(x82)))
	x85 := arg4[7]
	x86 := arg4[6]
	x87 := arg4[5]
	x88 := arg4[4]
	x89 := arg4[3]
	x90 := arg4[2]
	x91 := arg4[1]
	x92 := arg4[0]
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Sub32(uint32(0x0), x92, uint32(0x0))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Sub32(uint32(0x0), x91, uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Sub32(uint32(0x0), x90, uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Sub32(uint32(0x0), x89, uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Sub32(uint32(0x0), x88, uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x103, x104 = bits.Sub32(uint32(0x0), x87, uint32(uint1(x102)))
	var x105 uint32
	var x106 uint32
	x105, x106 = bits.Sub32(uint32(0x0), x86, uint32(uint1(x104)))
	var x107 uint32
	var x108 uint32
	x107, x108 = bits.Sub32(uint32(0x0), x85, uint32(uint1(x106)))
	var x109 uint32
	cmovznzU32(&x109, uint1(x108), uint32(0x0), 0xffffffff)
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x93, x109, uint32(0x0))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x95, x109, uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x97, x109, uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x99, uint32(0x0), uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(x101, uint32(0x0), uint32(uint1(x117)))
	var x120 uint32
	var x121 uint32
	x120, x121 = bits.Add32(x103, uint32(0x0), uint32(uint1(x119)))
	var x122 uint32
	var x123 uint32
	x122, x123 = bits.Add32(x105, uint32((uint1(x109) & 0x1)), uint32(uint1(x121)))
	var x124 uint32
	x124, _ = bits.Add32(x107, x109, uint32(uint1(x123)))
	var x126 uint32
	cmovznzU32(&x126, x3, arg5[0], x110)
	var x127 uint32
	cmovznzU32(&x127, x3, arg5[1], x112)
	var x128 uint32
	cmovznzU32(&x128, x3, arg5[2], x114)
	var x129 uint32
	cmovznzU32(&x129, x3, arg5[3], x116)
	var x130 uint32
	cmovznzU32(&x130, x3, arg5[4], x118)
	var x131 uint32
	cmovznzU32(&x131, x3, arg5[5], x120)
	var x132 uint32
	cmovznzU32(&x132, x3, arg5[6], x122)
	var x133 uint32
	cmovznzU32(&x133, x3, arg5[7], x124)
	x134 := (uint1(x34) & 0x1)
	var x135 uint32
	cmovznzU32(&x135, x134, uint32(0x0), x7)
	var x136 uint32
	cmovznzU32(&x136, x134, uint32(0x0), x8)
	var x137 uint32
	cmovznzU32(&x137, x134, uint32(0x0), x9)
	var x138 uint32
	cmovznzU32(&x138, x134, uint32(0x0), x10)
	var x139 uint32
	cmovznzU32(&x139, x134, uint32(0x0), x11)
	var x140 uint32
	cmovznzU32(&x140, x134, uint32(0x0), x12)
	var x141 uint32
	cmovznzU32(&x141, x134, uint32(0x0), x13)
	var x142 uint32
	cmovznzU32(&x142, x134, uint32(0x0), x14)
	var x143 uint32
	cmovznzU32(&x143, x134, uint32(0x0), x15)
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Add32(x34, x135, uint32(0x0))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Add32(x35, x136, uint32(uint1(x145)))
	var x148 uint32
	var x149 uint32
	x148, x149 = bits.Add32(x36, x137, uint32(uint1(x147)))
	var x150 uint32
	var x151 uint32
	x150, x151 = bits.Add32(x37, x138, uint32(uint1(x149)))
	var x152 uint32
	var x153 uint32
	x152, x153 = bits.Add32(x38, x139, uint32(uint1(x151)))
	var x154 uint32
	var x155 uint32
	x154, x155 = bits.Add32(x39, x140, uint32(uint1(x153)))
	var x156 uint32
	var x157 uint32
	x156, x157 = bits.Add32(x40, x141, uint32(uint1(x155)))
	var x158 uint32
	var x159 uint32
	x158, x159 = bits.Add32(x41, x142, uint32(uint1(x157)))
	var x160 uint32
	x160, _ = bits.Add32(x42, x143, uint32(uint1(x159)))
	var x162 uint32
	cmovznzU32(&x162, x134, uint32(0x0), x43)
	var x163 uint32
	cmovznzU32(&x163, x134, uint32(0x0), x44)
	var x164 uint32
	cmovznzU32(&x164, x134, uint32(0x0), x45)
	var x165 uint32
	cmovznzU32(&x165, x134, uint32(0x0), x46)
	var x166 uint32
	cmovznzU32(&x166, x134, uint32(0x0), x47)
	var x167 uint32
	cmovznzU32(&x167, x134, uint32(0x0), x48)
	var x168 uint32
	cmovznzU32(&x168, x134, uint32(0x0), x49)
	var x169 uint32
	cmovznzU32(&x169, x134, uint32(0x0), x50)
	var x170 uint32
	var x171 uint32
	x170, x171 = bits.Add32(x126, x162, uint32(0x0))
	var x172 uint32
	var x173 uint32
	x172, x173 = bits.Add32(x127, x163, uint32(uint1(x171)))
	var x174 uint32
	var x175 uint32
	x174, x175 = bits.Add32(x128, x164, uint32(uint1(x173)))
	var x176 uint32
	var x177 uint32
	x176, x177 = bits.Add32(x129, x165, uint32(uint1(x175)))
	var x178 uint32
	var x179 uint32
	x178, x179 = bits.Add32(x130, x166, uint32(uint1(x177)))
	var x180 uint32
	var x181 uint32
	x180, x181 = bits.Add32(x131, x167, uint32(uint1(x179)))
	var x182 uint32
	var x183 uint32
	x182, x183 = bits.Add32(x132, x168, uint32(uint1(x181)))
	var x184 uint32
	var x185 uint32
	x184, x185 = bits.Add32(x133, x169, uint32(uint1(x183)))
	var x186 uint32
	var x187 uint32
	x186, x187 = bits.Sub32(x170, 0xffffffff, uint32(0x0))
	var x188 uint32
	var x189 uint32
	x188, x189 = bits.Sub32(x172, 0xffffffff, uint32(uint1(x187)))
	var x190 uint32
	var x191 uint32
	x190, x191 = bits.Sub32(x174, 0xffffffff, uint32(uint1(x189)))
	var x192 uint32
	var x193 uint32
	x192, x193 = bits.Sub32(x176, uint32(0x0), uint32(uint1(x191)))
	var x194 uint32
	var x195 uint32
	x194, x195 = bits.Sub32(x178, uint32(0x0), uint32(uint1(x193)))
	var x196 uint32
	var x197 uint32
	x196, x197 = bits.Sub32(x180, uint32(0x0), uint32(uint1(x195)))
	var x198 uint32
	var x199 uint32
	x198, x199 = bits.Sub32(x182, uint32(0x1), uint32(uint1(x197)))
	var x200 uint32
	var x201 uint32
	x200, x201 = bits.Sub32(x184, 0xffffffff, uint32(uint1(x199)))
	var x203 uint32
	_, x203 = bits.Sub32(uint32(uint1(x185)), uint32(0x0), uint32(uint1(x201)))
	x204 := (uint32((uint64(x6) + uint64(0x1))) & 0xffffffff)
	x205 := ((x144 >> 1) | ((x146 << 31) & 0xffffffff))
	x206 := ((x146 >> 1) | ((x148 << 31) & 0xffffffff))
	x207 := ((x148 >> 1) | ((x150 << 31) & 0xffffffff))
	x208 := ((x150 >> 1) | ((x152 << 31) & 0xffffffff))
	x209 := ((x152 >> 1) | ((x154 << 31) & 0xffffffff))
	x210 := ((x154 >> 1) | ((x156 << 31) & 0xffffffff))
	x211 := ((x156 >> 1) | ((x158 << 31) & 0xffffffff))
	x212 := ((x158 >> 1) | ((x160 << 31) & 0xffffffff))
	x213 := ((x160 & 0x80000000) | (x160 >> 1))
	var x214 uint32
	cmovznzU32(&x214, uint1(x84), x67, x51)
	var x215 uint32
	cmovznzU32(&x215, uint1(x84), x69, x53)
	var x216 uint32
	cmovznzU32(&x216, uint1(x84), x71, x55)
	var x217 uint32
	cmovznzU32(&x217, uint1(x84), x73, x57)
	var x218 uint32
	cmovznzU32(&x218, uint1(x84), x75, x59)
	var x219 uint32
	cmovznzU32(&x219, uint1(x84), x77, x61)
	var x220 uint32
	cmovznzU32(&x220, uint1(x84), x79, x63)
	var x221 uint32
	cmovznzU32(&x221, uint1(x84), x81, x65)
	var x222 uint32
	cmovznzU32(&x222, uint1(x203), x186, x170)
	var x223 uint32
	cmovznzU32(&x223, uint1(x203), x188, x172)
	var x224 uint32
	cmovznzU32(&x224, uint1(x203), x190, x174)
	var x225 uint32
	cmovznzU32(&x225, uint1(x203), x192, x176)
	var x226 uint32
	cmovznzU32(&x226, uint1(x203), x194, x178)
	var x227 uint32
	cmovznzU32(&x227, uint1(x203), x196, x180)
	var x228 uint32
	cmovznzU32(&x228, uint1(x203), x198, x182)
	var x229 uint32
	cmovznzU32(&x229, uint1(x203), x200, x184)
	*out1 = x204
	out2[0] = x7
	out2[1] = x8
	out2[2] = x9
	out2[3] = x10
	out2[4] = x11
	out2[5] = x12
	out2[6] = x13
	out2[7] = x14
	out2[8] = x15
	out3[0] = x205
	out3[1] = x206
	out3[2] = x207
	out3[3] = x208
	out3[4] = x209
	out3[5] = x210
	out3[6] = x211
	out3[7] = x212
	out3[8] = x213
	out4[0] = x214
	out4[1] = x215
	out4[2] = x216
	out4[3] = x217
	out4[4] = x218
	out4[5] = x219
	out4[6] = x220
	out4[7] = x221
	out5[0] = x222
	out5[1] = x223
	out5[2] = x224
	out5[3] = x225
	out5[4] = x226
	out5[5] = x227
	out5[6] = x228
	out5[7] = x229
}

// DivstepPrecomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func DivstepPrecomp(out1 *[8]uint32) {
	out1[0] = 0x8000000
	out1[1] = uint32(0x0)
	out1[2] = uint32(0x0)
	out1[3] = uint32(0x0)
	out1[4] = uint32(0x0)
	out1[5] = uint32(0x0)
	out1[6] = uint32(0x0)
	out1[7] = uint32(0x0)
}

// InnerLoop computes a inner_loop.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [0x0 ~> 0xffffffff]
//   out3: [0x0 ~> 0xffffffff]
//   out4: [0x0 ~> 0xffffffff]
//   out5: [0x0 ~> 0xffffffff]
func InnerLoop(out1 *uint32, out2 *uint32, out3 *uint32, out4 *uint32, out5 *uint32, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32) {
	x1 := (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg1, (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff))
	var x3 uint32
	cmovznzU32(&x3, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg2[0], arg3[0])
	var x4 uint32
	cmovznzU32(&x4, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg3[0], (uint32((uint64((^arg2[0])) + uint64(0x1))) & 0xffffffff))
	var x5 uint1
	cmovznzU1(&x5, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x6 uint1
	cmovznzU1(&x6, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x0, 0x1)
	var x7 uint32
	cmovznzU32(&x7, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), uint32(0x0), 0xffffffff)
	var x8 uint1
	cmovznzU1(&x8, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x9 uint32
	cmovznzU32(&x9, (uint1(x4) & 0x1), uint32(0x0), x3)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x4) & 0x1), 0x0, x5)
	var x11 uint1
	cmovznzU1(&x11, (uint1(x4) & 0x1), 0x0, x6)
	x12 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x13 uint32
	cmovznzU32(&x13, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x2))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), x3, (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)), (uint32((uint64((^x3)) + uint64(0x1))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x6) + uint32(x6)), (uint32(x8) + uint32(x11)))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x8) + uint32(x11)), (uint32((uint64((^(uint32(x6) + uint32(x6)))) + uint64(0x1))) & 0xffffffff))
	var x20 uint32
	cmovznzU32(&x20, (uint1(x15) & 0x1), uint32(0x0), x14)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x15) & 0x1), uint32(0x0), x16)
	var x22 uint32
	cmovznzU32(&x22, (uint1(x15) & 0x1), uint32(0x0), x17)
	x23 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x24 uint32
	cmovznzU32(&x24, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x13))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), x14, (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)), (uint32((uint64((^x14)) + uint64(0x1))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x16) + uint64(x16))) & 0xffffffff), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (x17 + x17), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x16) + uint64(x16))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff), (uint32((uint64((^(x17 + x17))) + uint64(0x1))) & 0xffffffff))
	var x31 uint32
	cmovznzU32(&x31, (uint1(x26) & 0x1), uint32(0x0), x25)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x26) & 0x1), uint32(0x0), x27)
	var x33 uint32
	cmovznzU32(&x33, (uint1(x26) & 0x1), uint32(0x0), x28)
	x34 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x35 uint32
	cmovznzU32(&x35, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x24))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), x25, (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)), (uint32((uint64((^x25)) + uint64(0x1))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x28))) & 0xffffffff), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x28) + uint64(x28))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x42 uint32
	cmovznzU32(&x42, (uint1(x37) & 0x1), uint32(0x0), x36)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x37) & 0x1), uint32(0x0), x38)
	var x44 uint32
	cmovznzU32(&x44, (uint1(x37) & 0x1), uint32(0x0), x39)
	x45 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	cmovznzU32(&x46, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x35))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), x36, (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)), (uint32((uint64((^x36)) + uint64(0x1))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x39))) & 0xffffffff), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x39) + uint64(x39))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x53 uint32
	cmovznzU32(&x53, (uint1(x48) & 0x1), uint32(0x0), x47)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x48) & 0x1), uint32(0x0), x49)
	var x55 uint32
	cmovznzU32(&x55, (uint1(x48) & 0x1), uint32(0x0), x50)
	x56 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x57 uint32
	cmovznzU32(&x57, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x46))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), x47, (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)), (uint32((uint64((^x47)) + uint64(0x1))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x50))) & 0xffffffff), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x50) + uint64(x50))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x64 uint32
	cmovznzU32(&x64, (uint1(x59) & 0x1), uint32(0x0), x58)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x59) & 0x1), uint32(0x0), x60)
	var x66 uint32
	cmovznzU32(&x66, (uint1(x59) & 0x1), uint32(0x0), x61)
	x67 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x68 uint32
	cmovznzU32(&x68, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x57))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), x58, (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)), (uint32((uint64((^x58)) + uint64(0x1))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x61))) & 0xffffffff), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x61) + uint64(x61))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x75 uint32
	cmovznzU32(&x75, (uint1(x70) & 0x1), uint32(0x0), x69)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x70) & 0x1), uint32(0x0), x71)
	var x77 uint32
	cmovznzU32(&x77, (uint1(x70) & 0x1), uint32(0x0), x72)
	x78 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	cmovznzU32(&x79, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x68))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), x69, (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)), (uint32((uint64((^x69)) + uint64(0x1))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x72))) & 0xffffffff), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x72) + uint64(x72))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x86 uint32
	cmovznzU32(&x86, (uint1(x81) & 0x1), uint32(0x0), x80)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x81) & 0x1), uint32(0x0), x82)
	var x88 uint32
	cmovznzU32(&x88, (uint1(x81) & 0x1), uint32(0x0), x83)
	x89 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x90 uint32
	cmovznzU32(&x90, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x79))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), x80, (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)), (uint32((uint64((^x80)) + uint64(0x1))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x83))) & 0xffffffff), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x83) + uint64(x83))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x97 uint32
	cmovznzU32(&x97, (uint1(x92) & 0x1), uint32(0x0), x91)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x92) & 0x1), uint32(0x0), x93)
	var x99 uint32
	cmovznzU32(&x99, (uint1(x92) & 0x1), uint32(0x0), x94)
	x100 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x101 uint32
	cmovznzU32(&x101, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x90))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), x91, (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)), (uint32((uint64((^x91)) + uint64(0x1))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x94))) & 0xffffffff), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x94) + uint64(x94))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x108 uint32
	cmovznzU32(&x108, (uint1(x103) & 0x1), uint32(0x0), x102)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x103) & 0x1), uint32(0x0), x104)
	var x110 uint32
	cmovznzU32(&x110, (uint1(x103) & 0x1), uint32(0x0), x105)
	x111 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x112 uint32
	cmovznzU32(&x112, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x101))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), x102, (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)), (uint32((uint64((^x102)) + uint64(0x1))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x105))) & 0xffffffff), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x105) + uint64(x105))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x119 uint32
	cmovznzU32(&x119, (uint1(x114) & 0x1), uint32(0x0), x113)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x114) & 0x1), uint32(0x0), x115)
	var x121 uint32
	cmovznzU32(&x121, (uint1(x114) & 0x1), uint32(0x0), x116)
	x122 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x123 uint32
	cmovznzU32(&x123, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x112))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), x113, (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)), (uint32((uint64((^x113)) + uint64(0x1))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x116))) & 0xffffffff), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x116) + uint64(x116))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x130 uint32
	cmovznzU32(&x130, (uint1(x125) & 0x1), uint32(0x0), x124)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x125) & 0x1), uint32(0x0), x126)
	var x132 uint32
	cmovznzU32(&x132, (uint1(x125) & 0x1), uint32(0x0), x127)
	x133 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x134 uint32
	cmovznzU32(&x134, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x123))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), x124, (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)), (uint32((uint64((^x124)) + uint64(0x1))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x127))) & 0xffffffff), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x127) + uint64(x127))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x141 uint32
	cmovznzU32(&x141, (uint1(x136) & 0x1), uint32(0x0), x135)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x136) & 0x1), uint32(0x0), x137)
	var x143 uint32
	cmovznzU32(&x143, (uint1(x136) & 0x1), uint32(0x0), x138)
	x144 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x145 uint32
	cmovznzU32(&x145, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x134))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), x135, (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)), (uint32((uint64((^x135)) + uint64(0x1))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x138))) & 0xffffffff), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x138) + uint64(x138))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x152 uint32
	cmovznzU32(&x152, (uint1(x147) & 0x1), uint32(0x0), x146)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x147) & 0x1), uint32(0x0), x148)
	var x154 uint32
	cmovznzU32(&x154, (uint1(x147) & 0x1), uint32(0x0), x149)
	x155 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x156 uint32
	cmovznzU32(&x156, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x145))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), x146, (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)), (uint32((uint64((^x146)) + uint64(0x1))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x149))) & 0xffffffff), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x149) + uint64(x149))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x163 uint32
	cmovznzU32(&x163, (uint1(x158) & 0x1), uint32(0x0), x157)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x158) & 0x1), uint32(0x0), x159)
	var x165 uint32
	cmovznzU32(&x165, (uint1(x158) & 0x1), uint32(0x0), x160)
	x166 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x167 uint32
	cmovznzU32(&x167, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x156))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), x157, (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)), (uint32((uint64((^x157)) + uint64(0x1))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x160))) & 0xffffffff), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x160) + uint64(x160))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x174 uint32
	cmovznzU32(&x174, (uint1(x169) & 0x1), uint32(0x0), x168)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x169) & 0x1), uint32(0x0), x170)
	var x176 uint32
	cmovznzU32(&x176, (uint1(x169) & 0x1), uint32(0x0), x171)
	x177 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x178 uint32
	cmovznzU32(&x178, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x167))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), x168, (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)), (uint32((uint64((^x168)) + uint64(0x1))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x171))) & 0xffffffff), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x171) + uint64(x171))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x185 uint32
	cmovznzU32(&x185, (uint1(x180) & 0x1), uint32(0x0), x179)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x180) & 0x1), uint32(0x0), x181)
	var x187 uint32
	cmovznzU32(&x187, (uint1(x180) & 0x1), uint32(0x0), x182)
	x188 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x189 uint32
	cmovznzU32(&x189, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x178))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), x179, (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)), (uint32((uint64((^x179)) + uint64(0x1))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x182))) & 0xffffffff), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x182) + uint64(x182))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x196 uint32
	cmovznzU32(&x196, (uint1(x191) & 0x1), uint32(0x0), x190)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x191) & 0x1), uint32(0x0), x192)
	var x198 uint32
	cmovznzU32(&x198, (uint1(x191) & 0x1), uint32(0x0), x193)
	x199 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x200 uint32
	cmovznzU32(&x200, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x189))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), x190, (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)), (uint32((uint64((^x190)) + uint64(0x1))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x193))) & 0xffffffff), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x193) + uint64(x193))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x207 uint32
	cmovznzU32(&x207, (uint1(x202) & 0x1), uint32(0x0), x201)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x202) & 0x1), uint32(0x0), x203)
	var x209 uint32
	cmovznzU32(&x209, (uint1(x202) & 0x1), uint32(0x0), x204)
	x210 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x211 uint32
	cmovznzU32(&x211, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x200))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), x201, (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)), (uint32((uint64((^x201)) + uint64(0x1))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x204))) & 0xffffffff), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x204) + uint64(x204))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x218 uint32
	cmovznzU32(&x218, (uint1(x213) & 0x1), uint32(0x0), x212)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x213) & 0x1), uint32(0x0), x214)
	var x220 uint32
	cmovznzU32(&x220, (uint1(x213) & 0x1), uint32(0x0), x215)
	x221 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x222 uint32
	cmovznzU32(&x222, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x211))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), x212, (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)), (uint32((uint64((^x212)) + uint64(0x1))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x215))) & 0xffffffff), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x215) + uint64(x215))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x229 uint32
	cmovznzU32(&x229, (uint1(x224) & 0x1), uint32(0x0), x223)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x224) & 0x1), uint32(0x0), x225)
	var x231 uint32
	cmovznzU32(&x231, (uint1(x224) & 0x1), uint32(0x0), x226)
	x232 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x233 uint32
	cmovznzU32(&x233, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x222))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), x223, (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)), (uint32((uint64((^x223)) + uint64(0x1))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x226))) & 0xffffffff), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x226) + uint64(x226))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x240 uint32
	cmovznzU32(&x240, (uint1(x235) & 0x1), uint32(0x0), x234)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x235) & 0x1), uint32(0x0), x236)
	var x242 uint32
	cmovznzU32(&x242, (uint1(x235) & 0x1), uint32(0x0), x237)
	x243 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x244 uint32
	cmovznzU32(&x244, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x233))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), x234, (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)), (uint32((uint64((^x234)) + uint64(0x1))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x237))) & 0xffffffff), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x237) + uint64(x237))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x251 uint32
	cmovznzU32(&x251, (uint1(x246) & 0x1), uint32(0x0), x245)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x246) & 0x1), uint32(0x0), x247)
	var x253 uint32
	cmovznzU32(&x253, (uint1(x246) & 0x1), uint32(0x0), x248)
	x254 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x255 uint32
	cmovznzU32(&x255, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x244))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), x245, (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)), (uint32((uint64((^x245)) + uint64(0x1))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x248))) & 0xffffffff), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x248) + uint64(x248))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x262 uint32
	cmovznzU32(&x262, (uint1(x257) & 0x1), uint32(0x0), x256)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x257) & 0x1), uint32(0x0), x258)
	var x264 uint32
	cmovznzU32(&x264, (uint1(x257) & 0x1), uint32(0x0), x259)
	x265 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x266 uint32
	cmovznzU32(&x266, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x255))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), x256, (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)), (uint32((uint64((^x256)) + uint64(0x1))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x259))) & 0xffffffff), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x259) + uint64(x259))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x273 uint32
	cmovznzU32(&x273, (uint1(x268) & 0x1), uint32(0x0), x267)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x268) & 0x1), uint32(0x0), x269)
	var x275 uint32
	cmovznzU32(&x275, (uint1(x268) & 0x1), uint32(0x0), x270)
	x276 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x277 uint32
	cmovznzU32(&x277, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x266))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), x267, (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)), (uint32((uint64((^x267)) + uint64(0x1))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x270))) & 0xffffffff), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x270) + uint64(x270))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x284 uint32
	cmovznzU32(&x284, (uint1(x279) & 0x1), uint32(0x0), x278)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x279) & 0x1), uint32(0x0), x280)
	var x286 uint32
	cmovznzU32(&x286, (uint1(x279) & 0x1), uint32(0x0), x281)
	x287 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x288 uint32
	cmovznzU32(&x288, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x277))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), x278, (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)), (uint32((uint64((^x278)) + uint64(0x1))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x281))) & 0xffffffff), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x281) + uint64(x281))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x295 uint32
	cmovznzU32(&x295, (uint1(x290) & 0x1), uint32(0x0), x289)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x290) & 0x1), uint32(0x0), x291)
	var x297 uint32
	cmovznzU32(&x297, (uint1(x290) & 0x1), uint32(0x0), x292)
	x298 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x299 uint32
	cmovznzU32(&x299, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x288))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), x289, (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)), (uint32((uint64((^x289)) + uint64(0x1))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x292))) & 0xffffffff), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x292) + uint64(x292))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x306 uint32
	cmovznzU32(&x306, (uint1(x301) & 0x1), uint32(0x0), x300)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x301) & 0x1), uint32(0x0), x302)
	var x308 uint32
	cmovznzU32(&x308, (uint1(x301) & 0x1), uint32(0x0), x303)
	x309 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x310 uint32
	cmovznzU32(&x310, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x299))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), x300, (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)), (uint32((uint64((^x300)) + uint64(0x1))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x303))) & 0xffffffff), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x303) + uint64(x303))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x317 uint32
	cmovznzU32(&x317, (uint1(x312) & 0x1), uint32(0x0), x311)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x312) & 0x1), uint32(0x0), x313)
	var x319 uint32
	cmovznzU32(&x319, (uint1(x312) & 0x1), uint32(0x0), x314)
	x320 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x321 uint32
	cmovznzU32(&x321, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x310))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1)), (uint32((uint64((^x311)) + uint64(0x1))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x314))) & 0xffffffff), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x326 uint32
	cmovznzU32(&x326, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x314) + uint64(x314))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x327 uint32
	cmovznzU32(&x327, (uint1(x322) & 0x1), uint32(0x0), x323)
	var x328 uint32
	cmovznzU32(&x328, (uint1(x322) & 0x1), uint32(0x0), x324)
	x329 := (uint32((uint64(0x1) + uint64(x321))) & 0xffffffff)
	x330 := (uint32((uint64(x323) + uint64(x323))) & 0xffffffff)
	x331 := (uint32((uint64(x324) + uint64(x324))) & 0xffffffff)
	x332 := (uint32((uint64(x325) + uint64(x327))) & 0xffffffff)
	x333 := (uint32((uint64(x326) + uint64(x328))) & 0xffffffff)
	*out1 = x329
	*out2 = x330
	*out3 = x331
	*out4 = x332
	*out5 = x333
}

// InnerLoopHd computes a inner_loop_hd.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [0x0 ~> 0xffffffff]
//   out3: [0x0 ~> 0xffffffff]
//   out4: [0x0 ~> 0xffffffff]
//   out5: [0x0 ~> 0xffffffff]
func InnerLoopHd(out1 *uint32, out2 *uint32, out3 *uint32, out4 *uint32, out5 *uint32, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32) {
	x1 := (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg1, (uint32((uint64((^arg1)) + uint64(0x1))) & 0xffffffff))
	var x3 uint32
	cmovznzU32(&x3, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg2[0], arg3[0])
	var x4 uint32
	cmovznzU32(&x4, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), arg3[0], (uint32((uint64((^arg2[0])) + uint64(0x1))) & 0xffffffff))
	var x5 uint1
	cmovznzU1(&x5, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x6 uint1
	cmovznzU1(&x6, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x0, 0x1)
	var x7 uint32
	cmovznzU32(&x7, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), uint32(0x0), 0xffffffff)
	var x8 uint1
	cmovznzU1(&x8, (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1)), 0x1, 0x0)
	var x9 uint32
	cmovznzU32(&x9, (uint1(x4) & 0x1), uint32(0x0), x3)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x4) & 0x1), 0x0, x5)
	var x11 uint1
	cmovznzU1(&x11, (uint1(x4) & 0x1), 0x0, x6)
	x12 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x13 uint32
	cmovznzU32(&x13, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x2))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x2))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), x3, (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1)), (uint32((uint64((^x3)) + uint64(0x1))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x6) + uint32(x6)), (uint32(x8) + uint32(x11)))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x7) + uint64(x10))) & 0xffffffff), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1((x12 >> 31)) & (uint1((((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x4) + uint64(x9))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x8) + uint32(x11)), (uint32((uint64((^(uint32(x6) + uint32(x6)))) + uint64(0x1))) & 0xffffffff))
	var x20 uint32
	cmovznzU32(&x20, (uint1(x15) & 0x1), uint32(0x0), x14)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x15) & 0x1), uint32(0x0), x16)
	var x22 uint32
	cmovznzU32(&x22, (uint1(x15) & 0x1), uint32(0x0), x17)
	x23 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x24 uint32
	cmovznzU32(&x24, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x13))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x13))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), x14, (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1)), (uint32((uint64((^x14)) + uint64(0x1))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x16) + uint64(x16))) & 0xffffffff), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (x17 + x17), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x16) + uint64(x16))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1((x23 >> 31)) & (uint1((((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x15) + uint64(x20))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x19) + uint64(x22))) & 0xffffffff), (uint32((uint64((^(x17 + x17))) + uint64(0x1))) & 0xffffffff))
	var x31 uint32
	cmovznzU32(&x31, (uint1(x26) & 0x1), uint32(0x0), x25)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x26) & 0x1), uint32(0x0), x27)
	var x33 uint32
	cmovznzU32(&x33, (uint1(x26) & 0x1), uint32(0x0), x28)
	x34 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x35 uint32
	cmovznzU32(&x35, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x24))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x24))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), x25, (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1)), (uint32((uint64((^x25)) + uint64(0x1))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x28))) & 0xffffffff), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1((x34 >> 31)) & (uint1((((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x26) + uint64(x31))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x30) + uint64(x33))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x28) + uint64(x28))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x42 uint32
	cmovznzU32(&x42, (uint1(x37) & 0x1), uint32(0x0), x36)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x37) & 0x1), uint32(0x0), x38)
	var x44 uint32
	cmovznzU32(&x44, (uint1(x37) & 0x1), uint32(0x0), x39)
	x45 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	cmovznzU32(&x46, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x35))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x35))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), x36, (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1)), (uint32((uint64((^x36)) + uint64(0x1))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x39))) & 0xffffffff), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1((x45 >> 31)) & (uint1((((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x37) + uint64(x42))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x41) + uint64(x44))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x39) + uint64(x39))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x53 uint32
	cmovznzU32(&x53, (uint1(x48) & 0x1), uint32(0x0), x47)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x48) & 0x1), uint32(0x0), x49)
	var x55 uint32
	cmovznzU32(&x55, (uint1(x48) & 0x1), uint32(0x0), x50)
	x56 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x57 uint32
	cmovznzU32(&x57, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x46))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x46))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), x47, (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1)), (uint32((uint64((^x47)) + uint64(0x1))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x50))) & 0xffffffff), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1((x56 >> 31)) & (uint1((((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x48) + uint64(x53))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x52) + uint64(x55))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x50) + uint64(x50))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x64 uint32
	cmovznzU32(&x64, (uint1(x59) & 0x1), uint32(0x0), x58)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x59) & 0x1), uint32(0x0), x60)
	var x66 uint32
	cmovznzU32(&x66, (uint1(x59) & 0x1), uint32(0x0), x61)
	x67 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x68 uint32
	cmovznzU32(&x68, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x57))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x57))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), x58, (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1)), (uint32((uint64((^x58)) + uint64(0x1))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x61))) & 0xffffffff), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1((x67 >> 31)) & (uint1((((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x59) + uint64(x64))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x63) + uint64(x66))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x61) + uint64(x61))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x75 uint32
	cmovznzU32(&x75, (uint1(x70) & 0x1), uint32(0x0), x69)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x70) & 0x1), uint32(0x0), x71)
	var x77 uint32
	cmovznzU32(&x77, (uint1(x70) & 0x1), uint32(0x0), x72)
	x78 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x79 uint32
	cmovznzU32(&x79, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x68))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x68))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), x69, (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1)), (uint32((uint64((^x69)) + uint64(0x1))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x72))) & 0xffffffff), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1((x78 >> 31)) & (uint1((((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x70) + uint64(x75))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x74) + uint64(x77))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x72) + uint64(x72))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x86 uint32
	cmovznzU32(&x86, (uint1(x81) & 0x1), uint32(0x0), x80)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x81) & 0x1), uint32(0x0), x82)
	var x88 uint32
	cmovznzU32(&x88, (uint1(x81) & 0x1), uint32(0x0), x83)
	x89 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x90 uint32
	cmovznzU32(&x90, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x79))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x79))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), x80, (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1)), (uint32((uint64((^x80)) + uint64(0x1))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x83))) & 0xffffffff), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1((x89 >> 31)) & (uint1((((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x81) + uint64(x86))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x85) + uint64(x88))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x83) + uint64(x83))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x97 uint32
	cmovznzU32(&x97, (uint1(x92) & 0x1), uint32(0x0), x91)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x92) & 0x1), uint32(0x0), x93)
	var x99 uint32
	cmovznzU32(&x99, (uint1(x92) & 0x1), uint32(0x0), x94)
	x100 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x101 uint32
	cmovznzU32(&x101, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x90))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x90))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), x91, (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1)), (uint32((uint64((^x91)) + uint64(0x1))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x94))) & 0xffffffff), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1((x100 >> 31)) & (uint1((((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x92) + uint64(x97))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x96) + uint64(x99))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x94) + uint64(x94))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x108 uint32
	cmovznzU32(&x108, (uint1(x103) & 0x1), uint32(0x0), x102)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x103) & 0x1), uint32(0x0), x104)
	var x110 uint32
	cmovznzU32(&x110, (uint1(x103) & 0x1), uint32(0x0), x105)
	x111 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x112 uint32
	cmovznzU32(&x112, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x101))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x101))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), x102, (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1)), (uint32((uint64((^x102)) + uint64(0x1))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x105))) & 0xffffffff), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1((x111 >> 31)) & (uint1((((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x103) + uint64(x108))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x107) + uint64(x110))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x105) + uint64(x105))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x119 uint32
	cmovznzU32(&x119, (uint1(x114) & 0x1), uint32(0x0), x113)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x114) & 0x1), uint32(0x0), x115)
	var x121 uint32
	cmovznzU32(&x121, (uint1(x114) & 0x1), uint32(0x0), x116)
	x122 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x123 uint32
	cmovznzU32(&x123, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x112))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x112))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), x113, (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1)), (uint32((uint64((^x113)) + uint64(0x1))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x116))) & 0xffffffff), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1((x122 >> 31)) & (uint1((((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x114) + uint64(x119))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x118) + uint64(x121))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x116) + uint64(x116))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x130 uint32
	cmovznzU32(&x130, (uint1(x125) & 0x1), uint32(0x0), x124)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x125) & 0x1), uint32(0x0), x126)
	var x132 uint32
	cmovznzU32(&x132, (uint1(x125) & 0x1), uint32(0x0), x127)
	x133 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x134 uint32
	cmovznzU32(&x134, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x123))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x123))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), x124, (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1)), (uint32((uint64((^x124)) + uint64(0x1))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x127))) & 0xffffffff), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1((x133 >> 31)) & (uint1((((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x125) + uint64(x130))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x129) + uint64(x132))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x127) + uint64(x127))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x141 uint32
	cmovznzU32(&x141, (uint1(x136) & 0x1), uint32(0x0), x135)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x136) & 0x1), uint32(0x0), x137)
	var x143 uint32
	cmovznzU32(&x143, (uint1(x136) & 0x1), uint32(0x0), x138)
	x144 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x145 uint32
	cmovznzU32(&x145, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x134))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x134))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), x135, (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1)), (uint32((uint64((^x135)) + uint64(0x1))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x138))) & 0xffffffff), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1((x144 >> 31)) & (uint1((((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x136) + uint64(x141))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x140) + uint64(x143))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x138) + uint64(x138))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x152 uint32
	cmovznzU32(&x152, (uint1(x147) & 0x1), uint32(0x0), x146)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x147) & 0x1), uint32(0x0), x148)
	var x154 uint32
	cmovznzU32(&x154, (uint1(x147) & 0x1), uint32(0x0), x149)
	x155 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x156 uint32
	cmovznzU32(&x156, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x145))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x145))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), x146, (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1)), (uint32((uint64((^x146)) + uint64(0x1))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x149))) & 0xffffffff), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1((x155 >> 31)) & (uint1((((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x147) + uint64(x152))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x151) + uint64(x154))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x149) + uint64(x149))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x163 uint32
	cmovznzU32(&x163, (uint1(x158) & 0x1), uint32(0x0), x157)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x158) & 0x1), uint32(0x0), x159)
	var x165 uint32
	cmovznzU32(&x165, (uint1(x158) & 0x1), uint32(0x0), x160)
	x166 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x167 uint32
	cmovznzU32(&x167, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x156))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x156))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), x157, (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1)), (uint32((uint64((^x157)) + uint64(0x1))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x160))) & 0xffffffff), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1((x166 >> 31)) & (uint1((((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x158) + uint64(x163))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x162) + uint64(x165))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x160) + uint64(x160))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x174 uint32
	cmovznzU32(&x174, (uint1(x169) & 0x1), uint32(0x0), x168)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x169) & 0x1), uint32(0x0), x170)
	var x176 uint32
	cmovznzU32(&x176, (uint1(x169) & 0x1), uint32(0x0), x171)
	x177 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x178 uint32
	cmovznzU32(&x178, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x167))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x167))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), x168, (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1)), (uint32((uint64((^x168)) + uint64(0x1))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x171))) & 0xffffffff), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1((x177 >> 31)) & (uint1((((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x169) + uint64(x174))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x173) + uint64(x176))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x171) + uint64(x171))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x185 uint32
	cmovznzU32(&x185, (uint1(x180) & 0x1), uint32(0x0), x179)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x180) & 0x1), uint32(0x0), x181)
	var x187 uint32
	cmovznzU32(&x187, (uint1(x180) & 0x1), uint32(0x0), x182)
	x188 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x189 uint32
	cmovznzU32(&x189, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x178))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x178))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), x179, (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1)), (uint32((uint64((^x179)) + uint64(0x1))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x182))) & 0xffffffff), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1((x188 >> 31)) & (uint1((((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x180) + uint64(x185))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x184) + uint64(x187))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x182) + uint64(x182))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x196 uint32
	cmovznzU32(&x196, (uint1(x191) & 0x1), uint32(0x0), x190)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x191) & 0x1), uint32(0x0), x192)
	var x198 uint32
	cmovznzU32(&x198, (uint1(x191) & 0x1), uint32(0x0), x193)
	x199 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x200 uint32
	cmovznzU32(&x200, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x189))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x189))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), x190, (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1)), (uint32((uint64((^x190)) + uint64(0x1))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x193))) & 0xffffffff), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1((x199 >> 31)) & (uint1((((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x191) + uint64(x196))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x195) + uint64(x198))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x193) + uint64(x193))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x207 uint32
	cmovznzU32(&x207, (uint1(x202) & 0x1), uint32(0x0), x201)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x202) & 0x1), uint32(0x0), x203)
	var x209 uint32
	cmovznzU32(&x209, (uint1(x202) & 0x1), uint32(0x0), x204)
	x210 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x211 uint32
	cmovznzU32(&x211, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x200))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x200))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), x201, (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1)), (uint32((uint64((^x201)) + uint64(0x1))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x204))) & 0xffffffff), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1((x210 >> 31)) & (uint1((((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x202) + uint64(x207))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x206) + uint64(x209))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x204) + uint64(x204))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x218 uint32
	cmovznzU32(&x218, (uint1(x213) & 0x1), uint32(0x0), x212)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x213) & 0x1), uint32(0x0), x214)
	var x220 uint32
	cmovznzU32(&x220, (uint1(x213) & 0x1), uint32(0x0), x215)
	x221 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x222 uint32
	cmovznzU32(&x222, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x211))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x211))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), x212, (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1)), (uint32((uint64((^x212)) + uint64(0x1))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x215))) & 0xffffffff), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1((x221 >> 31)) & (uint1((((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x213) + uint64(x218))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x217) + uint64(x220))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x215) + uint64(x215))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x229 uint32
	cmovznzU32(&x229, (uint1(x224) & 0x1), uint32(0x0), x223)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x224) & 0x1), uint32(0x0), x225)
	var x231 uint32
	cmovznzU32(&x231, (uint1(x224) & 0x1), uint32(0x0), x226)
	x232 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x233 uint32
	cmovznzU32(&x233, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x222))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x222))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), x223, (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1)), (uint32((uint64((^x223)) + uint64(0x1))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x226))) & 0xffffffff), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1((x232 >> 31)) & (uint1((((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x224) + uint64(x229))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x228) + uint64(x231))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x226) + uint64(x226))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x240 uint32
	cmovznzU32(&x240, (uint1(x235) & 0x1), uint32(0x0), x234)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x235) & 0x1), uint32(0x0), x236)
	var x242 uint32
	cmovznzU32(&x242, (uint1(x235) & 0x1), uint32(0x0), x237)
	x243 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x244 uint32
	cmovznzU32(&x244, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x233))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x233))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), x234, (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1)), (uint32((uint64((^x234)) + uint64(0x1))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x237))) & 0xffffffff), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1((x243 >> 31)) & (uint1((((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x235) + uint64(x240))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x239) + uint64(x242))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x237) + uint64(x237))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x251 uint32
	cmovznzU32(&x251, (uint1(x246) & 0x1), uint32(0x0), x245)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x246) & 0x1), uint32(0x0), x247)
	var x253 uint32
	cmovznzU32(&x253, (uint1(x246) & 0x1), uint32(0x0), x248)
	x254 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x255 uint32
	cmovznzU32(&x255, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x244))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x244))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), x245, (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1)), (uint32((uint64((^x245)) + uint64(0x1))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x248))) & 0xffffffff), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1((x254 >> 31)) & (uint1((((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x246) + uint64(x251))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x250) + uint64(x253))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x248) + uint64(x248))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x262 uint32
	cmovznzU32(&x262, (uint1(x257) & 0x1), uint32(0x0), x256)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x257) & 0x1), uint32(0x0), x258)
	var x264 uint32
	cmovznzU32(&x264, (uint1(x257) & 0x1), uint32(0x0), x259)
	x265 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x266 uint32
	cmovznzU32(&x266, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x255))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x255))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), x256, (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1)), (uint32((uint64((^x256)) + uint64(0x1))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x259))) & 0xffffffff), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1((x265 >> 31)) & (uint1((((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x257) + uint64(x262))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x261) + uint64(x264))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x259) + uint64(x259))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x273 uint32
	cmovznzU32(&x273, (uint1(x268) & 0x1), uint32(0x0), x267)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x268) & 0x1), uint32(0x0), x269)
	var x275 uint32
	cmovznzU32(&x275, (uint1(x268) & 0x1), uint32(0x0), x270)
	x276 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x277 uint32
	cmovznzU32(&x277, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x266))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x266))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), x267, (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1)), (uint32((uint64((^x267)) + uint64(0x1))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x270))) & 0xffffffff), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1((x276 >> 31)) & (uint1((((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x268) + uint64(x273))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x272) + uint64(x275))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x270) + uint64(x270))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x284 uint32
	cmovznzU32(&x284, (uint1(x279) & 0x1), uint32(0x0), x278)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x279) & 0x1), uint32(0x0), x280)
	var x286 uint32
	cmovznzU32(&x286, (uint1(x279) & 0x1), uint32(0x0), x281)
	x287 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x288 uint32
	cmovznzU32(&x288, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x277))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x277))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), x278, (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1)), (uint32((uint64((^x278)) + uint64(0x1))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x281))) & 0xffffffff), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1((x287 >> 31)) & (uint1((((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x279) + uint64(x284))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x283) + uint64(x286))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x281) + uint64(x281))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x295 uint32
	cmovznzU32(&x295, (uint1(x290) & 0x1), uint32(0x0), x289)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x290) & 0x1), uint32(0x0), x291)
	var x297 uint32
	cmovznzU32(&x297, (uint1(x290) & 0x1), uint32(0x0), x292)
	x298 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x299 uint32
	cmovznzU32(&x299, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x288))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x288))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), x289, (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1)), (uint32((uint64((^x289)) + uint64(0x1))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x292))) & 0xffffffff), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1((x298 >> 31)) & (uint1((((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x290) + uint64(x295))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x294) + uint64(x297))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x292) + uint64(x292))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x306 uint32
	cmovznzU32(&x306, (uint1(x301) & 0x1), uint32(0x0), x300)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x301) & 0x1), uint32(0x0), x302)
	var x308 uint32
	cmovznzU32(&x308, (uint1(x301) & 0x1), uint32(0x0), x303)
	x309 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x310 uint32
	cmovznzU32(&x310, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x299))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x299))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), x300, (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1)), (uint32((uint64((^x300)) + uint64(0x1))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x303))) & 0xffffffff), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1((x309 >> 31)) & (uint1((((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x301) + uint64(x306))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x305) + uint64(x308))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x303) + uint64(x303))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x317 uint32
	cmovznzU32(&x317, (uint1(x312) & 0x1), uint32(0x0), x311)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x312) & 0x1), uint32(0x0), x313)
	var x319 uint32
	cmovznzU32(&x319, (uint1(x312) & 0x1), uint32(0x0), x314)
	x320 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x321 uint32
	cmovznzU32(&x321, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x310))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x310))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1)), (uint32((uint64((^x311)) + uint64(0x1))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x314))) & 0xffffffff), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x326 uint32
	cmovznzU32(&x326, (uint1((x320 >> 31)) & (uint1((((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x312) + uint64(x317))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x316) + uint64(x319))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x314) + uint64(x314))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x327 uint32
	cmovznzU32(&x327, (uint1(x322) & 0x1), uint32(0x0), x323)
	var x328 uint32
	cmovznzU32(&x328, (uint1(x322) & 0x1), uint32(0x0), x324)
	x329 := (uint32((uint64(0x2) + uint64(x321))) & 0xffffffff)
	x330 := (uint32((uint64(x323) + uint64(x323))) & 0xffffffff)
	x331 := (uint32((uint64(x324) + uint64(x324))) & 0xffffffff)
	x332 := (uint32((uint64(x325) + uint64(x327))) & 0xffffffff)
	x333 := (uint32((uint64(x326) + uint64(x328))) & 0xffffffff)
	*out1 = x329
	*out2 = x330
	*out3 = x331
	*out4 = x332
	*out5 = x333
}

// UpdateFg computes a update_fg.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [0x0 ~> 0xffffffff]
//   arg4: [0x0 ~> 0xffffffff]
//   arg5: [0x0 ~> 0xffffffff]
//   arg6: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func UpdateFg(out1 *[9]uint32, out2 *[9]uint32, arg1 *[9]uint32, arg2 *[9]uint32, arg3 uint32, arg4 uint32, arg5 uint32, arg6 uint32) {
	var x1 uint32
	cmovznzU32(&x1, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, uint1((arg3 >> 31)), uint32(0x0), 0xffffffff)
	var x3 uint32
	_, x3 = bits.Mul32(x2, arg1[0])
	var x5 uint32
	_, x5 = bits.Mul32(x2, arg1[1])
	var x7 uint32
	var x8 uint32
	x8, x7 = bits.Mul32(x2, arg1[0])
	var x9 uint32
	_, x9 = bits.Mul32(x2, arg1[2])
	var x11 uint32
	var x12 uint32
	x12, x11 = bits.Mul32(x2, arg1[1])
	var x13 uint32
	var x14 uint32
	x14, x13 = bits.Mul32(x2, arg1[0])
	var x15 uint32
	_, x15 = bits.Mul32(x2, arg1[3])
	var x17 uint32
	var x18 uint32
	x18, x17 = bits.Mul32(x2, arg1[2])
	var x19 uint32
	var x20 uint32
	x20, x19 = bits.Mul32(x2, arg1[1])
	var x21 uint32
	var x22 uint32
	x22, x21 = bits.Mul32(x2, arg1[0])
	var x23 uint32
	_, x23 = bits.Mul32(x2, arg1[4])
	var x25 uint32
	var x26 uint32
	x26, x25 = bits.Mul32(x2, arg1[3])
	var x27 uint32
	var x28 uint32
	x28, x27 = bits.Mul32(x2, arg1[2])
	var x29 uint32
	var x30 uint32
	x30, x29 = bits.Mul32(x2, arg1[1])
	var x31 uint32
	var x32 uint32
	x32, x31 = bits.Mul32(x2, arg1[0])
	var x33 uint32
	_, x33 = bits.Mul32(x2, arg1[5])
	var x35 uint32
	var x36 uint32
	x36, x35 = bits.Mul32(x2, arg1[4])
	var x37 uint32
	var x38 uint32
	x38, x37 = bits.Mul32(x2, arg1[3])
	var x39 uint32
	var x40 uint32
	x40, x39 = bits.Mul32(x2, arg1[2])
	var x41 uint32
	var x42 uint32
	x42, x41 = bits.Mul32(x2, arg1[1])
	var x43 uint32
	var x44 uint32
	x44, x43 = bits.Mul32(x2, arg1[0])
	var x45 uint32
	_, x45 = bits.Mul32(x2, arg1[6])
	var x47 uint32
	var x48 uint32
	x48, x47 = bits.Mul32(x2, arg1[5])
	var x49 uint32
	var x50 uint32
	x50, x49 = bits.Mul32(x2, arg1[4])
	var x51 uint32
	var x52 uint32
	x52, x51 = bits.Mul32(x2, arg1[3])
	var x53 uint32
	var x54 uint32
	x54, x53 = bits.Mul32(x2, arg1[2])
	var x55 uint32
	var x56 uint32
	x56, x55 = bits.Mul32(x2, arg1[1])
	var x57 uint32
	var x58 uint32
	x58, x57 = bits.Mul32(x2, arg1[0])
	var x59 uint32
	_, x59 = bits.Mul32(x2, arg1[7])
	var x61 uint32
	var x62 uint32
	x62, x61 = bits.Mul32(x2, arg1[6])
	var x63 uint32
	var x64 uint32
	x64, x63 = bits.Mul32(x2, arg1[5])
	var x65 uint32
	var x66 uint32
	x66, x65 = bits.Mul32(x2, arg1[4])
	var x67 uint32
	var x68 uint32
	x68, x67 = bits.Mul32(x2, arg1[3])
	var x69 uint32
	var x70 uint32
	x70, x69 = bits.Mul32(x2, arg1[2])
	var x71 uint32
	var x72 uint32
	x72, x71 = bits.Mul32(x2, arg1[1])
	var x73 uint32
	var x74 uint32
	x74, x73 = bits.Mul32(x2, arg1[0])
	var x75 uint32
	_, x75 = bits.Mul32(x2, arg1[8])
	var x77 uint32
	var x78 uint32
	x78, x77 = bits.Mul32(x2, arg1[7])
	var x79 uint32
	var x80 uint32
	x80, x79 = bits.Mul32(x2, arg1[6])
	var x81 uint32
	var x82 uint32
	x82, x81 = bits.Mul32(x2, arg1[5])
	var x83 uint32
	var x84 uint32
	x84, x83 = bits.Mul32(x2, arg1[4])
	var x85 uint32
	var x86 uint32
	x86, x85 = bits.Mul32(x2, arg1[3])
	var x87 uint32
	var x88 uint32
	x88, x87 = bits.Mul32(x2, arg1[2])
	var x89 uint32
	var x90 uint32
	x90, x89 = bits.Mul32(x2, arg1[1])
	var x91 uint32
	var x92 uint32
	x92, x91 = bits.Mul32(x2, arg1[0])
	var x93 uint32
	_, x93 = bits.Mul32(arg3, x1)
	var x95 uint32
	var x96 uint32
	x96, x95 = bits.Mul32(arg3, arg1[8])
	var x97 uint32
	var x98 uint32
	x98, x97 = bits.Mul32(arg3, arg1[7])
	var x99 uint32
	var x100 uint32
	x100, x99 = bits.Mul32(arg3, arg1[6])
	var x101 uint32
	var x102 uint32
	x102, x101 = bits.Mul32(arg3, arg1[5])
	var x103 uint32
	var x104 uint32
	x104, x103 = bits.Mul32(arg3, arg1[4])
	var x105 uint32
	var x106 uint32
	x106, x105 = bits.Mul32(arg3, arg1[3])
	var x107 uint32
	var x108 uint32
	x108, x107 = bits.Mul32(arg3, arg1[2])
	var x109 uint32
	var x110 uint32
	x110, x109 = bits.Mul32(arg3, arg1[1])
	var x111 uint32
	var x112 uint32
	x112, x111 = bits.Mul32(arg3, arg1[0])
	var x113 uint32
	x113, _ = bits.Add32(x96, x3, uint32(0x0))
	var x115 uint32
	x115, _ = bits.Add32(x113, x5, uint32(0x0))
	var x117 uint32
	var x118 uint32
	x117, x118 = bits.Add32(x98, x7, uint32(0x0))
	var x119 uint32
	x119, _ = bits.Add32(x115, x8, uint32(uint1(x118)))
	var x121 uint32
	var x122 uint32
	x121, x122 = bits.Add32(x117, x11, uint32(0x0))
	var x123 uint32
	x123, _ = bits.Add32(x119, x9, uint32(uint1(x122)))
	var x125 uint32
	var x126 uint32
	x125, x126 = bits.Add32(x100, x13, uint32(0x0))
	var x127 uint32
	var x128 uint32
	x127, x128 = bits.Add32(x121, x14, uint32(uint1(x126)))
	var x129 uint32
	x129, _ = bits.Add32(x123, x12, uint32(uint1(x128)))
	var x131 uint32
	var x132 uint32
	x131, x132 = bits.Add32(x125, x19, uint32(0x0))
	var x133 uint32
	var x134 uint32
	x133, x134 = bits.Add32(x127, x17, uint32(uint1(x132)))
	var x135 uint32
	x135, _ = bits.Add32(x129, x15, uint32(uint1(x134)))
	var x137 uint32
	var x138 uint32
	x137, x138 = bits.Add32(x102, x21, uint32(0x0))
	var x139 uint32
	var x140 uint32
	x139, x140 = bits.Add32(x131, x22, uint32(uint1(x138)))
	var x141 uint32
	var x142 uint32
	x141, x142 = bits.Add32(x133, x20, uint32(uint1(x140)))
	var x143 uint32
	x143, _ = bits.Add32(x135, x18, uint32(uint1(x142)))
	var x145 uint32
	var x146 uint32
	x145, x146 = bits.Add32(x137, x29, uint32(0x0))
	var x147 uint32
	var x148 uint32
	x147, x148 = bits.Add32(x139, x27, uint32(uint1(x146)))
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x141, x25, uint32(uint1(x148)))
	var x151 uint32
	x151, _ = bits.Add32(x143, x23, uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x104, x31, uint32(0x0))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x145, x32, uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x147, x30, uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x149, x28, uint32(uint1(x158)))
	var x161 uint32
	x161, _ = bits.Add32(x151, x26, uint32(uint1(x160)))
	var x163 uint32
	var x164 uint32
	x163, x164 = bits.Add32(x153, x41, uint32(0x0))
	var x165 uint32
	var x166 uint32
	x165, x166 = bits.Add32(x155, x39, uint32(uint1(x164)))
	var x167 uint32
	var x168 uint32
	x167, x168 = bits.Add32(x157, x37, uint32(uint1(x166)))
	var x169 uint32
	var x170 uint32
	x169, x170 = bits.Add32(x159, x35, uint32(uint1(x168)))
	var x171 uint32
	x171, _ = bits.Add32(x161, x33, uint32(uint1(x170)))
	var x173 uint32
	var x174 uint32
	x173, x174 = bits.Add32(x106, x43, uint32(0x0))
	var x175 uint32
	var x176 uint32
	x175, x176 = bits.Add32(x163, x44, uint32(uint1(x174)))
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x165, x42, uint32(uint1(x176)))
	var x179 uint32
	var x180 uint32
	x179, x180 = bits.Add32(x167, x40, uint32(uint1(x178)))
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x169, x38, uint32(uint1(x180)))
	var x183 uint32
	x183, _ = bits.Add32(x171, x36, uint32(uint1(x182)))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x173, x55, uint32(0x0))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x175, x53, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x177, x51, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x179, x49, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x181, x47, uint32(uint1(x192)))
	var x195 uint32
	x195, _ = bits.Add32(x183, x45, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x108, x57, uint32(0x0))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x185, x58, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x187, x56, uint32(uint1(x200)))
	var x203 uint32
	var x204 uint32
	x203, x204 = bits.Add32(x189, x54, uint32(uint1(x202)))
	var x205 uint32
	var x206 uint32
	x205, x206 = bits.Add32(x191, x52, uint32(uint1(x204)))
	var x207 uint32
	var x208 uint32
	x207, x208 = bits.Add32(x193, x50, uint32(uint1(x206)))
	var x209 uint32
	x209, _ = bits.Add32(x195, x48, uint32(uint1(x208)))
	var x211 uint32
	var x212 uint32
	x211, x212 = bits.Add32(x197, x71, uint32(0x0))
	var x213 uint32
	var x214 uint32
	x213, x214 = bits.Add32(x199, x69, uint32(uint1(x212)))
	var x215 uint32
	var x216 uint32
	x215, x216 = bits.Add32(x201, x67, uint32(uint1(x214)))
	var x217 uint32
	var x218 uint32
	x217, x218 = bits.Add32(x203, x65, uint32(uint1(x216)))
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x205, x63, uint32(uint1(x218)))
	var x221 uint32
	var x222 uint32
	x221, x222 = bits.Add32(x207, x61, uint32(uint1(x220)))
	var x223 uint32
	x223, _ = bits.Add32(x209, x59, uint32(uint1(x222)))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x110, x73, uint32(0x0))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x211, x74, uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x213, x72, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x215, x70, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x217, x68, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x235, x236 = bits.Add32(x219, x66, uint32(uint1(x234)))
	var x237 uint32
	var x238 uint32
	x237, x238 = bits.Add32(x221, x64, uint32(uint1(x236)))
	var x239 uint32
	x239, _ = bits.Add32(x223, x62, uint32(uint1(x238)))
	var x241 uint32
	var x242 uint32
	x241, x242 = bits.Add32(x225, x89, uint32(0x0))
	var x243 uint32
	var x244 uint32
	x243, x244 = bits.Add32(x227, x87, uint32(uint1(x242)))
	var x245 uint32
	var x246 uint32
	x245, x246 = bits.Add32(x229, x85, uint32(uint1(x244)))
	var x247 uint32
	var x248 uint32
	x247, x248 = bits.Add32(x231, x83, uint32(uint1(x246)))
	var x249 uint32
	var x250 uint32
	x249, x250 = bits.Add32(x233, x81, uint32(uint1(x248)))
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x235, x79, uint32(uint1(x250)))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x237, x77, uint32(uint1(x252)))
	var x255 uint32
	x255, _ = bits.Add32(x239, x75, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x112, x91, uint32(0x0))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x241, x92, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x243, x90, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x245, x88, uint32(uint1(x262)))
	var x265 uint32
	var x266 uint32
	x265, x266 = bits.Add32(x247, x86, uint32(uint1(x264)))
	var x267 uint32
	var x268 uint32
	x267, x268 = bits.Add32(x249, x84, uint32(uint1(x266)))
	var x269 uint32
	var x270 uint32
	x269, x270 = bits.Add32(x251, x82, uint32(uint1(x268)))
	var x271 uint32
	var x272 uint32
	x271, x272 = bits.Add32(x253, x80, uint32(uint1(x270)))
	var x273 uint32
	x273, _ = bits.Add32(x255, x78, uint32(uint1(x272)))
	var x275 uint32
	var x276 uint32
	x275, x276 = bits.Add32(x257, x109, uint32(0x0))
	var x277 uint32
	var x278 uint32
	x277, x278 = bits.Add32(x259, x107, uint32(uint1(x276)))
	var x279 uint32
	var x280 uint32
	x279, x280 = bits.Add32(x261, x105, uint32(uint1(x278)))
	var x281 uint32
	var x282 uint32
	x281, x282 = bits.Add32(x263, x103, uint32(uint1(x280)))
	var x283 uint32
	var x284 uint32
	x283, x284 = bits.Add32(x265, x101, uint32(uint1(x282)))
	var x285 uint32
	var x286 uint32
	x285, x286 = bits.Add32(x267, x99, uint32(uint1(x284)))
	var x287 uint32
	var x288 uint32
	x287, x288 = bits.Add32(x269, x97, uint32(uint1(x286)))
	var x289 uint32
	var x290 uint32
	x289, x290 = bits.Add32(x271, x95, uint32(uint1(x288)))
	var x291 uint32
	x291, _ = bits.Add32(x273, x93, uint32(uint1(x290)))
	var x293 uint32
	cmovznzU32(&x293, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x294 uint32
	cmovznzU32(&x294, uint1((arg4 >> 31)), uint32(0x0), 0xffffffff)
	var x295 uint32
	_, x295 = bits.Mul32(x294, arg2[0])
	var x297 uint32
	_, x297 = bits.Mul32(x294, arg2[1])
	var x299 uint32
	var x300 uint32
	x300, x299 = bits.Mul32(x294, arg2[0])
	var x301 uint32
	_, x301 = bits.Mul32(x294, arg2[2])
	var x303 uint32
	var x304 uint32
	x304, x303 = bits.Mul32(x294, arg2[1])
	var x305 uint32
	var x306 uint32
	x306, x305 = bits.Mul32(x294, arg2[0])
	var x307 uint32
	_, x307 = bits.Mul32(x294, arg2[3])
	var x309 uint32
	var x310 uint32
	x310, x309 = bits.Mul32(x294, arg2[2])
	var x311 uint32
	var x312 uint32
	x312, x311 = bits.Mul32(x294, arg2[1])
	var x313 uint32
	var x314 uint32
	x314, x313 = bits.Mul32(x294, arg2[0])
	var x315 uint32
	_, x315 = bits.Mul32(x294, arg2[4])
	var x317 uint32
	var x318 uint32
	x318, x317 = bits.Mul32(x294, arg2[3])
	var x319 uint32
	var x320 uint32
	x320, x319 = bits.Mul32(x294, arg2[2])
	var x321 uint32
	var x322 uint32
	x322, x321 = bits.Mul32(x294, arg2[1])
	var x323 uint32
	var x324 uint32
	x324, x323 = bits.Mul32(x294, arg2[0])
	var x325 uint32
	_, x325 = bits.Mul32(x294, arg2[5])
	var x327 uint32
	var x328 uint32
	x328, x327 = bits.Mul32(x294, arg2[4])
	var x329 uint32
	var x330 uint32
	x330, x329 = bits.Mul32(x294, arg2[3])
	var x331 uint32
	var x332 uint32
	x332, x331 = bits.Mul32(x294, arg2[2])
	var x333 uint32
	var x334 uint32
	x334, x333 = bits.Mul32(x294, arg2[1])
	var x335 uint32
	var x336 uint32
	x336, x335 = bits.Mul32(x294, arg2[0])
	var x337 uint32
	_, x337 = bits.Mul32(x294, arg2[6])
	var x339 uint32
	var x340 uint32
	x340, x339 = bits.Mul32(x294, arg2[5])
	var x341 uint32
	var x342 uint32
	x342, x341 = bits.Mul32(x294, arg2[4])
	var x343 uint32
	var x344 uint32
	x344, x343 = bits.Mul32(x294, arg2[3])
	var x345 uint32
	var x346 uint32
	x346, x345 = bits.Mul32(x294, arg2[2])
	var x347 uint32
	var x348 uint32
	x348, x347 = bits.Mul32(x294, arg2[1])
	var x349 uint32
	var x350 uint32
	x350, x349 = bits.Mul32(x294, arg2[0])
	var x351 uint32
	_, x351 = bits.Mul32(x294, arg2[7])
	var x353 uint32
	var x354 uint32
	x354, x353 = bits.Mul32(x294, arg2[6])
	var x355 uint32
	var x356 uint32
	x356, x355 = bits.Mul32(x294, arg2[5])
	var x357 uint32
	var x358 uint32
	x358, x357 = bits.Mul32(x294, arg2[4])
	var x359 uint32
	var x360 uint32
	x360, x359 = bits.Mul32(x294, arg2[3])
	var x361 uint32
	var x362 uint32
	x362, x361 = bits.Mul32(x294, arg2[2])
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x294, arg2[1])
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x294, arg2[0])
	var x367 uint32
	_, x367 = bits.Mul32(x294, arg2[8])
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x294, arg2[7])
	var x371 uint32
	var x372 uint32
	x372, x371 = bits.Mul32(x294, arg2[6])
	var x373 uint32
	var x374 uint32
	x374, x373 = bits.Mul32(x294, arg2[5])
	var x375 uint32
	var x376 uint32
	x376, x375 = bits.Mul32(x294, arg2[4])
	var x377 uint32
	var x378 uint32
	x378, x377 = bits.Mul32(x294, arg2[3])
	var x379 uint32
	var x380 uint32
	x380, x379 = bits.Mul32(x294, arg2[2])
	var x381 uint32
	var x382 uint32
	x382, x381 = bits.Mul32(x294, arg2[1])
	var x383 uint32
	var x384 uint32
	x384, x383 = bits.Mul32(x294, arg2[0])
	var x385 uint32
	_, x385 = bits.Mul32(arg4, x293)
	var x387 uint32
	var x388 uint32
	x388, x387 = bits.Mul32(arg4, arg2[8])
	var x389 uint32
	var x390 uint32
	x390, x389 = bits.Mul32(arg4, arg2[7])
	var x391 uint32
	var x392 uint32
	x392, x391 = bits.Mul32(arg4, arg2[6])
	var x393 uint32
	var x394 uint32
	x394, x393 = bits.Mul32(arg4, arg2[5])
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(arg4, arg2[4])
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(arg4, arg2[3])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(arg4, arg2[2])
	var x401 uint32
	var x402 uint32
	x402, x401 = bits.Mul32(arg4, arg2[1])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(arg4, arg2[0])
	var x405 uint32
	x405, _ = bits.Add32(x388, x295, uint32(0x0))
	var x407 uint32
	x407, _ = bits.Add32(x405, x297, uint32(0x0))
	var x409 uint32
	var x410 uint32
	x409, x410 = bits.Add32(x390, x299, uint32(0x0))
	var x411 uint32
	x411, _ = bits.Add32(x407, x300, uint32(uint1(x410)))
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x409, x303, uint32(0x0))
	var x415 uint32
	x415, _ = bits.Add32(x411, x301, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x392, x305, uint32(0x0))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x413, x306, uint32(uint1(x418)))
	var x421 uint32
	x421, _ = bits.Add32(x415, x304, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x417, x311, uint32(0x0))
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x419, x309, uint32(uint1(x424)))
	var x427 uint32
	x427, _ = bits.Add32(x421, x307, uint32(uint1(x426)))
	var x429 uint32
	var x430 uint32
	x429, x430 = bits.Add32(x394, x313, uint32(0x0))
	var x431 uint32
	var x432 uint32
	x431, x432 = bits.Add32(x423, x314, uint32(uint1(x430)))
	var x433 uint32
	var x434 uint32
	x433, x434 = bits.Add32(x425, x312, uint32(uint1(x432)))
	var x435 uint32
	x435, _ = bits.Add32(x427, x310, uint32(uint1(x434)))
	var x437 uint32
	var x438 uint32
	x437, x438 = bits.Add32(x429, x321, uint32(0x0))
	var x439 uint32
	var x440 uint32
	x439, x440 = bits.Add32(x431, x319, uint32(uint1(x438)))
	var x441 uint32
	var x442 uint32
	x441, x442 = bits.Add32(x433, x317, uint32(uint1(x440)))
	var x443 uint32
	x443, _ = bits.Add32(x435, x315, uint32(uint1(x442)))
	var x445 uint32
	var x446 uint32
	x445, x446 = bits.Add32(x396, x323, uint32(0x0))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x437, x324, uint32(uint1(x446)))
	var x449 uint32
	var x450 uint32
	x449, x450 = bits.Add32(x439, x322, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x441, x320, uint32(uint1(x450)))
	var x453 uint32
	x453, _ = bits.Add32(x443, x318, uint32(uint1(x452)))
	var x455 uint32
	var x456 uint32
	x455, x456 = bits.Add32(x445, x333, uint32(0x0))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x447, x331, uint32(uint1(x456)))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x449, x329, uint32(uint1(x458)))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x451, x327, uint32(uint1(x460)))
	var x463 uint32
	x463, _ = bits.Add32(x453, x325, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x398, x335, uint32(0x0))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x455, x336, uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x457, x334, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x459, x332, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x461, x330, uint32(uint1(x472)))
	var x475 uint32
	x475, _ = bits.Add32(x463, x328, uint32(uint1(x474)))
	var x477 uint32
	var x478 uint32
	x477, x478 = bits.Add32(x465, x347, uint32(0x0))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x467, x345, uint32(uint1(x478)))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x469, x343, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x471, x341, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x473, x339, uint32(uint1(x484)))
	var x487 uint32
	x487, _ = bits.Add32(x475, x337, uint32(uint1(x486)))
	var x489 uint32
	var x490 uint32
	x489, x490 = bits.Add32(x400, x349, uint32(0x0))
	var x491 uint32
	var x492 uint32
	x491, x492 = bits.Add32(x477, x350, uint32(uint1(x490)))
	var x493 uint32
	var x494 uint32
	x493, x494 = bits.Add32(x479, x348, uint32(uint1(x492)))
	var x495 uint32
	var x496 uint32
	x495, x496 = bits.Add32(x481, x346, uint32(uint1(x494)))
	var x497 uint32
	var x498 uint32
	x497, x498 = bits.Add32(x483, x344, uint32(uint1(x496)))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x485, x342, uint32(uint1(x498)))
	var x501 uint32
	x501, _ = bits.Add32(x487, x340, uint32(uint1(x500)))
	var x503 uint32
	var x504 uint32
	x503, x504 = bits.Add32(x489, x363, uint32(0x0))
	var x505 uint32
	var x506 uint32
	x505, x506 = bits.Add32(x491, x361, uint32(uint1(x504)))
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x493, x359, uint32(uint1(x506)))
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32(x495, x357, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x497, x355, uint32(uint1(x510)))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x499, x353, uint32(uint1(x512)))
	var x515 uint32
	x515, _ = bits.Add32(x501, x351, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x402, x365, uint32(0x0))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x503, x366, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x505, x364, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x507, x362, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x509, x360, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x511, x358, uint32(uint1(x526)))
	var x529 uint32
	var x530 uint32
	x529, x530 = bits.Add32(x513, x356, uint32(uint1(x528)))
	var x531 uint32
	x531, _ = bits.Add32(x515, x354, uint32(uint1(x530)))
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x517, x381, uint32(0x0))
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x519, x379, uint32(uint1(x534)))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x521, x377, uint32(uint1(x536)))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x523, x375, uint32(uint1(x538)))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x525, x373, uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x527, x371, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x529, x369, uint32(uint1(x544)))
	var x547 uint32
	x547, _ = bits.Add32(x531, x367, uint32(uint1(x546)))
	var x549 uint32
	var x550 uint32
	x549, x550 = bits.Add32(x404, x383, uint32(0x0))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(x533, x384, uint32(uint1(x550)))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x535, x382, uint32(uint1(x552)))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x537, x380, uint32(uint1(x554)))
	var x557 uint32
	var x558 uint32
	x557, x558 = bits.Add32(x539, x378, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Add32(x541, x376, uint32(uint1(x558)))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Add32(x543, x374, uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Add32(x545, x372, uint32(uint1(x562)))
	var x565 uint32
	x565, _ = bits.Add32(x547, x370, uint32(uint1(x564)))
	var x567 uint32
	var x568 uint32
	x567, x568 = bits.Add32(x549, x401, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x551, x399, uint32(uint1(x568)))
	var x571 uint32
	var x572 uint32
	x571, x572 = bits.Add32(x553, x397, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x555, x395, uint32(uint1(x572)))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x557, x393, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x559, x391, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x561, x389, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x563, x387, uint32(uint1(x580)))
	var x583 uint32
	x583, _ = bits.Add32(x565, x385, uint32(uint1(x582)))
	var x585 uint32
	cmovznzU32(&x585, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x586 uint32
	cmovznzU32(&x586, uint1((arg5 >> 31)), uint32(0x0), 0xffffffff)
	var x587 uint32
	_, x587 = bits.Mul32(x586, arg1[0])
	var x589 uint32
	_, x589 = bits.Mul32(x586, arg1[1])
	var x591 uint32
	var x592 uint32
	x592, x591 = bits.Mul32(x586, arg1[0])
	var x593 uint32
	_, x593 = bits.Mul32(x586, arg1[2])
	var x595 uint32
	var x596 uint32
	x596, x595 = bits.Mul32(x586, arg1[1])
	var x597 uint32
	var x598 uint32
	x598, x597 = bits.Mul32(x586, arg1[0])
	var x599 uint32
	_, x599 = bits.Mul32(x586, arg1[3])
	var x601 uint32
	var x602 uint32
	x602, x601 = bits.Mul32(x586, arg1[2])
	var x603 uint32
	var x604 uint32
	x604, x603 = bits.Mul32(x586, arg1[1])
	var x605 uint32
	var x606 uint32
	x606, x605 = bits.Mul32(x586, arg1[0])
	var x607 uint32
	_, x607 = bits.Mul32(x586, arg1[4])
	var x609 uint32
	var x610 uint32
	x610, x609 = bits.Mul32(x586, arg1[3])
	var x611 uint32
	var x612 uint32
	x612, x611 = bits.Mul32(x586, arg1[2])
	var x613 uint32
	var x614 uint32
	x614, x613 = bits.Mul32(x586, arg1[1])
	var x615 uint32
	var x616 uint32
	x616, x615 = bits.Mul32(x586, arg1[0])
	var x617 uint32
	_, x617 = bits.Mul32(x586, arg1[5])
	var x619 uint32
	var x620 uint32
	x620, x619 = bits.Mul32(x586, arg1[4])
	var x621 uint32
	var x622 uint32
	x622, x621 = bits.Mul32(x586, arg1[3])
	var x623 uint32
	var x624 uint32
	x624, x623 = bits.Mul32(x586, arg1[2])
	var x625 uint32
	var x626 uint32
	x626, x625 = bits.Mul32(x586, arg1[1])
	var x627 uint32
	var x628 uint32
	x628, x627 = bits.Mul32(x586, arg1[0])
	var x629 uint32
	_, x629 = bits.Mul32(x586, arg1[6])
	var x631 uint32
	var x632 uint32
	x632, x631 = bits.Mul32(x586, arg1[5])
	var x633 uint32
	var x634 uint32
	x634, x633 = bits.Mul32(x586, arg1[4])
	var x635 uint32
	var x636 uint32
	x636, x635 = bits.Mul32(x586, arg1[3])
	var x637 uint32
	var x638 uint32
	x638, x637 = bits.Mul32(x586, arg1[2])
	var x639 uint32
	var x640 uint32
	x640, x639 = bits.Mul32(x586, arg1[1])
	var x641 uint32
	var x642 uint32
	x642, x641 = bits.Mul32(x586, arg1[0])
	var x643 uint32
	_, x643 = bits.Mul32(x586, arg1[7])
	var x645 uint32
	var x646 uint32
	x646, x645 = bits.Mul32(x586, arg1[6])
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x586, arg1[5])
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x586, arg1[4])
	var x651 uint32
	var x652 uint32
	x652, x651 = bits.Mul32(x586, arg1[3])
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x586, arg1[2])
	var x655 uint32
	var x656 uint32
	x656, x655 = bits.Mul32(x586, arg1[1])
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32(x586, arg1[0])
	var x659 uint32
	_, x659 = bits.Mul32(x586, arg1[8])
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x586, arg1[7])
	var x663 uint32
	var x664 uint32
	x664, x663 = bits.Mul32(x586, arg1[6])
	var x665 uint32
	var x666 uint32
	x666, x665 = bits.Mul32(x586, arg1[5])
	var x667 uint32
	var x668 uint32
	x668, x667 = bits.Mul32(x586, arg1[4])
	var x669 uint32
	var x670 uint32
	x670, x669 = bits.Mul32(x586, arg1[3])
	var x671 uint32
	var x672 uint32
	x672, x671 = bits.Mul32(x586, arg1[2])
	var x673 uint32
	var x674 uint32
	x674, x673 = bits.Mul32(x586, arg1[1])
	var x675 uint32
	var x676 uint32
	x676, x675 = bits.Mul32(x586, arg1[0])
	var x677 uint32
	_, x677 = bits.Mul32(arg5, x585)
	var x679 uint32
	var x680 uint32
	x680, x679 = bits.Mul32(arg5, arg1[8])
	var x681 uint32
	var x682 uint32
	x682, x681 = bits.Mul32(arg5, arg1[7])
	var x683 uint32
	var x684 uint32
	x684, x683 = bits.Mul32(arg5, arg1[6])
	var x685 uint32
	var x686 uint32
	x686, x685 = bits.Mul32(arg5, arg1[5])
	var x687 uint32
	var x688 uint32
	x688, x687 = bits.Mul32(arg5, arg1[4])
	var x689 uint32
	var x690 uint32
	x690, x689 = bits.Mul32(arg5, arg1[3])
	var x691 uint32
	var x692 uint32
	x692, x691 = bits.Mul32(arg5, arg1[2])
	var x693 uint32
	var x694 uint32
	x694, x693 = bits.Mul32(arg5, arg1[1])
	var x695 uint32
	var x696 uint32
	x696, x695 = bits.Mul32(arg5, arg1[0])
	var x697 uint32
	x697, _ = bits.Add32(x680, x587, uint32(0x0))
	var x699 uint32
	x699, _ = bits.Add32(x697, x589, uint32(0x0))
	var x701 uint32
	var x702 uint32
	x701, x702 = bits.Add32(x682, x591, uint32(0x0))
	var x703 uint32
	x703, _ = bits.Add32(x699, x592, uint32(uint1(x702)))
	var x705 uint32
	var x706 uint32
	x705, x706 = bits.Add32(x701, x595, uint32(0x0))
	var x707 uint32
	x707, _ = bits.Add32(x703, x593, uint32(uint1(x706)))
	var x709 uint32
	var x710 uint32
	x709, x710 = bits.Add32(x684, x597, uint32(0x0))
	var x711 uint32
	var x712 uint32
	x711, x712 = bits.Add32(x705, x598, uint32(uint1(x710)))
	var x713 uint32
	x713, _ = bits.Add32(x707, x596, uint32(uint1(x712)))
	var x715 uint32
	var x716 uint32
	x715, x716 = bits.Add32(x709, x603, uint32(0x0))
	var x717 uint32
	var x718 uint32
	x717, x718 = bits.Add32(x711, x601, uint32(uint1(x716)))
	var x719 uint32
	x719, _ = bits.Add32(x713, x599, uint32(uint1(x718)))
	var x721 uint32
	var x722 uint32
	x721, x722 = bits.Add32(x686, x605, uint32(0x0))
	var x723 uint32
	var x724 uint32
	x723, x724 = bits.Add32(x715, x606, uint32(uint1(x722)))
	var x725 uint32
	var x726 uint32
	x725, x726 = bits.Add32(x717, x604, uint32(uint1(x724)))
	var x727 uint32
	x727, _ = bits.Add32(x719, x602, uint32(uint1(x726)))
	var x729 uint32
	var x730 uint32
	x729, x730 = bits.Add32(x721, x613, uint32(0x0))
	var x731 uint32
	var x732 uint32
	x731, x732 = bits.Add32(x723, x611, uint32(uint1(x730)))
	var x733 uint32
	var x734 uint32
	x733, x734 = bits.Add32(x725, x609, uint32(uint1(x732)))
	var x735 uint32
	x735, _ = bits.Add32(x727, x607, uint32(uint1(x734)))
	var x737 uint32
	var x738 uint32
	x737, x738 = bits.Add32(x688, x615, uint32(0x0))
	var x739 uint32
	var x740 uint32
	x739, x740 = bits.Add32(x729, x616, uint32(uint1(x738)))
	var x741 uint32
	var x742 uint32
	x741, x742 = bits.Add32(x731, x614, uint32(uint1(x740)))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x733, x612, uint32(uint1(x742)))
	var x745 uint32
	x745, _ = bits.Add32(x735, x610, uint32(uint1(x744)))
	var x747 uint32
	var x748 uint32
	x747, x748 = bits.Add32(x737, x625, uint32(0x0))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x739, x623, uint32(uint1(x748)))
	var x751 uint32
	var x752 uint32
	x751, x752 = bits.Add32(x741, x621, uint32(uint1(x750)))
	var x753 uint32
	var x754 uint32
	x753, x754 = bits.Add32(x743, x619, uint32(uint1(x752)))
	var x755 uint32
	x755, _ = bits.Add32(x745, x617, uint32(uint1(x754)))
	var x757 uint32
	var x758 uint32
	x757, x758 = bits.Add32(x690, x627, uint32(0x0))
	var x759 uint32
	var x760 uint32
	x759, x760 = bits.Add32(x747, x628, uint32(uint1(x758)))
	var x761 uint32
	var x762 uint32
	x761, x762 = bits.Add32(x749, x626, uint32(uint1(x760)))
	var x763 uint32
	var x764 uint32
	x763, x764 = bits.Add32(x751, x624, uint32(uint1(x762)))
	var x765 uint32
	var x766 uint32
	x765, x766 = bits.Add32(x753, x622, uint32(uint1(x764)))
	var x767 uint32
	x767, _ = bits.Add32(x755, x620, uint32(uint1(x766)))
	var x769 uint32
	var x770 uint32
	x769, x770 = bits.Add32(x757, x639, uint32(0x0))
	var x771 uint32
	var x772 uint32
	x771, x772 = bits.Add32(x759, x637, uint32(uint1(x770)))
	var x773 uint32
	var x774 uint32
	x773, x774 = bits.Add32(x761, x635, uint32(uint1(x772)))
	var x775 uint32
	var x776 uint32
	x775, x776 = bits.Add32(x763, x633, uint32(uint1(x774)))
	var x777 uint32
	var x778 uint32
	x777, x778 = bits.Add32(x765, x631, uint32(uint1(x776)))
	var x779 uint32
	x779, _ = bits.Add32(x767, x629, uint32(uint1(x778)))
	var x781 uint32
	var x782 uint32
	x781, x782 = bits.Add32(x692, x641, uint32(0x0))
	var x783 uint32
	var x784 uint32
	x783, x784 = bits.Add32(x769, x642, uint32(uint1(x782)))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x771, x640, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x773, x638, uint32(uint1(x786)))
	var x789 uint32
	var x790 uint32
	x789, x790 = bits.Add32(x775, x636, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x777, x634, uint32(uint1(x790)))
	var x793 uint32
	x793, _ = bits.Add32(x779, x632, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x781, x655, uint32(0x0))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x783, x653, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(x785, x651, uint32(uint1(x798)))
	var x801 uint32
	var x802 uint32
	x801, x802 = bits.Add32(x787, x649, uint32(uint1(x800)))
	var x803 uint32
	var x804 uint32
	x803, x804 = bits.Add32(x789, x647, uint32(uint1(x802)))
	var x805 uint32
	var x806 uint32
	x805, x806 = bits.Add32(x791, x645, uint32(uint1(x804)))
	var x807 uint32
	x807, _ = bits.Add32(x793, x643, uint32(uint1(x806)))
	var x809 uint32
	var x810 uint32
	x809, x810 = bits.Add32(x694, x657, uint32(0x0))
	var x811 uint32
	var x812 uint32
	x811, x812 = bits.Add32(x795, x658, uint32(uint1(x810)))
	var x813 uint32
	var x814 uint32
	x813, x814 = bits.Add32(x797, x656, uint32(uint1(x812)))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x799, x654, uint32(uint1(x814)))
	var x817 uint32
	var x818 uint32
	x817, x818 = bits.Add32(x801, x652, uint32(uint1(x816)))
	var x819 uint32
	var x820 uint32
	x819, x820 = bits.Add32(x803, x650, uint32(uint1(x818)))
	var x821 uint32
	var x822 uint32
	x821, x822 = bits.Add32(x805, x648, uint32(uint1(x820)))
	var x823 uint32
	x823, _ = bits.Add32(x807, x646, uint32(uint1(x822)))
	var x825 uint32
	var x826 uint32
	x825, x826 = bits.Add32(x809, x673, uint32(0x0))
	var x827 uint32
	var x828 uint32
	x827, x828 = bits.Add32(x811, x671, uint32(uint1(x826)))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x813, x669, uint32(uint1(x828)))
	var x831 uint32
	var x832 uint32
	x831, x832 = bits.Add32(x815, x667, uint32(uint1(x830)))
	var x833 uint32
	var x834 uint32
	x833, x834 = bits.Add32(x817, x665, uint32(uint1(x832)))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x819, x663, uint32(uint1(x834)))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x821, x661, uint32(uint1(x836)))
	var x839 uint32
	x839, _ = bits.Add32(x823, x659, uint32(uint1(x838)))
	var x841 uint32
	var x842 uint32
	x841, x842 = bits.Add32(x696, x675, uint32(0x0))
	var x843 uint32
	var x844 uint32
	x843, x844 = bits.Add32(x825, x676, uint32(uint1(x842)))
	var x845 uint32
	var x846 uint32
	x845, x846 = bits.Add32(x827, x674, uint32(uint1(x844)))
	var x847 uint32
	var x848 uint32
	x847, x848 = bits.Add32(x829, x672, uint32(uint1(x846)))
	var x849 uint32
	var x850 uint32
	x849, x850 = bits.Add32(x831, x670, uint32(uint1(x848)))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x833, x668, uint32(uint1(x850)))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x835, x666, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x837, x664, uint32(uint1(x854)))
	var x857 uint32
	x857, _ = bits.Add32(x839, x662, uint32(uint1(x856)))
	var x859 uint32
	var x860 uint32
	x859, x860 = bits.Add32(x841, x693, uint32(0x0))
	var x861 uint32
	var x862 uint32
	x861, x862 = bits.Add32(x843, x691, uint32(uint1(x860)))
	var x863 uint32
	var x864 uint32
	x863, x864 = bits.Add32(x845, x689, uint32(uint1(x862)))
	var x865 uint32
	var x866 uint32
	x865, x866 = bits.Add32(x847, x687, uint32(uint1(x864)))
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x849, x685, uint32(uint1(x866)))
	var x869 uint32
	var x870 uint32
	x869, x870 = bits.Add32(x851, x683, uint32(uint1(x868)))
	var x871 uint32
	var x872 uint32
	x871, x872 = bits.Add32(x853, x681, uint32(uint1(x870)))
	var x873 uint32
	var x874 uint32
	x873, x874 = bits.Add32(x855, x679, uint32(uint1(x872)))
	var x875 uint32
	x875, _ = bits.Add32(x857, x677, uint32(uint1(x874)))
	var x877 uint32
	cmovznzU32(&x877, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x878 uint32
	cmovznzU32(&x878, uint1((arg6 >> 31)), uint32(0x0), 0xffffffff)
	var x879 uint32
	_, x879 = bits.Mul32(x878, arg2[0])
	var x881 uint32
	_, x881 = bits.Mul32(x878, arg2[1])
	var x883 uint32
	var x884 uint32
	x884, x883 = bits.Mul32(x878, arg2[0])
	var x885 uint32
	_, x885 = bits.Mul32(x878, arg2[2])
	var x887 uint32
	var x888 uint32
	x888, x887 = bits.Mul32(x878, arg2[1])
	var x889 uint32
	var x890 uint32
	x890, x889 = bits.Mul32(x878, arg2[0])
	var x891 uint32
	_, x891 = bits.Mul32(x878, arg2[3])
	var x893 uint32
	var x894 uint32
	x894, x893 = bits.Mul32(x878, arg2[2])
	var x895 uint32
	var x896 uint32
	x896, x895 = bits.Mul32(x878, arg2[1])
	var x897 uint32
	var x898 uint32
	x898, x897 = bits.Mul32(x878, arg2[0])
	var x899 uint32
	_, x899 = bits.Mul32(x878, arg2[4])
	var x901 uint32
	var x902 uint32
	x902, x901 = bits.Mul32(x878, arg2[3])
	var x903 uint32
	var x904 uint32
	x904, x903 = bits.Mul32(x878, arg2[2])
	var x905 uint32
	var x906 uint32
	x906, x905 = bits.Mul32(x878, arg2[1])
	var x907 uint32
	var x908 uint32
	x908, x907 = bits.Mul32(x878, arg2[0])
	var x909 uint32
	_, x909 = bits.Mul32(x878, arg2[5])
	var x911 uint32
	var x912 uint32
	x912, x911 = bits.Mul32(x878, arg2[4])
	var x913 uint32
	var x914 uint32
	x914, x913 = bits.Mul32(x878, arg2[3])
	var x915 uint32
	var x916 uint32
	x916, x915 = bits.Mul32(x878, arg2[2])
	var x917 uint32
	var x918 uint32
	x918, x917 = bits.Mul32(x878, arg2[1])
	var x919 uint32
	var x920 uint32
	x920, x919 = bits.Mul32(x878, arg2[0])
	var x921 uint32
	_, x921 = bits.Mul32(x878, arg2[6])
	var x923 uint32
	var x924 uint32
	x924, x923 = bits.Mul32(x878, arg2[5])
	var x925 uint32
	var x926 uint32
	x926, x925 = bits.Mul32(x878, arg2[4])
	var x927 uint32
	var x928 uint32
	x928, x927 = bits.Mul32(x878, arg2[3])
	var x929 uint32
	var x930 uint32
	x930, x929 = bits.Mul32(x878, arg2[2])
	var x931 uint32
	var x932 uint32
	x932, x931 = bits.Mul32(x878, arg2[1])
	var x933 uint32
	var x934 uint32
	x934, x933 = bits.Mul32(x878, arg2[0])
	var x935 uint32
	_, x935 = bits.Mul32(x878, arg2[7])
	var x937 uint32
	var x938 uint32
	x938, x937 = bits.Mul32(x878, arg2[6])
	var x939 uint32
	var x940 uint32
	x940, x939 = bits.Mul32(x878, arg2[5])
	var x941 uint32
	var x942 uint32
	x942, x941 = bits.Mul32(x878, arg2[4])
	var x943 uint32
	var x944 uint32
	x944, x943 = bits.Mul32(x878, arg2[3])
	var x945 uint32
	var x946 uint32
	x946, x945 = bits.Mul32(x878, arg2[2])
	var x947 uint32
	var x948 uint32
	x948, x947 = bits.Mul32(x878, arg2[1])
	var x949 uint32
	var x950 uint32
	x950, x949 = bits.Mul32(x878, arg2[0])
	var x951 uint32
	_, x951 = bits.Mul32(x878, arg2[8])
	var x953 uint32
	var x954 uint32
	x954, x953 = bits.Mul32(x878, arg2[7])
	var x955 uint32
	var x956 uint32
	x956, x955 = bits.Mul32(x878, arg2[6])
	var x957 uint32
	var x958 uint32
	x958, x957 = bits.Mul32(x878, arg2[5])
	var x959 uint32
	var x960 uint32
	x960, x959 = bits.Mul32(x878, arg2[4])
	var x961 uint32
	var x962 uint32
	x962, x961 = bits.Mul32(x878, arg2[3])
	var x963 uint32
	var x964 uint32
	x964, x963 = bits.Mul32(x878, arg2[2])
	var x965 uint32
	var x966 uint32
	x966, x965 = bits.Mul32(x878, arg2[1])
	var x967 uint32
	var x968 uint32
	x968, x967 = bits.Mul32(x878, arg2[0])
	var x969 uint32
	_, x969 = bits.Mul32(arg6, x877)
	var x971 uint32
	var x972 uint32
	x972, x971 = bits.Mul32(arg6, arg2[8])
	var x973 uint32
	var x974 uint32
	x974, x973 = bits.Mul32(arg6, arg2[7])
	var x975 uint32
	var x976 uint32
	x976, x975 = bits.Mul32(arg6, arg2[6])
	var x977 uint32
	var x978 uint32
	x978, x977 = bits.Mul32(arg6, arg2[5])
	var x979 uint32
	var x980 uint32
	x980, x979 = bits.Mul32(arg6, arg2[4])
	var x981 uint32
	var x982 uint32
	x982, x981 = bits.Mul32(arg6, arg2[3])
	var x983 uint32
	var x984 uint32
	x984, x983 = bits.Mul32(arg6, arg2[2])
	var x985 uint32
	var x986 uint32
	x986, x985 = bits.Mul32(arg6, arg2[1])
	var x987 uint32
	var x988 uint32
	x988, x987 = bits.Mul32(arg6, arg2[0])
	var x989 uint32
	x989, _ = bits.Add32(x972, x879, uint32(0x0))
	var x991 uint32
	x991, _ = bits.Add32(x989, x881, uint32(0x0))
	var x993 uint32
	var x994 uint32
	x993, x994 = bits.Add32(x974, x883, uint32(0x0))
	var x995 uint32
	x995, _ = bits.Add32(x991, x884, uint32(uint1(x994)))
	var x997 uint32
	var x998 uint32
	x997, x998 = bits.Add32(x993, x887, uint32(0x0))
	var x999 uint32
	x999, _ = bits.Add32(x995, x885, uint32(uint1(x998)))
	var x1001 uint32
	var x1002 uint32
	x1001, x1002 = bits.Add32(x976, x889, uint32(0x0))
	var x1003 uint32
	var x1004 uint32
	x1003, x1004 = bits.Add32(x997, x890, uint32(uint1(x1002)))
	var x1005 uint32
	x1005, _ = bits.Add32(x999, x888, uint32(uint1(x1004)))
	var x1007 uint32
	var x1008 uint32
	x1007, x1008 = bits.Add32(x1001, x895, uint32(0x0))
	var x1009 uint32
	var x1010 uint32
	x1009, x1010 = bits.Add32(x1003, x893, uint32(uint1(x1008)))
	var x1011 uint32
	x1011, _ = bits.Add32(x1005, x891, uint32(uint1(x1010)))
	var x1013 uint32
	var x1014 uint32
	x1013, x1014 = bits.Add32(x978, x897, uint32(0x0))
	var x1015 uint32
	var x1016 uint32
	x1015, x1016 = bits.Add32(x1007, x898, uint32(uint1(x1014)))
	var x1017 uint32
	var x1018 uint32
	x1017, x1018 = bits.Add32(x1009, x896, uint32(uint1(x1016)))
	var x1019 uint32
	x1019, _ = bits.Add32(x1011, x894, uint32(uint1(x1018)))
	var x1021 uint32
	var x1022 uint32
	x1021, x1022 = bits.Add32(x1013, x905, uint32(0x0))
	var x1023 uint32
	var x1024 uint32
	x1023, x1024 = bits.Add32(x1015, x903, uint32(uint1(x1022)))
	var x1025 uint32
	var x1026 uint32
	x1025, x1026 = bits.Add32(x1017, x901, uint32(uint1(x1024)))
	var x1027 uint32
	x1027, _ = bits.Add32(x1019, x899, uint32(uint1(x1026)))
	var x1029 uint32
	var x1030 uint32
	x1029, x1030 = bits.Add32(x980, x907, uint32(0x0))
	var x1031 uint32
	var x1032 uint32
	x1031, x1032 = bits.Add32(x1021, x908, uint32(uint1(x1030)))
	var x1033 uint32
	var x1034 uint32
	x1033, x1034 = bits.Add32(x1023, x906, uint32(uint1(x1032)))
	var x1035 uint32
	var x1036 uint32
	x1035, x1036 = bits.Add32(x1025, x904, uint32(uint1(x1034)))
	var x1037 uint32
	x1037, _ = bits.Add32(x1027, x902, uint32(uint1(x1036)))
	var x1039 uint32
	var x1040 uint32
	x1039, x1040 = bits.Add32(x1029, x917, uint32(0x0))
	var x1041 uint32
	var x1042 uint32
	x1041, x1042 = bits.Add32(x1031, x915, uint32(uint1(x1040)))
	var x1043 uint32
	var x1044 uint32
	x1043, x1044 = bits.Add32(x1033, x913, uint32(uint1(x1042)))
	var x1045 uint32
	var x1046 uint32
	x1045, x1046 = bits.Add32(x1035, x911, uint32(uint1(x1044)))
	var x1047 uint32
	x1047, _ = bits.Add32(x1037, x909, uint32(uint1(x1046)))
	var x1049 uint32
	var x1050 uint32
	x1049, x1050 = bits.Add32(x982, x919, uint32(0x0))
	var x1051 uint32
	var x1052 uint32
	x1051, x1052 = bits.Add32(x1039, x920, uint32(uint1(x1050)))
	var x1053 uint32
	var x1054 uint32
	x1053, x1054 = bits.Add32(x1041, x918, uint32(uint1(x1052)))
	var x1055 uint32
	var x1056 uint32
	x1055, x1056 = bits.Add32(x1043, x916, uint32(uint1(x1054)))
	var x1057 uint32
	var x1058 uint32
	x1057, x1058 = bits.Add32(x1045, x914, uint32(uint1(x1056)))
	var x1059 uint32
	x1059, _ = bits.Add32(x1047, x912, uint32(uint1(x1058)))
	var x1061 uint32
	var x1062 uint32
	x1061, x1062 = bits.Add32(x1049, x931, uint32(0x0))
	var x1063 uint32
	var x1064 uint32
	x1063, x1064 = bits.Add32(x1051, x929, uint32(uint1(x1062)))
	var x1065 uint32
	var x1066 uint32
	x1065, x1066 = bits.Add32(x1053, x927, uint32(uint1(x1064)))
	var x1067 uint32
	var x1068 uint32
	x1067, x1068 = bits.Add32(x1055, x925, uint32(uint1(x1066)))
	var x1069 uint32
	var x1070 uint32
	x1069, x1070 = bits.Add32(x1057, x923, uint32(uint1(x1068)))
	var x1071 uint32
	x1071, _ = bits.Add32(x1059, x921, uint32(uint1(x1070)))
	var x1073 uint32
	var x1074 uint32
	x1073, x1074 = bits.Add32(x984, x933, uint32(0x0))
	var x1075 uint32
	var x1076 uint32
	x1075, x1076 = bits.Add32(x1061, x934, uint32(uint1(x1074)))
	var x1077 uint32
	var x1078 uint32
	x1077, x1078 = bits.Add32(x1063, x932, uint32(uint1(x1076)))
	var x1079 uint32
	var x1080 uint32
	x1079, x1080 = bits.Add32(x1065, x930, uint32(uint1(x1078)))
	var x1081 uint32
	var x1082 uint32
	x1081, x1082 = bits.Add32(x1067, x928, uint32(uint1(x1080)))
	var x1083 uint32
	var x1084 uint32
	x1083, x1084 = bits.Add32(x1069, x926, uint32(uint1(x1082)))
	var x1085 uint32
	x1085, _ = bits.Add32(x1071, x924, uint32(uint1(x1084)))
	var x1087 uint32
	var x1088 uint32
	x1087, x1088 = bits.Add32(x1073, x947, uint32(0x0))
	var x1089 uint32
	var x1090 uint32
	x1089, x1090 = bits.Add32(x1075, x945, uint32(uint1(x1088)))
	var x1091 uint32
	var x1092 uint32
	x1091, x1092 = bits.Add32(x1077, x943, uint32(uint1(x1090)))
	var x1093 uint32
	var x1094 uint32
	x1093, x1094 = bits.Add32(x1079, x941, uint32(uint1(x1092)))
	var x1095 uint32
	var x1096 uint32
	x1095, x1096 = bits.Add32(x1081, x939, uint32(uint1(x1094)))
	var x1097 uint32
	var x1098 uint32
	x1097, x1098 = bits.Add32(x1083, x937, uint32(uint1(x1096)))
	var x1099 uint32
	x1099, _ = bits.Add32(x1085, x935, uint32(uint1(x1098)))
	var x1101 uint32
	var x1102 uint32
	x1101, x1102 = bits.Add32(x986, x949, uint32(0x0))
	var x1103 uint32
	var x1104 uint32
	x1103, x1104 = bits.Add32(x1087, x950, uint32(uint1(x1102)))
	var x1105 uint32
	var x1106 uint32
	x1105, x1106 = bits.Add32(x1089, x948, uint32(uint1(x1104)))
	var x1107 uint32
	var x1108 uint32
	x1107, x1108 = bits.Add32(x1091, x946, uint32(uint1(x1106)))
	var x1109 uint32
	var x1110 uint32
	x1109, x1110 = bits.Add32(x1093, x944, uint32(uint1(x1108)))
	var x1111 uint32
	var x1112 uint32
	x1111, x1112 = bits.Add32(x1095, x942, uint32(uint1(x1110)))
	var x1113 uint32
	var x1114 uint32
	x1113, x1114 = bits.Add32(x1097, x940, uint32(uint1(x1112)))
	var x1115 uint32
	x1115, _ = bits.Add32(x1099, x938, uint32(uint1(x1114)))
	var x1117 uint32
	var x1118 uint32
	x1117, x1118 = bits.Add32(x1101, x965, uint32(0x0))
	var x1119 uint32
	var x1120 uint32
	x1119, x1120 = bits.Add32(x1103, x963, uint32(uint1(x1118)))
	var x1121 uint32
	var x1122 uint32
	x1121, x1122 = bits.Add32(x1105, x961, uint32(uint1(x1120)))
	var x1123 uint32
	var x1124 uint32
	x1123, x1124 = bits.Add32(x1107, x959, uint32(uint1(x1122)))
	var x1125 uint32
	var x1126 uint32
	x1125, x1126 = bits.Add32(x1109, x957, uint32(uint1(x1124)))
	var x1127 uint32
	var x1128 uint32
	x1127, x1128 = bits.Add32(x1111, x955, uint32(uint1(x1126)))
	var x1129 uint32
	var x1130 uint32
	x1129, x1130 = bits.Add32(x1113, x953, uint32(uint1(x1128)))
	var x1131 uint32
	x1131, _ = bits.Add32(x1115, x951, uint32(uint1(x1130)))
	var x1133 uint32
	var x1134 uint32
	x1133, x1134 = bits.Add32(x988, x967, uint32(0x0))
	var x1135 uint32
	var x1136 uint32
	x1135, x1136 = bits.Add32(x1117, x968, uint32(uint1(x1134)))
	var x1137 uint32
	var x1138 uint32
	x1137, x1138 = bits.Add32(x1119, x966, uint32(uint1(x1136)))
	var x1139 uint32
	var x1140 uint32
	x1139, x1140 = bits.Add32(x1121, x964, uint32(uint1(x1138)))
	var x1141 uint32
	var x1142 uint32
	x1141, x1142 = bits.Add32(x1123, x962, uint32(uint1(x1140)))
	var x1143 uint32
	var x1144 uint32
	x1143, x1144 = bits.Add32(x1125, x960, uint32(uint1(x1142)))
	var x1145 uint32
	var x1146 uint32
	x1145, x1146 = bits.Add32(x1127, x958, uint32(uint1(x1144)))
	var x1147 uint32
	var x1148 uint32
	x1147, x1148 = bits.Add32(x1129, x956, uint32(uint1(x1146)))
	var x1149 uint32
	x1149, _ = bits.Add32(x1131, x954, uint32(uint1(x1148)))
	var x1151 uint32
	var x1152 uint32
	x1151, x1152 = bits.Add32(x1133, x985, uint32(0x0))
	var x1153 uint32
	var x1154 uint32
	x1153, x1154 = bits.Add32(x1135, x983, uint32(uint1(x1152)))
	var x1155 uint32
	var x1156 uint32
	x1155, x1156 = bits.Add32(x1137, x981, uint32(uint1(x1154)))
	var x1157 uint32
	var x1158 uint32
	x1157, x1158 = bits.Add32(x1139, x979, uint32(uint1(x1156)))
	var x1159 uint32
	var x1160 uint32
	x1159, x1160 = bits.Add32(x1141, x977, uint32(uint1(x1158)))
	var x1161 uint32
	var x1162 uint32
	x1161, x1162 = bits.Add32(x1143, x975, uint32(uint1(x1160)))
	var x1163 uint32
	var x1164 uint32
	x1163, x1164 = bits.Add32(x1145, x973, uint32(uint1(x1162)))
	var x1165 uint32
	var x1166 uint32
	x1165, x1166 = bits.Add32(x1147, x971, uint32(uint1(x1164)))
	var x1167 uint32
	x1167, _ = bits.Add32(x1149, x969, uint32(uint1(x1166)))
	var x1169 uint32
	var x1170 uint32
	x1169, x1170 = bits.Add32(x111, x403, uint32(0x0))
	var x1171 uint32
	var x1172 uint32
	x1171, x1172 = bits.Add32(x275, x567, uint32(uint1(x1170)))
	var x1173 uint32
	var x1174 uint32
	x1173, x1174 = bits.Add32(x277, x569, uint32(uint1(x1172)))
	var x1175 uint32
	var x1176 uint32
	x1175, x1176 = bits.Add32(x279, x571, uint32(uint1(x1174)))
	var x1177 uint32
	var x1178 uint32
	x1177, x1178 = bits.Add32(x281, x573, uint32(uint1(x1176)))
	var x1179 uint32
	var x1180 uint32
	x1179, x1180 = bits.Add32(x283, x575, uint32(uint1(x1178)))
	var x1181 uint32
	var x1182 uint32
	x1181, x1182 = bits.Add32(x285, x577, uint32(uint1(x1180)))
	var x1183 uint32
	var x1184 uint32
	x1183, x1184 = bits.Add32(x287, x579, uint32(uint1(x1182)))
	var x1185 uint32
	var x1186 uint32
	x1185, x1186 = bits.Add32(x289, x581, uint32(uint1(x1184)))
	var x1187 uint32
	x1187, _ = bits.Add32(x291, x583, uint32(uint1(x1186)))
	var x1189 uint32
	var x1190 uint32
	x1189, x1190 = bits.Add32(x695, x987, uint32(0x0))
	var x1191 uint32
	var x1192 uint32
	x1191, x1192 = bits.Add32(x859, x1151, uint32(uint1(x1190)))
	var x1193 uint32
	var x1194 uint32
	x1193, x1194 = bits.Add32(x861, x1153, uint32(uint1(x1192)))
	var x1195 uint32
	var x1196 uint32
	x1195, x1196 = bits.Add32(x863, x1155, uint32(uint1(x1194)))
	var x1197 uint32
	var x1198 uint32
	x1197, x1198 = bits.Add32(x865, x1157, uint32(uint1(x1196)))
	var x1199 uint32
	var x1200 uint32
	x1199, x1200 = bits.Add32(x867, x1159, uint32(uint1(x1198)))
	var x1201 uint32
	var x1202 uint32
	x1201, x1202 = bits.Add32(x869, x1161, uint32(uint1(x1200)))
	var x1203 uint32
	var x1204 uint32
	x1203, x1204 = bits.Add32(x871, x1163, uint32(uint1(x1202)))
	var x1205 uint32
	var x1206 uint32
	x1205, x1206 = bits.Add32(x873, x1165, uint32(uint1(x1204)))
	var x1207 uint32
	x1207, _ = bits.Add32(x875, x1167, uint32(uint1(x1206)))
	x1209 := ((x1169 >> 30) | ((x1171 << 2) & 0xffffffff))
	x1210 := ((x1171 >> 30) | ((x1173 << 2) & 0xffffffff))
	x1211 := ((x1173 >> 30) | ((x1175 << 2) & 0xffffffff))
	x1212 := ((x1175 >> 30) | ((x1177 << 2) & 0xffffffff))
	x1213 := ((x1177 >> 30) | ((x1179 << 2) & 0xffffffff))
	x1214 := ((x1179 >> 30) | ((x1181 << 2) & 0xffffffff))
	x1215 := ((x1181 >> 30) | ((x1183 << 2) & 0xffffffff))
	x1216 := ((x1183 >> 30) | ((x1185 << 2) & 0xffffffff))
	x1217 := ((x1185 >> 30) | ((x1187 << 2) & 0xffffffff))
	x1218 := ((x1189 >> 30) | ((x1191 << 2) & 0xffffffff))
	x1219 := ((x1191 >> 30) | ((x1193 << 2) & 0xffffffff))
	x1220 := ((x1193 >> 30) | ((x1195 << 2) & 0xffffffff))
	x1221 := ((x1195 >> 30) | ((x1197 << 2) & 0xffffffff))
	x1222 := ((x1197 >> 30) | ((x1199 << 2) & 0xffffffff))
	x1223 := ((x1199 >> 30) | ((x1201 << 2) & 0xffffffff))
	x1224 := ((x1201 >> 30) | ((x1203 << 2) & 0xffffffff))
	x1225 := ((x1203 >> 30) | ((x1205 << 2) & 0xffffffff))
	x1226 := ((x1205 >> 30) | ((x1207 << 2) & 0xffffffff))
	out1[0] = x1209
	out1[1] = x1210
	out1[2] = x1211
	out1[3] = x1212
	out1[4] = x1213
	out1[5] = x1214
	out1[6] = x1215
	out1[7] = x1216
	out1[8] = x1217
	out2[0] = x1218
	out2[1] = x1219
	out2[2] = x1220
	out2[3] = x1221
	out2[4] = x1222
	out2[5] = x1223
	out2[6] = x1224
	out2[7] = x1225
	out2[8] = x1226
}

// UpdateVr computes a update_vr.
//
// Postconditions:
//   0 ≤ eval arg1 < m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [0x0 ~> 0xffffffff]
//   arg4: [0x0 ~> 0xffffffff]
//   arg5: [0x0 ~> 0xffffffff]
//   arg6: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func UpdateVr(out1 *[8]uint32, out2 *[8]uint32, arg1 *[8]uint32, arg2 *[8]uint32, arg3 uint32, arg4 uint32, arg5 uint32, arg6 uint32) {
	x1 := uint1((arg3 >> 31))
	x2 := (uint32((uint64((^arg3)) + uint64(0x1))) & 0xffffffff)
	var x3 uint32
	var x4 uint32
	x3, x4 = bits.Sub32(uint32(0x0), x2, uint32(0x0))
	var x5 uint32
	var x6 uint32
	x5, x6 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x4)))
	var x7 uint32
	var x8 uint32
	x7, x8 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x6)))
	var x9 uint32
	var x10 uint32
	x9, x10 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x8)))
	var x11 uint32
	var x12 uint32
	x11, x12 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x10)))
	var x13 uint32
	var x14 uint32
	x13, x14 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x12)))
	var x15 uint32
	var x16 uint32
	x15, x16 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x14)))
	var x17 uint32
	var x18 uint32
	x17, x18 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x16)))
	var x19 uint32
	cmovznzU32(&x19, uint1(x18), uint32(0x0), 0xffffffff)
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(x3, x19, uint32(0x0))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(x5, x19, uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(x7, x19, uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(x9, uint32(0x0), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(x11, uint32(0x0), uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(x13, uint32(0x0), uint32(uint1(x29)))
	var x32 uint32
	var x33 uint32
	x32, x33 = bits.Add32(x15, uint32((uint1(x19) & 0x1)), uint32(uint1(x31)))
	var x34 uint32
	x34, _ = bits.Add32(x17, x19, uint32(uint1(x33)))
	var x36 uint32
	cmovznzU32(&x36, x1, arg3, x20)
	var x37 uint32
	cmovznzU32(&x37, x1, uint32(0x0), x22)
	var x38 uint32
	cmovznzU32(&x38, x1, uint32(0x0), x24)
	var x39 uint32
	cmovznzU32(&x39, x1, uint32(0x0), x26)
	var x40 uint32
	cmovznzU32(&x40, x1, uint32(0x0), x28)
	var x41 uint32
	cmovznzU32(&x41, x1, uint32(0x0), x30)
	var x42 uint32
	cmovznzU32(&x42, x1, uint32(0x0), x32)
	var x43 uint32
	cmovznzU32(&x43, x1, uint32(0x0), x34)
	x44 := uint1((arg4 >> 31))
	x45 := (uint32((uint64((^arg4)) + uint64(0x1))) & 0xffffffff)
	var x46 uint32
	var x47 uint32
	x46, x47 = bits.Sub32(uint32(0x0), x45, uint32(0x0))
	var x48 uint32
	var x49 uint32
	x48, x49 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x47)))
	var x50 uint32
	var x51 uint32
	x50, x51 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x49)))
	var x52 uint32
	var x53 uint32
	x52, x53 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x51)))
	var x54 uint32
	var x55 uint32
	x54, x55 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x53)))
	var x56 uint32
	var x57 uint32
	x56, x57 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x55)))
	var x58 uint32
	var x59 uint32
	x58, x59 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x57)))
	var x60 uint32
	var x61 uint32
	x60, x61 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x59)))
	var x62 uint32
	cmovznzU32(&x62, uint1(x61), uint32(0x0), 0xffffffff)
	var x63 uint32
	var x64 uint32
	x63, x64 = bits.Add32(x46, x62, uint32(0x0))
	var x65 uint32
	var x66 uint32
	x65, x66 = bits.Add32(x48, x62, uint32(uint1(x64)))
	var x67 uint32
	var x68 uint32
	x67, x68 = bits.Add32(x50, x62, uint32(uint1(x66)))
	var x69 uint32
	var x70 uint32
	x69, x70 = bits.Add32(x52, uint32(0x0), uint32(uint1(x68)))
	var x71 uint32
	var x72 uint32
	x71, x72 = bits.Add32(x54, uint32(0x0), uint32(uint1(x70)))
	var x73 uint32
	var x74 uint32
	x73, x74 = bits.Add32(x56, uint32(0x0), uint32(uint1(x72)))
	var x75 uint32
	var x76 uint32
	x75, x76 = bits.Add32(x58, uint32((uint1(x62) & 0x1)), uint32(uint1(x74)))
	var x77 uint32
	x77, _ = bits.Add32(x60, x62, uint32(uint1(x76)))
	var x79 uint32
	cmovznzU32(&x79, x44, arg4, x63)
	var x80 uint32
	cmovznzU32(&x80, x44, uint32(0x0), x65)
	var x81 uint32
	cmovznzU32(&x81, x44, uint32(0x0), x67)
	var x82 uint32
	cmovznzU32(&x82, x44, uint32(0x0), x69)
	var x83 uint32
	cmovznzU32(&x83, x44, uint32(0x0), x71)
	var x84 uint32
	cmovznzU32(&x84, x44, uint32(0x0), x73)
	var x85 uint32
	cmovznzU32(&x85, x44, uint32(0x0), x75)
	var x86 uint32
	cmovznzU32(&x86, x44, uint32(0x0), x77)
	x87 := uint1((arg5 >> 31))
	x88 := (uint32((uint64((^arg5)) + uint64(0x1))) & 0xffffffff)
	var x89 uint32
	var x90 uint32
	x89, x90 = bits.Sub32(uint32(0x0), x88, uint32(0x0))
	var x91 uint32
	var x92 uint32
	x91, x92 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x90)))
	var x93 uint32
	var x94 uint32
	x93, x94 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x92)))
	var x95 uint32
	var x96 uint32
	x95, x96 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x94)))
	var x97 uint32
	var x98 uint32
	x97, x98 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x96)))
	var x99 uint32
	var x100 uint32
	x99, x100 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x98)))
	var x101 uint32
	var x102 uint32
	x101, x102 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x100)))
	var x103 uint32
	var x104 uint32
	x103, x104 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x102)))
	var x105 uint32
	cmovznzU32(&x105, uint1(x104), uint32(0x0), 0xffffffff)
	var x106 uint32
	var x107 uint32
	x106, x107 = bits.Add32(x89, x105, uint32(0x0))
	var x108 uint32
	var x109 uint32
	x108, x109 = bits.Add32(x91, x105, uint32(uint1(x107)))
	var x110 uint32
	var x111 uint32
	x110, x111 = bits.Add32(x93, x105, uint32(uint1(x109)))
	var x112 uint32
	var x113 uint32
	x112, x113 = bits.Add32(x95, uint32(0x0), uint32(uint1(x111)))
	var x114 uint32
	var x115 uint32
	x114, x115 = bits.Add32(x97, uint32(0x0), uint32(uint1(x113)))
	var x116 uint32
	var x117 uint32
	x116, x117 = bits.Add32(x99, uint32(0x0), uint32(uint1(x115)))
	var x118 uint32
	var x119 uint32
	x118, x119 = bits.Add32(x101, uint32((uint1(x105) & 0x1)), uint32(uint1(x117)))
	var x120 uint32
	x120, _ = bits.Add32(x103, x105, uint32(uint1(x119)))
	var x122 uint32
	cmovznzU32(&x122, x87, arg5, x106)
	var x123 uint32
	cmovznzU32(&x123, x87, uint32(0x0), x108)
	var x124 uint32
	cmovznzU32(&x124, x87, uint32(0x0), x110)
	var x125 uint32
	cmovznzU32(&x125, x87, uint32(0x0), x112)
	var x126 uint32
	cmovznzU32(&x126, x87, uint32(0x0), x114)
	var x127 uint32
	cmovznzU32(&x127, x87, uint32(0x0), x116)
	var x128 uint32
	cmovznzU32(&x128, x87, uint32(0x0), x118)
	var x129 uint32
	cmovznzU32(&x129, x87, uint32(0x0), x120)
	x130 := uint1((arg6 >> 31))
	x131 := (uint32((uint64((^arg6)) + uint64(0x1))) & 0xffffffff)
	var x132 uint32
	var x133 uint32
	x132, x133 = bits.Sub32(uint32(0x0), x131, uint32(0x0))
	var x134 uint32
	var x135 uint32
	x134, x135 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x133)))
	var x136 uint32
	var x137 uint32
	x136, x137 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x135)))
	var x138 uint32
	var x139 uint32
	x138, x139 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x137)))
	var x140 uint32
	var x141 uint32
	x140, x141 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x139)))
	var x142 uint32
	var x143 uint32
	x142, x143 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x141)))
	var x144 uint32
	var x145 uint32
	x144, x145 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x143)))
	var x146 uint32
	var x147 uint32
	x146, x147 = bits.Sub32(uint32(0x0), uint32(0x0), uint32(uint1(x145)))
	var x148 uint32
	cmovznzU32(&x148, uint1(x147), uint32(0x0), 0xffffffff)
	var x149 uint32
	var x150 uint32
	x149, x150 = bits.Add32(x132, x148, uint32(0x0))
	var x151 uint32
	var x152 uint32
	x151, x152 = bits.Add32(x134, x148, uint32(uint1(x150)))
	var x153 uint32
	var x154 uint32
	x153, x154 = bits.Add32(x136, x148, uint32(uint1(x152)))
	var x155 uint32
	var x156 uint32
	x155, x156 = bits.Add32(x138, uint32(0x0), uint32(uint1(x154)))
	var x157 uint32
	var x158 uint32
	x157, x158 = bits.Add32(x140, uint32(0x0), uint32(uint1(x156)))
	var x159 uint32
	var x160 uint32
	x159, x160 = bits.Add32(x142, uint32(0x0), uint32(uint1(x158)))
	var x161 uint32
	var x162 uint32
	x161, x162 = bits.Add32(x144, uint32((uint1(x148) & 0x1)), uint32(uint1(x160)))
	var x163 uint32
	x163, _ = bits.Add32(x146, x148, uint32(uint1(x162)))
	var x165 uint32
	cmovznzU32(&x165, x130, arg6, x149)
	var x166 uint32
	cmovznzU32(&x166, x130, uint32(0x0), x151)
	var x167 uint32
	cmovznzU32(&x167, x130, uint32(0x0), x153)
	var x168 uint32
	cmovznzU32(&x168, x130, uint32(0x0), x155)
	var x169 uint32
	cmovznzU32(&x169, x130, uint32(0x0), x157)
	var x170 uint32
	cmovznzU32(&x170, x130, uint32(0x0), x159)
	var x171 uint32
	cmovznzU32(&x171, x130, uint32(0x0), x161)
	var x172 uint32
	cmovznzU32(&x172, x130, uint32(0x0), x163)
	var x173 uint32
	var x174 uint32
	x174, x173 = bits.Mul32(x36, arg1[7])
	var x175 uint32
	var x176 uint32
	x176, x175 = bits.Mul32(x36, arg1[6])
	var x177 uint32
	var x178 uint32
	x178, x177 = bits.Mul32(x36, arg1[5])
	var x179 uint32
	var x180 uint32
	x180, x179 = bits.Mul32(x36, arg1[4])
	var x181 uint32
	var x182 uint32
	x182, x181 = bits.Mul32(x36, arg1[3])
	var x183 uint32
	var x184 uint32
	x184, x183 = bits.Mul32(x36, arg1[2])
	var x185 uint32
	var x186 uint32
	x186, x185 = bits.Mul32(x36, arg1[1])
	var x187 uint32
	var x188 uint32
	x188, x187 = bits.Mul32(x36, arg1[0])
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x188, x185, uint32(0x0))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x186, x183, uint32(uint1(x190)))
	var x193 uint32
	var x194 uint32
	x193, x194 = bits.Add32(x184, x181, uint32(uint1(x192)))
	var x195 uint32
	var x196 uint32
	x195, x196 = bits.Add32(x182, x179, uint32(uint1(x194)))
	var x197 uint32
	var x198 uint32
	x197, x198 = bits.Add32(x180, x177, uint32(uint1(x196)))
	var x199 uint32
	var x200 uint32
	x199, x200 = bits.Add32(x178, x175, uint32(uint1(x198)))
	var x201 uint32
	var x202 uint32
	x201, x202 = bits.Add32(x176, x173, uint32(uint1(x200)))
	x203 := (uint32(uint1(x202)) + x174)
	var x204 uint32
	var x205 uint32
	x205, x204 = bits.Mul32(x187, 0xffffffff)
	var x206 uint32
	var x207 uint32
	x207, x206 = bits.Mul32(x187, 0xffffffff)
	var x208 uint32
	var x209 uint32
	x209, x208 = bits.Mul32(x187, 0xffffffff)
	var x210 uint32
	var x211 uint32
	x211, x210 = bits.Mul32(x187, 0xffffffff)
	var x212 uint32
	var x213 uint32
	x212, x213 = bits.Add32(x211, x208, uint32(0x0))
	var x214 uint32
	var x215 uint32
	x214, x215 = bits.Add32(x209, x206, uint32(uint1(x213)))
	x216 := (uint32(uint1(x215)) + x207)
	var x218 uint32
	_, x218 = bits.Add32(x187, x210, uint32(0x0))
	var x219 uint32
	var x220 uint32
	x219, x220 = bits.Add32(x189, x212, uint32(uint1(x218)))
	var x221 uint32
	var x222 uint32
	x221, x222 = bits.Add32(x191, x214, uint32(uint1(x220)))
	var x223 uint32
	var x224 uint32
	x223, x224 = bits.Add32(x193, x216, uint32(uint1(x222)))
	var x225 uint32
	var x226 uint32
	x225, x226 = bits.Add32(x195, uint32(0x0), uint32(uint1(x224)))
	var x227 uint32
	var x228 uint32
	x227, x228 = bits.Add32(x197, uint32(0x0), uint32(uint1(x226)))
	var x229 uint32
	var x230 uint32
	x229, x230 = bits.Add32(x199, x187, uint32(uint1(x228)))
	var x231 uint32
	var x232 uint32
	x231, x232 = bits.Add32(x201, x204, uint32(uint1(x230)))
	var x233 uint32
	var x234 uint32
	x233, x234 = bits.Add32(x203, x205, uint32(uint1(x232)))
	var x235 uint32
	var x236 uint32
	x236, x235 = bits.Mul32(x37, arg1[7])
	var x237 uint32
	var x238 uint32
	x238, x237 = bits.Mul32(x37, arg1[6])
	var x239 uint32
	var x240 uint32
	x240, x239 = bits.Mul32(x37, arg1[5])
	var x241 uint32
	var x242 uint32
	x242, x241 = bits.Mul32(x37, arg1[4])
	var x243 uint32
	var x244 uint32
	x244, x243 = bits.Mul32(x37, arg1[3])
	var x245 uint32
	var x246 uint32
	x246, x245 = bits.Mul32(x37, arg1[2])
	var x247 uint32
	var x248 uint32
	x248, x247 = bits.Mul32(x37, arg1[1])
	var x249 uint32
	var x250 uint32
	x250, x249 = bits.Mul32(x37, arg1[0])
	var x251 uint32
	var x252 uint32
	x251, x252 = bits.Add32(x250, x247, uint32(0x0))
	var x253 uint32
	var x254 uint32
	x253, x254 = bits.Add32(x248, x245, uint32(uint1(x252)))
	var x255 uint32
	var x256 uint32
	x255, x256 = bits.Add32(x246, x243, uint32(uint1(x254)))
	var x257 uint32
	var x258 uint32
	x257, x258 = bits.Add32(x244, x241, uint32(uint1(x256)))
	var x259 uint32
	var x260 uint32
	x259, x260 = bits.Add32(x242, x239, uint32(uint1(x258)))
	var x261 uint32
	var x262 uint32
	x261, x262 = bits.Add32(x240, x237, uint32(uint1(x260)))
	var x263 uint32
	var x264 uint32
	x263, x264 = bits.Add32(x238, x235, uint32(uint1(x262)))
	x265 := (uint32(uint1(x264)) + x236)
	var x266 uint32
	var x267 uint32
	x266, x267 = bits.Add32(x219, x249, uint32(0x0))
	var x268 uint32
	var x269 uint32
	x268, x269 = bits.Add32(x221, x251, uint32(uint1(x267)))
	var x270 uint32
	var x271 uint32
	x270, x271 = bits.Add32(x223, x253, uint32(uint1(x269)))
	var x272 uint32
	var x273 uint32
	x272, x273 = bits.Add32(x225, x255, uint32(uint1(x271)))
	var x274 uint32
	var x275 uint32
	x274, x275 = bits.Add32(x227, x257, uint32(uint1(x273)))
	var x276 uint32
	var x277 uint32
	x276, x277 = bits.Add32(x229, x259, uint32(uint1(x275)))
	var x278 uint32
	var x279 uint32
	x278, x279 = bits.Add32(x231, x261, uint32(uint1(x277)))
	var x280 uint32
	var x281 uint32
	x280, x281 = bits.Add32(x233, x263, uint32(uint1(x279)))
	var x282 uint32
	var x283 uint32
	x282, x283 = bits.Add32(uint32(uint1(x234)), x265, uint32(uint1(x281)))
	var x284 uint32
	var x285 uint32
	x285, x284 = bits.Mul32(x266, 0xffffffff)
	var x286 uint32
	var x287 uint32
	x287, x286 = bits.Mul32(x266, 0xffffffff)
	var x288 uint32
	var x289 uint32
	x289, x288 = bits.Mul32(x266, 0xffffffff)
	var x290 uint32
	var x291 uint32
	x291, x290 = bits.Mul32(x266, 0xffffffff)
	var x292 uint32
	var x293 uint32
	x292, x293 = bits.Add32(x291, x288, uint32(0x0))
	var x294 uint32
	var x295 uint32
	x294, x295 = bits.Add32(x289, x286, uint32(uint1(x293)))
	x296 := (uint32(uint1(x295)) + x287)
	var x298 uint32
	_, x298 = bits.Add32(x266, x290, uint32(0x0))
	var x299 uint32
	var x300 uint32
	x299, x300 = bits.Add32(x268, x292, uint32(uint1(x298)))
	var x301 uint32
	var x302 uint32
	x301, x302 = bits.Add32(x270, x294, uint32(uint1(x300)))
	var x303 uint32
	var x304 uint32
	x303, x304 = bits.Add32(x272, x296, uint32(uint1(x302)))
	var x305 uint32
	var x306 uint32
	x305, x306 = bits.Add32(x274, uint32(0x0), uint32(uint1(x304)))
	var x307 uint32
	var x308 uint32
	x307, x308 = bits.Add32(x276, uint32(0x0), uint32(uint1(x306)))
	var x309 uint32
	var x310 uint32
	x309, x310 = bits.Add32(x278, x266, uint32(uint1(x308)))
	var x311 uint32
	var x312 uint32
	x311, x312 = bits.Add32(x280, x284, uint32(uint1(x310)))
	var x313 uint32
	var x314 uint32
	x313, x314 = bits.Add32(x282, x285, uint32(uint1(x312)))
	x315 := (uint32(uint1(x314)) + uint32(uint1(x283)))
	var x316 uint32
	var x317 uint32
	x317, x316 = bits.Mul32(x38, arg1[7])
	var x318 uint32
	var x319 uint32
	x319, x318 = bits.Mul32(x38, arg1[6])
	var x320 uint32
	var x321 uint32
	x321, x320 = bits.Mul32(x38, arg1[5])
	var x322 uint32
	var x323 uint32
	x323, x322 = bits.Mul32(x38, arg1[4])
	var x324 uint32
	var x325 uint32
	x325, x324 = bits.Mul32(x38, arg1[3])
	var x326 uint32
	var x327 uint32
	x327, x326 = bits.Mul32(x38, arg1[2])
	var x328 uint32
	var x329 uint32
	x329, x328 = bits.Mul32(x38, arg1[1])
	var x330 uint32
	var x331 uint32
	x331, x330 = bits.Mul32(x38, arg1[0])
	var x332 uint32
	var x333 uint32
	x332, x333 = bits.Add32(x331, x328, uint32(0x0))
	var x334 uint32
	var x335 uint32
	x334, x335 = bits.Add32(x329, x326, uint32(uint1(x333)))
	var x336 uint32
	var x337 uint32
	x336, x337 = bits.Add32(x327, x324, uint32(uint1(x335)))
	var x338 uint32
	var x339 uint32
	x338, x339 = bits.Add32(x325, x322, uint32(uint1(x337)))
	var x340 uint32
	var x341 uint32
	x340, x341 = bits.Add32(x323, x320, uint32(uint1(x339)))
	var x342 uint32
	var x343 uint32
	x342, x343 = bits.Add32(x321, x318, uint32(uint1(x341)))
	var x344 uint32
	var x345 uint32
	x344, x345 = bits.Add32(x319, x316, uint32(uint1(x343)))
	x346 := (uint32(uint1(x345)) + x317)
	var x347 uint32
	var x348 uint32
	x347, x348 = bits.Add32(x299, x330, uint32(0x0))
	var x349 uint32
	var x350 uint32
	x349, x350 = bits.Add32(x301, x332, uint32(uint1(x348)))
	var x351 uint32
	var x352 uint32
	x351, x352 = bits.Add32(x303, x334, uint32(uint1(x350)))
	var x353 uint32
	var x354 uint32
	x353, x354 = bits.Add32(x305, x336, uint32(uint1(x352)))
	var x355 uint32
	var x356 uint32
	x355, x356 = bits.Add32(x307, x338, uint32(uint1(x354)))
	var x357 uint32
	var x358 uint32
	x357, x358 = bits.Add32(x309, x340, uint32(uint1(x356)))
	var x359 uint32
	var x360 uint32
	x359, x360 = bits.Add32(x311, x342, uint32(uint1(x358)))
	var x361 uint32
	var x362 uint32
	x361, x362 = bits.Add32(x313, x344, uint32(uint1(x360)))
	var x363 uint32
	var x364 uint32
	x363, x364 = bits.Add32(x315, x346, uint32(uint1(x362)))
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x347, 0xffffffff)
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x347, 0xffffffff)
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x347, 0xffffffff)
	var x371 uint32
	var x372 uint32
	x372, x371 = bits.Mul32(x347, 0xffffffff)
	var x373 uint32
	var x374 uint32
	x373, x374 = bits.Add32(x372, x369, uint32(0x0))
	var x375 uint32
	var x376 uint32
	x375, x376 = bits.Add32(x370, x367, uint32(uint1(x374)))
	x377 := (uint32(uint1(x376)) + x368)
	var x379 uint32
	_, x379 = bits.Add32(x347, x371, uint32(0x0))
	var x380 uint32
	var x381 uint32
	x380, x381 = bits.Add32(x349, x373, uint32(uint1(x379)))
	var x382 uint32
	var x383 uint32
	x382, x383 = bits.Add32(x351, x375, uint32(uint1(x381)))
	var x384 uint32
	var x385 uint32
	x384, x385 = bits.Add32(x353, x377, uint32(uint1(x383)))
	var x386 uint32
	var x387 uint32
	x386, x387 = bits.Add32(x355, uint32(0x0), uint32(uint1(x385)))
	var x388 uint32
	var x389 uint32
	x388, x389 = bits.Add32(x357, uint32(0x0), uint32(uint1(x387)))
	var x390 uint32
	var x391 uint32
	x390, x391 = bits.Add32(x359, x347, uint32(uint1(x389)))
	var x392 uint32
	var x393 uint32
	x392, x393 = bits.Add32(x361, x365, uint32(uint1(x391)))
	var x394 uint32
	var x395 uint32
	x394, x395 = bits.Add32(x363, x366, uint32(uint1(x393)))
	x396 := (uint32(uint1(x395)) + uint32(uint1(x364)))
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(x39, arg1[7])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(x39, arg1[6])
	var x401 uint32
	var x402 uint32
	x402, x401 = bits.Mul32(x39, arg1[5])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(x39, arg1[4])
	var x405 uint32
	var x406 uint32
	x406, x405 = bits.Mul32(x39, arg1[3])
	var x407 uint32
	var x408 uint32
	x408, x407 = bits.Mul32(x39, arg1[2])
	var x409 uint32
	var x410 uint32
	x410, x409 = bits.Mul32(x39, arg1[1])
	var x411 uint32
	var x412 uint32
	x412, x411 = bits.Mul32(x39, arg1[0])
	var x413 uint32
	var x414 uint32
	x413, x414 = bits.Add32(x412, x409, uint32(0x0))
	var x415 uint32
	var x416 uint32
	x415, x416 = bits.Add32(x410, x407, uint32(uint1(x414)))
	var x417 uint32
	var x418 uint32
	x417, x418 = bits.Add32(x408, x405, uint32(uint1(x416)))
	var x419 uint32
	var x420 uint32
	x419, x420 = bits.Add32(x406, x403, uint32(uint1(x418)))
	var x421 uint32
	var x422 uint32
	x421, x422 = bits.Add32(x404, x401, uint32(uint1(x420)))
	var x423 uint32
	var x424 uint32
	x423, x424 = bits.Add32(x402, x399, uint32(uint1(x422)))
	var x425 uint32
	var x426 uint32
	x425, x426 = bits.Add32(x400, x397, uint32(uint1(x424)))
	x427 := (uint32(uint1(x426)) + x398)
	var x428 uint32
	var x429 uint32
	x428, x429 = bits.Add32(x380, x411, uint32(0x0))
	var x430 uint32
	var x431 uint32
	x430, x431 = bits.Add32(x382, x413, uint32(uint1(x429)))
	var x432 uint32
	var x433 uint32
	x432, x433 = bits.Add32(x384, x415, uint32(uint1(x431)))
	var x434 uint32
	var x435 uint32
	x434, x435 = bits.Add32(x386, x417, uint32(uint1(x433)))
	var x436 uint32
	var x437 uint32
	x436, x437 = bits.Add32(x388, x419, uint32(uint1(x435)))
	var x438 uint32
	var x439 uint32
	x438, x439 = bits.Add32(x390, x421, uint32(uint1(x437)))
	var x440 uint32
	var x441 uint32
	x440, x441 = bits.Add32(x392, x423, uint32(uint1(x439)))
	var x442 uint32
	var x443 uint32
	x442, x443 = bits.Add32(x394, x425, uint32(uint1(x441)))
	var x444 uint32
	var x445 uint32
	x444, x445 = bits.Add32(x396, x427, uint32(uint1(x443)))
	var x446 uint32
	var x447 uint32
	x447, x446 = bits.Mul32(x428, 0xffffffff)
	var x448 uint32
	var x449 uint32
	x449, x448 = bits.Mul32(x428, 0xffffffff)
	var x450 uint32
	var x451 uint32
	x451, x450 = bits.Mul32(x428, 0xffffffff)
	var x452 uint32
	var x453 uint32
	x453, x452 = bits.Mul32(x428, 0xffffffff)
	var x454 uint32
	var x455 uint32
	x454, x455 = bits.Add32(x453, x450, uint32(0x0))
	var x456 uint32
	var x457 uint32
	x456, x457 = bits.Add32(x451, x448, uint32(uint1(x455)))
	x458 := (uint32(uint1(x457)) + x449)
	var x460 uint32
	_, x460 = bits.Add32(x428, x452, uint32(0x0))
	var x461 uint32
	var x462 uint32
	x461, x462 = bits.Add32(x430, x454, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x432, x456, uint32(uint1(x462)))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x434, x458, uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x436, uint32(0x0), uint32(uint1(x466)))
	var x469 uint32
	var x470 uint32
	x469, x470 = bits.Add32(x438, uint32(0x0), uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x440, x428, uint32(uint1(x470)))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x442, x446, uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x444, x447, uint32(uint1(x474)))
	x477 := (uint32(uint1(x476)) + uint32(uint1(x445)))
	var x478 uint32
	var x479 uint32
	x479, x478 = bits.Mul32(x40, arg1[7])
	var x480 uint32
	var x481 uint32
	x481, x480 = bits.Mul32(x40, arg1[6])
	var x482 uint32
	var x483 uint32
	x483, x482 = bits.Mul32(x40, arg1[5])
	var x484 uint32
	var x485 uint32
	x485, x484 = bits.Mul32(x40, arg1[4])
	var x486 uint32
	var x487 uint32
	x487, x486 = bits.Mul32(x40, arg1[3])
	var x488 uint32
	var x489 uint32
	x489, x488 = bits.Mul32(x40, arg1[2])
	var x490 uint32
	var x491 uint32
	x491, x490 = bits.Mul32(x40, arg1[1])
	var x492 uint32
	var x493 uint32
	x493, x492 = bits.Mul32(x40, arg1[0])
	var x494 uint32
	var x495 uint32
	x494, x495 = bits.Add32(x493, x490, uint32(0x0))
	var x496 uint32
	var x497 uint32
	x496, x497 = bits.Add32(x491, x488, uint32(uint1(x495)))
	var x498 uint32
	var x499 uint32
	x498, x499 = bits.Add32(x489, x486, uint32(uint1(x497)))
	var x500 uint32
	var x501 uint32
	x500, x501 = bits.Add32(x487, x484, uint32(uint1(x499)))
	var x502 uint32
	var x503 uint32
	x502, x503 = bits.Add32(x485, x482, uint32(uint1(x501)))
	var x504 uint32
	var x505 uint32
	x504, x505 = bits.Add32(x483, x480, uint32(uint1(x503)))
	var x506 uint32
	var x507 uint32
	x506, x507 = bits.Add32(x481, x478, uint32(uint1(x505)))
	x508 := (uint32(uint1(x507)) + x479)
	var x509 uint32
	var x510 uint32
	x509, x510 = bits.Add32(x461, x492, uint32(0x0))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x463, x494, uint32(uint1(x510)))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x465, x496, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x467, x498, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x469, x500, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x471, x502, uint32(uint1(x518)))
	var x521 uint32
	var x522 uint32
	x521, x522 = bits.Add32(x473, x504, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x475, x506, uint32(uint1(x522)))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x477, x508, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x528, x527 = bits.Mul32(x509, 0xffffffff)
	var x529 uint32
	var x530 uint32
	x530, x529 = bits.Mul32(x509, 0xffffffff)
	var x531 uint32
	var x532 uint32
	x532, x531 = bits.Mul32(x509, 0xffffffff)
	var x533 uint32
	var x534 uint32
	x534, x533 = bits.Mul32(x509, 0xffffffff)
	var x535 uint32
	var x536 uint32
	x535, x536 = bits.Add32(x534, x531, uint32(0x0))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x532, x529, uint32(uint1(x536)))
	x539 := (uint32(uint1(x538)) + x530)
	var x541 uint32
	_, x541 = bits.Add32(x509, x533, uint32(0x0))
	var x542 uint32
	var x543 uint32
	x542, x543 = bits.Add32(x511, x535, uint32(uint1(x541)))
	var x544 uint32
	var x545 uint32
	x544, x545 = bits.Add32(x513, x537, uint32(uint1(x543)))
	var x546 uint32
	var x547 uint32
	x546, x547 = bits.Add32(x515, x539, uint32(uint1(x545)))
	var x548 uint32
	var x549 uint32
	x548, x549 = bits.Add32(x517, uint32(0x0), uint32(uint1(x547)))
	var x550 uint32
	var x551 uint32
	x550, x551 = bits.Add32(x519, uint32(0x0), uint32(uint1(x549)))
	var x552 uint32
	var x553 uint32
	x552, x553 = bits.Add32(x521, x509, uint32(uint1(x551)))
	var x554 uint32
	var x555 uint32
	x554, x555 = bits.Add32(x523, x527, uint32(uint1(x553)))
	var x556 uint32
	var x557 uint32
	x556, x557 = bits.Add32(x525, x528, uint32(uint1(x555)))
	x558 := (uint32(uint1(x557)) + uint32(uint1(x526)))
	var x559 uint32
	var x560 uint32
	x560, x559 = bits.Mul32(x41, arg1[7])
	var x561 uint32
	var x562 uint32
	x562, x561 = bits.Mul32(x41, arg1[6])
	var x563 uint32
	var x564 uint32
	x564, x563 = bits.Mul32(x41, arg1[5])
	var x565 uint32
	var x566 uint32
	x566, x565 = bits.Mul32(x41, arg1[4])
	var x567 uint32
	var x568 uint32
	x568, x567 = bits.Mul32(x41, arg1[3])
	var x569 uint32
	var x570 uint32
	x570, x569 = bits.Mul32(x41, arg1[2])
	var x571 uint32
	var x572 uint32
	x572, x571 = bits.Mul32(x41, arg1[1])
	var x573 uint32
	var x574 uint32
	x574, x573 = bits.Mul32(x41, arg1[0])
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x574, x571, uint32(0x0))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x572, x569, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x570, x567, uint32(uint1(x578)))
	var x581 uint32
	var x582 uint32
	x581, x582 = bits.Add32(x568, x565, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x566, x563, uint32(uint1(x582)))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x564, x561, uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x562, x559, uint32(uint1(x586)))
	x589 := (uint32(uint1(x588)) + x560)
	var x590 uint32
	var x591 uint32
	x590, x591 = bits.Add32(x542, x573, uint32(0x0))
	var x592 uint32
	var x593 uint32
	x592, x593 = bits.Add32(x544, x575, uint32(uint1(x591)))
	var x594 uint32
	var x595 uint32
	x594, x595 = bits.Add32(x546, x577, uint32(uint1(x593)))
	var x596 uint32
	var x597 uint32
	x596, x597 = bits.Add32(x548, x579, uint32(uint1(x595)))
	var x598 uint32
	var x599 uint32
	x598, x599 = bits.Add32(x550, x581, uint32(uint1(x597)))
	var x600 uint32
	var x601 uint32
	x600, x601 = bits.Add32(x552, x583, uint32(uint1(x599)))
	var x602 uint32
	var x603 uint32
	x602, x603 = bits.Add32(x554, x585, uint32(uint1(x601)))
	var x604 uint32
	var x605 uint32
	x604, x605 = bits.Add32(x556, x587, uint32(uint1(x603)))
	var x606 uint32
	var x607 uint32
	x606, x607 = bits.Add32(x558, x589, uint32(uint1(x605)))
	var x608 uint32
	var x609 uint32
	x609, x608 = bits.Mul32(x590, 0xffffffff)
	var x610 uint32
	var x611 uint32
	x611, x610 = bits.Mul32(x590, 0xffffffff)
	var x612 uint32
	var x613 uint32
	x613, x612 = bits.Mul32(x590, 0xffffffff)
	var x614 uint32
	var x615 uint32
	x615, x614 = bits.Mul32(x590, 0xffffffff)
	var x616 uint32
	var x617 uint32
	x616, x617 = bits.Add32(x615, x612, uint32(0x0))
	var x618 uint32
	var x619 uint32
	x618, x619 = bits.Add32(x613, x610, uint32(uint1(x617)))
	x620 := (uint32(uint1(x619)) + x611)
	var x622 uint32
	_, x622 = bits.Add32(x590, x614, uint32(0x0))
	var x623 uint32
	var x624 uint32
	x623, x624 = bits.Add32(x592, x616, uint32(uint1(x622)))
	var x625 uint32
	var x626 uint32
	x625, x626 = bits.Add32(x594, x618, uint32(uint1(x624)))
	var x627 uint32
	var x628 uint32
	x627, x628 = bits.Add32(x596, x620, uint32(uint1(x626)))
	var x629 uint32
	var x630 uint32
	x629, x630 = bits.Add32(x598, uint32(0x0), uint32(uint1(x628)))
	var x631 uint32
	var x632 uint32
	x631, x632 = bits.Add32(x600, uint32(0x0), uint32(uint1(x630)))
	var x633 uint32
	var x634 uint32
	x633, x634 = bits.Add32(x602, x590, uint32(uint1(x632)))
	var x635 uint32
	var x636 uint32
	x635, x636 = bits.Add32(x604, x608, uint32(uint1(x634)))
	var x637 uint32
	var x638 uint32
	x637, x638 = bits.Add32(x606, x609, uint32(uint1(x636)))
	x639 := (uint32(uint1(x638)) + uint32(uint1(x607)))
	var x640 uint32
	var x641 uint32
	x641, x640 = bits.Mul32(x42, arg1[7])
	var x642 uint32
	var x643 uint32
	x643, x642 = bits.Mul32(x42, arg1[6])
	var x644 uint32
	var x645 uint32
	x645, x644 = bits.Mul32(x42, arg1[5])
	var x646 uint32
	var x647 uint32
	x647, x646 = bits.Mul32(x42, arg1[4])
	var x648 uint32
	var x649 uint32
	x649, x648 = bits.Mul32(x42, arg1[3])
	var x650 uint32
	var x651 uint32
	x651, x650 = bits.Mul32(x42, arg1[2])
	var x652 uint32
	var x653 uint32
	x653, x652 = bits.Mul32(x42, arg1[1])
	var x654 uint32
	var x655 uint32
	x655, x654 = bits.Mul32(x42, arg1[0])
	var x656 uint32
	var x657 uint32
	x656, x657 = bits.Add32(x655, x652, uint32(0x0))
	var x658 uint32
	var x659 uint32
	x658, x659 = bits.Add32(x653, x650, uint32(uint1(x657)))
	var x660 uint32
	var x661 uint32
	x660, x661 = bits.Add32(x651, x648, uint32(uint1(x659)))
	var x662 uint32
	var x663 uint32
	x662, x663 = bits.Add32(x649, x646, uint32(uint1(x661)))
	var x664 uint32
	var x665 uint32
	x664, x665 = bits.Add32(x647, x644, uint32(uint1(x663)))
	var x666 uint32
	var x667 uint32
	x666, x667 = bits.Add32(x645, x642, uint32(uint1(x665)))
	var x668 uint32
	var x669 uint32
	x668, x669 = bits.Add32(x643, x640, uint32(uint1(x667)))
	x670 := (uint32(uint1(x669)) + x641)
	var x671 uint32
	var x672 uint32
	x671, x672 = bits.Add32(x623, x654, uint32(0x0))
	var x673 uint32
	var x674 uint32
	x673, x674 = bits.Add32(x625, x656, uint32(uint1(x672)))
	var x675 uint32
	var x676 uint32
	x675, x676 = bits.Add32(x627, x658, uint32(uint1(x674)))
	var x677 uint32
	var x678 uint32
	x677, x678 = bits.Add32(x629, x660, uint32(uint1(x676)))
	var x679 uint32
	var x680 uint32
	x679, x680 = bits.Add32(x631, x662, uint32(uint1(x678)))
	var x681 uint32
	var x682 uint32
	x681, x682 = bits.Add32(x633, x664, uint32(uint1(x680)))
	var x683 uint32
	var x684 uint32
	x683, x684 = bits.Add32(x635, x666, uint32(uint1(x682)))
	var x685 uint32
	var x686 uint32
	x685, x686 = bits.Add32(x637, x668, uint32(uint1(x684)))
	var x687 uint32
	var x688 uint32
	x687, x688 = bits.Add32(x639, x670, uint32(uint1(x686)))
	var x689 uint32
	var x690 uint32
	x690, x689 = bits.Mul32(x671, 0xffffffff)
	var x691 uint32
	var x692 uint32
	x692, x691 = bits.Mul32(x671, 0xffffffff)
	var x693 uint32
	var x694 uint32
	x694, x693 = bits.Mul32(x671, 0xffffffff)
	var x695 uint32
	var x696 uint32
	x696, x695 = bits.Mul32(x671, 0xffffffff)
	var x697 uint32
	var x698 uint32
	x697, x698 = bits.Add32(x696, x693, uint32(0x0))
	var x699 uint32
	var x700 uint32
	x699, x700 = bits.Add32(x694, x691, uint32(uint1(x698)))
	x701 := (uint32(uint1(x700)) + x692)
	var x703 uint32
	_, x703 = bits.Add32(x671, x695, uint32(0x0))
	var x704 uint32
	var x705 uint32
	x704, x705 = bits.Add32(x673, x697, uint32(uint1(x703)))
	var x706 uint32
	var x707 uint32
	x706, x707 = bits.Add32(x675, x699, uint32(uint1(x705)))
	var x708 uint32
	var x709 uint32
	x708, x709 = bits.Add32(x677, x701, uint32(uint1(x707)))
	var x710 uint32
	var x711 uint32
	x710, x711 = bits.Add32(x679, uint32(0x0), uint32(uint1(x709)))
	var x712 uint32
	var x713 uint32
	x712, x713 = bits.Add32(x681, uint32(0x0), uint32(uint1(x711)))
	var x714 uint32
	var x715 uint32
	x714, x715 = bits.Add32(x683, x671, uint32(uint1(x713)))
	var x716 uint32
	var x717 uint32
	x716, x717 = bits.Add32(x685, x689, uint32(uint1(x715)))
	var x718 uint32
	var x719 uint32
	x718, x719 = bits.Add32(x687, x690, uint32(uint1(x717)))
	x720 := (uint32(uint1(x719)) + uint32(uint1(x688)))
	var x721 uint32
	var x722 uint32
	x722, x721 = bits.Mul32(x43, arg1[7])
	var x723 uint32
	var x724 uint32
	x724, x723 = bits.Mul32(x43, arg1[6])
	var x725 uint32
	var x726 uint32
	x726, x725 = bits.Mul32(x43, arg1[5])
	var x727 uint32
	var x728 uint32
	x728, x727 = bits.Mul32(x43, arg1[4])
	var x729 uint32
	var x730 uint32
	x730, x729 = bits.Mul32(x43, arg1[3])
	var x731 uint32
	var x732 uint32
	x732, x731 = bits.Mul32(x43, arg1[2])
	var x733 uint32
	var x734 uint32
	x734, x733 = bits.Mul32(x43, arg1[1])
	var x735 uint32
	var x736 uint32
	x736, x735 = bits.Mul32(x43, arg1[0])
	var x737 uint32
	var x738 uint32
	x737, x738 = bits.Add32(x736, x733, uint32(0x0))
	var x739 uint32
	var x740 uint32
	x739, x740 = bits.Add32(x734, x731, uint32(uint1(x738)))
	var x741 uint32
	var x742 uint32
	x741, x742 = bits.Add32(x732, x729, uint32(uint1(x740)))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x730, x727, uint32(uint1(x742)))
	var x745 uint32
	var x746 uint32
	x745, x746 = bits.Add32(x728, x725, uint32(uint1(x744)))
	var x747 uint32
	var x748 uint32
	x747, x748 = bits.Add32(x726, x723, uint32(uint1(x746)))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x724, x721, uint32(uint1(x748)))
	x751 := (uint32(uint1(x750)) + x722)
	var x752 uint32
	var x753 uint32
	x752, x753 = bits.Add32(x704, x735, uint32(0x0))
	var x754 uint32
	var x755 uint32
	x754, x755 = bits.Add32(x706, x737, uint32(uint1(x753)))
	var x756 uint32
	var x757 uint32
	x756, x757 = bits.Add32(x708, x739, uint32(uint1(x755)))
	var x758 uint32
	var x759 uint32
	x758, x759 = bits.Add32(x710, x741, uint32(uint1(x757)))
	var x760 uint32
	var x761 uint32
	x760, x761 = bits.Add32(x712, x743, uint32(uint1(x759)))
	var x762 uint32
	var x763 uint32
	x762, x763 = bits.Add32(x714, x745, uint32(uint1(x761)))
	var x764 uint32
	var x765 uint32
	x764, x765 = bits.Add32(x716, x747, uint32(uint1(x763)))
	var x766 uint32
	var x767 uint32
	x766, x767 = bits.Add32(x718, x749, uint32(uint1(x765)))
	var x768 uint32
	var x769 uint32
	x768, x769 = bits.Add32(x720, x751, uint32(uint1(x767)))
	var x770 uint32
	var x771 uint32
	x771, x770 = bits.Mul32(x752, 0xffffffff)
	var x772 uint32
	var x773 uint32
	x773, x772 = bits.Mul32(x752, 0xffffffff)
	var x774 uint32
	var x775 uint32
	x775, x774 = bits.Mul32(x752, 0xffffffff)
	var x776 uint32
	var x777 uint32
	x777, x776 = bits.Mul32(x752, 0xffffffff)
	var x778 uint32
	var x779 uint32
	x778, x779 = bits.Add32(x777, x774, uint32(0x0))
	var x780 uint32
	var x781 uint32
	x780, x781 = bits.Add32(x775, x772, uint32(uint1(x779)))
	x782 := (uint32(uint1(x781)) + x773)
	var x784 uint32
	_, x784 = bits.Add32(x752, x776, uint32(0x0))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x754, x778, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x756, x780, uint32(uint1(x786)))
	var x789 uint32
	var x790 uint32
	x789, x790 = bits.Add32(x758, x782, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x760, uint32(0x0), uint32(uint1(x790)))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x762, uint32(0x0), uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x764, x752, uint32(uint1(x794)))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x766, x770, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(x768, x771, uint32(uint1(x798)))
	x801 := (uint32(uint1(x800)) + uint32(uint1(x769)))
	var x802 uint32
	var x803 uint32
	x802, x803 = bits.Sub32(x785, 0xffffffff, uint32(0x0))
	var x804 uint32
	var x805 uint32
	x804, x805 = bits.Sub32(x787, 0xffffffff, uint32(uint1(x803)))
	var x806 uint32
	var x807 uint32
	x806, x807 = bits.Sub32(x789, 0xffffffff, uint32(uint1(x805)))
	var x808 uint32
	var x809 uint32
	x808, x809 = bits.Sub32(x791, uint32(0x0), uint32(uint1(x807)))
	var x810 uint32
	var x811 uint32
	x810, x811 = bits.Sub32(x793, uint32(0x0), uint32(uint1(x809)))
	var x812 uint32
	var x813 uint32
	x812, x813 = bits.Sub32(x795, uint32(0x0), uint32(uint1(x811)))
	var x814 uint32
	var x815 uint32
	x814, x815 = bits.Sub32(x797, uint32(0x1), uint32(uint1(x813)))
	var x816 uint32
	var x817 uint32
	x816, x817 = bits.Sub32(x799, 0xffffffff, uint32(uint1(x815)))
	var x819 uint32
	_, x819 = bits.Sub32(x801, uint32(0x0), uint32(uint1(x817)))
	var x820 uint32
	cmovznzU32(&x820, uint1(x819), x802, x785)
	var x821 uint32
	cmovznzU32(&x821, uint1(x819), x804, x787)
	var x822 uint32
	cmovznzU32(&x822, uint1(x819), x806, x789)
	var x823 uint32
	cmovznzU32(&x823, uint1(x819), x808, x791)
	var x824 uint32
	cmovznzU32(&x824, uint1(x819), x810, x793)
	var x825 uint32
	cmovznzU32(&x825, uint1(x819), x812, x795)
	var x826 uint32
	cmovznzU32(&x826, uint1(x819), x814, x797)
	var x827 uint32
	cmovznzU32(&x827, uint1(x819), x816, x799)
	var x828 uint32
	var x829 uint32
	x829, x828 = bits.Mul32(x79, arg2[7])
	var x830 uint32
	var x831 uint32
	x831, x830 = bits.Mul32(x79, arg2[6])
	var x832 uint32
	var x833 uint32
	x833, x832 = bits.Mul32(x79, arg2[5])
	var x834 uint32
	var x835 uint32
	x835, x834 = bits.Mul32(x79, arg2[4])
	var x836 uint32
	var x837 uint32
	x837, x836 = bits.Mul32(x79, arg2[3])
	var x838 uint32
	var x839 uint32
	x839, x838 = bits.Mul32(x79, arg2[2])
	var x840 uint32
	var x841 uint32
	x841, x840 = bits.Mul32(x79, arg2[1])
	var x842 uint32
	var x843 uint32
	x843, x842 = bits.Mul32(x79, arg2[0])
	var x844 uint32
	var x845 uint32
	x844, x845 = bits.Add32(x843, x840, uint32(0x0))
	var x846 uint32
	var x847 uint32
	x846, x847 = bits.Add32(x841, x838, uint32(uint1(x845)))
	var x848 uint32
	var x849 uint32
	x848, x849 = bits.Add32(x839, x836, uint32(uint1(x847)))
	var x850 uint32
	var x851 uint32
	x850, x851 = bits.Add32(x837, x834, uint32(uint1(x849)))
	var x852 uint32
	var x853 uint32
	x852, x853 = bits.Add32(x835, x832, uint32(uint1(x851)))
	var x854 uint32
	var x855 uint32
	x854, x855 = bits.Add32(x833, x830, uint32(uint1(x853)))
	var x856 uint32
	var x857 uint32
	x856, x857 = bits.Add32(x831, x828, uint32(uint1(x855)))
	x858 := (uint32(uint1(x857)) + x829)
	var x859 uint32
	var x860 uint32
	x860, x859 = bits.Mul32(x842, 0xffffffff)
	var x861 uint32
	var x862 uint32
	x862, x861 = bits.Mul32(x842, 0xffffffff)
	var x863 uint32
	var x864 uint32
	x864, x863 = bits.Mul32(x842, 0xffffffff)
	var x865 uint32
	var x866 uint32
	x866, x865 = bits.Mul32(x842, 0xffffffff)
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x866, x863, uint32(0x0))
	var x869 uint32
	var x870 uint32
	x869, x870 = bits.Add32(x864, x861, uint32(uint1(x868)))
	x871 := (uint32(uint1(x870)) + x862)
	var x873 uint32
	_, x873 = bits.Add32(x842, x865, uint32(0x0))
	var x874 uint32
	var x875 uint32
	x874, x875 = bits.Add32(x844, x867, uint32(uint1(x873)))
	var x876 uint32
	var x877 uint32
	x876, x877 = bits.Add32(x846, x869, uint32(uint1(x875)))
	var x878 uint32
	var x879 uint32
	x878, x879 = bits.Add32(x848, x871, uint32(uint1(x877)))
	var x880 uint32
	var x881 uint32
	x880, x881 = bits.Add32(x850, uint32(0x0), uint32(uint1(x879)))
	var x882 uint32
	var x883 uint32
	x882, x883 = bits.Add32(x852, uint32(0x0), uint32(uint1(x881)))
	var x884 uint32
	var x885 uint32
	x884, x885 = bits.Add32(x854, x842, uint32(uint1(x883)))
	var x886 uint32
	var x887 uint32
	x886, x887 = bits.Add32(x856, x859, uint32(uint1(x885)))
	var x888 uint32
	var x889 uint32
	x888, x889 = bits.Add32(x858, x860, uint32(uint1(x887)))
	var x890 uint32
	var x891 uint32
	x891, x890 = bits.Mul32(x80, arg2[7])
	var x892 uint32
	var x893 uint32
	x893, x892 = bits.Mul32(x80, arg2[6])
	var x894 uint32
	var x895 uint32
	x895, x894 = bits.Mul32(x80, arg2[5])
	var x896 uint32
	var x897 uint32
	x897, x896 = bits.Mul32(x80, arg2[4])
	var x898 uint32
	var x899 uint32
	x899, x898 = bits.Mul32(x80, arg2[3])
	var x900 uint32
	var x901 uint32
	x901, x900 = bits.Mul32(x80, arg2[2])
	var x902 uint32
	var x903 uint32
	x903, x902 = bits.Mul32(x80, arg2[1])
	var x904 uint32
	var x905 uint32
	x905, x904 = bits.Mul32(x80, arg2[0])
	var x906 uint32
	var x907 uint32
	x906, x907 = bits.Add32(x905, x902, uint32(0x0))
	var x908 uint32
	var x909 uint32
	x908, x909 = bits.Add32(x903, x900, uint32(uint1(x907)))
	var x910 uint32
	var x911 uint32
	x910, x911 = bits.Add32(x901, x898, uint32(uint1(x909)))
	var x912 uint32
	var x913 uint32
	x912, x913 = bits.Add32(x899, x896, uint32(uint1(x911)))
	var x914 uint32
	var x915 uint32
	x914, x915 = bits.Add32(x897, x894, uint32(uint1(x913)))
	var x916 uint32
	var x917 uint32
	x916, x917 = bits.Add32(x895, x892, uint32(uint1(x915)))
	var x918 uint32
	var x919 uint32
	x918, x919 = bits.Add32(x893, x890, uint32(uint1(x917)))
	x920 := (uint32(uint1(x919)) + x891)
	var x921 uint32
	var x922 uint32
	x921, x922 = bits.Add32(x874, x904, uint32(0x0))
	var x923 uint32
	var x924 uint32
	x923, x924 = bits.Add32(x876, x906, uint32(uint1(x922)))
	var x925 uint32
	var x926 uint32
	x925, x926 = bits.Add32(x878, x908, uint32(uint1(x924)))
	var x927 uint32
	var x928 uint32
	x927, x928 = bits.Add32(x880, x910, uint32(uint1(x926)))
	var x929 uint32
	var x930 uint32
	x929, x930 = bits.Add32(x882, x912, uint32(uint1(x928)))
	var x931 uint32
	var x932 uint32
	x931, x932 = bits.Add32(x884, x914, uint32(uint1(x930)))
	var x933 uint32
	var x934 uint32
	x933, x934 = bits.Add32(x886, x916, uint32(uint1(x932)))
	var x935 uint32
	var x936 uint32
	x935, x936 = bits.Add32(x888, x918, uint32(uint1(x934)))
	var x937 uint32
	var x938 uint32
	x937, x938 = bits.Add32(uint32(uint1(x889)), x920, uint32(uint1(x936)))
	var x939 uint32
	var x940 uint32
	x940, x939 = bits.Mul32(x921, 0xffffffff)
	var x941 uint32
	var x942 uint32
	x942, x941 = bits.Mul32(x921, 0xffffffff)
	var x943 uint32
	var x944 uint32
	x944, x943 = bits.Mul32(x921, 0xffffffff)
	var x945 uint32
	var x946 uint32
	x946, x945 = bits.Mul32(x921, 0xffffffff)
	var x947 uint32
	var x948 uint32
	x947, x948 = bits.Add32(x946, x943, uint32(0x0))
	var x949 uint32
	var x950 uint32
	x949, x950 = bits.Add32(x944, x941, uint32(uint1(x948)))
	x951 := (uint32(uint1(x950)) + x942)
	var x953 uint32
	_, x953 = bits.Add32(x921, x945, uint32(0x0))
	var x954 uint32
	var x955 uint32
	x954, x955 = bits.Add32(x923, x947, uint32(uint1(x953)))
	var x956 uint32
	var x957 uint32
	x956, x957 = bits.Add32(x925, x949, uint32(uint1(x955)))
	var x958 uint32
	var x959 uint32
	x958, x959 = bits.Add32(x927, x951, uint32(uint1(x957)))
	var x960 uint32
	var x961 uint32
	x960, x961 = bits.Add32(x929, uint32(0x0), uint32(uint1(x959)))
	var x962 uint32
	var x963 uint32
	x962, x963 = bits.Add32(x931, uint32(0x0), uint32(uint1(x961)))
	var x964 uint32
	var x965 uint32
	x964, x965 = bits.Add32(x933, x921, uint32(uint1(x963)))
	var x966 uint32
	var x967 uint32
	x966, x967 = bits.Add32(x935, x939, uint32(uint1(x965)))
	var x968 uint32
	var x969 uint32
	x968, x969 = bits.Add32(x937, x940, uint32(uint1(x967)))
	x970 := (uint32(uint1(x969)) + uint32(uint1(x938)))
	var x971 uint32
	var x972 uint32
	x972, x971 = bits.Mul32(x81, arg2[7])
	var x973 uint32
	var x974 uint32
	x974, x973 = bits.Mul32(x81, arg2[6])
	var x975 uint32
	var x976 uint32
	x976, x975 = bits.Mul32(x81, arg2[5])
	var x977 uint32
	var x978 uint32
	x978, x977 = bits.Mul32(x81, arg2[4])
	var x979 uint32
	var x980 uint32
	x980, x979 = bits.Mul32(x81, arg2[3])
	var x981 uint32
	var x982 uint32
	x982, x981 = bits.Mul32(x81, arg2[2])
	var x983 uint32
	var x984 uint32
	x984, x983 = bits.Mul32(x81, arg2[1])
	var x985 uint32
	var x986 uint32
	x986, x985 = bits.Mul32(x81, arg2[0])
	var x987 uint32
	var x988 uint32
	x987, x988 = bits.Add32(x986, x983, uint32(0x0))
	var x989 uint32
	var x990 uint32
	x989, x990 = bits.Add32(x984, x981, uint32(uint1(x988)))
	var x991 uint32
	var x992 uint32
	x991, x992 = bits.Add32(x982, x979, uint32(uint1(x990)))
	var x993 uint32
	var x994 uint32
	x993, x994 = bits.Add32(x980, x977, uint32(uint1(x992)))
	var x995 uint32
	var x996 uint32
	x995, x996 = bits.Add32(x978, x975, uint32(uint1(x994)))
	var x997 uint32
	var x998 uint32
	x997, x998 = bits.Add32(x976, x973, uint32(uint1(x996)))
	var x999 uint32
	var x1000 uint32
	x999, x1000 = bits.Add32(x974, x971, uint32(uint1(x998)))
	x1001 := (uint32(uint1(x1000)) + x972)
	var x1002 uint32
	var x1003 uint32
	x1002, x1003 = bits.Add32(x954, x985, uint32(0x0))
	var x1004 uint32
	var x1005 uint32
	x1004, x1005 = bits.Add32(x956, x987, uint32(uint1(x1003)))
	var x1006 uint32
	var x1007 uint32
	x1006, x1007 = bits.Add32(x958, x989, uint32(uint1(x1005)))
	var x1008 uint32
	var x1009 uint32
	x1008, x1009 = bits.Add32(x960, x991, uint32(uint1(x1007)))
	var x1010 uint32
	var x1011 uint32
	x1010, x1011 = bits.Add32(x962, x993, uint32(uint1(x1009)))
	var x1012 uint32
	var x1013 uint32
	x1012, x1013 = bits.Add32(x964, x995, uint32(uint1(x1011)))
	var x1014 uint32
	var x1015 uint32
	x1014, x1015 = bits.Add32(x966, x997, uint32(uint1(x1013)))
	var x1016 uint32
	var x1017 uint32
	x1016, x1017 = bits.Add32(x968, x999, uint32(uint1(x1015)))
	var x1018 uint32
	var x1019 uint32
	x1018, x1019 = bits.Add32(x970, x1001, uint32(uint1(x1017)))
	var x1020 uint32
	var x1021 uint32
	x1021, x1020 = bits.Mul32(x1002, 0xffffffff)
	var x1022 uint32
	var x1023 uint32
	x1023, x1022 = bits.Mul32(x1002, 0xffffffff)
	var x1024 uint32
	var x1025 uint32
	x1025, x1024 = bits.Mul32(x1002, 0xffffffff)
	var x1026 uint32
	var x1027 uint32
	x1027, x1026 = bits.Mul32(x1002, 0xffffffff)
	var x1028 uint32
	var x1029 uint32
	x1028, x1029 = bits.Add32(x1027, x1024, uint32(0x0))
	var x1030 uint32
	var x1031 uint32
	x1030, x1031 = bits.Add32(x1025, x1022, uint32(uint1(x1029)))
	x1032 := (uint32(uint1(x1031)) + x1023)
	var x1034 uint32
	_, x1034 = bits.Add32(x1002, x1026, uint32(0x0))
	var x1035 uint32
	var x1036 uint32
	x1035, x1036 = bits.Add32(x1004, x1028, uint32(uint1(x1034)))
	var x1037 uint32
	var x1038 uint32
	x1037, x1038 = bits.Add32(x1006, x1030, uint32(uint1(x1036)))
	var x1039 uint32
	var x1040 uint32
	x1039, x1040 = bits.Add32(x1008, x1032, uint32(uint1(x1038)))
	var x1041 uint32
	var x1042 uint32
	x1041, x1042 = bits.Add32(x1010, uint32(0x0), uint32(uint1(x1040)))
	var x1043 uint32
	var x1044 uint32
	x1043, x1044 = bits.Add32(x1012, uint32(0x0), uint32(uint1(x1042)))
	var x1045 uint32
	var x1046 uint32
	x1045, x1046 = bits.Add32(x1014, x1002, uint32(uint1(x1044)))
	var x1047 uint32
	var x1048 uint32
	x1047, x1048 = bits.Add32(x1016, x1020, uint32(uint1(x1046)))
	var x1049 uint32
	var x1050 uint32
	x1049, x1050 = bits.Add32(x1018, x1021, uint32(uint1(x1048)))
	x1051 := (uint32(uint1(x1050)) + uint32(uint1(x1019)))
	var x1052 uint32
	var x1053 uint32
	x1053, x1052 = bits.Mul32(x82, arg2[7])
	var x1054 uint32
	var x1055 uint32
	x1055, x1054 = bits.Mul32(x82, arg2[6])
	var x1056 uint32
	var x1057 uint32
	x1057, x1056 = bits.Mul32(x82, arg2[5])
	var x1058 uint32
	var x1059 uint32
	x1059, x1058 = bits.Mul32(x82, arg2[4])
	var x1060 uint32
	var x1061 uint32
	x1061, x1060 = bits.Mul32(x82, arg2[3])
	var x1062 uint32
	var x1063 uint32
	x1063, x1062 = bits.Mul32(x82, arg2[2])
	var x1064 uint32
	var x1065 uint32
	x1065, x1064 = bits.Mul32(x82, arg2[1])
	var x1066 uint32
	var x1067 uint32
	x1067, x1066 = bits.Mul32(x82, arg2[0])
	var x1068 uint32
	var x1069 uint32
	x1068, x1069 = bits.Add32(x1067, x1064, uint32(0x0))
	var x1070 uint32
	var x1071 uint32
	x1070, x1071 = bits.Add32(x1065, x1062, uint32(uint1(x1069)))
	var x1072 uint32
	var x1073 uint32
	x1072, x1073 = bits.Add32(x1063, x1060, uint32(uint1(x1071)))
	var x1074 uint32
	var x1075 uint32
	x1074, x1075 = bits.Add32(x1061, x1058, uint32(uint1(x1073)))
	var x1076 uint32
	var x1077 uint32
	x1076, x1077 = bits.Add32(x1059, x1056, uint32(uint1(x1075)))
	var x1078 uint32
	var x1079 uint32
	x1078, x1079 = bits.Add32(x1057, x1054, uint32(uint1(x1077)))
	var x1080 uint32
	var x1081 uint32
	x1080, x1081 = bits.Add32(x1055, x1052, uint32(uint1(x1079)))
	x1082 := (uint32(uint1(x1081)) + x1053)
	var x1083 uint32
	var x1084 uint32
	x1083, x1084 = bits.Add32(x1035, x1066, uint32(0x0))
	var x1085 uint32
	var x1086 uint32
	x1085, x1086 = bits.Add32(x1037, x1068, uint32(uint1(x1084)))
	var x1087 uint32
	var x1088 uint32
	x1087, x1088 = bits.Add32(x1039, x1070, uint32(uint1(x1086)))
	var x1089 uint32
	var x1090 uint32
	x1089, x1090 = bits.Add32(x1041, x1072, uint32(uint1(x1088)))
	var x1091 uint32
	var x1092 uint32
	x1091, x1092 = bits.Add32(x1043, x1074, uint32(uint1(x1090)))
	var x1093 uint32
	var x1094 uint32
	x1093, x1094 = bits.Add32(x1045, x1076, uint32(uint1(x1092)))
	var x1095 uint32
	var x1096 uint32
	x1095, x1096 = bits.Add32(x1047, x1078, uint32(uint1(x1094)))
	var x1097 uint32
	var x1098 uint32
	x1097, x1098 = bits.Add32(x1049, x1080, uint32(uint1(x1096)))
	var x1099 uint32
	var x1100 uint32
	x1099, x1100 = bits.Add32(x1051, x1082, uint32(uint1(x1098)))
	var x1101 uint32
	var x1102 uint32
	x1102, x1101 = bits.Mul32(x1083, 0xffffffff)
	var x1103 uint32
	var x1104 uint32
	x1104, x1103 = bits.Mul32(x1083, 0xffffffff)
	var x1105 uint32
	var x1106 uint32
	x1106, x1105 = bits.Mul32(x1083, 0xffffffff)
	var x1107 uint32
	var x1108 uint32
	x1108, x1107 = bits.Mul32(x1083, 0xffffffff)
	var x1109 uint32
	var x1110 uint32
	x1109, x1110 = bits.Add32(x1108, x1105, uint32(0x0))
	var x1111 uint32
	var x1112 uint32
	x1111, x1112 = bits.Add32(x1106, x1103, uint32(uint1(x1110)))
	x1113 := (uint32(uint1(x1112)) + x1104)
	var x1115 uint32
	_, x1115 = bits.Add32(x1083, x1107, uint32(0x0))
	var x1116 uint32
	var x1117 uint32
	x1116, x1117 = bits.Add32(x1085, x1109, uint32(uint1(x1115)))
	var x1118 uint32
	var x1119 uint32
	x1118, x1119 = bits.Add32(x1087, x1111, uint32(uint1(x1117)))
	var x1120 uint32
	var x1121 uint32
	x1120, x1121 = bits.Add32(x1089, x1113, uint32(uint1(x1119)))
	var x1122 uint32
	var x1123 uint32
	x1122, x1123 = bits.Add32(x1091, uint32(0x0), uint32(uint1(x1121)))
	var x1124 uint32
	var x1125 uint32
	x1124, x1125 = bits.Add32(x1093, uint32(0x0), uint32(uint1(x1123)))
	var x1126 uint32
	var x1127 uint32
	x1126, x1127 = bits.Add32(x1095, x1083, uint32(uint1(x1125)))
	var x1128 uint32
	var x1129 uint32
	x1128, x1129 = bits.Add32(x1097, x1101, uint32(uint1(x1127)))
	var x1130 uint32
	var x1131 uint32
	x1130, x1131 = bits.Add32(x1099, x1102, uint32(uint1(x1129)))
	x1132 := (uint32(uint1(x1131)) + uint32(uint1(x1100)))
	var x1133 uint32
	var x1134 uint32
	x1134, x1133 = bits.Mul32(x83, arg2[7])
	var x1135 uint32
	var x1136 uint32
	x1136, x1135 = bits.Mul32(x83, arg2[6])
	var x1137 uint32
	var x1138 uint32
	x1138, x1137 = bits.Mul32(x83, arg2[5])
	var x1139 uint32
	var x1140 uint32
	x1140, x1139 = bits.Mul32(x83, arg2[4])
	var x1141 uint32
	var x1142 uint32
	x1142, x1141 = bits.Mul32(x83, arg2[3])
	var x1143 uint32
	var x1144 uint32
	x1144, x1143 = bits.Mul32(x83, arg2[2])
	var x1145 uint32
	var x1146 uint32
	x1146, x1145 = bits.Mul32(x83, arg2[1])
	var x1147 uint32
	var x1148 uint32
	x1148, x1147 = bits.Mul32(x83, arg2[0])
	var x1149 uint32
	var x1150 uint32
	x1149, x1150 = bits.Add32(x1148, x1145, uint32(0x0))
	var x1151 uint32
	var x1152 uint32
	x1151, x1152 = bits.Add32(x1146, x1143, uint32(uint1(x1150)))
	var x1153 uint32
	var x1154 uint32
	x1153, x1154 = bits.Add32(x1144, x1141, uint32(uint1(x1152)))
	var x1155 uint32
	var x1156 uint32
	x1155, x1156 = bits.Add32(x1142, x1139, uint32(uint1(x1154)))
	var x1157 uint32
	var x1158 uint32
	x1157, x1158 = bits.Add32(x1140, x1137, uint32(uint1(x1156)))
	var x1159 uint32
	var x1160 uint32
	x1159, x1160 = bits.Add32(x1138, x1135, uint32(uint1(x1158)))
	var x1161 uint32
	var x1162 uint32
	x1161, x1162 = bits.Add32(x1136, x1133, uint32(uint1(x1160)))
	x1163 := (uint32(uint1(x1162)) + x1134)
	var x1164 uint32
	var x1165 uint32
	x1164, x1165 = bits.Add32(x1116, x1147, uint32(0x0))
	var x1166 uint32
	var x1167 uint32
	x1166, x1167 = bits.Add32(x1118, x1149, uint32(uint1(x1165)))
	var x1168 uint32
	var x1169 uint32
	x1168, x1169 = bits.Add32(x1120, x1151, uint32(uint1(x1167)))
	var x1170 uint32
	var x1171 uint32
	x1170, x1171 = bits.Add32(x1122, x1153, uint32(uint1(x1169)))
	var x1172 uint32
	var x1173 uint32
	x1172, x1173 = bits.Add32(x1124, x1155, uint32(uint1(x1171)))
	var x1174 uint32
	var x1175 uint32
	x1174, x1175 = bits.Add32(x1126, x1157, uint32(uint1(x1173)))
	var x1176 uint32
	var x1177 uint32
	x1176, x1177 = bits.Add32(x1128, x1159, uint32(uint1(x1175)))
	var x1178 uint32
	var x1179 uint32
	x1178, x1179 = bits.Add32(x1130, x1161, uint32(uint1(x1177)))
	var x1180 uint32
	var x1181 uint32
	x1180, x1181 = bits.Add32(x1132, x1163, uint32(uint1(x1179)))
	var x1182 uint32
	var x1183 uint32
	x1183, x1182 = bits.Mul32(x1164, 0xffffffff)
	var x1184 uint32
	var x1185 uint32
	x1185, x1184 = bits.Mul32(x1164, 0xffffffff)
	var x1186 uint32
	var x1187 uint32
	x1187, x1186 = bits.Mul32(x1164, 0xffffffff)
	var x1188 uint32
	var x1189 uint32
	x1189, x1188 = bits.Mul32(x1164, 0xffffffff)
	var x1190 uint32
	var x1191 uint32
	x1190, x1191 = bits.Add32(x1189, x1186, uint32(0x0))
	var x1192 uint32
	var x1193 uint32
	x1192, x1193 = bits.Add32(x1187, x1184, uint32(uint1(x1191)))
	x1194 := (uint32(uint1(x1193)) + x1185)
	var x1196 uint32
	_, x1196 = bits.Add32(x1164, x1188, uint32(0x0))
	var x1197 uint32
	var x1198 uint32
	x1197, x1198 = bits.Add32(x1166, x1190, uint32(uint1(x1196)))
	var x1199 uint32
	var x1200 uint32
	x1199, x1200 = bits.Add32(x1168, x1192, uint32(uint1(x1198)))
	var x1201 uint32
	var x1202 uint32
	x1201, x1202 = bits.Add32(x1170, x1194, uint32(uint1(x1200)))
	var x1203 uint32
	var x1204 uint32
	x1203, x1204 = bits.Add32(x1172, uint32(0x0), uint32(uint1(x1202)))
	var x1205 uint32
	var x1206 uint32
	x1205, x1206 = bits.Add32(x1174, uint32(0x0), uint32(uint1(x1204)))
	var x1207 uint32
	var x1208 uint32
	x1207, x1208 = bits.Add32(x1176, x1164, uint32(uint1(x1206)))
	var x1209 uint32
	var x1210 uint32
	x1209, x1210 = bits.Add32(x1178, x1182, uint32(uint1(x1208)))
	var x1211 uint32
	var x1212 uint32
	x1211, x1212 = bits.Add32(x1180, x1183, uint32(uint1(x1210)))
	x1213 := (uint32(uint1(x1212)) + uint32(uint1(x1181)))
	var x1214 uint32
	var x1215 uint32
	x1215, x1214 = bits.Mul32(x84, arg2[7])
	var x1216 uint32
	var x1217 uint32
	x1217, x1216 = bits.Mul32(x84, arg2[6])
	var x1218 uint32
	var x1219 uint32
	x1219, x1218 = bits.Mul32(x84, arg2[5])
	var x1220 uint32
	var x1221 uint32
	x1221, x1220 = bits.Mul32(x84, arg2[4])
	var x1222 uint32
	var x1223 uint32
	x1223, x1222 = bits.Mul32(x84, arg2[3])
	var x1224 uint32
	var x1225 uint32
	x1225, x1224 = bits.Mul32(x84, arg2[2])
	var x1226 uint32
	var x1227 uint32
	x1227, x1226 = bits.Mul32(x84, arg2[1])
	var x1228 uint32
	var x1229 uint32
	x1229, x1228 = bits.Mul32(x84, arg2[0])
	var x1230 uint32
	var x1231 uint32
	x1230, x1231 = bits.Add32(x1229, x1226, uint32(0x0))
	var x1232 uint32
	var x1233 uint32
	x1232, x1233 = bits.Add32(x1227, x1224, uint32(uint1(x1231)))
	var x1234 uint32
	var x1235 uint32
	x1234, x1235 = bits.Add32(x1225, x1222, uint32(uint1(x1233)))
	var x1236 uint32
	var x1237 uint32
	x1236, x1237 = bits.Add32(x1223, x1220, uint32(uint1(x1235)))
	var x1238 uint32
	var x1239 uint32
	x1238, x1239 = bits.Add32(x1221, x1218, uint32(uint1(x1237)))
	var x1240 uint32
	var x1241 uint32
	x1240, x1241 = bits.Add32(x1219, x1216, uint32(uint1(x1239)))
	var x1242 uint32
	var x1243 uint32
	x1242, x1243 = bits.Add32(x1217, x1214, uint32(uint1(x1241)))
	x1244 := (uint32(uint1(x1243)) + x1215)
	var x1245 uint32
	var x1246 uint32
	x1245, x1246 = bits.Add32(x1197, x1228, uint32(0x0))
	var x1247 uint32
	var x1248 uint32
	x1247, x1248 = bits.Add32(x1199, x1230, uint32(uint1(x1246)))
	var x1249 uint32
	var x1250 uint32
	x1249, x1250 = bits.Add32(x1201, x1232, uint32(uint1(x1248)))
	var x1251 uint32
	var x1252 uint32
	x1251, x1252 = bits.Add32(x1203, x1234, uint32(uint1(x1250)))
	var x1253 uint32
	var x1254 uint32
	x1253, x1254 = bits.Add32(x1205, x1236, uint32(uint1(x1252)))
	var x1255 uint32
	var x1256 uint32
	x1255, x1256 = bits.Add32(x1207, x1238, uint32(uint1(x1254)))
	var x1257 uint32
	var x1258 uint32
	x1257, x1258 = bits.Add32(x1209, x1240, uint32(uint1(x1256)))
	var x1259 uint32
	var x1260 uint32
	x1259, x1260 = bits.Add32(x1211, x1242, uint32(uint1(x1258)))
	var x1261 uint32
	var x1262 uint32
	x1261, x1262 = bits.Add32(x1213, x1244, uint32(uint1(x1260)))
	var x1263 uint32
	var x1264 uint32
	x1264, x1263 = bits.Mul32(x1245, 0xffffffff)
	var x1265 uint32
	var x1266 uint32
	x1266, x1265 = bits.Mul32(x1245, 0xffffffff)
	var x1267 uint32
	var x1268 uint32
	x1268, x1267 = bits.Mul32(x1245, 0xffffffff)
	var x1269 uint32
	var x1270 uint32
	x1270, x1269 = bits.Mul32(x1245, 0xffffffff)
	var x1271 uint32
	var x1272 uint32
	x1271, x1272 = bits.Add32(x1270, x1267, uint32(0x0))
	var x1273 uint32
	var x1274 uint32
	x1273, x1274 = bits.Add32(x1268, x1265, uint32(uint1(x1272)))
	x1275 := (uint32(uint1(x1274)) + x1266)
	var x1277 uint32
	_, x1277 = bits.Add32(x1245, x1269, uint32(0x0))
	var x1278 uint32
	var x1279 uint32
	x1278, x1279 = bits.Add32(x1247, x1271, uint32(uint1(x1277)))
	var x1280 uint32
	var x1281 uint32
	x1280, x1281 = bits.Add32(x1249, x1273, uint32(uint1(x1279)))
	var x1282 uint32
	var x1283 uint32
	x1282, x1283 = bits.Add32(x1251, x1275, uint32(uint1(x1281)))
	var x1284 uint32
	var x1285 uint32
	x1284, x1285 = bits.Add32(x1253, uint32(0x0), uint32(uint1(x1283)))
	var x1286 uint32
	var x1287 uint32
	x1286, x1287 = bits.Add32(x1255, uint32(0x0), uint32(uint1(x1285)))
	var x1288 uint32
	var x1289 uint32
	x1288, x1289 = bits.Add32(x1257, x1245, uint32(uint1(x1287)))
	var x1290 uint32
	var x1291 uint32
	x1290, x1291 = bits.Add32(x1259, x1263, uint32(uint1(x1289)))
	var x1292 uint32
	var x1293 uint32
	x1292, x1293 = bits.Add32(x1261, x1264, uint32(uint1(x1291)))
	x1294 := (uint32(uint1(x1293)) + uint32(uint1(x1262)))
	var x1295 uint32
	var x1296 uint32
	x1296, x1295 = bits.Mul32(x85, arg2[7])
	var x1297 uint32
	var x1298 uint32
	x1298, x1297 = bits.Mul32(x85, arg2[6])
	var x1299 uint32
	var x1300 uint32
	x1300, x1299 = bits.Mul32(x85, arg2[5])
	var x1301 uint32
	var x1302 uint32
	x1302, x1301 = bits.Mul32(x85, arg2[4])
	var x1303 uint32
	var x1304 uint32
	x1304, x1303 = bits.Mul32(x85, arg2[3])
	var x1305 uint32
	var x1306 uint32
	x1306, x1305 = bits.Mul32(x85, arg2[2])
	var x1307 uint32
	var x1308 uint32
	x1308, x1307 = bits.Mul32(x85, arg2[1])
	var x1309 uint32
	var x1310 uint32
	x1310, x1309 = bits.Mul32(x85, arg2[0])
	var x1311 uint32
	var x1312 uint32
	x1311, x1312 = bits.Add32(x1310, x1307, uint32(0x0))
	var x1313 uint32
	var x1314 uint32
	x1313, x1314 = bits.Add32(x1308, x1305, uint32(uint1(x1312)))
	var x1315 uint32
	var x1316 uint32
	x1315, x1316 = bits.Add32(x1306, x1303, uint32(uint1(x1314)))
	var x1317 uint32
	var x1318 uint32
	x1317, x1318 = bits.Add32(x1304, x1301, uint32(uint1(x1316)))
	var x1319 uint32
	var x1320 uint32
	x1319, x1320 = bits.Add32(x1302, x1299, uint32(uint1(x1318)))
	var x1321 uint32
	var x1322 uint32
	x1321, x1322 = bits.Add32(x1300, x1297, uint32(uint1(x1320)))
	var x1323 uint32
	var x1324 uint32
	x1323, x1324 = bits.Add32(x1298, x1295, uint32(uint1(x1322)))
	x1325 := (uint32(uint1(x1324)) + x1296)
	var x1326 uint32
	var x1327 uint32
	x1326, x1327 = bits.Add32(x1278, x1309, uint32(0x0))
	var x1328 uint32
	var x1329 uint32
	x1328, x1329 = bits.Add32(x1280, x1311, uint32(uint1(x1327)))
	var x1330 uint32
	var x1331 uint32
	x1330, x1331 = bits.Add32(x1282, x1313, uint32(uint1(x1329)))
	var x1332 uint32
	var x1333 uint32
	x1332, x1333 = bits.Add32(x1284, x1315, uint32(uint1(x1331)))
	var x1334 uint32
	var x1335 uint32
	x1334, x1335 = bits.Add32(x1286, x1317, uint32(uint1(x1333)))
	var x1336 uint32
	var x1337 uint32
	x1336, x1337 = bits.Add32(x1288, x1319, uint32(uint1(x1335)))
	var x1338 uint32
	var x1339 uint32
	x1338, x1339 = bits.Add32(x1290, x1321, uint32(uint1(x1337)))
	var x1340 uint32
	var x1341 uint32
	x1340, x1341 = bits.Add32(x1292, x1323, uint32(uint1(x1339)))
	var x1342 uint32
	var x1343 uint32
	x1342, x1343 = bits.Add32(x1294, x1325, uint32(uint1(x1341)))
	var x1344 uint32
	var x1345 uint32
	x1345, x1344 = bits.Mul32(x1326, 0xffffffff)
	var x1346 uint32
	var x1347 uint32
	x1347, x1346 = bits.Mul32(x1326, 0xffffffff)
	var x1348 uint32
	var x1349 uint32
	x1349, x1348 = bits.Mul32(x1326, 0xffffffff)
	var x1350 uint32
	var x1351 uint32
	x1351, x1350 = bits.Mul32(x1326, 0xffffffff)
	var x1352 uint32
	var x1353 uint32
	x1352, x1353 = bits.Add32(x1351, x1348, uint32(0x0))
	var x1354 uint32
	var x1355 uint32
	x1354, x1355 = bits.Add32(x1349, x1346, uint32(uint1(x1353)))
	x1356 := (uint32(uint1(x1355)) + x1347)
	var x1358 uint32
	_, x1358 = bits.Add32(x1326, x1350, uint32(0x0))
	var x1359 uint32
	var x1360 uint32
	x1359, x1360 = bits.Add32(x1328, x1352, uint32(uint1(x1358)))
	var x1361 uint32
	var x1362 uint32
	x1361, x1362 = bits.Add32(x1330, x1354, uint32(uint1(x1360)))
	var x1363 uint32
	var x1364 uint32
	x1363, x1364 = bits.Add32(x1332, x1356, uint32(uint1(x1362)))
	var x1365 uint32
	var x1366 uint32
	x1365, x1366 = bits.Add32(x1334, uint32(0x0), uint32(uint1(x1364)))
	var x1367 uint32
	var x1368 uint32
	x1367, x1368 = bits.Add32(x1336, uint32(0x0), uint32(uint1(x1366)))
	var x1369 uint32
	var x1370 uint32
	x1369, x1370 = bits.Add32(x1338, x1326, uint32(uint1(x1368)))
	var x1371 uint32
	var x1372 uint32
	x1371, x1372 = bits.Add32(x1340, x1344, uint32(uint1(x1370)))
	var x1373 uint32
	var x1374 uint32
	x1373, x1374 = bits.Add32(x1342, x1345, uint32(uint1(x1372)))
	x1375 := (uint32(uint1(x1374)) + uint32(uint1(x1343)))
	var x1376 uint32
	var x1377 uint32
	x1377, x1376 = bits.Mul32(x86, arg2[7])
	var x1378 uint32
	var x1379 uint32
	x1379, x1378 = bits.Mul32(x86, arg2[6])
	var x1380 uint32
	var x1381 uint32
	x1381, x1380 = bits.Mul32(x86, arg2[5])
	var x1382 uint32
	var x1383 uint32
	x1383, x1382 = bits.Mul32(x86, arg2[4])
	var x1384 uint32
	var x1385 uint32
	x1385, x1384 = bits.Mul32(x86, arg2[3])
	var x1386 uint32
	var x1387 uint32
	x1387, x1386 = bits.Mul32(x86, arg2[2])
	var x1388 uint32
	var x1389 uint32
	x1389, x1388 = bits.Mul32(x86, arg2[1])
	var x1390 uint32
	var x1391 uint32
	x1391, x1390 = bits.Mul32(x86, arg2[0])
	var x1392 uint32
	var x1393 uint32
	x1392, x1393 = bits.Add32(x1391, x1388, uint32(0x0))
	var x1394 uint32
	var x1395 uint32
	x1394, x1395 = bits.Add32(x1389, x1386, uint32(uint1(x1393)))
	var x1396 uint32
	var x1397 uint32
	x1396, x1397 = bits.Add32(x1387, x1384, uint32(uint1(x1395)))
	var x1398 uint32
	var x1399 uint32
	x1398, x1399 = bits.Add32(x1385, x1382, uint32(uint1(x1397)))
	var x1400 uint32
	var x1401 uint32
	x1400, x1401 = bits.Add32(x1383, x1380, uint32(uint1(x1399)))
	var x1402 uint32
	var x1403 uint32
	x1402, x1403 = bits.Add32(x1381, x1378, uint32(uint1(x1401)))
	var x1404 uint32
	var x1405 uint32
	x1404, x1405 = bits.Add32(x1379, x1376, uint32(uint1(x1403)))
	x1406 := (uint32(uint1(x1405)) + x1377)
	var x1407 uint32
	var x1408 uint32
	x1407, x1408 = bits.Add32(x1359, x1390, uint32(0x0))
	var x1409 uint32
	var x1410 uint32
	x1409, x1410 = bits.Add32(x1361, x1392, uint32(uint1(x1408)))
	var x1411 uint32
	var x1412 uint32
	x1411, x1412 = bits.Add32(x1363, x1394, uint32(uint1(x1410)))
	var x1413 uint32
	var x1414 uint32
	x1413, x1414 = bits.Add32(x1365, x1396, uint32(uint1(x1412)))
	var x1415 uint32
	var x1416 uint32
	x1415, x1416 = bits.Add32(x1367, x1398, uint32(uint1(x1414)))
	var x1417 uint32
	var x1418 uint32
	x1417, x1418 = bits.Add32(x1369, x1400, uint32(uint1(x1416)))
	var x1419 uint32
	var x1420 uint32
	x1419, x1420 = bits.Add32(x1371, x1402, uint32(uint1(x1418)))
	var x1421 uint32
	var x1422 uint32
	x1421, x1422 = bits.Add32(x1373, x1404, uint32(uint1(x1420)))
	var x1423 uint32
	var x1424 uint32
	x1423, x1424 = bits.Add32(x1375, x1406, uint32(uint1(x1422)))
	var x1425 uint32
	var x1426 uint32
	x1426, x1425 = bits.Mul32(x1407, 0xffffffff)
	var x1427 uint32
	var x1428 uint32
	x1428, x1427 = bits.Mul32(x1407, 0xffffffff)
	var x1429 uint32
	var x1430 uint32
	x1430, x1429 = bits.Mul32(x1407, 0xffffffff)
	var x1431 uint32
	var x1432 uint32
	x1432, x1431 = bits.Mul32(x1407, 0xffffffff)
	var x1433 uint32
	var x1434 uint32
	x1433, x1434 = bits.Add32(x1432, x1429, uint32(0x0))
	var x1435 uint32
	var x1436 uint32
	x1435, x1436 = bits.Add32(x1430, x1427, uint32(uint1(x1434)))
	x1437 := (uint32(uint1(x1436)) + x1428)
	var x1439 uint32
	_, x1439 = bits.Add32(x1407, x1431, uint32(0x0))
	var x1440 uint32
	var x1441 uint32
	x1440, x1441 = bits.Add32(x1409, x1433, uint32(uint1(x1439)))
	var x1442 uint32
	var x1443 uint32
	x1442, x1443 = bits.Add32(x1411, x1435, uint32(uint1(x1441)))
	var x1444 uint32
	var x1445 uint32
	x1444, x1445 = bits.Add32(x1413, x1437, uint32(uint1(x1443)))
	var x1446 uint32
	var x1447 uint32
	x1446, x1447 = bits.Add32(x1415, uint32(0x0), uint32(uint1(x1445)))
	var x1448 uint32
	var x1449 uint32
	x1448, x1449 = bits.Add32(x1417, uint32(0x0), uint32(uint1(x1447)))
	var x1450 uint32
	var x1451 uint32
	x1450, x1451 = bits.Add32(x1419, x1407, uint32(uint1(x1449)))
	var x1452 uint32
	var x1453 uint32
	x1452, x1453 = bits.Add32(x1421, x1425, uint32(uint1(x1451)))
	var x1454 uint32
	var x1455 uint32
	x1454, x1455 = bits.Add32(x1423, x1426, uint32(uint1(x1453)))
	x1456 := (uint32(uint1(x1455)) + uint32(uint1(x1424)))
	var x1457 uint32
	var x1458 uint32
	x1457, x1458 = bits.Sub32(x1440, 0xffffffff, uint32(0x0))
	var x1459 uint32
	var x1460 uint32
	x1459, x1460 = bits.Sub32(x1442, 0xffffffff, uint32(uint1(x1458)))
	var x1461 uint32
	var x1462 uint32
	x1461, x1462 = bits.Sub32(x1444, 0xffffffff, uint32(uint1(x1460)))
	var x1463 uint32
	var x1464 uint32
	x1463, x1464 = bits.Sub32(x1446, uint32(0x0), uint32(uint1(x1462)))
	var x1465 uint32
	var x1466 uint32
	x1465, x1466 = bits.Sub32(x1448, uint32(0x0), uint32(uint1(x1464)))
	var x1467 uint32
	var x1468 uint32
	x1467, x1468 = bits.Sub32(x1450, uint32(0x0), uint32(uint1(x1466)))
	var x1469 uint32
	var x1470 uint32
	x1469, x1470 = bits.Sub32(x1452, uint32(0x1), uint32(uint1(x1468)))
	var x1471 uint32
	var x1472 uint32
	x1471, x1472 = bits.Sub32(x1454, 0xffffffff, uint32(uint1(x1470)))
	var x1474 uint32
	_, x1474 = bits.Sub32(x1456, uint32(0x0), uint32(uint1(x1472)))
	var x1475 uint32
	cmovznzU32(&x1475, uint1(x1474), x1457, x1440)
	var x1476 uint32
	cmovznzU32(&x1476, uint1(x1474), x1459, x1442)
	var x1477 uint32
	cmovznzU32(&x1477, uint1(x1474), x1461, x1444)
	var x1478 uint32
	cmovznzU32(&x1478, uint1(x1474), x1463, x1446)
	var x1479 uint32
	cmovznzU32(&x1479, uint1(x1474), x1465, x1448)
	var x1480 uint32
	cmovznzU32(&x1480, uint1(x1474), x1467, x1450)
	var x1481 uint32
	cmovznzU32(&x1481, uint1(x1474), x1469, x1452)
	var x1482 uint32
	cmovznzU32(&x1482, uint1(x1474), x1471, x1454)
	var x1483 uint32
	var x1484 uint32
	x1484, x1483 = bits.Mul32(x122, arg1[7])
	var x1485 uint32
	var x1486 uint32
	x1486, x1485 = bits.Mul32(x122, arg1[6])
	var x1487 uint32
	var x1488 uint32
	x1488, x1487 = bits.Mul32(x122, arg1[5])
	var x1489 uint32
	var x1490 uint32
	x1490, x1489 = bits.Mul32(x122, arg1[4])
	var x1491 uint32
	var x1492 uint32
	x1492, x1491 = bits.Mul32(x122, arg1[3])
	var x1493 uint32
	var x1494 uint32
	x1494, x1493 = bits.Mul32(x122, arg1[2])
	var x1495 uint32
	var x1496 uint32
	x1496, x1495 = bits.Mul32(x122, arg1[1])
	var x1497 uint32
	var x1498 uint32
	x1498, x1497 = bits.Mul32(x122, arg1[0])
	var x1499 uint32
	var x1500 uint32
	x1499, x1500 = bits.Add32(x1498, x1495, uint32(0x0))
	var x1501 uint32
	var x1502 uint32
	x1501, x1502 = bits.Add32(x1496, x1493, uint32(uint1(x1500)))
	var x1503 uint32
	var x1504 uint32
	x1503, x1504 = bits.Add32(x1494, x1491, uint32(uint1(x1502)))
	var x1505 uint32
	var x1506 uint32
	x1505, x1506 = bits.Add32(x1492, x1489, uint32(uint1(x1504)))
	var x1507 uint32
	var x1508 uint32
	x1507, x1508 = bits.Add32(x1490, x1487, uint32(uint1(x1506)))
	var x1509 uint32
	var x1510 uint32
	x1509, x1510 = bits.Add32(x1488, x1485, uint32(uint1(x1508)))
	var x1511 uint32
	var x1512 uint32
	x1511, x1512 = bits.Add32(x1486, x1483, uint32(uint1(x1510)))
	x1513 := (uint32(uint1(x1512)) + x1484)
	var x1514 uint32
	var x1515 uint32
	x1515, x1514 = bits.Mul32(x1497, 0xffffffff)
	var x1516 uint32
	var x1517 uint32
	x1517, x1516 = bits.Mul32(x1497, 0xffffffff)
	var x1518 uint32
	var x1519 uint32
	x1519, x1518 = bits.Mul32(x1497, 0xffffffff)
	var x1520 uint32
	var x1521 uint32
	x1521, x1520 = bits.Mul32(x1497, 0xffffffff)
	var x1522 uint32
	var x1523 uint32
	x1522, x1523 = bits.Add32(x1521, x1518, uint32(0x0))
	var x1524 uint32
	var x1525 uint32
	x1524, x1525 = bits.Add32(x1519, x1516, uint32(uint1(x1523)))
	x1526 := (uint32(uint1(x1525)) + x1517)
	var x1528 uint32
	_, x1528 = bits.Add32(x1497, x1520, uint32(0x0))
	var x1529 uint32
	var x1530 uint32
	x1529, x1530 = bits.Add32(x1499, x1522, uint32(uint1(x1528)))
	var x1531 uint32
	var x1532 uint32
	x1531, x1532 = bits.Add32(x1501, x1524, uint32(uint1(x1530)))
	var x1533 uint32
	var x1534 uint32
	x1533, x1534 = bits.Add32(x1503, x1526, uint32(uint1(x1532)))
	var x1535 uint32
	var x1536 uint32
	x1535, x1536 = bits.Add32(x1505, uint32(0x0), uint32(uint1(x1534)))
	var x1537 uint32
	var x1538 uint32
	x1537, x1538 = bits.Add32(x1507, uint32(0x0), uint32(uint1(x1536)))
	var x1539 uint32
	var x1540 uint32
	x1539, x1540 = bits.Add32(x1509, x1497, uint32(uint1(x1538)))
	var x1541 uint32
	var x1542 uint32
	x1541, x1542 = bits.Add32(x1511, x1514, uint32(uint1(x1540)))
	var x1543 uint32
	var x1544 uint32
	x1543, x1544 = bits.Add32(x1513, x1515, uint32(uint1(x1542)))
	var x1545 uint32
	var x1546 uint32
	x1546, x1545 = bits.Mul32(x123, arg1[7])
	var x1547 uint32
	var x1548 uint32
	x1548, x1547 = bits.Mul32(x123, arg1[6])
	var x1549 uint32
	var x1550 uint32
	x1550, x1549 = bits.Mul32(x123, arg1[5])
	var x1551 uint32
	var x1552 uint32
	x1552, x1551 = bits.Mul32(x123, arg1[4])
	var x1553 uint32
	var x1554 uint32
	x1554, x1553 = bits.Mul32(x123, arg1[3])
	var x1555 uint32
	var x1556 uint32
	x1556, x1555 = bits.Mul32(x123, arg1[2])
	var x1557 uint32
	var x1558 uint32
	x1558, x1557 = bits.Mul32(x123, arg1[1])
	var x1559 uint32
	var x1560 uint32
	x1560, x1559 = bits.Mul32(x123, arg1[0])
	var x1561 uint32
	var x1562 uint32
	x1561, x1562 = bits.Add32(x1560, x1557, uint32(0x0))
	var x1563 uint32
	var x1564 uint32
	x1563, x1564 = bits.Add32(x1558, x1555, uint32(uint1(x1562)))
	var x1565 uint32
	var x1566 uint32
	x1565, x1566 = bits.Add32(x1556, x1553, uint32(uint1(x1564)))
	var x1567 uint32
	var x1568 uint32
	x1567, x1568 = bits.Add32(x1554, x1551, uint32(uint1(x1566)))
	var x1569 uint32
	var x1570 uint32
	x1569, x1570 = bits.Add32(x1552, x1549, uint32(uint1(x1568)))
	var x1571 uint32
	var x1572 uint32
	x1571, x1572 = bits.Add32(x1550, x1547, uint32(uint1(x1570)))
	var x1573 uint32
	var x1574 uint32
	x1573, x1574 = bits.Add32(x1548, x1545, uint32(uint1(x1572)))
	x1575 := (uint32(uint1(x1574)) + x1546)
	var x1576 uint32
	var x1577 uint32
	x1576, x1577 = bits.Add32(x1529, x1559, uint32(0x0))
	var x1578 uint32
	var x1579 uint32
	x1578, x1579 = bits.Add32(x1531, x1561, uint32(uint1(x1577)))
	var x1580 uint32
	var x1581 uint32
	x1580, x1581 = bits.Add32(x1533, x1563, uint32(uint1(x1579)))
	var x1582 uint32
	var x1583 uint32
	x1582, x1583 = bits.Add32(x1535, x1565, uint32(uint1(x1581)))
	var x1584 uint32
	var x1585 uint32
	x1584, x1585 = bits.Add32(x1537, x1567, uint32(uint1(x1583)))
	var x1586 uint32
	var x1587 uint32
	x1586, x1587 = bits.Add32(x1539, x1569, uint32(uint1(x1585)))
	var x1588 uint32
	var x1589 uint32
	x1588, x1589 = bits.Add32(x1541, x1571, uint32(uint1(x1587)))
	var x1590 uint32
	var x1591 uint32
	x1590, x1591 = bits.Add32(x1543, x1573, uint32(uint1(x1589)))
	var x1592 uint32
	var x1593 uint32
	x1592, x1593 = bits.Add32(uint32(uint1(x1544)), x1575, uint32(uint1(x1591)))
	var x1594 uint32
	var x1595 uint32
	x1595, x1594 = bits.Mul32(x1576, 0xffffffff)
	var x1596 uint32
	var x1597 uint32
	x1597, x1596 = bits.Mul32(x1576, 0xffffffff)
	var x1598 uint32
	var x1599 uint32
	x1599, x1598 = bits.Mul32(x1576, 0xffffffff)
	var x1600 uint32
	var x1601 uint32
	x1601, x1600 = bits.Mul32(x1576, 0xffffffff)
	var x1602 uint32
	var x1603 uint32
	x1602, x1603 = bits.Add32(x1601, x1598, uint32(0x0))
	var x1604 uint32
	var x1605 uint32
	x1604, x1605 = bits.Add32(x1599, x1596, uint32(uint1(x1603)))
	x1606 := (uint32(uint1(x1605)) + x1597)
	var x1608 uint32
	_, x1608 = bits.Add32(x1576, x1600, uint32(0x0))
	var x1609 uint32
	var x1610 uint32
	x1609, x1610 = bits.Add32(x1578, x1602, uint32(uint1(x1608)))
	var x1611 uint32
	var x1612 uint32
	x1611, x1612 = bits.Add32(x1580, x1604, uint32(uint1(x1610)))
	var x1613 uint32
	var x1614 uint32
	x1613, x1614 = bits.Add32(x1582, x1606, uint32(uint1(x1612)))
	var x1615 uint32
	var x1616 uint32
	x1615, x1616 = bits.Add32(x1584, uint32(0x0), uint32(uint1(x1614)))
	var x1617 uint32
	var x1618 uint32
	x1617, x1618 = bits.Add32(x1586, uint32(0x0), uint32(uint1(x1616)))
	var x1619 uint32
	var x1620 uint32
	x1619, x1620 = bits.Add32(x1588, x1576, uint32(uint1(x1618)))
	var x1621 uint32
	var x1622 uint32
	x1621, x1622 = bits.Add32(x1590, x1594, uint32(uint1(x1620)))
	var x1623 uint32
	var x1624 uint32
	x1623, x1624 = bits.Add32(x1592, x1595, uint32(uint1(x1622)))
	x1625 := (uint32(uint1(x1624)) + uint32(uint1(x1593)))
	var x1626 uint32
	var x1627 uint32
	x1627, x1626 = bits.Mul32(x124, arg1[7])
	var x1628 uint32
	var x1629 uint32
	x1629, x1628 = bits.Mul32(x124, arg1[6])
	var x1630 uint32
	var x1631 uint32
	x1631, x1630 = bits.Mul32(x124, arg1[5])
	var x1632 uint32
	var x1633 uint32
	x1633, x1632 = bits.Mul32(x124, arg1[4])
	var x1634 uint32
	var x1635 uint32
	x1635, x1634 = bits.Mul32(x124, arg1[3])
	var x1636 uint32
	var x1637 uint32
	x1637, x1636 = bits.Mul32(x124, arg1[2])
	var x1638 uint32
	var x1639 uint32
	x1639, x1638 = bits.Mul32(x124, arg1[1])
	var x1640 uint32
	var x1641 uint32
	x1641, x1640 = bits.Mul32(x124, arg1[0])
	var x1642 uint32
	var x1643 uint32
	x1642, x1643 = bits.Add32(x1641, x1638, uint32(0x0))
	var x1644 uint32
	var x1645 uint32
	x1644, x1645 = bits.Add32(x1639, x1636, uint32(uint1(x1643)))
	var x1646 uint32
	var x1647 uint32
	x1646, x1647 = bits.Add32(x1637, x1634, uint32(uint1(x1645)))
	var x1648 uint32
	var x1649 uint32
	x1648, x1649 = bits.Add32(x1635, x1632, uint32(uint1(x1647)))
	var x1650 uint32
	var x1651 uint32
	x1650, x1651 = bits.Add32(x1633, x1630, uint32(uint1(x1649)))
	var x1652 uint32
	var x1653 uint32
	x1652, x1653 = bits.Add32(x1631, x1628, uint32(uint1(x1651)))
	var x1654 uint32
	var x1655 uint32
	x1654, x1655 = bits.Add32(x1629, x1626, uint32(uint1(x1653)))
	x1656 := (uint32(uint1(x1655)) + x1627)
	var x1657 uint32
	var x1658 uint32
	x1657, x1658 = bits.Add32(x1609, x1640, uint32(0x0))
	var x1659 uint32
	var x1660 uint32
	x1659, x1660 = bits.Add32(x1611, x1642, uint32(uint1(x1658)))
	var x1661 uint32
	var x1662 uint32
	x1661, x1662 = bits.Add32(x1613, x1644, uint32(uint1(x1660)))
	var x1663 uint32
	var x1664 uint32
	x1663, x1664 = bits.Add32(x1615, x1646, uint32(uint1(x1662)))
	var x1665 uint32
	var x1666 uint32
	x1665, x1666 = bits.Add32(x1617, x1648, uint32(uint1(x1664)))
	var x1667 uint32
	var x1668 uint32
	x1667, x1668 = bits.Add32(x1619, x1650, uint32(uint1(x1666)))
	var x1669 uint32
	var x1670 uint32
	x1669, x1670 = bits.Add32(x1621, x1652, uint32(uint1(x1668)))
	var x1671 uint32
	var x1672 uint32
	x1671, x1672 = bits.Add32(x1623, x1654, uint32(uint1(x1670)))
	var x1673 uint32
	var x1674 uint32
	x1673, x1674 = bits.Add32(x1625, x1656, uint32(uint1(x1672)))
	var x1675 uint32
	var x1676 uint32
	x1676, x1675 = bits.Mul32(x1657, 0xffffffff)
	var x1677 uint32
	var x1678 uint32
	x1678, x1677 = bits.Mul32(x1657, 0xffffffff)
	var x1679 uint32
	var x1680 uint32
	x1680, x1679 = bits.Mul32(x1657, 0xffffffff)
	var x1681 uint32
	var x1682 uint32
	x1682, x1681 = bits.Mul32(x1657, 0xffffffff)
	var x1683 uint32
	var x1684 uint32
	x1683, x1684 = bits.Add32(x1682, x1679, uint32(0x0))
	var x1685 uint32
	var x1686 uint32
	x1685, x1686 = bits.Add32(x1680, x1677, uint32(uint1(x1684)))
	x1687 := (uint32(uint1(x1686)) + x1678)
	var x1689 uint32
	_, x1689 = bits.Add32(x1657, x1681, uint32(0x0))
	var x1690 uint32
	var x1691 uint32
	x1690, x1691 = bits.Add32(x1659, x1683, uint32(uint1(x1689)))
	var x1692 uint32
	var x1693 uint32
	x1692, x1693 = bits.Add32(x1661, x1685, uint32(uint1(x1691)))
	var x1694 uint32
	var x1695 uint32
	x1694, x1695 = bits.Add32(x1663, x1687, uint32(uint1(x1693)))
	var x1696 uint32
	var x1697 uint32
	x1696, x1697 = bits.Add32(x1665, uint32(0x0), uint32(uint1(x1695)))
	var x1698 uint32
	var x1699 uint32
	x1698, x1699 = bits.Add32(x1667, uint32(0x0), uint32(uint1(x1697)))
	var x1700 uint32
	var x1701 uint32
	x1700, x1701 = bits.Add32(x1669, x1657, uint32(uint1(x1699)))
	var x1702 uint32
	var x1703 uint32
	x1702, x1703 = bits.Add32(x1671, x1675, uint32(uint1(x1701)))
	var x1704 uint32
	var x1705 uint32
	x1704, x1705 = bits.Add32(x1673, x1676, uint32(uint1(x1703)))
	x1706 := (uint32(uint1(x1705)) + uint32(uint1(x1674)))
	var x1707 uint32
	var x1708 uint32
	x1708, x1707 = bits.Mul32(x125, arg1[7])
	var x1709 uint32
	var x1710 uint32
	x1710, x1709 = bits.Mul32(x125, arg1[6])
	var x1711 uint32
	var x1712 uint32
	x1712, x1711 = bits.Mul32(x125, arg1[5])
	var x1713 uint32
	var x1714 uint32
	x1714, x1713 = bits.Mul32(x125, arg1[4])
	var x1715 uint32
	var x1716 uint32
	x1716, x1715 = bits.Mul32(x125, arg1[3])
	var x1717 uint32
	var x1718 uint32
	x1718, x1717 = bits.Mul32(x125, arg1[2])
	var x1719 uint32
	var x1720 uint32
	x1720, x1719 = bits.Mul32(x125, arg1[1])
	var x1721 uint32
	var x1722 uint32
	x1722, x1721 = bits.Mul32(x125, arg1[0])
	var x1723 uint32
	var x1724 uint32
	x1723, x1724 = bits.Add32(x1722, x1719, uint32(0x0))
	var x1725 uint32
	var x1726 uint32
	x1725, x1726 = bits.Add32(x1720, x1717, uint32(uint1(x1724)))
	var x1727 uint32
	var x1728 uint32
	x1727, x1728 = bits.Add32(x1718, x1715, uint32(uint1(x1726)))
	var x1729 uint32
	var x1730 uint32
	x1729, x1730 = bits.Add32(x1716, x1713, uint32(uint1(x1728)))
	var x1731 uint32
	var x1732 uint32
	x1731, x1732 = bits.Add32(x1714, x1711, uint32(uint1(x1730)))
	var x1733 uint32
	var x1734 uint32
	x1733, x1734 = bits.Add32(x1712, x1709, uint32(uint1(x1732)))
	var x1735 uint32
	var x1736 uint32
	x1735, x1736 = bits.Add32(x1710, x1707, uint32(uint1(x1734)))
	x1737 := (uint32(uint1(x1736)) + x1708)
	var x1738 uint32
	var x1739 uint32
	x1738, x1739 = bits.Add32(x1690, x1721, uint32(0x0))
	var x1740 uint32
	var x1741 uint32
	x1740, x1741 = bits.Add32(x1692, x1723, uint32(uint1(x1739)))
	var x1742 uint32
	var x1743 uint32
	x1742, x1743 = bits.Add32(x1694, x1725, uint32(uint1(x1741)))
	var x1744 uint32
	var x1745 uint32
	x1744, x1745 = bits.Add32(x1696, x1727, uint32(uint1(x1743)))
	var x1746 uint32
	var x1747 uint32
	x1746, x1747 = bits.Add32(x1698, x1729, uint32(uint1(x1745)))
	var x1748 uint32
	var x1749 uint32
	x1748, x1749 = bits.Add32(x1700, x1731, uint32(uint1(x1747)))
	var x1750 uint32
	var x1751 uint32
	x1750, x1751 = bits.Add32(x1702, x1733, uint32(uint1(x1749)))
	var x1752 uint32
	var x1753 uint32
	x1752, x1753 = bits.Add32(x1704, x1735, uint32(uint1(x1751)))
	var x1754 uint32
	var x1755 uint32
	x1754, x1755 = bits.Add32(x1706, x1737, uint32(uint1(x1753)))
	var x1756 uint32
	var x1757 uint32
	x1757, x1756 = bits.Mul32(x1738, 0xffffffff)
	var x1758 uint32
	var x1759 uint32
	x1759, x1758 = bits.Mul32(x1738, 0xffffffff)
	var x1760 uint32
	var x1761 uint32
	x1761, x1760 = bits.Mul32(x1738, 0xffffffff)
	var x1762 uint32
	var x1763 uint32
	x1763, x1762 = bits.Mul32(x1738, 0xffffffff)
	var x1764 uint32
	var x1765 uint32
	x1764, x1765 = bits.Add32(x1763, x1760, uint32(0x0))
	var x1766 uint32
	var x1767 uint32
	x1766, x1767 = bits.Add32(x1761, x1758, uint32(uint1(x1765)))
	x1768 := (uint32(uint1(x1767)) + x1759)
	var x1770 uint32
	_, x1770 = bits.Add32(x1738, x1762, uint32(0x0))
	var x1771 uint32
	var x1772 uint32
	x1771, x1772 = bits.Add32(x1740, x1764, uint32(uint1(x1770)))
	var x1773 uint32
	var x1774 uint32
	x1773, x1774 = bits.Add32(x1742, x1766, uint32(uint1(x1772)))
	var x1775 uint32
	var x1776 uint32
	x1775, x1776 = bits.Add32(x1744, x1768, uint32(uint1(x1774)))
	var x1777 uint32
	var x1778 uint32
	x1777, x1778 = bits.Add32(x1746, uint32(0x0), uint32(uint1(x1776)))
	var x1779 uint32
	var x1780 uint32
	x1779, x1780 = bits.Add32(x1748, uint32(0x0), uint32(uint1(x1778)))
	var x1781 uint32
	var x1782 uint32
	x1781, x1782 = bits.Add32(x1750, x1738, uint32(uint1(x1780)))
	var x1783 uint32
	var x1784 uint32
	x1783, x1784 = bits.Add32(x1752, x1756, uint32(uint1(x1782)))
	var x1785 uint32
	var x1786 uint32
	x1785, x1786 = bits.Add32(x1754, x1757, uint32(uint1(x1784)))
	x1787 := (uint32(uint1(x1786)) + uint32(uint1(x1755)))
	var x1788 uint32
	var x1789 uint32
	x1789, x1788 = bits.Mul32(x126, arg1[7])
	var x1790 uint32
	var x1791 uint32
	x1791, x1790 = bits.Mul32(x126, arg1[6])
	var x1792 uint32
	var x1793 uint32
	x1793, x1792 = bits.Mul32(x126, arg1[5])
	var x1794 uint32
	var x1795 uint32
	x1795, x1794 = bits.Mul32(x126, arg1[4])
	var x1796 uint32
	var x1797 uint32
	x1797, x1796 = bits.Mul32(x126, arg1[3])
	var x1798 uint32
	var x1799 uint32
	x1799, x1798 = bits.Mul32(x126, arg1[2])
	var x1800 uint32
	var x1801 uint32
	x1801, x1800 = bits.Mul32(x126, arg1[1])
	var x1802 uint32
	var x1803 uint32
	x1803, x1802 = bits.Mul32(x126, arg1[0])
	var x1804 uint32
	var x1805 uint32
	x1804, x1805 = bits.Add32(x1803, x1800, uint32(0x0))
	var x1806 uint32
	var x1807 uint32
	x1806, x1807 = bits.Add32(x1801, x1798, uint32(uint1(x1805)))
	var x1808 uint32
	var x1809 uint32
	x1808, x1809 = bits.Add32(x1799, x1796, uint32(uint1(x1807)))
	var x1810 uint32
	var x1811 uint32
	x1810, x1811 = bits.Add32(x1797, x1794, uint32(uint1(x1809)))
	var x1812 uint32
	var x1813 uint32
	x1812, x1813 = bits.Add32(x1795, x1792, uint32(uint1(x1811)))
	var x1814 uint32
	var x1815 uint32
	x1814, x1815 = bits.Add32(x1793, x1790, uint32(uint1(x1813)))
	var x1816 uint32
	var x1817 uint32
	x1816, x1817 = bits.Add32(x1791, x1788, uint32(uint1(x1815)))
	x1818 := (uint32(uint1(x1817)) + x1789)
	var x1819 uint32
	var x1820 uint32
	x1819, x1820 = bits.Add32(x1771, x1802, uint32(0x0))
	var x1821 uint32
	var x1822 uint32
	x1821, x1822 = bits.Add32(x1773, x1804, uint32(uint1(x1820)))
	var x1823 uint32
	var x1824 uint32
	x1823, x1824 = bits.Add32(x1775, x1806, uint32(uint1(x1822)))
	var x1825 uint32
	var x1826 uint32
	x1825, x1826 = bits.Add32(x1777, x1808, uint32(uint1(x1824)))
	var x1827 uint32
	var x1828 uint32
	x1827, x1828 = bits.Add32(x1779, x1810, uint32(uint1(x1826)))
	var x1829 uint32
	var x1830 uint32
	x1829, x1830 = bits.Add32(x1781, x1812, uint32(uint1(x1828)))
	var x1831 uint32
	var x1832 uint32
	x1831, x1832 = bits.Add32(x1783, x1814, uint32(uint1(x1830)))
	var x1833 uint32
	var x1834 uint32
	x1833, x1834 = bits.Add32(x1785, x1816, uint32(uint1(x1832)))
	var x1835 uint32
	var x1836 uint32
	x1835, x1836 = bits.Add32(x1787, x1818, uint32(uint1(x1834)))
	var x1837 uint32
	var x1838 uint32
	x1838, x1837 = bits.Mul32(x1819, 0xffffffff)
	var x1839 uint32
	var x1840 uint32
	x1840, x1839 = bits.Mul32(x1819, 0xffffffff)
	var x1841 uint32
	var x1842 uint32
	x1842, x1841 = bits.Mul32(x1819, 0xffffffff)
	var x1843 uint32
	var x1844 uint32
	x1844, x1843 = bits.Mul32(x1819, 0xffffffff)
	var x1845 uint32
	var x1846 uint32
	x1845, x1846 = bits.Add32(x1844, x1841, uint32(0x0))
	var x1847 uint32
	var x1848 uint32
	x1847, x1848 = bits.Add32(x1842, x1839, uint32(uint1(x1846)))
	x1849 := (uint32(uint1(x1848)) + x1840)
	var x1851 uint32
	_, x1851 = bits.Add32(x1819, x1843, uint32(0x0))
	var x1852 uint32
	var x1853 uint32
	x1852, x1853 = bits.Add32(x1821, x1845, uint32(uint1(x1851)))
	var x1854 uint32
	var x1855 uint32
	x1854, x1855 = bits.Add32(x1823, x1847, uint32(uint1(x1853)))
	var x1856 uint32
	var x1857 uint32
	x1856, x1857 = bits.Add32(x1825, x1849, uint32(uint1(x1855)))
	var x1858 uint32
	var x1859 uint32
	x1858, x1859 = bits.Add32(x1827, uint32(0x0), uint32(uint1(x1857)))
	var x1860 uint32
	var x1861 uint32
	x1860, x1861 = bits.Add32(x1829, uint32(0x0), uint32(uint1(x1859)))
	var x1862 uint32
	var x1863 uint32
	x1862, x1863 = bits.Add32(x1831, x1819, uint32(uint1(x1861)))
	var x1864 uint32
	var x1865 uint32
	x1864, x1865 = bits.Add32(x1833, x1837, uint32(uint1(x1863)))
	var x1866 uint32
	var x1867 uint32
	x1866, x1867 = bits.Add32(x1835, x1838, uint32(uint1(x1865)))
	x1868 := (uint32(uint1(x1867)) + uint32(uint1(x1836)))
	var x1869 uint32
	var x1870 uint32
	x1870, x1869 = bits.Mul32(x127, arg1[7])
	var x1871 uint32
	var x1872 uint32
	x1872, x1871 = bits.Mul32(x127, arg1[6])
	var x1873 uint32
	var x1874 uint32
	x1874, x1873 = bits.Mul32(x127, arg1[5])
	var x1875 uint32
	var x1876 uint32
	x1876, x1875 = bits.Mul32(x127, arg1[4])
	var x1877 uint32
	var x1878 uint32
	x1878, x1877 = bits.Mul32(x127, arg1[3])
	var x1879 uint32
	var x1880 uint32
	x1880, x1879 = bits.Mul32(x127, arg1[2])
	var x1881 uint32
	var x1882 uint32
	x1882, x1881 = bits.Mul32(x127, arg1[1])
	var x1883 uint32
	var x1884 uint32
	x1884, x1883 = bits.Mul32(x127, arg1[0])
	var x1885 uint32
	var x1886 uint32
	x1885, x1886 = bits.Add32(x1884, x1881, uint32(0x0))
	var x1887 uint32
	var x1888 uint32
	x1887, x1888 = bits.Add32(x1882, x1879, uint32(uint1(x1886)))
	var x1889 uint32
	var x1890 uint32
	x1889, x1890 = bits.Add32(x1880, x1877, uint32(uint1(x1888)))
	var x1891 uint32
	var x1892 uint32
	x1891, x1892 = bits.Add32(x1878, x1875, uint32(uint1(x1890)))
	var x1893 uint32
	var x1894 uint32
	x1893, x1894 = bits.Add32(x1876, x1873, uint32(uint1(x1892)))
	var x1895 uint32
	var x1896 uint32
	x1895, x1896 = bits.Add32(x1874, x1871, uint32(uint1(x1894)))
	var x1897 uint32
	var x1898 uint32
	x1897, x1898 = bits.Add32(x1872, x1869, uint32(uint1(x1896)))
	x1899 := (uint32(uint1(x1898)) + x1870)
	var x1900 uint32
	var x1901 uint32
	x1900, x1901 = bits.Add32(x1852, x1883, uint32(0x0))
	var x1902 uint32
	var x1903 uint32
	x1902, x1903 = bits.Add32(x1854, x1885, uint32(uint1(x1901)))
	var x1904 uint32
	var x1905 uint32
	x1904, x1905 = bits.Add32(x1856, x1887, uint32(uint1(x1903)))
	var x1906 uint32
	var x1907 uint32
	x1906, x1907 = bits.Add32(x1858, x1889, uint32(uint1(x1905)))
	var x1908 uint32
	var x1909 uint32
	x1908, x1909 = bits.Add32(x1860, x1891, uint32(uint1(x1907)))
	var x1910 uint32
	var x1911 uint32
	x1910, x1911 = bits.Add32(x1862, x1893, uint32(uint1(x1909)))
	var x1912 uint32
	var x1913 uint32
	x1912, x1913 = bits.Add32(x1864, x1895, uint32(uint1(x1911)))
	var x1914 uint32
	var x1915 uint32
	x1914, x1915 = bits.Add32(x1866, x1897, uint32(uint1(x1913)))
	var x1916 uint32
	var x1917 uint32
	x1916, x1917 = bits.Add32(x1868, x1899, uint32(uint1(x1915)))
	var x1918 uint32
	var x1919 uint32
	x1919, x1918 = bits.Mul32(x1900, 0xffffffff)
	var x1920 uint32
	var x1921 uint32
	x1921, x1920 = bits.Mul32(x1900, 0xffffffff)
	var x1922 uint32
	var x1923 uint32
	x1923, x1922 = bits.Mul32(x1900, 0xffffffff)
	var x1924 uint32
	var x1925 uint32
	x1925, x1924 = bits.Mul32(x1900, 0xffffffff)
	var x1926 uint32
	var x1927 uint32
	x1926, x1927 = bits.Add32(x1925, x1922, uint32(0x0))
	var x1928 uint32
	var x1929 uint32
	x1928, x1929 = bits.Add32(x1923, x1920, uint32(uint1(x1927)))
	x1930 := (uint32(uint1(x1929)) + x1921)
	var x1932 uint32
	_, x1932 = bits.Add32(x1900, x1924, uint32(0x0))
	var x1933 uint32
	var x1934 uint32
	x1933, x1934 = bits.Add32(x1902, x1926, uint32(uint1(x1932)))
	var x1935 uint32
	var x1936 uint32
	x1935, x1936 = bits.Add32(x1904, x1928, uint32(uint1(x1934)))
	var x1937 uint32
	var x1938 uint32
	x1937, x1938 = bits.Add32(x1906, x1930, uint32(uint1(x1936)))
	var x1939 uint32
	var x1940 uint32
	x1939, x1940 = bits.Add32(x1908, uint32(0x0), uint32(uint1(x1938)))
	var x1941 uint32
	var x1942 uint32
	x1941, x1942 = bits.Add32(x1910, uint32(0x0), uint32(uint1(x1940)))
	var x1943 uint32
	var x1944 uint32
	x1943, x1944 = bits.Add32(x1912, x1900, uint32(uint1(x1942)))
	var x1945 uint32
	var x1946 uint32
	x1945, x1946 = bits.Add32(x1914, x1918, uint32(uint1(x1944)))
	var x1947 uint32
	var x1948 uint32
	x1947, x1948 = bits.Add32(x1916, x1919, uint32(uint1(x1946)))
	x1949 := (uint32(uint1(x1948)) + uint32(uint1(x1917)))
	var x1950 uint32
	var x1951 uint32
	x1951, x1950 = bits.Mul32(x128, arg1[7])
	var x1952 uint32
	var x1953 uint32
	x1953, x1952 = bits.Mul32(x128, arg1[6])
	var x1954 uint32
	var x1955 uint32
	x1955, x1954 = bits.Mul32(x128, arg1[5])
	var x1956 uint32
	var x1957 uint32
	x1957, x1956 = bits.Mul32(x128, arg1[4])
	var x1958 uint32
	var x1959 uint32
	x1959, x1958 = bits.Mul32(x128, arg1[3])
	var x1960 uint32
	var x1961 uint32
	x1961, x1960 = bits.Mul32(x128, arg1[2])
	var x1962 uint32
	var x1963 uint32
	x1963, x1962 = bits.Mul32(x128, arg1[1])
	var x1964 uint32
	var x1965 uint32
	x1965, x1964 = bits.Mul32(x128, arg1[0])
	var x1966 uint32
	var x1967 uint32
	x1966, x1967 = bits.Add32(x1965, x1962, uint32(0x0))
	var x1968 uint32
	var x1969 uint32
	x1968, x1969 = bits.Add32(x1963, x1960, uint32(uint1(x1967)))
	var x1970 uint32
	var x1971 uint32
	x1970, x1971 = bits.Add32(x1961, x1958, uint32(uint1(x1969)))
	var x1972 uint32
	var x1973 uint32
	x1972, x1973 = bits.Add32(x1959, x1956, uint32(uint1(x1971)))
	var x1974 uint32
	var x1975 uint32
	x1974, x1975 = bits.Add32(x1957, x1954, uint32(uint1(x1973)))
	var x1976 uint32
	var x1977 uint32
	x1976, x1977 = bits.Add32(x1955, x1952, uint32(uint1(x1975)))
	var x1978 uint32
	var x1979 uint32
	x1978, x1979 = bits.Add32(x1953, x1950, uint32(uint1(x1977)))
	x1980 := (uint32(uint1(x1979)) + x1951)
	var x1981 uint32
	var x1982 uint32
	x1981, x1982 = bits.Add32(x1933, x1964, uint32(0x0))
	var x1983 uint32
	var x1984 uint32
	x1983, x1984 = bits.Add32(x1935, x1966, uint32(uint1(x1982)))
	var x1985 uint32
	var x1986 uint32
	x1985, x1986 = bits.Add32(x1937, x1968, uint32(uint1(x1984)))
	var x1987 uint32
	var x1988 uint32
	x1987, x1988 = bits.Add32(x1939, x1970, uint32(uint1(x1986)))
	var x1989 uint32
	var x1990 uint32
	x1989, x1990 = bits.Add32(x1941, x1972, uint32(uint1(x1988)))
	var x1991 uint32
	var x1992 uint32
	x1991, x1992 = bits.Add32(x1943, x1974, uint32(uint1(x1990)))
	var x1993 uint32
	var x1994 uint32
	x1993, x1994 = bits.Add32(x1945, x1976, uint32(uint1(x1992)))
	var x1995 uint32
	var x1996 uint32
	x1995, x1996 = bits.Add32(x1947, x1978, uint32(uint1(x1994)))
	var x1997 uint32
	var x1998 uint32
	x1997, x1998 = bits.Add32(x1949, x1980, uint32(uint1(x1996)))
	var x1999 uint32
	var x2000 uint32
	x2000, x1999 = bits.Mul32(x1981, 0xffffffff)
	var x2001 uint32
	var x2002 uint32
	x2002, x2001 = bits.Mul32(x1981, 0xffffffff)
	var x2003 uint32
	var x2004 uint32
	x2004, x2003 = bits.Mul32(x1981, 0xffffffff)
	var x2005 uint32
	var x2006 uint32
	x2006, x2005 = bits.Mul32(x1981, 0xffffffff)
	var x2007 uint32
	var x2008 uint32
	x2007, x2008 = bits.Add32(x2006, x2003, uint32(0x0))
	var x2009 uint32
	var x2010 uint32
	x2009, x2010 = bits.Add32(x2004, x2001, uint32(uint1(x2008)))
	x2011 := (uint32(uint1(x2010)) + x2002)
	var x2013 uint32
	_, x2013 = bits.Add32(x1981, x2005, uint32(0x0))
	var x2014 uint32
	var x2015 uint32
	x2014, x2015 = bits.Add32(x1983, x2007, uint32(uint1(x2013)))
	var x2016 uint32
	var x2017 uint32
	x2016, x2017 = bits.Add32(x1985, x2009, uint32(uint1(x2015)))
	var x2018 uint32
	var x2019 uint32
	x2018, x2019 = bits.Add32(x1987, x2011, uint32(uint1(x2017)))
	var x2020 uint32
	var x2021 uint32
	x2020, x2021 = bits.Add32(x1989, uint32(0x0), uint32(uint1(x2019)))
	var x2022 uint32
	var x2023 uint32
	x2022, x2023 = bits.Add32(x1991, uint32(0x0), uint32(uint1(x2021)))
	var x2024 uint32
	var x2025 uint32
	x2024, x2025 = bits.Add32(x1993, x1981, uint32(uint1(x2023)))
	var x2026 uint32
	var x2027 uint32
	x2026, x2027 = bits.Add32(x1995, x1999, uint32(uint1(x2025)))
	var x2028 uint32
	var x2029 uint32
	x2028, x2029 = bits.Add32(x1997, x2000, uint32(uint1(x2027)))
	x2030 := (uint32(uint1(x2029)) + uint32(uint1(x1998)))
	var x2031 uint32
	var x2032 uint32
	x2032, x2031 = bits.Mul32(x129, arg1[7])
	var x2033 uint32
	var x2034 uint32
	x2034, x2033 = bits.Mul32(x129, arg1[6])
	var x2035 uint32
	var x2036 uint32
	x2036, x2035 = bits.Mul32(x129, arg1[5])
	var x2037 uint32
	var x2038 uint32
	x2038, x2037 = bits.Mul32(x129, arg1[4])
	var x2039 uint32
	var x2040 uint32
	x2040, x2039 = bits.Mul32(x129, arg1[3])
	var x2041 uint32
	var x2042 uint32
	x2042, x2041 = bits.Mul32(x129, arg1[2])
	var x2043 uint32
	var x2044 uint32
	x2044, x2043 = bits.Mul32(x129, arg1[1])
	var x2045 uint32
	var x2046 uint32
	x2046, x2045 = bits.Mul32(x129, arg1[0])
	var x2047 uint32
	var x2048 uint32
	x2047, x2048 = bits.Add32(x2046, x2043, uint32(0x0))
	var x2049 uint32
	var x2050 uint32
	x2049, x2050 = bits.Add32(x2044, x2041, uint32(uint1(x2048)))
	var x2051 uint32
	var x2052 uint32
	x2051, x2052 = bits.Add32(x2042, x2039, uint32(uint1(x2050)))
	var x2053 uint32
	var x2054 uint32
	x2053, x2054 = bits.Add32(x2040, x2037, uint32(uint1(x2052)))
	var x2055 uint32
	var x2056 uint32
	x2055, x2056 = bits.Add32(x2038, x2035, uint32(uint1(x2054)))
	var x2057 uint32
	var x2058 uint32
	x2057, x2058 = bits.Add32(x2036, x2033, uint32(uint1(x2056)))
	var x2059 uint32
	var x2060 uint32
	x2059, x2060 = bits.Add32(x2034, x2031, uint32(uint1(x2058)))
	x2061 := (uint32(uint1(x2060)) + x2032)
	var x2062 uint32
	var x2063 uint32
	x2062, x2063 = bits.Add32(x2014, x2045, uint32(0x0))
	var x2064 uint32
	var x2065 uint32
	x2064, x2065 = bits.Add32(x2016, x2047, uint32(uint1(x2063)))
	var x2066 uint32
	var x2067 uint32
	x2066, x2067 = bits.Add32(x2018, x2049, uint32(uint1(x2065)))
	var x2068 uint32
	var x2069 uint32
	x2068, x2069 = bits.Add32(x2020, x2051, uint32(uint1(x2067)))
	var x2070 uint32
	var x2071 uint32
	x2070, x2071 = bits.Add32(x2022, x2053, uint32(uint1(x2069)))
	var x2072 uint32
	var x2073 uint32
	x2072, x2073 = bits.Add32(x2024, x2055, uint32(uint1(x2071)))
	var x2074 uint32
	var x2075 uint32
	x2074, x2075 = bits.Add32(x2026, x2057, uint32(uint1(x2073)))
	var x2076 uint32
	var x2077 uint32
	x2076, x2077 = bits.Add32(x2028, x2059, uint32(uint1(x2075)))
	var x2078 uint32
	var x2079 uint32
	x2078, x2079 = bits.Add32(x2030, x2061, uint32(uint1(x2077)))
	var x2080 uint32
	var x2081 uint32
	x2081, x2080 = bits.Mul32(x2062, 0xffffffff)
	var x2082 uint32
	var x2083 uint32
	x2083, x2082 = bits.Mul32(x2062, 0xffffffff)
	var x2084 uint32
	var x2085 uint32
	x2085, x2084 = bits.Mul32(x2062, 0xffffffff)
	var x2086 uint32
	var x2087 uint32
	x2087, x2086 = bits.Mul32(x2062, 0xffffffff)
	var x2088 uint32
	var x2089 uint32
	x2088, x2089 = bits.Add32(x2087, x2084, uint32(0x0))
	var x2090 uint32
	var x2091 uint32
	x2090, x2091 = bits.Add32(x2085, x2082, uint32(uint1(x2089)))
	x2092 := (uint32(uint1(x2091)) + x2083)
	var x2094 uint32
	_, x2094 = bits.Add32(x2062, x2086, uint32(0x0))
	var x2095 uint32
	var x2096 uint32
	x2095, x2096 = bits.Add32(x2064, x2088, uint32(uint1(x2094)))
	var x2097 uint32
	var x2098 uint32
	x2097, x2098 = bits.Add32(x2066, x2090, uint32(uint1(x2096)))
	var x2099 uint32
	var x2100 uint32
	x2099, x2100 = bits.Add32(x2068, x2092, uint32(uint1(x2098)))
	var x2101 uint32
	var x2102 uint32
	x2101, x2102 = bits.Add32(x2070, uint32(0x0), uint32(uint1(x2100)))
	var x2103 uint32
	var x2104 uint32
	x2103, x2104 = bits.Add32(x2072, uint32(0x0), uint32(uint1(x2102)))
	var x2105 uint32
	var x2106 uint32
	x2105, x2106 = bits.Add32(x2074, x2062, uint32(uint1(x2104)))
	var x2107 uint32
	var x2108 uint32
	x2107, x2108 = bits.Add32(x2076, x2080, uint32(uint1(x2106)))
	var x2109 uint32
	var x2110 uint32
	x2109, x2110 = bits.Add32(x2078, x2081, uint32(uint1(x2108)))
	x2111 := (uint32(uint1(x2110)) + uint32(uint1(x2079)))
	var x2112 uint32
	var x2113 uint32
	x2112, x2113 = bits.Sub32(x2095, 0xffffffff, uint32(0x0))
	var x2114 uint32
	var x2115 uint32
	x2114, x2115 = bits.Sub32(x2097, 0xffffffff, uint32(uint1(x2113)))
	var x2116 uint32
	var x2117 uint32
	x2116, x2117 = bits.Sub32(x2099, 0xffffffff, uint32(uint1(x2115)))
	var x2118 uint32
	var x2119 uint32
	x2118, x2119 = bits.Sub32(x2101, uint32(0x0), uint32(uint1(x2117)))
	var x2120 uint32
	var x2121 uint32
	x2120, x2121 = bits.Sub32(x2103, uint32(0x0), uint32(uint1(x2119)))
	var x2122 uint32
	var x2123 uint32
	x2122, x2123 = bits.Sub32(x2105, uint32(0x0), uint32(uint1(x2121)))
	var x2124 uint32
	var x2125 uint32
	x2124, x2125 = bits.Sub32(x2107, uint32(0x1), uint32(uint1(x2123)))
	var x2126 uint32
	var x2127 uint32
	x2126, x2127 = bits.Sub32(x2109, 0xffffffff, uint32(uint1(x2125)))
	var x2129 uint32
	_, x2129 = bits.Sub32(x2111, uint32(0x0), uint32(uint1(x2127)))
	var x2130 uint32
	cmovznzU32(&x2130, uint1(x2129), x2112, x2095)
	var x2131 uint32
	cmovznzU32(&x2131, uint1(x2129), x2114, x2097)
	var x2132 uint32
	cmovznzU32(&x2132, uint1(x2129), x2116, x2099)
	var x2133 uint32
	cmovznzU32(&x2133, uint1(x2129), x2118, x2101)
	var x2134 uint32
	cmovznzU32(&x2134, uint1(x2129), x2120, x2103)
	var x2135 uint32
	cmovznzU32(&x2135, uint1(x2129), x2122, x2105)
	var x2136 uint32
	cmovznzU32(&x2136, uint1(x2129), x2124, x2107)
	var x2137 uint32
	cmovznzU32(&x2137, uint1(x2129), x2126, x2109)
	var x2138 uint32
	var x2139 uint32
	x2139, x2138 = bits.Mul32(x165, arg2[7])
	var x2140 uint32
	var x2141 uint32
	x2141, x2140 = bits.Mul32(x165, arg2[6])
	var x2142 uint32
	var x2143 uint32
	x2143, x2142 = bits.Mul32(x165, arg2[5])
	var x2144 uint32
	var x2145 uint32
	x2145, x2144 = bits.Mul32(x165, arg2[4])
	var x2146 uint32
	var x2147 uint32
	x2147, x2146 = bits.Mul32(x165, arg2[3])
	var x2148 uint32
	var x2149 uint32
	x2149, x2148 = bits.Mul32(x165, arg2[2])
	var x2150 uint32
	var x2151 uint32
	x2151, x2150 = bits.Mul32(x165, arg2[1])
	var x2152 uint32
	var x2153 uint32
	x2153, x2152 = bits.Mul32(x165, arg2[0])
	var x2154 uint32
	var x2155 uint32
	x2154, x2155 = bits.Add32(x2153, x2150, uint32(0x0))
	var x2156 uint32
	var x2157 uint32
	x2156, x2157 = bits.Add32(x2151, x2148, uint32(uint1(x2155)))
	var x2158 uint32
	var x2159 uint32
	x2158, x2159 = bits.Add32(x2149, x2146, uint32(uint1(x2157)))
	var x2160 uint32
	var x2161 uint32
	x2160, x2161 = bits.Add32(x2147, x2144, uint32(uint1(x2159)))
	var x2162 uint32
	var x2163 uint32
	x2162, x2163 = bits.Add32(x2145, x2142, uint32(uint1(x2161)))
	var x2164 uint32
	var x2165 uint32
	x2164, x2165 = bits.Add32(x2143, x2140, uint32(uint1(x2163)))
	var x2166 uint32
	var x2167 uint32
	x2166, x2167 = bits.Add32(x2141, x2138, uint32(uint1(x2165)))
	x2168 := (uint32(uint1(x2167)) + x2139)
	var x2169 uint32
	var x2170 uint32
	x2170, x2169 = bits.Mul32(x2152, 0xffffffff)
	var x2171 uint32
	var x2172 uint32
	x2172, x2171 = bits.Mul32(x2152, 0xffffffff)
	var x2173 uint32
	var x2174 uint32
	x2174, x2173 = bits.Mul32(x2152, 0xffffffff)
	var x2175 uint32
	var x2176 uint32
	x2176, x2175 = bits.Mul32(x2152, 0xffffffff)
	var x2177 uint32
	var x2178 uint32
	x2177, x2178 = bits.Add32(x2176, x2173, uint32(0x0))
	var x2179 uint32
	var x2180 uint32
	x2179, x2180 = bits.Add32(x2174, x2171, uint32(uint1(x2178)))
	x2181 := (uint32(uint1(x2180)) + x2172)
	var x2183 uint32
	_, x2183 = bits.Add32(x2152, x2175, uint32(0x0))
	var x2184 uint32
	var x2185 uint32
	x2184, x2185 = bits.Add32(x2154, x2177, uint32(uint1(x2183)))
	var x2186 uint32
	var x2187 uint32
	x2186, x2187 = bits.Add32(x2156, x2179, uint32(uint1(x2185)))
	var x2188 uint32
	var x2189 uint32
	x2188, x2189 = bits.Add32(x2158, x2181, uint32(uint1(x2187)))
	var x2190 uint32
	var x2191 uint32
	x2190, x2191 = bits.Add32(x2160, uint32(0x0), uint32(uint1(x2189)))
	var x2192 uint32
	var x2193 uint32
	x2192, x2193 = bits.Add32(x2162, uint32(0x0), uint32(uint1(x2191)))
	var x2194 uint32
	var x2195 uint32
	x2194, x2195 = bits.Add32(x2164, x2152, uint32(uint1(x2193)))
	var x2196 uint32
	var x2197 uint32
	x2196, x2197 = bits.Add32(x2166, x2169, uint32(uint1(x2195)))
	var x2198 uint32
	var x2199 uint32
	x2198, x2199 = bits.Add32(x2168, x2170, uint32(uint1(x2197)))
	var x2200 uint32
	var x2201 uint32
	x2201, x2200 = bits.Mul32(x166, arg2[7])
	var x2202 uint32
	var x2203 uint32
	x2203, x2202 = bits.Mul32(x166, arg2[6])
	var x2204 uint32
	var x2205 uint32
	x2205, x2204 = bits.Mul32(x166, arg2[5])
	var x2206 uint32
	var x2207 uint32
	x2207, x2206 = bits.Mul32(x166, arg2[4])
	var x2208 uint32
	var x2209 uint32
	x2209, x2208 = bits.Mul32(x166, arg2[3])
	var x2210 uint32
	var x2211 uint32
	x2211, x2210 = bits.Mul32(x166, arg2[2])
	var x2212 uint32
	var x2213 uint32
	x2213, x2212 = bits.Mul32(x166, arg2[1])
	var x2214 uint32
	var x2215 uint32
	x2215, x2214 = bits.Mul32(x166, arg2[0])
	var x2216 uint32
	var x2217 uint32
	x2216, x2217 = bits.Add32(x2215, x2212, uint32(0x0))
	var x2218 uint32
	var x2219 uint32
	x2218, x2219 = bits.Add32(x2213, x2210, uint32(uint1(x2217)))
	var x2220 uint32
	var x2221 uint32
	x2220, x2221 = bits.Add32(x2211, x2208, uint32(uint1(x2219)))
	var x2222 uint32
	var x2223 uint32
	x2222, x2223 = bits.Add32(x2209, x2206, uint32(uint1(x2221)))
	var x2224 uint32
	var x2225 uint32
	x2224, x2225 = bits.Add32(x2207, x2204, uint32(uint1(x2223)))
	var x2226 uint32
	var x2227 uint32
	x2226, x2227 = bits.Add32(x2205, x2202, uint32(uint1(x2225)))
	var x2228 uint32
	var x2229 uint32
	x2228, x2229 = bits.Add32(x2203, x2200, uint32(uint1(x2227)))
	x2230 := (uint32(uint1(x2229)) + x2201)
	var x2231 uint32
	var x2232 uint32
	x2231, x2232 = bits.Add32(x2184, x2214, uint32(0x0))
	var x2233 uint32
	var x2234 uint32
	x2233, x2234 = bits.Add32(x2186, x2216, uint32(uint1(x2232)))
	var x2235 uint32
	var x2236 uint32
	x2235, x2236 = bits.Add32(x2188, x2218, uint32(uint1(x2234)))
	var x2237 uint32
	var x2238 uint32
	x2237, x2238 = bits.Add32(x2190, x2220, uint32(uint1(x2236)))
	var x2239 uint32
	var x2240 uint32
	x2239, x2240 = bits.Add32(x2192, x2222, uint32(uint1(x2238)))
	var x2241 uint32
	var x2242 uint32
	x2241, x2242 = bits.Add32(x2194, x2224, uint32(uint1(x2240)))
	var x2243 uint32
	var x2244 uint32
	x2243, x2244 = bits.Add32(x2196, x2226, uint32(uint1(x2242)))
	var x2245 uint32
	var x2246 uint32
	x2245, x2246 = bits.Add32(x2198, x2228, uint32(uint1(x2244)))
	var x2247 uint32
	var x2248 uint32
	x2247, x2248 = bits.Add32(uint32(uint1(x2199)), x2230, uint32(uint1(x2246)))
	var x2249 uint32
	var x2250 uint32
	x2250, x2249 = bits.Mul32(x2231, 0xffffffff)
	var x2251 uint32
	var x2252 uint32
	x2252, x2251 = bits.Mul32(x2231, 0xffffffff)
	var x2253 uint32
	var x2254 uint32
	x2254, x2253 = bits.Mul32(x2231, 0xffffffff)
	var x2255 uint32
	var x2256 uint32
	x2256, x2255 = bits.Mul32(x2231, 0xffffffff)
	var x2257 uint32
	var x2258 uint32
	x2257, x2258 = bits.Add32(x2256, x2253, uint32(0x0))
	var x2259 uint32
	var x2260 uint32
	x2259, x2260 = bits.Add32(x2254, x2251, uint32(uint1(x2258)))
	x2261 := (uint32(uint1(x2260)) + x2252)
	var x2263 uint32
	_, x2263 = bits.Add32(x2231, x2255, uint32(0x0))
	var x2264 uint32
	var x2265 uint32
	x2264, x2265 = bits.Add32(x2233, x2257, uint32(uint1(x2263)))
	var x2266 uint32
	var x2267 uint32
	x2266, x2267 = bits.Add32(x2235, x2259, uint32(uint1(x2265)))
	var x2268 uint32
	var x2269 uint32
	x2268, x2269 = bits.Add32(x2237, x2261, uint32(uint1(x2267)))
	var x2270 uint32
	var x2271 uint32
	x2270, x2271 = bits.Add32(x2239, uint32(0x0), uint32(uint1(x2269)))
	var x2272 uint32
	var x2273 uint32
	x2272, x2273 = bits.Add32(x2241, uint32(0x0), uint32(uint1(x2271)))
	var x2274 uint32
	var x2275 uint32
	x2274, x2275 = bits.Add32(x2243, x2231, uint32(uint1(x2273)))
	var x2276 uint32
	var x2277 uint32
	x2276, x2277 = bits.Add32(x2245, x2249, uint32(uint1(x2275)))
	var x2278 uint32
	var x2279 uint32
	x2278, x2279 = bits.Add32(x2247, x2250, uint32(uint1(x2277)))
	x2280 := (uint32(uint1(x2279)) + uint32(uint1(x2248)))
	var x2281 uint32
	var x2282 uint32
	x2282, x2281 = bits.Mul32(x167, arg2[7])
	var x2283 uint32
	var x2284 uint32
	x2284, x2283 = bits.Mul32(x167, arg2[6])
	var x2285 uint32
	var x2286 uint32
	x2286, x2285 = bits.Mul32(x167, arg2[5])
	var x2287 uint32
	var x2288 uint32
	x2288, x2287 = bits.Mul32(x167, arg2[4])
	var x2289 uint32
	var x2290 uint32
	x2290, x2289 = bits.Mul32(x167, arg2[3])
	var x2291 uint32
	var x2292 uint32
	x2292, x2291 = bits.Mul32(x167, arg2[2])
	var x2293 uint32
	var x2294 uint32
	x2294, x2293 = bits.Mul32(x167, arg2[1])
	var x2295 uint32
	var x2296 uint32
	x2296, x2295 = bits.Mul32(x167, arg2[0])
	var x2297 uint32
	var x2298 uint32
	x2297, x2298 = bits.Add32(x2296, x2293, uint32(0x0))
	var x2299 uint32
	var x2300 uint32
	x2299, x2300 = bits.Add32(x2294, x2291, uint32(uint1(x2298)))
	var x2301 uint32
	var x2302 uint32
	x2301, x2302 = bits.Add32(x2292, x2289, uint32(uint1(x2300)))
	var x2303 uint32
	var x2304 uint32
	x2303, x2304 = bits.Add32(x2290, x2287, uint32(uint1(x2302)))
	var x2305 uint32
	var x2306 uint32
	x2305, x2306 = bits.Add32(x2288, x2285, uint32(uint1(x2304)))
	var x2307 uint32
	var x2308 uint32
	x2307, x2308 = bits.Add32(x2286, x2283, uint32(uint1(x2306)))
	var x2309 uint32
	var x2310 uint32
	x2309, x2310 = bits.Add32(x2284, x2281, uint32(uint1(x2308)))
	x2311 := (uint32(uint1(x2310)) + x2282)
	var x2312 uint32
	var x2313 uint32
	x2312, x2313 = bits.Add32(x2264, x2295, uint32(0x0))
	var x2314 uint32
	var x2315 uint32
	x2314, x2315 = bits.Add32(x2266, x2297, uint32(uint1(x2313)))
	var x2316 uint32
	var x2317 uint32
	x2316, x2317 = bits.Add32(x2268, x2299, uint32(uint1(x2315)))
	var x2318 uint32
	var x2319 uint32
	x2318, x2319 = bits.Add32(x2270, x2301, uint32(uint1(x2317)))
	var x2320 uint32
	var x2321 uint32
	x2320, x2321 = bits.Add32(x2272, x2303, uint32(uint1(x2319)))
	var x2322 uint32
	var x2323 uint32
	x2322, x2323 = bits.Add32(x2274, x2305, uint32(uint1(x2321)))
	var x2324 uint32
	var x2325 uint32
	x2324, x2325 = bits.Add32(x2276, x2307, uint32(uint1(x2323)))
	var x2326 uint32
	var x2327 uint32
	x2326, x2327 = bits.Add32(x2278, x2309, uint32(uint1(x2325)))
	var x2328 uint32
	var x2329 uint32
	x2328, x2329 = bits.Add32(x2280, x2311, uint32(uint1(x2327)))
	var x2330 uint32
	var x2331 uint32
	x2331, x2330 = bits.Mul32(x2312, 0xffffffff)
	var x2332 uint32
	var x2333 uint32
	x2333, x2332 = bits.Mul32(x2312, 0xffffffff)
	var x2334 uint32
	var x2335 uint32
	x2335, x2334 = bits.Mul32(x2312, 0xffffffff)
	var x2336 uint32
	var x2337 uint32
	x2337, x2336 = bits.Mul32(x2312, 0xffffffff)
	var x2338 uint32
	var x2339 uint32
	x2338, x2339 = bits.Add32(x2337, x2334, uint32(0x0))
	var x2340 uint32
	var x2341 uint32
	x2340, x2341 = bits.Add32(x2335, x2332, uint32(uint1(x2339)))
	x2342 := (uint32(uint1(x2341)) + x2333)
	var x2344 uint32
	_, x2344 = bits.Add32(x2312, x2336, uint32(0x0))
	var x2345 uint32
	var x2346 uint32
	x2345, x2346 = bits.Add32(x2314, x2338, uint32(uint1(x2344)))
	var x2347 uint32
	var x2348 uint32
	x2347, x2348 = bits.Add32(x2316, x2340, uint32(uint1(x2346)))
	var x2349 uint32
	var x2350 uint32
	x2349, x2350 = bits.Add32(x2318, x2342, uint32(uint1(x2348)))
	var x2351 uint32
	var x2352 uint32
	x2351, x2352 = bits.Add32(x2320, uint32(0x0), uint32(uint1(x2350)))
	var x2353 uint32
	var x2354 uint32
	x2353, x2354 = bits.Add32(x2322, uint32(0x0), uint32(uint1(x2352)))
	var x2355 uint32
	var x2356 uint32
	x2355, x2356 = bits.Add32(x2324, x2312, uint32(uint1(x2354)))
	var x2357 uint32
	var x2358 uint32
	x2357, x2358 = bits.Add32(x2326, x2330, uint32(uint1(x2356)))
	var x2359 uint32
	var x2360 uint32
	x2359, x2360 = bits.Add32(x2328, x2331, uint32(uint1(x2358)))
	x2361 := (uint32(uint1(x2360)) + uint32(uint1(x2329)))
	var x2362 uint32
	var x2363 uint32
	x2363, x2362 = bits.Mul32(x168, arg2[7])
	var x2364 uint32
	var x2365 uint32
	x2365, x2364 = bits.Mul32(x168, arg2[6])
	var x2366 uint32
	var x2367 uint32
	x2367, x2366 = bits.Mul32(x168, arg2[5])
	var x2368 uint32
	var x2369 uint32
	x2369, x2368 = bits.Mul32(x168, arg2[4])
	var x2370 uint32
	var x2371 uint32
	x2371, x2370 = bits.Mul32(x168, arg2[3])
	var x2372 uint32
	var x2373 uint32
	x2373, x2372 = bits.Mul32(x168, arg2[2])
	var x2374 uint32
	var x2375 uint32
	x2375, x2374 = bits.Mul32(x168, arg2[1])
	var x2376 uint32
	var x2377 uint32
	x2377, x2376 = bits.Mul32(x168, arg2[0])
	var x2378 uint32
	var x2379 uint32
	x2378, x2379 = bits.Add32(x2377, x2374, uint32(0x0))
	var x2380 uint32
	var x2381 uint32
	x2380, x2381 = bits.Add32(x2375, x2372, uint32(uint1(x2379)))
	var x2382 uint32
	var x2383 uint32
	x2382, x2383 = bits.Add32(x2373, x2370, uint32(uint1(x2381)))
	var x2384 uint32
	var x2385 uint32
	x2384, x2385 = bits.Add32(x2371, x2368, uint32(uint1(x2383)))
	var x2386 uint32
	var x2387 uint32
	x2386, x2387 = bits.Add32(x2369, x2366, uint32(uint1(x2385)))
	var x2388 uint32
	var x2389 uint32
	x2388, x2389 = bits.Add32(x2367, x2364, uint32(uint1(x2387)))
	var x2390 uint32
	var x2391 uint32
	x2390, x2391 = bits.Add32(x2365, x2362, uint32(uint1(x2389)))
	x2392 := (uint32(uint1(x2391)) + x2363)
	var x2393 uint32
	var x2394 uint32
	x2393, x2394 = bits.Add32(x2345, x2376, uint32(0x0))
	var x2395 uint32
	var x2396 uint32
	x2395, x2396 = bits.Add32(x2347, x2378, uint32(uint1(x2394)))
	var x2397 uint32
	var x2398 uint32
	x2397, x2398 = bits.Add32(x2349, x2380, uint32(uint1(x2396)))
	var x2399 uint32
	var x2400 uint32
	x2399, x2400 = bits.Add32(x2351, x2382, uint32(uint1(x2398)))
	var x2401 uint32
	var x2402 uint32
	x2401, x2402 = bits.Add32(x2353, x2384, uint32(uint1(x2400)))
	var x2403 uint32
	var x2404 uint32
	x2403, x2404 = bits.Add32(x2355, x2386, uint32(uint1(x2402)))
	var x2405 uint32
	var x2406 uint32
	x2405, x2406 = bits.Add32(x2357, x2388, uint32(uint1(x2404)))
	var x2407 uint32
	var x2408 uint32
	x2407, x2408 = bits.Add32(x2359, x2390, uint32(uint1(x2406)))
	var x2409 uint32
	var x2410 uint32
	x2409, x2410 = bits.Add32(x2361, x2392, uint32(uint1(x2408)))
	var x2411 uint32
	var x2412 uint32
	x2412, x2411 = bits.Mul32(x2393, 0xffffffff)
	var x2413 uint32
	var x2414 uint32
	x2414, x2413 = bits.Mul32(x2393, 0xffffffff)
	var x2415 uint32
	var x2416 uint32
	x2416, x2415 = bits.Mul32(x2393, 0xffffffff)
	var x2417 uint32
	var x2418 uint32
	x2418, x2417 = bits.Mul32(x2393, 0xffffffff)
	var x2419 uint32
	var x2420 uint32
	x2419, x2420 = bits.Add32(x2418, x2415, uint32(0x0))
	var x2421 uint32
	var x2422 uint32
	x2421, x2422 = bits.Add32(x2416, x2413, uint32(uint1(x2420)))
	x2423 := (uint32(uint1(x2422)) + x2414)
	var x2425 uint32
	_, x2425 = bits.Add32(x2393, x2417, uint32(0x0))
	var x2426 uint32
	var x2427 uint32
	x2426, x2427 = bits.Add32(x2395, x2419, uint32(uint1(x2425)))
	var x2428 uint32
	var x2429 uint32
	x2428, x2429 = bits.Add32(x2397, x2421, uint32(uint1(x2427)))
	var x2430 uint32
	var x2431 uint32
	x2430, x2431 = bits.Add32(x2399, x2423, uint32(uint1(x2429)))
	var x2432 uint32
	var x2433 uint32
	x2432, x2433 = bits.Add32(x2401, uint32(0x0), uint32(uint1(x2431)))
	var x2434 uint32
	var x2435 uint32
	x2434, x2435 = bits.Add32(x2403, uint32(0x0), uint32(uint1(x2433)))
	var x2436 uint32
	var x2437 uint32
	x2436, x2437 = bits.Add32(x2405, x2393, uint32(uint1(x2435)))
	var x2438 uint32
	var x2439 uint32
	x2438, x2439 = bits.Add32(x2407, x2411, uint32(uint1(x2437)))
	var x2440 uint32
	var x2441 uint32
	x2440, x2441 = bits.Add32(x2409, x2412, uint32(uint1(x2439)))
	x2442 := (uint32(uint1(x2441)) + uint32(uint1(x2410)))
	var x2443 uint32
	var x2444 uint32
	x2444, x2443 = bits.Mul32(x169, arg2[7])
	var x2445 uint32
	var x2446 uint32
	x2446, x2445 = bits.Mul32(x169, arg2[6])
	var x2447 uint32
	var x2448 uint32
	x2448, x2447 = bits.Mul32(x169, arg2[5])
	var x2449 uint32
	var x2450 uint32
	x2450, x2449 = bits.Mul32(x169, arg2[4])
	var x2451 uint32
	var x2452 uint32
	x2452, x2451 = bits.Mul32(x169, arg2[3])
	var x2453 uint32
	var x2454 uint32
	x2454, x2453 = bits.Mul32(x169, arg2[2])
	var x2455 uint32
	var x2456 uint32
	x2456, x2455 = bits.Mul32(x169, arg2[1])
	var x2457 uint32
	var x2458 uint32
	x2458, x2457 = bits.Mul32(x169, arg2[0])
	var x2459 uint32
	var x2460 uint32
	x2459, x2460 = bits.Add32(x2458, x2455, uint32(0x0))
	var x2461 uint32
	var x2462 uint32
	x2461, x2462 = bits.Add32(x2456, x2453, uint32(uint1(x2460)))
	var x2463 uint32
	var x2464 uint32
	x2463, x2464 = bits.Add32(x2454, x2451, uint32(uint1(x2462)))
	var x2465 uint32
	var x2466 uint32
	x2465, x2466 = bits.Add32(x2452, x2449, uint32(uint1(x2464)))
	var x2467 uint32
	var x2468 uint32
	x2467, x2468 = bits.Add32(x2450, x2447, uint32(uint1(x2466)))
	var x2469 uint32
	var x2470 uint32
	x2469, x2470 = bits.Add32(x2448, x2445, uint32(uint1(x2468)))
	var x2471 uint32
	var x2472 uint32
	x2471, x2472 = bits.Add32(x2446, x2443, uint32(uint1(x2470)))
	x2473 := (uint32(uint1(x2472)) + x2444)
	var x2474 uint32
	var x2475 uint32
	x2474, x2475 = bits.Add32(x2426, x2457, uint32(0x0))
	var x2476 uint32
	var x2477 uint32
	x2476, x2477 = bits.Add32(x2428, x2459, uint32(uint1(x2475)))
	var x2478 uint32
	var x2479 uint32
	x2478, x2479 = bits.Add32(x2430, x2461, uint32(uint1(x2477)))
	var x2480 uint32
	var x2481 uint32
	x2480, x2481 = bits.Add32(x2432, x2463, uint32(uint1(x2479)))
	var x2482 uint32
	var x2483 uint32
	x2482, x2483 = bits.Add32(x2434, x2465, uint32(uint1(x2481)))
	var x2484 uint32
	var x2485 uint32
	x2484, x2485 = bits.Add32(x2436, x2467, uint32(uint1(x2483)))
	var x2486 uint32
	var x2487 uint32
	x2486, x2487 = bits.Add32(x2438, x2469, uint32(uint1(x2485)))
	var x2488 uint32
	var x2489 uint32
	x2488, x2489 = bits.Add32(x2440, x2471, uint32(uint1(x2487)))
	var x2490 uint32
	var x2491 uint32
	x2490, x2491 = bits.Add32(x2442, x2473, uint32(uint1(x2489)))
	var x2492 uint32
	var x2493 uint32
	x2493, x2492 = bits.Mul32(x2474, 0xffffffff)
	var x2494 uint32
	var x2495 uint32
	x2495, x2494 = bits.Mul32(x2474, 0xffffffff)
	var x2496 uint32
	var x2497 uint32
	x2497, x2496 = bits.Mul32(x2474, 0xffffffff)
	var x2498 uint32
	var x2499 uint32
	x2499, x2498 = bits.Mul32(x2474, 0xffffffff)
	var x2500 uint32
	var x2501 uint32
	x2500, x2501 = bits.Add32(x2499, x2496, uint32(0x0))
	var x2502 uint32
	var x2503 uint32
	x2502, x2503 = bits.Add32(x2497, x2494, uint32(uint1(x2501)))
	x2504 := (uint32(uint1(x2503)) + x2495)
	var x2506 uint32
	_, x2506 = bits.Add32(x2474, x2498, uint32(0x0))
	var x2507 uint32
	var x2508 uint32
	x2507, x2508 = bits.Add32(x2476, x2500, uint32(uint1(x2506)))
	var x2509 uint32
	var x2510 uint32
	x2509, x2510 = bits.Add32(x2478, x2502, uint32(uint1(x2508)))
	var x2511 uint32
	var x2512 uint32
	x2511, x2512 = bits.Add32(x2480, x2504, uint32(uint1(x2510)))
	var x2513 uint32
	var x2514 uint32
	x2513, x2514 = bits.Add32(x2482, uint32(0x0), uint32(uint1(x2512)))
	var x2515 uint32
	var x2516 uint32
	x2515, x2516 = bits.Add32(x2484, uint32(0x0), uint32(uint1(x2514)))
	var x2517 uint32
	var x2518 uint32
	x2517, x2518 = bits.Add32(x2486, x2474, uint32(uint1(x2516)))
	var x2519 uint32
	var x2520 uint32
	x2519, x2520 = bits.Add32(x2488, x2492, uint32(uint1(x2518)))
	var x2521 uint32
	var x2522 uint32
	x2521, x2522 = bits.Add32(x2490, x2493, uint32(uint1(x2520)))
	x2523 := (uint32(uint1(x2522)) + uint32(uint1(x2491)))
	var x2524 uint32
	var x2525 uint32
	x2525, x2524 = bits.Mul32(x170, arg2[7])
	var x2526 uint32
	var x2527 uint32
	x2527, x2526 = bits.Mul32(x170, arg2[6])
	var x2528 uint32
	var x2529 uint32
	x2529, x2528 = bits.Mul32(x170, arg2[5])
	var x2530 uint32
	var x2531 uint32
	x2531, x2530 = bits.Mul32(x170, arg2[4])
	var x2532 uint32
	var x2533 uint32
	x2533, x2532 = bits.Mul32(x170, arg2[3])
	var x2534 uint32
	var x2535 uint32
	x2535, x2534 = bits.Mul32(x170, arg2[2])
	var x2536 uint32
	var x2537 uint32
	x2537, x2536 = bits.Mul32(x170, arg2[1])
	var x2538 uint32
	var x2539 uint32
	x2539, x2538 = bits.Mul32(x170, arg2[0])
	var x2540 uint32
	var x2541 uint32
	x2540, x2541 = bits.Add32(x2539, x2536, uint32(0x0))
	var x2542 uint32
	var x2543 uint32
	x2542, x2543 = bits.Add32(x2537, x2534, uint32(uint1(x2541)))
	var x2544 uint32
	var x2545 uint32
	x2544, x2545 = bits.Add32(x2535, x2532, uint32(uint1(x2543)))
	var x2546 uint32
	var x2547 uint32
	x2546, x2547 = bits.Add32(x2533, x2530, uint32(uint1(x2545)))
	var x2548 uint32
	var x2549 uint32
	x2548, x2549 = bits.Add32(x2531, x2528, uint32(uint1(x2547)))
	var x2550 uint32
	var x2551 uint32
	x2550, x2551 = bits.Add32(x2529, x2526, uint32(uint1(x2549)))
	var x2552 uint32
	var x2553 uint32
	x2552, x2553 = bits.Add32(x2527, x2524, uint32(uint1(x2551)))
	x2554 := (uint32(uint1(x2553)) + x2525)
	var x2555 uint32
	var x2556 uint32
	x2555, x2556 = bits.Add32(x2507, x2538, uint32(0x0))
	var x2557 uint32
	var x2558 uint32
	x2557, x2558 = bits.Add32(x2509, x2540, uint32(uint1(x2556)))
	var x2559 uint32
	var x2560 uint32
	x2559, x2560 = bits.Add32(x2511, x2542, uint32(uint1(x2558)))
	var x2561 uint32
	var x2562 uint32
	x2561, x2562 = bits.Add32(x2513, x2544, uint32(uint1(x2560)))
	var x2563 uint32
	var x2564 uint32
	x2563, x2564 = bits.Add32(x2515, x2546, uint32(uint1(x2562)))
	var x2565 uint32
	var x2566 uint32
	x2565, x2566 = bits.Add32(x2517, x2548, uint32(uint1(x2564)))
	var x2567 uint32
	var x2568 uint32
	x2567, x2568 = bits.Add32(x2519, x2550, uint32(uint1(x2566)))
	var x2569 uint32
	var x2570 uint32
	x2569, x2570 = bits.Add32(x2521, x2552, uint32(uint1(x2568)))
	var x2571 uint32
	var x2572 uint32
	x2571, x2572 = bits.Add32(x2523, x2554, uint32(uint1(x2570)))
	var x2573 uint32
	var x2574 uint32
	x2574, x2573 = bits.Mul32(x2555, 0xffffffff)
	var x2575 uint32
	var x2576 uint32
	x2576, x2575 = bits.Mul32(x2555, 0xffffffff)
	var x2577 uint32
	var x2578 uint32
	x2578, x2577 = bits.Mul32(x2555, 0xffffffff)
	var x2579 uint32
	var x2580 uint32
	x2580, x2579 = bits.Mul32(x2555, 0xffffffff)
	var x2581 uint32
	var x2582 uint32
	x2581, x2582 = bits.Add32(x2580, x2577, uint32(0x0))
	var x2583 uint32
	var x2584 uint32
	x2583, x2584 = bits.Add32(x2578, x2575, uint32(uint1(x2582)))
	x2585 := (uint32(uint1(x2584)) + x2576)
	var x2587 uint32
	_, x2587 = bits.Add32(x2555, x2579, uint32(0x0))
	var x2588 uint32
	var x2589 uint32
	x2588, x2589 = bits.Add32(x2557, x2581, uint32(uint1(x2587)))
	var x2590 uint32
	var x2591 uint32
	x2590, x2591 = bits.Add32(x2559, x2583, uint32(uint1(x2589)))
	var x2592 uint32
	var x2593 uint32
	x2592, x2593 = bits.Add32(x2561, x2585, uint32(uint1(x2591)))
	var x2594 uint32
	var x2595 uint32
	x2594, x2595 = bits.Add32(x2563, uint32(0x0), uint32(uint1(x2593)))
	var x2596 uint32
	var x2597 uint32
	x2596, x2597 = bits.Add32(x2565, uint32(0x0), uint32(uint1(x2595)))
	var x2598 uint32
	var x2599 uint32
	x2598, x2599 = bits.Add32(x2567, x2555, uint32(uint1(x2597)))
	var x2600 uint32
	var x2601 uint32
	x2600, x2601 = bits.Add32(x2569, x2573, uint32(uint1(x2599)))
	var x2602 uint32
	var x2603 uint32
	x2602, x2603 = bits.Add32(x2571, x2574, uint32(uint1(x2601)))
	x2604 := (uint32(uint1(x2603)) + uint32(uint1(x2572)))
	var x2605 uint32
	var x2606 uint32
	x2606, x2605 = bits.Mul32(x171, arg2[7])
	var x2607 uint32
	var x2608 uint32
	x2608, x2607 = bits.Mul32(x171, arg2[6])
	var x2609 uint32
	var x2610 uint32
	x2610, x2609 = bits.Mul32(x171, arg2[5])
	var x2611 uint32
	var x2612 uint32
	x2612, x2611 = bits.Mul32(x171, arg2[4])
	var x2613 uint32
	var x2614 uint32
	x2614, x2613 = bits.Mul32(x171, arg2[3])
	var x2615 uint32
	var x2616 uint32
	x2616, x2615 = bits.Mul32(x171, arg2[2])
	var x2617 uint32
	var x2618 uint32
	x2618, x2617 = bits.Mul32(x171, arg2[1])
	var x2619 uint32
	var x2620 uint32
	x2620, x2619 = bits.Mul32(x171, arg2[0])
	var x2621 uint32
	var x2622 uint32
	x2621, x2622 = bits.Add32(x2620, x2617, uint32(0x0))
	var x2623 uint32
	var x2624 uint32
	x2623, x2624 = bits.Add32(x2618, x2615, uint32(uint1(x2622)))
	var x2625 uint32
	var x2626 uint32
	x2625, x2626 = bits.Add32(x2616, x2613, uint32(uint1(x2624)))
	var x2627 uint32
	var x2628 uint32
	x2627, x2628 = bits.Add32(x2614, x2611, uint32(uint1(x2626)))
	var x2629 uint32
	var x2630 uint32
	x2629, x2630 = bits.Add32(x2612, x2609, uint32(uint1(x2628)))
	var x2631 uint32
	var x2632 uint32
	x2631, x2632 = bits.Add32(x2610, x2607, uint32(uint1(x2630)))
	var x2633 uint32
	var x2634 uint32
	x2633, x2634 = bits.Add32(x2608, x2605, uint32(uint1(x2632)))
	x2635 := (uint32(uint1(x2634)) + x2606)
	var x2636 uint32
	var x2637 uint32
	x2636, x2637 = bits.Add32(x2588, x2619, uint32(0x0))
	var x2638 uint32
	var x2639 uint32
	x2638, x2639 = bits.Add32(x2590, x2621, uint32(uint1(x2637)))
	var x2640 uint32
	var x2641 uint32
	x2640, x2641 = bits.Add32(x2592, x2623, uint32(uint1(x2639)))
	var x2642 uint32
	var x2643 uint32
	x2642, x2643 = bits.Add32(x2594, x2625, uint32(uint1(x2641)))
	var x2644 uint32
	var x2645 uint32
	x2644, x2645 = bits.Add32(x2596, x2627, uint32(uint1(x2643)))
	var x2646 uint32
	var x2647 uint32
	x2646, x2647 = bits.Add32(x2598, x2629, uint32(uint1(x2645)))
	var x2648 uint32
	var x2649 uint32
	x2648, x2649 = bits.Add32(x2600, x2631, uint32(uint1(x2647)))
	var x2650 uint32
	var x2651 uint32
	x2650, x2651 = bits.Add32(x2602, x2633, uint32(uint1(x2649)))
	var x2652 uint32
	var x2653 uint32
	x2652, x2653 = bits.Add32(x2604, x2635, uint32(uint1(x2651)))
	var x2654 uint32
	var x2655 uint32
	x2655, x2654 = bits.Mul32(x2636, 0xffffffff)
	var x2656 uint32
	var x2657 uint32
	x2657, x2656 = bits.Mul32(x2636, 0xffffffff)
	var x2658 uint32
	var x2659 uint32
	x2659, x2658 = bits.Mul32(x2636, 0xffffffff)
	var x2660 uint32
	var x2661 uint32
	x2661, x2660 = bits.Mul32(x2636, 0xffffffff)
	var x2662 uint32
	var x2663 uint32
	x2662, x2663 = bits.Add32(x2661, x2658, uint32(0x0))
	var x2664 uint32
	var x2665 uint32
	x2664, x2665 = bits.Add32(x2659, x2656, uint32(uint1(x2663)))
	x2666 := (uint32(uint1(x2665)) + x2657)
	var x2668 uint32
	_, x2668 = bits.Add32(x2636, x2660, uint32(0x0))
	var x2669 uint32
	var x2670 uint32
	x2669, x2670 = bits.Add32(x2638, x2662, uint32(uint1(x2668)))
	var x2671 uint32
	var x2672 uint32
	x2671, x2672 = bits.Add32(x2640, x2664, uint32(uint1(x2670)))
	var x2673 uint32
	var x2674 uint32
	x2673, x2674 = bits.Add32(x2642, x2666, uint32(uint1(x2672)))
	var x2675 uint32
	var x2676 uint32
	x2675, x2676 = bits.Add32(x2644, uint32(0x0), uint32(uint1(x2674)))
	var x2677 uint32
	var x2678 uint32
	x2677, x2678 = bits.Add32(x2646, uint32(0x0), uint32(uint1(x2676)))
	var x2679 uint32
	var x2680 uint32
	x2679, x2680 = bits.Add32(x2648, x2636, uint32(uint1(x2678)))
	var x2681 uint32
	var x2682 uint32
	x2681, x2682 = bits.Add32(x2650, x2654, uint32(uint1(x2680)))
	var x2683 uint32
	var x2684 uint32
	x2683, x2684 = bits.Add32(x2652, x2655, uint32(uint1(x2682)))
	x2685 := (uint32(uint1(x2684)) + uint32(uint1(x2653)))
	var x2686 uint32
	var x2687 uint32
	x2687, x2686 = bits.Mul32(x172, arg2[7])
	var x2688 uint32
	var x2689 uint32
	x2689, x2688 = bits.Mul32(x172, arg2[6])
	var x2690 uint32
	var x2691 uint32
	x2691, x2690 = bits.Mul32(x172, arg2[5])
	var x2692 uint32
	var x2693 uint32
	x2693, x2692 = bits.Mul32(x172, arg2[4])
	var x2694 uint32
	var x2695 uint32
	x2695, x2694 = bits.Mul32(x172, arg2[3])
	var x2696 uint32
	var x2697 uint32
	x2697, x2696 = bits.Mul32(x172, arg2[2])
	var x2698 uint32
	var x2699 uint32
	x2699, x2698 = bits.Mul32(x172, arg2[1])
	var x2700 uint32
	var x2701 uint32
	x2701, x2700 = bits.Mul32(x172, arg2[0])
	var x2702 uint32
	var x2703 uint32
	x2702, x2703 = bits.Add32(x2701, x2698, uint32(0x0))
	var x2704 uint32
	var x2705 uint32
	x2704, x2705 = bits.Add32(x2699, x2696, uint32(uint1(x2703)))
	var x2706 uint32
	var x2707 uint32
	x2706, x2707 = bits.Add32(x2697, x2694, uint32(uint1(x2705)))
	var x2708 uint32
	var x2709 uint32
	x2708, x2709 = bits.Add32(x2695, x2692, uint32(uint1(x2707)))
	var x2710 uint32
	var x2711 uint32
	x2710, x2711 = bits.Add32(x2693, x2690, uint32(uint1(x2709)))
	var x2712 uint32
	var x2713 uint32
	x2712, x2713 = bits.Add32(x2691, x2688, uint32(uint1(x2711)))
	var x2714 uint32
	var x2715 uint32
	x2714, x2715 = bits.Add32(x2689, x2686, uint32(uint1(x2713)))
	x2716 := (uint32(uint1(x2715)) + x2687)
	var x2717 uint32
	var x2718 uint32
	x2717, x2718 = bits.Add32(x2669, x2700, uint32(0x0))
	var x2719 uint32
	var x2720 uint32
	x2719, x2720 = bits.Add32(x2671, x2702, uint32(uint1(x2718)))
	var x2721 uint32
	var x2722 uint32
	x2721, x2722 = bits.Add32(x2673, x2704, uint32(uint1(x2720)))
	var x2723 uint32
	var x2724 uint32
	x2723, x2724 = bits.Add32(x2675, x2706, uint32(uint1(x2722)))
	var x2725 uint32
	var x2726 uint32
	x2725, x2726 = bits.Add32(x2677, x2708, uint32(uint1(x2724)))
	var x2727 uint32
	var x2728 uint32
	x2727, x2728 = bits.Add32(x2679, x2710, uint32(uint1(x2726)))
	var x2729 uint32
	var x2730 uint32
	x2729, x2730 = bits.Add32(x2681, x2712, uint32(uint1(x2728)))
	var x2731 uint32
	var x2732 uint32
	x2731, x2732 = bits.Add32(x2683, x2714, uint32(uint1(x2730)))
	var x2733 uint32
	var x2734 uint32
	x2733, x2734 = bits.Add32(x2685, x2716, uint32(uint1(x2732)))
	var x2735 uint32
	var x2736 uint32
	x2736, x2735 = bits.Mul32(x2717, 0xffffffff)
	var x2737 uint32
	var x2738 uint32
	x2738, x2737 = bits.Mul32(x2717, 0xffffffff)
	var x2739 uint32
	var x2740 uint32
	x2740, x2739 = bits.Mul32(x2717, 0xffffffff)
	var x2741 uint32
	var x2742 uint32
	x2742, x2741 = bits.Mul32(x2717, 0xffffffff)
	var x2743 uint32
	var x2744 uint32
	x2743, x2744 = bits.Add32(x2742, x2739, uint32(0x0))
	var x2745 uint32
	var x2746 uint32
	x2745, x2746 = bits.Add32(x2740, x2737, uint32(uint1(x2744)))
	x2747 := (uint32(uint1(x2746)) + x2738)
	var x2749 uint32
	_, x2749 = bits.Add32(x2717, x2741, uint32(0x0))
	var x2750 uint32
	var x2751 uint32
	x2750, x2751 = bits.Add32(x2719, x2743, uint32(uint1(x2749)))
	var x2752 uint32
	var x2753 uint32
	x2752, x2753 = bits.Add32(x2721, x2745, uint32(uint1(x2751)))
	var x2754 uint32
	var x2755 uint32
	x2754, x2755 = bits.Add32(x2723, x2747, uint32(uint1(x2753)))
	var x2756 uint32
	var x2757 uint32
	x2756, x2757 = bits.Add32(x2725, uint32(0x0), uint32(uint1(x2755)))
	var x2758 uint32
	var x2759 uint32
	x2758, x2759 = bits.Add32(x2727, uint32(0x0), uint32(uint1(x2757)))
	var x2760 uint32
	var x2761 uint32
	x2760, x2761 = bits.Add32(x2729, x2717, uint32(uint1(x2759)))
	var x2762 uint32
	var x2763 uint32
	x2762, x2763 = bits.Add32(x2731, x2735, uint32(uint1(x2761)))
	var x2764 uint32
	var x2765 uint32
	x2764, x2765 = bits.Add32(x2733, x2736, uint32(uint1(x2763)))
	x2766 := (uint32(uint1(x2765)) + uint32(uint1(x2734)))
	var x2767 uint32
	var x2768 uint32
	x2767, x2768 = bits.Sub32(x2750, 0xffffffff, uint32(0x0))
	var x2769 uint32
	var x2770 uint32
	x2769, x2770 = bits.Sub32(x2752, 0xffffffff, uint32(uint1(x2768)))
	var x2771 uint32
	var x2772 uint32
	x2771, x2772 = bits.Sub32(x2754, 0xffffffff, uint32(uint1(x2770)))
	var x2773 uint32
	var x2774 uint32
	x2773, x2774 = bits.Sub32(x2756, uint32(0x0), uint32(uint1(x2772)))
	var x2775 uint32
	var x2776 uint32
	x2775, x2776 = bits.Sub32(x2758, uint32(0x0), uint32(uint1(x2774)))
	var x2777 uint32
	var x2778 uint32
	x2777, x2778 = bits.Sub32(x2760, uint32(0x0), uint32(uint1(x2776)))
	var x2779 uint32
	var x2780 uint32
	x2779, x2780 = bits.Sub32(x2762, uint32(0x1), uint32(uint1(x2778)))
	var x2781 uint32
	var x2782 uint32
	x2781, x2782 = bits.Sub32(x2764, 0xffffffff, uint32(uint1(x2780)))
	var x2784 uint32
	_, x2784 = bits.Sub32(x2766, uint32(0x0), uint32(uint1(x2782)))
	var x2785 uint32
	cmovznzU32(&x2785, uint1(x2784), x2767, x2750)
	var x2786 uint32
	cmovznzU32(&x2786, uint1(x2784), x2769, x2752)
	var x2787 uint32
	cmovznzU32(&x2787, uint1(x2784), x2771, x2754)
	var x2788 uint32
	cmovznzU32(&x2788, uint1(x2784), x2773, x2756)
	var x2789 uint32
	cmovznzU32(&x2789, uint1(x2784), x2775, x2758)
	var x2790 uint32
	cmovznzU32(&x2790, uint1(x2784), x2777, x2760)
	var x2791 uint32
	cmovznzU32(&x2791, uint1(x2784), x2779, x2762)
	var x2792 uint32
	cmovznzU32(&x2792, uint1(x2784), x2781, x2764)
	var x2793 uint32
	var x2794 uint32
	x2793, x2794 = bits.Add32(x820, x1475, uint32(0x0))
	var x2795 uint32
	var x2796 uint32
	x2795, x2796 = bits.Add32(x821, x1476, uint32(uint1(x2794)))
	var x2797 uint32
	var x2798 uint32
	x2797, x2798 = bits.Add32(x822, x1477, uint32(uint1(x2796)))
	var x2799 uint32
	var x2800 uint32
	x2799, x2800 = bits.Add32(x823, x1478, uint32(uint1(x2798)))
	var x2801 uint32
	var x2802 uint32
	x2801, x2802 = bits.Add32(x824, x1479, uint32(uint1(x2800)))
	var x2803 uint32
	var x2804 uint32
	x2803, x2804 = bits.Add32(x825, x1480, uint32(uint1(x2802)))
	var x2805 uint32
	var x2806 uint32
	x2805, x2806 = bits.Add32(x826, x1481, uint32(uint1(x2804)))
	var x2807 uint32
	var x2808 uint32
	x2807, x2808 = bits.Add32(x827, x1482, uint32(uint1(x2806)))
	var x2809 uint32
	var x2810 uint32
	x2809, x2810 = bits.Sub32(x2793, 0xffffffff, uint32(0x0))
	var x2811 uint32
	var x2812 uint32
	x2811, x2812 = bits.Sub32(x2795, 0xffffffff, uint32(uint1(x2810)))
	var x2813 uint32
	var x2814 uint32
	x2813, x2814 = bits.Sub32(x2797, 0xffffffff, uint32(uint1(x2812)))
	var x2815 uint32
	var x2816 uint32
	x2815, x2816 = bits.Sub32(x2799, uint32(0x0), uint32(uint1(x2814)))
	var x2817 uint32
	var x2818 uint32
	x2817, x2818 = bits.Sub32(x2801, uint32(0x0), uint32(uint1(x2816)))
	var x2819 uint32
	var x2820 uint32
	x2819, x2820 = bits.Sub32(x2803, uint32(0x0), uint32(uint1(x2818)))
	var x2821 uint32
	var x2822 uint32
	x2821, x2822 = bits.Sub32(x2805, uint32(0x1), uint32(uint1(x2820)))
	var x2823 uint32
	var x2824 uint32
	x2823, x2824 = bits.Sub32(x2807, 0xffffffff, uint32(uint1(x2822)))
	var x2826 uint32
	_, x2826 = bits.Sub32(uint32(uint1(x2808)), uint32(0x0), uint32(uint1(x2824)))
	var x2827 uint32
	cmovznzU32(&x2827, uint1(x2826), x2809, x2793)
	var x2828 uint32
	cmovznzU32(&x2828, uint1(x2826), x2811, x2795)
	var x2829 uint32
	cmovznzU32(&x2829, uint1(x2826), x2813, x2797)
	var x2830 uint32
	cmovznzU32(&x2830, uint1(x2826), x2815, x2799)
	var x2831 uint32
	cmovznzU32(&x2831, uint1(x2826), x2817, x2801)
	var x2832 uint32
	cmovznzU32(&x2832, uint1(x2826), x2819, x2803)
	var x2833 uint32
	cmovznzU32(&x2833, uint1(x2826), x2821, x2805)
	var x2834 uint32
	cmovznzU32(&x2834, uint1(x2826), x2823, x2807)
	var x2835 uint32
	var x2836 uint32
	x2835, x2836 = bits.Add32(x2130, x2785, uint32(0x0))
	var x2837 uint32
	var x2838 uint32
	x2837, x2838 = bits.Add32(x2131, x2786, uint32(uint1(x2836)))
	var x2839 uint32
	var x2840 uint32
	x2839, x2840 = bits.Add32(x2132, x2787, uint32(uint1(x2838)))
	var x2841 uint32
	var x2842 uint32
	x2841, x2842 = bits.Add32(x2133, x2788, uint32(uint1(x2840)))
	var x2843 uint32
	var x2844 uint32
	x2843, x2844 = bits.Add32(x2134, x2789, uint32(uint1(x2842)))
	var x2845 uint32
	var x2846 uint32
	x2845, x2846 = bits.Add32(x2135, x2790, uint32(uint1(x2844)))
	var x2847 uint32
	var x2848 uint32
	x2847, x2848 = bits.Add32(x2136, x2791, uint32(uint1(x2846)))
	var x2849 uint32
	var x2850 uint32
	x2849, x2850 = bits.Add32(x2137, x2792, uint32(uint1(x2848)))
	var x2851 uint32
	var x2852 uint32
	x2851, x2852 = bits.Sub32(x2835, 0xffffffff, uint32(0x0))
	var x2853 uint32
	var x2854 uint32
	x2853, x2854 = bits.Sub32(x2837, 0xffffffff, uint32(uint1(x2852)))
	var x2855 uint32
	var x2856 uint32
	x2855, x2856 = bits.Sub32(x2839, 0xffffffff, uint32(uint1(x2854)))
	var x2857 uint32
	var x2858 uint32
	x2857, x2858 = bits.Sub32(x2841, uint32(0x0), uint32(uint1(x2856)))
	var x2859 uint32
	var x2860 uint32
	x2859, x2860 = bits.Sub32(x2843, uint32(0x0), uint32(uint1(x2858)))
	var x2861 uint32
	var x2862 uint32
	x2861, x2862 = bits.Sub32(x2845, uint32(0x0), uint32(uint1(x2860)))
	var x2863 uint32
	var x2864 uint32
	x2863, x2864 = bits.Sub32(x2847, uint32(0x1), uint32(uint1(x2862)))
	var x2865 uint32
	var x2866 uint32
	x2865, x2866 = bits.Sub32(x2849, 0xffffffff, uint32(uint1(x2864)))
	var x2868 uint32
	_, x2868 = bits.Sub32(uint32(uint1(x2850)), uint32(0x0), uint32(uint1(x2866)))
	var x2869 uint32
	cmovznzU32(&x2869, uint1(x2868), x2851, x2835)
	var x2870 uint32
	cmovznzU32(&x2870, uint1(x2868), x2853, x2837)
	var x2871 uint32
	cmovznzU32(&x2871, uint1(x2868), x2855, x2839)
	var x2872 uint32
	cmovznzU32(&x2872, uint1(x2868), x2857, x2841)
	var x2873 uint32
	cmovznzU32(&x2873, uint1(x2868), x2859, x2843)
	var x2874 uint32
	cmovznzU32(&x2874, uint1(x2868), x2861, x2845)
	var x2875 uint32
	cmovznzU32(&x2875, uint1(x2868), x2863, x2847)
	var x2876 uint32
	cmovznzU32(&x2876, uint1(x2868), x2865, x2849)
	out1[0] = x2827
	out1[1] = x2828
	out1[2] = x2829
	out1[3] = x2830
	out1[4] = x2831
	out1[5] = x2832
	out1[6] = x2833
	out1[7] = x2834
	out2[0] = x2869
	out2[1] = x2870
	out2[2] = x2871
	out2[3] = x2872
	out2[4] = x2873
	out2[5] = x2874
	out2[6] = x2875
	out2[7] = x2876
}

// The function JumpdivstepPrecomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecomp(out1 *[8]uint32) {
	out1[0] = 0xb4262c0f
	out1[1] = 0x3f54cf96
	out1[2] = 0xeb3dce53
	out1[3] = 0x5622a0af
	out1[4] = 0x118c3dd0
	out1[5] = 0xb4e46c47
	out1[6] = 0x3e036fee
	out1[7] = 0x124b5f25
}

// The function JumpdivstepPrecompHd returns the precomputed value for the (half-delta) jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
//   0 ≤ eval out1 < m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecompHd(out1 *[8]uint32) {
	out1[0] = 0x6627e4e5
	out1[1] = 0x34f2eb4b
	out1[2] = 0x5d4a6c83
	out1[3] = 0xe4694460
	out1[4] = 0x6bf9b5a7
	out1[5] = 0xa6ede5a2
	out1[6] = 0xa5157a92
	out1[7] = 0x9e64f01a
}
