// Code generated by Fiat Cryptography. DO NOT EDIT.
//
// Autogenerated: 'src/ExtractionOCaml/unsaturated_solinas' --lang Go --relax-primitive-carry-to-bitwidth 32,64 --cmovznz-by-mul --internal-static --package-case flatcase --public-function-case UpperCamelCase --private-function-case camelCase --public-type-case UpperCamelCase --private-type-case camelCase --no-prefix-fiat --doc-newline-in-typedef-bounds --doc-prepend-header 'Code generated by Fiat Cryptography. DO NOT EDIT.' --doc-text-before-function-name '' --doc-text-before-type-name '' --package-name curve25519 '' 32 '(auto)' '2^255 - 19' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes one relax msat sat_from_bytes divstep divstep_precomp jumpdivstep_precomp jumpdivstep_precomp_hd outer_loop_body outer_loop_body_hd carry_scmul121666 carry_add carry_sub carry_opp
//
// curve description (via package name): curve25519
//
// machine_wordsize = 32 (from "32")
//
// requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes, one, relax, msat, sat_from_bytes, divstep, divstep_precomp, jumpdivstep_precomp, jumpdivstep_precomp_hd, outer_loop_body, outer_loop_body_hd, carry_scmul121666, carry_add, carry_sub, carry_opp
//
// n = 10 (from "(auto)")
//
// s-c = 2^255 - [(1, 19)] (from "2^255 - 19")
//
// tight_bounds_multiplier = 1 (from "")
//
//
//
// Computed values:
//
//   carry_chain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]
//
//   eval z = z[0] + (z[1] << 26) + (z[2] << 51) + (z[3] << 77) + (z[4] << 102) + (z[5] << 128) + (z[6] << 153) + (z[7] << 179) + (z[8] << 204) + (z[9] << 230)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248)
//
//   balance = [0x7ffffda, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe]
package curve25519

import "math/bits"

type uint1 uint64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927
type int1 int64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927

// LooseFieldElement is a field element with loose bounds.
//
// Bounds:
//
//   [[0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000]]
type LooseFieldElement [10]uint32

// TightFieldElement is a field element with tight bounds.
//
// Bounds:
//
//   [[0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000]]
type TightFieldElement [10]uint32

// addcarryxU26 is an addition with carry.
//
// Postconditions:
//   out1 = (arg1 + arg2 + arg3) mod 2^26
//   out2 = ⌊(arg1 + arg2 + arg3) / 2^26⌋
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x3ffffff]
//   arg3: [0x0 ~> 0x3ffffff]
// Output Bounds:
//   out1: [0x0 ~> 0x3ffffff]
//   out2: [0x0 ~> 0x1]
func addcarryxU26(out1 *uint32, out2 *uint1, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := ((uint32(arg1) + arg2) + arg3)
	x2 := (x1 & 0x3ffffff)
	x3 := uint1((x1 >> 26))
	*out1 = x2
	*out2 = x3
}

// subborrowxU26 is a subtraction with borrow.
//
// Postconditions:
//   out1 = (-arg1 + arg2 + -arg3) mod 2^26
//   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^26⌋
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x3ffffff]
//   arg3: [0x0 ~> 0x3ffffff]
// Output Bounds:
//   out1: [0x0 ~> 0x3ffffff]
//   out2: [0x0 ~> 0x1]
func subborrowxU26(out1 *uint32, out2 *uint1, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := ((int32(arg2) - int32(arg1)) - int32(arg3))
	x2 := int1((x1 >> 26))
	x3 := (uint32(x1) & 0x3ffffff)
	*out1 = x3
	*out2 = (0x0 - uint1(x2))
}

// addcarryxU25 is an addition with carry.
//
// Postconditions:
//   out1 = (arg1 + arg2 + arg3) mod 2^25
//   out2 = ⌊(arg1 + arg2 + arg3) / 2^25⌋
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1ffffff]
//   arg3: [0x0 ~> 0x1ffffff]
// Output Bounds:
//   out1: [0x0 ~> 0x1ffffff]
//   out2: [0x0 ~> 0x1]
func addcarryxU25(out1 *uint32, out2 *uint1, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := ((uint32(arg1) + arg2) + arg3)
	x2 := (x1 & 0x1ffffff)
	x3 := uint1((x1 >> 25))
	*out1 = x2
	*out2 = x3
}

// subborrowxU25 is a subtraction with borrow.
//
// Postconditions:
//   out1 = (-arg1 + arg2 + -arg3) mod 2^25
//   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^25⌋
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1ffffff]
//   arg3: [0x0 ~> 0x1ffffff]
// Output Bounds:
//   out1: [0x0 ~> 0x1ffffff]
//   out2: [0x0 ~> 0x1]
func subborrowxU25(out1 *uint32, out2 *uint1, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := ((int32(arg2) - int32(arg1)) - int32(arg3))
	x2 := int1((x1 >> 25))
	x3 := (uint32(x1) & 0x1ffffff)
	*out1 = x3
	*out2 = (0x0 - uint1(x2))
}

// cmovznzU32 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0xffffffff]
//   arg3: [0x0 ~> 0xffffffff]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
func cmovznzU32(out1 *uint32, arg1 uint1, arg2 uint32, arg3 uint32) {
	x1 := (uint32(arg1) * 0xffffffff)
	x2 := ((x1 & arg3) | ((^x1) & arg2))
	*out1 = x2
}

// cmovznzU1 is a single-word conditional move.
//
// Postconditions:
//   out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [0x0 ~> 0x1]
//   arg3: [0x0 ~> 0x1]
// Output Bounds:
//   out1: [0x0 ~> 0x1]
func cmovznzU1(out1 *uint1, arg1 uint1, arg2 uint1, arg3 uint1) {
	x1 := ((arg1 & arg3) | ((^arg1) & arg2))
	*out1 = x1
}

// CarryMul multiplies two field elements and reduces the result.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 * eval arg2) mod m
//
func CarryMul(out1 *TightFieldElement, arg1 *LooseFieldElement, arg2 *LooseFieldElement) {
	x1 := (uint64(arg1[9]) * uint64((arg2[9] * 0x26)))
	x2 := (uint64(arg1[9]) * uint64((arg2[8] * 0x13)))
	x3 := (uint64(arg1[9]) * uint64((arg2[7] * 0x26)))
	x4 := (uint64(arg1[9]) * uint64((arg2[6] * 0x13)))
	x5 := (uint64(arg1[9]) * uint64((arg2[5] * 0x26)))
	x6 := (uint64(arg1[9]) * uint64((arg2[4] * 0x13)))
	x7 := (uint64(arg1[9]) * uint64((arg2[3] * 0x26)))
	x8 := (uint64(arg1[9]) * uint64((arg2[2] * 0x13)))
	x9 := (uint64(arg1[9]) * uint64((arg2[1] * 0x26)))
	x10 := (uint64(arg1[8]) * uint64((arg2[9] * 0x13)))
	x11 := (uint64(arg1[8]) * uint64((arg2[8] * 0x13)))
	x12 := (uint64(arg1[8]) * uint64((arg2[7] * 0x13)))
	x13 := (uint64(arg1[8]) * uint64((arg2[6] * 0x13)))
	x14 := (uint64(arg1[8]) * uint64((arg2[5] * 0x13)))
	x15 := (uint64(arg1[8]) * uint64((arg2[4] * 0x13)))
	x16 := (uint64(arg1[8]) * uint64((arg2[3] * 0x13)))
	x17 := (uint64(arg1[8]) * uint64((arg2[2] * 0x13)))
	x18 := (uint64(arg1[7]) * uint64((arg2[9] * 0x26)))
	x19 := (uint64(arg1[7]) * uint64((arg2[8] * 0x13)))
	x20 := (uint64(arg1[7]) * uint64((arg2[7] * 0x26)))
	x21 := (uint64(arg1[7]) * uint64((arg2[6] * 0x13)))
	x22 := (uint64(arg1[7]) * uint64((arg2[5] * 0x26)))
	x23 := (uint64(arg1[7]) * uint64((arg2[4] * 0x13)))
	x24 := (uint64(arg1[7]) * uint64((arg2[3] * 0x26)))
	x25 := (uint64(arg1[6]) * uint64((arg2[9] * 0x13)))
	x26 := (uint64(arg1[6]) * uint64((arg2[8] * 0x13)))
	x27 := (uint64(arg1[6]) * uint64((arg2[7] * 0x13)))
	x28 := (uint64(arg1[6]) * uint64((arg2[6] * 0x13)))
	x29 := (uint64(arg1[6]) * uint64((arg2[5] * 0x13)))
	x30 := (uint64(arg1[6]) * uint64((arg2[4] * 0x13)))
	x31 := (uint64(arg1[5]) * uint64((arg2[9] * 0x26)))
	x32 := (uint64(arg1[5]) * uint64((arg2[8] * 0x13)))
	x33 := (uint64(arg1[5]) * uint64((arg2[7] * 0x26)))
	x34 := (uint64(arg1[5]) * uint64((arg2[6] * 0x13)))
	x35 := (uint64(arg1[5]) * uint64((arg2[5] * 0x26)))
	x36 := (uint64(arg1[4]) * uint64((arg2[9] * 0x13)))
	x37 := (uint64(arg1[4]) * uint64((arg2[8] * 0x13)))
	x38 := (uint64(arg1[4]) * uint64((arg2[7] * 0x13)))
	x39 := (uint64(arg1[4]) * uint64((arg2[6] * 0x13)))
	x40 := (uint64(arg1[3]) * uint64((arg2[9] * 0x26)))
	x41 := (uint64(arg1[3]) * uint64((arg2[8] * 0x13)))
	x42 := (uint64(arg1[3]) * uint64((arg2[7] * 0x26)))
	x43 := (uint64(arg1[2]) * uint64((arg2[9] * 0x13)))
	x44 := (uint64(arg1[2]) * uint64((arg2[8] * 0x13)))
	x45 := (uint64(arg1[1]) * uint64((arg2[9] * 0x26)))
	x46 := (uint64(arg1[9]) * uint64(arg2[0]))
	x47 := (uint64(arg1[8]) * uint64(arg2[1]))
	x48 := (uint64(arg1[8]) * uint64(arg2[0]))
	x49 := (uint64(arg1[7]) * uint64(arg2[2]))
	x50 := (uint64(arg1[7]) * uint64((arg2[1] * 0x2)))
	x51 := (uint64(arg1[7]) * uint64(arg2[0]))
	x52 := (uint64(arg1[6]) * uint64(arg2[3]))
	x53 := (uint64(arg1[6]) * uint64(arg2[2]))
	x54 := (uint64(arg1[6]) * uint64(arg2[1]))
	x55 := (uint64(arg1[6]) * uint64(arg2[0]))
	x56 := (uint64(arg1[5]) * uint64(arg2[4]))
	x57 := (uint64(arg1[5]) * uint64((arg2[3] * 0x2)))
	x58 := (uint64(arg1[5]) * uint64(arg2[2]))
	x59 := (uint64(arg1[5]) * uint64((arg2[1] * 0x2)))
	x60 := (uint64(arg1[5]) * uint64(arg2[0]))
	x61 := (uint64(arg1[4]) * uint64(arg2[5]))
	x62 := (uint64(arg1[4]) * uint64(arg2[4]))
	x63 := (uint64(arg1[4]) * uint64(arg2[3]))
	x64 := (uint64(arg1[4]) * uint64(arg2[2]))
	x65 := (uint64(arg1[4]) * uint64(arg2[1]))
	x66 := (uint64(arg1[4]) * uint64(arg2[0]))
	x67 := (uint64(arg1[3]) * uint64(arg2[6]))
	x68 := (uint64(arg1[3]) * uint64((arg2[5] * 0x2)))
	x69 := (uint64(arg1[3]) * uint64(arg2[4]))
	x70 := (uint64(arg1[3]) * uint64((arg2[3] * 0x2)))
	x71 := (uint64(arg1[3]) * uint64(arg2[2]))
	x72 := (uint64(arg1[3]) * uint64((arg2[1] * 0x2)))
	x73 := (uint64(arg1[3]) * uint64(arg2[0]))
	x74 := (uint64(arg1[2]) * uint64(arg2[7]))
	x75 := (uint64(arg1[2]) * uint64(arg2[6]))
	x76 := (uint64(arg1[2]) * uint64(arg2[5]))
	x77 := (uint64(arg1[2]) * uint64(arg2[4]))
	x78 := (uint64(arg1[2]) * uint64(arg2[3]))
	x79 := (uint64(arg1[2]) * uint64(arg2[2]))
	x80 := (uint64(arg1[2]) * uint64(arg2[1]))
	x81 := (uint64(arg1[2]) * uint64(arg2[0]))
	x82 := (uint64(arg1[1]) * uint64(arg2[8]))
	x83 := (uint64(arg1[1]) * uint64((arg2[7] * 0x2)))
	x84 := (uint64(arg1[1]) * uint64(arg2[6]))
	x85 := (uint64(arg1[1]) * uint64((arg2[5] * 0x2)))
	x86 := (uint64(arg1[1]) * uint64(arg2[4]))
	x87 := (uint64(arg1[1]) * uint64((arg2[3] * 0x2)))
	x88 := (uint64(arg1[1]) * uint64(arg2[2]))
	x89 := (uint64(arg1[1]) * uint64((arg2[1] * 0x2)))
	x90 := (uint64(arg1[1]) * uint64(arg2[0]))
	x91 := (uint64(arg1[0]) * uint64(arg2[9]))
	x92 := (uint64(arg1[0]) * uint64(arg2[8]))
	x93 := (uint64(arg1[0]) * uint64(arg2[7]))
	x94 := (uint64(arg1[0]) * uint64(arg2[6]))
	x95 := (uint64(arg1[0]) * uint64(arg2[5]))
	x96 := (uint64(arg1[0]) * uint64(arg2[4]))
	x97 := (uint64(arg1[0]) * uint64(arg2[3]))
	x98 := (uint64(arg1[0]) * uint64(arg2[2]))
	x99 := (uint64(arg1[0]) * uint64(arg2[1]))
	x100 := (uint64(arg1[0]) * uint64(arg2[0]))
	x101 := (x100 + (x45 + (x44 + (x42 + (x39 + (x35 + (x30 + (x24 + (x17 + x9)))))))))
	x102 := (x101 >> 26)
	x103 := (uint32(x101) & 0x3ffffff)
	x104 := (x91 + (x82 + (x74 + (x67 + (x61 + (x56 + (x52 + (x49 + (x47 + x46)))))))))
	x105 := (x92 + (x83 + (x75 + (x68 + (x62 + (x57 + (x53 + (x50 + (x48 + x1)))))))))
	x106 := (x93 + (x84 + (x76 + (x69 + (x63 + (x58 + (x54 + (x51 + (x10 + x2)))))))))
	x107 := (x94 + (x85 + (x77 + (x70 + (x64 + (x59 + (x55 + (x18 + (x11 + x3)))))))))
	x108 := (x95 + (x86 + (x78 + (x71 + (x65 + (x60 + (x25 + (x19 + (x12 + x4)))))))))
	x109 := (x96 + (x87 + (x79 + (x72 + (x66 + (x31 + (x26 + (x20 + (x13 + x5)))))))))
	x110 := (x97 + (x88 + (x80 + (x73 + (x36 + (x32 + (x27 + (x21 + (x14 + x6)))))))))
	x111 := (x98 + (x89 + (x81 + (x40 + (x37 + (x33 + (x28 + (x22 + (x15 + x7)))))))))
	x112 := (x99 + (x90 + (x43 + (x41 + (x38 + (x34 + (x29 + (x23 + (x16 + x8)))))))))
	x113 := (x102 + x112)
	x114 := (x113 >> 25)
	x115 := (uint32(x113) & 0x1ffffff)
	x116 := (x114 + x111)
	x117 := (x116 >> 26)
	x118 := (uint32(x116) & 0x3ffffff)
	x119 := (x117 + x110)
	x120 := (x119 >> 25)
	x121 := (uint32(x119) & 0x1ffffff)
	x122 := (x120 + x109)
	x123 := (x122 >> 26)
	x124 := (uint32(x122) & 0x3ffffff)
	x125 := (x123 + x108)
	x126 := (x125 >> 25)
	x127 := (uint32(x125) & 0x1ffffff)
	x128 := (x126 + x107)
	x129 := (x128 >> 26)
	x130 := (uint32(x128) & 0x3ffffff)
	x131 := (x129 + x106)
	x132 := (x131 >> 25)
	x133 := (uint32(x131) & 0x1ffffff)
	x134 := (x132 + x105)
	x135 := (x134 >> 26)
	x136 := (uint32(x134) & 0x3ffffff)
	x137 := (x135 + x104)
	x138 := (x137 >> 25)
	x139 := (uint32(x137) & 0x1ffffff)
	x140 := (x138 * uint64(0x13))
	x141 := (uint64(x103) + x140)
	x142 := uint32((x141 >> 26))
	x143 := (uint32(x141) & 0x3ffffff)
	x144 := (x142 + x115)
	x145 := uint1((x144 >> 25))
	x146 := (x144 & 0x1ffffff)
	x147 := (uint32(x145) + x118)
	out1[0] = x143
	out1[1] = x146
	out1[2] = x147
	out1[3] = x121
	out1[4] = x124
	out1[5] = x127
	out1[6] = x130
	out1[7] = x133
	out1[8] = x136
	out1[9] = x139
}

// CarrySquare squares a field element and reduces the result.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 * eval arg1) mod m
//
func CarrySquare(out1 *TightFieldElement, arg1 *LooseFieldElement) {
	x1 := (arg1[9] * 0x13)
	x2 := (x1 * 0x2)
	x3 := (arg1[9] * 0x2)
	x4 := (arg1[8] * 0x13)
	x5 := (uint64(x4) * uint64(0x2))
	x6 := (arg1[8] * 0x2)
	x7 := (arg1[7] * 0x13)
	x8 := (x7 * 0x2)
	x9 := (arg1[7] * 0x2)
	x10 := (arg1[6] * 0x13)
	x11 := (uint64(x10) * uint64(0x2))
	x12 := (arg1[6] * 0x2)
	x13 := (arg1[5] * 0x13)
	x14 := (arg1[5] * 0x2)
	x15 := (arg1[4] * 0x2)
	x16 := (arg1[3] * 0x2)
	x17 := (arg1[2] * 0x2)
	x18 := (arg1[1] * 0x2)
	x19 := (uint64(arg1[9]) * uint64((x1 * 0x2)))
	x20 := (uint64(arg1[8]) * uint64(x2))
	x21 := (uint64(arg1[8]) * uint64(x4))
	x22 := (uint64(arg1[7]) * (uint64(x2) * uint64(0x2)))
	x23 := (uint64(arg1[7]) * x5)
	x24 := (uint64(arg1[7]) * uint64((x7 * 0x2)))
	x25 := (uint64(arg1[6]) * uint64(x2))
	x26 := (uint64(arg1[6]) * x5)
	x27 := (uint64(arg1[6]) * uint64(x8))
	x28 := (uint64(arg1[6]) * uint64(x10))
	x29 := (uint64(arg1[5]) * (uint64(x2) * uint64(0x2)))
	x30 := (uint64(arg1[5]) * x5)
	x31 := (uint64(arg1[5]) * (uint64(x8) * uint64(0x2)))
	x32 := (uint64(arg1[5]) * x11)
	x33 := (uint64(arg1[5]) * uint64((x13 * 0x2)))
	x34 := (uint64(arg1[4]) * uint64(x2))
	x35 := (uint64(arg1[4]) * x5)
	x36 := (uint64(arg1[4]) * uint64(x8))
	x37 := (uint64(arg1[4]) * x11)
	x38 := (uint64(arg1[4]) * uint64(x14))
	x39 := (uint64(arg1[4]) * uint64(arg1[4]))
	x40 := (uint64(arg1[3]) * (uint64(x2) * uint64(0x2)))
	x41 := (uint64(arg1[3]) * x5)
	x42 := (uint64(arg1[3]) * (uint64(x8) * uint64(0x2)))
	x43 := (uint64(arg1[3]) * uint64(x12))
	x44 := (uint64(arg1[3]) * uint64((x14 * 0x2)))
	x45 := (uint64(arg1[3]) * uint64(x15))
	x46 := (uint64(arg1[3]) * uint64((arg1[3] * 0x2)))
	x47 := (uint64(arg1[2]) * uint64(x2))
	x48 := (uint64(arg1[2]) * x5)
	x49 := (uint64(arg1[2]) * uint64(x9))
	x50 := (uint64(arg1[2]) * uint64(x12))
	x51 := (uint64(arg1[2]) * uint64(x14))
	x52 := (uint64(arg1[2]) * uint64(x15))
	x53 := (uint64(arg1[2]) * uint64(x16))
	x54 := (uint64(arg1[2]) * uint64(arg1[2]))
	x55 := (uint64(arg1[1]) * (uint64(x2) * uint64(0x2)))
	x56 := (uint64(arg1[1]) * uint64(x6))
	x57 := (uint64(arg1[1]) * uint64((x9 * 0x2)))
	x58 := (uint64(arg1[1]) * uint64(x12))
	x59 := (uint64(arg1[1]) * uint64((x14 * 0x2)))
	x60 := (uint64(arg1[1]) * uint64(x15))
	x61 := (uint64(arg1[1]) * uint64((x16 * 0x2)))
	x62 := (uint64(arg1[1]) * uint64(x17))
	x63 := (uint64(arg1[1]) * uint64((arg1[1] * 0x2)))
	x64 := (uint64(arg1[0]) * uint64(x3))
	x65 := (uint64(arg1[0]) * uint64(x6))
	x66 := (uint64(arg1[0]) * uint64(x9))
	x67 := (uint64(arg1[0]) * uint64(x12))
	x68 := (uint64(arg1[0]) * uint64(x14))
	x69 := (uint64(arg1[0]) * uint64(x15))
	x70 := (uint64(arg1[0]) * uint64(x16))
	x71 := (uint64(arg1[0]) * uint64(x17))
	x72 := (uint64(arg1[0]) * uint64(x18))
	x73 := (uint64(arg1[0]) * uint64(arg1[0]))
	x74 := (x73 + (x55 + (x48 + (x42 + (x37 + x33)))))
	x75 := (x74 >> 26)
	x76 := (uint32(x74) & 0x3ffffff)
	x77 := (x64 + (x56 + (x49 + (x43 + x38))))
	x78 := (x65 + (x57 + (x50 + (x44 + (x39 + x19)))))
	x79 := (x66 + (x58 + (x51 + (x45 + x20))))
	x80 := (x67 + (x59 + (x52 + (x46 + (x22 + x21)))))
	x81 := (x68 + (x60 + (x53 + (x25 + x23))))
	x82 := (x69 + (x61 + (x54 + (x29 + (x26 + x24)))))
	x83 := (x70 + (x62 + (x34 + (x30 + x27))))
	x84 := (x71 + (x63 + (x40 + (x35 + (x31 + x28)))))
	x85 := (x72 + (x47 + (x41 + (x36 + x32))))
	x86 := (x75 + x85)
	x87 := (x86 >> 25)
	x88 := (uint32(x86) & 0x1ffffff)
	x89 := (x87 + x84)
	x90 := (x89 >> 26)
	x91 := (uint32(x89) & 0x3ffffff)
	x92 := (x90 + x83)
	x93 := (x92 >> 25)
	x94 := (uint32(x92) & 0x1ffffff)
	x95 := (x93 + x82)
	x96 := (x95 >> 26)
	x97 := (uint32(x95) & 0x3ffffff)
	x98 := (x96 + x81)
	x99 := (x98 >> 25)
	x100 := (uint32(x98) & 0x1ffffff)
	x101 := (x99 + x80)
	x102 := (x101 >> 26)
	x103 := (uint32(x101) & 0x3ffffff)
	x104 := (x102 + x79)
	x105 := (x104 >> 25)
	x106 := (uint32(x104) & 0x1ffffff)
	x107 := (x105 + x78)
	x108 := (x107 >> 26)
	x109 := (uint32(x107) & 0x3ffffff)
	x110 := (x108 + x77)
	x111 := (x110 >> 25)
	x112 := (uint32(x110) & 0x1ffffff)
	x113 := (x111 * uint64(0x13))
	x114 := (uint64(x76) + x113)
	x115 := uint32((x114 >> 26))
	x116 := (uint32(x114) & 0x3ffffff)
	x117 := (x115 + x88)
	x118 := uint1((x117 >> 25))
	x119 := (x117 & 0x1ffffff)
	x120 := (uint32(x118) + x91)
	out1[0] = x116
	out1[1] = x119
	out1[2] = x120
	out1[3] = x94
	out1[4] = x97
	out1[5] = x100
	out1[6] = x103
	out1[7] = x106
	out1[8] = x109
	out1[9] = x112
}

// Carry reduces a field element.
//
// Postconditions:
//   eval out1 mod m = eval arg1 mod m
//
func Carry(out1 *TightFieldElement, arg1 *LooseFieldElement) {
	x1 := arg1[0]
	x2 := ((x1 >> 26) + arg1[1])
	x3 := ((x2 >> 25) + arg1[2])
	x4 := ((x3 >> 26) + arg1[3])
	x5 := ((x4 >> 25) + arg1[4])
	x6 := ((x5 >> 26) + arg1[5])
	x7 := ((x6 >> 25) + arg1[6])
	x8 := ((x7 >> 26) + arg1[7])
	x9 := ((x8 >> 25) + arg1[8])
	x10 := ((x9 >> 26) + arg1[9])
	x11 := ((x1 & 0x3ffffff) + ((x10 >> 25) * 0x13))
	x12 := (uint32(uint1((x11 >> 26))) + (x2 & 0x1ffffff))
	x13 := (x11 & 0x3ffffff)
	x14 := (x12 & 0x1ffffff)
	x15 := (uint32(uint1((x12 >> 25))) + (x3 & 0x3ffffff))
	x16 := (x4 & 0x1ffffff)
	x17 := (x5 & 0x3ffffff)
	x18 := (x6 & 0x1ffffff)
	x19 := (x7 & 0x3ffffff)
	x20 := (x8 & 0x1ffffff)
	x21 := (x9 & 0x3ffffff)
	x22 := (x10 & 0x1ffffff)
	out1[0] = x13
	out1[1] = x14
	out1[2] = x15
	out1[3] = x16
	out1[4] = x17
	out1[5] = x18
	out1[6] = x19
	out1[7] = x20
	out1[8] = x21
	out1[9] = x22
}

// Add adds two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 + eval arg2) mod m
//
func Add(out1 *LooseFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := (arg1[0] + arg2[0])
	x2 := (arg1[1] + arg2[1])
	x3 := (arg1[2] + arg2[2])
	x4 := (arg1[3] + arg2[3])
	x5 := (arg1[4] + arg2[4])
	x6 := (arg1[5] + arg2[5])
	x7 := (arg1[6] + arg2[6])
	x8 := (arg1[7] + arg2[7])
	x9 := (arg1[8] + arg2[8])
	x10 := (arg1[9] + arg2[9])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
	out1[8] = x9
	out1[9] = x10
}

// Sub subtracts two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 - eval arg2) mod m
//
func Sub(out1 *LooseFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := ((0x7ffffda + arg1[0]) - arg2[0])
	x2 := ((0x3fffffe + arg1[1]) - arg2[1])
	x3 := ((0x7fffffe + arg1[2]) - arg2[2])
	x4 := ((0x3fffffe + arg1[3]) - arg2[3])
	x5 := ((0x7fffffe + arg1[4]) - arg2[4])
	x6 := ((0x3fffffe + arg1[5]) - arg2[5])
	x7 := ((0x7fffffe + arg1[6]) - arg2[6])
	x8 := ((0x3fffffe + arg1[7]) - arg2[7])
	x9 := ((0x7fffffe + arg1[8]) - arg2[8])
	x10 := ((0x3fffffe + arg1[9]) - arg2[9])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
	out1[8] = x9
	out1[9] = x10
}

// Opp negates a field element.
//
// Postconditions:
//   eval out1 mod m = -eval arg1 mod m
//
func Opp(out1 *LooseFieldElement, arg1 *TightFieldElement) {
	x1 := (0x7ffffda - arg1[0])
	x2 := (0x3fffffe - arg1[1])
	x3 := (0x7fffffe - arg1[2])
	x4 := (0x3fffffe - arg1[3])
	x5 := (0x7fffffe - arg1[4])
	x6 := (0x3fffffe - arg1[5])
	x7 := (0x7fffffe - arg1[6])
	x8 := (0x3fffffe - arg1[7])
	x9 := (0x7fffffe - arg1[8])
	x10 := (0x3fffffe - arg1[9])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
	out1[8] = x9
	out1[9] = x10
}

// Selectznz is a multi-limb conditional select.
//
// Postconditions:
//   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
//
// Input Bounds:
//   arg1: [0x0 ~> 0x1]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Selectznz(out1 *[10]uint32, arg1 uint1, arg2 *[10]uint32, arg3 *[10]uint32) {
	var x1 uint32
	cmovznzU32(&x1, arg1, arg2[0], arg3[0])
	var x2 uint32
	cmovznzU32(&x2, arg1, arg2[1], arg3[1])
	var x3 uint32
	cmovznzU32(&x3, arg1, arg2[2], arg3[2])
	var x4 uint32
	cmovznzU32(&x4, arg1, arg2[3], arg3[3])
	var x5 uint32
	cmovznzU32(&x5, arg1, arg2[4], arg3[4])
	var x6 uint32
	cmovznzU32(&x6, arg1, arg2[5], arg3[5])
	var x7 uint32
	cmovznzU32(&x7, arg1, arg2[6], arg3[6])
	var x8 uint32
	cmovznzU32(&x8, arg1, arg2[7], arg3[7])
	var x9 uint32
	cmovznzU32(&x9, arg1, arg2[8], arg3[8])
	var x10 uint32
	cmovznzU32(&x10, arg1, arg2[9], arg3[9])
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
	out1[8] = x9
	out1[9] = x10
}

// ToBytes serializes a field element to bytes in little-endian order.
//
// Postconditions:
//   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
//
// Output Bounds:
//   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
func ToBytes(out1 *[32]uint8, arg1 *TightFieldElement) {
	var x1 uint32
	var x2 uint1
	subborrowxU26(&x1, &x2, 0x0, arg1[0], 0x3ffffed)
	var x3 uint32
	var x4 uint1
	subborrowxU25(&x3, &x4, x2, arg1[1], 0x1ffffff)
	var x5 uint32
	var x6 uint1
	subborrowxU26(&x5, &x6, x4, arg1[2], 0x3ffffff)
	var x7 uint32
	var x8 uint1
	subborrowxU25(&x7, &x8, x6, arg1[3], 0x1ffffff)
	var x9 uint32
	var x10 uint1
	subborrowxU26(&x9, &x10, x8, arg1[4], 0x3ffffff)
	var x11 uint32
	var x12 uint1
	subborrowxU25(&x11, &x12, x10, arg1[5], 0x1ffffff)
	var x13 uint32
	var x14 uint1
	subborrowxU26(&x13, &x14, x12, arg1[6], 0x3ffffff)
	var x15 uint32
	var x16 uint1
	subborrowxU25(&x15, &x16, x14, arg1[7], 0x1ffffff)
	var x17 uint32
	var x18 uint1
	subborrowxU26(&x17, &x18, x16, arg1[8], 0x3ffffff)
	var x19 uint32
	var x20 uint1
	subborrowxU25(&x19, &x20, x18, arg1[9], 0x1ffffff)
	var x21 uint32
	cmovznzU32(&x21, x20, uint32(0x0), 0xffffffff)
	var x22 uint32
	var x23 uint1
	addcarryxU26(&x22, &x23, 0x0, x1, (x21 & 0x3ffffed))
	var x24 uint32
	var x25 uint1
	addcarryxU25(&x24, &x25, x23, x3, (x21 & 0x1ffffff))
	var x26 uint32
	var x27 uint1
	addcarryxU26(&x26, &x27, x25, x5, (x21 & 0x3ffffff))
	var x28 uint32
	var x29 uint1
	addcarryxU25(&x28, &x29, x27, x7, (x21 & 0x1ffffff))
	var x30 uint32
	var x31 uint1
	addcarryxU26(&x30, &x31, x29, x9, (x21 & 0x3ffffff))
	var x32 uint32
	var x33 uint1
	addcarryxU25(&x32, &x33, x31, x11, (x21 & 0x1ffffff))
	var x34 uint32
	var x35 uint1
	addcarryxU26(&x34, &x35, x33, x13, (x21 & 0x3ffffff))
	var x36 uint32
	var x37 uint1
	addcarryxU25(&x36, &x37, x35, x15, (x21 & 0x1ffffff))
	var x38 uint32
	var x39 uint1
	addcarryxU26(&x38, &x39, x37, x17, (x21 & 0x3ffffff))
	var x40 uint32
	var x41 uint1
	addcarryxU25(&x40, &x41, x39, x19, (x21 & 0x1ffffff))
	x42 := (x40 << 6)
	x43 := (x38 << 4)
	x44 := (x36 << 3)
	x45 := (x34 * uint32(0x2))
	x46 := (x30 << 6)
	x47 := (x28 << 5)
	x48 := (x26 << 3)
	x49 := (x24 << 2)
	x50 := (uint8(x22) & 0xff)
	x51 := (x22 >> 8)
	x52 := (uint8(x51) & 0xff)
	x53 := (x51 >> 8)
	x54 := (uint8(x53) & 0xff)
	x55 := uint8((x53 >> 8))
	x56 := (x49 + uint32(x55))
	x57 := (uint8(x56) & 0xff)
	x58 := (x56 >> 8)
	x59 := (uint8(x58) & 0xff)
	x60 := (x58 >> 8)
	x61 := (uint8(x60) & 0xff)
	x62 := uint8((x60 >> 8))
	x63 := (x48 + uint32(x62))
	x64 := (uint8(x63) & 0xff)
	x65 := (x63 >> 8)
	x66 := (uint8(x65) & 0xff)
	x67 := (x65 >> 8)
	x68 := (uint8(x67) & 0xff)
	x69 := uint8((x67 >> 8))
	x70 := (x47 + uint32(x69))
	x71 := (uint8(x70) & 0xff)
	x72 := (x70 >> 8)
	x73 := (uint8(x72) & 0xff)
	x74 := (x72 >> 8)
	x75 := (uint8(x74) & 0xff)
	x76 := uint8((x74 >> 8))
	x77 := (x46 + uint32(x76))
	x78 := (uint8(x77) & 0xff)
	x79 := (x77 >> 8)
	x80 := (uint8(x79) & 0xff)
	x81 := (x79 >> 8)
	x82 := (uint8(x81) & 0xff)
	x83 := uint8((x81 >> 8))
	x84 := (uint8(x32) & 0xff)
	x85 := (x32 >> 8)
	x86 := (uint8(x85) & 0xff)
	x87 := (x85 >> 8)
	x88 := (uint8(x87) & 0xff)
	x89 := uint1((x87 >> 8))
	x90 := (x45 + uint32(x89))
	x91 := (uint8(x90) & 0xff)
	x92 := (x90 >> 8)
	x93 := (uint8(x92) & 0xff)
	x94 := (x92 >> 8)
	x95 := (uint8(x94) & 0xff)
	x96 := uint8((x94 >> 8))
	x97 := (x44 + uint32(x96))
	x98 := (uint8(x97) & 0xff)
	x99 := (x97 >> 8)
	x100 := (uint8(x99) & 0xff)
	x101 := (x99 >> 8)
	x102 := (uint8(x101) & 0xff)
	x103 := uint8((x101 >> 8))
	x104 := (x43 + uint32(x103))
	x105 := (uint8(x104) & 0xff)
	x106 := (x104 >> 8)
	x107 := (uint8(x106) & 0xff)
	x108 := (x106 >> 8)
	x109 := (uint8(x108) & 0xff)
	x110 := uint8((x108 >> 8))
	x111 := (x42 + uint32(x110))
	x112 := (uint8(x111) & 0xff)
	x113 := (x111 >> 8)
	x114 := (uint8(x113) & 0xff)
	x115 := (x113 >> 8)
	x116 := (uint8(x115) & 0xff)
	x117 := uint8((x115 >> 8))
	out1[0] = x50
	out1[1] = x52
	out1[2] = x54
	out1[3] = x57
	out1[4] = x59
	out1[5] = x61
	out1[6] = x64
	out1[7] = x66
	out1[8] = x68
	out1[9] = x71
	out1[10] = x73
	out1[11] = x75
	out1[12] = x78
	out1[13] = x80
	out1[14] = x82
	out1[15] = x83
	out1[16] = x84
	out1[17] = x86
	out1[18] = x88
	out1[19] = x91
	out1[20] = x93
	out1[21] = x95
	out1[22] = x98
	out1[23] = x100
	out1[24] = x102
	out1[25] = x105
	out1[26] = x107
	out1[27] = x109
	out1[28] = x112
	out1[29] = x114
	out1[30] = x116
	out1[31] = x117
}

// FromBytes deserializes a field element from bytes in little-endian order.
//
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
func FromBytes(out1 *TightFieldElement, arg1 *[32]uint8) {
	x1 := (uint32(arg1[31]) << 18)
	x2 := (uint32(arg1[30]) << 10)
	x3 := (uint32(arg1[29]) << 2)
	x4 := (uint32(arg1[28]) << 20)
	x5 := (uint32(arg1[27]) << 12)
	x6 := (uint32(arg1[26]) << 4)
	x7 := (uint32(arg1[25]) << 21)
	x8 := (uint32(arg1[24]) << 13)
	x9 := (uint32(arg1[23]) << 5)
	x10 := (uint32(arg1[22]) << 23)
	x11 := (uint32(arg1[21]) << 15)
	x12 := (uint32(arg1[20]) << 7)
	x13 := (uint32(arg1[19]) << 24)
	x14 := (uint32(arg1[18]) << 16)
	x15 := (uint32(arg1[17]) << 8)
	x16 := arg1[16]
	x17 := (uint32(arg1[15]) << 18)
	x18 := (uint32(arg1[14]) << 10)
	x19 := (uint32(arg1[13]) << 2)
	x20 := (uint32(arg1[12]) << 19)
	x21 := (uint32(arg1[11]) << 11)
	x22 := (uint32(arg1[10]) << 3)
	x23 := (uint32(arg1[9]) << 21)
	x24 := (uint32(arg1[8]) << 13)
	x25 := (uint32(arg1[7]) << 5)
	x26 := (uint32(arg1[6]) << 22)
	x27 := (uint32(arg1[5]) << 14)
	x28 := (uint32(arg1[4]) << 6)
	x29 := (uint32(arg1[3]) << 24)
	x30 := (uint32(arg1[2]) << 16)
	x31 := (uint32(arg1[1]) << 8)
	x32 := arg1[0]
	x33 := (x31 + uint32(x32))
	x34 := (x30 + x33)
	x35 := (x29 + x34)
	x36 := (x35 & 0x3ffffff)
	x37 := uint8((x35 >> 26))
	x38 := (x28 + uint32(x37))
	x39 := (x27 + x38)
	x40 := (x26 + x39)
	x41 := (x40 & 0x1ffffff)
	x42 := uint8((x40 >> 25))
	x43 := (x25 + uint32(x42))
	x44 := (x24 + x43)
	x45 := (x23 + x44)
	x46 := (x45 & 0x3ffffff)
	x47 := uint8((x45 >> 26))
	x48 := (x22 + uint32(x47))
	x49 := (x21 + x48)
	x50 := (x20 + x49)
	x51 := (x50 & 0x1ffffff)
	x52 := uint8((x50 >> 25))
	x53 := (x19 + uint32(x52))
	x54 := (x18 + x53)
	x55 := (x17 + x54)
	x56 := (x15 + uint32(x16))
	x57 := (x14 + x56)
	x58 := (x13 + x57)
	x59 := (x58 & 0x1ffffff)
	x60 := uint8((x58 >> 25))
	x61 := (x12 + uint32(x60))
	x62 := (x11 + x61)
	x63 := (x10 + x62)
	x64 := (x63 & 0x3ffffff)
	x65 := uint8((x63 >> 26))
	x66 := (x9 + uint32(x65))
	x67 := (x8 + x66)
	x68 := (x7 + x67)
	x69 := (x68 & 0x1ffffff)
	x70 := uint8((x68 >> 25))
	x71 := (x6 + uint32(x70))
	x72 := (x5 + x71)
	x73 := (x4 + x72)
	x74 := (x73 & 0x3ffffff)
	x75 := uint8((x73 >> 26))
	x76 := (x3 + uint32(x75))
	x77 := (x2 + x76)
	x78 := (x1 + x77)
	out1[0] = x36
	out1[1] = x41
	out1[2] = x46
	out1[3] = x51
	out1[4] = x55
	out1[5] = x59
	out1[6] = x64
	out1[7] = x69
	out1[8] = x74
	out1[9] = x78
}

// One returns the field element one.
//
// Postconditions:
//   eval out1 mod m = 1 mod m
//
func One(out1 *TightFieldElement) {
	out1[0] = 0x1
	out1[1] = 0x0
	out1[2] = 0x0
	out1[3] = 0x0
	out1[4] = 0x0
	out1[5] = 0x0
	out1[6] = 0x0
	out1[7] = 0x0
	out1[8] = 0x0
	out1[9] = 0x0
}

// Relax is the identity function converting from tight field elements to loose field elements.
//
// Postconditions:
//   out1 = arg1
//
func Relax(out1 *LooseFieldElement, arg1 *TightFieldElement) {
	x1 := arg1[0]
	x2 := arg1[1]
	x3 := arg1[2]
	x4 := arg1[3]
	x5 := arg1[4]
	x6 := arg1[5]
	x7 := arg1[6]
	x8 := arg1[7]
	x9 := arg1[8]
	x10 := arg1[9]
	out1[0] = x1
	out1[1] = x2
	out1[2] = x3
	out1[3] = x4
	out1[4] = x5
	out1[5] = x6
	out1[6] = x7
	out1[7] = x8
	out1[8] = x9
	out1[9] = x10
}

// The function Msat returns the saturated (signed) representation of the prime modulus.
//
// Postconditions:
//   twos_complement_eval out1 = m
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Msat(out1 *[9]uint32) {
	out1[0] = 0xffffffed
	out1[1] = 0xffffffff
	out1[2] = 0xffffffff
	out1[3] = 0xffffffff
	out1[4] = 0xffffffff
	out1[5] = 0xffffffff
	out1[6] = 0xffffffff
	out1[7] = 0x7fffffff
	out1[8] = uint32(0x0)
}

// The function SatFromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Postconditions:
//   eval out1 mod m = bytes_eval arg1 mod m
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func SatFromBytes(out1 *[9]uint32, arg1 *[32]uint8) {
	x1 := (uint32(arg1[31]) << 24)
	x2 := (uint32(arg1[30]) << 16)
	x3 := (uint32(arg1[29]) << 8)
	x4 := arg1[28]
	x5 := (uint32(arg1[27]) << 24)
	x6 := (uint32(arg1[26]) << 16)
	x7 := (uint32(arg1[25]) << 8)
	x8 := arg1[24]
	x9 := (uint32(arg1[23]) << 24)
	x10 := (uint32(arg1[22]) << 16)
	x11 := (uint32(arg1[21]) << 8)
	x12 := arg1[20]
	x13 := (uint32(arg1[19]) << 24)
	x14 := (uint32(arg1[18]) << 16)
	x15 := (uint32(arg1[17]) << 8)
	x16 := arg1[16]
	x17 := (uint32(arg1[15]) << 24)
	x18 := (uint32(arg1[14]) << 16)
	x19 := (uint32(arg1[13]) << 8)
	x20 := arg1[12]
	x21 := (uint32(arg1[11]) << 24)
	x22 := (uint32(arg1[10]) << 16)
	x23 := (uint32(arg1[9]) << 8)
	x24 := arg1[8]
	x25 := (uint32(arg1[7]) << 24)
	x26 := (uint32(arg1[6]) << 16)
	x27 := (uint32(arg1[5]) << 8)
	x28 := arg1[4]
	x29 := (uint32(arg1[3]) << 24)
	x30 := (uint32(arg1[2]) << 16)
	x31 := (uint32(arg1[1]) << 8)
	x32 := arg1[0]
	x33 := (x31 + uint32(x32))
	x34 := (x30 + x33)
	x35 := (x29 + x34)
	x36 := (x27 + uint32(x28))
	x37 := (x26 + x36)
	x38 := (x25 + x37)
	x39 := (x23 + uint32(x24))
	x40 := (x22 + x39)
	x41 := (x21 + x40)
	x42 := (x19 + uint32(x20))
	x43 := (x18 + x42)
	x44 := (x17 + x43)
	x45 := (x15 + uint32(x16))
	x46 := (x14 + x45)
	x47 := (x13 + x46)
	x48 := (x11 + uint32(x12))
	x49 := (x10 + x48)
	x50 := (x9 + x49)
	x51 := (x7 + uint32(x8))
	x52 := (x6 + x51)
	x53 := (x5 + x52)
	x54 := (x3 + uint32(x4))
	x55 := (x2 + x54)
	x56 := (x1 + x55)
	out1[0] = x35
	out1[1] = x38
	out1[2] = x41
	out1[3] = x44
	out1[4] = x47
	out1[5] = x50
	out1[6] = x53
	out1[7] = x56
	out1[8] = uint32(0x0)
}

// The function Divstep computes a divstep.
//
// Postconditions:
//   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
//   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
//   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
//   eval out4 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval arg5) mod m else (2 * eval arg4) mod m)
//   eval out5 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval arg4 - eval arg4) mod m else (eval arg5 + (twos_complement_eval arg3 mod 2) * eval arg4) mod m)
//
// Input Bounds:
//   arg1: [0x0 ~> 0xffffffff]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [0x0 ~> 0xffffffff]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func Divstep(out1 *uint32, out2 *[9]uint32, out3 *[9]uint32, out4 *TightFieldElement, out5 *TightFieldElement, arg1 uint32, arg2 *[9]uint32, arg3 *[9]uint32, arg4 *TightFieldElement, arg5 *TightFieldElement) {
	var x1 uint32
	x1, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	x3 := (uint1((x1 >> 31)) & (uint1(arg3[0]) & 0x1))
	var x4 uint32
	x4, _ = bits.Add32((^arg1), uint32(0x1), uint32(0x0))
	var x6 uint32
	cmovznzU32(&x6, x3, arg1, x4)
	var x7 uint32
	cmovznzU32(&x7, x3, arg2[0], arg3[0])
	var x8 uint32
	cmovznzU32(&x8, x3, arg2[1], arg3[1])
	var x9 uint32
	cmovznzU32(&x9, x3, arg2[2], arg3[2])
	var x10 uint32
	cmovznzU32(&x10, x3, arg2[3], arg3[3])
	var x11 uint32
	cmovznzU32(&x11, x3, arg2[4], arg3[4])
	var x12 uint32
	cmovznzU32(&x12, x3, arg2[5], arg3[5])
	var x13 uint32
	cmovznzU32(&x13, x3, arg2[6], arg3[6])
	var x14 uint32
	cmovznzU32(&x14, x3, arg2[7], arg3[7])
	var x15 uint32
	cmovznzU32(&x15, x3, arg2[8], arg3[8])
	var x16 uint32
	var x17 uint32
	x16, x17 = bits.Add32(uint32(0x1), (^arg2[0]), uint32(0x0))
	var x18 uint32
	var x19 uint32
	x18, x19 = bits.Add32(uint32(0x0), (^arg2[1]), uint32(uint1(x17)))
	var x20 uint32
	var x21 uint32
	x20, x21 = bits.Add32(uint32(0x0), (^arg2[2]), uint32(uint1(x19)))
	var x22 uint32
	var x23 uint32
	x22, x23 = bits.Add32(uint32(0x0), (^arg2[3]), uint32(uint1(x21)))
	var x24 uint32
	var x25 uint32
	x24, x25 = bits.Add32(uint32(0x0), (^arg2[4]), uint32(uint1(x23)))
	var x26 uint32
	var x27 uint32
	x26, x27 = bits.Add32(uint32(0x0), (^arg2[5]), uint32(uint1(x25)))
	var x28 uint32
	var x29 uint32
	x28, x29 = bits.Add32(uint32(0x0), (^arg2[6]), uint32(uint1(x27)))
	var x30 uint32
	var x31 uint32
	x30, x31 = bits.Add32(uint32(0x0), (^arg2[7]), uint32(uint1(x29)))
	var x32 uint32
	x32, _ = bits.Add32(uint32(0x0), (^arg2[8]), uint32(uint1(x31)))
	var x34 uint32
	cmovznzU32(&x34, x3, arg3[0], x16)
	var x35 uint32
	cmovznzU32(&x35, x3, arg3[1], x18)
	var x36 uint32
	cmovznzU32(&x36, x3, arg3[2], x20)
	var x37 uint32
	cmovznzU32(&x37, x3, arg3[3], x22)
	var x38 uint32
	cmovznzU32(&x38, x3, arg3[4], x24)
	var x39 uint32
	cmovznzU32(&x39, x3, arg3[5], x26)
	var x40 uint32
	cmovznzU32(&x40, x3, arg3[6], x28)
	var x41 uint32
	cmovznzU32(&x41, x3, arg3[7], x30)
	var x42 uint32
	cmovznzU32(&x42, x3, arg3[8], x32)
	var x43 uint32
	cmovznzU32(&x43, x3, arg4[0], arg5[0])
	var x44 uint32
	cmovznzU32(&x44, x3, arg4[1], arg5[1])
	var x45 uint32
	cmovznzU32(&x45, x3, arg4[2], arg5[2])
	var x46 uint32
	cmovznzU32(&x46, x3, arg4[3], arg5[3])
	var x47 uint32
	cmovznzU32(&x47, x3, arg4[4], arg5[4])
	var x48 uint32
	cmovznzU32(&x48, x3, arg4[5], arg5[5])
	var x49 uint32
	cmovznzU32(&x49, x3, arg4[6], arg5[6])
	var x50 uint32
	cmovznzU32(&x50, x3, arg4[7], arg5[7])
	var x51 uint32
	cmovznzU32(&x51, x3, arg4[8], arg5[8])
	var x52 uint32
	cmovznzU32(&x52, x3, arg4[9], arg5[9])
	x53 := (x43 + x43)
	x54 := (x53 >> 26)
	x55 := (x53 & 0x3ffffff)
	x56 := (x52 + x52)
	x57 := (x51 + x51)
	x58 := (x50 + x50)
	x59 := (x49 + x49)
	x60 := (x48 + x48)
	x61 := (x47 + x47)
	x62 := (x46 + x46)
	x63 := (x45 + x45)
	x64 := (x44 + x44)
	x65 := (x54 + x64)
	x66 := (x65 >> 25)
	x67 := (x65 & 0x1ffffff)
	x68 := (x66 + x63)
	x69 := (x68 >> 26)
	x70 := (x68 & 0x3ffffff)
	x71 := (x69 + x62)
	x72 := (x71 >> 25)
	x73 := (x71 & 0x1ffffff)
	x74 := (x72 + x61)
	x75 := (x74 >> 26)
	x76 := (x74 & 0x3ffffff)
	x77 := (x75 + x60)
	x78 := (x77 >> 25)
	x79 := (x77 & 0x1ffffff)
	x80 := (x78 + x59)
	x81 := (x80 >> 26)
	x82 := (x80 & 0x3ffffff)
	x83 := (x81 + x58)
	x84 := (x83 >> 25)
	x85 := (x83 & 0x1ffffff)
	x86 := (x84 + x57)
	x87 := (x86 >> 26)
	x88 := (x86 & 0x3ffffff)
	x89 := (x87 + x56)
	x90 := (x89 >> 25)
	x91 := (x89 & 0x1ffffff)
	x92 := (x90 * 0x13)
	x93 := (x55 + x92)
	x94 := uint1((x93 >> 26))
	x95 := (x93 & 0x3ffffff)
	x96 := (uint32(x94) + x67)
	x97 := uint1((x96 >> 25))
	x98 := (x96 & 0x1ffffff)
	x99 := (uint32(x97) + x70)
	x100 := arg4[9]
	x101 := arg4[8]
	x102 := arg4[7]
	x103 := arg4[6]
	x104 := arg4[5]
	x105 := arg4[4]
	x106 := arg4[3]
	x107 := arg4[2]
	x108 := arg4[1]
	x109 := arg4[0]
	x110 := (0x7ffffda - x109)
	x111 := (0x3fffffe - x108)
	x112 := (0x7fffffe - x107)
	x113 := (0x3fffffe - x106)
	x114 := (0x7fffffe - x105)
	x115 := (0x3fffffe - x104)
	x116 := (0x7fffffe - x103)
	x117 := (0x3fffffe - x102)
	x118 := (0x7fffffe - x101)
	x119 := (0x3fffffe - x100)
	x120 := uint1((x110 >> 26))
	x121 := (x110 & 0x3ffffff)
	x122 := (uint32(x120) + x111)
	x123 := uint1((x122 >> 25))
	x124 := (x122 & 0x1ffffff)
	x125 := (uint32(x123) + x112)
	x126 := uint1((x125 >> 26))
	x127 := (x125 & 0x3ffffff)
	x128 := (uint32(x126) + x113)
	x129 := uint1((x128 >> 25))
	x130 := (x128 & 0x1ffffff)
	x131 := (uint32(x129) + x114)
	x132 := uint1((x131 >> 26))
	x133 := (x131 & 0x3ffffff)
	x134 := (uint32(x132) + x115)
	x135 := uint1((x134 >> 25))
	x136 := (x134 & 0x1ffffff)
	x137 := (uint32(x135) + x116)
	x138 := uint1((x137 >> 26))
	x139 := (x137 & 0x3ffffff)
	x140 := (uint32(x138) + x117)
	x141 := uint1((x140 >> 25))
	x142 := (x140 & 0x1ffffff)
	x143 := (uint32(x141) + x118)
	x144 := uint1((x143 >> 26))
	x145 := (x143 & 0x3ffffff)
	x146 := (uint32(x144) + x119)
	x147 := uint1((x146 >> 25))
	x148 := (x146 & 0x1ffffff)
	x149 := (uint32(x147) * 0x13)
	x150 := (x121 + x149)
	x151 := uint1((x150 >> 26))
	x152 := (x150 & 0x3ffffff)
	x153 := (uint32(x151) + x124)
	x154 := uint1((x153 >> 25))
	x155 := (x153 & 0x1ffffff)
	x156 := (uint32(x154) + x127)
	var x157 uint32
	cmovznzU32(&x157, x3, arg5[0], x152)
	var x158 uint32
	cmovznzU32(&x158, x3, arg5[1], x155)
	var x159 uint32
	cmovznzU32(&x159, x3, arg5[2], x156)
	var x160 uint32
	cmovznzU32(&x160, x3, arg5[3], x130)
	var x161 uint32
	cmovznzU32(&x161, x3, arg5[4], x133)
	var x162 uint32
	cmovznzU32(&x162, x3, arg5[5], x136)
	var x163 uint32
	cmovznzU32(&x163, x3, arg5[6], x139)
	var x164 uint32
	cmovznzU32(&x164, x3, arg5[7], x142)
	var x165 uint32
	cmovznzU32(&x165, x3, arg5[8], x145)
	var x166 uint32
	cmovznzU32(&x166, x3, arg5[9], x148)
	x167 := (uint1(x34) & 0x1)
	var x168 uint32
	cmovznzU32(&x168, x167, uint32(0x0), x7)
	var x169 uint32
	cmovznzU32(&x169, x167, uint32(0x0), x8)
	var x170 uint32
	cmovznzU32(&x170, x167, uint32(0x0), x9)
	var x171 uint32
	cmovznzU32(&x171, x167, uint32(0x0), x10)
	var x172 uint32
	cmovznzU32(&x172, x167, uint32(0x0), x11)
	var x173 uint32
	cmovznzU32(&x173, x167, uint32(0x0), x12)
	var x174 uint32
	cmovznzU32(&x174, x167, uint32(0x0), x13)
	var x175 uint32
	cmovznzU32(&x175, x167, uint32(0x0), x14)
	var x176 uint32
	cmovznzU32(&x176, x167, uint32(0x0), x15)
	var x177 uint32
	var x178 uint32
	x177, x178 = bits.Add32(x34, x168, uint32(0x0))
	var x179 uint32
	var x180 uint32
	x179, x180 = bits.Add32(x35, x169, uint32(uint1(x178)))
	var x181 uint32
	var x182 uint32
	x181, x182 = bits.Add32(x36, x170, uint32(uint1(x180)))
	var x183 uint32
	var x184 uint32
	x183, x184 = bits.Add32(x37, x171, uint32(uint1(x182)))
	var x185 uint32
	var x186 uint32
	x185, x186 = bits.Add32(x38, x172, uint32(uint1(x184)))
	var x187 uint32
	var x188 uint32
	x187, x188 = bits.Add32(x39, x173, uint32(uint1(x186)))
	var x189 uint32
	var x190 uint32
	x189, x190 = bits.Add32(x40, x174, uint32(uint1(x188)))
	var x191 uint32
	var x192 uint32
	x191, x192 = bits.Add32(x41, x175, uint32(uint1(x190)))
	var x193 uint32
	x193, _ = bits.Add32(x42, x176, uint32(uint1(x192)))
	var x195 uint32
	cmovznzU32(&x195, x167, uint32(0x0), x43)
	var x196 uint32
	cmovznzU32(&x196, x167, uint32(0x0), x44)
	var x197 uint32
	cmovznzU32(&x197, x167, uint32(0x0), x45)
	var x198 uint32
	cmovznzU32(&x198, x167, uint32(0x0), x46)
	var x199 uint32
	cmovznzU32(&x199, x167, uint32(0x0), x47)
	var x200 uint32
	cmovznzU32(&x200, x167, uint32(0x0), x48)
	var x201 uint32
	cmovznzU32(&x201, x167, uint32(0x0), x49)
	var x202 uint32
	cmovznzU32(&x202, x167, uint32(0x0), x50)
	var x203 uint32
	cmovznzU32(&x203, x167, uint32(0x0), x51)
	var x204 uint32
	cmovznzU32(&x204, x167, uint32(0x0), x52)
	x205 := (x157 + x195)
	x206 := (x205 >> 26)
	x207 := (x205 & 0x3ffffff)
	x208 := (x166 + x204)
	x209 := (x165 + x203)
	x210 := (x164 + x202)
	x211 := (x163 + x201)
	x212 := (x162 + x200)
	x213 := (x161 + x199)
	x214 := (x160 + x198)
	x215 := (x159 + x197)
	x216 := (x158 + x196)
	x217 := (x206 + x216)
	x218 := (x217 >> 25)
	x219 := (x217 & 0x1ffffff)
	x220 := (x218 + x215)
	x221 := (x220 >> 26)
	x222 := (x220 & 0x3ffffff)
	x223 := (x221 + x214)
	x224 := (x223 >> 25)
	x225 := (x223 & 0x1ffffff)
	x226 := (x224 + x213)
	x227 := (x226 >> 26)
	x228 := (x226 & 0x3ffffff)
	x229 := (x227 + x212)
	x230 := (x229 >> 25)
	x231 := (x229 & 0x1ffffff)
	x232 := (x230 + x211)
	x233 := (x232 >> 26)
	x234 := (x232 & 0x3ffffff)
	x235 := (x233 + x210)
	x236 := (x235 >> 25)
	x237 := (x235 & 0x1ffffff)
	x238 := (x236 + x209)
	x239 := (x238 >> 26)
	x240 := (x238 & 0x3ffffff)
	x241 := (x239 + x208)
	x242 := (x241 >> 25)
	x243 := (x241 & 0x1ffffff)
	x244 := (x242 * 0x13)
	x245 := (x207 + x244)
	x246 := uint1((x245 >> 26))
	x247 := (x245 & 0x3ffffff)
	x248 := (uint32(x246) + x219)
	x249 := uint1((x248 >> 25))
	x250 := (x248 & 0x1ffffff)
	x251 := (uint32(x249) + x222)
	var x252 uint32
	x252, _ = bits.Add32(x6, uint32(0x1), uint32(0x0))
	x254 := ((x177 >> 1) | ((x179 << 31) & 0xffffffff))
	x255 := ((x179 >> 1) | ((x181 << 31) & 0xffffffff))
	x256 := ((x181 >> 1) | ((x183 << 31) & 0xffffffff))
	x257 := ((x183 >> 1) | ((x185 << 31) & 0xffffffff))
	x258 := ((x185 >> 1) | ((x187 << 31) & 0xffffffff))
	x259 := ((x187 >> 1) | ((x189 << 31) & 0xffffffff))
	x260 := ((x189 >> 1) | ((x191 << 31) & 0xffffffff))
	x261 := ((x191 >> 1) | ((x193 << 31) & 0xffffffff))
	x262 := ((x193 & 0x80000000) | (x193 >> 1))
	*out1 = x252
	out2[0] = x7
	out2[1] = x8
	out2[2] = x9
	out2[3] = x10
	out2[4] = x11
	out2[5] = x12
	out2[6] = x13
	out2[7] = x14
	out2[8] = x15
	out3[0] = x254
	out3[1] = x255
	out3[2] = x256
	out3[3] = x257
	out3[4] = x258
	out3[5] = x259
	out3[6] = x260
	out3[7] = x261
	out3[8] = x262
	out4[0] = x95
	out4[1] = x98
	out4[2] = x99
	out4[3] = x73
	out4[4] = x76
	out4[5] = x79
	out4[6] = x82
	out4[7] = x85
	out4[8] = x88
	out4[9] = x91
	out5[0] = x247
	out5[1] = x250
	out5[2] = x251
	out5[3] = x225
	out5[4] = x228
	out5[5] = x231
	out5[6] = x234
	out5[7] = x237
	out5[8] = x240
	out5[9] = x243
}

// The function DivstepPrecomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
//
func DivstepPrecomp(out1 *TightFieldElement) {
	out1[0] = 0x938054
	out1[1] = 0x55b1b2
	out1[2] = 0x82ee0c
	out1[3] = 0x1b28459
	out1[4] = 0xa54469
	out1[5] = 0x1351c67
	out1[6] = 0x3b3b619
	out1[7] = 0x7acb1c
	out1[8] = 0x2c1db59
	out1[9] = 0xb66f98
}

// The function JumpdivstepPrecomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecomp(out1 *[10]uint32) {
	out1[0] = 0x6c8937
	out1[1] = 0x1c1855b
	out1[2] = 0x116482e
	out1[3] = 0x8d3b28
	out1[4] = 0x319ca54
	out1[5] = 0xc33351
	out1[6] = 0x2c73b3b
	out1[7] = 0x16b27ac
	out1[8] = 0x3e62c1d
	out1[9] = 0x1b8b66
}

// The function JumpdivstepPrecompHd returns the precomputed value for the (half-delta) jump-version of Bernstein-Yang-inversion (in montgomery form).
//
// Postconditions:
//   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
//
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func JumpdivstepPrecompHd(out1 *[10]uint32) {
	out1[0] = 0xdd407e
	out1[1] = 0xf99e2
	out1[2] = 0x992cad
	out1[3] = 0x11e7e3a
	out1[4] = 0x242a8c6
	out1[5] = 0x16b14
	out1[6] = 0x18d9127
	out1[7] = 0x1b830ab
	out1[8] = 0x22c905
	out1[9] = 0x111a765
}

// The function OuterLoopBody computes the body of the outer loop in BY-inversion (jumpdivstep version).
//
// Postconditions:
//   eval arg1 = eval arg2
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func OuterLoopBody(out1 *[9]uint32, out2 *[9]uint32, out3 *TightFieldElement, out4 *TightFieldElement, arg1 *[9]uint32, arg2 *[9]uint32, arg3 *TightFieldElement, arg4 *TightFieldElement) {
	var x1 uint32
	cmovznzU32(&x1, (uint1(arg2[0]) & 0x1), uint32(0x1), 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1(arg2[0]) & 0x1), arg1[0], arg2[0])
	var x3 uint32
	cmovznzU32(&x3, (uint1(arg2[0]) & 0x1), arg2[0], (uint32((uint64((^arg1[0])) + uint64(0x1))) & 0xffffffff))
	var x4 uint1
	cmovznzU1(&x4, (uint1(arg2[0]) & 0x1), 0x1, 0x0)
	var x5 uint1
	cmovznzU1(&x5, (uint1(arg2[0]) & 0x1), 0x0, 0x1)
	var x6 uint32
	cmovznzU32(&x6, (uint1(arg2[0]) & 0x1), uint32(0x0), 0xffffffff)
	var x7 uint1
	cmovznzU1(&x7, (uint1(arg2[0]) & 0x1), 0x1, 0x0)
	var x8 uint32
	cmovznzU32(&x8, (uint1(x3) & 0x1), uint32(0x0), x2)
	var x9 uint1
	cmovznzU1(&x9, (uint1(x3) & 0x1), 0x0, x4)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x3) & 0x1), 0x0, x5)
	x11 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x1))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x12 uint32
	cmovznzU32(&x12, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x1))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x1))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x13 uint32
	cmovznzU32(&x13, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), x2, (((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1)))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1)), (uint32((uint64((^x2)) + uint64(0x1))) & 0xffffffff))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x4) + uint32(x4)), (uint32((uint64(x6) + uint64(x9))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32(x7) + uint32(x10)))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x6) + uint64(x9))) & 0xffffffff), (uint32((uint64((^(uint32(x4) + uint32(x4)))) + uint64(0x1))) & 0xffffffff))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x7) + uint32(x10)), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1(x14) & 0x1), uint32(0x0), x13)
	var x20 uint32
	cmovznzU32(&x20, (uint1(x14) & 0x1), uint32(0x0), x15)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x14) & 0x1), uint32(0x0), x16)
	x22 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x12))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x23 uint32
	cmovznzU32(&x23, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x12))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x12))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x24 uint32
	cmovznzU32(&x24, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), x13, (((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1)))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1)), (uint32((uint64((^x13)) + uint64(0x1))) & 0xffffffff))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x15) + uint64(x15))) & 0xffffffff), (uint32((uint64(x17) + uint64(x20))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (x16 + x16), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x17) + uint64(x20))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x15) + uint64(x15))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(x16 + x16))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1(x25) & 0x1), uint32(0x0), x24)
	var x31 uint32
	cmovznzU32(&x31, (uint1(x25) & 0x1), uint32(0x0), x26)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x25) & 0x1), uint32(0x0), x27)
	x33 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x23))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x34 uint32
	cmovznzU32(&x34, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x23))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x23))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x35 uint32
	cmovznzU32(&x35, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), x24, (((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1)))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1)), (uint32((uint64((^x24)) + uint64(0x1))) & 0xffffffff))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x26) + uint64(x26))) & 0xffffffff), (uint32((uint64(x28) + uint64(x31))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x31))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x26) + uint64(x26))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1(x36) & 0x1), uint32(0x0), x35)
	var x42 uint32
	cmovznzU32(&x42, (uint1(x36) & 0x1), uint32(0x0), x37)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x36) & 0x1), uint32(0x0), x38)
	x44 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x34))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x45 uint32
	cmovznzU32(&x45, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x34))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x34))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x46 uint32
	cmovznzU32(&x46, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), x35, (((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1)))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1)), (uint32((uint64((^x35)) + uint64(0x1))) & 0xffffffff))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x37) + uint64(x37))) & 0xffffffff), (uint32((uint64(x39) + uint64(x42))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x42))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x37) + uint64(x37))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1(x47) & 0x1), uint32(0x0), x46)
	var x53 uint32
	cmovznzU32(&x53, (uint1(x47) & 0x1), uint32(0x0), x48)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x47) & 0x1), uint32(0x0), x49)
	x55 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x45))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x56 uint32
	cmovznzU32(&x56, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x45))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x45))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x57 uint32
	cmovznzU32(&x57, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), x46, (((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1)))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1)), (uint32((uint64((^x46)) + uint64(0x1))) & 0xffffffff))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x48) + uint64(x48))) & 0xffffffff), (uint32((uint64(x50) + uint64(x53))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x53))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x48) + uint64(x48))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1(x58) & 0x1), uint32(0x0), x57)
	var x64 uint32
	cmovznzU32(&x64, (uint1(x58) & 0x1), uint32(0x0), x59)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x58) & 0x1), uint32(0x0), x60)
	x66 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x56))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x67 uint32
	cmovznzU32(&x67, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x56))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x56))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x68 uint32
	cmovznzU32(&x68, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), x57, (((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1)))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1)), (uint32((uint64((^x57)) + uint64(0x1))) & 0xffffffff))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x59) + uint64(x59))) & 0xffffffff), (uint32((uint64(x61) + uint64(x64))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x64))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x59) + uint64(x59))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1(x69) & 0x1), uint32(0x0), x68)
	var x75 uint32
	cmovznzU32(&x75, (uint1(x69) & 0x1), uint32(0x0), x70)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x69) & 0x1), uint32(0x0), x71)
	x77 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x67))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x78 uint32
	cmovznzU32(&x78, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x67))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x67))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x79 uint32
	cmovznzU32(&x79, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), x68, (((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1)))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1)), (uint32((uint64((^x68)) + uint64(0x1))) & 0xffffffff))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x70) + uint64(x70))) & 0xffffffff), (uint32((uint64(x72) + uint64(x75))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x75))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x70) + uint64(x70))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1(x80) & 0x1), uint32(0x0), x79)
	var x86 uint32
	cmovznzU32(&x86, (uint1(x80) & 0x1), uint32(0x0), x81)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x80) & 0x1), uint32(0x0), x82)
	x88 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x78))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x89 uint32
	cmovznzU32(&x89, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x78))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x78))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x90 uint32
	cmovznzU32(&x90, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), x79, (((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1)))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1)), (uint32((uint64((^x79)) + uint64(0x1))) & 0xffffffff))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x81) + uint64(x81))) & 0xffffffff), (uint32((uint64(x83) + uint64(x86))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x86))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x81) + uint64(x81))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1(x91) & 0x1), uint32(0x0), x90)
	var x97 uint32
	cmovznzU32(&x97, (uint1(x91) & 0x1), uint32(0x0), x92)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x91) & 0x1), uint32(0x0), x93)
	x99 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x89))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x100 uint32
	cmovznzU32(&x100, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x89))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x89))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x101 uint32
	cmovznzU32(&x101, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), x90, (((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1)))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1)), (uint32((uint64((^x90)) + uint64(0x1))) & 0xffffffff))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x92) + uint64(x92))) & 0xffffffff), (uint32((uint64(x94) + uint64(x97))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x97))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x92) + uint64(x92))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1(x102) & 0x1), uint32(0x0), x101)
	var x108 uint32
	cmovznzU32(&x108, (uint1(x102) & 0x1), uint32(0x0), x103)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x102) & 0x1), uint32(0x0), x104)
	x110 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x100))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x111 uint32
	cmovznzU32(&x111, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x100))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x100))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x112 uint32
	cmovznzU32(&x112, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), x101, (((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1)))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1)), (uint32((uint64((^x101)) + uint64(0x1))) & 0xffffffff))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x103) + uint64(x103))) & 0xffffffff), (uint32((uint64(x105) + uint64(x108))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x108))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x103) + uint64(x103))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1(x113) & 0x1), uint32(0x0), x112)
	var x119 uint32
	cmovznzU32(&x119, (uint1(x113) & 0x1), uint32(0x0), x114)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x113) & 0x1), uint32(0x0), x115)
	x121 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x111))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x122 uint32
	cmovznzU32(&x122, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x111))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x111))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x123 uint32
	cmovznzU32(&x123, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), x112, (((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1)))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1)), (uint32((uint64((^x112)) + uint64(0x1))) & 0xffffffff))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x114) + uint64(x114))) & 0xffffffff), (uint32((uint64(x116) + uint64(x119))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x119))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x114) + uint64(x114))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1(x124) & 0x1), uint32(0x0), x123)
	var x130 uint32
	cmovznzU32(&x130, (uint1(x124) & 0x1), uint32(0x0), x125)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x124) & 0x1), uint32(0x0), x126)
	x132 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x122))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x133 uint32
	cmovznzU32(&x133, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x122))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x122))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x134 uint32
	cmovznzU32(&x134, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), x123, (((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1)))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1)), (uint32((uint64((^x123)) + uint64(0x1))) & 0xffffffff))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x125) + uint64(x125))) & 0xffffffff), (uint32((uint64(x127) + uint64(x130))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x130))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x125) + uint64(x125))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1(x135) & 0x1), uint32(0x0), x134)
	var x141 uint32
	cmovznzU32(&x141, (uint1(x135) & 0x1), uint32(0x0), x136)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x135) & 0x1), uint32(0x0), x137)
	x143 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x133))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x144 uint32
	cmovznzU32(&x144, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x133))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x133))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x145 uint32
	cmovznzU32(&x145, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), x134, (((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1)))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1)), (uint32((uint64((^x134)) + uint64(0x1))) & 0xffffffff))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x136) + uint64(x136))) & 0xffffffff), (uint32((uint64(x138) + uint64(x141))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x141))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x136) + uint64(x136))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1(x146) & 0x1), uint32(0x0), x145)
	var x152 uint32
	cmovznzU32(&x152, (uint1(x146) & 0x1), uint32(0x0), x147)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x146) & 0x1), uint32(0x0), x148)
	x154 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x144))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x155 uint32
	cmovznzU32(&x155, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x144))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x144))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x156 uint32
	cmovznzU32(&x156, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), x145, (((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1)))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1)), (uint32((uint64((^x145)) + uint64(0x1))) & 0xffffffff))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x147) + uint64(x147))) & 0xffffffff), (uint32((uint64(x149) + uint64(x152))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x152))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x147) + uint64(x147))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1(x157) & 0x1), uint32(0x0), x156)
	var x163 uint32
	cmovznzU32(&x163, (uint1(x157) & 0x1), uint32(0x0), x158)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x157) & 0x1), uint32(0x0), x159)
	x165 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x155))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x166 uint32
	cmovznzU32(&x166, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x155))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x155))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x167 uint32
	cmovznzU32(&x167, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), x156, (((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1)))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1)), (uint32((uint64((^x156)) + uint64(0x1))) & 0xffffffff))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x158) + uint64(x158))) & 0xffffffff), (uint32((uint64(x160) + uint64(x163))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x163))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x158) + uint64(x158))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1(x168) & 0x1), uint32(0x0), x167)
	var x174 uint32
	cmovznzU32(&x174, (uint1(x168) & 0x1), uint32(0x0), x169)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x168) & 0x1), uint32(0x0), x170)
	x176 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x166))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x177 uint32
	cmovznzU32(&x177, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x166))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x166))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x178 uint32
	cmovznzU32(&x178, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), x167, (((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1)))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1)), (uint32((uint64((^x167)) + uint64(0x1))) & 0xffffffff))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x169) + uint64(x169))) & 0xffffffff), (uint32((uint64(x171) + uint64(x174))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x174))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x169) + uint64(x169))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1(x179) & 0x1), uint32(0x0), x178)
	var x185 uint32
	cmovznzU32(&x185, (uint1(x179) & 0x1), uint32(0x0), x180)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x179) & 0x1), uint32(0x0), x181)
	x187 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x177))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x188 uint32
	cmovznzU32(&x188, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x177))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x177))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x189 uint32
	cmovznzU32(&x189, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), x178, (((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1)))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1)), (uint32((uint64((^x178)) + uint64(0x1))) & 0xffffffff))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x180) + uint64(x180))) & 0xffffffff), (uint32((uint64(x182) + uint64(x185))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x185))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x180) + uint64(x180))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1(x190) & 0x1), uint32(0x0), x189)
	var x196 uint32
	cmovznzU32(&x196, (uint1(x190) & 0x1), uint32(0x0), x191)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x190) & 0x1), uint32(0x0), x192)
	x198 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x188))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x199 uint32
	cmovznzU32(&x199, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x188))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x188))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x200 uint32
	cmovznzU32(&x200, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), x189, (((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1)))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1)), (uint32((uint64((^x189)) + uint64(0x1))) & 0xffffffff))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x191) + uint64(x191))) & 0xffffffff), (uint32((uint64(x193) + uint64(x196))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x196))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x191) + uint64(x191))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1(x201) & 0x1), uint32(0x0), x200)
	var x207 uint32
	cmovznzU32(&x207, (uint1(x201) & 0x1), uint32(0x0), x202)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x201) & 0x1), uint32(0x0), x203)
	x209 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x199))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x210 uint32
	cmovznzU32(&x210, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x199))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x199))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x211 uint32
	cmovznzU32(&x211, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), x200, (((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1)))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1)), (uint32((uint64((^x200)) + uint64(0x1))) & 0xffffffff))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x202) + uint64(x202))) & 0xffffffff), (uint32((uint64(x204) + uint64(x207))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x207))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x202) + uint64(x202))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1(x212) & 0x1), uint32(0x0), x211)
	var x218 uint32
	cmovznzU32(&x218, (uint1(x212) & 0x1), uint32(0x0), x213)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x212) & 0x1), uint32(0x0), x214)
	x220 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x210))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x221 uint32
	cmovznzU32(&x221, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x210))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x210))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x222 uint32
	cmovznzU32(&x222, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), x211, (((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1)))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1)), (uint32((uint64((^x211)) + uint64(0x1))) & 0xffffffff))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x213) + uint64(x213))) & 0xffffffff), (uint32((uint64(x215) + uint64(x218))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x218))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x213) + uint64(x213))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1(x223) & 0x1), uint32(0x0), x222)
	var x229 uint32
	cmovznzU32(&x229, (uint1(x223) & 0x1), uint32(0x0), x224)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x223) & 0x1), uint32(0x0), x225)
	x231 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x221))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x232 uint32
	cmovznzU32(&x232, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x221))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x221))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x233 uint32
	cmovznzU32(&x233, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), x222, (((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1)))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1)), (uint32((uint64((^x222)) + uint64(0x1))) & 0xffffffff))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x224) + uint64(x224))) & 0xffffffff), (uint32((uint64(x226) + uint64(x229))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x229))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x224) + uint64(x224))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1(x234) & 0x1), uint32(0x0), x233)
	var x240 uint32
	cmovznzU32(&x240, (uint1(x234) & 0x1), uint32(0x0), x235)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x234) & 0x1), uint32(0x0), x236)
	x242 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x232))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x243 uint32
	cmovznzU32(&x243, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x232))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x232))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x244 uint32
	cmovznzU32(&x244, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), x233, (((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1)))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1)), (uint32((uint64((^x233)) + uint64(0x1))) & 0xffffffff))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x235) + uint64(x235))) & 0xffffffff), (uint32((uint64(x237) + uint64(x240))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x240))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x235) + uint64(x235))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1(x245) & 0x1), uint32(0x0), x244)
	var x251 uint32
	cmovznzU32(&x251, (uint1(x245) & 0x1), uint32(0x0), x246)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x245) & 0x1), uint32(0x0), x247)
	x253 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x243))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x254 uint32
	cmovznzU32(&x254, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x243))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x243))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x255 uint32
	cmovznzU32(&x255, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), x244, (((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1)))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1)), (uint32((uint64((^x244)) + uint64(0x1))) & 0xffffffff))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x246) + uint64(x246))) & 0xffffffff), (uint32((uint64(x248) + uint64(x251))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x251))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x246) + uint64(x246))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1(x256) & 0x1), uint32(0x0), x255)
	var x262 uint32
	cmovznzU32(&x262, (uint1(x256) & 0x1), uint32(0x0), x257)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x256) & 0x1), uint32(0x0), x258)
	x264 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x254))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x265 uint32
	cmovznzU32(&x265, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x254))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x254))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x266 uint32
	cmovznzU32(&x266, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), x255, (((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1)))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1)), (uint32((uint64((^x255)) + uint64(0x1))) & 0xffffffff))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x257) + uint64(x257))) & 0xffffffff), (uint32((uint64(x259) + uint64(x262))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x262))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x257) + uint64(x257))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1(x267) & 0x1), uint32(0x0), x266)
	var x273 uint32
	cmovznzU32(&x273, (uint1(x267) & 0x1), uint32(0x0), x268)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x267) & 0x1), uint32(0x0), x269)
	x275 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x265))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x276 uint32
	cmovznzU32(&x276, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x265))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x265))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x277 uint32
	cmovznzU32(&x277, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), x266, (((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1)))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1)), (uint32((uint64((^x266)) + uint64(0x1))) & 0xffffffff))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x268) + uint64(x268))) & 0xffffffff), (uint32((uint64(x270) + uint64(x273))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x273))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x268) + uint64(x268))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1(x278) & 0x1), uint32(0x0), x277)
	var x284 uint32
	cmovznzU32(&x284, (uint1(x278) & 0x1), uint32(0x0), x279)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x278) & 0x1), uint32(0x0), x280)
	x286 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x276))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x287 uint32
	cmovznzU32(&x287, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x276))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x276))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x288 uint32
	cmovznzU32(&x288, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), x277, (((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1)))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1)), (uint32((uint64((^x277)) + uint64(0x1))) & 0xffffffff))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x279) + uint64(x279))) & 0xffffffff), (uint32((uint64(x281) + uint64(x284))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x284))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x279) + uint64(x279))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1(x289) & 0x1), uint32(0x0), x288)
	var x295 uint32
	cmovznzU32(&x295, (uint1(x289) & 0x1), uint32(0x0), x290)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x289) & 0x1), uint32(0x0), x291)
	x297 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x287))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x298 uint32
	cmovznzU32(&x298, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x287))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x287))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x299 uint32
	cmovznzU32(&x299, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), x288, (((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1)))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1)), (uint32((uint64((^x288)) + uint64(0x1))) & 0xffffffff))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x290) + uint64(x290))) & 0xffffffff), (uint32((uint64(x292) + uint64(x295))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x295))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x290) + uint64(x290))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1(x300) & 0x1), uint32(0x0), x299)
	var x306 uint32
	cmovznzU32(&x306, (uint1(x300) & 0x1), uint32(0x0), x301)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x300) & 0x1), uint32(0x0), x302)
	x308 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x298))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x309 uint32
	cmovznzU32(&x309, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x1) + uint64(x298))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x1) + uint64(x298))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x310 uint32
	cmovznzU32(&x310, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), x299, (((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1)))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1)), (uint32((uint64((^x299)) + uint64(0x1))) & 0xffffffff))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x301) + uint64(x301))) & 0xffffffff), (uint32((uint64(x303) + uint64(x306))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x306))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x301) + uint64(x301))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1(x311) & 0x1), uint32(0x0), x310)
	var x317 uint32
	cmovznzU32(&x317, (uint1(x311) & 0x1), uint32(0x0), x312)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x311) & 0x1), uint32(0x0), x313)
	x319 := (uint32((uint64((^(uint32((uint64(0x1) + uint64(x309))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x320 uint32
	cmovznzU32(&x320, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1)), (uint32((uint64((^x310)) + uint64(0x1))) & 0xffffffff))
	var x321 uint32
	cmovznzU32(&x321, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x312) + uint64(x312))) & 0xffffffff), (uint32((uint64(x314) + uint64(x317))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x317))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x312) + uint64(x312))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1(x320) & 0x1), uint32(0x0), x321)
	var x326 uint32
	cmovznzU32(&x326, (uint1(x320) & 0x1), uint32(0x0), x322)
	var x327 uint32
	cmovznzU32(&x327, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x328 uint32
	cmovznzU32(&x328, uint1(((uint32((uint64(x321) + uint64(x321))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x329 uint32
	_, x329 = bits.Mul32(x328, arg1[0])
	var x331 uint32
	_, x331 = bits.Mul32(x328, arg1[1])
	var x333 uint32
	var x334 uint32
	x334, x333 = bits.Mul32(x328, arg1[0])
	var x335 uint32
	_, x335 = bits.Mul32(x328, arg1[2])
	var x337 uint32
	var x338 uint32
	x338, x337 = bits.Mul32(x328, arg1[1])
	var x339 uint32
	var x340 uint32
	x340, x339 = bits.Mul32(x328, arg1[0])
	var x341 uint32
	_, x341 = bits.Mul32(x328, arg1[3])
	var x343 uint32
	var x344 uint32
	x344, x343 = bits.Mul32(x328, arg1[2])
	var x345 uint32
	var x346 uint32
	x346, x345 = bits.Mul32(x328, arg1[1])
	var x347 uint32
	var x348 uint32
	x348, x347 = bits.Mul32(x328, arg1[0])
	var x349 uint32
	_, x349 = bits.Mul32(x328, arg1[4])
	var x351 uint32
	var x352 uint32
	x352, x351 = bits.Mul32(x328, arg1[3])
	var x353 uint32
	var x354 uint32
	x354, x353 = bits.Mul32(x328, arg1[2])
	var x355 uint32
	var x356 uint32
	x356, x355 = bits.Mul32(x328, arg1[1])
	var x357 uint32
	var x358 uint32
	x358, x357 = bits.Mul32(x328, arg1[0])
	var x359 uint32
	_, x359 = bits.Mul32(x328, arg1[5])
	var x361 uint32
	var x362 uint32
	x362, x361 = bits.Mul32(x328, arg1[4])
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x328, arg1[3])
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x328, arg1[2])
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x328, arg1[1])
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x328, arg1[0])
	var x371 uint32
	_, x371 = bits.Mul32(x328, arg1[6])
	var x373 uint32
	var x374 uint32
	x374, x373 = bits.Mul32(x328, arg1[5])
	var x375 uint32
	var x376 uint32
	x376, x375 = bits.Mul32(x328, arg1[4])
	var x377 uint32
	var x378 uint32
	x378, x377 = bits.Mul32(x328, arg1[3])
	var x379 uint32
	var x380 uint32
	x380, x379 = bits.Mul32(x328, arg1[2])
	var x381 uint32
	var x382 uint32
	x382, x381 = bits.Mul32(x328, arg1[1])
	var x383 uint32
	var x384 uint32
	x384, x383 = bits.Mul32(x328, arg1[0])
	var x385 uint32
	_, x385 = bits.Mul32(x328, arg1[7])
	var x387 uint32
	var x388 uint32
	x388, x387 = bits.Mul32(x328, arg1[6])
	var x389 uint32
	var x390 uint32
	x390, x389 = bits.Mul32(x328, arg1[5])
	var x391 uint32
	var x392 uint32
	x392, x391 = bits.Mul32(x328, arg1[4])
	var x393 uint32
	var x394 uint32
	x394, x393 = bits.Mul32(x328, arg1[3])
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(x328, arg1[2])
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(x328, arg1[1])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(x328, arg1[0])
	var x401 uint32
	_, x401 = bits.Mul32(x328, arg1[8])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(x328, arg1[7])
	var x405 uint32
	var x406 uint32
	x406, x405 = bits.Mul32(x328, arg1[6])
	var x407 uint32
	var x408 uint32
	x408, x407 = bits.Mul32(x328, arg1[5])
	var x409 uint32
	var x410 uint32
	x410, x409 = bits.Mul32(x328, arg1[4])
	var x411 uint32
	var x412 uint32
	x412, x411 = bits.Mul32(x328, arg1[3])
	var x413 uint32
	var x414 uint32
	x414, x413 = bits.Mul32(x328, arg1[2])
	var x415 uint32
	var x416 uint32
	x416, x415 = bits.Mul32(x328, arg1[1])
	var x417 uint32
	var x418 uint32
	x418, x417 = bits.Mul32(x328, arg1[0])
	var x419 uint32
	_, x419 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), x327)
	var x421 uint32
	var x422 uint32
	x422, x421 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[8])
	var x423 uint32
	var x424 uint32
	x424, x423 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[7])
	var x425 uint32
	var x426 uint32
	x426, x425 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[6])
	var x427 uint32
	var x428 uint32
	x428, x427 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[5])
	var x429 uint32
	var x430 uint32
	x430, x429 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[4])
	var x431 uint32
	var x432 uint32
	x432, x431 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[3])
	var x433 uint32
	var x434 uint32
	x434, x433 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[2])
	var x435 uint32
	var x436 uint32
	x436, x435 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[1])
	var x437 uint32
	var x438 uint32
	x438, x437 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[0])
	var x439 uint32
	x439, _ = bits.Add32(x422, x329, uint32(0x0))
	var x441 uint32
	x441, _ = bits.Add32(x439, x331, uint32(0x0))
	var x443 uint32
	var x444 uint32
	x443, x444 = bits.Add32(x424, x333, uint32(0x0))
	var x445 uint32
	x445, _ = bits.Add32(x441, x334, uint32(uint1(x444)))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x443, x337, uint32(0x0))
	var x449 uint32
	x449, _ = bits.Add32(x445, x335, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x426, x339, uint32(0x0))
	var x453 uint32
	var x454 uint32
	x453, x454 = bits.Add32(x447, x340, uint32(uint1(x452)))
	var x455 uint32
	x455, _ = bits.Add32(x449, x338, uint32(uint1(x454)))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x451, x345, uint32(0x0))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x453, x343, uint32(uint1(x458)))
	var x461 uint32
	x461, _ = bits.Add32(x455, x341, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x428, x347, uint32(0x0))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x457, x348, uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x459, x346, uint32(uint1(x466)))
	var x469 uint32
	x469, _ = bits.Add32(x461, x344, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x463, x355, uint32(0x0))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x465, x353, uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x467, x351, uint32(uint1(x474)))
	var x477 uint32
	x477, _ = bits.Add32(x469, x349, uint32(uint1(x476)))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x430, x357, uint32(0x0))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x471, x358, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x473, x356, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x475, x354, uint32(uint1(x484)))
	var x487 uint32
	x487, _ = bits.Add32(x477, x352, uint32(uint1(x486)))
	var x489 uint32
	var x490 uint32
	x489, x490 = bits.Add32(x479, x367, uint32(0x0))
	var x491 uint32
	var x492 uint32
	x491, x492 = bits.Add32(x481, x365, uint32(uint1(x490)))
	var x493 uint32
	var x494 uint32
	x493, x494 = bits.Add32(x483, x363, uint32(uint1(x492)))
	var x495 uint32
	var x496 uint32
	x495, x496 = bits.Add32(x485, x361, uint32(uint1(x494)))
	var x497 uint32
	x497, _ = bits.Add32(x487, x359, uint32(uint1(x496)))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x432, x369, uint32(0x0))
	var x501 uint32
	var x502 uint32
	x501, x502 = bits.Add32(x489, x370, uint32(uint1(x500)))
	var x503 uint32
	var x504 uint32
	x503, x504 = bits.Add32(x491, x368, uint32(uint1(x502)))
	var x505 uint32
	var x506 uint32
	x505, x506 = bits.Add32(x493, x366, uint32(uint1(x504)))
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x495, x364, uint32(uint1(x506)))
	var x509 uint32
	x509, _ = bits.Add32(x497, x362, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x499, x381, uint32(0x0))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x501, x379, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x503, x377, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x505, x375, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x507, x373, uint32(uint1(x518)))
	var x521 uint32
	x521, _ = bits.Add32(x509, x371, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x434, x383, uint32(0x0))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x511, x384, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x513, x382, uint32(uint1(x526)))
	var x529 uint32
	var x530 uint32
	x529, x530 = bits.Add32(x515, x380, uint32(uint1(x528)))
	var x531 uint32
	var x532 uint32
	x531, x532 = bits.Add32(x517, x378, uint32(uint1(x530)))
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x519, x376, uint32(uint1(x532)))
	var x535 uint32
	x535, _ = bits.Add32(x521, x374, uint32(uint1(x534)))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x523, x397, uint32(0x0))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x525, x395, uint32(uint1(x538)))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x527, x393, uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x529, x391, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x531, x389, uint32(uint1(x544)))
	var x547 uint32
	var x548 uint32
	x547, x548 = bits.Add32(x533, x387, uint32(uint1(x546)))
	var x549 uint32
	x549, _ = bits.Add32(x535, x385, uint32(uint1(x548)))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(x436, x399, uint32(0x0))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x537, x400, uint32(uint1(x552)))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x539, x398, uint32(uint1(x554)))
	var x557 uint32
	var x558 uint32
	x557, x558 = bits.Add32(x541, x396, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Add32(x543, x394, uint32(uint1(x558)))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Add32(x545, x392, uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Add32(x547, x390, uint32(uint1(x562)))
	var x565 uint32
	x565, _ = bits.Add32(x549, x388, uint32(uint1(x564)))
	var x567 uint32
	var x568 uint32
	x567, x568 = bits.Add32(x551, x415, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x553, x413, uint32(uint1(x568)))
	var x571 uint32
	var x572 uint32
	x571, x572 = bits.Add32(x555, x411, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x557, x409, uint32(uint1(x572)))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x559, x407, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x561, x405, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x563, x403, uint32(uint1(x578)))
	var x581 uint32
	x581, _ = bits.Add32(x565, x401, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x438, x417, uint32(0x0))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x567, x418, uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x569, x416, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x571, x414, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x573, x412, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x575, x410, uint32(uint1(x592)))
	var x595 uint32
	var x596 uint32
	x595, x596 = bits.Add32(x577, x408, uint32(uint1(x594)))
	var x597 uint32
	var x598 uint32
	x597, x598 = bits.Add32(x579, x406, uint32(uint1(x596)))
	var x599 uint32
	x599, _ = bits.Add32(x581, x404, uint32(uint1(x598)))
	var x601 uint32
	var x602 uint32
	x601, x602 = bits.Add32(x583, x435, uint32(0x0))
	var x603 uint32
	var x604 uint32
	x603, x604 = bits.Add32(x585, x433, uint32(uint1(x602)))
	var x605 uint32
	var x606 uint32
	x605, x606 = bits.Add32(x587, x431, uint32(uint1(x604)))
	var x607 uint32
	var x608 uint32
	x607, x608 = bits.Add32(x589, x429, uint32(uint1(x606)))
	var x609 uint32
	var x610 uint32
	x609, x610 = bits.Add32(x591, x427, uint32(uint1(x608)))
	var x611 uint32
	var x612 uint32
	x611, x612 = bits.Add32(x593, x425, uint32(uint1(x610)))
	var x613 uint32
	var x614 uint32
	x613, x614 = bits.Add32(x595, x423, uint32(uint1(x612)))
	var x615 uint32
	var x616 uint32
	x615, x616 = bits.Add32(x597, x421, uint32(uint1(x614)))
	var x617 uint32
	x617, _ = bits.Add32(x599, x419, uint32(uint1(x616)))
	var x619 uint32
	cmovznzU32(&x619, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x620 uint32
	cmovznzU32(&x620, uint1(((uint32((uint64(x322) + uint64(x322))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x621 uint32
	_, x621 = bits.Mul32(x620, arg2[0])
	var x623 uint32
	_, x623 = bits.Mul32(x620, arg2[1])
	var x625 uint32
	var x626 uint32
	x626, x625 = bits.Mul32(x620, arg2[0])
	var x627 uint32
	_, x627 = bits.Mul32(x620, arg2[2])
	var x629 uint32
	var x630 uint32
	x630, x629 = bits.Mul32(x620, arg2[1])
	var x631 uint32
	var x632 uint32
	x632, x631 = bits.Mul32(x620, arg2[0])
	var x633 uint32
	_, x633 = bits.Mul32(x620, arg2[3])
	var x635 uint32
	var x636 uint32
	x636, x635 = bits.Mul32(x620, arg2[2])
	var x637 uint32
	var x638 uint32
	x638, x637 = bits.Mul32(x620, arg2[1])
	var x639 uint32
	var x640 uint32
	x640, x639 = bits.Mul32(x620, arg2[0])
	var x641 uint32
	_, x641 = bits.Mul32(x620, arg2[4])
	var x643 uint32
	var x644 uint32
	x644, x643 = bits.Mul32(x620, arg2[3])
	var x645 uint32
	var x646 uint32
	x646, x645 = bits.Mul32(x620, arg2[2])
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x620, arg2[1])
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x620, arg2[0])
	var x651 uint32
	_, x651 = bits.Mul32(x620, arg2[5])
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x620, arg2[4])
	var x655 uint32
	var x656 uint32
	x656, x655 = bits.Mul32(x620, arg2[3])
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32(x620, arg2[2])
	var x659 uint32
	var x660 uint32
	x660, x659 = bits.Mul32(x620, arg2[1])
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x620, arg2[0])
	var x663 uint32
	_, x663 = bits.Mul32(x620, arg2[6])
	var x665 uint32
	var x666 uint32
	x666, x665 = bits.Mul32(x620, arg2[5])
	var x667 uint32
	var x668 uint32
	x668, x667 = bits.Mul32(x620, arg2[4])
	var x669 uint32
	var x670 uint32
	x670, x669 = bits.Mul32(x620, arg2[3])
	var x671 uint32
	var x672 uint32
	x672, x671 = bits.Mul32(x620, arg2[2])
	var x673 uint32
	var x674 uint32
	x674, x673 = bits.Mul32(x620, arg2[1])
	var x675 uint32
	var x676 uint32
	x676, x675 = bits.Mul32(x620, arg2[0])
	var x677 uint32
	_, x677 = bits.Mul32(x620, arg2[7])
	var x679 uint32
	var x680 uint32
	x680, x679 = bits.Mul32(x620, arg2[6])
	var x681 uint32
	var x682 uint32
	x682, x681 = bits.Mul32(x620, arg2[5])
	var x683 uint32
	var x684 uint32
	x684, x683 = bits.Mul32(x620, arg2[4])
	var x685 uint32
	var x686 uint32
	x686, x685 = bits.Mul32(x620, arg2[3])
	var x687 uint32
	var x688 uint32
	x688, x687 = bits.Mul32(x620, arg2[2])
	var x689 uint32
	var x690 uint32
	x690, x689 = bits.Mul32(x620, arg2[1])
	var x691 uint32
	var x692 uint32
	x692, x691 = bits.Mul32(x620, arg2[0])
	var x693 uint32
	_, x693 = bits.Mul32(x620, arg2[8])
	var x695 uint32
	var x696 uint32
	x696, x695 = bits.Mul32(x620, arg2[7])
	var x697 uint32
	var x698 uint32
	x698, x697 = bits.Mul32(x620, arg2[6])
	var x699 uint32
	var x700 uint32
	x700, x699 = bits.Mul32(x620, arg2[5])
	var x701 uint32
	var x702 uint32
	x702, x701 = bits.Mul32(x620, arg2[4])
	var x703 uint32
	var x704 uint32
	x704, x703 = bits.Mul32(x620, arg2[3])
	var x705 uint32
	var x706 uint32
	x706, x705 = bits.Mul32(x620, arg2[2])
	var x707 uint32
	var x708 uint32
	x708, x707 = bits.Mul32(x620, arg2[1])
	var x709 uint32
	var x710 uint32
	x710, x709 = bits.Mul32(x620, arg2[0])
	var x711 uint32
	_, x711 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), x619)
	var x713 uint32
	var x714 uint32
	x714, x713 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[8])
	var x715 uint32
	var x716 uint32
	x716, x715 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[7])
	var x717 uint32
	var x718 uint32
	x718, x717 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[6])
	var x719 uint32
	var x720 uint32
	x720, x719 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[5])
	var x721 uint32
	var x722 uint32
	x722, x721 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[4])
	var x723 uint32
	var x724 uint32
	x724, x723 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[3])
	var x725 uint32
	var x726 uint32
	x726, x725 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[2])
	var x727 uint32
	var x728 uint32
	x728, x727 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[1])
	var x729 uint32
	var x730 uint32
	x730, x729 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[0])
	var x731 uint32
	x731, _ = bits.Add32(x714, x621, uint32(0x0))
	var x733 uint32
	x733, _ = bits.Add32(x731, x623, uint32(0x0))
	var x735 uint32
	var x736 uint32
	x735, x736 = bits.Add32(x716, x625, uint32(0x0))
	var x737 uint32
	x737, _ = bits.Add32(x733, x626, uint32(uint1(x736)))
	var x739 uint32
	var x740 uint32
	x739, x740 = bits.Add32(x735, x629, uint32(0x0))
	var x741 uint32
	x741, _ = bits.Add32(x737, x627, uint32(uint1(x740)))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x718, x631, uint32(0x0))
	var x745 uint32
	var x746 uint32
	x745, x746 = bits.Add32(x739, x632, uint32(uint1(x744)))
	var x747 uint32
	x747, _ = bits.Add32(x741, x630, uint32(uint1(x746)))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x743, x637, uint32(0x0))
	var x751 uint32
	var x752 uint32
	x751, x752 = bits.Add32(x745, x635, uint32(uint1(x750)))
	var x753 uint32
	x753, _ = bits.Add32(x747, x633, uint32(uint1(x752)))
	var x755 uint32
	var x756 uint32
	x755, x756 = bits.Add32(x720, x639, uint32(0x0))
	var x757 uint32
	var x758 uint32
	x757, x758 = bits.Add32(x749, x640, uint32(uint1(x756)))
	var x759 uint32
	var x760 uint32
	x759, x760 = bits.Add32(x751, x638, uint32(uint1(x758)))
	var x761 uint32
	x761, _ = bits.Add32(x753, x636, uint32(uint1(x760)))
	var x763 uint32
	var x764 uint32
	x763, x764 = bits.Add32(x755, x647, uint32(0x0))
	var x765 uint32
	var x766 uint32
	x765, x766 = bits.Add32(x757, x645, uint32(uint1(x764)))
	var x767 uint32
	var x768 uint32
	x767, x768 = bits.Add32(x759, x643, uint32(uint1(x766)))
	var x769 uint32
	x769, _ = bits.Add32(x761, x641, uint32(uint1(x768)))
	var x771 uint32
	var x772 uint32
	x771, x772 = bits.Add32(x722, x649, uint32(0x0))
	var x773 uint32
	var x774 uint32
	x773, x774 = bits.Add32(x763, x650, uint32(uint1(x772)))
	var x775 uint32
	var x776 uint32
	x775, x776 = bits.Add32(x765, x648, uint32(uint1(x774)))
	var x777 uint32
	var x778 uint32
	x777, x778 = bits.Add32(x767, x646, uint32(uint1(x776)))
	var x779 uint32
	x779, _ = bits.Add32(x769, x644, uint32(uint1(x778)))
	var x781 uint32
	var x782 uint32
	x781, x782 = bits.Add32(x771, x659, uint32(0x0))
	var x783 uint32
	var x784 uint32
	x783, x784 = bits.Add32(x773, x657, uint32(uint1(x782)))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x775, x655, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x777, x653, uint32(uint1(x786)))
	var x789 uint32
	x789, _ = bits.Add32(x779, x651, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x724, x661, uint32(0x0))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x781, x662, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x783, x660, uint32(uint1(x794)))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x785, x658, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(x787, x656, uint32(uint1(x798)))
	var x801 uint32
	x801, _ = bits.Add32(x789, x654, uint32(uint1(x800)))
	var x803 uint32
	var x804 uint32
	x803, x804 = bits.Add32(x791, x673, uint32(0x0))
	var x805 uint32
	var x806 uint32
	x805, x806 = bits.Add32(x793, x671, uint32(uint1(x804)))
	var x807 uint32
	var x808 uint32
	x807, x808 = bits.Add32(x795, x669, uint32(uint1(x806)))
	var x809 uint32
	var x810 uint32
	x809, x810 = bits.Add32(x797, x667, uint32(uint1(x808)))
	var x811 uint32
	var x812 uint32
	x811, x812 = bits.Add32(x799, x665, uint32(uint1(x810)))
	var x813 uint32
	x813, _ = bits.Add32(x801, x663, uint32(uint1(x812)))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x726, x675, uint32(0x0))
	var x817 uint32
	var x818 uint32
	x817, x818 = bits.Add32(x803, x676, uint32(uint1(x816)))
	var x819 uint32
	var x820 uint32
	x819, x820 = bits.Add32(x805, x674, uint32(uint1(x818)))
	var x821 uint32
	var x822 uint32
	x821, x822 = bits.Add32(x807, x672, uint32(uint1(x820)))
	var x823 uint32
	var x824 uint32
	x823, x824 = bits.Add32(x809, x670, uint32(uint1(x822)))
	var x825 uint32
	var x826 uint32
	x825, x826 = bits.Add32(x811, x668, uint32(uint1(x824)))
	var x827 uint32
	x827, _ = bits.Add32(x813, x666, uint32(uint1(x826)))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x815, x689, uint32(0x0))
	var x831 uint32
	var x832 uint32
	x831, x832 = bits.Add32(x817, x687, uint32(uint1(x830)))
	var x833 uint32
	var x834 uint32
	x833, x834 = bits.Add32(x819, x685, uint32(uint1(x832)))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x821, x683, uint32(uint1(x834)))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x823, x681, uint32(uint1(x836)))
	var x839 uint32
	var x840 uint32
	x839, x840 = bits.Add32(x825, x679, uint32(uint1(x838)))
	var x841 uint32
	x841, _ = bits.Add32(x827, x677, uint32(uint1(x840)))
	var x843 uint32
	var x844 uint32
	x843, x844 = bits.Add32(x728, x691, uint32(0x0))
	var x845 uint32
	var x846 uint32
	x845, x846 = bits.Add32(x829, x692, uint32(uint1(x844)))
	var x847 uint32
	var x848 uint32
	x847, x848 = bits.Add32(x831, x690, uint32(uint1(x846)))
	var x849 uint32
	var x850 uint32
	x849, x850 = bits.Add32(x833, x688, uint32(uint1(x848)))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x835, x686, uint32(uint1(x850)))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x837, x684, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x839, x682, uint32(uint1(x854)))
	var x857 uint32
	x857, _ = bits.Add32(x841, x680, uint32(uint1(x856)))
	var x859 uint32
	var x860 uint32
	x859, x860 = bits.Add32(x843, x707, uint32(0x0))
	var x861 uint32
	var x862 uint32
	x861, x862 = bits.Add32(x845, x705, uint32(uint1(x860)))
	var x863 uint32
	var x864 uint32
	x863, x864 = bits.Add32(x847, x703, uint32(uint1(x862)))
	var x865 uint32
	var x866 uint32
	x865, x866 = bits.Add32(x849, x701, uint32(uint1(x864)))
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x851, x699, uint32(uint1(x866)))
	var x869 uint32
	var x870 uint32
	x869, x870 = bits.Add32(x853, x697, uint32(uint1(x868)))
	var x871 uint32
	var x872 uint32
	x871, x872 = bits.Add32(x855, x695, uint32(uint1(x870)))
	var x873 uint32
	x873, _ = bits.Add32(x857, x693, uint32(uint1(x872)))
	var x875 uint32
	var x876 uint32
	x875, x876 = bits.Add32(x730, x709, uint32(0x0))
	var x877 uint32
	var x878 uint32
	x877, x878 = bits.Add32(x859, x710, uint32(uint1(x876)))
	var x879 uint32
	var x880 uint32
	x879, x880 = bits.Add32(x861, x708, uint32(uint1(x878)))
	var x881 uint32
	var x882 uint32
	x881, x882 = bits.Add32(x863, x706, uint32(uint1(x880)))
	var x883 uint32
	var x884 uint32
	x883, x884 = bits.Add32(x865, x704, uint32(uint1(x882)))
	var x885 uint32
	var x886 uint32
	x885, x886 = bits.Add32(x867, x702, uint32(uint1(x884)))
	var x887 uint32
	var x888 uint32
	x887, x888 = bits.Add32(x869, x700, uint32(uint1(x886)))
	var x889 uint32
	var x890 uint32
	x889, x890 = bits.Add32(x871, x698, uint32(uint1(x888)))
	var x891 uint32
	x891, _ = bits.Add32(x873, x696, uint32(uint1(x890)))
	var x893 uint32
	var x894 uint32
	x893, x894 = bits.Add32(x875, x727, uint32(0x0))
	var x895 uint32
	var x896 uint32
	x895, x896 = bits.Add32(x877, x725, uint32(uint1(x894)))
	var x897 uint32
	var x898 uint32
	x897, x898 = bits.Add32(x879, x723, uint32(uint1(x896)))
	var x899 uint32
	var x900 uint32
	x899, x900 = bits.Add32(x881, x721, uint32(uint1(x898)))
	var x901 uint32
	var x902 uint32
	x901, x902 = bits.Add32(x883, x719, uint32(uint1(x900)))
	var x903 uint32
	var x904 uint32
	x903, x904 = bits.Add32(x885, x717, uint32(uint1(x902)))
	var x905 uint32
	var x906 uint32
	x905, x906 = bits.Add32(x887, x715, uint32(uint1(x904)))
	var x907 uint32
	var x908 uint32
	x907, x908 = bits.Add32(x889, x713, uint32(uint1(x906)))
	var x909 uint32
	x909, _ = bits.Add32(x891, x711, uint32(uint1(x908)))
	var x911 uint32
	cmovznzU32(&x911, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x912 uint32
	cmovznzU32(&x912, uint1(((uint32((uint64(x323) + uint64(x325))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x913 uint32
	_, x913 = bits.Mul32(x912, arg1[0])
	var x915 uint32
	_, x915 = bits.Mul32(x912, arg1[1])
	var x917 uint32
	var x918 uint32
	x918, x917 = bits.Mul32(x912, arg1[0])
	var x919 uint32
	_, x919 = bits.Mul32(x912, arg1[2])
	var x921 uint32
	var x922 uint32
	x922, x921 = bits.Mul32(x912, arg1[1])
	var x923 uint32
	var x924 uint32
	x924, x923 = bits.Mul32(x912, arg1[0])
	var x925 uint32
	_, x925 = bits.Mul32(x912, arg1[3])
	var x927 uint32
	var x928 uint32
	x928, x927 = bits.Mul32(x912, arg1[2])
	var x929 uint32
	var x930 uint32
	x930, x929 = bits.Mul32(x912, arg1[1])
	var x931 uint32
	var x932 uint32
	x932, x931 = bits.Mul32(x912, arg1[0])
	var x933 uint32
	_, x933 = bits.Mul32(x912, arg1[4])
	var x935 uint32
	var x936 uint32
	x936, x935 = bits.Mul32(x912, arg1[3])
	var x937 uint32
	var x938 uint32
	x938, x937 = bits.Mul32(x912, arg1[2])
	var x939 uint32
	var x940 uint32
	x940, x939 = bits.Mul32(x912, arg1[1])
	var x941 uint32
	var x942 uint32
	x942, x941 = bits.Mul32(x912, arg1[0])
	var x943 uint32
	_, x943 = bits.Mul32(x912, arg1[5])
	var x945 uint32
	var x946 uint32
	x946, x945 = bits.Mul32(x912, arg1[4])
	var x947 uint32
	var x948 uint32
	x948, x947 = bits.Mul32(x912, arg1[3])
	var x949 uint32
	var x950 uint32
	x950, x949 = bits.Mul32(x912, arg1[2])
	var x951 uint32
	var x952 uint32
	x952, x951 = bits.Mul32(x912, arg1[1])
	var x953 uint32
	var x954 uint32
	x954, x953 = bits.Mul32(x912, arg1[0])
	var x955 uint32
	_, x955 = bits.Mul32(x912, arg1[6])
	var x957 uint32
	var x958 uint32
	x958, x957 = bits.Mul32(x912, arg1[5])
	var x959 uint32
	var x960 uint32
	x960, x959 = bits.Mul32(x912, arg1[4])
	var x961 uint32
	var x962 uint32
	x962, x961 = bits.Mul32(x912, arg1[3])
	var x963 uint32
	var x964 uint32
	x964, x963 = bits.Mul32(x912, arg1[2])
	var x965 uint32
	var x966 uint32
	x966, x965 = bits.Mul32(x912, arg1[1])
	var x967 uint32
	var x968 uint32
	x968, x967 = bits.Mul32(x912, arg1[0])
	var x969 uint32
	_, x969 = bits.Mul32(x912, arg1[7])
	var x971 uint32
	var x972 uint32
	x972, x971 = bits.Mul32(x912, arg1[6])
	var x973 uint32
	var x974 uint32
	x974, x973 = bits.Mul32(x912, arg1[5])
	var x975 uint32
	var x976 uint32
	x976, x975 = bits.Mul32(x912, arg1[4])
	var x977 uint32
	var x978 uint32
	x978, x977 = bits.Mul32(x912, arg1[3])
	var x979 uint32
	var x980 uint32
	x980, x979 = bits.Mul32(x912, arg1[2])
	var x981 uint32
	var x982 uint32
	x982, x981 = bits.Mul32(x912, arg1[1])
	var x983 uint32
	var x984 uint32
	x984, x983 = bits.Mul32(x912, arg1[0])
	var x985 uint32
	_, x985 = bits.Mul32(x912, arg1[8])
	var x987 uint32
	var x988 uint32
	x988, x987 = bits.Mul32(x912, arg1[7])
	var x989 uint32
	var x990 uint32
	x990, x989 = bits.Mul32(x912, arg1[6])
	var x991 uint32
	var x992 uint32
	x992, x991 = bits.Mul32(x912, arg1[5])
	var x993 uint32
	var x994 uint32
	x994, x993 = bits.Mul32(x912, arg1[4])
	var x995 uint32
	var x996 uint32
	x996, x995 = bits.Mul32(x912, arg1[3])
	var x997 uint32
	var x998 uint32
	x998, x997 = bits.Mul32(x912, arg1[2])
	var x999 uint32
	var x1000 uint32
	x1000, x999 = bits.Mul32(x912, arg1[1])
	var x1001 uint32
	var x1002 uint32
	x1002, x1001 = bits.Mul32(x912, arg1[0])
	var x1003 uint32
	_, x1003 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), x911)
	var x1005 uint32
	var x1006 uint32
	x1006, x1005 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[8])
	var x1007 uint32
	var x1008 uint32
	x1008, x1007 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[7])
	var x1009 uint32
	var x1010 uint32
	x1010, x1009 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[6])
	var x1011 uint32
	var x1012 uint32
	x1012, x1011 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[5])
	var x1013 uint32
	var x1014 uint32
	x1014, x1013 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[4])
	var x1015 uint32
	var x1016 uint32
	x1016, x1015 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[3])
	var x1017 uint32
	var x1018 uint32
	x1018, x1017 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[2])
	var x1019 uint32
	var x1020 uint32
	x1020, x1019 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[1])
	var x1021 uint32
	var x1022 uint32
	x1022, x1021 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[0])
	var x1023 uint32
	x1023, _ = bits.Add32(x1006, x913, uint32(0x0))
	var x1025 uint32
	x1025, _ = bits.Add32(x1023, x915, uint32(0x0))
	var x1027 uint32
	var x1028 uint32
	x1027, x1028 = bits.Add32(x1008, x917, uint32(0x0))
	var x1029 uint32
	x1029, _ = bits.Add32(x1025, x918, uint32(uint1(x1028)))
	var x1031 uint32
	var x1032 uint32
	x1031, x1032 = bits.Add32(x1027, x921, uint32(0x0))
	var x1033 uint32
	x1033, _ = bits.Add32(x1029, x919, uint32(uint1(x1032)))
	var x1035 uint32
	var x1036 uint32
	x1035, x1036 = bits.Add32(x1010, x923, uint32(0x0))
	var x1037 uint32
	var x1038 uint32
	x1037, x1038 = bits.Add32(x1031, x924, uint32(uint1(x1036)))
	var x1039 uint32
	x1039, _ = bits.Add32(x1033, x922, uint32(uint1(x1038)))
	var x1041 uint32
	var x1042 uint32
	x1041, x1042 = bits.Add32(x1035, x929, uint32(0x0))
	var x1043 uint32
	var x1044 uint32
	x1043, x1044 = bits.Add32(x1037, x927, uint32(uint1(x1042)))
	var x1045 uint32
	x1045, _ = bits.Add32(x1039, x925, uint32(uint1(x1044)))
	var x1047 uint32
	var x1048 uint32
	x1047, x1048 = bits.Add32(x1012, x931, uint32(0x0))
	var x1049 uint32
	var x1050 uint32
	x1049, x1050 = bits.Add32(x1041, x932, uint32(uint1(x1048)))
	var x1051 uint32
	var x1052 uint32
	x1051, x1052 = bits.Add32(x1043, x930, uint32(uint1(x1050)))
	var x1053 uint32
	x1053, _ = bits.Add32(x1045, x928, uint32(uint1(x1052)))
	var x1055 uint32
	var x1056 uint32
	x1055, x1056 = bits.Add32(x1047, x939, uint32(0x0))
	var x1057 uint32
	var x1058 uint32
	x1057, x1058 = bits.Add32(x1049, x937, uint32(uint1(x1056)))
	var x1059 uint32
	var x1060 uint32
	x1059, x1060 = bits.Add32(x1051, x935, uint32(uint1(x1058)))
	var x1061 uint32
	x1061, _ = bits.Add32(x1053, x933, uint32(uint1(x1060)))
	var x1063 uint32
	var x1064 uint32
	x1063, x1064 = bits.Add32(x1014, x941, uint32(0x0))
	var x1065 uint32
	var x1066 uint32
	x1065, x1066 = bits.Add32(x1055, x942, uint32(uint1(x1064)))
	var x1067 uint32
	var x1068 uint32
	x1067, x1068 = bits.Add32(x1057, x940, uint32(uint1(x1066)))
	var x1069 uint32
	var x1070 uint32
	x1069, x1070 = bits.Add32(x1059, x938, uint32(uint1(x1068)))
	var x1071 uint32
	x1071, _ = bits.Add32(x1061, x936, uint32(uint1(x1070)))
	var x1073 uint32
	var x1074 uint32
	x1073, x1074 = bits.Add32(x1063, x951, uint32(0x0))
	var x1075 uint32
	var x1076 uint32
	x1075, x1076 = bits.Add32(x1065, x949, uint32(uint1(x1074)))
	var x1077 uint32
	var x1078 uint32
	x1077, x1078 = bits.Add32(x1067, x947, uint32(uint1(x1076)))
	var x1079 uint32
	var x1080 uint32
	x1079, x1080 = bits.Add32(x1069, x945, uint32(uint1(x1078)))
	var x1081 uint32
	x1081, _ = bits.Add32(x1071, x943, uint32(uint1(x1080)))
	var x1083 uint32
	var x1084 uint32
	x1083, x1084 = bits.Add32(x1016, x953, uint32(0x0))
	var x1085 uint32
	var x1086 uint32
	x1085, x1086 = bits.Add32(x1073, x954, uint32(uint1(x1084)))
	var x1087 uint32
	var x1088 uint32
	x1087, x1088 = bits.Add32(x1075, x952, uint32(uint1(x1086)))
	var x1089 uint32
	var x1090 uint32
	x1089, x1090 = bits.Add32(x1077, x950, uint32(uint1(x1088)))
	var x1091 uint32
	var x1092 uint32
	x1091, x1092 = bits.Add32(x1079, x948, uint32(uint1(x1090)))
	var x1093 uint32
	x1093, _ = bits.Add32(x1081, x946, uint32(uint1(x1092)))
	var x1095 uint32
	var x1096 uint32
	x1095, x1096 = bits.Add32(x1083, x965, uint32(0x0))
	var x1097 uint32
	var x1098 uint32
	x1097, x1098 = bits.Add32(x1085, x963, uint32(uint1(x1096)))
	var x1099 uint32
	var x1100 uint32
	x1099, x1100 = bits.Add32(x1087, x961, uint32(uint1(x1098)))
	var x1101 uint32
	var x1102 uint32
	x1101, x1102 = bits.Add32(x1089, x959, uint32(uint1(x1100)))
	var x1103 uint32
	var x1104 uint32
	x1103, x1104 = bits.Add32(x1091, x957, uint32(uint1(x1102)))
	var x1105 uint32
	x1105, _ = bits.Add32(x1093, x955, uint32(uint1(x1104)))
	var x1107 uint32
	var x1108 uint32
	x1107, x1108 = bits.Add32(x1018, x967, uint32(0x0))
	var x1109 uint32
	var x1110 uint32
	x1109, x1110 = bits.Add32(x1095, x968, uint32(uint1(x1108)))
	var x1111 uint32
	var x1112 uint32
	x1111, x1112 = bits.Add32(x1097, x966, uint32(uint1(x1110)))
	var x1113 uint32
	var x1114 uint32
	x1113, x1114 = bits.Add32(x1099, x964, uint32(uint1(x1112)))
	var x1115 uint32
	var x1116 uint32
	x1115, x1116 = bits.Add32(x1101, x962, uint32(uint1(x1114)))
	var x1117 uint32
	var x1118 uint32
	x1117, x1118 = bits.Add32(x1103, x960, uint32(uint1(x1116)))
	var x1119 uint32
	x1119, _ = bits.Add32(x1105, x958, uint32(uint1(x1118)))
	var x1121 uint32
	var x1122 uint32
	x1121, x1122 = bits.Add32(x1107, x981, uint32(0x0))
	var x1123 uint32
	var x1124 uint32
	x1123, x1124 = bits.Add32(x1109, x979, uint32(uint1(x1122)))
	var x1125 uint32
	var x1126 uint32
	x1125, x1126 = bits.Add32(x1111, x977, uint32(uint1(x1124)))
	var x1127 uint32
	var x1128 uint32
	x1127, x1128 = bits.Add32(x1113, x975, uint32(uint1(x1126)))
	var x1129 uint32
	var x1130 uint32
	x1129, x1130 = bits.Add32(x1115, x973, uint32(uint1(x1128)))
	var x1131 uint32
	var x1132 uint32
	x1131, x1132 = bits.Add32(x1117, x971, uint32(uint1(x1130)))
	var x1133 uint32
	x1133, _ = bits.Add32(x1119, x969, uint32(uint1(x1132)))
	var x1135 uint32
	var x1136 uint32
	x1135, x1136 = bits.Add32(x1020, x983, uint32(0x0))
	var x1137 uint32
	var x1138 uint32
	x1137, x1138 = bits.Add32(x1121, x984, uint32(uint1(x1136)))
	var x1139 uint32
	var x1140 uint32
	x1139, x1140 = bits.Add32(x1123, x982, uint32(uint1(x1138)))
	var x1141 uint32
	var x1142 uint32
	x1141, x1142 = bits.Add32(x1125, x980, uint32(uint1(x1140)))
	var x1143 uint32
	var x1144 uint32
	x1143, x1144 = bits.Add32(x1127, x978, uint32(uint1(x1142)))
	var x1145 uint32
	var x1146 uint32
	x1145, x1146 = bits.Add32(x1129, x976, uint32(uint1(x1144)))
	var x1147 uint32
	var x1148 uint32
	x1147, x1148 = bits.Add32(x1131, x974, uint32(uint1(x1146)))
	var x1149 uint32
	x1149, _ = bits.Add32(x1133, x972, uint32(uint1(x1148)))
	var x1151 uint32
	var x1152 uint32
	x1151, x1152 = bits.Add32(x1135, x999, uint32(0x0))
	var x1153 uint32
	var x1154 uint32
	x1153, x1154 = bits.Add32(x1137, x997, uint32(uint1(x1152)))
	var x1155 uint32
	var x1156 uint32
	x1155, x1156 = bits.Add32(x1139, x995, uint32(uint1(x1154)))
	var x1157 uint32
	var x1158 uint32
	x1157, x1158 = bits.Add32(x1141, x993, uint32(uint1(x1156)))
	var x1159 uint32
	var x1160 uint32
	x1159, x1160 = bits.Add32(x1143, x991, uint32(uint1(x1158)))
	var x1161 uint32
	var x1162 uint32
	x1161, x1162 = bits.Add32(x1145, x989, uint32(uint1(x1160)))
	var x1163 uint32
	var x1164 uint32
	x1163, x1164 = bits.Add32(x1147, x987, uint32(uint1(x1162)))
	var x1165 uint32
	x1165, _ = bits.Add32(x1149, x985, uint32(uint1(x1164)))
	var x1167 uint32
	var x1168 uint32
	x1167, x1168 = bits.Add32(x1022, x1001, uint32(0x0))
	var x1169 uint32
	var x1170 uint32
	x1169, x1170 = bits.Add32(x1151, x1002, uint32(uint1(x1168)))
	var x1171 uint32
	var x1172 uint32
	x1171, x1172 = bits.Add32(x1153, x1000, uint32(uint1(x1170)))
	var x1173 uint32
	var x1174 uint32
	x1173, x1174 = bits.Add32(x1155, x998, uint32(uint1(x1172)))
	var x1175 uint32
	var x1176 uint32
	x1175, x1176 = bits.Add32(x1157, x996, uint32(uint1(x1174)))
	var x1177 uint32
	var x1178 uint32
	x1177, x1178 = bits.Add32(x1159, x994, uint32(uint1(x1176)))
	var x1179 uint32
	var x1180 uint32
	x1179, x1180 = bits.Add32(x1161, x992, uint32(uint1(x1178)))
	var x1181 uint32
	var x1182 uint32
	x1181, x1182 = bits.Add32(x1163, x990, uint32(uint1(x1180)))
	var x1183 uint32
	x1183, _ = bits.Add32(x1165, x988, uint32(uint1(x1182)))
	var x1185 uint32
	var x1186 uint32
	x1185, x1186 = bits.Add32(x1167, x1019, uint32(0x0))
	var x1187 uint32
	var x1188 uint32
	x1187, x1188 = bits.Add32(x1169, x1017, uint32(uint1(x1186)))
	var x1189 uint32
	var x1190 uint32
	x1189, x1190 = bits.Add32(x1171, x1015, uint32(uint1(x1188)))
	var x1191 uint32
	var x1192 uint32
	x1191, x1192 = bits.Add32(x1173, x1013, uint32(uint1(x1190)))
	var x1193 uint32
	var x1194 uint32
	x1193, x1194 = bits.Add32(x1175, x1011, uint32(uint1(x1192)))
	var x1195 uint32
	var x1196 uint32
	x1195, x1196 = bits.Add32(x1177, x1009, uint32(uint1(x1194)))
	var x1197 uint32
	var x1198 uint32
	x1197, x1198 = bits.Add32(x1179, x1007, uint32(uint1(x1196)))
	var x1199 uint32
	var x1200 uint32
	x1199, x1200 = bits.Add32(x1181, x1005, uint32(uint1(x1198)))
	var x1201 uint32
	x1201, _ = bits.Add32(x1183, x1003, uint32(uint1(x1200)))
	var x1203 uint32
	cmovznzU32(&x1203, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x1204 uint32
	cmovznzU32(&x1204, uint1(((uint32((uint64(x324) + uint64(x326))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x1205 uint32
	_, x1205 = bits.Mul32(x1204, arg2[0])
	var x1207 uint32
	_, x1207 = bits.Mul32(x1204, arg2[1])
	var x1209 uint32
	var x1210 uint32
	x1210, x1209 = bits.Mul32(x1204, arg2[0])
	var x1211 uint32
	_, x1211 = bits.Mul32(x1204, arg2[2])
	var x1213 uint32
	var x1214 uint32
	x1214, x1213 = bits.Mul32(x1204, arg2[1])
	var x1215 uint32
	var x1216 uint32
	x1216, x1215 = bits.Mul32(x1204, arg2[0])
	var x1217 uint32
	_, x1217 = bits.Mul32(x1204, arg2[3])
	var x1219 uint32
	var x1220 uint32
	x1220, x1219 = bits.Mul32(x1204, arg2[2])
	var x1221 uint32
	var x1222 uint32
	x1222, x1221 = bits.Mul32(x1204, arg2[1])
	var x1223 uint32
	var x1224 uint32
	x1224, x1223 = bits.Mul32(x1204, arg2[0])
	var x1225 uint32
	_, x1225 = bits.Mul32(x1204, arg2[4])
	var x1227 uint32
	var x1228 uint32
	x1228, x1227 = bits.Mul32(x1204, arg2[3])
	var x1229 uint32
	var x1230 uint32
	x1230, x1229 = bits.Mul32(x1204, arg2[2])
	var x1231 uint32
	var x1232 uint32
	x1232, x1231 = bits.Mul32(x1204, arg2[1])
	var x1233 uint32
	var x1234 uint32
	x1234, x1233 = bits.Mul32(x1204, arg2[0])
	var x1235 uint32
	_, x1235 = bits.Mul32(x1204, arg2[5])
	var x1237 uint32
	var x1238 uint32
	x1238, x1237 = bits.Mul32(x1204, arg2[4])
	var x1239 uint32
	var x1240 uint32
	x1240, x1239 = bits.Mul32(x1204, arg2[3])
	var x1241 uint32
	var x1242 uint32
	x1242, x1241 = bits.Mul32(x1204, arg2[2])
	var x1243 uint32
	var x1244 uint32
	x1244, x1243 = bits.Mul32(x1204, arg2[1])
	var x1245 uint32
	var x1246 uint32
	x1246, x1245 = bits.Mul32(x1204, arg2[0])
	var x1247 uint32
	_, x1247 = bits.Mul32(x1204, arg2[6])
	var x1249 uint32
	var x1250 uint32
	x1250, x1249 = bits.Mul32(x1204, arg2[5])
	var x1251 uint32
	var x1252 uint32
	x1252, x1251 = bits.Mul32(x1204, arg2[4])
	var x1253 uint32
	var x1254 uint32
	x1254, x1253 = bits.Mul32(x1204, arg2[3])
	var x1255 uint32
	var x1256 uint32
	x1256, x1255 = bits.Mul32(x1204, arg2[2])
	var x1257 uint32
	var x1258 uint32
	x1258, x1257 = bits.Mul32(x1204, arg2[1])
	var x1259 uint32
	var x1260 uint32
	x1260, x1259 = bits.Mul32(x1204, arg2[0])
	var x1261 uint32
	_, x1261 = bits.Mul32(x1204, arg2[7])
	var x1263 uint32
	var x1264 uint32
	x1264, x1263 = bits.Mul32(x1204, arg2[6])
	var x1265 uint32
	var x1266 uint32
	x1266, x1265 = bits.Mul32(x1204, arg2[5])
	var x1267 uint32
	var x1268 uint32
	x1268, x1267 = bits.Mul32(x1204, arg2[4])
	var x1269 uint32
	var x1270 uint32
	x1270, x1269 = bits.Mul32(x1204, arg2[3])
	var x1271 uint32
	var x1272 uint32
	x1272, x1271 = bits.Mul32(x1204, arg2[2])
	var x1273 uint32
	var x1274 uint32
	x1274, x1273 = bits.Mul32(x1204, arg2[1])
	var x1275 uint32
	var x1276 uint32
	x1276, x1275 = bits.Mul32(x1204, arg2[0])
	var x1277 uint32
	_, x1277 = bits.Mul32(x1204, arg2[8])
	var x1279 uint32
	var x1280 uint32
	x1280, x1279 = bits.Mul32(x1204, arg2[7])
	var x1281 uint32
	var x1282 uint32
	x1282, x1281 = bits.Mul32(x1204, arg2[6])
	var x1283 uint32
	var x1284 uint32
	x1284, x1283 = bits.Mul32(x1204, arg2[5])
	var x1285 uint32
	var x1286 uint32
	x1286, x1285 = bits.Mul32(x1204, arg2[4])
	var x1287 uint32
	var x1288 uint32
	x1288, x1287 = bits.Mul32(x1204, arg2[3])
	var x1289 uint32
	var x1290 uint32
	x1290, x1289 = bits.Mul32(x1204, arg2[2])
	var x1291 uint32
	var x1292 uint32
	x1292, x1291 = bits.Mul32(x1204, arg2[1])
	var x1293 uint32
	var x1294 uint32
	x1294, x1293 = bits.Mul32(x1204, arg2[0])
	var x1295 uint32
	_, x1295 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), x1203)
	var x1297 uint32
	var x1298 uint32
	x1298, x1297 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[8])
	var x1299 uint32
	var x1300 uint32
	x1300, x1299 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[7])
	var x1301 uint32
	var x1302 uint32
	x1302, x1301 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[6])
	var x1303 uint32
	var x1304 uint32
	x1304, x1303 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[5])
	var x1305 uint32
	var x1306 uint32
	x1306, x1305 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[4])
	var x1307 uint32
	var x1308 uint32
	x1308, x1307 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[3])
	var x1309 uint32
	var x1310 uint32
	x1310, x1309 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[2])
	var x1311 uint32
	var x1312 uint32
	x1312, x1311 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[1])
	var x1313 uint32
	var x1314 uint32
	x1314, x1313 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[0])
	var x1315 uint32
	x1315, _ = bits.Add32(x1298, x1205, uint32(0x0))
	var x1317 uint32
	x1317, _ = bits.Add32(x1315, x1207, uint32(0x0))
	var x1319 uint32
	var x1320 uint32
	x1319, x1320 = bits.Add32(x1300, x1209, uint32(0x0))
	var x1321 uint32
	x1321, _ = bits.Add32(x1317, x1210, uint32(uint1(x1320)))
	var x1323 uint32
	var x1324 uint32
	x1323, x1324 = bits.Add32(x1319, x1213, uint32(0x0))
	var x1325 uint32
	x1325, _ = bits.Add32(x1321, x1211, uint32(uint1(x1324)))
	var x1327 uint32
	var x1328 uint32
	x1327, x1328 = bits.Add32(x1302, x1215, uint32(0x0))
	var x1329 uint32
	var x1330 uint32
	x1329, x1330 = bits.Add32(x1323, x1216, uint32(uint1(x1328)))
	var x1331 uint32
	x1331, _ = bits.Add32(x1325, x1214, uint32(uint1(x1330)))
	var x1333 uint32
	var x1334 uint32
	x1333, x1334 = bits.Add32(x1327, x1221, uint32(0x0))
	var x1335 uint32
	var x1336 uint32
	x1335, x1336 = bits.Add32(x1329, x1219, uint32(uint1(x1334)))
	var x1337 uint32
	x1337, _ = bits.Add32(x1331, x1217, uint32(uint1(x1336)))
	var x1339 uint32
	var x1340 uint32
	x1339, x1340 = bits.Add32(x1304, x1223, uint32(0x0))
	var x1341 uint32
	var x1342 uint32
	x1341, x1342 = bits.Add32(x1333, x1224, uint32(uint1(x1340)))
	var x1343 uint32
	var x1344 uint32
	x1343, x1344 = bits.Add32(x1335, x1222, uint32(uint1(x1342)))
	var x1345 uint32
	x1345, _ = bits.Add32(x1337, x1220, uint32(uint1(x1344)))
	var x1347 uint32
	var x1348 uint32
	x1347, x1348 = bits.Add32(x1339, x1231, uint32(0x0))
	var x1349 uint32
	var x1350 uint32
	x1349, x1350 = bits.Add32(x1341, x1229, uint32(uint1(x1348)))
	var x1351 uint32
	var x1352 uint32
	x1351, x1352 = bits.Add32(x1343, x1227, uint32(uint1(x1350)))
	var x1353 uint32
	x1353, _ = bits.Add32(x1345, x1225, uint32(uint1(x1352)))
	var x1355 uint32
	var x1356 uint32
	x1355, x1356 = bits.Add32(x1306, x1233, uint32(0x0))
	var x1357 uint32
	var x1358 uint32
	x1357, x1358 = bits.Add32(x1347, x1234, uint32(uint1(x1356)))
	var x1359 uint32
	var x1360 uint32
	x1359, x1360 = bits.Add32(x1349, x1232, uint32(uint1(x1358)))
	var x1361 uint32
	var x1362 uint32
	x1361, x1362 = bits.Add32(x1351, x1230, uint32(uint1(x1360)))
	var x1363 uint32
	x1363, _ = bits.Add32(x1353, x1228, uint32(uint1(x1362)))
	var x1365 uint32
	var x1366 uint32
	x1365, x1366 = bits.Add32(x1355, x1243, uint32(0x0))
	var x1367 uint32
	var x1368 uint32
	x1367, x1368 = bits.Add32(x1357, x1241, uint32(uint1(x1366)))
	var x1369 uint32
	var x1370 uint32
	x1369, x1370 = bits.Add32(x1359, x1239, uint32(uint1(x1368)))
	var x1371 uint32
	var x1372 uint32
	x1371, x1372 = bits.Add32(x1361, x1237, uint32(uint1(x1370)))
	var x1373 uint32
	x1373, _ = bits.Add32(x1363, x1235, uint32(uint1(x1372)))
	var x1375 uint32
	var x1376 uint32
	x1375, x1376 = bits.Add32(x1308, x1245, uint32(0x0))
	var x1377 uint32
	var x1378 uint32
	x1377, x1378 = bits.Add32(x1365, x1246, uint32(uint1(x1376)))
	var x1379 uint32
	var x1380 uint32
	x1379, x1380 = bits.Add32(x1367, x1244, uint32(uint1(x1378)))
	var x1381 uint32
	var x1382 uint32
	x1381, x1382 = bits.Add32(x1369, x1242, uint32(uint1(x1380)))
	var x1383 uint32
	var x1384 uint32
	x1383, x1384 = bits.Add32(x1371, x1240, uint32(uint1(x1382)))
	var x1385 uint32
	x1385, _ = bits.Add32(x1373, x1238, uint32(uint1(x1384)))
	var x1387 uint32
	var x1388 uint32
	x1387, x1388 = bits.Add32(x1375, x1257, uint32(0x0))
	var x1389 uint32
	var x1390 uint32
	x1389, x1390 = bits.Add32(x1377, x1255, uint32(uint1(x1388)))
	var x1391 uint32
	var x1392 uint32
	x1391, x1392 = bits.Add32(x1379, x1253, uint32(uint1(x1390)))
	var x1393 uint32
	var x1394 uint32
	x1393, x1394 = bits.Add32(x1381, x1251, uint32(uint1(x1392)))
	var x1395 uint32
	var x1396 uint32
	x1395, x1396 = bits.Add32(x1383, x1249, uint32(uint1(x1394)))
	var x1397 uint32
	x1397, _ = bits.Add32(x1385, x1247, uint32(uint1(x1396)))
	var x1399 uint32
	var x1400 uint32
	x1399, x1400 = bits.Add32(x1310, x1259, uint32(0x0))
	var x1401 uint32
	var x1402 uint32
	x1401, x1402 = bits.Add32(x1387, x1260, uint32(uint1(x1400)))
	var x1403 uint32
	var x1404 uint32
	x1403, x1404 = bits.Add32(x1389, x1258, uint32(uint1(x1402)))
	var x1405 uint32
	var x1406 uint32
	x1405, x1406 = bits.Add32(x1391, x1256, uint32(uint1(x1404)))
	var x1407 uint32
	var x1408 uint32
	x1407, x1408 = bits.Add32(x1393, x1254, uint32(uint1(x1406)))
	var x1409 uint32
	var x1410 uint32
	x1409, x1410 = bits.Add32(x1395, x1252, uint32(uint1(x1408)))
	var x1411 uint32
	x1411, _ = bits.Add32(x1397, x1250, uint32(uint1(x1410)))
	var x1413 uint32
	var x1414 uint32
	x1413, x1414 = bits.Add32(x1399, x1273, uint32(0x0))
	var x1415 uint32
	var x1416 uint32
	x1415, x1416 = bits.Add32(x1401, x1271, uint32(uint1(x1414)))
	var x1417 uint32
	var x1418 uint32
	x1417, x1418 = bits.Add32(x1403, x1269, uint32(uint1(x1416)))
	var x1419 uint32
	var x1420 uint32
	x1419, x1420 = bits.Add32(x1405, x1267, uint32(uint1(x1418)))
	var x1421 uint32
	var x1422 uint32
	x1421, x1422 = bits.Add32(x1407, x1265, uint32(uint1(x1420)))
	var x1423 uint32
	var x1424 uint32
	x1423, x1424 = bits.Add32(x1409, x1263, uint32(uint1(x1422)))
	var x1425 uint32
	x1425, _ = bits.Add32(x1411, x1261, uint32(uint1(x1424)))
	var x1427 uint32
	var x1428 uint32
	x1427, x1428 = bits.Add32(x1312, x1275, uint32(0x0))
	var x1429 uint32
	var x1430 uint32
	x1429, x1430 = bits.Add32(x1413, x1276, uint32(uint1(x1428)))
	var x1431 uint32
	var x1432 uint32
	x1431, x1432 = bits.Add32(x1415, x1274, uint32(uint1(x1430)))
	var x1433 uint32
	var x1434 uint32
	x1433, x1434 = bits.Add32(x1417, x1272, uint32(uint1(x1432)))
	var x1435 uint32
	var x1436 uint32
	x1435, x1436 = bits.Add32(x1419, x1270, uint32(uint1(x1434)))
	var x1437 uint32
	var x1438 uint32
	x1437, x1438 = bits.Add32(x1421, x1268, uint32(uint1(x1436)))
	var x1439 uint32
	var x1440 uint32
	x1439, x1440 = bits.Add32(x1423, x1266, uint32(uint1(x1438)))
	var x1441 uint32
	x1441, _ = bits.Add32(x1425, x1264, uint32(uint1(x1440)))
	var x1443 uint32
	var x1444 uint32
	x1443, x1444 = bits.Add32(x1427, x1291, uint32(0x0))
	var x1445 uint32
	var x1446 uint32
	x1445, x1446 = bits.Add32(x1429, x1289, uint32(uint1(x1444)))
	var x1447 uint32
	var x1448 uint32
	x1447, x1448 = bits.Add32(x1431, x1287, uint32(uint1(x1446)))
	var x1449 uint32
	var x1450 uint32
	x1449, x1450 = bits.Add32(x1433, x1285, uint32(uint1(x1448)))
	var x1451 uint32
	var x1452 uint32
	x1451, x1452 = bits.Add32(x1435, x1283, uint32(uint1(x1450)))
	var x1453 uint32
	var x1454 uint32
	x1453, x1454 = bits.Add32(x1437, x1281, uint32(uint1(x1452)))
	var x1455 uint32
	var x1456 uint32
	x1455, x1456 = bits.Add32(x1439, x1279, uint32(uint1(x1454)))
	var x1457 uint32
	x1457, _ = bits.Add32(x1441, x1277, uint32(uint1(x1456)))
	var x1459 uint32
	var x1460 uint32
	x1459, x1460 = bits.Add32(x1314, x1293, uint32(0x0))
	var x1461 uint32
	var x1462 uint32
	x1461, x1462 = bits.Add32(x1443, x1294, uint32(uint1(x1460)))
	var x1463 uint32
	var x1464 uint32
	x1463, x1464 = bits.Add32(x1445, x1292, uint32(uint1(x1462)))
	var x1465 uint32
	var x1466 uint32
	x1465, x1466 = bits.Add32(x1447, x1290, uint32(uint1(x1464)))
	var x1467 uint32
	var x1468 uint32
	x1467, x1468 = bits.Add32(x1449, x1288, uint32(uint1(x1466)))
	var x1469 uint32
	var x1470 uint32
	x1469, x1470 = bits.Add32(x1451, x1286, uint32(uint1(x1468)))
	var x1471 uint32
	var x1472 uint32
	x1471, x1472 = bits.Add32(x1453, x1284, uint32(uint1(x1470)))
	var x1473 uint32
	var x1474 uint32
	x1473, x1474 = bits.Add32(x1455, x1282, uint32(uint1(x1472)))
	var x1475 uint32
	x1475, _ = bits.Add32(x1457, x1280, uint32(uint1(x1474)))
	var x1477 uint32
	var x1478 uint32
	x1477, x1478 = bits.Add32(x1459, x1311, uint32(0x0))
	var x1479 uint32
	var x1480 uint32
	x1479, x1480 = bits.Add32(x1461, x1309, uint32(uint1(x1478)))
	var x1481 uint32
	var x1482 uint32
	x1481, x1482 = bits.Add32(x1463, x1307, uint32(uint1(x1480)))
	var x1483 uint32
	var x1484 uint32
	x1483, x1484 = bits.Add32(x1465, x1305, uint32(uint1(x1482)))
	var x1485 uint32
	var x1486 uint32
	x1485, x1486 = bits.Add32(x1467, x1303, uint32(uint1(x1484)))
	var x1487 uint32
	var x1488 uint32
	x1487, x1488 = bits.Add32(x1469, x1301, uint32(uint1(x1486)))
	var x1489 uint32
	var x1490 uint32
	x1489, x1490 = bits.Add32(x1471, x1299, uint32(uint1(x1488)))
	var x1491 uint32
	var x1492 uint32
	x1491, x1492 = bits.Add32(x1473, x1297, uint32(uint1(x1490)))
	var x1493 uint32
	x1493, _ = bits.Add32(x1475, x1295, uint32(uint1(x1492)))
	var x1495 uint32
	var x1496 uint32
	x1495, x1496 = bits.Add32(x437, x729, uint32(0x0))
	var x1497 uint32
	var x1498 uint32
	x1497, x1498 = bits.Add32(x601, x893, uint32(uint1(x1496)))
	var x1499 uint32
	var x1500 uint32
	x1499, x1500 = bits.Add32(x603, x895, uint32(uint1(x1498)))
	var x1501 uint32
	var x1502 uint32
	x1501, x1502 = bits.Add32(x605, x897, uint32(uint1(x1500)))
	var x1503 uint32
	var x1504 uint32
	x1503, x1504 = bits.Add32(x607, x899, uint32(uint1(x1502)))
	var x1505 uint32
	var x1506 uint32
	x1505, x1506 = bits.Add32(x609, x901, uint32(uint1(x1504)))
	var x1507 uint32
	var x1508 uint32
	x1507, x1508 = bits.Add32(x611, x903, uint32(uint1(x1506)))
	var x1509 uint32
	var x1510 uint32
	x1509, x1510 = bits.Add32(x613, x905, uint32(uint1(x1508)))
	var x1511 uint32
	var x1512 uint32
	x1511, x1512 = bits.Add32(x615, x907, uint32(uint1(x1510)))
	var x1513 uint32
	x1513, _ = bits.Add32(x617, x909, uint32(uint1(x1512)))
	var x1515 uint32
	var x1516 uint32
	x1515, x1516 = bits.Add32(x1021, x1313, uint32(0x0))
	var x1517 uint32
	var x1518 uint32
	x1517, x1518 = bits.Add32(x1185, x1477, uint32(uint1(x1516)))
	var x1519 uint32
	var x1520 uint32
	x1519, x1520 = bits.Add32(x1187, x1479, uint32(uint1(x1518)))
	var x1521 uint32
	var x1522 uint32
	x1521, x1522 = bits.Add32(x1189, x1481, uint32(uint1(x1520)))
	var x1523 uint32
	var x1524 uint32
	x1523, x1524 = bits.Add32(x1191, x1483, uint32(uint1(x1522)))
	var x1525 uint32
	var x1526 uint32
	x1525, x1526 = bits.Add32(x1193, x1485, uint32(uint1(x1524)))
	var x1527 uint32
	var x1528 uint32
	x1527, x1528 = bits.Add32(x1195, x1487, uint32(uint1(x1526)))
	var x1529 uint32
	var x1530 uint32
	x1529, x1530 = bits.Add32(x1197, x1489, uint32(uint1(x1528)))
	var x1531 uint32
	var x1532 uint32
	x1531, x1532 = bits.Add32(x1199, x1491, uint32(uint1(x1530)))
	var x1533 uint32
	x1533, _ = bits.Add32(x1201, x1493, uint32(uint1(x1532)))
	x1535 := ((x1495 >> 30) | ((x1497 << 2) & 0xffffffff))
	x1536 := ((x1497 >> 30) | ((x1499 << 2) & 0xffffffff))
	x1537 := ((x1499 >> 30) | ((x1501 << 2) & 0xffffffff))
	x1538 := ((x1501 >> 30) | ((x1503 << 2) & 0xffffffff))
	x1539 := ((x1503 >> 30) | ((x1505 << 2) & 0xffffffff))
	x1540 := ((x1505 >> 30) | ((x1507 << 2) & 0xffffffff))
	x1541 := ((x1507 >> 30) | ((x1509 << 2) & 0xffffffff))
	x1542 := ((x1509 >> 30) | ((x1511 << 2) & 0xffffffff))
	x1543 := ((x1511 >> 30) | ((x1513 << 2) & 0xffffffff))
	x1544 := ((x1515 >> 30) | ((x1517 << 2) & 0xffffffff))
	x1545 := ((x1517 >> 30) | ((x1519 << 2) & 0xffffffff))
	x1546 := ((x1519 >> 30) | ((x1521 << 2) & 0xffffffff))
	x1547 := ((x1521 >> 30) | ((x1523 << 2) & 0xffffffff))
	x1548 := ((x1523 >> 30) | ((x1525 << 2) & 0xffffffff))
	x1549 := ((x1525 >> 30) | ((x1527 << 2) & 0xffffffff))
	x1550 := ((x1527 >> 30) | ((x1529 << 2) & 0xffffffff))
	x1551 := ((x1529 >> 30) | ((x1531 << 2) & 0xffffffff))
	x1552 := ((x1531 >> 30) | ((x1533 << 2) & 0xffffffff))
	x1553 := uint1(((uint32((uint64(x321) + uint64(x321))) & 0xffffffff) >> 31))
	x1554 := (uint32((uint64((^(uint32((uint64(x321) + uint64(x321))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1555 := (uint32((uint64(x321) + uint64(x321))) & 0xffffffff)
	x1556 := (x1555 >> 26)
	x1557 := (x1555 & 0x3ffffff)
	x1558 := (x1554 >> 26)
	x1559 := (x1554 & 0x3ffffff)
	x1560 := (0x7ffffda - x1559)
	x1561 := (0x3fffffe - x1558)
	x1562 := uint1((x1560 >> 26))
	x1563 := (x1560 & 0x3ffffff)
	x1564 := (uint32(x1562) + x1561)
	x1565 := (x1564 & 0x1ffffff)
	x1566 := (x1563 + 0x13)
	x1567 := uint1((x1566 >> 26))
	x1568 := (x1566 & 0x3ffffff)
	x1569 := (uint32(x1567) + x1565)
	x1570 := uint1((x1569 >> 25))
	x1571 := (x1569 & 0x1ffffff)
	x1572 := (uint32(x1570) + 0x3ffffff)
	var x1573 uint32
	cmovznzU32(&x1573, x1553, x1557, x1568)
	var x1574 uint32
	cmovznzU32(&x1574, x1553, x1556, x1571)
	var x1575 uint32
	cmovznzU32(&x1575, x1553, uint32(0x0), x1572)
	var x1576 uint32
	cmovznzU32(&x1576, x1553, uint32(0x0), 0x1ffffff)
	var x1577 uint32
	cmovznzU32(&x1577, x1553, uint32(0x0), 0x3ffffff)
	var x1578 uint32
	cmovznzU32(&x1578, x1553, uint32(0x0), 0x1ffffff)
	var x1579 uint32
	cmovznzU32(&x1579, x1553, uint32(0x0), 0x3ffffff)
	var x1580 uint32
	cmovznzU32(&x1580, x1553, uint32(0x0), 0x1ffffff)
	var x1581 uint32
	cmovznzU32(&x1581, x1553, uint32(0x0), 0x3ffffff)
	var x1582 uint32
	cmovznzU32(&x1582, x1553, uint32(0x0), 0x1ffffff)
	x1583 := uint1(((uint32((uint64(x322) + uint64(x322))) & 0xffffffff) >> 31))
	x1584 := (uint32((uint64((^(uint32((uint64(x322) + uint64(x322))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1585 := (uint32((uint64(x322) + uint64(x322))) & 0xffffffff)
	x1586 := (x1585 >> 26)
	x1587 := (x1585 & 0x3ffffff)
	x1588 := (x1584 >> 26)
	x1589 := (x1584 & 0x3ffffff)
	x1590 := (0x7ffffda - x1589)
	x1591 := (0x3fffffe - x1588)
	x1592 := uint1((x1590 >> 26))
	x1593 := (x1590 & 0x3ffffff)
	x1594 := (uint32(x1592) + x1591)
	x1595 := (x1594 & 0x1ffffff)
	x1596 := (x1593 + 0x13)
	x1597 := uint1((x1596 >> 26))
	x1598 := (x1596 & 0x3ffffff)
	x1599 := (uint32(x1597) + x1595)
	x1600 := uint1((x1599 >> 25))
	x1601 := (x1599 & 0x1ffffff)
	x1602 := (uint32(x1600) + 0x3ffffff)
	var x1603 uint32
	cmovznzU32(&x1603, x1583, x1587, x1598)
	var x1604 uint32
	cmovznzU32(&x1604, x1583, x1586, x1601)
	var x1605 uint32
	cmovznzU32(&x1605, x1583, uint32(0x0), x1602)
	var x1606 uint32
	cmovznzU32(&x1606, x1583, uint32(0x0), 0x1ffffff)
	var x1607 uint32
	cmovznzU32(&x1607, x1583, uint32(0x0), 0x3ffffff)
	var x1608 uint32
	cmovznzU32(&x1608, x1583, uint32(0x0), 0x1ffffff)
	var x1609 uint32
	cmovznzU32(&x1609, x1583, uint32(0x0), 0x3ffffff)
	var x1610 uint32
	cmovznzU32(&x1610, x1583, uint32(0x0), 0x1ffffff)
	var x1611 uint32
	cmovznzU32(&x1611, x1583, uint32(0x0), 0x3ffffff)
	var x1612 uint32
	cmovznzU32(&x1612, x1583, uint32(0x0), 0x1ffffff)
	x1613 := uint1(((uint32((uint64(x323) + uint64(x325))) & 0xffffffff) >> 31))
	x1614 := (uint32((uint64((^(uint32((uint64(x323) + uint64(x325))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1615 := (uint32((uint64(x323) + uint64(x325))) & 0xffffffff)
	x1616 := (x1615 >> 26)
	x1617 := (x1615 & 0x3ffffff)
	x1618 := (x1614 >> 26)
	x1619 := (x1614 & 0x3ffffff)
	x1620 := (0x7ffffda - x1619)
	x1621 := (0x3fffffe - x1618)
	x1622 := uint1((x1620 >> 26))
	x1623 := (x1620 & 0x3ffffff)
	x1624 := (uint32(x1622) + x1621)
	x1625 := (x1624 & 0x1ffffff)
	x1626 := (x1623 + 0x13)
	x1627 := uint1((x1626 >> 26))
	x1628 := (x1626 & 0x3ffffff)
	x1629 := (uint32(x1627) + x1625)
	x1630 := uint1((x1629 >> 25))
	x1631 := (x1629 & 0x1ffffff)
	x1632 := (uint32(x1630) + 0x3ffffff)
	var x1633 uint32
	cmovznzU32(&x1633, x1613, x1617, x1628)
	var x1634 uint32
	cmovznzU32(&x1634, x1613, x1616, x1631)
	var x1635 uint32
	cmovznzU32(&x1635, x1613, uint32(0x0), x1632)
	var x1636 uint32
	cmovznzU32(&x1636, x1613, uint32(0x0), 0x1ffffff)
	var x1637 uint32
	cmovznzU32(&x1637, x1613, uint32(0x0), 0x3ffffff)
	var x1638 uint32
	cmovznzU32(&x1638, x1613, uint32(0x0), 0x1ffffff)
	var x1639 uint32
	cmovznzU32(&x1639, x1613, uint32(0x0), 0x3ffffff)
	var x1640 uint32
	cmovznzU32(&x1640, x1613, uint32(0x0), 0x1ffffff)
	var x1641 uint32
	cmovznzU32(&x1641, x1613, uint32(0x0), 0x3ffffff)
	var x1642 uint32
	cmovznzU32(&x1642, x1613, uint32(0x0), 0x1ffffff)
	x1643 := uint1(((uint32((uint64(x324) + uint64(x326))) & 0xffffffff) >> 31))
	x1644 := (uint32((uint64((^(uint32((uint64(x324) + uint64(x326))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1645 := (uint32((uint64(x324) + uint64(x326))) & 0xffffffff)
	x1646 := (x1645 >> 26)
	x1647 := (x1645 & 0x3ffffff)
	x1648 := (x1644 >> 26)
	x1649 := (x1644 & 0x3ffffff)
	x1650 := (0x7ffffda - x1649)
	x1651 := (0x3fffffe - x1648)
	x1652 := uint1((x1650 >> 26))
	x1653 := (x1650 & 0x3ffffff)
	x1654 := (uint32(x1652) + x1651)
	x1655 := (x1654 & 0x1ffffff)
	x1656 := (x1653 + 0x13)
	x1657 := uint1((x1656 >> 26))
	x1658 := (x1656 & 0x3ffffff)
	x1659 := (uint32(x1657) + x1655)
	x1660 := uint1((x1659 >> 25))
	x1661 := (x1659 & 0x1ffffff)
	x1662 := (uint32(x1660) + 0x3ffffff)
	var x1663 uint32
	cmovznzU32(&x1663, x1643, x1647, x1658)
	var x1664 uint32
	cmovznzU32(&x1664, x1643, x1646, x1661)
	var x1665 uint32
	cmovznzU32(&x1665, x1643, uint32(0x0), x1662)
	var x1666 uint32
	cmovznzU32(&x1666, x1643, uint32(0x0), 0x1ffffff)
	var x1667 uint32
	cmovznzU32(&x1667, x1643, uint32(0x0), 0x3ffffff)
	var x1668 uint32
	cmovznzU32(&x1668, x1643, uint32(0x0), 0x1ffffff)
	var x1669 uint32
	cmovznzU32(&x1669, x1643, uint32(0x0), 0x3ffffff)
	var x1670 uint32
	cmovznzU32(&x1670, x1643, uint32(0x0), 0x1ffffff)
	var x1671 uint32
	cmovznzU32(&x1671, x1643, uint32(0x0), 0x3ffffff)
	var x1672 uint32
	cmovznzU32(&x1672, x1643, uint32(0x0), 0x1ffffff)
	x1673 := (uint64(x1582) * uint64((arg3[9] * 0x26)))
	x1674 := (uint64(x1582) * uint64((arg3[8] * 0x13)))
	x1675 := (uint64(x1582) * uint64((arg3[7] * 0x26)))
	x1676 := (uint64(x1582) * uint64((arg3[6] * 0x13)))
	x1677 := (uint64(x1582) * uint64((arg3[5] * 0x26)))
	x1678 := (uint64(x1582) * uint64((arg3[4] * 0x13)))
	x1679 := (uint64(x1582) * uint64((arg3[3] * 0x26)))
	x1680 := (uint64(x1582) * uint64((arg3[2] * 0x13)))
	x1681 := (uint64(x1582) * uint64((arg3[1] * 0x26)))
	x1682 := (uint64(x1581) * uint64((arg3[9] * 0x13)))
	x1683 := (uint64(x1581) * uint64((arg3[8] * 0x13)))
	x1684 := (uint64(x1581) * uint64((arg3[7] * 0x13)))
	x1685 := (uint64(x1581) * uint64((arg3[6] * 0x13)))
	x1686 := (uint64(x1581) * uint64((arg3[5] * 0x13)))
	x1687 := (uint64(x1581) * uint64((arg3[4] * 0x13)))
	x1688 := (uint64(x1581) * uint64((arg3[3] * 0x13)))
	x1689 := (uint64(x1581) * uint64((arg3[2] * 0x13)))
	x1690 := (uint64(x1580) * uint64((arg3[9] * 0x26)))
	x1691 := (uint64(x1580) * uint64((arg3[8] * 0x13)))
	x1692 := (uint64(x1580) * uint64((arg3[7] * 0x26)))
	x1693 := (uint64(x1580) * uint64((arg3[6] * 0x13)))
	x1694 := (uint64(x1580) * uint64((arg3[5] * 0x26)))
	x1695 := (uint64(x1580) * uint64((arg3[4] * 0x13)))
	x1696 := (uint64(x1580) * uint64((arg3[3] * 0x26)))
	x1697 := (uint64(x1579) * uint64((arg3[9] * 0x13)))
	x1698 := (uint64(x1579) * uint64((arg3[8] * 0x13)))
	x1699 := (uint64(x1579) * uint64((arg3[7] * 0x13)))
	x1700 := (uint64(x1579) * uint64((arg3[6] * 0x13)))
	x1701 := (uint64(x1579) * uint64((arg3[5] * 0x13)))
	x1702 := (uint64(x1579) * uint64((arg3[4] * 0x13)))
	x1703 := (uint64(x1578) * uint64((arg3[9] * 0x26)))
	x1704 := (uint64(x1578) * uint64((arg3[8] * 0x13)))
	x1705 := (uint64(x1578) * uint64((arg3[7] * 0x26)))
	x1706 := (uint64(x1578) * uint64((arg3[6] * 0x13)))
	x1707 := (uint64(x1578) * uint64((arg3[5] * 0x26)))
	x1708 := (uint64(x1577) * uint64((arg3[9] * 0x13)))
	x1709 := (uint64(x1577) * uint64((arg3[8] * 0x13)))
	x1710 := (uint64(x1577) * uint64((arg3[7] * 0x13)))
	x1711 := (uint64(x1577) * uint64((arg3[6] * 0x13)))
	x1712 := (uint64(x1576) * uint64((arg3[9] * 0x26)))
	x1713 := (uint64(x1576) * uint64((arg3[8] * 0x13)))
	x1714 := (uint64(x1576) * uint64((arg3[7] * 0x26)))
	x1715 := (uint64(x1575) * uint64((arg3[9] * 0x13)))
	x1716 := (uint64(x1575) * uint64((arg3[8] * 0x13)))
	x1717 := (uint64(x1574) * uint64((arg3[9] * 0x26)))
	x1718 := (uint64(x1582) * uint64(arg3[0]))
	x1719 := (uint64(x1581) * uint64(arg3[1]))
	x1720 := (uint64(x1581) * uint64(arg3[0]))
	x1721 := (uint64(x1580) * uint64(arg3[2]))
	x1722 := (uint64(x1580) * uint64((arg3[1] * 0x2)))
	x1723 := (uint64(x1580) * uint64(arg3[0]))
	x1724 := (uint64(x1579) * uint64(arg3[3]))
	x1725 := (uint64(x1579) * uint64(arg3[2]))
	x1726 := (uint64(x1579) * uint64(arg3[1]))
	x1727 := (uint64(x1579) * uint64(arg3[0]))
	x1728 := (uint64(x1578) * uint64(arg3[4]))
	x1729 := (uint64(x1578) * uint64((arg3[3] * 0x2)))
	x1730 := (uint64(x1578) * uint64(arg3[2]))
	x1731 := (uint64(x1578) * uint64((arg3[1] * 0x2)))
	x1732 := (uint64(x1578) * uint64(arg3[0]))
	x1733 := (uint64(x1577) * uint64(arg3[5]))
	x1734 := (uint64(x1577) * uint64(arg3[4]))
	x1735 := (uint64(x1577) * uint64(arg3[3]))
	x1736 := (uint64(x1577) * uint64(arg3[2]))
	x1737 := (uint64(x1577) * uint64(arg3[1]))
	x1738 := (uint64(x1577) * uint64(arg3[0]))
	x1739 := (uint64(x1576) * uint64(arg3[6]))
	x1740 := (uint64(x1576) * uint64((arg3[5] * 0x2)))
	x1741 := (uint64(x1576) * uint64(arg3[4]))
	x1742 := (uint64(x1576) * uint64((arg3[3] * 0x2)))
	x1743 := (uint64(x1576) * uint64(arg3[2]))
	x1744 := (uint64(x1576) * uint64((arg3[1] * 0x2)))
	x1745 := (uint64(x1576) * uint64(arg3[0]))
	x1746 := (uint64(x1575) * uint64(arg3[7]))
	x1747 := (uint64(x1575) * uint64(arg3[6]))
	x1748 := (uint64(x1575) * uint64(arg3[5]))
	x1749 := (uint64(x1575) * uint64(arg3[4]))
	x1750 := (uint64(x1575) * uint64(arg3[3]))
	x1751 := (uint64(x1575) * uint64(arg3[2]))
	x1752 := (uint64(x1575) * uint64(arg3[1]))
	x1753 := (uint64(x1575) * uint64(arg3[0]))
	x1754 := (uint64(x1574) * uint64(arg3[8]))
	x1755 := (uint64(x1574) * uint64((arg3[7] * 0x2)))
	x1756 := (uint64(x1574) * uint64(arg3[6]))
	x1757 := (uint64(x1574) * uint64((arg3[5] * 0x2)))
	x1758 := (uint64(x1574) * uint64(arg3[4]))
	x1759 := (uint64(x1574) * uint64((arg3[3] * 0x2)))
	x1760 := (uint64(x1574) * uint64(arg3[2]))
	x1761 := (uint64(x1574) * uint64((arg3[1] * 0x2)))
	x1762 := (uint64(x1574) * uint64(arg3[0]))
	x1763 := (uint64(x1573) * uint64(arg3[9]))
	x1764 := (uint64(x1573) * uint64(arg3[8]))
	x1765 := (uint64(x1573) * uint64(arg3[7]))
	x1766 := (uint64(x1573) * uint64(arg3[6]))
	x1767 := (uint64(x1573) * uint64(arg3[5]))
	x1768 := (uint64(x1573) * uint64(arg3[4]))
	x1769 := (uint64(x1573) * uint64(arg3[3]))
	x1770 := (uint64(x1573) * uint64(arg3[2]))
	x1771 := (uint64(x1573) * uint64(arg3[1]))
	x1772 := (uint64(x1573) * uint64(arg3[0]))
	x1773 := (x1772 + (x1717 + (x1716 + (x1714 + (x1711 + (x1707 + (x1702 + (x1696 + (x1689 + x1681)))))))))
	x1774 := (x1773 >> 26)
	x1775 := (uint32(x1773) & 0x3ffffff)
	x1776 := (x1763 + (x1754 + (x1746 + (x1739 + (x1733 + (x1728 + (x1724 + (x1721 + (x1719 + x1718)))))))))
	x1777 := (x1764 + (x1755 + (x1747 + (x1740 + (x1734 + (x1729 + (x1725 + (x1722 + (x1720 + x1673)))))))))
	x1778 := (x1765 + (x1756 + (x1748 + (x1741 + (x1735 + (x1730 + (x1726 + (x1723 + (x1682 + x1674)))))))))
	x1779 := (x1766 + (x1757 + (x1749 + (x1742 + (x1736 + (x1731 + (x1727 + (x1690 + (x1683 + x1675)))))))))
	x1780 := (x1767 + (x1758 + (x1750 + (x1743 + (x1737 + (x1732 + (x1697 + (x1691 + (x1684 + x1676)))))))))
	x1781 := (x1768 + (x1759 + (x1751 + (x1744 + (x1738 + (x1703 + (x1698 + (x1692 + (x1685 + x1677)))))))))
	x1782 := (x1769 + (x1760 + (x1752 + (x1745 + (x1708 + (x1704 + (x1699 + (x1693 + (x1686 + x1678)))))))))
	x1783 := (x1770 + (x1761 + (x1753 + (x1712 + (x1709 + (x1705 + (x1700 + (x1694 + (x1687 + x1679)))))))))
	x1784 := (x1771 + (x1762 + (x1715 + (x1713 + (x1710 + (x1706 + (x1701 + (x1695 + (x1688 + x1680)))))))))
	x1785 := (x1774 + x1784)
	x1786 := (x1785 >> 25)
	x1787 := (uint32(x1785) & 0x1ffffff)
	x1788 := (x1786 + x1783)
	x1789 := (x1788 >> 26)
	x1790 := (uint32(x1788) & 0x3ffffff)
	x1791 := (x1789 + x1782)
	x1792 := (x1791 >> 25)
	x1793 := (uint32(x1791) & 0x1ffffff)
	x1794 := (x1792 + x1781)
	x1795 := (x1794 >> 26)
	x1796 := (uint32(x1794) & 0x3ffffff)
	x1797 := (x1795 + x1780)
	x1798 := (x1797 >> 25)
	x1799 := (uint32(x1797) & 0x1ffffff)
	x1800 := (x1798 + x1779)
	x1801 := uint32((x1800 >> 26))
	x1802 := (uint32(x1800) & 0x3ffffff)
	x1803 := (uint64(x1801) + x1778)
	x1804 := uint32((x1803 >> 25))
	x1805 := (uint32(x1803) & 0x1ffffff)
	x1806 := (uint64(x1804) + x1777)
	x1807 := uint32((x1806 >> 26))
	x1808 := (uint32(x1806) & 0x3ffffff)
	x1809 := (uint64(x1807) + x1776)
	x1810 := uint32((x1809 >> 25))
	x1811 := (uint32(x1809) & 0x1ffffff)
	x1812 := (uint64(x1810) * uint64(0x13))
	x1813 := (uint64(x1775) + x1812)
	x1814 := uint32((x1813 >> 26))
	x1815 := (uint32(x1813) & 0x3ffffff)
	x1816 := (x1814 + x1787)
	x1817 := uint1((x1816 >> 25))
	x1818 := (x1816 & 0x1ffffff)
	x1819 := (uint32(x1817) + x1790)
	x1820 := (uint64(x1612) * uint64((arg4[9] * 0x26)))
	x1821 := (uint64(x1612) * uint64((arg4[8] * 0x13)))
	x1822 := (uint64(x1612) * uint64((arg4[7] * 0x26)))
	x1823 := (uint64(x1612) * uint64((arg4[6] * 0x13)))
	x1824 := (uint64(x1612) * uint64((arg4[5] * 0x26)))
	x1825 := (uint64(x1612) * uint64((arg4[4] * 0x13)))
	x1826 := (uint64(x1612) * uint64((arg4[3] * 0x26)))
	x1827 := (uint64(x1612) * uint64((arg4[2] * 0x13)))
	x1828 := (uint64(x1612) * uint64((arg4[1] * 0x26)))
	x1829 := (uint64(x1611) * uint64((arg4[9] * 0x13)))
	x1830 := (uint64(x1611) * uint64((arg4[8] * 0x13)))
	x1831 := (uint64(x1611) * uint64((arg4[7] * 0x13)))
	x1832 := (uint64(x1611) * uint64((arg4[6] * 0x13)))
	x1833 := (uint64(x1611) * uint64((arg4[5] * 0x13)))
	x1834 := (uint64(x1611) * uint64((arg4[4] * 0x13)))
	x1835 := (uint64(x1611) * uint64((arg4[3] * 0x13)))
	x1836 := (uint64(x1611) * uint64((arg4[2] * 0x13)))
	x1837 := (uint64(x1610) * uint64((arg4[9] * 0x26)))
	x1838 := (uint64(x1610) * uint64((arg4[8] * 0x13)))
	x1839 := (uint64(x1610) * uint64((arg4[7] * 0x26)))
	x1840 := (uint64(x1610) * uint64((arg4[6] * 0x13)))
	x1841 := (uint64(x1610) * uint64((arg4[5] * 0x26)))
	x1842 := (uint64(x1610) * uint64((arg4[4] * 0x13)))
	x1843 := (uint64(x1610) * uint64((arg4[3] * 0x26)))
	x1844 := (uint64(x1609) * uint64((arg4[9] * 0x13)))
	x1845 := (uint64(x1609) * uint64((arg4[8] * 0x13)))
	x1846 := (uint64(x1609) * uint64((arg4[7] * 0x13)))
	x1847 := (uint64(x1609) * uint64((arg4[6] * 0x13)))
	x1848 := (uint64(x1609) * uint64((arg4[5] * 0x13)))
	x1849 := (uint64(x1609) * uint64((arg4[4] * 0x13)))
	x1850 := (uint64(x1608) * uint64((arg4[9] * 0x26)))
	x1851 := (uint64(x1608) * uint64((arg4[8] * 0x13)))
	x1852 := (uint64(x1608) * uint64((arg4[7] * 0x26)))
	x1853 := (uint64(x1608) * uint64((arg4[6] * 0x13)))
	x1854 := (uint64(x1608) * uint64((arg4[5] * 0x26)))
	x1855 := (uint64(x1607) * uint64((arg4[9] * 0x13)))
	x1856 := (uint64(x1607) * uint64((arg4[8] * 0x13)))
	x1857 := (uint64(x1607) * uint64((arg4[7] * 0x13)))
	x1858 := (uint64(x1607) * uint64((arg4[6] * 0x13)))
	x1859 := (uint64(x1606) * uint64((arg4[9] * 0x26)))
	x1860 := (uint64(x1606) * uint64((arg4[8] * 0x13)))
	x1861 := (uint64(x1606) * uint64((arg4[7] * 0x26)))
	x1862 := (uint64(x1605) * uint64((arg4[9] * 0x13)))
	x1863 := (uint64(x1605) * uint64((arg4[8] * 0x13)))
	x1864 := (uint64(x1604) * uint64((arg4[9] * 0x26)))
	x1865 := (uint64(x1612) * uint64(arg4[0]))
	x1866 := (uint64(x1611) * uint64(arg4[1]))
	x1867 := (uint64(x1611) * uint64(arg4[0]))
	x1868 := (uint64(x1610) * uint64(arg4[2]))
	x1869 := (uint64(x1610) * uint64((arg4[1] * 0x2)))
	x1870 := (uint64(x1610) * uint64(arg4[0]))
	x1871 := (uint64(x1609) * uint64(arg4[3]))
	x1872 := (uint64(x1609) * uint64(arg4[2]))
	x1873 := (uint64(x1609) * uint64(arg4[1]))
	x1874 := (uint64(x1609) * uint64(arg4[0]))
	x1875 := (uint64(x1608) * uint64(arg4[4]))
	x1876 := (uint64(x1608) * uint64((arg4[3] * 0x2)))
	x1877 := (uint64(x1608) * uint64(arg4[2]))
	x1878 := (uint64(x1608) * uint64((arg4[1] * 0x2)))
	x1879 := (uint64(x1608) * uint64(arg4[0]))
	x1880 := (uint64(x1607) * uint64(arg4[5]))
	x1881 := (uint64(x1607) * uint64(arg4[4]))
	x1882 := (uint64(x1607) * uint64(arg4[3]))
	x1883 := (uint64(x1607) * uint64(arg4[2]))
	x1884 := (uint64(x1607) * uint64(arg4[1]))
	x1885 := (uint64(x1607) * uint64(arg4[0]))
	x1886 := (uint64(x1606) * uint64(arg4[6]))
	x1887 := (uint64(x1606) * uint64((arg4[5] * 0x2)))
	x1888 := (uint64(x1606) * uint64(arg4[4]))
	x1889 := (uint64(x1606) * uint64((arg4[3] * 0x2)))
	x1890 := (uint64(x1606) * uint64(arg4[2]))
	x1891 := (uint64(x1606) * uint64((arg4[1] * 0x2)))
	x1892 := (uint64(x1606) * uint64(arg4[0]))
	x1893 := (uint64(x1605) * uint64(arg4[7]))
	x1894 := (uint64(x1605) * uint64(arg4[6]))
	x1895 := (uint64(x1605) * uint64(arg4[5]))
	x1896 := (uint64(x1605) * uint64(arg4[4]))
	x1897 := (uint64(x1605) * uint64(arg4[3]))
	x1898 := (uint64(x1605) * uint64(arg4[2]))
	x1899 := (uint64(x1605) * uint64(arg4[1]))
	x1900 := (uint64(x1605) * uint64(arg4[0]))
	x1901 := (uint64(x1604) * uint64(arg4[8]))
	x1902 := (uint64(x1604) * uint64((arg4[7] * 0x2)))
	x1903 := (uint64(x1604) * uint64(arg4[6]))
	x1904 := (uint64(x1604) * uint64((arg4[5] * 0x2)))
	x1905 := (uint64(x1604) * uint64(arg4[4]))
	x1906 := (uint64(x1604) * uint64((arg4[3] * 0x2)))
	x1907 := (uint64(x1604) * uint64(arg4[2]))
	x1908 := (uint64(x1604) * uint64((arg4[1] * 0x2)))
	x1909 := (uint64(x1604) * uint64(arg4[0]))
	x1910 := (uint64(x1603) * uint64(arg4[9]))
	x1911 := (uint64(x1603) * uint64(arg4[8]))
	x1912 := (uint64(x1603) * uint64(arg4[7]))
	x1913 := (uint64(x1603) * uint64(arg4[6]))
	x1914 := (uint64(x1603) * uint64(arg4[5]))
	x1915 := (uint64(x1603) * uint64(arg4[4]))
	x1916 := (uint64(x1603) * uint64(arg4[3]))
	x1917 := (uint64(x1603) * uint64(arg4[2]))
	x1918 := (uint64(x1603) * uint64(arg4[1]))
	x1919 := (uint64(x1603) * uint64(arg4[0]))
	x1920 := (x1919 + (x1864 + (x1863 + (x1861 + (x1858 + (x1854 + (x1849 + (x1843 + (x1836 + x1828)))))))))
	x1921 := (x1920 >> 26)
	x1922 := (uint32(x1920) & 0x3ffffff)
	x1923 := (x1910 + (x1901 + (x1893 + (x1886 + (x1880 + (x1875 + (x1871 + (x1868 + (x1866 + x1865)))))))))
	x1924 := (x1911 + (x1902 + (x1894 + (x1887 + (x1881 + (x1876 + (x1872 + (x1869 + (x1867 + x1820)))))))))
	x1925 := (x1912 + (x1903 + (x1895 + (x1888 + (x1882 + (x1877 + (x1873 + (x1870 + (x1829 + x1821)))))))))
	x1926 := (x1913 + (x1904 + (x1896 + (x1889 + (x1883 + (x1878 + (x1874 + (x1837 + (x1830 + x1822)))))))))
	x1927 := (x1914 + (x1905 + (x1897 + (x1890 + (x1884 + (x1879 + (x1844 + (x1838 + (x1831 + x1823)))))))))
	x1928 := (x1915 + (x1906 + (x1898 + (x1891 + (x1885 + (x1850 + (x1845 + (x1839 + (x1832 + x1824)))))))))
	x1929 := (x1916 + (x1907 + (x1899 + (x1892 + (x1855 + (x1851 + (x1846 + (x1840 + (x1833 + x1825)))))))))
	x1930 := (x1917 + (x1908 + (x1900 + (x1859 + (x1856 + (x1852 + (x1847 + (x1841 + (x1834 + x1826)))))))))
	x1931 := (x1918 + (x1909 + (x1862 + (x1860 + (x1857 + (x1853 + (x1848 + (x1842 + (x1835 + x1827)))))))))
	x1932 := (x1921 + x1931)
	x1933 := (x1932 >> 25)
	x1934 := (uint32(x1932) & 0x1ffffff)
	x1935 := (x1933 + x1930)
	x1936 := (x1935 >> 26)
	x1937 := (uint32(x1935) & 0x3ffffff)
	x1938 := (x1936 + x1929)
	x1939 := (x1938 >> 25)
	x1940 := (uint32(x1938) & 0x1ffffff)
	x1941 := (x1939 + x1928)
	x1942 := (x1941 >> 26)
	x1943 := (uint32(x1941) & 0x3ffffff)
	x1944 := (x1942 + x1927)
	x1945 := (x1944 >> 25)
	x1946 := (uint32(x1944) & 0x1ffffff)
	x1947 := (x1945 + x1926)
	x1948 := uint32((x1947 >> 26))
	x1949 := (uint32(x1947) & 0x3ffffff)
	x1950 := (uint64(x1948) + x1925)
	x1951 := uint32((x1950 >> 25))
	x1952 := (uint32(x1950) & 0x1ffffff)
	x1953 := (uint64(x1951) + x1924)
	x1954 := uint32((x1953 >> 26))
	x1955 := (uint32(x1953) & 0x3ffffff)
	x1956 := (uint64(x1954) + x1923)
	x1957 := uint32((x1956 >> 25))
	x1958 := (uint32(x1956) & 0x1ffffff)
	x1959 := (uint64(x1957) * uint64(0x13))
	x1960 := (uint64(x1922) + x1959)
	x1961 := uint32((x1960 >> 26))
	x1962 := (uint32(x1960) & 0x3ffffff)
	x1963 := (x1961 + x1934)
	x1964 := uint1((x1963 >> 25))
	x1965 := (x1963 & 0x1ffffff)
	x1966 := (uint32(x1964) + x1937)
	x1967 := (uint64(x1642) * uint64((arg3[9] * 0x26)))
	x1968 := (uint64(x1642) * uint64((arg3[8] * 0x13)))
	x1969 := (uint64(x1642) * uint64((arg3[7] * 0x26)))
	x1970 := (uint64(x1642) * uint64((arg3[6] * 0x13)))
	x1971 := (uint64(x1642) * uint64((arg3[5] * 0x26)))
	x1972 := (uint64(x1642) * uint64((arg3[4] * 0x13)))
	x1973 := (uint64(x1642) * uint64((arg3[3] * 0x26)))
	x1974 := (uint64(x1642) * uint64((arg3[2] * 0x13)))
	x1975 := (uint64(x1642) * uint64((arg3[1] * 0x26)))
	x1976 := (uint64(x1641) * uint64((arg3[9] * 0x13)))
	x1977 := (uint64(x1641) * uint64((arg3[8] * 0x13)))
	x1978 := (uint64(x1641) * uint64((arg3[7] * 0x13)))
	x1979 := (uint64(x1641) * uint64((arg3[6] * 0x13)))
	x1980 := (uint64(x1641) * uint64((arg3[5] * 0x13)))
	x1981 := (uint64(x1641) * uint64((arg3[4] * 0x13)))
	x1982 := (uint64(x1641) * uint64((arg3[3] * 0x13)))
	x1983 := (uint64(x1641) * uint64((arg3[2] * 0x13)))
	x1984 := (uint64(x1640) * uint64((arg3[9] * 0x26)))
	x1985 := (uint64(x1640) * uint64((arg3[8] * 0x13)))
	x1986 := (uint64(x1640) * uint64((arg3[7] * 0x26)))
	x1987 := (uint64(x1640) * uint64((arg3[6] * 0x13)))
	x1988 := (uint64(x1640) * uint64((arg3[5] * 0x26)))
	x1989 := (uint64(x1640) * uint64((arg3[4] * 0x13)))
	x1990 := (uint64(x1640) * uint64((arg3[3] * 0x26)))
	x1991 := (uint64(x1639) * uint64((arg3[9] * 0x13)))
	x1992 := (uint64(x1639) * uint64((arg3[8] * 0x13)))
	x1993 := (uint64(x1639) * uint64((arg3[7] * 0x13)))
	x1994 := (uint64(x1639) * uint64((arg3[6] * 0x13)))
	x1995 := (uint64(x1639) * uint64((arg3[5] * 0x13)))
	x1996 := (uint64(x1639) * uint64((arg3[4] * 0x13)))
	x1997 := (uint64(x1638) * uint64((arg3[9] * 0x26)))
	x1998 := (uint64(x1638) * uint64((arg3[8] * 0x13)))
	x1999 := (uint64(x1638) * uint64((arg3[7] * 0x26)))
	x2000 := (uint64(x1638) * uint64((arg3[6] * 0x13)))
	x2001 := (uint64(x1638) * uint64((arg3[5] * 0x26)))
	x2002 := (uint64(x1637) * uint64((arg3[9] * 0x13)))
	x2003 := (uint64(x1637) * uint64((arg3[8] * 0x13)))
	x2004 := (uint64(x1637) * uint64((arg3[7] * 0x13)))
	x2005 := (uint64(x1637) * uint64((arg3[6] * 0x13)))
	x2006 := (uint64(x1636) * uint64((arg3[9] * 0x26)))
	x2007 := (uint64(x1636) * uint64((arg3[8] * 0x13)))
	x2008 := (uint64(x1636) * uint64((arg3[7] * 0x26)))
	x2009 := (uint64(x1635) * uint64((arg3[9] * 0x13)))
	x2010 := (uint64(x1635) * uint64((arg3[8] * 0x13)))
	x2011 := (uint64(x1634) * uint64((arg3[9] * 0x26)))
	x2012 := (uint64(x1642) * uint64(arg3[0]))
	x2013 := (uint64(x1641) * uint64(arg3[1]))
	x2014 := (uint64(x1641) * uint64(arg3[0]))
	x2015 := (uint64(x1640) * uint64(arg3[2]))
	x2016 := (uint64(x1640) * uint64((arg3[1] * 0x2)))
	x2017 := (uint64(x1640) * uint64(arg3[0]))
	x2018 := (uint64(x1639) * uint64(arg3[3]))
	x2019 := (uint64(x1639) * uint64(arg3[2]))
	x2020 := (uint64(x1639) * uint64(arg3[1]))
	x2021 := (uint64(x1639) * uint64(arg3[0]))
	x2022 := (uint64(x1638) * uint64(arg3[4]))
	x2023 := (uint64(x1638) * uint64((arg3[3] * 0x2)))
	x2024 := (uint64(x1638) * uint64(arg3[2]))
	x2025 := (uint64(x1638) * uint64((arg3[1] * 0x2)))
	x2026 := (uint64(x1638) * uint64(arg3[0]))
	x2027 := (uint64(x1637) * uint64(arg3[5]))
	x2028 := (uint64(x1637) * uint64(arg3[4]))
	x2029 := (uint64(x1637) * uint64(arg3[3]))
	x2030 := (uint64(x1637) * uint64(arg3[2]))
	x2031 := (uint64(x1637) * uint64(arg3[1]))
	x2032 := (uint64(x1637) * uint64(arg3[0]))
	x2033 := (uint64(x1636) * uint64(arg3[6]))
	x2034 := (uint64(x1636) * uint64((arg3[5] * 0x2)))
	x2035 := (uint64(x1636) * uint64(arg3[4]))
	x2036 := (uint64(x1636) * uint64((arg3[3] * 0x2)))
	x2037 := (uint64(x1636) * uint64(arg3[2]))
	x2038 := (uint64(x1636) * uint64((arg3[1] * 0x2)))
	x2039 := (uint64(x1636) * uint64(arg3[0]))
	x2040 := (uint64(x1635) * uint64(arg3[7]))
	x2041 := (uint64(x1635) * uint64(arg3[6]))
	x2042 := (uint64(x1635) * uint64(arg3[5]))
	x2043 := (uint64(x1635) * uint64(arg3[4]))
	x2044 := (uint64(x1635) * uint64(arg3[3]))
	x2045 := (uint64(x1635) * uint64(arg3[2]))
	x2046 := (uint64(x1635) * uint64(arg3[1]))
	x2047 := (uint64(x1635) * uint64(arg3[0]))
	x2048 := (uint64(x1634) * uint64(arg3[8]))
	x2049 := (uint64(x1634) * uint64((arg3[7] * 0x2)))
	x2050 := (uint64(x1634) * uint64(arg3[6]))
	x2051 := (uint64(x1634) * uint64((arg3[5] * 0x2)))
	x2052 := (uint64(x1634) * uint64(arg3[4]))
	x2053 := (uint64(x1634) * uint64((arg3[3] * 0x2)))
	x2054 := (uint64(x1634) * uint64(arg3[2]))
	x2055 := (uint64(x1634) * uint64((arg3[1] * 0x2)))
	x2056 := (uint64(x1634) * uint64(arg3[0]))
	x2057 := (uint64(x1633) * uint64(arg3[9]))
	x2058 := (uint64(x1633) * uint64(arg3[8]))
	x2059 := (uint64(x1633) * uint64(arg3[7]))
	x2060 := (uint64(x1633) * uint64(arg3[6]))
	x2061 := (uint64(x1633) * uint64(arg3[5]))
	x2062 := (uint64(x1633) * uint64(arg3[4]))
	x2063 := (uint64(x1633) * uint64(arg3[3]))
	x2064 := (uint64(x1633) * uint64(arg3[2]))
	x2065 := (uint64(x1633) * uint64(arg3[1]))
	x2066 := (uint64(x1633) * uint64(arg3[0]))
	x2067 := (x2066 + (x2011 + (x2010 + (x2008 + (x2005 + (x2001 + (x1996 + (x1990 + (x1983 + x1975)))))))))
	x2068 := (x2067 >> 26)
	x2069 := (uint32(x2067) & 0x3ffffff)
	x2070 := (x2057 + (x2048 + (x2040 + (x2033 + (x2027 + (x2022 + (x2018 + (x2015 + (x2013 + x2012)))))))))
	x2071 := (x2058 + (x2049 + (x2041 + (x2034 + (x2028 + (x2023 + (x2019 + (x2016 + (x2014 + x1967)))))))))
	x2072 := (x2059 + (x2050 + (x2042 + (x2035 + (x2029 + (x2024 + (x2020 + (x2017 + (x1976 + x1968)))))))))
	x2073 := (x2060 + (x2051 + (x2043 + (x2036 + (x2030 + (x2025 + (x2021 + (x1984 + (x1977 + x1969)))))))))
	x2074 := (x2061 + (x2052 + (x2044 + (x2037 + (x2031 + (x2026 + (x1991 + (x1985 + (x1978 + x1970)))))))))
	x2075 := (x2062 + (x2053 + (x2045 + (x2038 + (x2032 + (x1997 + (x1992 + (x1986 + (x1979 + x1971)))))))))
	x2076 := (x2063 + (x2054 + (x2046 + (x2039 + (x2002 + (x1998 + (x1993 + (x1987 + (x1980 + x1972)))))))))
	x2077 := (x2064 + (x2055 + (x2047 + (x2006 + (x2003 + (x1999 + (x1994 + (x1988 + (x1981 + x1973)))))))))
	x2078 := (x2065 + (x2056 + (x2009 + (x2007 + (x2004 + (x2000 + (x1995 + (x1989 + (x1982 + x1974)))))))))
	x2079 := (x2068 + x2078)
	x2080 := (x2079 >> 25)
	x2081 := (uint32(x2079) & 0x1ffffff)
	x2082 := (x2080 + x2077)
	x2083 := (x2082 >> 26)
	x2084 := (uint32(x2082) & 0x3ffffff)
	x2085 := (x2083 + x2076)
	x2086 := (x2085 >> 25)
	x2087 := (uint32(x2085) & 0x1ffffff)
	x2088 := (x2086 + x2075)
	x2089 := (x2088 >> 26)
	x2090 := (uint32(x2088) & 0x3ffffff)
	x2091 := (x2089 + x2074)
	x2092 := (x2091 >> 25)
	x2093 := (uint32(x2091) & 0x1ffffff)
	x2094 := (x2092 + x2073)
	x2095 := uint32((x2094 >> 26))
	x2096 := (uint32(x2094) & 0x3ffffff)
	x2097 := (uint64(x2095) + x2072)
	x2098 := uint32((x2097 >> 25))
	x2099 := (uint32(x2097) & 0x1ffffff)
	x2100 := (uint64(x2098) + x2071)
	x2101 := uint32((x2100 >> 26))
	x2102 := (uint32(x2100) & 0x3ffffff)
	x2103 := (uint64(x2101) + x2070)
	x2104 := uint32((x2103 >> 25))
	x2105 := (uint32(x2103) & 0x1ffffff)
	x2106 := (uint64(x2104) * uint64(0x13))
	x2107 := (uint64(x2069) + x2106)
	x2108 := uint32((x2107 >> 26))
	x2109 := (uint32(x2107) & 0x3ffffff)
	x2110 := (x2108 + x2081)
	x2111 := uint1((x2110 >> 25))
	x2112 := (x2110 & 0x1ffffff)
	x2113 := (uint32(x2111) + x2084)
	x2114 := (uint64(x1672) * uint64((arg4[9] * 0x26)))
	x2115 := (uint64(x1672) * uint64((arg4[8] * 0x13)))
	x2116 := (uint64(x1672) * uint64((arg4[7] * 0x26)))
	x2117 := (uint64(x1672) * uint64((arg4[6] * 0x13)))
	x2118 := (uint64(x1672) * uint64((arg4[5] * 0x26)))
	x2119 := (uint64(x1672) * uint64((arg4[4] * 0x13)))
	x2120 := (uint64(x1672) * uint64((arg4[3] * 0x26)))
	x2121 := (uint64(x1672) * uint64((arg4[2] * 0x13)))
	x2122 := (uint64(x1672) * uint64((arg4[1] * 0x26)))
	x2123 := (uint64(x1671) * uint64((arg4[9] * 0x13)))
	x2124 := (uint64(x1671) * uint64((arg4[8] * 0x13)))
	x2125 := (uint64(x1671) * uint64((arg4[7] * 0x13)))
	x2126 := (uint64(x1671) * uint64((arg4[6] * 0x13)))
	x2127 := (uint64(x1671) * uint64((arg4[5] * 0x13)))
	x2128 := (uint64(x1671) * uint64((arg4[4] * 0x13)))
	x2129 := (uint64(x1671) * uint64((arg4[3] * 0x13)))
	x2130 := (uint64(x1671) * uint64((arg4[2] * 0x13)))
	x2131 := (uint64(x1670) * uint64((arg4[9] * 0x26)))
	x2132 := (uint64(x1670) * uint64((arg4[8] * 0x13)))
	x2133 := (uint64(x1670) * uint64((arg4[7] * 0x26)))
	x2134 := (uint64(x1670) * uint64((arg4[6] * 0x13)))
	x2135 := (uint64(x1670) * uint64((arg4[5] * 0x26)))
	x2136 := (uint64(x1670) * uint64((arg4[4] * 0x13)))
	x2137 := (uint64(x1670) * uint64((arg4[3] * 0x26)))
	x2138 := (uint64(x1669) * uint64((arg4[9] * 0x13)))
	x2139 := (uint64(x1669) * uint64((arg4[8] * 0x13)))
	x2140 := (uint64(x1669) * uint64((arg4[7] * 0x13)))
	x2141 := (uint64(x1669) * uint64((arg4[6] * 0x13)))
	x2142 := (uint64(x1669) * uint64((arg4[5] * 0x13)))
	x2143 := (uint64(x1669) * uint64((arg4[4] * 0x13)))
	x2144 := (uint64(x1668) * uint64((arg4[9] * 0x26)))
	x2145 := (uint64(x1668) * uint64((arg4[8] * 0x13)))
	x2146 := (uint64(x1668) * uint64((arg4[7] * 0x26)))
	x2147 := (uint64(x1668) * uint64((arg4[6] * 0x13)))
	x2148 := (uint64(x1668) * uint64((arg4[5] * 0x26)))
	x2149 := (uint64(x1667) * uint64((arg4[9] * 0x13)))
	x2150 := (uint64(x1667) * uint64((arg4[8] * 0x13)))
	x2151 := (uint64(x1667) * uint64((arg4[7] * 0x13)))
	x2152 := (uint64(x1667) * uint64((arg4[6] * 0x13)))
	x2153 := (uint64(x1666) * uint64((arg4[9] * 0x26)))
	x2154 := (uint64(x1666) * uint64((arg4[8] * 0x13)))
	x2155 := (uint64(x1666) * uint64((arg4[7] * 0x26)))
	x2156 := (uint64(x1665) * uint64((arg4[9] * 0x13)))
	x2157 := (uint64(x1665) * uint64((arg4[8] * 0x13)))
	x2158 := (uint64(x1664) * uint64((arg4[9] * 0x26)))
	x2159 := (uint64(x1672) * uint64(arg4[0]))
	x2160 := (uint64(x1671) * uint64(arg4[1]))
	x2161 := (uint64(x1671) * uint64(arg4[0]))
	x2162 := (uint64(x1670) * uint64(arg4[2]))
	x2163 := (uint64(x1670) * uint64((arg4[1] * 0x2)))
	x2164 := (uint64(x1670) * uint64(arg4[0]))
	x2165 := (uint64(x1669) * uint64(arg4[3]))
	x2166 := (uint64(x1669) * uint64(arg4[2]))
	x2167 := (uint64(x1669) * uint64(arg4[1]))
	x2168 := (uint64(x1669) * uint64(arg4[0]))
	x2169 := (uint64(x1668) * uint64(arg4[4]))
	x2170 := (uint64(x1668) * uint64((arg4[3] * 0x2)))
	x2171 := (uint64(x1668) * uint64(arg4[2]))
	x2172 := (uint64(x1668) * uint64((arg4[1] * 0x2)))
	x2173 := (uint64(x1668) * uint64(arg4[0]))
	x2174 := (uint64(x1667) * uint64(arg4[5]))
	x2175 := (uint64(x1667) * uint64(arg4[4]))
	x2176 := (uint64(x1667) * uint64(arg4[3]))
	x2177 := (uint64(x1667) * uint64(arg4[2]))
	x2178 := (uint64(x1667) * uint64(arg4[1]))
	x2179 := (uint64(x1667) * uint64(arg4[0]))
	x2180 := (uint64(x1666) * uint64(arg4[6]))
	x2181 := (uint64(x1666) * uint64((arg4[5] * 0x2)))
	x2182 := (uint64(x1666) * uint64(arg4[4]))
	x2183 := (uint64(x1666) * uint64((arg4[3] * 0x2)))
	x2184 := (uint64(x1666) * uint64(arg4[2]))
	x2185 := (uint64(x1666) * uint64((arg4[1] * 0x2)))
	x2186 := (uint64(x1666) * uint64(arg4[0]))
	x2187 := (uint64(x1665) * uint64(arg4[7]))
	x2188 := (uint64(x1665) * uint64(arg4[6]))
	x2189 := (uint64(x1665) * uint64(arg4[5]))
	x2190 := (uint64(x1665) * uint64(arg4[4]))
	x2191 := (uint64(x1665) * uint64(arg4[3]))
	x2192 := (uint64(x1665) * uint64(arg4[2]))
	x2193 := (uint64(x1665) * uint64(arg4[1]))
	x2194 := (uint64(x1665) * uint64(arg4[0]))
	x2195 := (uint64(x1664) * uint64(arg4[8]))
	x2196 := (uint64(x1664) * uint64((arg4[7] * 0x2)))
	x2197 := (uint64(x1664) * uint64(arg4[6]))
	x2198 := (uint64(x1664) * uint64((arg4[5] * 0x2)))
	x2199 := (uint64(x1664) * uint64(arg4[4]))
	x2200 := (uint64(x1664) * uint64((arg4[3] * 0x2)))
	x2201 := (uint64(x1664) * uint64(arg4[2]))
	x2202 := (uint64(x1664) * uint64((arg4[1] * 0x2)))
	x2203 := (uint64(x1664) * uint64(arg4[0]))
	x2204 := (uint64(x1663) * uint64(arg4[9]))
	x2205 := (uint64(x1663) * uint64(arg4[8]))
	x2206 := (uint64(x1663) * uint64(arg4[7]))
	x2207 := (uint64(x1663) * uint64(arg4[6]))
	x2208 := (uint64(x1663) * uint64(arg4[5]))
	x2209 := (uint64(x1663) * uint64(arg4[4]))
	x2210 := (uint64(x1663) * uint64(arg4[3]))
	x2211 := (uint64(x1663) * uint64(arg4[2]))
	x2212 := (uint64(x1663) * uint64(arg4[1]))
	x2213 := (uint64(x1663) * uint64(arg4[0]))
	x2214 := (x2213 + (x2158 + (x2157 + (x2155 + (x2152 + (x2148 + (x2143 + (x2137 + (x2130 + x2122)))))))))
	x2215 := (x2214 >> 26)
	x2216 := (uint32(x2214) & 0x3ffffff)
	x2217 := (x2204 + (x2195 + (x2187 + (x2180 + (x2174 + (x2169 + (x2165 + (x2162 + (x2160 + x2159)))))))))
	x2218 := (x2205 + (x2196 + (x2188 + (x2181 + (x2175 + (x2170 + (x2166 + (x2163 + (x2161 + x2114)))))))))
	x2219 := (x2206 + (x2197 + (x2189 + (x2182 + (x2176 + (x2171 + (x2167 + (x2164 + (x2123 + x2115)))))))))
	x2220 := (x2207 + (x2198 + (x2190 + (x2183 + (x2177 + (x2172 + (x2168 + (x2131 + (x2124 + x2116)))))))))
	x2221 := (x2208 + (x2199 + (x2191 + (x2184 + (x2178 + (x2173 + (x2138 + (x2132 + (x2125 + x2117)))))))))
	x2222 := (x2209 + (x2200 + (x2192 + (x2185 + (x2179 + (x2144 + (x2139 + (x2133 + (x2126 + x2118)))))))))
	x2223 := (x2210 + (x2201 + (x2193 + (x2186 + (x2149 + (x2145 + (x2140 + (x2134 + (x2127 + x2119)))))))))
	x2224 := (x2211 + (x2202 + (x2194 + (x2153 + (x2150 + (x2146 + (x2141 + (x2135 + (x2128 + x2120)))))))))
	x2225 := (x2212 + (x2203 + (x2156 + (x2154 + (x2151 + (x2147 + (x2142 + (x2136 + (x2129 + x2121)))))))))
	x2226 := (x2215 + x2225)
	x2227 := (x2226 >> 25)
	x2228 := (uint32(x2226) & 0x1ffffff)
	x2229 := (x2227 + x2224)
	x2230 := (x2229 >> 26)
	x2231 := (uint32(x2229) & 0x3ffffff)
	x2232 := (x2230 + x2223)
	x2233 := (x2232 >> 25)
	x2234 := (uint32(x2232) & 0x1ffffff)
	x2235 := (x2233 + x2222)
	x2236 := (x2235 >> 26)
	x2237 := (uint32(x2235) & 0x3ffffff)
	x2238 := (x2236 + x2221)
	x2239 := (x2238 >> 25)
	x2240 := (uint32(x2238) & 0x1ffffff)
	x2241 := (x2239 + x2220)
	x2242 := uint32((x2241 >> 26))
	x2243 := (uint32(x2241) & 0x3ffffff)
	x2244 := (uint64(x2242) + x2219)
	x2245 := uint32((x2244 >> 25))
	x2246 := (uint32(x2244) & 0x1ffffff)
	x2247 := (uint64(x2245) + x2218)
	x2248 := uint32((x2247 >> 26))
	x2249 := (uint32(x2247) & 0x3ffffff)
	x2250 := (uint64(x2248) + x2217)
	x2251 := uint32((x2250 >> 25))
	x2252 := (uint32(x2250) & 0x1ffffff)
	x2253 := (uint64(x2251) * uint64(0x13))
	x2254 := (uint64(x2216) + x2253)
	x2255 := uint32((x2254 >> 26))
	x2256 := (uint32(x2254) & 0x3ffffff)
	x2257 := (x2255 + x2228)
	x2258 := uint1((x2257 >> 25))
	x2259 := (x2257 & 0x1ffffff)
	x2260 := (uint32(x2258) + x2231)
	x2261 := (x1815 + x1962)
	x2262 := (x1818 + x1965)
	x2263 := (x1819 + x1966)
	x2264 := (x1793 + x1940)
	x2265 := (x1796 + x1943)
	x2266 := (x1799 + x1946)
	x2267 := (x1802 + x1949)
	x2268 := (x1805 + x1952)
	x2269 := (x1808 + x1955)
	x2270 := (x1811 + x1958)
	x2271 := uint1((x2261 >> 26))
	x2272 := (x2261 & 0x3ffffff)
	x2273 := (uint32(x2271) + x2262)
	x2274 := uint1((x2273 >> 25))
	x2275 := (x2273 & 0x1ffffff)
	x2276 := (uint32(x2274) + x2263)
	x2277 := (x2276 >> 26)
	x2278 := (x2276 & 0x3ffffff)
	x2279 := (x2277 + x2264)
	x2280 := (x2279 >> 25)
	x2281 := (x2279 & 0x1ffffff)
	x2282 := (x2280 + x2265)
	x2283 := (x2282 >> 26)
	x2284 := (x2282 & 0x3ffffff)
	x2285 := (x2283 + x2266)
	x2286 := (x2285 >> 25)
	x2287 := (x2285 & 0x1ffffff)
	x2288 := (x2286 + x2267)
	x2289 := (x2288 >> 26)
	x2290 := (x2288 & 0x3ffffff)
	x2291 := (x2289 + x2268)
	x2292 := (x2291 >> 25)
	x2293 := (x2291 & 0x1ffffff)
	x2294 := (x2292 + x2269)
	x2295 := (x2294 >> 26)
	x2296 := (x2294 & 0x3ffffff)
	x2297 := (x2295 + x2270)
	x2298 := (x2297 >> 25)
	x2299 := (x2297 & 0x1ffffff)
	x2300 := (x2298 * 0x13)
	x2301 := (x2272 + x2300)
	x2302 := uint1((x2301 >> 26))
	x2303 := (x2301 & 0x3ffffff)
	x2304 := (uint32(x2302) + x2275)
	x2305 := uint1((x2304 >> 25))
	x2306 := (x2304 & 0x1ffffff)
	x2307 := (uint32(x2305) + x2278)
	x2308 := (x2109 + x2256)
	x2309 := (x2112 + x2259)
	x2310 := (x2113 + x2260)
	x2311 := (x2087 + x2234)
	x2312 := (x2090 + x2237)
	x2313 := (x2093 + x2240)
	x2314 := (x2096 + x2243)
	x2315 := (x2099 + x2246)
	x2316 := (x2102 + x2249)
	x2317 := (x2105 + x2252)
	x2318 := uint1((x2308 >> 26))
	x2319 := (x2308 & 0x3ffffff)
	x2320 := (uint32(x2318) + x2309)
	x2321 := uint1((x2320 >> 25))
	x2322 := (x2320 & 0x1ffffff)
	x2323 := (uint32(x2321) + x2310)
	x2324 := (x2323 >> 26)
	x2325 := (x2323 & 0x3ffffff)
	x2326 := (x2324 + x2311)
	x2327 := (x2326 >> 25)
	x2328 := (x2326 & 0x1ffffff)
	x2329 := (x2327 + x2312)
	x2330 := (x2329 >> 26)
	x2331 := (x2329 & 0x3ffffff)
	x2332 := (x2330 + x2313)
	x2333 := (x2332 >> 25)
	x2334 := (x2332 & 0x1ffffff)
	x2335 := (x2333 + x2314)
	x2336 := (x2335 >> 26)
	x2337 := (x2335 & 0x3ffffff)
	x2338 := (x2336 + x2315)
	x2339 := (x2338 >> 25)
	x2340 := (x2338 & 0x1ffffff)
	x2341 := (x2339 + x2316)
	x2342 := (x2341 >> 26)
	x2343 := (x2341 & 0x3ffffff)
	x2344 := (x2342 + x2317)
	x2345 := (x2344 >> 25)
	x2346 := (x2344 & 0x1ffffff)
	x2347 := (x2345 * 0x13)
	x2348 := (x2319 + x2347)
	x2349 := uint1((x2348 >> 26))
	x2350 := (x2348 & 0x3ffffff)
	x2351 := (uint32(x2349) + x2322)
	x2352 := uint1((x2351 >> 25))
	x2353 := (x2351 & 0x1ffffff)
	x2354 := (uint32(x2352) + x2325)
	out1[0] = x1535
	out1[1] = x1536
	out1[2] = x1537
	out1[3] = x1538
	out1[4] = x1539
	out1[5] = x1540
	out1[6] = x1541
	out1[7] = x1542
	out1[8] = x1543
	out2[0] = x1544
	out2[1] = x1545
	out2[2] = x1546
	out2[3] = x1547
	out2[4] = x1548
	out2[5] = x1549
	out2[6] = x1550
	out2[7] = x1551
	out2[8] = x1552
	out3[0] = x2303
	out3[1] = x2306
	out3[2] = x2307
	out3[3] = x2281
	out3[4] = x2284
	out3[5] = x2287
	out3[6] = x2290
	out3[7] = x2293
	out3[8] = x2296
	out3[9] = x2299
	out4[0] = x2350
	out4[1] = x2353
	out4[2] = x2354
	out4[3] = x2328
	out4[4] = x2331
	out4[5] = x2334
	out4[6] = x2337
	out4[7] = x2340
	out4[8] = x2343
	out4[9] = x2346
}

// The function OuterLoopBodyHd computes the body of the outer loop in BY-inversion (half-delta jumpdivstep version).
//
// Postconditions:
//   eval arg1 = eval arg2
//
// Input Bounds:
//   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
// Output Bounds:
//   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
//   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
func OuterLoopBodyHd(out1 *[9]uint32, out2 *[9]uint32, out3 *TightFieldElement, out4 *TightFieldElement, arg1 *[9]uint32, arg2 *[9]uint32, arg3 *TightFieldElement, arg4 *TightFieldElement) {
	var x1 uint32
	cmovznzU32(&x1, (uint1(arg2[0]) & 0x1), uint32(0x1), 0xffffffff)
	var x2 uint32
	cmovznzU32(&x2, (uint1(arg2[0]) & 0x1), arg1[0], arg2[0])
	var x3 uint32
	cmovznzU32(&x3, (uint1(arg2[0]) & 0x1), arg2[0], (uint32((uint64((^arg1[0])) + uint64(0x1))) & 0xffffffff))
	var x4 uint1
	cmovznzU1(&x4, (uint1(arg2[0]) & 0x1), 0x1, 0x0)
	var x5 uint1
	cmovznzU1(&x5, (uint1(arg2[0]) & 0x1), 0x0, 0x1)
	var x6 uint32
	cmovznzU32(&x6, (uint1(arg2[0]) & 0x1), uint32(0x0), 0xffffffff)
	var x7 uint1
	cmovznzU1(&x7, (uint1(arg2[0]) & 0x1), 0x1, 0x0)
	var x8 uint32
	cmovznzU32(&x8, (uint1(x3) & 0x1), uint32(0x0), x2)
	var x9 uint1
	cmovznzU1(&x9, (uint1(x3) & 0x1), 0x0, x4)
	var x10 uint1
	cmovznzU1(&x10, (uint1(x3) & 0x1), 0x0, x5)
	x11 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x1))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x12 uint32
	cmovznzU32(&x12, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x1))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x1))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x13 uint32
	cmovznzU32(&x13, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), x2, (((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1)))
	var x14 uint32
	cmovznzU32(&x14, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1)), (uint32((uint64((^x2)) + uint64(0x1))) & 0xffffffff))
	var x15 uint32
	cmovznzU32(&x15, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x4) + uint32(x4)), (uint32((uint64(x6) + uint64(x9))) & 0xffffffff))
	var x16 uint32
	cmovznzU32(&x16, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x5) + uint32(x5)), (uint32(x7) + uint32(x10)))
	var x17 uint32
	cmovznzU32(&x17, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x6) + uint64(x9))) & 0xffffffff), (uint32((uint64((^(uint32(x4) + uint32(x4)))) + uint64(0x1))) & 0xffffffff))
	var x18 uint32
	cmovznzU32(&x18, (uint1((x11 >> 31)) & (uint1((((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x3) + uint64(x8))) & 0xffffffff) >> 1))) & 0x1)), (uint32(x7) + uint32(x10)), (uint32((uint64((^(uint32(x5) + uint32(x5)))) + uint64(0x1))) & 0xffffffff))
	var x19 uint32
	cmovznzU32(&x19, (uint1(x14) & 0x1), uint32(0x0), x13)
	var x20 uint32
	cmovznzU32(&x20, (uint1(x14) & 0x1), uint32(0x0), x15)
	var x21 uint32
	cmovznzU32(&x21, (uint1(x14) & 0x1), uint32(0x0), x16)
	x22 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x12))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x23 uint32
	cmovznzU32(&x23, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x12))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x12))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x24 uint32
	cmovznzU32(&x24, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), x13, (((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1)))
	var x25 uint32
	cmovznzU32(&x25, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1)), (uint32((uint64((^x13)) + uint64(0x1))) & 0xffffffff))
	var x26 uint32
	cmovznzU32(&x26, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x15) + uint64(x15))) & 0xffffffff), (uint32((uint64(x17) + uint64(x20))) & 0xffffffff))
	var x27 uint32
	cmovznzU32(&x27, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (x16 + x16), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff))
	var x28 uint32
	cmovznzU32(&x28, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x17) + uint64(x20))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x15) + uint64(x15))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x29 uint32
	cmovznzU32(&x29, (uint1((x22 >> 31)) & (uint1((((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x14) + uint64(x19))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x18) + uint64(x21))) & 0xffffffff), (uint32((uint64((^(x16 + x16))) + uint64(0x1))) & 0xffffffff))
	var x30 uint32
	cmovznzU32(&x30, (uint1(x25) & 0x1), uint32(0x0), x24)
	var x31 uint32
	cmovznzU32(&x31, (uint1(x25) & 0x1), uint32(0x0), x26)
	var x32 uint32
	cmovznzU32(&x32, (uint1(x25) & 0x1), uint32(0x0), x27)
	x33 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x23))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x34 uint32
	cmovznzU32(&x34, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x23))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x23))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x35 uint32
	cmovznzU32(&x35, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), x24, (((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1)))
	var x36 uint32
	cmovznzU32(&x36, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1)), (uint32((uint64((^x24)) + uint64(0x1))) & 0xffffffff))
	var x37 uint32
	cmovznzU32(&x37, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x26) + uint64(x26))) & 0xffffffff), (uint32((uint64(x28) + uint64(x31))) & 0xffffffff))
	var x38 uint32
	cmovznzU32(&x38, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x27) + uint64(x27))) & 0xffffffff), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff))
	var x39 uint32
	cmovznzU32(&x39, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x28) + uint64(x31))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x26) + uint64(x26))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x40 uint32
	cmovznzU32(&x40, (uint1((x33 >> 31)) & (uint1((((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x25) + uint64(x30))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x29) + uint64(x32))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x27) + uint64(x27))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x41 uint32
	cmovznzU32(&x41, (uint1(x36) & 0x1), uint32(0x0), x35)
	var x42 uint32
	cmovznzU32(&x42, (uint1(x36) & 0x1), uint32(0x0), x37)
	var x43 uint32
	cmovznzU32(&x43, (uint1(x36) & 0x1), uint32(0x0), x38)
	x44 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x34))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x45 uint32
	cmovznzU32(&x45, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x34))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x34))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x46 uint32
	cmovznzU32(&x46, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), x35, (((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1)))
	var x47 uint32
	cmovznzU32(&x47, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1)), (uint32((uint64((^x35)) + uint64(0x1))) & 0xffffffff))
	var x48 uint32
	cmovznzU32(&x48, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x37) + uint64(x37))) & 0xffffffff), (uint32((uint64(x39) + uint64(x42))) & 0xffffffff))
	var x49 uint32
	cmovznzU32(&x49, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x38) + uint64(x38))) & 0xffffffff), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff))
	var x50 uint32
	cmovznzU32(&x50, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x39) + uint64(x42))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x37) + uint64(x37))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x51 uint32
	cmovznzU32(&x51, (uint1((x44 >> 31)) & (uint1((((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x36) + uint64(x41))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x40) + uint64(x43))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x38) + uint64(x38))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x52 uint32
	cmovznzU32(&x52, (uint1(x47) & 0x1), uint32(0x0), x46)
	var x53 uint32
	cmovznzU32(&x53, (uint1(x47) & 0x1), uint32(0x0), x48)
	var x54 uint32
	cmovznzU32(&x54, (uint1(x47) & 0x1), uint32(0x0), x49)
	x55 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x45))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x56 uint32
	cmovznzU32(&x56, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x45))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x45))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x57 uint32
	cmovznzU32(&x57, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), x46, (((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1)))
	var x58 uint32
	cmovznzU32(&x58, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1)), (uint32((uint64((^x46)) + uint64(0x1))) & 0xffffffff))
	var x59 uint32
	cmovznzU32(&x59, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x48) + uint64(x48))) & 0xffffffff), (uint32((uint64(x50) + uint64(x53))) & 0xffffffff))
	var x60 uint32
	cmovznzU32(&x60, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x49) + uint64(x49))) & 0xffffffff), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff))
	var x61 uint32
	cmovznzU32(&x61, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x50) + uint64(x53))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x48) + uint64(x48))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x62 uint32
	cmovznzU32(&x62, (uint1((x55 >> 31)) & (uint1((((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x47) + uint64(x52))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x51) + uint64(x54))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x49) + uint64(x49))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x63 uint32
	cmovznzU32(&x63, (uint1(x58) & 0x1), uint32(0x0), x57)
	var x64 uint32
	cmovznzU32(&x64, (uint1(x58) & 0x1), uint32(0x0), x59)
	var x65 uint32
	cmovznzU32(&x65, (uint1(x58) & 0x1), uint32(0x0), x60)
	x66 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x56))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x67 uint32
	cmovznzU32(&x67, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x56))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x56))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x68 uint32
	cmovznzU32(&x68, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), x57, (((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1)))
	var x69 uint32
	cmovznzU32(&x69, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1)), (uint32((uint64((^x57)) + uint64(0x1))) & 0xffffffff))
	var x70 uint32
	cmovznzU32(&x70, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x59) + uint64(x59))) & 0xffffffff), (uint32((uint64(x61) + uint64(x64))) & 0xffffffff))
	var x71 uint32
	cmovznzU32(&x71, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x60) + uint64(x60))) & 0xffffffff), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff))
	var x72 uint32
	cmovznzU32(&x72, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x61) + uint64(x64))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x59) + uint64(x59))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x73 uint32
	cmovznzU32(&x73, (uint1((x66 >> 31)) & (uint1((((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x58) + uint64(x63))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x62) + uint64(x65))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x60) + uint64(x60))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x74 uint32
	cmovznzU32(&x74, (uint1(x69) & 0x1), uint32(0x0), x68)
	var x75 uint32
	cmovznzU32(&x75, (uint1(x69) & 0x1), uint32(0x0), x70)
	var x76 uint32
	cmovznzU32(&x76, (uint1(x69) & 0x1), uint32(0x0), x71)
	x77 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x67))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x78 uint32
	cmovznzU32(&x78, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x67))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x67))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x79 uint32
	cmovznzU32(&x79, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), x68, (((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1)))
	var x80 uint32
	cmovznzU32(&x80, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1)), (uint32((uint64((^x68)) + uint64(0x1))) & 0xffffffff))
	var x81 uint32
	cmovznzU32(&x81, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x70) + uint64(x70))) & 0xffffffff), (uint32((uint64(x72) + uint64(x75))) & 0xffffffff))
	var x82 uint32
	cmovznzU32(&x82, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x71) + uint64(x71))) & 0xffffffff), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff))
	var x83 uint32
	cmovznzU32(&x83, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x72) + uint64(x75))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x70) + uint64(x70))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x84 uint32
	cmovznzU32(&x84, (uint1((x77 >> 31)) & (uint1((((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x69) + uint64(x74))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x73) + uint64(x76))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x71) + uint64(x71))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x85 uint32
	cmovznzU32(&x85, (uint1(x80) & 0x1), uint32(0x0), x79)
	var x86 uint32
	cmovznzU32(&x86, (uint1(x80) & 0x1), uint32(0x0), x81)
	var x87 uint32
	cmovznzU32(&x87, (uint1(x80) & 0x1), uint32(0x0), x82)
	x88 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x78))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x89 uint32
	cmovznzU32(&x89, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x78))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x78))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x90 uint32
	cmovznzU32(&x90, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), x79, (((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1)))
	var x91 uint32
	cmovznzU32(&x91, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1)), (uint32((uint64((^x79)) + uint64(0x1))) & 0xffffffff))
	var x92 uint32
	cmovznzU32(&x92, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x81) + uint64(x81))) & 0xffffffff), (uint32((uint64(x83) + uint64(x86))) & 0xffffffff))
	var x93 uint32
	cmovznzU32(&x93, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x82) + uint64(x82))) & 0xffffffff), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff))
	var x94 uint32
	cmovznzU32(&x94, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x83) + uint64(x86))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x81) + uint64(x81))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x95 uint32
	cmovznzU32(&x95, (uint1((x88 >> 31)) & (uint1((((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x80) + uint64(x85))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x84) + uint64(x87))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x82) + uint64(x82))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x96 uint32
	cmovznzU32(&x96, (uint1(x91) & 0x1), uint32(0x0), x90)
	var x97 uint32
	cmovznzU32(&x97, (uint1(x91) & 0x1), uint32(0x0), x92)
	var x98 uint32
	cmovznzU32(&x98, (uint1(x91) & 0x1), uint32(0x0), x93)
	x99 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x89))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x100 uint32
	cmovznzU32(&x100, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x89))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x89))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x101 uint32
	cmovznzU32(&x101, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), x90, (((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1)))
	var x102 uint32
	cmovznzU32(&x102, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1)), (uint32((uint64((^x90)) + uint64(0x1))) & 0xffffffff))
	var x103 uint32
	cmovznzU32(&x103, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x92) + uint64(x92))) & 0xffffffff), (uint32((uint64(x94) + uint64(x97))) & 0xffffffff))
	var x104 uint32
	cmovznzU32(&x104, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x93) + uint64(x93))) & 0xffffffff), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff))
	var x105 uint32
	cmovznzU32(&x105, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x94) + uint64(x97))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x92) + uint64(x92))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x106 uint32
	cmovznzU32(&x106, (uint1((x99 >> 31)) & (uint1((((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x91) + uint64(x96))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x95) + uint64(x98))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x93) + uint64(x93))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x107 uint32
	cmovznzU32(&x107, (uint1(x102) & 0x1), uint32(0x0), x101)
	var x108 uint32
	cmovznzU32(&x108, (uint1(x102) & 0x1), uint32(0x0), x103)
	var x109 uint32
	cmovznzU32(&x109, (uint1(x102) & 0x1), uint32(0x0), x104)
	x110 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x100))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x111 uint32
	cmovznzU32(&x111, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x100))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x100))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x112 uint32
	cmovznzU32(&x112, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), x101, (((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1)))
	var x113 uint32
	cmovznzU32(&x113, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1)), (uint32((uint64((^x101)) + uint64(0x1))) & 0xffffffff))
	var x114 uint32
	cmovznzU32(&x114, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x103) + uint64(x103))) & 0xffffffff), (uint32((uint64(x105) + uint64(x108))) & 0xffffffff))
	var x115 uint32
	cmovznzU32(&x115, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x104) + uint64(x104))) & 0xffffffff), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff))
	var x116 uint32
	cmovznzU32(&x116, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x105) + uint64(x108))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x103) + uint64(x103))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x117 uint32
	cmovznzU32(&x117, (uint1((x110 >> 31)) & (uint1((((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x102) + uint64(x107))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x106) + uint64(x109))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x104) + uint64(x104))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x118 uint32
	cmovznzU32(&x118, (uint1(x113) & 0x1), uint32(0x0), x112)
	var x119 uint32
	cmovznzU32(&x119, (uint1(x113) & 0x1), uint32(0x0), x114)
	var x120 uint32
	cmovznzU32(&x120, (uint1(x113) & 0x1), uint32(0x0), x115)
	x121 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x111))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x122 uint32
	cmovznzU32(&x122, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x111))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x111))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x123 uint32
	cmovznzU32(&x123, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), x112, (((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1)))
	var x124 uint32
	cmovznzU32(&x124, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1)), (uint32((uint64((^x112)) + uint64(0x1))) & 0xffffffff))
	var x125 uint32
	cmovznzU32(&x125, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x114) + uint64(x114))) & 0xffffffff), (uint32((uint64(x116) + uint64(x119))) & 0xffffffff))
	var x126 uint32
	cmovznzU32(&x126, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x115) + uint64(x115))) & 0xffffffff), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff))
	var x127 uint32
	cmovznzU32(&x127, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x116) + uint64(x119))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x114) + uint64(x114))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x128 uint32
	cmovznzU32(&x128, (uint1((x121 >> 31)) & (uint1((((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x113) + uint64(x118))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x117) + uint64(x120))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x115) + uint64(x115))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x129 uint32
	cmovznzU32(&x129, (uint1(x124) & 0x1), uint32(0x0), x123)
	var x130 uint32
	cmovznzU32(&x130, (uint1(x124) & 0x1), uint32(0x0), x125)
	var x131 uint32
	cmovznzU32(&x131, (uint1(x124) & 0x1), uint32(0x0), x126)
	x132 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x122))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x133 uint32
	cmovznzU32(&x133, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x122))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x122))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x134 uint32
	cmovznzU32(&x134, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), x123, (((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1)))
	var x135 uint32
	cmovznzU32(&x135, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1)), (uint32((uint64((^x123)) + uint64(0x1))) & 0xffffffff))
	var x136 uint32
	cmovznzU32(&x136, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x125) + uint64(x125))) & 0xffffffff), (uint32((uint64(x127) + uint64(x130))) & 0xffffffff))
	var x137 uint32
	cmovznzU32(&x137, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x126) + uint64(x126))) & 0xffffffff), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff))
	var x138 uint32
	cmovznzU32(&x138, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x127) + uint64(x130))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x125) + uint64(x125))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x139 uint32
	cmovznzU32(&x139, (uint1((x132 >> 31)) & (uint1((((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x124) + uint64(x129))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x128) + uint64(x131))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x126) + uint64(x126))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x140 uint32
	cmovznzU32(&x140, (uint1(x135) & 0x1), uint32(0x0), x134)
	var x141 uint32
	cmovznzU32(&x141, (uint1(x135) & 0x1), uint32(0x0), x136)
	var x142 uint32
	cmovznzU32(&x142, (uint1(x135) & 0x1), uint32(0x0), x137)
	x143 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x133))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x144 uint32
	cmovznzU32(&x144, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x133))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x133))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x145 uint32
	cmovznzU32(&x145, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), x134, (((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1)))
	var x146 uint32
	cmovznzU32(&x146, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1)), (uint32((uint64((^x134)) + uint64(0x1))) & 0xffffffff))
	var x147 uint32
	cmovznzU32(&x147, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x136) + uint64(x136))) & 0xffffffff), (uint32((uint64(x138) + uint64(x141))) & 0xffffffff))
	var x148 uint32
	cmovznzU32(&x148, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x137) + uint64(x137))) & 0xffffffff), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff))
	var x149 uint32
	cmovznzU32(&x149, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x138) + uint64(x141))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x136) + uint64(x136))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x150 uint32
	cmovznzU32(&x150, (uint1((x143 >> 31)) & (uint1((((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x135) + uint64(x140))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x139) + uint64(x142))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x137) + uint64(x137))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x151 uint32
	cmovznzU32(&x151, (uint1(x146) & 0x1), uint32(0x0), x145)
	var x152 uint32
	cmovznzU32(&x152, (uint1(x146) & 0x1), uint32(0x0), x147)
	var x153 uint32
	cmovznzU32(&x153, (uint1(x146) & 0x1), uint32(0x0), x148)
	x154 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x144))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x155 uint32
	cmovznzU32(&x155, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x144))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x144))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x156 uint32
	cmovznzU32(&x156, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), x145, (((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1)))
	var x157 uint32
	cmovznzU32(&x157, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1)), (uint32((uint64((^x145)) + uint64(0x1))) & 0xffffffff))
	var x158 uint32
	cmovznzU32(&x158, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x147) + uint64(x147))) & 0xffffffff), (uint32((uint64(x149) + uint64(x152))) & 0xffffffff))
	var x159 uint32
	cmovznzU32(&x159, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x148) + uint64(x148))) & 0xffffffff), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff))
	var x160 uint32
	cmovznzU32(&x160, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x149) + uint64(x152))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x147) + uint64(x147))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x161 uint32
	cmovznzU32(&x161, (uint1((x154 >> 31)) & (uint1((((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x146) + uint64(x151))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x150) + uint64(x153))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x148) + uint64(x148))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x162 uint32
	cmovznzU32(&x162, (uint1(x157) & 0x1), uint32(0x0), x156)
	var x163 uint32
	cmovznzU32(&x163, (uint1(x157) & 0x1), uint32(0x0), x158)
	var x164 uint32
	cmovznzU32(&x164, (uint1(x157) & 0x1), uint32(0x0), x159)
	x165 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x155))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x166 uint32
	cmovznzU32(&x166, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x155))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x155))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x167 uint32
	cmovznzU32(&x167, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), x156, (((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1)))
	var x168 uint32
	cmovznzU32(&x168, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1)), (uint32((uint64((^x156)) + uint64(0x1))) & 0xffffffff))
	var x169 uint32
	cmovznzU32(&x169, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x158) + uint64(x158))) & 0xffffffff), (uint32((uint64(x160) + uint64(x163))) & 0xffffffff))
	var x170 uint32
	cmovznzU32(&x170, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x159) + uint64(x159))) & 0xffffffff), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff))
	var x171 uint32
	cmovznzU32(&x171, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x160) + uint64(x163))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x158) + uint64(x158))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x172 uint32
	cmovznzU32(&x172, (uint1((x165 >> 31)) & (uint1((((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x157) + uint64(x162))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x161) + uint64(x164))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x159) + uint64(x159))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x173 uint32
	cmovznzU32(&x173, (uint1(x168) & 0x1), uint32(0x0), x167)
	var x174 uint32
	cmovznzU32(&x174, (uint1(x168) & 0x1), uint32(0x0), x169)
	var x175 uint32
	cmovznzU32(&x175, (uint1(x168) & 0x1), uint32(0x0), x170)
	x176 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x166))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x177 uint32
	cmovznzU32(&x177, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x166))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x166))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x178 uint32
	cmovznzU32(&x178, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), x167, (((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1)))
	var x179 uint32
	cmovznzU32(&x179, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1)), (uint32((uint64((^x167)) + uint64(0x1))) & 0xffffffff))
	var x180 uint32
	cmovznzU32(&x180, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x169) + uint64(x169))) & 0xffffffff), (uint32((uint64(x171) + uint64(x174))) & 0xffffffff))
	var x181 uint32
	cmovznzU32(&x181, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x170) + uint64(x170))) & 0xffffffff), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff))
	var x182 uint32
	cmovznzU32(&x182, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x171) + uint64(x174))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x169) + uint64(x169))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x183 uint32
	cmovznzU32(&x183, (uint1((x176 >> 31)) & (uint1((((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x168) + uint64(x173))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x172) + uint64(x175))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x170) + uint64(x170))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x184 uint32
	cmovznzU32(&x184, (uint1(x179) & 0x1), uint32(0x0), x178)
	var x185 uint32
	cmovznzU32(&x185, (uint1(x179) & 0x1), uint32(0x0), x180)
	var x186 uint32
	cmovznzU32(&x186, (uint1(x179) & 0x1), uint32(0x0), x181)
	x187 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x177))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x188 uint32
	cmovznzU32(&x188, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x177))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x177))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x189 uint32
	cmovznzU32(&x189, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), x178, (((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1)))
	var x190 uint32
	cmovznzU32(&x190, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1)), (uint32((uint64((^x178)) + uint64(0x1))) & 0xffffffff))
	var x191 uint32
	cmovznzU32(&x191, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x180) + uint64(x180))) & 0xffffffff), (uint32((uint64(x182) + uint64(x185))) & 0xffffffff))
	var x192 uint32
	cmovznzU32(&x192, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x181) + uint64(x181))) & 0xffffffff), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff))
	var x193 uint32
	cmovznzU32(&x193, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x182) + uint64(x185))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x180) + uint64(x180))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x194 uint32
	cmovznzU32(&x194, (uint1((x187 >> 31)) & (uint1((((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x179) + uint64(x184))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x183) + uint64(x186))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x181) + uint64(x181))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x195 uint32
	cmovznzU32(&x195, (uint1(x190) & 0x1), uint32(0x0), x189)
	var x196 uint32
	cmovznzU32(&x196, (uint1(x190) & 0x1), uint32(0x0), x191)
	var x197 uint32
	cmovznzU32(&x197, (uint1(x190) & 0x1), uint32(0x0), x192)
	x198 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x188))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x199 uint32
	cmovznzU32(&x199, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x188))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x188))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x200 uint32
	cmovznzU32(&x200, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), x189, (((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1)))
	var x201 uint32
	cmovznzU32(&x201, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1)), (uint32((uint64((^x189)) + uint64(0x1))) & 0xffffffff))
	var x202 uint32
	cmovznzU32(&x202, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x191) + uint64(x191))) & 0xffffffff), (uint32((uint64(x193) + uint64(x196))) & 0xffffffff))
	var x203 uint32
	cmovznzU32(&x203, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x192) + uint64(x192))) & 0xffffffff), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff))
	var x204 uint32
	cmovznzU32(&x204, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x193) + uint64(x196))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x191) + uint64(x191))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x205 uint32
	cmovznzU32(&x205, (uint1((x198 >> 31)) & (uint1((((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x190) + uint64(x195))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x194) + uint64(x197))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x192) + uint64(x192))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x206 uint32
	cmovznzU32(&x206, (uint1(x201) & 0x1), uint32(0x0), x200)
	var x207 uint32
	cmovznzU32(&x207, (uint1(x201) & 0x1), uint32(0x0), x202)
	var x208 uint32
	cmovznzU32(&x208, (uint1(x201) & 0x1), uint32(0x0), x203)
	x209 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x199))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x210 uint32
	cmovznzU32(&x210, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x199))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x199))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x211 uint32
	cmovznzU32(&x211, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), x200, (((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1)))
	var x212 uint32
	cmovznzU32(&x212, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1)), (uint32((uint64((^x200)) + uint64(0x1))) & 0xffffffff))
	var x213 uint32
	cmovznzU32(&x213, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x202) + uint64(x202))) & 0xffffffff), (uint32((uint64(x204) + uint64(x207))) & 0xffffffff))
	var x214 uint32
	cmovznzU32(&x214, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x203) + uint64(x203))) & 0xffffffff), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff))
	var x215 uint32
	cmovznzU32(&x215, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x204) + uint64(x207))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x202) + uint64(x202))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x216 uint32
	cmovznzU32(&x216, (uint1((x209 >> 31)) & (uint1((((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x201) + uint64(x206))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x205) + uint64(x208))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x203) + uint64(x203))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x217 uint32
	cmovznzU32(&x217, (uint1(x212) & 0x1), uint32(0x0), x211)
	var x218 uint32
	cmovznzU32(&x218, (uint1(x212) & 0x1), uint32(0x0), x213)
	var x219 uint32
	cmovznzU32(&x219, (uint1(x212) & 0x1), uint32(0x0), x214)
	x220 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x210))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x221 uint32
	cmovznzU32(&x221, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x210))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x210))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x222 uint32
	cmovznzU32(&x222, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), x211, (((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1)))
	var x223 uint32
	cmovznzU32(&x223, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1)), (uint32((uint64((^x211)) + uint64(0x1))) & 0xffffffff))
	var x224 uint32
	cmovznzU32(&x224, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x213) + uint64(x213))) & 0xffffffff), (uint32((uint64(x215) + uint64(x218))) & 0xffffffff))
	var x225 uint32
	cmovznzU32(&x225, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x214) + uint64(x214))) & 0xffffffff), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff))
	var x226 uint32
	cmovznzU32(&x226, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x215) + uint64(x218))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x213) + uint64(x213))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x227 uint32
	cmovznzU32(&x227, (uint1((x220 >> 31)) & (uint1((((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x212) + uint64(x217))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x216) + uint64(x219))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x214) + uint64(x214))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x228 uint32
	cmovznzU32(&x228, (uint1(x223) & 0x1), uint32(0x0), x222)
	var x229 uint32
	cmovznzU32(&x229, (uint1(x223) & 0x1), uint32(0x0), x224)
	var x230 uint32
	cmovznzU32(&x230, (uint1(x223) & 0x1), uint32(0x0), x225)
	x231 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x221))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x232 uint32
	cmovznzU32(&x232, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x221))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x221))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x233 uint32
	cmovznzU32(&x233, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), x222, (((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1)))
	var x234 uint32
	cmovznzU32(&x234, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1)), (uint32((uint64((^x222)) + uint64(0x1))) & 0xffffffff))
	var x235 uint32
	cmovznzU32(&x235, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x224) + uint64(x224))) & 0xffffffff), (uint32((uint64(x226) + uint64(x229))) & 0xffffffff))
	var x236 uint32
	cmovznzU32(&x236, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x225) + uint64(x225))) & 0xffffffff), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff))
	var x237 uint32
	cmovznzU32(&x237, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x226) + uint64(x229))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x224) + uint64(x224))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x238 uint32
	cmovznzU32(&x238, (uint1((x231 >> 31)) & (uint1((((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x223) + uint64(x228))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x227) + uint64(x230))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x225) + uint64(x225))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x239 uint32
	cmovznzU32(&x239, (uint1(x234) & 0x1), uint32(0x0), x233)
	var x240 uint32
	cmovznzU32(&x240, (uint1(x234) & 0x1), uint32(0x0), x235)
	var x241 uint32
	cmovznzU32(&x241, (uint1(x234) & 0x1), uint32(0x0), x236)
	x242 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x232))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x243 uint32
	cmovznzU32(&x243, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x232))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x232))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x244 uint32
	cmovznzU32(&x244, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), x233, (((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1)))
	var x245 uint32
	cmovznzU32(&x245, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1)), (uint32((uint64((^x233)) + uint64(0x1))) & 0xffffffff))
	var x246 uint32
	cmovznzU32(&x246, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x235) + uint64(x235))) & 0xffffffff), (uint32((uint64(x237) + uint64(x240))) & 0xffffffff))
	var x247 uint32
	cmovznzU32(&x247, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x236) + uint64(x236))) & 0xffffffff), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff))
	var x248 uint32
	cmovznzU32(&x248, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x237) + uint64(x240))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x235) + uint64(x235))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x249 uint32
	cmovznzU32(&x249, (uint1((x242 >> 31)) & (uint1((((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x234) + uint64(x239))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x238) + uint64(x241))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x236) + uint64(x236))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x250 uint32
	cmovznzU32(&x250, (uint1(x245) & 0x1), uint32(0x0), x244)
	var x251 uint32
	cmovznzU32(&x251, (uint1(x245) & 0x1), uint32(0x0), x246)
	var x252 uint32
	cmovznzU32(&x252, (uint1(x245) & 0x1), uint32(0x0), x247)
	x253 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x243))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x254 uint32
	cmovznzU32(&x254, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x243))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x243))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x255 uint32
	cmovznzU32(&x255, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), x244, (((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1)))
	var x256 uint32
	cmovznzU32(&x256, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1)), (uint32((uint64((^x244)) + uint64(0x1))) & 0xffffffff))
	var x257 uint32
	cmovznzU32(&x257, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x246) + uint64(x246))) & 0xffffffff), (uint32((uint64(x248) + uint64(x251))) & 0xffffffff))
	var x258 uint32
	cmovznzU32(&x258, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x247) + uint64(x247))) & 0xffffffff), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff))
	var x259 uint32
	cmovznzU32(&x259, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x248) + uint64(x251))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x246) + uint64(x246))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x260 uint32
	cmovznzU32(&x260, (uint1((x253 >> 31)) & (uint1((((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x245) + uint64(x250))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x249) + uint64(x252))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x247) + uint64(x247))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x261 uint32
	cmovznzU32(&x261, (uint1(x256) & 0x1), uint32(0x0), x255)
	var x262 uint32
	cmovznzU32(&x262, (uint1(x256) & 0x1), uint32(0x0), x257)
	var x263 uint32
	cmovznzU32(&x263, (uint1(x256) & 0x1), uint32(0x0), x258)
	x264 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x254))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x265 uint32
	cmovznzU32(&x265, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x254))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x254))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x266 uint32
	cmovznzU32(&x266, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), x255, (((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1)))
	var x267 uint32
	cmovznzU32(&x267, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1)), (uint32((uint64((^x255)) + uint64(0x1))) & 0xffffffff))
	var x268 uint32
	cmovznzU32(&x268, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x257) + uint64(x257))) & 0xffffffff), (uint32((uint64(x259) + uint64(x262))) & 0xffffffff))
	var x269 uint32
	cmovznzU32(&x269, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x258) + uint64(x258))) & 0xffffffff), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff))
	var x270 uint32
	cmovznzU32(&x270, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x259) + uint64(x262))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x257) + uint64(x257))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x271 uint32
	cmovznzU32(&x271, (uint1((x264 >> 31)) & (uint1((((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x256) + uint64(x261))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x260) + uint64(x263))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x258) + uint64(x258))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x272 uint32
	cmovznzU32(&x272, (uint1(x267) & 0x1), uint32(0x0), x266)
	var x273 uint32
	cmovznzU32(&x273, (uint1(x267) & 0x1), uint32(0x0), x268)
	var x274 uint32
	cmovznzU32(&x274, (uint1(x267) & 0x1), uint32(0x0), x269)
	x275 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x265))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x276 uint32
	cmovznzU32(&x276, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x265))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x265))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x277 uint32
	cmovznzU32(&x277, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), x266, (((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1)))
	var x278 uint32
	cmovznzU32(&x278, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1)), (uint32((uint64((^x266)) + uint64(0x1))) & 0xffffffff))
	var x279 uint32
	cmovznzU32(&x279, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x268) + uint64(x268))) & 0xffffffff), (uint32((uint64(x270) + uint64(x273))) & 0xffffffff))
	var x280 uint32
	cmovznzU32(&x280, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x269) + uint64(x269))) & 0xffffffff), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff))
	var x281 uint32
	cmovznzU32(&x281, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x270) + uint64(x273))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x268) + uint64(x268))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x282 uint32
	cmovznzU32(&x282, (uint1((x275 >> 31)) & (uint1((((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x267) + uint64(x272))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x271) + uint64(x274))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x269) + uint64(x269))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x283 uint32
	cmovznzU32(&x283, (uint1(x278) & 0x1), uint32(0x0), x277)
	var x284 uint32
	cmovznzU32(&x284, (uint1(x278) & 0x1), uint32(0x0), x279)
	var x285 uint32
	cmovznzU32(&x285, (uint1(x278) & 0x1), uint32(0x0), x280)
	x286 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x276))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x287 uint32
	cmovznzU32(&x287, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x276))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x276))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x288 uint32
	cmovznzU32(&x288, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), x277, (((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1)))
	var x289 uint32
	cmovznzU32(&x289, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1)), (uint32((uint64((^x277)) + uint64(0x1))) & 0xffffffff))
	var x290 uint32
	cmovznzU32(&x290, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x279) + uint64(x279))) & 0xffffffff), (uint32((uint64(x281) + uint64(x284))) & 0xffffffff))
	var x291 uint32
	cmovznzU32(&x291, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x280) + uint64(x280))) & 0xffffffff), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff))
	var x292 uint32
	cmovznzU32(&x292, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x281) + uint64(x284))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x279) + uint64(x279))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x293 uint32
	cmovznzU32(&x293, (uint1((x286 >> 31)) & (uint1((((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x278) + uint64(x283))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x282) + uint64(x285))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x280) + uint64(x280))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x294 uint32
	cmovznzU32(&x294, (uint1(x289) & 0x1), uint32(0x0), x288)
	var x295 uint32
	cmovznzU32(&x295, (uint1(x289) & 0x1), uint32(0x0), x290)
	var x296 uint32
	cmovznzU32(&x296, (uint1(x289) & 0x1), uint32(0x0), x291)
	x297 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x287))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x298 uint32
	cmovznzU32(&x298, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x287))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x287))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x299 uint32
	cmovznzU32(&x299, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), x288, (((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1)))
	var x300 uint32
	cmovznzU32(&x300, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1)), (uint32((uint64((^x288)) + uint64(0x1))) & 0xffffffff))
	var x301 uint32
	cmovznzU32(&x301, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x290) + uint64(x290))) & 0xffffffff), (uint32((uint64(x292) + uint64(x295))) & 0xffffffff))
	var x302 uint32
	cmovznzU32(&x302, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x291) + uint64(x291))) & 0xffffffff), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff))
	var x303 uint32
	cmovznzU32(&x303, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x292) + uint64(x295))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x290) + uint64(x290))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x304 uint32
	cmovznzU32(&x304, (uint1((x297 >> 31)) & (uint1((((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x289) + uint64(x294))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x293) + uint64(x296))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x291) + uint64(x291))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x305 uint32
	cmovznzU32(&x305, (uint1(x300) & 0x1), uint32(0x0), x299)
	var x306 uint32
	cmovznzU32(&x306, (uint1(x300) & 0x1), uint32(0x0), x301)
	var x307 uint32
	cmovznzU32(&x307, (uint1(x300) & 0x1), uint32(0x0), x302)
	x308 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x298))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x309 uint32
	cmovznzU32(&x309, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(0x2) + uint64(x298))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(0x2) + uint64(x298))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x310 uint32
	cmovznzU32(&x310, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), x299, (((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1)))
	var x311 uint32
	cmovznzU32(&x311, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1)), (uint32((uint64((^x299)) + uint64(0x1))) & 0xffffffff))
	var x312 uint32
	cmovznzU32(&x312, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x301) + uint64(x301))) & 0xffffffff), (uint32((uint64(x303) + uint64(x306))) & 0xffffffff))
	var x313 uint32
	cmovznzU32(&x313, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x302) + uint64(x302))) & 0xffffffff), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff))
	var x314 uint32
	cmovznzU32(&x314, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x303) + uint64(x306))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x301) + uint64(x301))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x315 uint32
	cmovznzU32(&x315, (uint1((x308 >> 31)) & (uint1((((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x300) + uint64(x305))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x304) + uint64(x307))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x302) + uint64(x302))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x316 uint32
	cmovznzU32(&x316, (uint1(x311) & 0x1), uint32(0x0), x310)
	var x317 uint32
	cmovznzU32(&x317, (uint1(x311) & 0x1), uint32(0x0), x312)
	var x318 uint32
	cmovznzU32(&x318, (uint1(x311) & 0x1), uint32(0x0), x313)
	x319 := (uint32((uint64((^(uint32((uint64(0x2) + uint64(x309))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	var x320 uint32
	cmovznzU32(&x320, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1)), (uint32((uint64((^x310)) + uint64(0x1))) & 0xffffffff))
	var x321 uint32
	cmovznzU32(&x321, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x312) + uint64(x312))) & 0xffffffff), (uint32((uint64(x314) + uint64(x317))) & 0xffffffff))
	var x322 uint32
	cmovznzU32(&x322, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x313) + uint64(x313))) & 0xffffffff), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff))
	var x323 uint32
	cmovznzU32(&x323, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x314) + uint64(x317))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x312) + uint64(x312))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x324 uint32
	cmovznzU32(&x324, (uint1((x319 >> 31)) & (uint1((((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) & 0x80000000) | ((uint32((uint64(x311) + uint64(x316))) & 0xffffffff) >> 1))) & 0x1)), (uint32((uint64(x315) + uint64(x318))) & 0xffffffff), (uint32((uint64((^(uint32((uint64(x313) + uint64(x313))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff))
	var x325 uint32
	cmovznzU32(&x325, (uint1(x320) & 0x1), uint32(0x0), x321)
	var x326 uint32
	cmovznzU32(&x326, (uint1(x320) & 0x1), uint32(0x0), x322)
	var x327 uint32
	cmovznzU32(&x327, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x328 uint32
	cmovznzU32(&x328, uint1(((uint32((uint64(x321) + uint64(x321))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x329 uint32
	_, x329 = bits.Mul32(x328, arg1[0])
	var x331 uint32
	_, x331 = bits.Mul32(x328, arg1[1])
	var x333 uint32
	var x334 uint32
	x334, x333 = bits.Mul32(x328, arg1[0])
	var x335 uint32
	_, x335 = bits.Mul32(x328, arg1[2])
	var x337 uint32
	var x338 uint32
	x338, x337 = bits.Mul32(x328, arg1[1])
	var x339 uint32
	var x340 uint32
	x340, x339 = bits.Mul32(x328, arg1[0])
	var x341 uint32
	_, x341 = bits.Mul32(x328, arg1[3])
	var x343 uint32
	var x344 uint32
	x344, x343 = bits.Mul32(x328, arg1[2])
	var x345 uint32
	var x346 uint32
	x346, x345 = bits.Mul32(x328, arg1[1])
	var x347 uint32
	var x348 uint32
	x348, x347 = bits.Mul32(x328, arg1[0])
	var x349 uint32
	_, x349 = bits.Mul32(x328, arg1[4])
	var x351 uint32
	var x352 uint32
	x352, x351 = bits.Mul32(x328, arg1[3])
	var x353 uint32
	var x354 uint32
	x354, x353 = bits.Mul32(x328, arg1[2])
	var x355 uint32
	var x356 uint32
	x356, x355 = bits.Mul32(x328, arg1[1])
	var x357 uint32
	var x358 uint32
	x358, x357 = bits.Mul32(x328, arg1[0])
	var x359 uint32
	_, x359 = bits.Mul32(x328, arg1[5])
	var x361 uint32
	var x362 uint32
	x362, x361 = bits.Mul32(x328, arg1[4])
	var x363 uint32
	var x364 uint32
	x364, x363 = bits.Mul32(x328, arg1[3])
	var x365 uint32
	var x366 uint32
	x366, x365 = bits.Mul32(x328, arg1[2])
	var x367 uint32
	var x368 uint32
	x368, x367 = bits.Mul32(x328, arg1[1])
	var x369 uint32
	var x370 uint32
	x370, x369 = bits.Mul32(x328, arg1[0])
	var x371 uint32
	_, x371 = bits.Mul32(x328, arg1[6])
	var x373 uint32
	var x374 uint32
	x374, x373 = bits.Mul32(x328, arg1[5])
	var x375 uint32
	var x376 uint32
	x376, x375 = bits.Mul32(x328, arg1[4])
	var x377 uint32
	var x378 uint32
	x378, x377 = bits.Mul32(x328, arg1[3])
	var x379 uint32
	var x380 uint32
	x380, x379 = bits.Mul32(x328, arg1[2])
	var x381 uint32
	var x382 uint32
	x382, x381 = bits.Mul32(x328, arg1[1])
	var x383 uint32
	var x384 uint32
	x384, x383 = bits.Mul32(x328, arg1[0])
	var x385 uint32
	_, x385 = bits.Mul32(x328, arg1[7])
	var x387 uint32
	var x388 uint32
	x388, x387 = bits.Mul32(x328, arg1[6])
	var x389 uint32
	var x390 uint32
	x390, x389 = bits.Mul32(x328, arg1[5])
	var x391 uint32
	var x392 uint32
	x392, x391 = bits.Mul32(x328, arg1[4])
	var x393 uint32
	var x394 uint32
	x394, x393 = bits.Mul32(x328, arg1[3])
	var x395 uint32
	var x396 uint32
	x396, x395 = bits.Mul32(x328, arg1[2])
	var x397 uint32
	var x398 uint32
	x398, x397 = bits.Mul32(x328, arg1[1])
	var x399 uint32
	var x400 uint32
	x400, x399 = bits.Mul32(x328, arg1[0])
	var x401 uint32
	_, x401 = bits.Mul32(x328, arg1[8])
	var x403 uint32
	var x404 uint32
	x404, x403 = bits.Mul32(x328, arg1[7])
	var x405 uint32
	var x406 uint32
	x406, x405 = bits.Mul32(x328, arg1[6])
	var x407 uint32
	var x408 uint32
	x408, x407 = bits.Mul32(x328, arg1[5])
	var x409 uint32
	var x410 uint32
	x410, x409 = bits.Mul32(x328, arg1[4])
	var x411 uint32
	var x412 uint32
	x412, x411 = bits.Mul32(x328, arg1[3])
	var x413 uint32
	var x414 uint32
	x414, x413 = bits.Mul32(x328, arg1[2])
	var x415 uint32
	var x416 uint32
	x416, x415 = bits.Mul32(x328, arg1[1])
	var x417 uint32
	var x418 uint32
	x418, x417 = bits.Mul32(x328, arg1[0])
	var x419 uint32
	_, x419 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), x327)
	var x421 uint32
	var x422 uint32
	x422, x421 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[8])
	var x423 uint32
	var x424 uint32
	x424, x423 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[7])
	var x425 uint32
	var x426 uint32
	x426, x425 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[6])
	var x427 uint32
	var x428 uint32
	x428, x427 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[5])
	var x429 uint32
	var x430 uint32
	x430, x429 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[4])
	var x431 uint32
	var x432 uint32
	x432, x431 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[3])
	var x433 uint32
	var x434 uint32
	x434, x433 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[2])
	var x435 uint32
	var x436 uint32
	x436, x435 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[1])
	var x437 uint32
	var x438 uint32
	x438, x437 = bits.Mul32((uint32((uint64(x321) + uint64(x321))) & 0xffffffff), arg1[0])
	var x439 uint32
	x439, _ = bits.Add32(x422, x329, uint32(0x0))
	var x441 uint32
	x441, _ = bits.Add32(x439, x331, uint32(0x0))
	var x443 uint32
	var x444 uint32
	x443, x444 = bits.Add32(x424, x333, uint32(0x0))
	var x445 uint32
	x445, _ = bits.Add32(x441, x334, uint32(uint1(x444)))
	var x447 uint32
	var x448 uint32
	x447, x448 = bits.Add32(x443, x337, uint32(0x0))
	var x449 uint32
	x449, _ = bits.Add32(x445, x335, uint32(uint1(x448)))
	var x451 uint32
	var x452 uint32
	x451, x452 = bits.Add32(x426, x339, uint32(0x0))
	var x453 uint32
	var x454 uint32
	x453, x454 = bits.Add32(x447, x340, uint32(uint1(x452)))
	var x455 uint32
	x455, _ = bits.Add32(x449, x338, uint32(uint1(x454)))
	var x457 uint32
	var x458 uint32
	x457, x458 = bits.Add32(x451, x345, uint32(0x0))
	var x459 uint32
	var x460 uint32
	x459, x460 = bits.Add32(x453, x343, uint32(uint1(x458)))
	var x461 uint32
	x461, _ = bits.Add32(x455, x341, uint32(uint1(x460)))
	var x463 uint32
	var x464 uint32
	x463, x464 = bits.Add32(x428, x347, uint32(0x0))
	var x465 uint32
	var x466 uint32
	x465, x466 = bits.Add32(x457, x348, uint32(uint1(x464)))
	var x467 uint32
	var x468 uint32
	x467, x468 = bits.Add32(x459, x346, uint32(uint1(x466)))
	var x469 uint32
	x469, _ = bits.Add32(x461, x344, uint32(uint1(x468)))
	var x471 uint32
	var x472 uint32
	x471, x472 = bits.Add32(x463, x355, uint32(0x0))
	var x473 uint32
	var x474 uint32
	x473, x474 = bits.Add32(x465, x353, uint32(uint1(x472)))
	var x475 uint32
	var x476 uint32
	x475, x476 = bits.Add32(x467, x351, uint32(uint1(x474)))
	var x477 uint32
	x477, _ = bits.Add32(x469, x349, uint32(uint1(x476)))
	var x479 uint32
	var x480 uint32
	x479, x480 = bits.Add32(x430, x357, uint32(0x0))
	var x481 uint32
	var x482 uint32
	x481, x482 = bits.Add32(x471, x358, uint32(uint1(x480)))
	var x483 uint32
	var x484 uint32
	x483, x484 = bits.Add32(x473, x356, uint32(uint1(x482)))
	var x485 uint32
	var x486 uint32
	x485, x486 = bits.Add32(x475, x354, uint32(uint1(x484)))
	var x487 uint32
	x487, _ = bits.Add32(x477, x352, uint32(uint1(x486)))
	var x489 uint32
	var x490 uint32
	x489, x490 = bits.Add32(x479, x367, uint32(0x0))
	var x491 uint32
	var x492 uint32
	x491, x492 = bits.Add32(x481, x365, uint32(uint1(x490)))
	var x493 uint32
	var x494 uint32
	x493, x494 = bits.Add32(x483, x363, uint32(uint1(x492)))
	var x495 uint32
	var x496 uint32
	x495, x496 = bits.Add32(x485, x361, uint32(uint1(x494)))
	var x497 uint32
	x497, _ = bits.Add32(x487, x359, uint32(uint1(x496)))
	var x499 uint32
	var x500 uint32
	x499, x500 = bits.Add32(x432, x369, uint32(0x0))
	var x501 uint32
	var x502 uint32
	x501, x502 = bits.Add32(x489, x370, uint32(uint1(x500)))
	var x503 uint32
	var x504 uint32
	x503, x504 = bits.Add32(x491, x368, uint32(uint1(x502)))
	var x505 uint32
	var x506 uint32
	x505, x506 = bits.Add32(x493, x366, uint32(uint1(x504)))
	var x507 uint32
	var x508 uint32
	x507, x508 = bits.Add32(x495, x364, uint32(uint1(x506)))
	var x509 uint32
	x509, _ = bits.Add32(x497, x362, uint32(uint1(x508)))
	var x511 uint32
	var x512 uint32
	x511, x512 = bits.Add32(x499, x381, uint32(0x0))
	var x513 uint32
	var x514 uint32
	x513, x514 = bits.Add32(x501, x379, uint32(uint1(x512)))
	var x515 uint32
	var x516 uint32
	x515, x516 = bits.Add32(x503, x377, uint32(uint1(x514)))
	var x517 uint32
	var x518 uint32
	x517, x518 = bits.Add32(x505, x375, uint32(uint1(x516)))
	var x519 uint32
	var x520 uint32
	x519, x520 = bits.Add32(x507, x373, uint32(uint1(x518)))
	var x521 uint32
	x521, _ = bits.Add32(x509, x371, uint32(uint1(x520)))
	var x523 uint32
	var x524 uint32
	x523, x524 = bits.Add32(x434, x383, uint32(0x0))
	var x525 uint32
	var x526 uint32
	x525, x526 = bits.Add32(x511, x384, uint32(uint1(x524)))
	var x527 uint32
	var x528 uint32
	x527, x528 = bits.Add32(x513, x382, uint32(uint1(x526)))
	var x529 uint32
	var x530 uint32
	x529, x530 = bits.Add32(x515, x380, uint32(uint1(x528)))
	var x531 uint32
	var x532 uint32
	x531, x532 = bits.Add32(x517, x378, uint32(uint1(x530)))
	var x533 uint32
	var x534 uint32
	x533, x534 = bits.Add32(x519, x376, uint32(uint1(x532)))
	var x535 uint32
	x535, _ = bits.Add32(x521, x374, uint32(uint1(x534)))
	var x537 uint32
	var x538 uint32
	x537, x538 = bits.Add32(x523, x397, uint32(0x0))
	var x539 uint32
	var x540 uint32
	x539, x540 = bits.Add32(x525, x395, uint32(uint1(x538)))
	var x541 uint32
	var x542 uint32
	x541, x542 = bits.Add32(x527, x393, uint32(uint1(x540)))
	var x543 uint32
	var x544 uint32
	x543, x544 = bits.Add32(x529, x391, uint32(uint1(x542)))
	var x545 uint32
	var x546 uint32
	x545, x546 = bits.Add32(x531, x389, uint32(uint1(x544)))
	var x547 uint32
	var x548 uint32
	x547, x548 = bits.Add32(x533, x387, uint32(uint1(x546)))
	var x549 uint32
	x549, _ = bits.Add32(x535, x385, uint32(uint1(x548)))
	var x551 uint32
	var x552 uint32
	x551, x552 = bits.Add32(x436, x399, uint32(0x0))
	var x553 uint32
	var x554 uint32
	x553, x554 = bits.Add32(x537, x400, uint32(uint1(x552)))
	var x555 uint32
	var x556 uint32
	x555, x556 = bits.Add32(x539, x398, uint32(uint1(x554)))
	var x557 uint32
	var x558 uint32
	x557, x558 = bits.Add32(x541, x396, uint32(uint1(x556)))
	var x559 uint32
	var x560 uint32
	x559, x560 = bits.Add32(x543, x394, uint32(uint1(x558)))
	var x561 uint32
	var x562 uint32
	x561, x562 = bits.Add32(x545, x392, uint32(uint1(x560)))
	var x563 uint32
	var x564 uint32
	x563, x564 = bits.Add32(x547, x390, uint32(uint1(x562)))
	var x565 uint32
	x565, _ = bits.Add32(x549, x388, uint32(uint1(x564)))
	var x567 uint32
	var x568 uint32
	x567, x568 = bits.Add32(x551, x415, uint32(0x0))
	var x569 uint32
	var x570 uint32
	x569, x570 = bits.Add32(x553, x413, uint32(uint1(x568)))
	var x571 uint32
	var x572 uint32
	x571, x572 = bits.Add32(x555, x411, uint32(uint1(x570)))
	var x573 uint32
	var x574 uint32
	x573, x574 = bits.Add32(x557, x409, uint32(uint1(x572)))
	var x575 uint32
	var x576 uint32
	x575, x576 = bits.Add32(x559, x407, uint32(uint1(x574)))
	var x577 uint32
	var x578 uint32
	x577, x578 = bits.Add32(x561, x405, uint32(uint1(x576)))
	var x579 uint32
	var x580 uint32
	x579, x580 = bits.Add32(x563, x403, uint32(uint1(x578)))
	var x581 uint32
	x581, _ = bits.Add32(x565, x401, uint32(uint1(x580)))
	var x583 uint32
	var x584 uint32
	x583, x584 = bits.Add32(x438, x417, uint32(0x0))
	var x585 uint32
	var x586 uint32
	x585, x586 = bits.Add32(x567, x418, uint32(uint1(x584)))
	var x587 uint32
	var x588 uint32
	x587, x588 = bits.Add32(x569, x416, uint32(uint1(x586)))
	var x589 uint32
	var x590 uint32
	x589, x590 = bits.Add32(x571, x414, uint32(uint1(x588)))
	var x591 uint32
	var x592 uint32
	x591, x592 = bits.Add32(x573, x412, uint32(uint1(x590)))
	var x593 uint32
	var x594 uint32
	x593, x594 = bits.Add32(x575, x410, uint32(uint1(x592)))
	var x595 uint32
	var x596 uint32
	x595, x596 = bits.Add32(x577, x408, uint32(uint1(x594)))
	var x597 uint32
	var x598 uint32
	x597, x598 = bits.Add32(x579, x406, uint32(uint1(x596)))
	var x599 uint32
	x599, _ = bits.Add32(x581, x404, uint32(uint1(x598)))
	var x601 uint32
	var x602 uint32
	x601, x602 = bits.Add32(x583, x435, uint32(0x0))
	var x603 uint32
	var x604 uint32
	x603, x604 = bits.Add32(x585, x433, uint32(uint1(x602)))
	var x605 uint32
	var x606 uint32
	x605, x606 = bits.Add32(x587, x431, uint32(uint1(x604)))
	var x607 uint32
	var x608 uint32
	x607, x608 = bits.Add32(x589, x429, uint32(uint1(x606)))
	var x609 uint32
	var x610 uint32
	x609, x610 = bits.Add32(x591, x427, uint32(uint1(x608)))
	var x611 uint32
	var x612 uint32
	x611, x612 = bits.Add32(x593, x425, uint32(uint1(x610)))
	var x613 uint32
	var x614 uint32
	x613, x614 = bits.Add32(x595, x423, uint32(uint1(x612)))
	var x615 uint32
	var x616 uint32
	x615, x616 = bits.Add32(x597, x421, uint32(uint1(x614)))
	var x617 uint32
	x617, _ = bits.Add32(x599, x419, uint32(uint1(x616)))
	var x619 uint32
	cmovznzU32(&x619, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x620 uint32
	cmovznzU32(&x620, uint1(((uint32((uint64(x322) + uint64(x322))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x621 uint32
	_, x621 = bits.Mul32(x620, arg2[0])
	var x623 uint32
	_, x623 = bits.Mul32(x620, arg2[1])
	var x625 uint32
	var x626 uint32
	x626, x625 = bits.Mul32(x620, arg2[0])
	var x627 uint32
	_, x627 = bits.Mul32(x620, arg2[2])
	var x629 uint32
	var x630 uint32
	x630, x629 = bits.Mul32(x620, arg2[1])
	var x631 uint32
	var x632 uint32
	x632, x631 = bits.Mul32(x620, arg2[0])
	var x633 uint32
	_, x633 = bits.Mul32(x620, arg2[3])
	var x635 uint32
	var x636 uint32
	x636, x635 = bits.Mul32(x620, arg2[2])
	var x637 uint32
	var x638 uint32
	x638, x637 = bits.Mul32(x620, arg2[1])
	var x639 uint32
	var x640 uint32
	x640, x639 = bits.Mul32(x620, arg2[0])
	var x641 uint32
	_, x641 = bits.Mul32(x620, arg2[4])
	var x643 uint32
	var x644 uint32
	x644, x643 = bits.Mul32(x620, arg2[3])
	var x645 uint32
	var x646 uint32
	x646, x645 = bits.Mul32(x620, arg2[2])
	var x647 uint32
	var x648 uint32
	x648, x647 = bits.Mul32(x620, arg2[1])
	var x649 uint32
	var x650 uint32
	x650, x649 = bits.Mul32(x620, arg2[0])
	var x651 uint32
	_, x651 = bits.Mul32(x620, arg2[5])
	var x653 uint32
	var x654 uint32
	x654, x653 = bits.Mul32(x620, arg2[4])
	var x655 uint32
	var x656 uint32
	x656, x655 = bits.Mul32(x620, arg2[3])
	var x657 uint32
	var x658 uint32
	x658, x657 = bits.Mul32(x620, arg2[2])
	var x659 uint32
	var x660 uint32
	x660, x659 = bits.Mul32(x620, arg2[1])
	var x661 uint32
	var x662 uint32
	x662, x661 = bits.Mul32(x620, arg2[0])
	var x663 uint32
	_, x663 = bits.Mul32(x620, arg2[6])
	var x665 uint32
	var x666 uint32
	x666, x665 = bits.Mul32(x620, arg2[5])
	var x667 uint32
	var x668 uint32
	x668, x667 = bits.Mul32(x620, arg2[4])
	var x669 uint32
	var x670 uint32
	x670, x669 = bits.Mul32(x620, arg2[3])
	var x671 uint32
	var x672 uint32
	x672, x671 = bits.Mul32(x620, arg2[2])
	var x673 uint32
	var x674 uint32
	x674, x673 = bits.Mul32(x620, arg2[1])
	var x675 uint32
	var x676 uint32
	x676, x675 = bits.Mul32(x620, arg2[0])
	var x677 uint32
	_, x677 = bits.Mul32(x620, arg2[7])
	var x679 uint32
	var x680 uint32
	x680, x679 = bits.Mul32(x620, arg2[6])
	var x681 uint32
	var x682 uint32
	x682, x681 = bits.Mul32(x620, arg2[5])
	var x683 uint32
	var x684 uint32
	x684, x683 = bits.Mul32(x620, arg2[4])
	var x685 uint32
	var x686 uint32
	x686, x685 = bits.Mul32(x620, arg2[3])
	var x687 uint32
	var x688 uint32
	x688, x687 = bits.Mul32(x620, arg2[2])
	var x689 uint32
	var x690 uint32
	x690, x689 = bits.Mul32(x620, arg2[1])
	var x691 uint32
	var x692 uint32
	x692, x691 = bits.Mul32(x620, arg2[0])
	var x693 uint32
	_, x693 = bits.Mul32(x620, arg2[8])
	var x695 uint32
	var x696 uint32
	x696, x695 = bits.Mul32(x620, arg2[7])
	var x697 uint32
	var x698 uint32
	x698, x697 = bits.Mul32(x620, arg2[6])
	var x699 uint32
	var x700 uint32
	x700, x699 = bits.Mul32(x620, arg2[5])
	var x701 uint32
	var x702 uint32
	x702, x701 = bits.Mul32(x620, arg2[4])
	var x703 uint32
	var x704 uint32
	x704, x703 = bits.Mul32(x620, arg2[3])
	var x705 uint32
	var x706 uint32
	x706, x705 = bits.Mul32(x620, arg2[2])
	var x707 uint32
	var x708 uint32
	x708, x707 = bits.Mul32(x620, arg2[1])
	var x709 uint32
	var x710 uint32
	x710, x709 = bits.Mul32(x620, arg2[0])
	var x711 uint32
	_, x711 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), x619)
	var x713 uint32
	var x714 uint32
	x714, x713 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[8])
	var x715 uint32
	var x716 uint32
	x716, x715 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[7])
	var x717 uint32
	var x718 uint32
	x718, x717 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[6])
	var x719 uint32
	var x720 uint32
	x720, x719 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[5])
	var x721 uint32
	var x722 uint32
	x722, x721 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[4])
	var x723 uint32
	var x724 uint32
	x724, x723 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[3])
	var x725 uint32
	var x726 uint32
	x726, x725 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[2])
	var x727 uint32
	var x728 uint32
	x728, x727 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[1])
	var x729 uint32
	var x730 uint32
	x730, x729 = bits.Mul32((uint32((uint64(x322) + uint64(x322))) & 0xffffffff), arg2[0])
	var x731 uint32
	x731, _ = bits.Add32(x714, x621, uint32(0x0))
	var x733 uint32
	x733, _ = bits.Add32(x731, x623, uint32(0x0))
	var x735 uint32
	var x736 uint32
	x735, x736 = bits.Add32(x716, x625, uint32(0x0))
	var x737 uint32
	x737, _ = bits.Add32(x733, x626, uint32(uint1(x736)))
	var x739 uint32
	var x740 uint32
	x739, x740 = bits.Add32(x735, x629, uint32(0x0))
	var x741 uint32
	x741, _ = bits.Add32(x737, x627, uint32(uint1(x740)))
	var x743 uint32
	var x744 uint32
	x743, x744 = bits.Add32(x718, x631, uint32(0x0))
	var x745 uint32
	var x746 uint32
	x745, x746 = bits.Add32(x739, x632, uint32(uint1(x744)))
	var x747 uint32
	x747, _ = bits.Add32(x741, x630, uint32(uint1(x746)))
	var x749 uint32
	var x750 uint32
	x749, x750 = bits.Add32(x743, x637, uint32(0x0))
	var x751 uint32
	var x752 uint32
	x751, x752 = bits.Add32(x745, x635, uint32(uint1(x750)))
	var x753 uint32
	x753, _ = bits.Add32(x747, x633, uint32(uint1(x752)))
	var x755 uint32
	var x756 uint32
	x755, x756 = bits.Add32(x720, x639, uint32(0x0))
	var x757 uint32
	var x758 uint32
	x757, x758 = bits.Add32(x749, x640, uint32(uint1(x756)))
	var x759 uint32
	var x760 uint32
	x759, x760 = bits.Add32(x751, x638, uint32(uint1(x758)))
	var x761 uint32
	x761, _ = bits.Add32(x753, x636, uint32(uint1(x760)))
	var x763 uint32
	var x764 uint32
	x763, x764 = bits.Add32(x755, x647, uint32(0x0))
	var x765 uint32
	var x766 uint32
	x765, x766 = bits.Add32(x757, x645, uint32(uint1(x764)))
	var x767 uint32
	var x768 uint32
	x767, x768 = bits.Add32(x759, x643, uint32(uint1(x766)))
	var x769 uint32
	x769, _ = bits.Add32(x761, x641, uint32(uint1(x768)))
	var x771 uint32
	var x772 uint32
	x771, x772 = bits.Add32(x722, x649, uint32(0x0))
	var x773 uint32
	var x774 uint32
	x773, x774 = bits.Add32(x763, x650, uint32(uint1(x772)))
	var x775 uint32
	var x776 uint32
	x775, x776 = bits.Add32(x765, x648, uint32(uint1(x774)))
	var x777 uint32
	var x778 uint32
	x777, x778 = bits.Add32(x767, x646, uint32(uint1(x776)))
	var x779 uint32
	x779, _ = bits.Add32(x769, x644, uint32(uint1(x778)))
	var x781 uint32
	var x782 uint32
	x781, x782 = bits.Add32(x771, x659, uint32(0x0))
	var x783 uint32
	var x784 uint32
	x783, x784 = bits.Add32(x773, x657, uint32(uint1(x782)))
	var x785 uint32
	var x786 uint32
	x785, x786 = bits.Add32(x775, x655, uint32(uint1(x784)))
	var x787 uint32
	var x788 uint32
	x787, x788 = bits.Add32(x777, x653, uint32(uint1(x786)))
	var x789 uint32
	x789, _ = bits.Add32(x779, x651, uint32(uint1(x788)))
	var x791 uint32
	var x792 uint32
	x791, x792 = bits.Add32(x724, x661, uint32(0x0))
	var x793 uint32
	var x794 uint32
	x793, x794 = bits.Add32(x781, x662, uint32(uint1(x792)))
	var x795 uint32
	var x796 uint32
	x795, x796 = bits.Add32(x783, x660, uint32(uint1(x794)))
	var x797 uint32
	var x798 uint32
	x797, x798 = bits.Add32(x785, x658, uint32(uint1(x796)))
	var x799 uint32
	var x800 uint32
	x799, x800 = bits.Add32(x787, x656, uint32(uint1(x798)))
	var x801 uint32
	x801, _ = bits.Add32(x789, x654, uint32(uint1(x800)))
	var x803 uint32
	var x804 uint32
	x803, x804 = bits.Add32(x791, x673, uint32(0x0))
	var x805 uint32
	var x806 uint32
	x805, x806 = bits.Add32(x793, x671, uint32(uint1(x804)))
	var x807 uint32
	var x808 uint32
	x807, x808 = bits.Add32(x795, x669, uint32(uint1(x806)))
	var x809 uint32
	var x810 uint32
	x809, x810 = bits.Add32(x797, x667, uint32(uint1(x808)))
	var x811 uint32
	var x812 uint32
	x811, x812 = bits.Add32(x799, x665, uint32(uint1(x810)))
	var x813 uint32
	x813, _ = bits.Add32(x801, x663, uint32(uint1(x812)))
	var x815 uint32
	var x816 uint32
	x815, x816 = bits.Add32(x726, x675, uint32(0x0))
	var x817 uint32
	var x818 uint32
	x817, x818 = bits.Add32(x803, x676, uint32(uint1(x816)))
	var x819 uint32
	var x820 uint32
	x819, x820 = bits.Add32(x805, x674, uint32(uint1(x818)))
	var x821 uint32
	var x822 uint32
	x821, x822 = bits.Add32(x807, x672, uint32(uint1(x820)))
	var x823 uint32
	var x824 uint32
	x823, x824 = bits.Add32(x809, x670, uint32(uint1(x822)))
	var x825 uint32
	var x826 uint32
	x825, x826 = bits.Add32(x811, x668, uint32(uint1(x824)))
	var x827 uint32
	x827, _ = bits.Add32(x813, x666, uint32(uint1(x826)))
	var x829 uint32
	var x830 uint32
	x829, x830 = bits.Add32(x815, x689, uint32(0x0))
	var x831 uint32
	var x832 uint32
	x831, x832 = bits.Add32(x817, x687, uint32(uint1(x830)))
	var x833 uint32
	var x834 uint32
	x833, x834 = bits.Add32(x819, x685, uint32(uint1(x832)))
	var x835 uint32
	var x836 uint32
	x835, x836 = bits.Add32(x821, x683, uint32(uint1(x834)))
	var x837 uint32
	var x838 uint32
	x837, x838 = bits.Add32(x823, x681, uint32(uint1(x836)))
	var x839 uint32
	var x840 uint32
	x839, x840 = bits.Add32(x825, x679, uint32(uint1(x838)))
	var x841 uint32
	x841, _ = bits.Add32(x827, x677, uint32(uint1(x840)))
	var x843 uint32
	var x844 uint32
	x843, x844 = bits.Add32(x728, x691, uint32(0x0))
	var x845 uint32
	var x846 uint32
	x845, x846 = bits.Add32(x829, x692, uint32(uint1(x844)))
	var x847 uint32
	var x848 uint32
	x847, x848 = bits.Add32(x831, x690, uint32(uint1(x846)))
	var x849 uint32
	var x850 uint32
	x849, x850 = bits.Add32(x833, x688, uint32(uint1(x848)))
	var x851 uint32
	var x852 uint32
	x851, x852 = bits.Add32(x835, x686, uint32(uint1(x850)))
	var x853 uint32
	var x854 uint32
	x853, x854 = bits.Add32(x837, x684, uint32(uint1(x852)))
	var x855 uint32
	var x856 uint32
	x855, x856 = bits.Add32(x839, x682, uint32(uint1(x854)))
	var x857 uint32
	x857, _ = bits.Add32(x841, x680, uint32(uint1(x856)))
	var x859 uint32
	var x860 uint32
	x859, x860 = bits.Add32(x843, x707, uint32(0x0))
	var x861 uint32
	var x862 uint32
	x861, x862 = bits.Add32(x845, x705, uint32(uint1(x860)))
	var x863 uint32
	var x864 uint32
	x863, x864 = bits.Add32(x847, x703, uint32(uint1(x862)))
	var x865 uint32
	var x866 uint32
	x865, x866 = bits.Add32(x849, x701, uint32(uint1(x864)))
	var x867 uint32
	var x868 uint32
	x867, x868 = bits.Add32(x851, x699, uint32(uint1(x866)))
	var x869 uint32
	var x870 uint32
	x869, x870 = bits.Add32(x853, x697, uint32(uint1(x868)))
	var x871 uint32
	var x872 uint32
	x871, x872 = bits.Add32(x855, x695, uint32(uint1(x870)))
	var x873 uint32
	x873, _ = bits.Add32(x857, x693, uint32(uint1(x872)))
	var x875 uint32
	var x876 uint32
	x875, x876 = bits.Add32(x730, x709, uint32(0x0))
	var x877 uint32
	var x878 uint32
	x877, x878 = bits.Add32(x859, x710, uint32(uint1(x876)))
	var x879 uint32
	var x880 uint32
	x879, x880 = bits.Add32(x861, x708, uint32(uint1(x878)))
	var x881 uint32
	var x882 uint32
	x881, x882 = bits.Add32(x863, x706, uint32(uint1(x880)))
	var x883 uint32
	var x884 uint32
	x883, x884 = bits.Add32(x865, x704, uint32(uint1(x882)))
	var x885 uint32
	var x886 uint32
	x885, x886 = bits.Add32(x867, x702, uint32(uint1(x884)))
	var x887 uint32
	var x888 uint32
	x887, x888 = bits.Add32(x869, x700, uint32(uint1(x886)))
	var x889 uint32
	var x890 uint32
	x889, x890 = bits.Add32(x871, x698, uint32(uint1(x888)))
	var x891 uint32
	x891, _ = bits.Add32(x873, x696, uint32(uint1(x890)))
	var x893 uint32
	var x894 uint32
	x893, x894 = bits.Add32(x875, x727, uint32(0x0))
	var x895 uint32
	var x896 uint32
	x895, x896 = bits.Add32(x877, x725, uint32(uint1(x894)))
	var x897 uint32
	var x898 uint32
	x897, x898 = bits.Add32(x879, x723, uint32(uint1(x896)))
	var x899 uint32
	var x900 uint32
	x899, x900 = bits.Add32(x881, x721, uint32(uint1(x898)))
	var x901 uint32
	var x902 uint32
	x901, x902 = bits.Add32(x883, x719, uint32(uint1(x900)))
	var x903 uint32
	var x904 uint32
	x903, x904 = bits.Add32(x885, x717, uint32(uint1(x902)))
	var x905 uint32
	var x906 uint32
	x905, x906 = bits.Add32(x887, x715, uint32(uint1(x904)))
	var x907 uint32
	var x908 uint32
	x907, x908 = bits.Add32(x889, x713, uint32(uint1(x906)))
	var x909 uint32
	x909, _ = bits.Add32(x891, x711, uint32(uint1(x908)))
	var x911 uint32
	cmovznzU32(&x911, uint1((arg1[8] >> 31)), uint32(0x0), 0xffffffff)
	var x912 uint32
	cmovznzU32(&x912, uint1(((uint32((uint64(x323) + uint64(x325))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x913 uint32
	_, x913 = bits.Mul32(x912, arg1[0])
	var x915 uint32
	_, x915 = bits.Mul32(x912, arg1[1])
	var x917 uint32
	var x918 uint32
	x918, x917 = bits.Mul32(x912, arg1[0])
	var x919 uint32
	_, x919 = bits.Mul32(x912, arg1[2])
	var x921 uint32
	var x922 uint32
	x922, x921 = bits.Mul32(x912, arg1[1])
	var x923 uint32
	var x924 uint32
	x924, x923 = bits.Mul32(x912, arg1[0])
	var x925 uint32
	_, x925 = bits.Mul32(x912, arg1[3])
	var x927 uint32
	var x928 uint32
	x928, x927 = bits.Mul32(x912, arg1[2])
	var x929 uint32
	var x930 uint32
	x930, x929 = bits.Mul32(x912, arg1[1])
	var x931 uint32
	var x932 uint32
	x932, x931 = bits.Mul32(x912, arg1[0])
	var x933 uint32
	_, x933 = bits.Mul32(x912, arg1[4])
	var x935 uint32
	var x936 uint32
	x936, x935 = bits.Mul32(x912, arg1[3])
	var x937 uint32
	var x938 uint32
	x938, x937 = bits.Mul32(x912, arg1[2])
	var x939 uint32
	var x940 uint32
	x940, x939 = bits.Mul32(x912, arg1[1])
	var x941 uint32
	var x942 uint32
	x942, x941 = bits.Mul32(x912, arg1[0])
	var x943 uint32
	_, x943 = bits.Mul32(x912, arg1[5])
	var x945 uint32
	var x946 uint32
	x946, x945 = bits.Mul32(x912, arg1[4])
	var x947 uint32
	var x948 uint32
	x948, x947 = bits.Mul32(x912, arg1[3])
	var x949 uint32
	var x950 uint32
	x950, x949 = bits.Mul32(x912, arg1[2])
	var x951 uint32
	var x952 uint32
	x952, x951 = bits.Mul32(x912, arg1[1])
	var x953 uint32
	var x954 uint32
	x954, x953 = bits.Mul32(x912, arg1[0])
	var x955 uint32
	_, x955 = bits.Mul32(x912, arg1[6])
	var x957 uint32
	var x958 uint32
	x958, x957 = bits.Mul32(x912, arg1[5])
	var x959 uint32
	var x960 uint32
	x960, x959 = bits.Mul32(x912, arg1[4])
	var x961 uint32
	var x962 uint32
	x962, x961 = bits.Mul32(x912, arg1[3])
	var x963 uint32
	var x964 uint32
	x964, x963 = bits.Mul32(x912, arg1[2])
	var x965 uint32
	var x966 uint32
	x966, x965 = bits.Mul32(x912, arg1[1])
	var x967 uint32
	var x968 uint32
	x968, x967 = bits.Mul32(x912, arg1[0])
	var x969 uint32
	_, x969 = bits.Mul32(x912, arg1[7])
	var x971 uint32
	var x972 uint32
	x972, x971 = bits.Mul32(x912, arg1[6])
	var x973 uint32
	var x974 uint32
	x974, x973 = bits.Mul32(x912, arg1[5])
	var x975 uint32
	var x976 uint32
	x976, x975 = bits.Mul32(x912, arg1[4])
	var x977 uint32
	var x978 uint32
	x978, x977 = bits.Mul32(x912, arg1[3])
	var x979 uint32
	var x980 uint32
	x980, x979 = bits.Mul32(x912, arg1[2])
	var x981 uint32
	var x982 uint32
	x982, x981 = bits.Mul32(x912, arg1[1])
	var x983 uint32
	var x984 uint32
	x984, x983 = bits.Mul32(x912, arg1[0])
	var x985 uint32
	_, x985 = bits.Mul32(x912, arg1[8])
	var x987 uint32
	var x988 uint32
	x988, x987 = bits.Mul32(x912, arg1[7])
	var x989 uint32
	var x990 uint32
	x990, x989 = bits.Mul32(x912, arg1[6])
	var x991 uint32
	var x992 uint32
	x992, x991 = bits.Mul32(x912, arg1[5])
	var x993 uint32
	var x994 uint32
	x994, x993 = bits.Mul32(x912, arg1[4])
	var x995 uint32
	var x996 uint32
	x996, x995 = bits.Mul32(x912, arg1[3])
	var x997 uint32
	var x998 uint32
	x998, x997 = bits.Mul32(x912, arg1[2])
	var x999 uint32
	var x1000 uint32
	x1000, x999 = bits.Mul32(x912, arg1[1])
	var x1001 uint32
	var x1002 uint32
	x1002, x1001 = bits.Mul32(x912, arg1[0])
	var x1003 uint32
	_, x1003 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), x911)
	var x1005 uint32
	var x1006 uint32
	x1006, x1005 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[8])
	var x1007 uint32
	var x1008 uint32
	x1008, x1007 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[7])
	var x1009 uint32
	var x1010 uint32
	x1010, x1009 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[6])
	var x1011 uint32
	var x1012 uint32
	x1012, x1011 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[5])
	var x1013 uint32
	var x1014 uint32
	x1014, x1013 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[4])
	var x1015 uint32
	var x1016 uint32
	x1016, x1015 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[3])
	var x1017 uint32
	var x1018 uint32
	x1018, x1017 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[2])
	var x1019 uint32
	var x1020 uint32
	x1020, x1019 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[1])
	var x1021 uint32
	var x1022 uint32
	x1022, x1021 = bits.Mul32((uint32((uint64(x323) + uint64(x325))) & 0xffffffff), arg1[0])
	var x1023 uint32
	x1023, _ = bits.Add32(x1006, x913, uint32(0x0))
	var x1025 uint32
	x1025, _ = bits.Add32(x1023, x915, uint32(0x0))
	var x1027 uint32
	var x1028 uint32
	x1027, x1028 = bits.Add32(x1008, x917, uint32(0x0))
	var x1029 uint32
	x1029, _ = bits.Add32(x1025, x918, uint32(uint1(x1028)))
	var x1031 uint32
	var x1032 uint32
	x1031, x1032 = bits.Add32(x1027, x921, uint32(0x0))
	var x1033 uint32
	x1033, _ = bits.Add32(x1029, x919, uint32(uint1(x1032)))
	var x1035 uint32
	var x1036 uint32
	x1035, x1036 = bits.Add32(x1010, x923, uint32(0x0))
	var x1037 uint32
	var x1038 uint32
	x1037, x1038 = bits.Add32(x1031, x924, uint32(uint1(x1036)))
	var x1039 uint32
	x1039, _ = bits.Add32(x1033, x922, uint32(uint1(x1038)))
	var x1041 uint32
	var x1042 uint32
	x1041, x1042 = bits.Add32(x1035, x929, uint32(0x0))
	var x1043 uint32
	var x1044 uint32
	x1043, x1044 = bits.Add32(x1037, x927, uint32(uint1(x1042)))
	var x1045 uint32
	x1045, _ = bits.Add32(x1039, x925, uint32(uint1(x1044)))
	var x1047 uint32
	var x1048 uint32
	x1047, x1048 = bits.Add32(x1012, x931, uint32(0x0))
	var x1049 uint32
	var x1050 uint32
	x1049, x1050 = bits.Add32(x1041, x932, uint32(uint1(x1048)))
	var x1051 uint32
	var x1052 uint32
	x1051, x1052 = bits.Add32(x1043, x930, uint32(uint1(x1050)))
	var x1053 uint32
	x1053, _ = bits.Add32(x1045, x928, uint32(uint1(x1052)))
	var x1055 uint32
	var x1056 uint32
	x1055, x1056 = bits.Add32(x1047, x939, uint32(0x0))
	var x1057 uint32
	var x1058 uint32
	x1057, x1058 = bits.Add32(x1049, x937, uint32(uint1(x1056)))
	var x1059 uint32
	var x1060 uint32
	x1059, x1060 = bits.Add32(x1051, x935, uint32(uint1(x1058)))
	var x1061 uint32
	x1061, _ = bits.Add32(x1053, x933, uint32(uint1(x1060)))
	var x1063 uint32
	var x1064 uint32
	x1063, x1064 = bits.Add32(x1014, x941, uint32(0x0))
	var x1065 uint32
	var x1066 uint32
	x1065, x1066 = bits.Add32(x1055, x942, uint32(uint1(x1064)))
	var x1067 uint32
	var x1068 uint32
	x1067, x1068 = bits.Add32(x1057, x940, uint32(uint1(x1066)))
	var x1069 uint32
	var x1070 uint32
	x1069, x1070 = bits.Add32(x1059, x938, uint32(uint1(x1068)))
	var x1071 uint32
	x1071, _ = bits.Add32(x1061, x936, uint32(uint1(x1070)))
	var x1073 uint32
	var x1074 uint32
	x1073, x1074 = bits.Add32(x1063, x951, uint32(0x0))
	var x1075 uint32
	var x1076 uint32
	x1075, x1076 = bits.Add32(x1065, x949, uint32(uint1(x1074)))
	var x1077 uint32
	var x1078 uint32
	x1077, x1078 = bits.Add32(x1067, x947, uint32(uint1(x1076)))
	var x1079 uint32
	var x1080 uint32
	x1079, x1080 = bits.Add32(x1069, x945, uint32(uint1(x1078)))
	var x1081 uint32
	x1081, _ = bits.Add32(x1071, x943, uint32(uint1(x1080)))
	var x1083 uint32
	var x1084 uint32
	x1083, x1084 = bits.Add32(x1016, x953, uint32(0x0))
	var x1085 uint32
	var x1086 uint32
	x1085, x1086 = bits.Add32(x1073, x954, uint32(uint1(x1084)))
	var x1087 uint32
	var x1088 uint32
	x1087, x1088 = bits.Add32(x1075, x952, uint32(uint1(x1086)))
	var x1089 uint32
	var x1090 uint32
	x1089, x1090 = bits.Add32(x1077, x950, uint32(uint1(x1088)))
	var x1091 uint32
	var x1092 uint32
	x1091, x1092 = bits.Add32(x1079, x948, uint32(uint1(x1090)))
	var x1093 uint32
	x1093, _ = bits.Add32(x1081, x946, uint32(uint1(x1092)))
	var x1095 uint32
	var x1096 uint32
	x1095, x1096 = bits.Add32(x1083, x965, uint32(0x0))
	var x1097 uint32
	var x1098 uint32
	x1097, x1098 = bits.Add32(x1085, x963, uint32(uint1(x1096)))
	var x1099 uint32
	var x1100 uint32
	x1099, x1100 = bits.Add32(x1087, x961, uint32(uint1(x1098)))
	var x1101 uint32
	var x1102 uint32
	x1101, x1102 = bits.Add32(x1089, x959, uint32(uint1(x1100)))
	var x1103 uint32
	var x1104 uint32
	x1103, x1104 = bits.Add32(x1091, x957, uint32(uint1(x1102)))
	var x1105 uint32
	x1105, _ = bits.Add32(x1093, x955, uint32(uint1(x1104)))
	var x1107 uint32
	var x1108 uint32
	x1107, x1108 = bits.Add32(x1018, x967, uint32(0x0))
	var x1109 uint32
	var x1110 uint32
	x1109, x1110 = bits.Add32(x1095, x968, uint32(uint1(x1108)))
	var x1111 uint32
	var x1112 uint32
	x1111, x1112 = bits.Add32(x1097, x966, uint32(uint1(x1110)))
	var x1113 uint32
	var x1114 uint32
	x1113, x1114 = bits.Add32(x1099, x964, uint32(uint1(x1112)))
	var x1115 uint32
	var x1116 uint32
	x1115, x1116 = bits.Add32(x1101, x962, uint32(uint1(x1114)))
	var x1117 uint32
	var x1118 uint32
	x1117, x1118 = bits.Add32(x1103, x960, uint32(uint1(x1116)))
	var x1119 uint32
	x1119, _ = bits.Add32(x1105, x958, uint32(uint1(x1118)))
	var x1121 uint32
	var x1122 uint32
	x1121, x1122 = bits.Add32(x1107, x981, uint32(0x0))
	var x1123 uint32
	var x1124 uint32
	x1123, x1124 = bits.Add32(x1109, x979, uint32(uint1(x1122)))
	var x1125 uint32
	var x1126 uint32
	x1125, x1126 = bits.Add32(x1111, x977, uint32(uint1(x1124)))
	var x1127 uint32
	var x1128 uint32
	x1127, x1128 = bits.Add32(x1113, x975, uint32(uint1(x1126)))
	var x1129 uint32
	var x1130 uint32
	x1129, x1130 = bits.Add32(x1115, x973, uint32(uint1(x1128)))
	var x1131 uint32
	var x1132 uint32
	x1131, x1132 = bits.Add32(x1117, x971, uint32(uint1(x1130)))
	var x1133 uint32
	x1133, _ = bits.Add32(x1119, x969, uint32(uint1(x1132)))
	var x1135 uint32
	var x1136 uint32
	x1135, x1136 = bits.Add32(x1020, x983, uint32(0x0))
	var x1137 uint32
	var x1138 uint32
	x1137, x1138 = bits.Add32(x1121, x984, uint32(uint1(x1136)))
	var x1139 uint32
	var x1140 uint32
	x1139, x1140 = bits.Add32(x1123, x982, uint32(uint1(x1138)))
	var x1141 uint32
	var x1142 uint32
	x1141, x1142 = bits.Add32(x1125, x980, uint32(uint1(x1140)))
	var x1143 uint32
	var x1144 uint32
	x1143, x1144 = bits.Add32(x1127, x978, uint32(uint1(x1142)))
	var x1145 uint32
	var x1146 uint32
	x1145, x1146 = bits.Add32(x1129, x976, uint32(uint1(x1144)))
	var x1147 uint32
	var x1148 uint32
	x1147, x1148 = bits.Add32(x1131, x974, uint32(uint1(x1146)))
	var x1149 uint32
	x1149, _ = bits.Add32(x1133, x972, uint32(uint1(x1148)))
	var x1151 uint32
	var x1152 uint32
	x1151, x1152 = bits.Add32(x1135, x999, uint32(0x0))
	var x1153 uint32
	var x1154 uint32
	x1153, x1154 = bits.Add32(x1137, x997, uint32(uint1(x1152)))
	var x1155 uint32
	var x1156 uint32
	x1155, x1156 = bits.Add32(x1139, x995, uint32(uint1(x1154)))
	var x1157 uint32
	var x1158 uint32
	x1157, x1158 = bits.Add32(x1141, x993, uint32(uint1(x1156)))
	var x1159 uint32
	var x1160 uint32
	x1159, x1160 = bits.Add32(x1143, x991, uint32(uint1(x1158)))
	var x1161 uint32
	var x1162 uint32
	x1161, x1162 = bits.Add32(x1145, x989, uint32(uint1(x1160)))
	var x1163 uint32
	var x1164 uint32
	x1163, x1164 = bits.Add32(x1147, x987, uint32(uint1(x1162)))
	var x1165 uint32
	x1165, _ = bits.Add32(x1149, x985, uint32(uint1(x1164)))
	var x1167 uint32
	var x1168 uint32
	x1167, x1168 = bits.Add32(x1022, x1001, uint32(0x0))
	var x1169 uint32
	var x1170 uint32
	x1169, x1170 = bits.Add32(x1151, x1002, uint32(uint1(x1168)))
	var x1171 uint32
	var x1172 uint32
	x1171, x1172 = bits.Add32(x1153, x1000, uint32(uint1(x1170)))
	var x1173 uint32
	var x1174 uint32
	x1173, x1174 = bits.Add32(x1155, x998, uint32(uint1(x1172)))
	var x1175 uint32
	var x1176 uint32
	x1175, x1176 = bits.Add32(x1157, x996, uint32(uint1(x1174)))
	var x1177 uint32
	var x1178 uint32
	x1177, x1178 = bits.Add32(x1159, x994, uint32(uint1(x1176)))
	var x1179 uint32
	var x1180 uint32
	x1179, x1180 = bits.Add32(x1161, x992, uint32(uint1(x1178)))
	var x1181 uint32
	var x1182 uint32
	x1181, x1182 = bits.Add32(x1163, x990, uint32(uint1(x1180)))
	var x1183 uint32
	x1183, _ = bits.Add32(x1165, x988, uint32(uint1(x1182)))
	var x1185 uint32
	var x1186 uint32
	x1185, x1186 = bits.Add32(x1167, x1019, uint32(0x0))
	var x1187 uint32
	var x1188 uint32
	x1187, x1188 = bits.Add32(x1169, x1017, uint32(uint1(x1186)))
	var x1189 uint32
	var x1190 uint32
	x1189, x1190 = bits.Add32(x1171, x1015, uint32(uint1(x1188)))
	var x1191 uint32
	var x1192 uint32
	x1191, x1192 = bits.Add32(x1173, x1013, uint32(uint1(x1190)))
	var x1193 uint32
	var x1194 uint32
	x1193, x1194 = bits.Add32(x1175, x1011, uint32(uint1(x1192)))
	var x1195 uint32
	var x1196 uint32
	x1195, x1196 = bits.Add32(x1177, x1009, uint32(uint1(x1194)))
	var x1197 uint32
	var x1198 uint32
	x1197, x1198 = bits.Add32(x1179, x1007, uint32(uint1(x1196)))
	var x1199 uint32
	var x1200 uint32
	x1199, x1200 = bits.Add32(x1181, x1005, uint32(uint1(x1198)))
	var x1201 uint32
	x1201, _ = bits.Add32(x1183, x1003, uint32(uint1(x1200)))
	var x1203 uint32
	cmovznzU32(&x1203, uint1((arg2[8] >> 31)), uint32(0x0), 0xffffffff)
	var x1204 uint32
	cmovznzU32(&x1204, uint1(((uint32((uint64(x324) + uint64(x326))) & 0xffffffff) >> 31)), uint32(0x0), 0xffffffff)
	var x1205 uint32
	_, x1205 = bits.Mul32(x1204, arg2[0])
	var x1207 uint32
	_, x1207 = bits.Mul32(x1204, arg2[1])
	var x1209 uint32
	var x1210 uint32
	x1210, x1209 = bits.Mul32(x1204, arg2[0])
	var x1211 uint32
	_, x1211 = bits.Mul32(x1204, arg2[2])
	var x1213 uint32
	var x1214 uint32
	x1214, x1213 = bits.Mul32(x1204, arg2[1])
	var x1215 uint32
	var x1216 uint32
	x1216, x1215 = bits.Mul32(x1204, arg2[0])
	var x1217 uint32
	_, x1217 = bits.Mul32(x1204, arg2[3])
	var x1219 uint32
	var x1220 uint32
	x1220, x1219 = bits.Mul32(x1204, arg2[2])
	var x1221 uint32
	var x1222 uint32
	x1222, x1221 = bits.Mul32(x1204, arg2[1])
	var x1223 uint32
	var x1224 uint32
	x1224, x1223 = bits.Mul32(x1204, arg2[0])
	var x1225 uint32
	_, x1225 = bits.Mul32(x1204, arg2[4])
	var x1227 uint32
	var x1228 uint32
	x1228, x1227 = bits.Mul32(x1204, arg2[3])
	var x1229 uint32
	var x1230 uint32
	x1230, x1229 = bits.Mul32(x1204, arg2[2])
	var x1231 uint32
	var x1232 uint32
	x1232, x1231 = bits.Mul32(x1204, arg2[1])
	var x1233 uint32
	var x1234 uint32
	x1234, x1233 = bits.Mul32(x1204, arg2[0])
	var x1235 uint32
	_, x1235 = bits.Mul32(x1204, arg2[5])
	var x1237 uint32
	var x1238 uint32
	x1238, x1237 = bits.Mul32(x1204, arg2[4])
	var x1239 uint32
	var x1240 uint32
	x1240, x1239 = bits.Mul32(x1204, arg2[3])
	var x1241 uint32
	var x1242 uint32
	x1242, x1241 = bits.Mul32(x1204, arg2[2])
	var x1243 uint32
	var x1244 uint32
	x1244, x1243 = bits.Mul32(x1204, arg2[1])
	var x1245 uint32
	var x1246 uint32
	x1246, x1245 = bits.Mul32(x1204, arg2[0])
	var x1247 uint32
	_, x1247 = bits.Mul32(x1204, arg2[6])
	var x1249 uint32
	var x1250 uint32
	x1250, x1249 = bits.Mul32(x1204, arg2[5])
	var x1251 uint32
	var x1252 uint32
	x1252, x1251 = bits.Mul32(x1204, arg2[4])
	var x1253 uint32
	var x1254 uint32
	x1254, x1253 = bits.Mul32(x1204, arg2[3])
	var x1255 uint32
	var x1256 uint32
	x1256, x1255 = bits.Mul32(x1204, arg2[2])
	var x1257 uint32
	var x1258 uint32
	x1258, x1257 = bits.Mul32(x1204, arg2[1])
	var x1259 uint32
	var x1260 uint32
	x1260, x1259 = bits.Mul32(x1204, arg2[0])
	var x1261 uint32
	_, x1261 = bits.Mul32(x1204, arg2[7])
	var x1263 uint32
	var x1264 uint32
	x1264, x1263 = bits.Mul32(x1204, arg2[6])
	var x1265 uint32
	var x1266 uint32
	x1266, x1265 = bits.Mul32(x1204, arg2[5])
	var x1267 uint32
	var x1268 uint32
	x1268, x1267 = bits.Mul32(x1204, arg2[4])
	var x1269 uint32
	var x1270 uint32
	x1270, x1269 = bits.Mul32(x1204, arg2[3])
	var x1271 uint32
	var x1272 uint32
	x1272, x1271 = bits.Mul32(x1204, arg2[2])
	var x1273 uint32
	var x1274 uint32
	x1274, x1273 = bits.Mul32(x1204, arg2[1])
	var x1275 uint32
	var x1276 uint32
	x1276, x1275 = bits.Mul32(x1204, arg2[0])
	var x1277 uint32
	_, x1277 = bits.Mul32(x1204, arg2[8])
	var x1279 uint32
	var x1280 uint32
	x1280, x1279 = bits.Mul32(x1204, arg2[7])
	var x1281 uint32
	var x1282 uint32
	x1282, x1281 = bits.Mul32(x1204, arg2[6])
	var x1283 uint32
	var x1284 uint32
	x1284, x1283 = bits.Mul32(x1204, arg2[5])
	var x1285 uint32
	var x1286 uint32
	x1286, x1285 = bits.Mul32(x1204, arg2[4])
	var x1287 uint32
	var x1288 uint32
	x1288, x1287 = bits.Mul32(x1204, arg2[3])
	var x1289 uint32
	var x1290 uint32
	x1290, x1289 = bits.Mul32(x1204, arg2[2])
	var x1291 uint32
	var x1292 uint32
	x1292, x1291 = bits.Mul32(x1204, arg2[1])
	var x1293 uint32
	var x1294 uint32
	x1294, x1293 = bits.Mul32(x1204, arg2[0])
	var x1295 uint32
	_, x1295 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), x1203)
	var x1297 uint32
	var x1298 uint32
	x1298, x1297 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[8])
	var x1299 uint32
	var x1300 uint32
	x1300, x1299 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[7])
	var x1301 uint32
	var x1302 uint32
	x1302, x1301 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[6])
	var x1303 uint32
	var x1304 uint32
	x1304, x1303 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[5])
	var x1305 uint32
	var x1306 uint32
	x1306, x1305 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[4])
	var x1307 uint32
	var x1308 uint32
	x1308, x1307 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[3])
	var x1309 uint32
	var x1310 uint32
	x1310, x1309 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[2])
	var x1311 uint32
	var x1312 uint32
	x1312, x1311 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[1])
	var x1313 uint32
	var x1314 uint32
	x1314, x1313 = bits.Mul32((uint32((uint64(x324) + uint64(x326))) & 0xffffffff), arg2[0])
	var x1315 uint32
	x1315, _ = bits.Add32(x1298, x1205, uint32(0x0))
	var x1317 uint32
	x1317, _ = bits.Add32(x1315, x1207, uint32(0x0))
	var x1319 uint32
	var x1320 uint32
	x1319, x1320 = bits.Add32(x1300, x1209, uint32(0x0))
	var x1321 uint32
	x1321, _ = bits.Add32(x1317, x1210, uint32(uint1(x1320)))
	var x1323 uint32
	var x1324 uint32
	x1323, x1324 = bits.Add32(x1319, x1213, uint32(0x0))
	var x1325 uint32
	x1325, _ = bits.Add32(x1321, x1211, uint32(uint1(x1324)))
	var x1327 uint32
	var x1328 uint32
	x1327, x1328 = bits.Add32(x1302, x1215, uint32(0x0))
	var x1329 uint32
	var x1330 uint32
	x1329, x1330 = bits.Add32(x1323, x1216, uint32(uint1(x1328)))
	var x1331 uint32
	x1331, _ = bits.Add32(x1325, x1214, uint32(uint1(x1330)))
	var x1333 uint32
	var x1334 uint32
	x1333, x1334 = bits.Add32(x1327, x1221, uint32(0x0))
	var x1335 uint32
	var x1336 uint32
	x1335, x1336 = bits.Add32(x1329, x1219, uint32(uint1(x1334)))
	var x1337 uint32
	x1337, _ = bits.Add32(x1331, x1217, uint32(uint1(x1336)))
	var x1339 uint32
	var x1340 uint32
	x1339, x1340 = bits.Add32(x1304, x1223, uint32(0x0))
	var x1341 uint32
	var x1342 uint32
	x1341, x1342 = bits.Add32(x1333, x1224, uint32(uint1(x1340)))
	var x1343 uint32
	var x1344 uint32
	x1343, x1344 = bits.Add32(x1335, x1222, uint32(uint1(x1342)))
	var x1345 uint32
	x1345, _ = bits.Add32(x1337, x1220, uint32(uint1(x1344)))
	var x1347 uint32
	var x1348 uint32
	x1347, x1348 = bits.Add32(x1339, x1231, uint32(0x0))
	var x1349 uint32
	var x1350 uint32
	x1349, x1350 = bits.Add32(x1341, x1229, uint32(uint1(x1348)))
	var x1351 uint32
	var x1352 uint32
	x1351, x1352 = bits.Add32(x1343, x1227, uint32(uint1(x1350)))
	var x1353 uint32
	x1353, _ = bits.Add32(x1345, x1225, uint32(uint1(x1352)))
	var x1355 uint32
	var x1356 uint32
	x1355, x1356 = bits.Add32(x1306, x1233, uint32(0x0))
	var x1357 uint32
	var x1358 uint32
	x1357, x1358 = bits.Add32(x1347, x1234, uint32(uint1(x1356)))
	var x1359 uint32
	var x1360 uint32
	x1359, x1360 = bits.Add32(x1349, x1232, uint32(uint1(x1358)))
	var x1361 uint32
	var x1362 uint32
	x1361, x1362 = bits.Add32(x1351, x1230, uint32(uint1(x1360)))
	var x1363 uint32
	x1363, _ = bits.Add32(x1353, x1228, uint32(uint1(x1362)))
	var x1365 uint32
	var x1366 uint32
	x1365, x1366 = bits.Add32(x1355, x1243, uint32(0x0))
	var x1367 uint32
	var x1368 uint32
	x1367, x1368 = bits.Add32(x1357, x1241, uint32(uint1(x1366)))
	var x1369 uint32
	var x1370 uint32
	x1369, x1370 = bits.Add32(x1359, x1239, uint32(uint1(x1368)))
	var x1371 uint32
	var x1372 uint32
	x1371, x1372 = bits.Add32(x1361, x1237, uint32(uint1(x1370)))
	var x1373 uint32
	x1373, _ = bits.Add32(x1363, x1235, uint32(uint1(x1372)))
	var x1375 uint32
	var x1376 uint32
	x1375, x1376 = bits.Add32(x1308, x1245, uint32(0x0))
	var x1377 uint32
	var x1378 uint32
	x1377, x1378 = bits.Add32(x1365, x1246, uint32(uint1(x1376)))
	var x1379 uint32
	var x1380 uint32
	x1379, x1380 = bits.Add32(x1367, x1244, uint32(uint1(x1378)))
	var x1381 uint32
	var x1382 uint32
	x1381, x1382 = bits.Add32(x1369, x1242, uint32(uint1(x1380)))
	var x1383 uint32
	var x1384 uint32
	x1383, x1384 = bits.Add32(x1371, x1240, uint32(uint1(x1382)))
	var x1385 uint32
	x1385, _ = bits.Add32(x1373, x1238, uint32(uint1(x1384)))
	var x1387 uint32
	var x1388 uint32
	x1387, x1388 = bits.Add32(x1375, x1257, uint32(0x0))
	var x1389 uint32
	var x1390 uint32
	x1389, x1390 = bits.Add32(x1377, x1255, uint32(uint1(x1388)))
	var x1391 uint32
	var x1392 uint32
	x1391, x1392 = bits.Add32(x1379, x1253, uint32(uint1(x1390)))
	var x1393 uint32
	var x1394 uint32
	x1393, x1394 = bits.Add32(x1381, x1251, uint32(uint1(x1392)))
	var x1395 uint32
	var x1396 uint32
	x1395, x1396 = bits.Add32(x1383, x1249, uint32(uint1(x1394)))
	var x1397 uint32
	x1397, _ = bits.Add32(x1385, x1247, uint32(uint1(x1396)))
	var x1399 uint32
	var x1400 uint32
	x1399, x1400 = bits.Add32(x1310, x1259, uint32(0x0))
	var x1401 uint32
	var x1402 uint32
	x1401, x1402 = bits.Add32(x1387, x1260, uint32(uint1(x1400)))
	var x1403 uint32
	var x1404 uint32
	x1403, x1404 = bits.Add32(x1389, x1258, uint32(uint1(x1402)))
	var x1405 uint32
	var x1406 uint32
	x1405, x1406 = bits.Add32(x1391, x1256, uint32(uint1(x1404)))
	var x1407 uint32
	var x1408 uint32
	x1407, x1408 = bits.Add32(x1393, x1254, uint32(uint1(x1406)))
	var x1409 uint32
	var x1410 uint32
	x1409, x1410 = bits.Add32(x1395, x1252, uint32(uint1(x1408)))
	var x1411 uint32
	x1411, _ = bits.Add32(x1397, x1250, uint32(uint1(x1410)))
	var x1413 uint32
	var x1414 uint32
	x1413, x1414 = bits.Add32(x1399, x1273, uint32(0x0))
	var x1415 uint32
	var x1416 uint32
	x1415, x1416 = bits.Add32(x1401, x1271, uint32(uint1(x1414)))
	var x1417 uint32
	var x1418 uint32
	x1417, x1418 = bits.Add32(x1403, x1269, uint32(uint1(x1416)))
	var x1419 uint32
	var x1420 uint32
	x1419, x1420 = bits.Add32(x1405, x1267, uint32(uint1(x1418)))
	var x1421 uint32
	var x1422 uint32
	x1421, x1422 = bits.Add32(x1407, x1265, uint32(uint1(x1420)))
	var x1423 uint32
	var x1424 uint32
	x1423, x1424 = bits.Add32(x1409, x1263, uint32(uint1(x1422)))
	var x1425 uint32
	x1425, _ = bits.Add32(x1411, x1261, uint32(uint1(x1424)))
	var x1427 uint32
	var x1428 uint32
	x1427, x1428 = bits.Add32(x1312, x1275, uint32(0x0))
	var x1429 uint32
	var x1430 uint32
	x1429, x1430 = bits.Add32(x1413, x1276, uint32(uint1(x1428)))
	var x1431 uint32
	var x1432 uint32
	x1431, x1432 = bits.Add32(x1415, x1274, uint32(uint1(x1430)))
	var x1433 uint32
	var x1434 uint32
	x1433, x1434 = bits.Add32(x1417, x1272, uint32(uint1(x1432)))
	var x1435 uint32
	var x1436 uint32
	x1435, x1436 = bits.Add32(x1419, x1270, uint32(uint1(x1434)))
	var x1437 uint32
	var x1438 uint32
	x1437, x1438 = bits.Add32(x1421, x1268, uint32(uint1(x1436)))
	var x1439 uint32
	var x1440 uint32
	x1439, x1440 = bits.Add32(x1423, x1266, uint32(uint1(x1438)))
	var x1441 uint32
	x1441, _ = bits.Add32(x1425, x1264, uint32(uint1(x1440)))
	var x1443 uint32
	var x1444 uint32
	x1443, x1444 = bits.Add32(x1427, x1291, uint32(0x0))
	var x1445 uint32
	var x1446 uint32
	x1445, x1446 = bits.Add32(x1429, x1289, uint32(uint1(x1444)))
	var x1447 uint32
	var x1448 uint32
	x1447, x1448 = bits.Add32(x1431, x1287, uint32(uint1(x1446)))
	var x1449 uint32
	var x1450 uint32
	x1449, x1450 = bits.Add32(x1433, x1285, uint32(uint1(x1448)))
	var x1451 uint32
	var x1452 uint32
	x1451, x1452 = bits.Add32(x1435, x1283, uint32(uint1(x1450)))
	var x1453 uint32
	var x1454 uint32
	x1453, x1454 = bits.Add32(x1437, x1281, uint32(uint1(x1452)))
	var x1455 uint32
	var x1456 uint32
	x1455, x1456 = bits.Add32(x1439, x1279, uint32(uint1(x1454)))
	var x1457 uint32
	x1457, _ = bits.Add32(x1441, x1277, uint32(uint1(x1456)))
	var x1459 uint32
	var x1460 uint32
	x1459, x1460 = bits.Add32(x1314, x1293, uint32(0x0))
	var x1461 uint32
	var x1462 uint32
	x1461, x1462 = bits.Add32(x1443, x1294, uint32(uint1(x1460)))
	var x1463 uint32
	var x1464 uint32
	x1463, x1464 = bits.Add32(x1445, x1292, uint32(uint1(x1462)))
	var x1465 uint32
	var x1466 uint32
	x1465, x1466 = bits.Add32(x1447, x1290, uint32(uint1(x1464)))
	var x1467 uint32
	var x1468 uint32
	x1467, x1468 = bits.Add32(x1449, x1288, uint32(uint1(x1466)))
	var x1469 uint32
	var x1470 uint32
	x1469, x1470 = bits.Add32(x1451, x1286, uint32(uint1(x1468)))
	var x1471 uint32
	var x1472 uint32
	x1471, x1472 = bits.Add32(x1453, x1284, uint32(uint1(x1470)))
	var x1473 uint32
	var x1474 uint32
	x1473, x1474 = bits.Add32(x1455, x1282, uint32(uint1(x1472)))
	var x1475 uint32
	x1475, _ = bits.Add32(x1457, x1280, uint32(uint1(x1474)))
	var x1477 uint32
	var x1478 uint32
	x1477, x1478 = bits.Add32(x1459, x1311, uint32(0x0))
	var x1479 uint32
	var x1480 uint32
	x1479, x1480 = bits.Add32(x1461, x1309, uint32(uint1(x1478)))
	var x1481 uint32
	var x1482 uint32
	x1481, x1482 = bits.Add32(x1463, x1307, uint32(uint1(x1480)))
	var x1483 uint32
	var x1484 uint32
	x1483, x1484 = bits.Add32(x1465, x1305, uint32(uint1(x1482)))
	var x1485 uint32
	var x1486 uint32
	x1485, x1486 = bits.Add32(x1467, x1303, uint32(uint1(x1484)))
	var x1487 uint32
	var x1488 uint32
	x1487, x1488 = bits.Add32(x1469, x1301, uint32(uint1(x1486)))
	var x1489 uint32
	var x1490 uint32
	x1489, x1490 = bits.Add32(x1471, x1299, uint32(uint1(x1488)))
	var x1491 uint32
	var x1492 uint32
	x1491, x1492 = bits.Add32(x1473, x1297, uint32(uint1(x1490)))
	var x1493 uint32
	x1493, _ = bits.Add32(x1475, x1295, uint32(uint1(x1492)))
	var x1495 uint32
	var x1496 uint32
	x1495, x1496 = bits.Add32(x437, x729, uint32(0x0))
	var x1497 uint32
	var x1498 uint32
	x1497, x1498 = bits.Add32(x601, x893, uint32(uint1(x1496)))
	var x1499 uint32
	var x1500 uint32
	x1499, x1500 = bits.Add32(x603, x895, uint32(uint1(x1498)))
	var x1501 uint32
	var x1502 uint32
	x1501, x1502 = bits.Add32(x605, x897, uint32(uint1(x1500)))
	var x1503 uint32
	var x1504 uint32
	x1503, x1504 = bits.Add32(x607, x899, uint32(uint1(x1502)))
	var x1505 uint32
	var x1506 uint32
	x1505, x1506 = bits.Add32(x609, x901, uint32(uint1(x1504)))
	var x1507 uint32
	var x1508 uint32
	x1507, x1508 = bits.Add32(x611, x903, uint32(uint1(x1506)))
	var x1509 uint32
	var x1510 uint32
	x1509, x1510 = bits.Add32(x613, x905, uint32(uint1(x1508)))
	var x1511 uint32
	var x1512 uint32
	x1511, x1512 = bits.Add32(x615, x907, uint32(uint1(x1510)))
	var x1513 uint32
	x1513, _ = bits.Add32(x617, x909, uint32(uint1(x1512)))
	var x1515 uint32
	var x1516 uint32
	x1515, x1516 = bits.Add32(x1021, x1313, uint32(0x0))
	var x1517 uint32
	var x1518 uint32
	x1517, x1518 = bits.Add32(x1185, x1477, uint32(uint1(x1516)))
	var x1519 uint32
	var x1520 uint32
	x1519, x1520 = bits.Add32(x1187, x1479, uint32(uint1(x1518)))
	var x1521 uint32
	var x1522 uint32
	x1521, x1522 = bits.Add32(x1189, x1481, uint32(uint1(x1520)))
	var x1523 uint32
	var x1524 uint32
	x1523, x1524 = bits.Add32(x1191, x1483, uint32(uint1(x1522)))
	var x1525 uint32
	var x1526 uint32
	x1525, x1526 = bits.Add32(x1193, x1485, uint32(uint1(x1524)))
	var x1527 uint32
	var x1528 uint32
	x1527, x1528 = bits.Add32(x1195, x1487, uint32(uint1(x1526)))
	var x1529 uint32
	var x1530 uint32
	x1529, x1530 = bits.Add32(x1197, x1489, uint32(uint1(x1528)))
	var x1531 uint32
	var x1532 uint32
	x1531, x1532 = bits.Add32(x1199, x1491, uint32(uint1(x1530)))
	var x1533 uint32
	x1533, _ = bits.Add32(x1201, x1493, uint32(uint1(x1532)))
	x1535 := ((x1495 >> 30) | ((x1497 << 2) & 0xffffffff))
	x1536 := ((x1497 >> 30) | ((x1499 << 2) & 0xffffffff))
	x1537 := ((x1499 >> 30) | ((x1501 << 2) & 0xffffffff))
	x1538 := ((x1501 >> 30) | ((x1503 << 2) & 0xffffffff))
	x1539 := ((x1503 >> 30) | ((x1505 << 2) & 0xffffffff))
	x1540 := ((x1505 >> 30) | ((x1507 << 2) & 0xffffffff))
	x1541 := ((x1507 >> 30) | ((x1509 << 2) & 0xffffffff))
	x1542 := ((x1509 >> 30) | ((x1511 << 2) & 0xffffffff))
	x1543 := ((x1511 >> 30) | ((x1513 << 2) & 0xffffffff))
	x1544 := ((x1515 >> 30) | ((x1517 << 2) & 0xffffffff))
	x1545 := ((x1517 >> 30) | ((x1519 << 2) & 0xffffffff))
	x1546 := ((x1519 >> 30) | ((x1521 << 2) & 0xffffffff))
	x1547 := ((x1521 >> 30) | ((x1523 << 2) & 0xffffffff))
	x1548 := ((x1523 >> 30) | ((x1525 << 2) & 0xffffffff))
	x1549 := ((x1525 >> 30) | ((x1527 << 2) & 0xffffffff))
	x1550 := ((x1527 >> 30) | ((x1529 << 2) & 0xffffffff))
	x1551 := ((x1529 >> 30) | ((x1531 << 2) & 0xffffffff))
	x1552 := ((x1531 >> 30) | ((x1533 << 2) & 0xffffffff))
	x1553 := uint1(((uint32((uint64(x321) + uint64(x321))) & 0xffffffff) >> 31))
	x1554 := (uint32((uint64((^(uint32((uint64(x321) + uint64(x321))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1555 := (uint32((uint64(x321) + uint64(x321))) & 0xffffffff)
	x1556 := (x1555 >> 26)
	x1557 := (x1555 & 0x3ffffff)
	x1558 := (x1554 >> 26)
	x1559 := (x1554 & 0x3ffffff)
	x1560 := (0x7ffffda - x1559)
	x1561 := (0x3fffffe - x1558)
	x1562 := uint1((x1560 >> 26))
	x1563 := (x1560 & 0x3ffffff)
	x1564 := (uint32(x1562) + x1561)
	x1565 := (x1564 & 0x1ffffff)
	x1566 := (x1563 + 0x13)
	x1567 := uint1((x1566 >> 26))
	x1568 := (x1566 & 0x3ffffff)
	x1569 := (uint32(x1567) + x1565)
	x1570 := uint1((x1569 >> 25))
	x1571 := (x1569 & 0x1ffffff)
	x1572 := (uint32(x1570) + 0x3ffffff)
	var x1573 uint32
	cmovznzU32(&x1573, x1553, x1557, x1568)
	var x1574 uint32
	cmovznzU32(&x1574, x1553, x1556, x1571)
	var x1575 uint32
	cmovznzU32(&x1575, x1553, uint32(0x0), x1572)
	var x1576 uint32
	cmovznzU32(&x1576, x1553, uint32(0x0), 0x1ffffff)
	var x1577 uint32
	cmovznzU32(&x1577, x1553, uint32(0x0), 0x3ffffff)
	var x1578 uint32
	cmovznzU32(&x1578, x1553, uint32(0x0), 0x1ffffff)
	var x1579 uint32
	cmovznzU32(&x1579, x1553, uint32(0x0), 0x3ffffff)
	var x1580 uint32
	cmovznzU32(&x1580, x1553, uint32(0x0), 0x1ffffff)
	var x1581 uint32
	cmovznzU32(&x1581, x1553, uint32(0x0), 0x3ffffff)
	var x1582 uint32
	cmovznzU32(&x1582, x1553, uint32(0x0), 0x1ffffff)
	x1583 := uint1(((uint32((uint64(x322) + uint64(x322))) & 0xffffffff) >> 31))
	x1584 := (uint32((uint64((^(uint32((uint64(x322) + uint64(x322))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1585 := (uint32((uint64(x322) + uint64(x322))) & 0xffffffff)
	x1586 := (x1585 >> 26)
	x1587 := (x1585 & 0x3ffffff)
	x1588 := (x1584 >> 26)
	x1589 := (x1584 & 0x3ffffff)
	x1590 := (0x7ffffda - x1589)
	x1591 := (0x3fffffe - x1588)
	x1592 := uint1((x1590 >> 26))
	x1593 := (x1590 & 0x3ffffff)
	x1594 := (uint32(x1592) + x1591)
	x1595 := (x1594 & 0x1ffffff)
	x1596 := (x1593 + 0x13)
	x1597 := uint1((x1596 >> 26))
	x1598 := (x1596 & 0x3ffffff)
	x1599 := (uint32(x1597) + x1595)
	x1600 := uint1((x1599 >> 25))
	x1601 := (x1599 & 0x1ffffff)
	x1602 := (uint32(x1600) + 0x3ffffff)
	var x1603 uint32
	cmovznzU32(&x1603, x1583, x1587, x1598)
	var x1604 uint32
	cmovznzU32(&x1604, x1583, x1586, x1601)
	var x1605 uint32
	cmovznzU32(&x1605, x1583, uint32(0x0), x1602)
	var x1606 uint32
	cmovznzU32(&x1606, x1583, uint32(0x0), 0x1ffffff)
	var x1607 uint32
	cmovznzU32(&x1607, x1583, uint32(0x0), 0x3ffffff)
	var x1608 uint32
	cmovznzU32(&x1608, x1583, uint32(0x0), 0x1ffffff)
	var x1609 uint32
	cmovznzU32(&x1609, x1583, uint32(0x0), 0x3ffffff)
	var x1610 uint32
	cmovznzU32(&x1610, x1583, uint32(0x0), 0x1ffffff)
	var x1611 uint32
	cmovznzU32(&x1611, x1583, uint32(0x0), 0x3ffffff)
	var x1612 uint32
	cmovznzU32(&x1612, x1583, uint32(0x0), 0x1ffffff)
	x1613 := uint1(((uint32((uint64(x323) + uint64(x325))) & 0xffffffff) >> 31))
	x1614 := (uint32((uint64((^(uint32((uint64(x323) + uint64(x325))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1615 := (uint32((uint64(x323) + uint64(x325))) & 0xffffffff)
	x1616 := (x1615 >> 26)
	x1617 := (x1615 & 0x3ffffff)
	x1618 := (x1614 >> 26)
	x1619 := (x1614 & 0x3ffffff)
	x1620 := (0x7ffffda - x1619)
	x1621 := (0x3fffffe - x1618)
	x1622 := uint1((x1620 >> 26))
	x1623 := (x1620 & 0x3ffffff)
	x1624 := (uint32(x1622) + x1621)
	x1625 := (x1624 & 0x1ffffff)
	x1626 := (x1623 + 0x13)
	x1627 := uint1((x1626 >> 26))
	x1628 := (x1626 & 0x3ffffff)
	x1629 := (uint32(x1627) + x1625)
	x1630 := uint1((x1629 >> 25))
	x1631 := (x1629 & 0x1ffffff)
	x1632 := (uint32(x1630) + 0x3ffffff)
	var x1633 uint32
	cmovznzU32(&x1633, x1613, x1617, x1628)
	var x1634 uint32
	cmovznzU32(&x1634, x1613, x1616, x1631)
	var x1635 uint32
	cmovznzU32(&x1635, x1613, uint32(0x0), x1632)
	var x1636 uint32
	cmovznzU32(&x1636, x1613, uint32(0x0), 0x1ffffff)
	var x1637 uint32
	cmovznzU32(&x1637, x1613, uint32(0x0), 0x3ffffff)
	var x1638 uint32
	cmovznzU32(&x1638, x1613, uint32(0x0), 0x1ffffff)
	var x1639 uint32
	cmovznzU32(&x1639, x1613, uint32(0x0), 0x3ffffff)
	var x1640 uint32
	cmovznzU32(&x1640, x1613, uint32(0x0), 0x1ffffff)
	var x1641 uint32
	cmovznzU32(&x1641, x1613, uint32(0x0), 0x3ffffff)
	var x1642 uint32
	cmovznzU32(&x1642, x1613, uint32(0x0), 0x1ffffff)
	x1643 := uint1(((uint32((uint64(x324) + uint64(x326))) & 0xffffffff) >> 31))
	x1644 := (uint32((uint64((^(uint32((uint64(x324) + uint64(x326))) & 0xffffffff))) + uint64(0x1))) & 0xffffffff)
	x1645 := (uint32((uint64(x324) + uint64(x326))) & 0xffffffff)
	x1646 := (x1645 >> 26)
	x1647 := (x1645 & 0x3ffffff)
	x1648 := (x1644 >> 26)
	x1649 := (x1644 & 0x3ffffff)
	x1650 := (0x7ffffda - x1649)
	x1651 := (0x3fffffe - x1648)
	x1652 := uint1((x1650 >> 26))
	x1653 := (x1650 & 0x3ffffff)
	x1654 := (uint32(x1652) + x1651)
	x1655 := (x1654 & 0x1ffffff)
	x1656 := (x1653 + 0x13)
	x1657 := uint1((x1656 >> 26))
	x1658 := (x1656 & 0x3ffffff)
	x1659 := (uint32(x1657) + x1655)
	x1660 := uint1((x1659 >> 25))
	x1661 := (x1659 & 0x1ffffff)
	x1662 := (uint32(x1660) + 0x3ffffff)
	var x1663 uint32
	cmovznzU32(&x1663, x1643, x1647, x1658)
	var x1664 uint32
	cmovznzU32(&x1664, x1643, x1646, x1661)
	var x1665 uint32
	cmovznzU32(&x1665, x1643, uint32(0x0), x1662)
	var x1666 uint32
	cmovznzU32(&x1666, x1643, uint32(0x0), 0x1ffffff)
	var x1667 uint32
	cmovznzU32(&x1667, x1643, uint32(0x0), 0x3ffffff)
	var x1668 uint32
	cmovznzU32(&x1668, x1643, uint32(0x0), 0x1ffffff)
	var x1669 uint32
	cmovznzU32(&x1669, x1643, uint32(0x0), 0x3ffffff)
	var x1670 uint32
	cmovznzU32(&x1670, x1643, uint32(0x0), 0x1ffffff)
	var x1671 uint32
	cmovznzU32(&x1671, x1643, uint32(0x0), 0x3ffffff)
	var x1672 uint32
	cmovznzU32(&x1672, x1643, uint32(0x0), 0x1ffffff)
	x1673 := (uint64(x1582) * uint64((arg3[9] * 0x26)))
	x1674 := (uint64(x1582) * uint64((arg3[8] * 0x13)))
	x1675 := (uint64(x1582) * uint64((arg3[7] * 0x26)))
	x1676 := (uint64(x1582) * uint64((arg3[6] * 0x13)))
	x1677 := (uint64(x1582) * uint64((arg3[5] * 0x26)))
	x1678 := (uint64(x1582) * uint64((arg3[4] * 0x13)))
	x1679 := (uint64(x1582) * uint64((arg3[3] * 0x26)))
	x1680 := (uint64(x1582) * uint64((arg3[2] * 0x13)))
	x1681 := (uint64(x1582) * uint64((arg3[1] * 0x26)))
	x1682 := (uint64(x1581) * uint64((arg3[9] * 0x13)))
	x1683 := (uint64(x1581) * uint64((arg3[8] * 0x13)))
	x1684 := (uint64(x1581) * uint64((arg3[7] * 0x13)))
	x1685 := (uint64(x1581) * uint64((arg3[6] * 0x13)))
	x1686 := (uint64(x1581) * uint64((arg3[5] * 0x13)))
	x1687 := (uint64(x1581) * uint64((arg3[4] * 0x13)))
	x1688 := (uint64(x1581) * uint64((arg3[3] * 0x13)))
	x1689 := (uint64(x1581) * uint64((arg3[2] * 0x13)))
	x1690 := (uint64(x1580) * uint64((arg3[9] * 0x26)))
	x1691 := (uint64(x1580) * uint64((arg3[8] * 0x13)))
	x1692 := (uint64(x1580) * uint64((arg3[7] * 0x26)))
	x1693 := (uint64(x1580) * uint64((arg3[6] * 0x13)))
	x1694 := (uint64(x1580) * uint64((arg3[5] * 0x26)))
	x1695 := (uint64(x1580) * uint64((arg3[4] * 0x13)))
	x1696 := (uint64(x1580) * uint64((arg3[3] * 0x26)))
	x1697 := (uint64(x1579) * uint64((arg3[9] * 0x13)))
	x1698 := (uint64(x1579) * uint64((arg3[8] * 0x13)))
	x1699 := (uint64(x1579) * uint64((arg3[7] * 0x13)))
	x1700 := (uint64(x1579) * uint64((arg3[6] * 0x13)))
	x1701 := (uint64(x1579) * uint64((arg3[5] * 0x13)))
	x1702 := (uint64(x1579) * uint64((arg3[4] * 0x13)))
	x1703 := (uint64(x1578) * uint64((arg3[9] * 0x26)))
	x1704 := (uint64(x1578) * uint64((arg3[8] * 0x13)))
	x1705 := (uint64(x1578) * uint64((arg3[7] * 0x26)))
	x1706 := (uint64(x1578) * uint64((arg3[6] * 0x13)))
	x1707 := (uint64(x1578) * uint64((arg3[5] * 0x26)))
	x1708 := (uint64(x1577) * uint64((arg3[9] * 0x13)))
	x1709 := (uint64(x1577) * uint64((arg3[8] * 0x13)))
	x1710 := (uint64(x1577) * uint64((arg3[7] * 0x13)))
	x1711 := (uint64(x1577) * uint64((arg3[6] * 0x13)))
	x1712 := (uint64(x1576) * uint64((arg3[9] * 0x26)))
	x1713 := (uint64(x1576) * uint64((arg3[8] * 0x13)))
	x1714 := (uint64(x1576) * uint64((arg3[7] * 0x26)))
	x1715 := (uint64(x1575) * uint64((arg3[9] * 0x13)))
	x1716 := (uint64(x1575) * uint64((arg3[8] * 0x13)))
	x1717 := (uint64(x1574) * uint64((arg3[9] * 0x26)))
	x1718 := (uint64(x1582) * uint64(arg3[0]))
	x1719 := (uint64(x1581) * uint64(arg3[1]))
	x1720 := (uint64(x1581) * uint64(arg3[0]))
	x1721 := (uint64(x1580) * uint64(arg3[2]))
	x1722 := (uint64(x1580) * uint64((arg3[1] * 0x2)))
	x1723 := (uint64(x1580) * uint64(arg3[0]))
	x1724 := (uint64(x1579) * uint64(arg3[3]))
	x1725 := (uint64(x1579) * uint64(arg3[2]))
	x1726 := (uint64(x1579) * uint64(arg3[1]))
	x1727 := (uint64(x1579) * uint64(arg3[0]))
	x1728 := (uint64(x1578) * uint64(arg3[4]))
	x1729 := (uint64(x1578) * uint64((arg3[3] * 0x2)))
	x1730 := (uint64(x1578) * uint64(arg3[2]))
	x1731 := (uint64(x1578) * uint64((arg3[1] * 0x2)))
	x1732 := (uint64(x1578) * uint64(arg3[0]))
	x1733 := (uint64(x1577) * uint64(arg3[5]))
	x1734 := (uint64(x1577) * uint64(arg3[4]))
	x1735 := (uint64(x1577) * uint64(arg3[3]))
	x1736 := (uint64(x1577) * uint64(arg3[2]))
	x1737 := (uint64(x1577) * uint64(arg3[1]))
	x1738 := (uint64(x1577) * uint64(arg3[0]))
	x1739 := (uint64(x1576) * uint64(arg3[6]))
	x1740 := (uint64(x1576) * uint64((arg3[5] * 0x2)))
	x1741 := (uint64(x1576) * uint64(arg3[4]))
	x1742 := (uint64(x1576) * uint64((arg3[3] * 0x2)))
	x1743 := (uint64(x1576) * uint64(arg3[2]))
	x1744 := (uint64(x1576) * uint64((arg3[1] * 0x2)))
	x1745 := (uint64(x1576) * uint64(arg3[0]))
	x1746 := (uint64(x1575) * uint64(arg3[7]))
	x1747 := (uint64(x1575) * uint64(arg3[6]))
	x1748 := (uint64(x1575) * uint64(arg3[5]))
	x1749 := (uint64(x1575) * uint64(arg3[4]))
	x1750 := (uint64(x1575) * uint64(arg3[3]))
	x1751 := (uint64(x1575) * uint64(arg3[2]))
	x1752 := (uint64(x1575) * uint64(arg3[1]))
	x1753 := (uint64(x1575) * uint64(arg3[0]))
	x1754 := (uint64(x1574) * uint64(arg3[8]))
	x1755 := (uint64(x1574) * uint64((arg3[7] * 0x2)))
	x1756 := (uint64(x1574) * uint64(arg3[6]))
	x1757 := (uint64(x1574) * uint64((arg3[5] * 0x2)))
	x1758 := (uint64(x1574) * uint64(arg3[4]))
	x1759 := (uint64(x1574) * uint64((arg3[3] * 0x2)))
	x1760 := (uint64(x1574) * uint64(arg3[2]))
	x1761 := (uint64(x1574) * uint64((arg3[1] * 0x2)))
	x1762 := (uint64(x1574) * uint64(arg3[0]))
	x1763 := (uint64(x1573) * uint64(arg3[9]))
	x1764 := (uint64(x1573) * uint64(arg3[8]))
	x1765 := (uint64(x1573) * uint64(arg3[7]))
	x1766 := (uint64(x1573) * uint64(arg3[6]))
	x1767 := (uint64(x1573) * uint64(arg3[5]))
	x1768 := (uint64(x1573) * uint64(arg3[4]))
	x1769 := (uint64(x1573) * uint64(arg3[3]))
	x1770 := (uint64(x1573) * uint64(arg3[2]))
	x1771 := (uint64(x1573) * uint64(arg3[1]))
	x1772 := (uint64(x1573) * uint64(arg3[0]))
	x1773 := (x1772 + (x1717 + (x1716 + (x1714 + (x1711 + (x1707 + (x1702 + (x1696 + (x1689 + x1681)))))))))
	x1774 := (x1773 >> 26)
	x1775 := (uint32(x1773) & 0x3ffffff)
	x1776 := (x1763 + (x1754 + (x1746 + (x1739 + (x1733 + (x1728 + (x1724 + (x1721 + (x1719 + x1718)))))))))
	x1777 := (x1764 + (x1755 + (x1747 + (x1740 + (x1734 + (x1729 + (x1725 + (x1722 + (x1720 + x1673)))))))))
	x1778 := (x1765 + (x1756 + (x1748 + (x1741 + (x1735 + (x1730 + (x1726 + (x1723 + (x1682 + x1674)))))))))
	x1779 := (x1766 + (x1757 + (x1749 + (x1742 + (x1736 + (x1731 + (x1727 + (x1690 + (x1683 + x1675)))))))))
	x1780 := (x1767 + (x1758 + (x1750 + (x1743 + (x1737 + (x1732 + (x1697 + (x1691 + (x1684 + x1676)))))))))
	x1781 := (x1768 + (x1759 + (x1751 + (x1744 + (x1738 + (x1703 + (x1698 + (x1692 + (x1685 + x1677)))))))))
	x1782 := (x1769 + (x1760 + (x1752 + (x1745 + (x1708 + (x1704 + (x1699 + (x1693 + (x1686 + x1678)))))))))
	x1783 := (x1770 + (x1761 + (x1753 + (x1712 + (x1709 + (x1705 + (x1700 + (x1694 + (x1687 + x1679)))))))))
	x1784 := (x1771 + (x1762 + (x1715 + (x1713 + (x1710 + (x1706 + (x1701 + (x1695 + (x1688 + x1680)))))))))
	x1785 := (x1774 + x1784)
	x1786 := (x1785 >> 25)
	x1787 := (uint32(x1785) & 0x1ffffff)
	x1788 := (x1786 + x1783)
	x1789 := (x1788 >> 26)
	x1790 := (uint32(x1788) & 0x3ffffff)
	x1791 := (x1789 + x1782)
	x1792 := (x1791 >> 25)
	x1793 := (uint32(x1791) & 0x1ffffff)
	x1794 := (x1792 + x1781)
	x1795 := (x1794 >> 26)
	x1796 := (uint32(x1794) & 0x3ffffff)
	x1797 := (x1795 + x1780)
	x1798 := (x1797 >> 25)
	x1799 := (uint32(x1797) & 0x1ffffff)
	x1800 := (x1798 + x1779)
	x1801 := uint32((x1800 >> 26))
	x1802 := (uint32(x1800) & 0x3ffffff)
	x1803 := (uint64(x1801) + x1778)
	x1804 := uint32((x1803 >> 25))
	x1805 := (uint32(x1803) & 0x1ffffff)
	x1806 := (uint64(x1804) + x1777)
	x1807 := uint32((x1806 >> 26))
	x1808 := (uint32(x1806) & 0x3ffffff)
	x1809 := (uint64(x1807) + x1776)
	x1810 := uint32((x1809 >> 25))
	x1811 := (uint32(x1809) & 0x1ffffff)
	x1812 := (uint64(x1810) * uint64(0x13))
	x1813 := (uint64(x1775) + x1812)
	x1814 := uint32((x1813 >> 26))
	x1815 := (uint32(x1813) & 0x3ffffff)
	x1816 := (x1814 + x1787)
	x1817 := uint1((x1816 >> 25))
	x1818 := (x1816 & 0x1ffffff)
	x1819 := (uint32(x1817) + x1790)
	x1820 := (uint64(x1612) * uint64((arg4[9] * 0x26)))
	x1821 := (uint64(x1612) * uint64((arg4[8] * 0x13)))
	x1822 := (uint64(x1612) * uint64((arg4[7] * 0x26)))
	x1823 := (uint64(x1612) * uint64((arg4[6] * 0x13)))
	x1824 := (uint64(x1612) * uint64((arg4[5] * 0x26)))
	x1825 := (uint64(x1612) * uint64((arg4[4] * 0x13)))
	x1826 := (uint64(x1612) * uint64((arg4[3] * 0x26)))
	x1827 := (uint64(x1612) * uint64((arg4[2] * 0x13)))
	x1828 := (uint64(x1612) * uint64((arg4[1] * 0x26)))
	x1829 := (uint64(x1611) * uint64((arg4[9] * 0x13)))
	x1830 := (uint64(x1611) * uint64((arg4[8] * 0x13)))
	x1831 := (uint64(x1611) * uint64((arg4[7] * 0x13)))
	x1832 := (uint64(x1611) * uint64((arg4[6] * 0x13)))
	x1833 := (uint64(x1611) * uint64((arg4[5] * 0x13)))
	x1834 := (uint64(x1611) * uint64((arg4[4] * 0x13)))
	x1835 := (uint64(x1611) * uint64((arg4[3] * 0x13)))
	x1836 := (uint64(x1611) * uint64((arg4[2] * 0x13)))
	x1837 := (uint64(x1610) * uint64((arg4[9] * 0x26)))
	x1838 := (uint64(x1610) * uint64((arg4[8] * 0x13)))
	x1839 := (uint64(x1610) * uint64((arg4[7] * 0x26)))
	x1840 := (uint64(x1610) * uint64((arg4[6] * 0x13)))
	x1841 := (uint64(x1610) * uint64((arg4[5] * 0x26)))
	x1842 := (uint64(x1610) * uint64((arg4[4] * 0x13)))
	x1843 := (uint64(x1610) * uint64((arg4[3] * 0x26)))
	x1844 := (uint64(x1609) * uint64((arg4[9] * 0x13)))
	x1845 := (uint64(x1609) * uint64((arg4[8] * 0x13)))
	x1846 := (uint64(x1609) * uint64((arg4[7] * 0x13)))
	x1847 := (uint64(x1609) * uint64((arg4[6] * 0x13)))
	x1848 := (uint64(x1609) * uint64((arg4[5] * 0x13)))
	x1849 := (uint64(x1609) * uint64((arg4[4] * 0x13)))
	x1850 := (uint64(x1608) * uint64((arg4[9] * 0x26)))
	x1851 := (uint64(x1608) * uint64((arg4[8] * 0x13)))
	x1852 := (uint64(x1608) * uint64((arg4[7] * 0x26)))
	x1853 := (uint64(x1608) * uint64((arg4[6] * 0x13)))
	x1854 := (uint64(x1608) * uint64((arg4[5] * 0x26)))
	x1855 := (uint64(x1607) * uint64((arg4[9] * 0x13)))
	x1856 := (uint64(x1607) * uint64((arg4[8] * 0x13)))
	x1857 := (uint64(x1607) * uint64((arg4[7] * 0x13)))
	x1858 := (uint64(x1607) * uint64((arg4[6] * 0x13)))
	x1859 := (uint64(x1606) * uint64((arg4[9] * 0x26)))
	x1860 := (uint64(x1606) * uint64((arg4[8] * 0x13)))
	x1861 := (uint64(x1606) * uint64((arg4[7] * 0x26)))
	x1862 := (uint64(x1605) * uint64((arg4[9] * 0x13)))
	x1863 := (uint64(x1605) * uint64((arg4[8] * 0x13)))
	x1864 := (uint64(x1604) * uint64((arg4[9] * 0x26)))
	x1865 := (uint64(x1612) * uint64(arg4[0]))
	x1866 := (uint64(x1611) * uint64(arg4[1]))
	x1867 := (uint64(x1611) * uint64(arg4[0]))
	x1868 := (uint64(x1610) * uint64(arg4[2]))
	x1869 := (uint64(x1610) * uint64((arg4[1] * 0x2)))
	x1870 := (uint64(x1610) * uint64(arg4[0]))
	x1871 := (uint64(x1609) * uint64(arg4[3]))
	x1872 := (uint64(x1609) * uint64(arg4[2]))
	x1873 := (uint64(x1609) * uint64(arg4[1]))
	x1874 := (uint64(x1609) * uint64(arg4[0]))
	x1875 := (uint64(x1608) * uint64(arg4[4]))
	x1876 := (uint64(x1608) * uint64((arg4[3] * 0x2)))
	x1877 := (uint64(x1608) * uint64(arg4[2]))
	x1878 := (uint64(x1608) * uint64((arg4[1] * 0x2)))
	x1879 := (uint64(x1608) * uint64(arg4[0]))
	x1880 := (uint64(x1607) * uint64(arg4[5]))
	x1881 := (uint64(x1607) * uint64(arg4[4]))
	x1882 := (uint64(x1607) * uint64(arg4[3]))
	x1883 := (uint64(x1607) * uint64(arg4[2]))
	x1884 := (uint64(x1607) * uint64(arg4[1]))
	x1885 := (uint64(x1607) * uint64(arg4[0]))
	x1886 := (uint64(x1606) * uint64(arg4[6]))
	x1887 := (uint64(x1606) * uint64((arg4[5] * 0x2)))
	x1888 := (uint64(x1606) * uint64(arg4[4]))
	x1889 := (uint64(x1606) * uint64((arg4[3] * 0x2)))
	x1890 := (uint64(x1606) * uint64(arg4[2]))
	x1891 := (uint64(x1606) * uint64((arg4[1] * 0x2)))
	x1892 := (uint64(x1606) * uint64(arg4[0]))
	x1893 := (uint64(x1605) * uint64(arg4[7]))
	x1894 := (uint64(x1605) * uint64(arg4[6]))
	x1895 := (uint64(x1605) * uint64(arg4[5]))
	x1896 := (uint64(x1605) * uint64(arg4[4]))
	x1897 := (uint64(x1605) * uint64(arg4[3]))
	x1898 := (uint64(x1605) * uint64(arg4[2]))
	x1899 := (uint64(x1605) * uint64(arg4[1]))
	x1900 := (uint64(x1605) * uint64(arg4[0]))
	x1901 := (uint64(x1604) * uint64(arg4[8]))
	x1902 := (uint64(x1604) * uint64((arg4[7] * 0x2)))
	x1903 := (uint64(x1604) * uint64(arg4[6]))
	x1904 := (uint64(x1604) * uint64((arg4[5] * 0x2)))
	x1905 := (uint64(x1604) * uint64(arg4[4]))
	x1906 := (uint64(x1604) * uint64((arg4[3] * 0x2)))
	x1907 := (uint64(x1604) * uint64(arg4[2]))
	x1908 := (uint64(x1604) * uint64((arg4[1] * 0x2)))
	x1909 := (uint64(x1604) * uint64(arg4[0]))
	x1910 := (uint64(x1603) * uint64(arg4[9]))
	x1911 := (uint64(x1603) * uint64(arg4[8]))
	x1912 := (uint64(x1603) * uint64(arg4[7]))
	x1913 := (uint64(x1603) * uint64(arg4[6]))
	x1914 := (uint64(x1603) * uint64(arg4[5]))
	x1915 := (uint64(x1603) * uint64(arg4[4]))
	x1916 := (uint64(x1603) * uint64(arg4[3]))
	x1917 := (uint64(x1603) * uint64(arg4[2]))
	x1918 := (uint64(x1603) * uint64(arg4[1]))
	x1919 := (uint64(x1603) * uint64(arg4[0]))
	x1920 := (x1919 + (x1864 + (x1863 + (x1861 + (x1858 + (x1854 + (x1849 + (x1843 + (x1836 + x1828)))))))))
	x1921 := (x1920 >> 26)
	x1922 := (uint32(x1920) & 0x3ffffff)
	x1923 := (x1910 + (x1901 + (x1893 + (x1886 + (x1880 + (x1875 + (x1871 + (x1868 + (x1866 + x1865)))))))))
	x1924 := (x1911 + (x1902 + (x1894 + (x1887 + (x1881 + (x1876 + (x1872 + (x1869 + (x1867 + x1820)))))))))
	x1925 := (x1912 + (x1903 + (x1895 + (x1888 + (x1882 + (x1877 + (x1873 + (x1870 + (x1829 + x1821)))))))))
	x1926 := (x1913 + (x1904 + (x1896 + (x1889 + (x1883 + (x1878 + (x1874 + (x1837 + (x1830 + x1822)))))))))
	x1927 := (x1914 + (x1905 + (x1897 + (x1890 + (x1884 + (x1879 + (x1844 + (x1838 + (x1831 + x1823)))))))))
	x1928 := (x1915 + (x1906 + (x1898 + (x1891 + (x1885 + (x1850 + (x1845 + (x1839 + (x1832 + x1824)))))))))
	x1929 := (x1916 + (x1907 + (x1899 + (x1892 + (x1855 + (x1851 + (x1846 + (x1840 + (x1833 + x1825)))))))))
	x1930 := (x1917 + (x1908 + (x1900 + (x1859 + (x1856 + (x1852 + (x1847 + (x1841 + (x1834 + x1826)))))))))
	x1931 := (x1918 + (x1909 + (x1862 + (x1860 + (x1857 + (x1853 + (x1848 + (x1842 + (x1835 + x1827)))))))))
	x1932 := (x1921 + x1931)
	x1933 := (x1932 >> 25)
	x1934 := (uint32(x1932) & 0x1ffffff)
	x1935 := (x1933 + x1930)
	x1936 := (x1935 >> 26)
	x1937 := (uint32(x1935) & 0x3ffffff)
	x1938 := (x1936 + x1929)
	x1939 := (x1938 >> 25)
	x1940 := (uint32(x1938) & 0x1ffffff)
	x1941 := (x1939 + x1928)
	x1942 := (x1941 >> 26)
	x1943 := (uint32(x1941) & 0x3ffffff)
	x1944 := (x1942 + x1927)
	x1945 := (x1944 >> 25)
	x1946 := (uint32(x1944) & 0x1ffffff)
	x1947 := (x1945 + x1926)
	x1948 := uint32((x1947 >> 26))
	x1949 := (uint32(x1947) & 0x3ffffff)
	x1950 := (uint64(x1948) + x1925)
	x1951 := uint32((x1950 >> 25))
	x1952 := (uint32(x1950) & 0x1ffffff)
	x1953 := (uint64(x1951) + x1924)
	x1954 := uint32((x1953 >> 26))
	x1955 := (uint32(x1953) & 0x3ffffff)
	x1956 := (uint64(x1954) + x1923)
	x1957 := uint32((x1956 >> 25))
	x1958 := (uint32(x1956) & 0x1ffffff)
	x1959 := (uint64(x1957) * uint64(0x13))
	x1960 := (uint64(x1922) + x1959)
	x1961 := uint32((x1960 >> 26))
	x1962 := (uint32(x1960) & 0x3ffffff)
	x1963 := (x1961 + x1934)
	x1964 := uint1((x1963 >> 25))
	x1965 := (x1963 & 0x1ffffff)
	x1966 := (uint32(x1964) + x1937)
	x1967 := (uint64(x1642) * uint64((arg3[9] * 0x26)))
	x1968 := (uint64(x1642) * uint64((arg3[8] * 0x13)))
	x1969 := (uint64(x1642) * uint64((arg3[7] * 0x26)))
	x1970 := (uint64(x1642) * uint64((arg3[6] * 0x13)))
	x1971 := (uint64(x1642) * uint64((arg3[5] * 0x26)))
	x1972 := (uint64(x1642) * uint64((arg3[4] * 0x13)))
	x1973 := (uint64(x1642) * uint64((arg3[3] * 0x26)))
	x1974 := (uint64(x1642) * uint64((arg3[2] * 0x13)))
	x1975 := (uint64(x1642) * uint64((arg3[1] * 0x26)))
	x1976 := (uint64(x1641) * uint64((arg3[9] * 0x13)))
	x1977 := (uint64(x1641) * uint64((arg3[8] * 0x13)))
	x1978 := (uint64(x1641) * uint64((arg3[7] * 0x13)))
	x1979 := (uint64(x1641) * uint64((arg3[6] * 0x13)))
	x1980 := (uint64(x1641) * uint64((arg3[5] * 0x13)))
	x1981 := (uint64(x1641) * uint64((arg3[4] * 0x13)))
	x1982 := (uint64(x1641) * uint64((arg3[3] * 0x13)))
	x1983 := (uint64(x1641) * uint64((arg3[2] * 0x13)))
	x1984 := (uint64(x1640) * uint64((arg3[9] * 0x26)))
	x1985 := (uint64(x1640) * uint64((arg3[8] * 0x13)))
	x1986 := (uint64(x1640) * uint64((arg3[7] * 0x26)))
	x1987 := (uint64(x1640) * uint64((arg3[6] * 0x13)))
	x1988 := (uint64(x1640) * uint64((arg3[5] * 0x26)))
	x1989 := (uint64(x1640) * uint64((arg3[4] * 0x13)))
	x1990 := (uint64(x1640) * uint64((arg3[3] * 0x26)))
	x1991 := (uint64(x1639) * uint64((arg3[9] * 0x13)))
	x1992 := (uint64(x1639) * uint64((arg3[8] * 0x13)))
	x1993 := (uint64(x1639) * uint64((arg3[7] * 0x13)))
	x1994 := (uint64(x1639) * uint64((arg3[6] * 0x13)))
	x1995 := (uint64(x1639) * uint64((arg3[5] * 0x13)))
	x1996 := (uint64(x1639) * uint64((arg3[4] * 0x13)))
	x1997 := (uint64(x1638) * uint64((arg3[9] * 0x26)))
	x1998 := (uint64(x1638) * uint64((arg3[8] * 0x13)))
	x1999 := (uint64(x1638) * uint64((arg3[7] * 0x26)))
	x2000 := (uint64(x1638) * uint64((arg3[6] * 0x13)))
	x2001 := (uint64(x1638) * uint64((arg3[5] * 0x26)))
	x2002 := (uint64(x1637) * uint64((arg3[9] * 0x13)))
	x2003 := (uint64(x1637) * uint64((arg3[8] * 0x13)))
	x2004 := (uint64(x1637) * uint64((arg3[7] * 0x13)))
	x2005 := (uint64(x1637) * uint64((arg3[6] * 0x13)))
	x2006 := (uint64(x1636) * uint64((arg3[9] * 0x26)))
	x2007 := (uint64(x1636) * uint64((arg3[8] * 0x13)))
	x2008 := (uint64(x1636) * uint64((arg3[7] * 0x26)))
	x2009 := (uint64(x1635) * uint64((arg3[9] * 0x13)))
	x2010 := (uint64(x1635) * uint64((arg3[8] * 0x13)))
	x2011 := (uint64(x1634) * uint64((arg3[9] * 0x26)))
	x2012 := (uint64(x1642) * uint64(arg3[0]))
	x2013 := (uint64(x1641) * uint64(arg3[1]))
	x2014 := (uint64(x1641) * uint64(arg3[0]))
	x2015 := (uint64(x1640) * uint64(arg3[2]))
	x2016 := (uint64(x1640) * uint64((arg3[1] * 0x2)))
	x2017 := (uint64(x1640) * uint64(arg3[0]))
	x2018 := (uint64(x1639) * uint64(arg3[3]))
	x2019 := (uint64(x1639) * uint64(arg3[2]))
	x2020 := (uint64(x1639) * uint64(arg3[1]))
	x2021 := (uint64(x1639) * uint64(arg3[0]))
	x2022 := (uint64(x1638) * uint64(arg3[4]))
	x2023 := (uint64(x1638) * uint64((arg3[3] * 0x2)))
	x2024 := (uint64(x1638) * uint64(arg3[2]))
	x2025 := (uint64(x1638) * uint64((arg3[1] * 0x2)))
	x2026 := (uint64(x1638) * uint64(arg3[0]))
	x2027 := (uint64(x1637) * uint64(arg3[5]))
	x2028 := (uint64(x1637) * uint64(arg3[4]))
	x2029 := (uint64(x1637) * uint64(arg3[3]))
	x2030 := (uint64(x1637) * uint64(arg3[2]))
	x2031 := (uint64(x1637) * uint64(arg3[1]))
	x2032 := (uint64(x1637) * uint64(arg3[0]))
	x2033 := (uint64(x1636) * uint64(arg3[6]))
	x2034 := (uint64(x1636) * uint64((arg3[5] * 0x2)))
	x2035 := (uint64(x1636) * uint64(arg3[4]))
	x2036 := (uint64(x1636) * uint64((arg3[3] * 0x2)))
	x2037 := (uint64(x1636) * uint64(arg3[2]))
	x2038 := (uint64(x1636) * uint64((arg3[1] * 0x2)))
	x2039 := (uint64(x1636) * uint64(arg3[0]))
	x2040 := (uint64(x1635) * uint64(arg3[7]))
	x2041 := (uint64(x1635) * uint64(arg3[6]))
	x2042 := (uint64(x1635) * uint64(arg3[5]))
	x2043 := (uint64(x1635) * uint64(arg3[4]))
	x2044 := (uint64(x1635) * uint64(arg3[3]))
	x2045 := (uint64(x1635) * uint64(arg3[2]))
	x2046 := (uint64(x1635) * uint64(arg3[1]))
	x2047 := (uint64(x1635) * uint64(arg3[0]))
	x2048 := (uint64(x1634) * uint64(arg3[8]))
	x2049 := (uint64(x1634) * uint64((arg3[7] * 0x2)))
	x2050 := (uint64(x1634) * uint64(arg3[6]))
	x2051 := (uint64(x1634) * uint64((arg3[5] * 0x2)))
	x2052 := (uint64(x1634) * uint64(arg3[4]))
	x2053 := (uint64(x1634) * uint64((arg3[3] * 0x2)))
	x2054 := (uint64(x1634) * uint64(arg3[2]))
	x2055 := (uint64(x1634) * uint64((arg3[1] * 0x2)))
	x2056 := (uint64(x1634) * uint64(arg3[0]))
	x2057 := (uint64(x1633) * uint64(arg3[9]))
	x2058 := (uint64(x1633) * uint64(arg3[8]))
	x2059 := (uint64(x1633) * uint64(arg3[7]))
	x2060 := (uint64(x1633) * uint64(arg3[6]))
	x2061 := (uint64(x1633) * uint64(arg3[5]))
	x2062 := (uint64(x1633) * uint64(arg3[4]))
	x2063 := (uint64(x1633) * uint64(arg3[3]))
	x2064 := (uint64(x1633) * uint64(arg3[2]))
	x2065 := (uint64(x1633) * uint64(arg3[1]))
	x2066 := (uint64(x1633) * uint64(arg3[0]))
	x2067 := (x2066 + (x2011 + (x2010 + (x2008 + (x2005 + (x2001 + (x1996 + (x1990 + (x1983 + x1975)))))))))
	x2068 := (x2067 >> 26)
	x2069 := (uint32(x2067) & 0x3ffffff)
	x2070 := (x2057 + (x2048 + (x2040 + (x2033 + (x2027 + (x2022 + (x2018 + (x2015 + (x2013 + x2012)))))))))
	x2071 := (x2058 + (x2049 + (x2041 + (x2034 + (x2028 + (x2023 + (x2019 + (x2016 + (x2014 + x1967)))))))))
	x2072 := (x2059 + (x2050 + (x2042 + (x2035 + (x2029 + (x2024 + (x2020 + (x2017 + (x1976 + x1968)))))))))
	x2073 := (x2060 + (x2051 + (x2043 + (x2036 + (x2030 + (x2025 + (x2021 + (x1984 + (x1977 + x1969)))))))))
	x2074 := (x2061 + (x2052 + (x2044 + (x2037 + (x2031 + (x2026 + (x1991 + (x1985 + (x1978 + x1970)))))))))
	x2075 := (x2062 + (x2053 + (x2045 + (x2038 + (x2032 + (x1997 + (x1992 + (x1986 + (x1979 + x1971)))))))))
	x2076 := (x2063 + (x2054 + (x2046 + (x2039 + (x2002 + (x1998 + (x1993 + (x1987 + (x1980 + x1972)))))))))
	x2077 := (x2064 + (x2055 + (x2047 + (x2006 + (x2003 + (x1999 + (x1994 + (x1988 + (x1981 + x1973)))))))))
	x2078 := (x2065 + (x2056 + (x2009 + (x2007 + (x2004 + (x2000 + (x1995 + (x1989 + (x1982 + x1974)))))))))
	x2079 := (x2068 + x2078)
	x2080 := (x2079 >> 25)
	x2081 := (uint32(x2079) & 0x1ffffff)
	x2082 := (x2080 + x2077)
	x2083 := (x2082 >> 26)
	x2084 := (uint32(x2082) & 0x3ffffff)
	x2085 := (x2083 + x2076)
	x2086 := (x2085 >> 25)
	x2087 := (uint32(x2085) & 0x1ffffff)
	x2088 := (x2086 + x2075)
	x2089 := (x2088 >> 26)
	x2090 := (uint32(x2088) & 0x3ffffff)
	x2091 := (x2089 + x2074)
	x2092 := (x2091 >> 25)
	x2093 := (uint32(x2091) & 0x1ffffff)
	x2094 := (x2092 + x2073)
	x2095 := uint32((x2094 >> 26))
	x2096 := (uint32(x2094) & 0x3ffffff)
	x2097 := (uint64(x2095) + x2072)
	x2098 := uint32((x2097 >> 25))
	x2099 := (uint32(x2097) & 0x1ffffff)
	x2100 := (uint64(x2098) + x2071)
	x2101 := uint32((x2100 >> 26))
	x2102 := (uint32(x2100) & 0x3ffffff)
	x2103 := (uint64(x2101) + x2070)
	x2104 := uint32((x2103 >> 25))
	x2105 := (uint32(x2103) & 0x1ffffff)
	x2106 := (uint64(x2104) * uint64(0x13))
	x2107 := (uint64(x2069) + x2106)
	x2108 := uint32((x2107 >> 26))
	x2109 := (uint32(x2107) & 0x3ffffff)
	x2110 := (x2108 + x2081)
	x2111 := uint1((x2110 >> 25))
	x2112 := (x2110 & 0x1ffffff)
	x2113 := (uint32(x2111) + x2084)
	x2114 := (uint64(x1672) * uint64((arg4[9] * 0x26)))
	x2115 := (uint64(x1672) * uint64((arg4[8] * 0x13)))
	x2116 := (uint64(x1672) * uint64((arg4[7] * 0x26)))
	x2117 := (uint64(x1672) * uint64((arg4[6] * 0x13)))
	x2118 := (uint64(x1672) * uint64((arg4[5] * 0x26)))
	x2119 := (uint64(x1672) * uint64((arg4[4] * 0x13)))
	x2120 := (uint64(x1672) * uint64((arg4[3] * 0x26)))
	x2121 := (uint64(x1672) * uint64((arg4[2] * 0x13)))
	x2122 := (uint64(x1672) * uint64((arg4[1] * 0x26)))
	x2123 := (uint64(x1671) * uint64((arg4[9] * 0x13)))
	x2124 := (uint64(x1671) * uint64((arg4[8] * 0x13)))
	x2125 := (uint64(x1671) * uint64((arg4[7] * 0x13)))
	x2126 := (uint64(x1671) * uint64((arg4[6] * 0x13)))
	x2127 := (uint64(x1671) * uint64((arg4[5] * 0x13)))
	x2128 := (uint64(x1671) * uint64((arg4[4] * 0x13)))
	x2129 := (uint64(x1671) * uint64((arg4[3] * 0x13)))
	x2130 := (uint64(x1671) * uint64((arg4[2] * 0x13)))
	x2131 := (uint64(x1670) * uint64((arg4[9] * 0x26)))
	x2132 := (uint64(x1670) * uint64((arg4[8] * 0x13)))
	x2133 := (uint64(x1670) * uint64((arg4[7] * 0x26)))
	x2134 := (uint64(x1670) * uint64((arg4[6] * 0x13)))
	x2135 := (uint64(x1670) * uint64((arg4[5] * 0x26)))
	x2136 := (uint64(x1670) * uint64((arg4[4] * 0x13)))
	x2137 := (uint64(x1670) * uint64((arg4[3] * 0x26)))
	x2138 := (uint64(x1669) * uint64((arg4[9] * 0x13)))
	x2139 := (uint64(x1669) * uint64((arg4[8] * 0x13)))
	x2140 := (uint64(x1669) * uint64((arg4[7] * 0x13)))
	x2141 := (uint64(x1669) * uint64((arg4[6] * 0x13)))
	x2142 := (uint64(x1669) * uint64((arg4[5] * 0x13)))
	x2143 := (uint64(x1669) * uint64((arg4[4] * 0x13)))
	x2144 := (uint64(x1668) * uint64((arg4[9] * 0x26)))
	x2145 := (uint64(x1668) * uint64((arg4[8] * 0x13)))
	x2146 := (uint64(x1668) * uint64((arg4[7] * 0x26)))
	x2147 := (uint64(x1668) * uint64((arg4[6] * 0x13)))
	x2148 := (uint64(x1668) * uint64((arg4[5] * 0x26)))
	x2149 := (uint64(x1667) * uint64((arg4[9] * 0x13)))
	x2150 := (uint64(x1667) * uint64((arg4[8] * 0x13)))
	x2151 := (uint64(x1667) * uint64((arg4[7] * 0x13)))
	x2152 := (uint64(x1667) * uint64((arg4[6] * 0x13)))
	x2153 := (uint64(x1666) * uint64((arg4[9] * 0x26)))
	x2154 := (uint64(x1666) * uint64((arg4[8] * 0x13)))
	x2155 := (uint64(x1666) * uint64((arg4[7] * 0x26)))
	x2156 := (uint64(x1665) * uint64((arg4[9] * 0x13)))
	x2157 := (uint64(x1665) * uint64((arg4[8] * 0x13)))
	x2158 := (uint64(x1664) * uint64((arg4[9] * 0x26)))
	x2159 := (uint64(x1672) * uint64(arg4[0]))
	x2160 := (uint64(x1671) * uint64(arg4[1]))
	x2161 := (uint64(x1671) * uint64(arg4[0]))
	x2162 := (uint64(x1670) * uint64(arg4[2]))
	x2163 := (uint64(x1670) * uint64((arg4[1] * 0x2)))
	x2164 := (uint64(x1670) * uint64(arg4[0]))
	x2165 := (uint64(x1669) * uint64(arg4[3]))
	x2166 := (uint64(x1669) * uint64(arg4[2]))
	x2167 := (uint64(x1669) * uint64(arg4[1]))
	x2168 := (uint64(x1669) * uint64(arg4[0]))
	x2169 := (uint64(x1668) * uint64(arg4[4]))
	x2170 := (uint64(x1668) * uint64((arg4[3] * 0x2)))
	x2171 := (uint64(x1668) * uint64(arg4[2]))
	x2172 := (uint64(x1668) * uint64((arg4[1] * 0x2)))
	x2173 := (uint64(x1668) * uint64(arg4[0]))
	x2174 := (uint64(x1667) * uint64(arg4[5]))
	x2175 := (uint64(x1667) * uint64(arg4[4]))
	x2176 := (uint64(x1667) * uint64(arg4[3]))
	x2177 := (uint64(x1667) * uint64(arg4[2]))
	x2178 := (uint64(x1667) * uint64(arg4[1]))
	x2179 := (uint64(x1667) * uint64(arg4[0]))
	x2180 := (uint64(x1666) * uint64(arg4[6]))
	x2181 := (uint64(x1666) * uint64((arg4[5] * 0x2)))
	x2182 := (uint64(x1666) * uint64(arg4[4]))
	x2183 := (uint64(x1666) * uint64((arg4[3] * 0x2)))
	x2184 := (uint64(x1666) * uint64(arg4[2]))
	x2185 := (uint64(x1666) * uint64((arg4[1] * 0x2)))
	x2186 := (uint64(x1666) * uint64(arg4[0]))
	x2187 := (uint64(x1665) * uint64(arg4[7]))
	x2188 := (uint64(x1665) * uint64(arg4[6]))
	x2189 := (uint64(x1665) * uint64(arg4[5]))
	x2190 := (uint64(x1665) * uint64(arg4[4]))
	x2191 := (uint64(x1665) * uint64(arg4[3]))
	x2192 := (uint64(x1665) * uint64(arg4[2]))
	x2193 := (uint64(x1665) * uint64(arg4[1]))
	x2194 := (uint64(x1665) * uint64(arg4[0]))
	x2195 := (uint64(x1664) * uint64(arg4[8]))
	x2196 := (uint64(x1664) * uint64((arg4[7] * 0x2)))
	x2197 := (uint64(x1664) * uint64(arg4[6]))
	x2198 := (uint64(x1664) * uint64((arg4[5] * 0x2)))
	x2199 := (uint64(x1664) * uint64(arg4[4]))
	x2200 := (uint64(x1664) * uint64((arg4[3] * 0x2)))
	x2201 := (uint64(x1664) * uint64(arg4[2]))
	x2202 := (uint64(x1664) * uint64((arg4[1] * 0x2)))
	x2203 := (uint64(x1664) * uint64(arg4[0]))
	x2204 := (uint64(x1663) * uint64(arg4[9]))
	x2205 := (uint64(x1663) * uint64(arg4[8]))
	x2206 := (uint64(x1663) * uint64(arg4[7]))
	x2207 := (uint64(x1663) * uint64(arg4[6]))
	x2208 := (uint64(x1663) * uint64(arg4[5]))
	x2209 := (uint64(x1663) * uint64(arg4[4]))
	x2210 := (uint64(x1663) * uint64(arg4[3]))
	x2211 := (uint64(x1663) * uint64(arg4[2]))
	x2212 := (uint64(x1663) * uint64(arg4[1]))
	x2213 := (uint64(x1663) * uint64(arg4[0]))
	x2214 := (x2213 + (x2158 + (x2157 + (x2155 + (x2152 + (x2148 + (x2143 + (x2137 + (x2130 + x2122)))))))))
	x2215 := (x2214 >> 26)
	x2216 := (uint32(x2214) & 0x3ffffff)
	x2217 := (x2204 + (x2195 + (x2187 + (x2180 + (x2174 + (x2169 + (x2165 + (x2162 + (x2160 + x2159)))))))))
	x2218 := (x2205 + (x2196 + (x2188 + (x2181 + (x2175 + (x2170 + (x2166 + (x2163 + (x2161 + x2114)))))))))
	x2219 := (x2206 + (x2197 + (x2189 + (x2182 + (x2176 + (x2171 + (x2167 + (x2164 + (x2123 + x2115)))))))))
	x2220 := (x2207 + (x2198 + (x2190 + (x2183 + (x2177 + (x2172 + (x2168 + (x2131 + (x2124 + x2116)))))))))
	x2221 := (x2208 + (x2199 + (x2191 + (x2184 + (x2178 + (x2173 + (x2138 + (x2132 + (x2125 + x2117)))))))))
	x2222 := (x2209 + (x2200 + (x2192 + (x2185 + (x2179 + (x2144 + (x2139 + (x2133 + (x2126 + x2118)))))))))
	x2223 := (x2210 + (x2201 + (x2193 + (x2186 + (x2149 + (x2145 + (x2140 + (x2134 + (x2127 + x2119)))))))))
	x2224 := (x2211 + (x2202 + (x2194 + (x2153 + (x2150 + (x2146 + (x2141 + (x2135 + (x2128 + x2120)))))))))
	x2225 := (x2212 + (x2203 + (x2156 + (x2154 + (x2151 + (x2147 + (x2142 + (x2136 + (x2129 + x2121)))))))))
	x2226 := (x2215 + x2225)
	x2227 := (x2226 >> 25)
	x2228 := (uint32(x2226) & 0x1ffffff)
	x2229 := (x2227 + x2224)
	x2230 := (x2229 >> 26)
	x2231 := (uint32(x2229) & 0x3ffffff)
	x2232 := (x2230 + x2223)
	x2233 := (x2232 >> 25)
	x2234 := (uint32(x2232) & 0x1ffffff)
	x2235 := (x2233 + x2222)
	x2236 := (x2235 >> 26)
	x2237 := (uint32(x2235) & 0x3ffffff)
	x2238 := (x2236 + x2221)
	x2239 := (x2238 >> 25)
	x2240 := (uint32(x2238) & 0x1ffffff)
	x2241 := (x2239 + x2220)
	x2242 := uint32((x2241 >> 26))
	x2243 := (uint32(x2241) & 0x3ffffff)
	x2244 := (uint64(x2242) + x2219)
	x2245 := uint32((x2244 >> 25))
	x2246 := (uint32(x2244) & 0x1ffffff)
	x2247 := (uint64(x2245) + x2218)
	x2248 := uint32((x2247 >> 26))
	x2249 := (uint32(x2247) & 0x3ffffff)
	x2250 := (uint64(x2248) + x2217)
	x2251 := uint32((x2250 >> 25))
	x2252 := (uint32(x2250) & 0x1ffffff)
	x2253 := (uint64(x2251) * uint64(0x13))
	x2254 := (uint64(x2216) + x2253)
	x2255 := uint32((x2254 >> 26))
	x2256 := (uint32(x2254) & 0x3ffffff)
	x2257 := (x2255 + x2228)
	x2258 := uint1((x2257 >> 25))
	x2259 := (x2257 & 0x1ffffff)
	x2260 := (uint32(x2258) + x2231)
	x2261 := (x1815 + x1962)
	x2262 := (x1818 + x1965)
	x2263 := (x1819 + x1966)
	x2264 := (x1793 + x1940)
	x2265 := (x1796 + x1943)
	x2266 := (x1799 + x1946)
	x2267 := (x1802 + x1949)
	x2268 := (x1805 + x1952)
	x2269 := (x1808 + x1955)
	x2270 := (x1811 + x1958)
	x2271 := uint1((x2261 >> 26))
	x2272 := (x2261 & 0x3ffffff)
	x2273 := (uint32(x2271) + x2262)
	x2274 := uint1((x2273 >> 25))
	x2275 := (x2273 & 0x1ffffff)
	x2276 := (uint32(x2274) + x2263)
	x2277 := (x2276 >> 26)
	x2278 := (x2276 & 0x3ffffff)
	x2279 := (x2277 + x2264)
	x2280 := (x2279 >> 25)
	x2281 := (x2279 & 0x1ffffff)
	x2282 := (x2280 + x2265)
	x2283 := (x2282 >> 26)
	x2284 := (x2282 & 0x3ffffff)
	x2285 := (x2283 + x2266)
	x2286 := (x2285 >> 25)
	x2287 := (x2285 & 0x1ffffff)
	x2288 := (x2286 + x2267)
	x2289 := (x2288 >> 26)
	x2290 := (x2288 & 0x3ffffff)
	x2291 := (x2289 + x2268)
	x2292 := (x2291 >> 25)
	x2293 := (x2291 & 0x1ffffff)
	x2294 := (x2292 + x2269)
	x2295 := (x2294 >> 26)
	x2296 := (x2294 & 0x3ffffff)
	x2297 := (x2295 + x2270)
	x2298 := (x2297 >> 25)
	x2299 := (x2297 & 0x1ffffff)
	x2300 := (x2298 * 0x13)
	x2301 := (x2272 + x2300)
	x2302 := uint1((x2301 >> 26))
	x2303 := (x2301 & 0x3ffffff)
	x2304 := (uint32(x2302) + x2275)
	x2305 := uint1((x2304 >> 25))
	x2306 := (x2304 & 0x1ffffff)
	x2307 := (uint32(x2305) + x2278)
	x2308 := (x2109 + x2256)
	x2309 := (x2112 + x2259)
	x2310 := (x2113 + x2260)
	x2311 := (x2087 + x2234)
	x2312 := (x2090 + x2237)
	x2313 := (x2093 + x2240)
	x2314 := (x2096 + x2243)
	x2315 := (x2099 + x2246)
	x2316 := (x2102 + x2249)
	x2317 := (x2105 + x2252)
	x2318 := uint1((x2308 >> 26))
	x2319 := (x2308 & 0x3ffffff)
	x2320 := (uint32(x2318) + x2309)
	x2321 := uint1((x2320 >> 25))
	x2322 := (x2320 & 0x1ffffff)
	x2323 := (uint32(x2321) + x2310)
	x2324 := (x2323 >> 26)
	x2325 := (x2323 & 0x3ffffff)
	x2326 := (x2324 + x2311)
	x2327 := (x2326 >> 25)
	x2328 := (x2326 & 0x1ffffff)
	x2329 := (x2327 + x2312)
	x2330 := (x2329 >> 26)
	x2331 := (x2329 & 0x3ffffff)
	x2332 := (x2330 + x2313)
	x2333 := (x2332 >> 25)
	x2334 := (x2332 & 0x1ffffff)
	x2335 := (x2333 + x2314)
	x2336 := (x2335 >> 26)
	x2337 := (x2335 & 0x3ffffff)
	x2338 := (x2336 + x2315)
	x2339 := (x2338 >> 25)
	x2340 := (x2338 & 0x1ffffff)
	x2341 := (x2339 + x2316)
	x2342 := (x2341 >> 26)
	x2343 := (x2341 & 0x3ffffff)
	x2344 := (x2342 + x2317)
	x2345 := (x2344 >> 25)
	x2346 := (x2344 & 0x1ffffff)
	x2347 := (x2345 * 0x13)
	x2348 := (x2319 + x2347)
	x2349 := uint1((x2348 >> 26))
	x2350 := (x2348 & 0x3ffffff)
	x2351 := (uint32(x2349) + x2322)
	x2352 := uint1((x2351 >> 25))
	x2353 := (x2351 & 0x1ffffff)
	x2354 := (uint32(x2352) + x2325)
	out1[0] = x1535
	out1[1] = x1536
	out1[2] = x1537
	out1[3] = x1538
	out1[4] = x1539
	out1[5] = x1540
	out1[6] = x1541
	out1[7] = x1542
	out1[8] = x1543
	out2[0] = x1544
	out2[1] = x1545
	out2[2] = x1546
	out2[3] = x1547
	out2[4] = x1548
	out2[5] = x1549
	out2[6] = x1550
	out2[7] = x1551
	out2[8] = x1552
	out3[0] = x2303
	out3[1] = x2306
	out3[2] = x2307
	out3[3] = x2281
	out3[4] = x2284
	out3[5] = x2287
	out3[6] = x2290
	out3[7] = x2293
	out3[8] = x2296
	out3[9] = x2299
	out4[0] = x2350
	out4[1] = x2353
	out4[2] = x2354
	out4[3] = x2328
	out4[4] = x2331
	out4[5] = x2334
	out4[6] = x2337
	out4[7] = x2340
	out4[8] = x2343
	out4[9] = x2346
}

// CarryScmul121666 multiplies a field element by 121666 and reduces the result.
//
// Postconditions:
//   eval out1 mod m = (121666 * eval arg1) mod m
//
func CarryScmul121666(out1 *TightFieldElement, arg1 *LooseFieldElement) {
	x1 := (uint64(0x1db42) * uint64(arg1[9]))
	x2 := (uint64(0x1db42) * uint64(arg1[8]))
	x3 := (uint64(0x1db42) * uint64(arg1[7]))
	x4 := (uint64(0x1db42) * uint64(arg1[6]))
	x5 := (uint64(0x1db42) * uint64(arg1[5]))
	x6 := (uint64(0x1db42) * uint64(arg1[4]))
	x7 := (uint64(0x1db42) * uint64(arg1[3]))
	x8 := (uint64(0x1db42) * uint64(arg1[2]))
	x9 := (uint64(0x1db42) * uint64(arg1[1]))
	x10 := (uint64(0x1db42) * uint64(arg1[0]))
	x11 := uint32((x10 >> 26))
	x12 := (uint32(x10) & 0x3ffffff)
	x13 := (uint64(x11) + x9)
	x14 := uint32((x13 >> 25))
	x15 := (uint32(x13) & 0x1ffffff)
	x16 := (uint64(x14) + x8)
	x17 := uint32((x16 >> 26))
	x18 := (uint32(x16) & 0x3ffffff)
	x19 := (uint64(x17) + x7)
	x20 := uint32((x19 >> 25))
	x21 := (uint32(x19) & 0x1ffffff)
	x22 := (uint64(x20) + x6)
	x23 := uint32((x22 >> 26))
	x24 := (uint32(x22) & 0x3ffffff)
	x25 := (uint64(x23) + x5)
	x26 := uint32((x25 >> 25))
	x27 := (uint32(x25) & 0x1ffffff)
	x28 := (uint64(x26) + x4)
	x29 := uint32((x28 >> 26))
	x30 := (uint32(x28) & 0x3ffffff)
	x31 := (uint64(x29) + x3)
	x32 := uint32((x31 >> 25))
	x33 := (uint32(x31) & 0x1ffffff)
	x34 := (uint64(x32) + x2)
	x35 := uint32((x34 >> 26))
	x36 := (uint32(x34) & 0x3ffffff)
	x37 := (uint64(x35) + x1)
	x38 := uint32((x37 >> 25))
	x39 := (uint32(x37) & 0x1ffffff)
	x40 := (x38 * 0x13)
	x41 := (x12 + x40)
	x42 := uint1((x41 >> 26))
	x43 := (x41 & 0x3ffffff)
	x44 := (uint32(x42) + x15)
	x45 := uint1((x44 >> 25))
	x46 := (x44 & 0x1ffffff)
	x47 := (uint32(x45) + x18)
	out1[0] = x43
	out1[1] = x46
	out1[2] = x47
	out1[3] = x21
	out1[4] = x24
	out1[5] = x27
	out1[6] = x30
	out1[7] = x33
	out1[8] = x36
	out1[9] = x39
}

// CarryAdd adds two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 + eval arg2) mod m
//
func CarryAdd(out1 *TightFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := (arg1[0] + arg2[0])
	x2 := ((x1 >> 26) + (arg1[1] + arg2[1]))
	x3 := ((x2 >> 25) + (arg1[2] + arg2[2]))
	x4 := ((x3 >> 26) + (arg1[3] + arg2[3]))
	x5 := ((x4 >> 25) + (arg1[4] + arg2[4]))
	x6 := ((x5 >> 26) + (arg1[5] + arg2[5]))
	x7 := ((x6 >> 25) + (arg1[6] + arg2[6]))
	x8 := ((x7 >> 26) + (arg1[7] + arg2[7]))
	x9 := ((x8 >> 25) + (arg1[8] + arg2[8]))
	x10 := ((x9 >> 26) + (arg1[9] + arg2[9]))
	x11 := ((x1 & 0x3ffffff) + ((x10 >> 25) * 0x13))
	x12 := (uint32(uint1((x11 >> 26))) + (x2 & 0x1ffffff))
	x13 := (x11 & 0x3ffffff)
	x14 := (x12 & 0x1ffffff)
	x15 := (uint32(uint1((x12 >> 25))) + (x3 & 0x3ffffff))
	x16 := (x4 & 0x1ffffff)
	x17 := (x5 & 0x3ffffff)
	x18 := (x6 & 0x1ffffff)
	x19 := (x7 & 0x3ffffff)
	x20 := (x8 & 0x1ffffff)
	x21 := (x9 & 0x3ffffff)
	x22 := (x10 & 0x1ffffff)
	out1[0] = x13
	out1[1] = x14
	out1[2] = x15
	out1[3] = x16
	out1[4] = x17
	out1[5] = x18
	out1[6] = x19
	out1[7] = x20
	out1[8] = x21
	out1[9] = x22
}

// CarrySub subtracts two field elements.
//
// Postconditions:
//   eval out1 mod m = (eval arg1 - eval arg2) mod m
//
func CarrySub(out1 *TightFieldElement, arg1 *TightFieldElement, arg2 *TightFieldElement) {
	x1 := ((0x7ffffda + arg1[0]) - arg2[0])
	x2 := ((x1 >> 26) + ((0x3fffffe + arg1[1]) - arg2[1]))
	x3 := ((x2 >> 25) + ((0x7fffffe + arg1[2]) - arg2[2]))
	x4 := ((x3 >> 26) + ((0x3fffffe + arg1[3]) - arg2[3]))
	x5 := ((x4 >> 25) + ((0x7fffffe + arg1[4]) - arg2[4]))
	x6 := ((x5 >> 26) + ((0x3fffffe + arg1[5]) - arg2[5]))
	x7 := ((x6 >> 25) + ((0x7fffffe + arg1[6]) - arg2[6]))
	x8 := ((x7 >> 26) + ((0x3fffffe + arg1[7]) - arg2[7]))
	x9 := ((x8 >> 25) + ((0x7fffffe + arg1[8]) - arg2[8]))
	x10 := ((x9 >> 26) + ((0x3fffffe + arg1[9]) - arg2[9]))
	x11 := ((x1 & 0x3ffffff) + ((x10 >> 25) * 0x13))
	x12 := (uint32(uint1((x11 >> 26))) + (x2 & 0x1ffffff))
	x13 := (x11 & 0x3ffffff)
	x14 := (x12 & 0x1ffffff)
	x15 := (uint32(uint1((x12 >> 25))) + (x3 & 0x3ffffff))
	x16 := (x4 & 0x1ffffff)
	x17 := (x5 & 0x3ffffff)
	x18 := (x6 & 0x1ffffff)
	x19 := (x7 & 0x3ffffff)
	x20 := (x8 & 0x1ffffff)
	x21 := (x9 & 0x3ffffff)
	x22 := (x10 & 0x1ffffff)
	out1[0] = x13
	out1[1] = x14
	out1[2] = x15
	out1[3] = x16
	out1[4] = x17
	out1[5] = x18
	out1[6] = x19
	out1[7] = x20
	out1[8] = x21
	out1[9] = x22
}

// CarryOpp negates a field element.
//
// Postconditions:
//   eval out1 mod m = -eval arg1 mod m
//
func CarryOpp(out1 *TightFieldElement, arg1 *TightFieldElement) {
	x1 := (0x7ffffda - arg1[0])
	x2 := (uint32(uint1((x1 >> 26))) + (0x3fffffe - arg1[1]))
	x3 := (uint32(uint1((x2 >> 25))) + (0x7fffffe - arg1[2]))
	x4 := (uint32(uint1((x3 >> 26))) + (0x3fffffe - arg1[3]))
	x5 := (uint32(uint1((x4 >> 25))) + (0x7fffffe - arg1[4]))
	x6 := (uint32(uint1((x5 >> 26))) + (0x3fffffe - arg1[5]))
	x7 := (uint32(uint1((x6 >> 25))) + (0x7fffffe - arg1[6]))
	x8 := (uint32(uint1((x7 >> 26))) + (0x3fffffe - arg1[7]))
	x9 := (uint32(uint1((x8 >> 25))) + (0x7fffffe - arg1[8]))
	x10 := (uint32(uint1((x9 >> 26))) + (0x3fffffe - arg1[9]))
	x11 := ((x1 & 0x3ffffff) + (uint32(uint1((x10 >> 25))) * 0x13))
	x12 := (uint32(uint1((x11 >> 26))) + (x2 & 0x1ffffff))
	x13 := (x11 & 0x3ffffff)
	x14 := (x12 & 0x1ffffff)
	x15 := (uint32(uint1((x12 >> 25))) + (x3 & 0x3ffffff))
	x16 := (x4 & 0x1ffffff)
	x17 := (x5 & 0x3ffffff)
	x18 := (x6 & 0x1ffffff)
	x19 := (x7 & 0x3ffffff)
	x20 := (x8 & 0x1ffffff)
	x21 := (x9 & 0x3ffffff)
	x22 := (x10 & 0x1ffffff)
	out1[0] = x13
	out1[1] = x14
	out1[2] = x15
	out1[3] = x16
	out1[4] = x17
	out1[5] = x18
	out1[6] = x19
	out1[7] = x20
	out1[8] = x21
	out1[9] = x22
}
