//! Autogenerated: 'src/ExtractionOCaml/unsaturated_solinas' --lang Rust --inline 25519 32 '(auto)' '2^255 - 19' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes one relax msat sat_from_bytes divstep divstep_precomp inner_loop inner_loop_hd update_fg update_vr jumpdivstep_precomp jumpdivstep_precomp_hd carry_scmul121666
//! curve description: 25519
//! machine_wordsize = 32 (from "32")
//! requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes, one, relax, msat, sat_from_bytes, divstep, divstep_precomp, inner_loop, inner_loop_hd, update_fg, update_vr, jumpdivstep_precomp, jumpdivstep_precomp_hd, carry_scmul121666
//! n = 10 (from "(auto)")
//! s-c = 2^255 - [(1, 19)] (from "2^255 - 19")
//! tight_bounds_multiplier = 1 (from "")
//!
//! Computed values:
//!   carry_chain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]
//!   eval z = z[0] + (z[1] << 26) + (z[2] << 51) + (z[3] << 77) + (z[4] << 102) + (z[5] << 128) + (z[6] << 153) + (z[7] << 179) + (z[8] << 204) + (z[9] << 230)
//!   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248)
//!   balance = [0x7ffffda, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe]

#![allow(unused_parens)]
#![allow(non_camel_case_types)]

pub type fiat_25519_u1 = u8;
pub type fiat_25519_i1 = i8;
pub type fiat_25519_u2 = u8;
pub type fiat_25519_i2 = i8;

/* The type fiat_25519_loose_field_element is a field element with loose bounds. */
/* Bounds: [[0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000]] */
pub type fiat_25519_loose_field_element = [u32; 10];

/* The type fiat_25519_tight_field_element is a field element with tight bounds. */
/* Bounds: [[0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000]] */
pub type fiat_25519_tight_field_element = [u32; 10];


/// The function fiat_25519_addcarryx_u32 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^32
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_addcarryx_u32(out1: &mut u32, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: u64 = (((arg1 as u64) + (arg2 as u64)) + (arg3 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: fiat_25519_u1 = ((x1 >> 32) as fiat_25519_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_subborrowx_u32 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^32
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_subborrowx_u32(out1: &mut u32, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: i64 = (((arg2 as i64) - (arg1 as i64)) - (arg3 as i64));
  let x2: fiat_25519_i1 = ((x1 >> 32) as fiat_25519_i1);
  let x3: u32 = ((x1 & (0xffffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_25519_i2) - (x2 as fiat_25519_i2)) as fiat_25519_u1);
}

/// The function fiat_25519_addcarryx_u26 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^26
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^26⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x3ffffff]
///   arg3: [0x0 ~> 0x3ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x3ffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_addcarryx_u26(out1: &mut u32, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: u32 = (((arg1 as u32) + arg2) + arg3);
  let x2: u32 = (x1 & 0x3ffffff);
  let x3: fiat_25519_u1 = ((x1 >> 26) as fiat_25519_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_subborrowx_u26 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^26
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^26⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x3ffffff]
///   arg3: [0x0 ~> 0x3ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x3ffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_subborrowx_u26(out1: &mut u32, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: i32 = ((((((arg2 as i64) - (arg1 as i64)) as i32) as i64) - (arg3 as i64)) as i32);
  let x2: fiat_25519_i1 = ((x1 >> 26) as fiat_25519_i1);
  let x3: u32 = (((x1 as i64) & (0x3ffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_25519_i2) - (x2 as fiat_25519_i2)) as fiat_25519_u1);
}

/// The function fiat_25519_addcarryx_u25 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^25
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^25⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1ffffff]
///   arg3: [0x0 ~> 0x1ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x1ffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_addcarryx_u25(out1: &mut u32, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: u32 = (((arg1 as u32) + arg2) + arg3);
  let x2: u32 = (x1 & 0x1ffffff);
  let x3: fiat_25519_u1 = ((x1 >> 25) as fiat_25519_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_subborrowx_u25 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^25
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^25⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1ffffff]
///   arg3: [0x0 ~> 0x1ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x1ffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_subborrowx_u25(out1: &mut u32, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: i32 = ((((((arg2 as i64) - (arg1 as i64)) as i32) as i64) - (arg3 as i64)) as i32);
  let x2: fiat_25519_i1 = ((x1 >> 25) as fiat_25519_i1);
  let x3: u32 = (((x1 as i64) & (0x1ffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_25519_i2) - (x2 as fiat_25519_i2)) as fiat_25519_u1);
}

/// The function fiat_25519_mulx_u32 is a multiplication, returning the full double-width result.
///
/// Postconditions:
///   out1 = (arg1 * arg2) mod 2^32
///   out2 = ⌊arg1 * arg2 / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_25519_mulx_u32(out1: &mut u32, out2: &mut u32, arg1: u32, arg2: u32) -> () {
  let x1: u64 = ((arg1 as u64) * (arg2 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: u32 = ((x1 >> 32) as u32);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_cmovznz_u32 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_25519_cmovznz_u32(out1: &mut u32, arg1: fiat_25519_u1, arg2: u32, arg3: u32) -> () {
  let x1: fiat_25519_u1 = (!(!arg1));
  let x2: u32 = ((((((0x0 as fiat_25519_i2) - (x1 as fiat_25519_i2)) as fiat_25519_i1) as i64) & (0xffffffff as i64)) as u32);
  let x3: u32 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_25519_cmovznz_u1 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1]
///   arg3: [0x0 ~> 0x1]
/// Output Bounds:
///   out1: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_cmovznz_u1(out1: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: fiat_25519_u1, arg3: fiat_25519_u1) -> () {
  let x1: fiat_25519_u1 = (!(!arg1));
  let x2: fiat_25519_u1 = ((((((0x0 as fiat_25519_i2) - (x1 as fiat_25519_i2)) as fiat_25519_i1) as fiat_25519_i2) & (0x1 as fiat_25519_i2)) as fiat_25519_u1);
  let x3: fiat_25519_u1 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_25519_carry_mul multiplies two field elements and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg2) mod m
///
#[inline]
pub fn fiat_25519_carry_mul(out1: &mut fiat_25519_tight_field_element, arg1: &fiat_25519_loose_field_element, arg2: &fiat_25519_loose_field_element) -> () {
  let x1: u64 = (((arg1[9]) as u64) * (((arg2[9]) * 0x26) as u64));
  let x2: u64 = (((arg1[9]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x3: u64 = (((arg1[9]) as u64) * (((arg2[7]) * 0x26) as u64));
  let x4: u64 = (((arg1[9]) as u64) * (((arg2[6]) * 0x13) as u64));
  let x5: u64 = (((arg1[9]) as u64) * (((arg2[5]) * 0x26) as u64));
  let x6: u64 = (((arg1[9]) as u64) * (((arg2[4]) * 0x13) as u64));
  let x7: u64 = (((arg1[9]) as u64) * (((arg2[3]) * 0x26) as u64));
  let x8: u64 = (((arg1[9]) as u64) * (((arg2[2]) * 0x13) as u64));
  let x9: u64 = (((arg1[9]) as u64) * (((arg2[1]) * 0x26) as u64));
  let x10: u64 = (((arg1[8]) as u64) * (((arg2[9]) * 0x13) as u64));
  let x11: u64 = (((arg1[8]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x12: u64 = (((arg1[8]) as u64) * (((arg2[7]) * 0x13) as u64));
  let x13: u64 = (((arg1[8]) as u64) * (((arg2[6]) * 0x13) as u64));
  let x14: u64 = (((arg1[8]) as u64) * (((arg2[5]) * 0x13) as u64));
  let x15: u64 = (((arg1[8]) as u64) * (((arg2[4]) * 0x13) as u64));
  let x16: u64 = (((arg1[8]) as u64) * (((arg2[3]) * 0x13) as u64));
  let x17: u64 = (((arg1[8]) as u64) * (((arg2[2]) * 0x13) as u64));
  let x18: u64 = (((arg1[7]) as u64) * (((arg2[9]) * 0x26) as u64));
  let x19: u64 = (((arg1[7]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x20: u64 = (((arg1[7]) as u64) * (((arg2[7]) * 0x26) as u64));
  let x21: u64 = (((arg1[7]) as u64) * (((arg2[6]) * 0x13) as u64));
  let x22: u64 = (((arg1[7]) as u64) * (((arg2[5]) * 0x26) as u64));
  let x23: u64 = (((arg1[7]) as u64) * (((arg2[4]) * 0x13) as u64));
  let x24: u64 = (((arg1[7]) as u64) * (((arg2[3]) * 0x26) as u64));
  let x25: u64 = (((arg1[6]) as u64) * (((arg2[9]) * 0x13) as u64));
  let x26: u64 = (((arg1[6]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x27: u64 = (((arg1[6]) as u64) * (((arg2[7]) * 0x13) as u64));
  let x28: u64 = (((arg1[6]) as u64) * (((arg2[6]) * 0x13) as u64));
  let x29: u64 = (((arg1[6]) as u64) * (((arg2[5]) * 0x13) as u64));
  let x30: u64 = (((arg1[6]) as u64) * (((arg2[4]) * 0x13) as u64));
  let x31: u64 = (((arg1[5]) as u64) * (((arg2[9]) * 0x26) as u64));
  let x32: u64 = (((arg1[5]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x33: u64 = (((arg1[5]) as u64) * (((arg2[7]) * 0x26) as u64));
  let x34: u64 = (((arg1[5]) as u64) * (((arg2[6]) * 0x13) as u64));
  let x35: u64 = (((arg1[5]) as u64) * (((arg2[5]) * 0x26) as u64));
  let x36: u64 = (((arg1[4]) as u64) * (((arg2[9]) * 0x13) as u64));
  let x37: u64 = (((arg1[4]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x38: u64 = (((arg1[4]) as u64) * (((arg2[7]) * 0x13) as u64));
  let x39: u64 = (((arg1[4]) as u64) * (((arg2[6]) * 0x13) as u64));
  let x40: u64 = (((arg1[3]) as u64) * (((arg2[9]) * 0x26) as u64));
  let x41: u64 = (((arg1[3]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x42: u64 = (((arg1[3]) as u64) * (((arg2[7]) * 0x26) as u64));
  let x43: u64 = (((arg1[2]) as u64) * (((arg2[9]) * 0x13) as u64));
  let x44: u64 = (((arg1[2]) as u64) * (((arg2[8]) * 0x13) as u64));
  let x45: u64 = (((arg1[1]) as u64) * (((arg2[9]) * 0x26) as u64));
  let x46: u64 = (((arg1[9]) as u64) * ((arg2[0]) as u64));
  let x47: u64 = (((arg1[8]) as u64) * ((arg2[1]) as u64));
  let x48: u64 = (((arg1[8]) as u64) * ((arg2[0]) as u64));
  let x49: u64 = (((arg1[7]) as u64) * ((arg2[2]) as u64));
  let x50: u64 = (((arg1[7]) as u64) * (((arg2[1]) * 0x2) as u64));
  let x51: u64 = (((arg1[7]) as u64) * ((arg2[0]) as u64));
  let x52: u64 = (((arg1[6]) as u64) * ((arg2[3]) as u64));
  let x53: u64 = (((arg1[6]) as u64) * ((arg2[2]) as u64));
  let x54: u64 = (((arg1[6]) as u64) * ((arg2[1]) as u64));
  let x55: u64 = (((arg1[6]) as u64) * ((arg2[0]) as u64));
  let x56: u64 = (((arg1[5]) as u64) * ((arg2[4]) as u64));
  let x57: u64 = (((arg1[5]) as u64) * (((arg2[3]) * 0x2) as u64));
  let x58: u64 = (((arg1[5]) as u64) * ((arg2[2]) as u64));
  let x59: u64 = (((arg1[5]) as u64) * (((arg2[1]) * 0x2) as u64));
  let x60: u64 = (((arg1[5]) as u64) * ((arg2[0]) as u64));
  let x61: u64 = (((arg1[4]) as u64) * ((arg2[5]) as u64));
  let x62: u64 = (((arg1[4]) as u64) * ((arg2[4]) as u64));
  let x63: u64 = (((arg1[4]) as u64) * ((arg2[3]) as u64));
  let x64: u64 = (((arg1[4]) as u64) * ((arg2[2]) as u64));
  let x65: u64 = (((arg1[4]) as u64) * ((arg2[1]) as u64));
  let x66: u64 = (((arg1[4]) as u64) * ((arg2[0]) as u64));
  let x67: u64 = (((arg1[3]) as u64) * ((arg2[6]) as u64));
  let x68: u64 = (((arg1[3]) as u64) * (((arg2[5]) * 0x2) as u64));
  let x69: u64 = (((arg1[3]) as u64) * ((arg2[4]) as u64));
  let x70: u64 = (((arg1[3]) as u64) * (((arg2[3]) * 0x2) as u64));
  let x71: u64 = (((arg1[3]) as u64) * ((arg2[2]) as u64));
  let x72: u64 = (((arg1[3]) as u64) * (((arg2[1]) * 0x2) as u64));
  let x73: u64 = (((arg1[3]) as u64) * ((arg2[0]) as u64));
  let x74: u64 = (((arg1[2]) as u64) * ((arg2[7]) as u64));
  let x75: u64 = (((arg1[2]) as u64) * ((arg2[6]) as u64));
  let x76: u64 = (((arg1[2]) as u64) * ((arg2[5]) as u64));
  let x77: u64 = (((arg1[2]) as u64) * ((arg2[4]) as u64));
  let x78: u64 = (((arg1[2]) as u64) * ((arg2[3]) as u64));
  let x79: u64 = (((arg1[2]) as u64) * ((arg2[2]) as u64));
  let x80: u64 = (((arg1[2]) as u64) * ((arg2[1]) as u64));
  let x81: u64 = (((arg1[2]) as u64) * ((arg2[0]) as u64));
  let x82: u64 = (((arg1[1]) as u64) * ((arg2[8]) as u64));
  let x83: u64 = (((arg1[1]) as u64) * (((arg2[7]) * 0x2) as u64));
  let x84: u64 = (((arg1[1]) as u64) * ((arg2[6]) as u64));
  let x85: u64 = (((arg1[1]) as u64) * (((arg2[5]) * 0x2) as u64));
  let x86: u64 = (((arg1[1]) as u64) * ((arg2[4]) as u64));
  let x87: u64 = (((arg1[1]) as u64) * (((arg2[3]) * 0x2) as u64));
  let x88: u64 = (((arg1[1]) as u64) * ((arg2[2]) as u64));
  let x89: u64 = (((arg1[1]) as u64) * (((arg2[1]) * 0x2) as u64));
  let x90: u64 = (((arg1[1]) as u64) * ((arg2[0]) as u64));
  let x91: u64 = (((arg1[0]) as u64) * ((arg2[9]) as u64));
  let x92: u64 = (((arg1[0]) as u64) * ((arg2[8]) as u64));
  let x93: u64 = (((arg1[0]) as u64) * ((arg2[7]) as u64));
  let x94: u64 = (((arg1[0]) as u64) * ((arg2[6]) as u64));
  let x95: u64 = (((arg1[0]) as u64) * ((arg2[5]) as u64));
  let x96: u64 = (((arg1[0]) as u64) * ((arg2[4]) as u64));
  let x97: u64 = (((arg1[0]) as u64) * ((arg2[3]) as u64));
  let x98: u64 = (((arg1[0]) as u64) * ((arg2[2]) as u64));
  let x99: u64 = (((arg1[0]) as u64) * ((arg2[1]) as u64));
  let x100: u64 = (((arg1[0]) as u64) * ((arg2[0]) as u64));
  let x101: u64 = (x100 + (x45 + (x44 + (x42 + (x39 + (x35 + (x30 + (x24 + (x17 + x9)))))))));
  let x102: u64 = (x101 >> 26);
  let x103: u32 = ((x101 & (0x3ffffff as u64)) as u32);
  let x104: u64 = (x91 + (x82 + (x74 + (x67 + (x61 + (x56 + (x52 + (x49 + (x47 + x46)))))))));
  let x105: u64 = (x92 + (x83 + (x75 + (x68 + (x62 + (x57 + (x53 + (x50 + (x48 + x1)))))))));
  let x106: u64 = (x93 + (x84 + (x76 + (x69 + (x63 + (x58 + (x54 + (x51 + (x10 + x2)))))))));
  let x107: u64 = (x94 + (x85 + (x77 + (x70 + (x64 + (x59 + (x55 + (x18 + (x11 + x3)))))))));
  let x108: u64 = (x95 + (x86 + (x78 + (x71 + (x65 + (x60 + (x25 + (x19 + (x12 + x4)))))))));
  let x109: u64 = (x96 + (x87 + (x79 + (x72 + (x66 + (x31 + (x26 + (x20 + (x13 + x5)))))))));
  let x110: u64 = (x97 + (x88 + (x80 + (x73 + (x36 + (x32 + (x27 + (x21 + (x14 + x6)))))))));
  let x111: u64 = (x98 + (x89 + (x81 + (x40 + (x37 + (x33 + (x28 + (x22 + (x15 + x7)))))))));
  let x112: u64 = (x99 + (x90 + (x43 + (x41 + (x38 + (x34 + (x29 + (x23 + (x16 + x8)))))))));
  let x113: u64 = (x102 + x112);
  let x114: u64 = (x113 >> 25);
  let x115: u32 = ((x113 & (0x1ffffff as u64)) as u32);
  let x116: u64 = (x114 + x111);
  let x117: u64 = (x116 >> 26);
  let x118: u32 = ((x116 & (0x3ffffff as u64)) as u32);
  let x119: u64 = (x117 + x110);
  let x120: u64 = (x119 >> 25);
  let x121: u32 = ((x119 & (0x1ffffff as u64)) as u32);
  let x122: u64 = (x120 + x109);
  let x123: u64 = (x122 >> 26);
  let x124: u32 = ((x122 & (0x3ffffff as u64)) as u32);
  let x125: u64 = (x123 + x108);
  let x126: u64 = (x125 >> 25);
  let x127: u32 = ((x125 & (0x1ffffff as u64)) as u32);
  let x128: u64 = (x126 + x107);
  let x129: u64 = (x128 >> 26);
  let x130: u32 = ((x128 & (0x3ffffff as u64)) as u32);
  let x131: u64 = (x129 + x106);
  let x132: u64 = (x131 >> 25);
  let x133: u32 = ((x131 & (0x1ffffff as u64)) as u32);
  let x134: u64 = (x132 + x105);
  let x135: u64 = (x134 >> 26);
  let x136: u32 = ((x134 & (0x3ffffff as u64)) as u32);
  let x137: u64 = (x135 + x104);
  let x138: u64 = (x137 >> 25);
  let x139: u32 = ((x137 & (0x1ffffff as u64)) as u32);
  let x140: u64 = (x138 * (0x13 as u64));
  let x141: u64 = ((x103 as u64) + x140);
  let x142: u32 = ((x141 >> 26) as u32);
  let x143: u32 = ((x141 & (0x3ffffff as u64)) as u32);
  let x144: u32 = (x142 + x115);
  let x145: fiat_25519_u1 = ((x144 >> 25) as fiat_25519_u1);
  let x146: u32 = (x144 & 0x1ffffff);
  let x147: u32 = ((x145 as u32) + x118);
  out1[0] = x143;
  out1[1] = x146;
  out1[2] = x147;
  out1[3] = x121;
  out1[4] = x124;
  out1[5] = x127;
  out1[6] = x130;
  out1[7] = x133;
  out1[8] = x136;
  out1[9] = x139;
}

/// The function fiat_25519_carry_square squares a field element and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg1) mod m
///
#[inline]
pub fn fiat_25519_carry_square(out1: &mut fiat_25519_tight_field_element, arg1: &fiat_25519_loose_field_element) -> () {
  let x1: u32 = ((arg1[9]) * 0x13);
  let x2: u32 = (x1 * 0x2);
  let x3: u32 = ((arg1[9]) * 0x2);
  let x4: u32 = ((arg1[8]) * 0x13);
  let x5: u64 = ((x4 as u64) * (0x2 as u64));
  let x6: u32 = ((arg1[8]) * 0x2);
  let x7: u32 = ((arg1[7]) * 0x13);
  let x8: u32 = (x7 * 0x2);
  let x9: u32 = ((arg1[7]) * 0x2);
  let x10: u32 = ((arg1[6]) * 0x13);
  let x11: u64 = ((x10 as u64) * (0x2 as u64));
  let x12: u32 = ((arg1[6]) * 0x2);
  let x13: u32 = ((arg1[5]) * 0x13);
  let x14: u32 = ((arg1[5]) * 0x2);
  let x15: u32 = ((arg1[4]) * 0x2);
  let x16: u32 = ((arg1[3]) * 0x2);
  let x17: u32 = ((arg1[2]) * 0x2);
  let x18: u32 = ((arg1[1]) * 0x2);
  let x19: u64 = (((arg1[9]) as u64) * ((x1 * 0x2) as u64));
  let x20: u64 = (((arg1[8]) as u64) * (x2 as u64));
  let x21: u64 = (((arg1[8]) as u64) * (x4 as u64));
  let x22: u64 = (((arg1[7]) as u64) * ((x2 as u64) * (0x2 as u64)));
  let x23: u64 = (((arg1[7]) as u64) * x5);
  let x24: u64 = (((arg1[7]) as u64) * ((x7 * 0x2) as u64));
  let x25: u64 = (((arg1[6]) as u64) * (x2 as u64));
  let x26: u64 = (((arg1[6]) as u64) * x5);
  let x27: u64 = (((arg1[6]) as u64) * (x8 as u64));
  let x28: u64 = (((arg1[6]) as u64) * (x10 as u64));
  let x29: u64 = (((arg1[5]) as u64) * ((x2 as u64) * (0x2 as u64)));
  let x30: u64 = (((arg1[5]) as u64) * x5);
  let x31: u64 = (((arg1[5]) as u64) * ((x8 as u64) * (0x2 as u64)));
  let x32: u64 = (((arg1[5]) as u64) * x11);
  let x33: u64 = (((arg1[5]) as u64) * ((x13 * 0x2) as u64));
  let x34: u64 = (((arg1[4]) as u64) * (x2 as u64));
  let x35: u64 = (((arg1[4]) as u64) * x5);
  let x36: u64 = (((arg1[4]) as u64) * (x8 as u64));
  let x37: u64 = (((arg1[4]) as u64) * x11);
  let x38: u64 = (((arg1[4]) as u64) * (x14 as u64));
  let x39: u64 = (((arg1[4]) as u64) * ((arg1[4]) as u64));
  let x40: u64 = (((arg1[3]) as u64) * ((x2 as u64) * (0x2 as u64)));
  let x41: u64 = (((arg1[3]) as u64) * x5);
  let x42: u64 = (((arg1[3]) as u64) * ((x8 as u64) * (0x2 as u64)));
  let x43: u64 = (((arg1[3]) as u64) * (x12 as u64));
  let x44: u64 = (((arg1[3]) as u64) * ((x14 * 0x2) as u64));
  let x45: u64 = (((arg1[3]) as u64) * (x15 as u64));
  let x46: u64 = (((arg1[3]) as u64) * (((arg1[3]) * 0x2) as u64));
  let x47: u64 = (((arg1[2]) as u64) * (x2 as u64));
  let x48: u64 = (((arg1[2]) as u64) * x5);
  let x49: u64 = (((arg1[2]) as u64) * (x9 as u64));
  let x50: u64 = (((arg1[2]) as u64) * (x12 as u64));
  let x51: u64 = (((arg1[2]) as u64) * (x14 as u64));
  let x52: u64 = (((arg1[2]) as u64) * (x15 as u64));
  let x53: u64 = (((arg1[2]) as u64) * (x16 as u64));
  let x54: u64 = (((arg1[2]) as u64) * ((arg1[2]) as u64));
  let x55: u64 = (((arg1[1]) as u64) * ((x2 as u64) * (0x2 as u64)));
  let x56: u64 = (((arg1[1]) as u64) * (x6 as u64));
  let x57: u64 = (((arg1[1]) as u64) * ((x9 * 0x2) as u64));
  let x58: u64 = (((arg1[1]) as u64) * (x12 as u64));
  let x59: u64 = (((arg1[1]) as u64) * ((x14 * 0x2) as u64));
  let x60: u64 = (((arg1[1]) as u64) * (x15 as u64));
  let x61: u64 = (((arg1[1]) as u64) * ((x16 * 0x2) as u64));
  let x62: u64 = (((arg1[1]) as u64) * (x17 as u64));
  let x63: u64 = (((arg1[1]) as u64) * (((arg1[1]) * 0x2) as u64));
  let x64: u64 = (((arg1[0]) as u64) * (x3 as u64));
  let x65: u64 = (((arg1[0]) as u64) * (x6 as u64));
  let x66: u64 = (((arg1[0]) as u64) * (x9 as u64));
  let x67: u64 = (((arg1[0]) as u64) * (x12 as u64));
  let x68: u64 = (((arg1[0]) as u64) * (x14 as u64));
  let x69: u64 = (((arg1[0]) as u64) * (x15 as u64));
  let x70: u64 = (((arg1[0]) as u64) * (x16 as u64));
  let x71: u64 = (((arg1[0]) as u64) * (x17 as u64));
  let x72: u64 = (((arg1[0]) as u64) * (x18 as u64));
  let x73: u64 = (((arg1[0]) as u64) * ((arg1[0]) as u64));
  let x74: u64 = (x73 + (x55 + (x48 + (x42 + (x37 + x33)))));
  let x75: u64 = (x74 >> 26);
  let x76: u32 = ((x74 & (0x3ffffff as u64)) as u32);
  let x77: u64 = (x64 + (x56 + (x49 + (x43 + x38))));
  let x78: u64 = (x65 + (x57 + (x50 + (x44 + (x39 + x19)))));
  let x79: u64 = (x66 + (x58 + (x51 + (x45 + x20))));
  let x80: u64 = (x67 + (x59 + (x52 + (x46 + (x22 + x21)))));
  let x81: u64 = (x68 + (x60 + (x53 + (x25 + x23))));
  let x82: u64 = (x69 + (x61 + (x54 + (x29 + (x26 + x24)))));
  let x83: u64 = (x70 + (x62 + (x34 + (x30 + x27))));
  let x84: u64 = (x71 + (x63 + (x40 + (x35 + (x31 + x28)))));
  let x85: u64 = (x72 + (x47 + (x41 + (x36 + x32))));
  let x86: u64 = (x75 + x85);
  let x87: u64 = (x86 >> 25);
  let x88: u32 = ((x86 & (0x1ffffff as u64)) as u32);
  let x89: u64 = (x87 + x84);
  let x90: u64 = (x89 >> 26);
  let x91: u32 = ((x89 & (0x3ffffff as u64)) as u32);
  let x92: u64 = (x90 + x83);
  let x93: u64 = (x92 >> 25);
  let x94: u32 = ((x92 & (0x1ffffff as u64)) as u32);
  let x95: u64 = (x93 + x82);
  let x96: u64 = (x95 >> 26);
  let x97: u32 = ((x95 & (0x3ffffff as u64)) as u32);
  let x98: u64 = (x96 + x81);
  let x99: u64 = (x98 >> 25);
  let x100: u32 = ((x98 & (0x1ffffff as u64)) as u32);
  let x101: u64 = (x99 + x80);
  let x102: u64 = (x101 >> 26);
  let x103: u32 = ((x101 & (0x3ffffff as u64)) as u32);
  let x104: u64 = (x102 + x79);
  let x105: u64 = (x104 >> 25);
  let x106: u32 = ((x104 & (0x1ffffff as u64)) as u32);
  let x107: u64 = (x105 + x78);
  let x108: u64 = (x107 >> 26);
  let x109: u32 = ((x107 & (0x3ffffff as u64)) as u32);
  let x110: u64 = (x108 + x77);
  let x111: u64 = (x110 >> 25);
  let x112: u32 = ((x110 & (0x1ffffff as u64)) as u32);
  let x113: u64 = (x111 * (0x13 as u64));
  let x114: u64 = ((x76 as u64) + x113);
  let x115: u32 = ((x114 >> 26) as u32);
  let x116: u32 = ((x114 & (0x3ffffff as u64)) as u32);
  let x117: u32 = (x115 + x88);
  let x118: fiat_25519_u1 = ((x117 >> 25) as fiat_25519_u1);
  let x119: u32 = (x117 & 0x1ffffff);
  let x120: u32 = ((x118 as u32) + x91);
  out1[0] = x116;
  out1[1] = x119;
  out1[2] = x120;
  out1[3] = x94;
  out1[4] = x97;
  out1[5] = x100;
  out1[6] = x103;
  out1[7] = x106;
  out1[8] = x109;
  out1[9] = x112;
}

/// The function fiat_25519_carry reduces a field element.
///
/// Postconditions:
///   eval out1 mod m = eval arg1 mod m
///
#[inline]
pub fn fiat_25519_carry(out1: &mut fiat_25519_tight_field_element, arg1: &fiat_25519_loose_field_element) -> () {
  let x1: u32 = (arg1[0]);
  let x2: u32 = ((x1 >> 26) + (arg1[1]));
  let x3: u32 = ((x2 >> 25) + (arg1[2]));
  let x4: u32 = ((x3 >> 26) + (arg1[3]));
  let x5: u32 = ((x4 >> 25) + (arg1[4]));
  let x6: u32 = ((x5 >> 26) + (arg1[5]));
  let x7: u32 = ((x6 >> 25) + (arg1[6]));
  let x8: u32 = ((x7 >> 26) + (arg1[7]));
  let x9: u32 = ((x8 >> 25) + (arg1[8]));
  let x10: u32 = ((x9 >> 26) + (arg1[9]));
  let x11: u32 = ((x1 & 0x3ffffff) + ((x10 >> 25) * 0x13));
  let x12: u32 = ((((x11 >> 26) as fiat_25519_u1) as u32) + (x2 & 0x1ffffff));
  let x13: u32 = (x11 & 0x3ffffff);
  let x14: u32 = (x12 & 0x1ffffff);
  let x15: u32 = ((((x12 >> 25) as fiat_25519_u1) as u32) + (x3 & 0x3ffffff));
  let x16: u32 = (x4 & 0x1ffffff);
  let x17: u32 = (x5 & 0x3ffffff);
  let x18: u32 = (x6 & 0x1ffffff);
  let x19: u32 = (x7 & 0x3ffffff);
  let x20: u32 = (x8 & 0x1ffffff);
  let x21: u32 = (x9 & 0x3ffffff);
  let x22: u32 = (x10 & 0x1ffffff);
  out1[0] = x13;
  out1[1] = x14;
  out1[2] = x15;
  out1[3] = x16;
  out1[4] = x17;
  out1[5] = x18;
  out1[6] = x19;
  out1[7] = x20;
  out1[8] = x21;
  out1[9] = x22;
}

/// The function fiat_25519_add adds two field elements.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 + eval arg2) mod m
///
#[inline]
pub fn fiat_25519_add(out1: &mut fiat_25519_loose_field_element, arg1: &fiat_25519_tight_field_element, arg2: &fiat_25519_tight_field_element) -> () {
  let x1: u32 = ((arg1[0]) + (arg2[0]));
  let x2: u32 = ((arg1[1]) + (arg2[1]));
  let x3: u32 = ((arg1[2]) + (arg2[2]));
  let x4: u32 = ((arg1[3]) + (arg2[3]));
  let x5: u32 = ((arg1[4]) + (arg2[4]));
  let x6: u32 = ((arg1[5]) + (arg2[5]));
  let x7: u32 = ((arg1[6]) + (arg2[6]));
  let x8: u32 = ((arg1[7]) + (arg2[7]));
  let x9: u32 = ((arg1[8]) + (arg2[8]));
  let x10: u32 = ((arg1[9]) + (arg2[9]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
}

/// The function fiat_25519_sub subtracts two field elements.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 - eval arg2) mod m
///
#[inline]
pub fn fiat_25519_sub(out1: &mut fiat_25519_loose_field_element, arg1: &fiat_25519_tight_field_element, arg2: &fiat_25519_tight_field_element) -> () {
  let x1: u32 = ((0x7ffffda + (arg1[0])) - (arg2[0]));
  let x2: u32 = ((0x3fffffe + (arg1[1])) - (arg2[1]));
  let x3: u32 = ((0x7fffffe + (arg1[2])) - (arg2[2]));
  let x4: u32 = ((0x3fffffe + (arg1[3])) - (arg2[3]));
  let x5: u32 = ((0x7fffffe + (arg1[4])) - (arg2[4]));
  let x6: u32 = ((0x3fffffe + (arg1[5])) - (arg2[5]));
  let x7: u32 = ((0x7fffffe + (arg1[6])) - (arg2[6]));
  let x8: u32 = ((0x3fffffe + (arg1[7])) - (arg2[7]));
  let x9: u32 = ((0x7fffffe + (arg1[8])) - (arg2[8]));
  let x10: u32 = ((0x3fffffe + (arg1[9])) - (arg2[9]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
}

/// The function fiat_25519_opp negates a field element.
///
/// Postconditions:
///   eval out1 mod m = -eval arg1 mod m
///
#[inline]
pub fn fiat_25519_opp(out1: &mut fiat_25519_loose_field_element, arg1: &fiat_25519_tight_field_element) -> () {
  let x1: u32 = (0x7ffffda - (arg1[0]));
  let x2: u32 = (0x3fffffe - (arg1[1]));
  let x3: u32 = (0x7fffffe - (arg1[2]));
  let x4: u32 = (0x3fffffe - (arg1[3]));
  let x5: u32 = (0x7fffffe - (arg1[4]));
  let x6: u32 = (0x3fffffe - (arg1[5]));
  let x7: u32 = (0x7fffffe - (arg1[6]));
  let x8: u32 = (0x3fffffe - (arg1[7]));
  let x9: u32 = (0x7fffffe - (arg1[8]));
  let x10: u32 = (0x3fffffe - (arg1[9]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
}

/// The function fiat_25519_selectznz is a multi-limb conditional select.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_25519_selectznz(out1: &mut [u32; 10], arg1: fiat_25519_u1, arg2: &[u32; 10], arg3: &[u32; 10]) -> () {
  let mut x1: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x5, arg1, (arg2[4]), (arg3[4]));
  let mut x6: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x6, arg1, (arg2[5]), (arg3[5]));
  let mut x7: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x7, arg1, (arg2[6]), (arg3[6]));
  let mut x8: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x8, arg1, (arg2[7]), (arg3[7]));
  let mut x9: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x9, arg1, (arg2[8]), (arg3[8]));
  let mut x10: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x10, arg1, (arg2[9]), (arg3[9]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
}

/// The function fiat_25519_to_bytes serializes a field element to bytes in little-endian order.
///
/// Postconditions:
///   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
#[inline]
pub fn fiat_25519_to_bytes(out1: &mut [u8; 32], arg1: &fiat_25519_tight_field_element) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u26(&mut x1, &mut x2, 0x0, (arg1[0]), 0x3ffffed);
  let mut x3: u32 = 0;
  let mut x4: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u25(&mut x3, &mut x4, x2, (arg1[1]), 0x1ffffff);
  let mut x5: u32 = 0;
  let mut x6: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u26(&mut x5, &mut x6, x4, (arg1[2]), 0x3ffffff);
  let mut x7: u32 = 0;
  let mut x8: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u25(&mut x7, &mut x8, x6, (arg1[3]), 0x1ffffff);
  let mut x9: u32 = 0;
  let mut x10: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u26(&mut x9, &mut x10, x8, (arg1[4]), 0x3ffffff);
  let mut x11: u32 = 0;
  let mut x12: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u25(&mut x11, &mut x12, x10, (arg1[5]), 0x1ffffff);
  let mut x13: u32 = 0;
  let mut x14: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u26(&mut x13, &mut x14, x12, (arg1[6]), 0x3ffffff);
  let mut x15: u32 = 0;
  let mut x16: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u25(&mut x15, &mut x16, x14, (arg1[7]), 0x1ffffff);
  let mut x17: u32 = 0;
  let mut x18: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u26(&mut x17, &mut x18, x16, (arg1[8]), 0x3ffffff);
  let mut x19: u32 = 0;
  let mut x20: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u25(&mut x19, &mut x20, x18, (arg1[9]), 0x1ffffff);
  let mut x21: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x21, x20, (0x0 as u32), 0xffffffff);
  let mut x22: u32 = 0;
  let mut x23: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u26(&mut x22, &mut x23, 0x0, x1, (x21 & 0x3ffffed));
  let mut x24: u32 = 0;
  let mut x25: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u25(&mut x24, &mut x25, x23, x3, (x21 & 0x1ffffff));
  let mut x26: u32 = 0;
  let mut x27: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u26(&mut x26, &mut x27, x25, x5, (x21 & 0x3ffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u25(&mut x28, &mut x29, x27, x7, (x21 & 0x1ffffff));
  let mut x30: u32 = 0;
  let mut x31: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u26(&mut x30, &mut x31, x29, x9, (x21 & 0x3ffffff));
  let mut x32: u32 = 0;
  let mut x33: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u25(&mut x32, &mut x33, x31, x11, (x21 & 0x1ffffff));
  let mut x34: u32 = 0;
  let mut x35: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u26(&mut x34, &mut x35, x33, x13, (x21 & 0x3ffffff));
  let mut x36: u32 = 0;
  let mut x37: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u25(&mut x36, &mut x37, x35, x15, (x21 & 0x1ffffff));
  let mut x38: u32 = 0;
  let mut x39: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u26(&mut x38, &mut x39, x37, x17, (x21 & 0x3ffffff));
  let mut x40: u32 = 0;
  let mut x41: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u25(&mut x40, &mut x41, x39, x19, (x21 & 0x1ffffff));
  let x42: u32 = (x40 << 6);
  let x43: u32 = (x38 << 4);
  let x44: u32 = (x36 << 3);
  let x45: u32 = (x34 * (0x2 as u32));
  let x46: u32 = (x30 << 6);
  let x47: u32 = (x28 << 5);
  let x48: u32 = (x26 << 3);
  let x49: u32 = (x24 << 2);
  let x50: u8 = ((x22 & (0xff as u32)) as u8);
  let x51: u32 = (x22 >> 8);
  let x52: u8 = ((x51 & (0xff as u32)) as u8);
  let x53: u32 = (x51 >> 8);
  let x54: u8 = ((x53 & (0xff as u32)) as u8);
  let x55: u8 = ((x53 >> 8) as u8);
  let x56: u32 = (x49 + (x55 as u32));
  let x57: u8 = ((x56 & (0xff as u32)) as u8);
  let x58: u32 = (x56 >> 8);
  let x59: u8 = ((x58 & (0xff as u32)) as u8);
  let x60: u32 = (x58 >> 8);
  let x61: u8 = ((x60 & (0xff as u32)) as u8);
  let x62: u8 = ((x60 >> 8) as u8);
  let x63: u32 = (x48 + (x62 as u32));
  let x64: u8 = ((x63 & (0xff as u32)) as u8);
  let x65: u32 = (x63 >> 8);
  let x66: u8 = ((x65 & (0xff as u32)) as u8);
  let x67: u32 = (x65 >> 8);
  let x68: u8 = ((x67 & (0xff as u32)) as u8);
  let x69: u8 = ((x67 >> 8) as u8);
  let x70: u32 = (x47 + (x69 as u32));
  let x71: u8 = ((x70 & (0xff as u32)) as u8);
  let x72: u32 = (x70 >> 8);
  let x73: u8 = ((x72 & (0xff as u32)) as u8);
  let x74: u32 = (x72 >> 8);
  let x75: u8 = ((x74 & (0xff as u32)) as u8);
  let x76: u8 = ((x74 >> 8) as u8);
  let x77: u32 = (x46 + (x76 as u32));
  let x78: u8 = ((x77 & (0xff as u32)) as u8);
  let x79: u32 = (x77 >> 8);
  let x80: u8 = ((x79 & (0xff as u32)) as u8);
  let x81: u32 = (x79 >> 8);
  let x82: u8 = ((x81 & (0xff as u32)) as u8);
  let x83: u8 = ((x81 >> 8) as u8);
  let x84: u8 = ((x32 & (0xff as u32)) as u8);
  let x85: u32 = (x32 >> 8);
  let x86: u8 = ((x85 & (0xff as u32)) as u8);
  let x87: u32 = (x85 >> 8);
  let x88: u8 = ((x87 & (0xff as u32)) as u8);
  let x89: fiat_25519_u1 = ((x87 >> 8) as fiat_25519_u1);
  let x90: u32 = (x45 + (x89 as u32));
  let x91: u8 = ((x90 & (0xff as u32)) as u8);
  let x92: u32 = (x90 >> 8);
  let x93: u8 = ((x92 & (0xff as u32)) as u8);
  let x94: u32 = (x92 >> 8);
  let x95: u8 = ((x94 & (0xff as u32)) as u8);
  let x96: u8 = ((x94 >> 8) as u8);
  let x97: u32 = (x44 + (x96 as u32));
  let x98: u8 = ((x97 & (0xff as u32)) as u8);
  let x99: u32 = (x97 >> 8);
  let x100: u8 = ((x99 & (0xff as u32)) as u8);
  let x101: u32 = (x99 >> 8);
  let x102: u8 = ((x101 & (0xff as u32)) as u8);
  let x103: u8 = ((x101 >> 8) as u8);
  let x104: u32 = (x43 + (x103 as u32));
  let x105: u8 = ((x104 & (0xff as u32)) as u8);
  let x106: u32 = (x104 >> 8);
  let x107: u8 = ((x106 & (0xff as u32)) as u8);
  let x108: u32 = (x106 >> 8);
  let x109: u8 = ((x108 & (0xff as u32)) as u8);
  let x110: u8 = ((x108 >> 8) as u8);
  let x111: u32 = (x42 + (x110 as u32));
  let x112: u8 = ((x111 & (0xff as u32)) as u8);
  let x113: u32 = (x111 >> 8);
  let x114: u8 = ((x113 & (0xff as u32)) as u8);
  let x115: u32 = (x113 >> 8);
  let x116: u8 = ((x115 & (0xff as u32)) as u8);
  let x117: u8 = ((x115 >> 8) as u8);
  out1[0] = x50;
  out1[1] = x52;
  out1[2] = x54;
  out1[3] = x57;
  out1[4] = x59;
  out1[5] = x61;
  out1[6] = x64;
  out1[7] = x66;
  out1[8] = x68;
  out1[9] = x71;
  out1[10] = x73;
  out1[11] = x75;
  out1[12] = x78;
  out1[13] = x80;
  out1[14] = x82;
  out1[15] = x83;
  out1[16] = x84;
  out1[17] = x86;
  out1[18] = x88;
  out1[19] = x91;
  out1[20] = x93;
  out1[21] = x95;
  out1[22] = x98;
  out1[23] = x100;
  out1[24] = x102;
  out1[25] = x105;
  out1[26] = x107;
  out1[27] = x109;
  out1[28] = x112;
  out1[29] = x114;
  out1[30] = x116;
  out1[31] = x117;
}

/// The function fiat_25519_from_bytes deserializes a field element from bytes in little-endian order.
///
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
#[inline]
pub fn fiat_25519_from_bytes(out1: &mut fiat_25519_tight_field_element, arg1: &[u8; 32]) -> () {
  let x1: u32 = (((arg1[31]) as u32) << 18);
  let x2: u32 = (((arg1[30]) as u32) << 10);
  let x3: u32 = (((arg1[29]) as u32) << 2);
  let x4: u32 = (((arg1[28]) as u32) << 20);
  let x5: u32 = (((arg1[27]) as u32) << 12);
  let x6: u32 = (((arg1[26]) as u32) << 4);
  let x7: u32 = (((arg1[25]) as u32) << 21);
  let x8: u32 = (((arg1[24]) as u32) << 13);
  let x9: u32 = (((arg1[23]) as u32) << 5);
  let x10: u32 = (((arg1[22]) as u32) << 23);
  let x11: u32 = (((arg1[21]) as u32) << 15);
  let x12: u32 = (((arg1[20]) as u32) << 7);
  let x13: u32 = (((arg1[19]) as u32) << 24);
  let x14: u32 = (((arg1[18]) as u32) << 16);
  let x15: u32 = (((arg1[17]) as u32) << 8);
  let x16: u8 = (arg1[16]);
  let x17: u32 = (((arg1[15]) as u32) << 18);
  let x18: u32 = (((arg1[14]) as u32) << 10);
  let x19: u32 = (((arg1[13]) as u32) << 2);
  let x20: u32 = (((arg1[12]) as u32) << 19);
  let x21: u32 = (((arg1[11]) as u32) << 11);
  let x22: u32 = (((arg1[10]) as u32) << 3);
  let x23: u32 = (((arg1[9]) as u32) << 21);
  let x24: u32 = (((arg1[8]) as u32) << 13);
  let x25: u32 = (((arg1[7]) as u32) << 5);
  let x26: u32 = (((arg1[6]) as u32) << 22);
  let x27: u32 = (((arg1[5]) as u32) << 14);
  let x28: u32 = (((arg1[4]) as u32) << 6);
  let x29: u32 = (((arg1[3]) as u32) << 24);
  let x30: u32 = (((arg1[2]) as u32) << 16);
  let x31: u32 = (((arg1[1]) as u32) << 8);
  let x32: u8 = (arg1[0]);
  let x33: u32 = (x31 + (x32 as u32));
  let x34: u32 = (x30 + x33);
  let x35: u32 = (x29 + x34);
  let x36: u32 = (x35 & 0x3ffffff);
  let x37: u8 = ((x35 >> 26) as u8);
  let x38: u32 = (x28 + (x37 as u32));
  let x39: u32 = (x27 + x38);
  let x40: u32 = (x26 + x39);
  let x41: u32 = (x40 & 0x1ffffff);
  let x42: u8 = ((x40 >> 25) as u8);
  let x43: u32 = (x25 + (x42 as u32));
  let x44: u32 = (x24 + x43);
  let x45: u32 = (x23 + x44);
  let x46: u32 = (x45 & 0x3ffffff);
  let x47: u8 = ((x45 >> 26) as u8);
  let x48: u32 = (x22 + (x47 as u32));
  let x49: u32 = (x21 + x48);
  let x50: u32 = (x20 + x49);
  let x51: u32 = (x50 & 0x1ffffff);
  let x52: u8 = ((x50 >> 25) as u8);
  let x53: u32 = (x19 + (x52 as u32));
  let x54: u32 = (x18 + x53);
  let x55: u32 = (x17 + x54);
  let x56: u32 = (x15 + (x16 as u32));
  let x57: u32 = (x14 + x56);
  let x58: u32 = (x13 + x57);
  let x59: u32 = (x58 & 0x1ffffff);
  let x60: u8 = ((x58 >> 25) as u8);
  let x61: u32 = (x12 + (x60 as u32));
  let x62: u32 = (x11 + x61);
  let x63: u32 = (x10 + x62);
  let x64: u32 = (x63 & 0x3ffffff);
  let x65: u8 = ((x63 >> 26) as u8);
  let x66: u32 = (x9 + (x65 as u32));
  let x67: u32 = (x8 + x66);
  let x68: u32 = (x7 + x67);
  let x69: u32 = (x68 & 0x1ffffff);
  let x70: u8 = ((x68 >> 25) as u8);
  let x71: u32 = (x6 + (x70 as u32));
  let x72: u32 = (x5 + x71);
  let x73: u32 = (x4 + x72);
  let x74: u32 = (x73 & 0x3ffffff);
  let x75: u8 = ((x73 >> 26) as u8);
  let x76: u32 = (x3 + (x75 as u32));
  let x77: u32 = (x2 + x76);
  let x78: u32 = (x1 + x77);
  out1[0] = x36;
  out1[1] = x41;
  out1[2] = x46;
  out1[3] = x51;
  out1[4] = x55;
  out1[5] = x59;
  out1[6] = x64;
  out1[7] = x69;
  out1[8] = x74;
  out1[9] = x78;
}

/// The function fiat_25519_one returns the field element one.
///
/// Postconditions:
///   eval out1 mod m = 1 mod m
///
#[inline]
pub fn fiat_25519_one(out1: &mut fiat_25519_tight_field_element) -> () {
  out1[0] = 0x1;
  out1[1] = 0x0;
  out1[2] = 0x0;
  out1[3] = 0x0;
  out1[4] = 0x0;
  out1[5] = 0x0;
  out1[6] = 0x0;
  out1[7] = 0x0;
  out1[8] = 0x0;
  out1[9] = 0x0;
}

/// The function fiat_25519_relax is the identity function converting from tight field elements to loose field elements.
///
/// Postconditions:
///   out1 = arg1
///
#[inline]
pub fn fiat_25519_relax(out1: &mut fiat_25519_loose_field_element, arg1: &fiat_25519_tight_field_element) -> () {
  let x1: u32 = (arg1[0]);
  let x2: u32 = (arg1[1]);
  let x3: u32 = (arg1[2]);
  let x4: u32 = (arg1[3]);
  let x5: u32 = (arg1[4]);
  let x6: u32 = (arg1[5]);
  let x7: u32 = (arg1[6]);
  let x8: u32 = (arg1[7]);
  let x9: u32 = (arg1[8]);
  let x10: u32 = (arg1[9]);
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
}

/// The function fiat_25519_msat returns the saturated (signed) representation of the prime modulus.
///
/// Postconditions:
///   twos_complement_eval out1 = m
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_25519_msat(out1: &mut [u32; 9]) -> () {
  out1[0] = 0xffffffed;
  out1[1] = 0xffffffff;
  out1[2] = 0xffffffff;
  out1[3] = 0xffffffff;
  out1[4] = 0xffffffff;
  out1[5] = 0xffffffff;
  out1[6] = 0xffffffff;
  out1[7] = 0x7fffffff;
  out1[8] = (0x0 as u32);
}

/// The function fiat_25519_sat_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
///
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_25519_sat_from_bytes(out1: &mut [u32; 9], arg1: &[u8; 32]) -> () {
  let x1: u32 = (((arg1[31]) as u32) << 24);
  let x2: u32 = (((arg1[30]) as u32) << 16);
  let x3: u32 = (((arg1[29]) as u32) << 8);
  let x4: u8 = (arg1[28]);
  let x5: u32 = (((arg1[27]) as u32) << 24);
  let x6: u32 = (((arg1[26]) as u32) << 16);
  let x7: u32 = (((arg1[25]) as u32) << 8);
  let x8: u8 = (arg1[24]);
  let x9: u32 = (((arg1[23]) as u32) << 24);
  let x10: u32 = (((arg1[22]) as u32) << 16);
  let x11: u32 = (((arg1[21]) as u32) << 8);
  let x12: u8 = (arg1[20]);
  let x13: u32 = (((arg1[19]) as u32) << 24);
  let x14: u32 = (((arg1[18]) as u32) << 16);
  let x15: u32 = (((arg1[17]) as u32) << 8);
  let x16: u8 = (arg1[16]);
  let x17: u32 = (((arg1[15]) as u32) << 24);
  let x18: u32 = (((arg1[14]) as u32) << 16);
  let x19: u32 = (((arg1[13]) as u32) << 8);
  let x20: u8 = (arg1[12]);
  let x21: u32 = (((arg1[11]) as u32) << 24);
  let x22: u32 = (((arg1[10]) as u32) << 16);
  let x23: u32 = (((arg1[9]) as u32) << 8);
  let x24: u8 = (arg1[8]);
  let x25: u32 = (((arg1[7]) as u32) << 24);
  let x26: u32 = (((arg1[6]) as u32) << 16);
  let x27: u32 = (((arg1[5]) as u32) << 8);
  let x28: u8 = (arg1[4]);
  let x29: u32 = (((arg1[3]) as u32) << 24);
  let x30: u32 = (((arg1[2]) as u32) << 16);
  let x31: u32 = (((arg1[1]) as u32) << 8);
  let x32: u8 = (arg1[0]);
  let x33: u32 = (x31 + (x32 as u32));
  let x34: u32 = (x30 + x33);
  let x35: u32 = (x29 + x34);
  let x36: u32 = (x27 + (x28 as u32));
  let x37: u32 = (x26 + x36);
  let x38: u32 = (x25 + x37);
  let x39: u32 = (x23 + (x24 as u32));
  let x40: u32 = (x22 + x39);
  let x41: u32 = (x21 + x40);
  let x42: u32 = (x19 + (x20 as u32));
  let x43: u32 = (x18 + x42);
  let x44: u32 = (x17 + x43);
  let x45: u32 = (x15 + (x16 as u32));
  let x46: u32 = (x14 + x45);
  let x47: u32 = (x13 + x46);
  let x48: u32 = (x11 + (x12 as u32));
  let x49: u32 = (x10 + x48);
  let x50: u32 = (x9 + x49);
  let x51: u32 = (x7 + (x8 as u32));
  let x52: u32 = (x6 + x51);
  let x53: u32 = (x5 + x52);
  let x54: u32 = (x3 + (x4 as u32));
  let x55: u32 = (x2 + x54);
  let x56: u32 = (x1 + x55);
  out1[0] = x35;
  out1[1] = x38;
  out1[2] = x41;
  out1[3] = x44;
  out1[4] = x47;
  out1[5] = x50;
  out1[6] = x53;
  out1[7] = x56;
  out1[8] = (0x0 as u32);
}

/// The function fiat_25519_divstep computes a divstep.
///
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
///   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
///   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
///   eval out4 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval arg5) mod m else (2 * eval arg4) mod m)
///   eval out5 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval arg4 - eval arg4) mod m else (eval arg5 + (twos_complement_eval arg3 mod 2) * eval arg4) mod m)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_25519_divstep(out1: &mut u32, out2: &mut [u32; 9], out3: &mut [u32; 9], out4: &mut fiat_25519_tight_field_element, out5: &mut fiat_25519_tight_field_element, arg1: u32, arg2: &[u32; 9], arg3: &[u32; 9], arg4: &fiat_25519_tight_field_element, arg5: &fiat_25519_tight_field_element) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1, &mut x2, 0x0, (!arg1), (0x1 as u32));
  let x3: fiat_25519_u1 = (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1));
  let mut x4: u32 = 0;
  let mut x5: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x4, &mut x5, 0x0, (!arg1), (0x1 as u32));
  let mut x6: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x6, x3, arg1, x4);
  let mut x7: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x7, x3, (arg2[0]), (arg3[0]));
  let mut x8: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x8, x3, (arg2[1]), (arg3[1]));
  let mut x9: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x9, x3, (arg2[2]), (arg3[2]));
  let mut x10: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x10, x3, (arg2[3]), (arg3[3]));
  let mut x11: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x11, x3, (arg2[4]), (arg3[4]));
  let mut x12: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x12, x3, (arg2[5]), (arg3[5]));
  let mut x13: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x13, x3, (arg2[6]), (arg3[6]));
  let mut x14: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x14, x3, (arg2[7]), (arg3[7]));
  let mut x15: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x15, x3, (arg2[8]), (arg3[8]));
  let mut x16: u32 = 0;
  let mut x17: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x16, &mut x17, 0x0, (0x1 as u32), (!(arg2[0])));
  let mut x18: u32 = 0;
  let mut x19: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x18, &mut x19, x17, (0x0 as u32), (!(arg2[1])));
  let mut x20: u32 = 0;
  let mut x21: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x20, &mut x21, x19, (0x0 as u32), (!(arg2[2])));
  let mut x22: u32 = 0;
  let mut x23: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x22, &mut x23, x21, (0x0 as u32), (!(arg2[3])));
  let mut x24: u32 = 0;
  let mut x25: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x24, &mut x25, x23, (0x0 as u32), (!(arg2[4])));
  let mut x26: u32 = 0;
  let mut x27: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x26, &mut x27, x25, (0x0 as u32), (!(arg2[5])));
  let mut x28: u32 = 0;
  let mut x29: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x28, &mut x29, x27, (0x0 as u32), (!(arg2[6])));
  let mut x30: u32 = 0;
  let mut x31: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x30, &mut x31, x29, (0x0 as u32), (!(arg2[7])));
  let mut x32: u32 = 0;
  let mut x33: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x32, &mut x33, x31, (0x0 as u32), (!(arg2[8])));
  let mut x34: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x34, x3, (arg3[0]), x16);
  let mut x35: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x35, x3, (arg3[1]), x18);
  let mut x36: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x36, x3, (arg3[2]), x20);
  let mut x37: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x37, x3, (arg3[3]), x22);
  let mut x38: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x38, x3, (arg3[4]), x24);
  let mut x39: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x39, x3, (arg3[5]), x26);
  let mut x40: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x40, x3, (arg3[6]), x28);
  let mut x41: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x41, x3, (arg3[7]), x30);
  let mut x42: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x42, x3, (arg3[8]), x32);
  let mut x43: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x43, x3, (arg4[0]), (arg5[0]));
  let mut x44: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x44, x3, (arg4[1]), (arg5[1]));
  let mut x45: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x45, x3, (arg4[2]), (arg5[2]));
  let mut x46: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x46, x3, (arg4[3]), (arg5[3]));
  let mut x47: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x47, x3, (arg4[4]), (arg5[4]));
  let mut x48: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x48, x3, (arg4[5]), (arg5[5]));
  let mut x49: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x49, x3, (arg4[6]), (arg5[6]));
  let mut x50: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x50, x3, (arg4[7]), (arg5[7]));
  let mut x51: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x51, x3, (arg4[8]), (arg5[8]));
  let mut x52: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x52, x3, (arg4[9]), (arg5[9]));
  let x53: u32 = (x43 + x43);
  let x54: u32 = (x53 >> 26);
  let x55: u32 = (x53 & 0x3ffffff);
  let x56: u32 = (x52 + x52);
  let x57: u32 = (x51 + x51);
  let x58: u32 = (x50 + x50);
  let x59: u32 = (x49 + x49);
  let x60: u32 = (x48 + x48);
  let x61: u32 = (x47 + x47);
  let x62: u32 = (x46 + x46);
  let x63: u32 = (x45 + x45);
  let x64: u32 = (x44 + x44);
  let x65: u32 = (x54 + x64);
  let x66: u32 = (x65 >> 25);
  let x67: u32 = (x65 & 0x1ffffff);
  let x68: u32 = (x66 + x63);
  let x69: u32 = (x68 >> 26);
  let x70: u32 = (x68 & 0x3ffffff);
  let x71: u32 = (x69 + x62);
  let x72: u32 = (x71 >> 25);
  let x73: u32 = (x71 & 0x1ffffff);
  let x74: u32 = (x72 + x61);
  let x75: u32 = (x74 >> 26);
  let x76: u32 = (x74 & 0x3ffffff);
  let x77: u32 = (x75 + x60);
  let x78: u32 = (x77 >> 25);
  let x79: u32 = (x77 & 0x1ffffff);
  let x80: u32 = (x78 + x59);
  let x81: u32 = (x80 >> 26);
  let x82: u32 = (x80 & 0x3ffffff);
  let x83: u32 = (x81 + x58);
  let x84: u32 = (x83 >> 25);
  let x85: u32 = (x83 & 0x1ffffff);
  let x86: u32 = (x84 + x57);
  let x87: u32 = (x86 >> 26);
  let x88: u32 = (x86 & 0x3ffffff);
  let x89: u32 = (x87 + x56);
  let x90: u32 = (x89 >> 25);
  let x91: u32 = (x89 & 0x1ffffff);
  let x92: u32 = (x90 * 0x13);
  let x93: u32 = (x55 + x92);
  let x94: fiat_25519_u1 = ((x93 >> 26) as fiat_25519_u1);
  let x95: u32 = (x93 & 0x3ffffff);
  let x96: u32 = ((x94 as u32) + x67);
  let x97: fiat_25519_u1 = ((x96 >> 25) as fiat_25519_u1);
  let x98: u32 = (x96 & 0x1ffffff);
  let x99: u32 = ((x97 as u32) + x70);
  let x100: u32 = (arg4[9]);
  let x101: u32 = (arg4[8]);
  let x102: u32 = (arg4[7]);
  let x103: u32 = (arg4[6]);
  let x104: u32 = (arg4[5]);
  let x105: u32 = (arg4[4]);
  let x106: u32 = (arg4[3]);
  let x107: u32 = (arg4[2]);
  let x108: u32 = (arg4[1]);
  let x109: u32 = (arg4[0]);
  let x110: u32 = (0x7ffffda - x109);
  let x111: u32 = (0x3fffffe - x108);
  let x112: u32 = (0x7fffffe - x107);
  let x113: u32 = (0x3fffffe - x106);
  let x114: u32 = (0x7fffffe - x105);
  let x115: u32 = (0x3fffffe - x104);
  let x116: u32 = (0x7fffffe - x103);
  let x117: u32 = (0x3fffffe - x102);
  let x118: u32 = (0x7fffffe - x101);
  let x119: u32 = (0x3fffffe - x100);
  let x120: fiat_25519_u1 = ((x110 >> 26) as fiat_25519_u1);
  let x121: u32 = (x110 & 0x3ffffff);
  let x122: u32 = ((x120 as u32) + x111);
  let x123: fiat_25519_u1 = ((x122 >> 25) as fiat_25519_u1);
  let x124: u32 = (x122 & 0x1ffffff);
  let x125: u32 = ((x123 as u32) + x112);
  let x126: fiat_25519_u1 = ((x125 >> 26) as fiat_25519_u1);
  let x127: u32 = (x125 & 0x3ffffff);
  let x128: u32 = ((x126 as u32) + x113);
  let x129: fiat_25519_u1 = ((x128 >> 25) as fiat_25519_u1);
  let x130: u32 = (x128 & 0x1ffffff);
  let x131: u32 = ((x129 as u32) + x114);
  let x132: fiat_25519_u1 = ((x131 >> 26) as fiat_25519_u1);
  let x133: u32 = (x131 & 0x3ffffff);
  let x134: u32 = ((x132 as u32) + x115);
  let x135: fiat_25519_u1 = ((x134 >> 25) as fiat_25519_u1);
  let x136: u32 = (x134 & 0x1ffffff);
  let x137: u32 = ((x135 as u32) + x116);
  let x138: fiat_25519_u1 = ((x137 >> 26) as fiat_25519_u1);
  let x139: u32 = (x137 & 0x3ffffff);
  let x140: u32 = ((x138 as u32) + x117);
  let x141: fiat_25519_u1 = ((x140 >> 25) as fiat_25519_u1);
  let x142: u32 = (x140 & 0x1ffffff);
  let x143: u32 = ((x141 as u32) + x118);
  let x144: fiat_25519_u1 = ((x143 >> 26) as fiat_25519_u1);
  let x145: u32 = (x143 & 0x3ffffff);
  let x146: u32 = ((x144 as u32) + x119);
  let x147: fiat_25519_u1 = ((x146 >> 25) as fiat_25519_u1);
  let x148: u32 = (x146 & 0x1ffffff);
  let x149: u32 = ((x147 as u32) * 0x13);
  let x150: u32 = (x121 + x149);
  let x151: fiat_25519_u1 = ((x150 >> 26) as fiat_25519_u1);
  let x152: u32 = (x150 & 0x3ffffff);
  let x153: u32 = ((x151 as u32) + x124);
  let x154: fiat_25519_u1 = ((x153 >> 25) as fiat_25519_u1);
  let x155: u32 = (x153 & 0x1ffffff);
  let x156: u32 = ((x154 as u32) + x127);
  let mut x157: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x157, x3, (arg5[0]), x152);
  let mut x158: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x158, x3, (arg5[1]), x155);
  let mut x159: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x159, x3, (arg5[2]), x156);
  let mut x160: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x160, x3, (arg5[3]), x130);
  let mut x161: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x161, x3, (arg5[4]), x133);
  let mut x162: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x162, x3, (arg5[5]), x136);
  let mut x163: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x163, x3, (arg5[6]), x139);
  let mut x164: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x164, x3, (arg5[7]), x142);
  let mut x165: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x165, x3, (arg5[8]), x145);
  let mut x166: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x166, x3, (arg5[9]), x148);
  let x167: fiat_25519_u1 = ((x34 & (0x1 as u32)) as fiat_25519_u1);
  let mut x168: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x168, x167, (0x0 as u32), x7);
  let mut x169: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x169, x167, (0x0 as u32), x8);
  let mut x170: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x170, x167, (0x0 as u32), x9);
  let mut x171: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x171, x167, (0x0 as u32), x10);
  let mut x172: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x172, x167, (0x0 as u32), x11);
  let mut x173: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x173, x167, (0x0 as u32), x12);
  let mut x174: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x174, x167, (0x0 as u32), x13);
  let mut x175: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x175, x167, (0x0 as u32), x14);
  let mut x176: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x176, x167, (0x0 as u32), x15);
  let mut x177: u32 = 0;
  let mut x178: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x177, &mut x178, 0x0, x34, x168);
  let mut x179: u32 = 0;
  let mut x180: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x179, &mut x180, x178, x35, x169);
  let mut x181: u32 = 0;
  let mut x182: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x181, &mut x182, x180, x36, x170);
  let mut x183: u32 = 0;
  let mut x184: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x183, &mut x184, x182, x37, x171);
  let mut x185: u32 = 0;
  let mut x186: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x185, &mut x186, x184, x38, x172);
  let mut x187: u32 = 0;
  let mut x188: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x187, &mut x188, x186, x39, x173);
  let mut x189: u32 = 0;
  let mut x190: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x189, &mut x190, x188, x40, x174);
  let mut x191: u32 = 0;
  let mut x192: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x191, &mut x192, x190, x41, x175);
  let mut x193: u32 = 0;
  let mut x194: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x193, &mut x194, x192, x42, x176);
  let mut x195: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x195, x167, (0x0 as u32), x43);
  let mut x196: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x196, x167, (0x0 as u32), x44);
  let mut x197: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x197, x167, (0x0 as u32), x45);
  let mut x198: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x198, x167, (0x0 as u32), x46);
  let mut x199: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x199, x167, (0x0 as u32), x47);
  let mut x200: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x200, x167, (0x0 as u32), x48);
  let mut x201: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x201, x167, (0x0 as u32), x49);
  let mut x202: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x202, x167, (0x0 as u32), x50);
  let mut x203: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x203, x167, (0x0 as u32), x51);
  let mut x204: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x204, x167, (0x0 as u32), x52);
  let x205: u32 = (x157 + x195);
  let x206: u32 = (x205 >> 26);
  let x207: u32 = (x205 & 0x3ffffff);
  let x208: u32 = (x166 + x204);
  let x209: u32 = (x165 + x203);
  let x210: u32 = (x164 + x202);
  let x211: u32 = (x163 + x201);
  let x212: u32 = (x162 + x200);
  let x213: u32 = (x161 + x199);
  let x214: u32 = (x160 + x198);
  let x215: u32 = (x159 + x197);
  let x216: u32 = (x158 + x196);
  let x217: u32 = (x206 + x216);
  let x218: u32 = (x217 >> 25);
  let x219: u32 = (x217 & 0x1ffffff);
  let x220: u32 = (x218 + x215);
  let x221: u32 = (x220 >> 26);
  let x222: u32 = (x220 & 0x3ffffff);
  let x223: u32 = (x221 + x214);
  let x224: u32 = (x223 >> 25);
  let x225: u32 = (x223 & 0x1ffffff);
  let x226: u32 = (x224 + x213);
  let x227: u32 = (x226 >> 26);
  let x228: u32 = (x226 & 0x3ffffff);
  let x229: u32 = (x227 + x212);
  let x230: u32 = (x229 >> 25);
  let x231: u32 = (x229 & 0x1ffffff);
  let x232: u32 = (x230 + x211);
  let x233: u32 = (x232 >> 26);
  let x234: u32 = (x232 & 0x3ffffff);
  let x235: u32 = (x233 + x210);
  let x236: u32 = (x235 >> 25);
  let x237: u32 = (x235 & 0x1ffffff);
  let x238: u32 = (x236 + x209);
  let x239: u32 = (x238 >> 26);
  let x240: u32 = (x238 & 0x3ffffff);
  let x241: u32 = (x239 + x208);
  let x242: u32 = (x241 >> 25);
  let x243: u32 = (x241 & 0x1ffffff);
  let x244: u32 = (x242 * 0x13);
  let x245: u32 = (x207 + x244);
  let x246: fiat_25519_u1 = ((x245 >> 26) as fiat_25519_u1);
  let x247: u32 = (x245 & 0x3ffffff);
  let x248: u32 = ((x246 as u32) + x219);
  let x249: fiat_25519_u1 = ((x248 >> 25) as fiat_25519_u1);
  let x250: u32 = (x248 & 0x1ffffff);
  let x251: u32 = ((x249 as u32) + x222);
  let x252: u32 = ((((x6 as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let x253: u32 = ((x177 >> 1) | ((x179 << 31) & 0xffffffff));
  let x254: u32 = ((x179 >> 1) | ((x181 << 31) & 0xffffffff));
  let x255: u32 = ((x181 >> 1) | ((x183 << 31) & 0xffffffff));
  let x256: u32 = ((x183 >> 1) | ((x185 << 31) & 0xffffffff));
  let x257: u32 = ((x185 >> 1) | ((x187 << 31) & 0xffffffff));
  let x258: u32 = ((x187 >> 1) | ((x189 << 31) & 0xffffffff));
  let x259: u32 = ((x189 >> 1) | ((x191 << 31) & 0xffffffff));
  let x260: u32 = ((x191 >> 1) | ((x193 << 31) & 0xffffffff));
  let x261: u32 = ((x193 & 0x80000000) | (x193 >> 1));
  *out1 = x252;
  out2[0] = x7;
  out2[1] = x8;
  out2[2] = x9;
  out2[3] = x10;
  out2[4] = x11;
  out2[5] = x12;
  out2[6] = x13;
  out2[7] = x14;
  out2[8] = x15;
  out3[0] = x253;
  out3[1] = x254;
  out3[2] = x255;
  out3[3] = x256;
  out3[4] = x257;
  out3[5] = x258;
  out3[6] = x259;
  out3[7] = x260;
  out3[8] = x261;
  out4[0] = x95;
  out4[1] = x98;
  out4[2] = x99;
  out4[3] = x73;
  out4[4] = x76;
  out4[5] = x79;
  out4[6] = x82;
  out4[7] = x85;
  out4[8] = x88;
  out4[9] = x91;
  out5[0] = x247;
  out5[1] = x250;
  out5[2] = x251;
  out5[3] = x225;
  out5[4] = x228;
  out5[5] = x231;
  out5[6] = x234;
  out5[7] = x237;
  out5[8] = x240;
  out5[9] = x243;
}

/// The function fiat_25519_divstep_precomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
#[inline]
pub fn fiat_25519_divstep_precomp(out1: &mut fiat_25519_tight_field_element) -> () {
  out1[0] = 0x938054;
  out1[1] = 0x55b1b2;
  out1[2] = 0x82ee0c;
  out1[3] = 0x1b28459;
  out1[4] = 0xa54469;
  out1[5] = 0x1351c67;
  out1[6] = 0x3b3b619;
  out1[7] = 0x7acb1c;
  out1[8] = 0x2c1db59;
  out1[9] = 0xb66f98;
}

/// The function fiat_25519_inner_loop computes a inner_loop.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
///   out3: [0x0 ~> 0xffffffff]
///   out4: [0x0 ~> 0xffffffff]
///   out5: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_25519_inner_loop(out1: &mut u32, out2: &mut u32, out3: &mut u32, out4: &mut u32, out5: &mut u32, arg1: u32, arg2: &[u32; 9], arg3: &[u32; 9]) -> () {
  let x1: u32 = (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x2: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x2, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), arg1, (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x3: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x3, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), (arg2[0]), (arg3[0]));
  let mut x4: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x4, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), (arg3[0]), (((((!(arg2[0])) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x5: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x5, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), 0x1, 0x0);
  let mut x6: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x6, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), 0x0, 0x1);
  let mut x7: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x7, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), (0x0 as u32), 0xffffffff);
  let mut x8: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x8, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), 0x1, 0x0);
  let mut x9: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x9, ((x4 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x3);
  let mut x10: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x10, ((x4 & (0x1 as u32)) as fiat_25519_u1), 0x0, x5);
  let mut x11: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x11, ((x4 & (0x1 as u32)) as fiat_25519_u1), 0x0, x6);
  let x12: u32 = (((((!((((0x1 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x13: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x13, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x14: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x14, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x3, ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x15: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x15, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x3) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x16: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x16, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((x5 as u32) + (x5 as u32)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32));
  let mut x17: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x17, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((x6 as u32) + (x6 as u32)), ((x8 as u32) + (x11 as u32)));
  let mut x18: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x18, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32), (((((!((x5 as u32) + (x5 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x19: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x19, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((x8 as u32) + (x11 as u32)), (((((!((x6 as u32) + (x6 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x20: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x20, ((x15 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x14);
  let mut x21: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x21, ((x15 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x16);
  let mut x22: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x22, ((x15 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x17);
  let x23: u32 = (((((!((((0x1 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x24: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x24, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x25: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x25, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x14, ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x26: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x26, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x14) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x27: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x27, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32));
  let mut x28: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x28, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), (x17 + x17), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32));
  let mut x29: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x29, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x30: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x30, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32), (((((!(x17 + x17)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x31: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x31, ((x26 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x25);
  let mut x32: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x32, ((x26 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x27);
  let mut x33: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x33, ((x26 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x28);
  let x34: u32 = (((((!((((0x1 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x35: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x35, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x36: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x36, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x25, ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x37: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x37, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x25) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x38: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x38, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32));
  let mut x39: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x39, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32));
  let mut x40: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x40, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x41: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x41, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x42: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x42, ((x37 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x36);
  let mut x43: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x43, ((x37 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x38);
  let mut x44: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x44, ((x37 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x39);
  let x45: u32 = (((((!((((0x1 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x46: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x46, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x47: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x47, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x36, ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x48: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x48, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x36) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x49: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x49, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32));
  let mut x50: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x50, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32));
  let mut x51: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x51, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x52: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x52, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x53: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x53, ((x48 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x47);
  let mut x54: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x54, ((x48 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x49);
  let mut x55: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x55, ((x48 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x50);
  let x56: u32 = (((((!((((0x1 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x57: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x57, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x58: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x58, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x47, ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x59: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x59, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x47) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x60: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x60, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32));
  let mut x61: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x61, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32));
  let mut x62: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x62, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x63: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x63, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x64: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x64, ((x59 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x58);
  let mut x65: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x65, ((x59 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x60);
  let mut x66: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x66, ((x59 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x61);
  let x67: u32 = (((((!((((0x1 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x68: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x68, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x69: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x69, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x58, ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x70: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x70, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x58) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x71: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x71, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32));
  let mut x72: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x72, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32));
  let mut x73: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x73, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x74: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x74, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x75: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x75, ((x70 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x69);
  let mut x76: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x76, ((x70 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x71);
  let mut x77: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x77, ((x70 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x72);
  let x78: u32 = (((((!((((0x1 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x79: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x79, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x80: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x80, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x69, ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x81: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x81, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x69) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x82: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x82, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32));
  let mut x83: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x83, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32));
  let mut x84: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x84, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x85: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x85, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x86: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x86, ((x81 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x80);
  let mut x87: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x87, ((x81 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x82);
  let mut x88: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x88, ((x81 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x83);
  let x89: u32 = (((((!((((0x1 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x90: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x90, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x91: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x91, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x80, ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x92: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x92, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x80) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x93: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x93, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32));
  let mut x94: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x94, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32));
  let mut x95: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x95, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x96: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x96, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x97: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x97, ((x92 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x91);
  let mut x98: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x98, ((x92 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x93);
  let mut x99: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x99, ((x92 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x94);
  let x100: u32 = (((((!((((0x1 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x101: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x101, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x102: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x102, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x91, ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x103: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x103, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x91) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x104: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x104, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32));
  let mut x105: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x105, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32));
  let mut x106: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x106, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x107: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x107, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x108: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x108, ((x103 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x102);
  let mut x109: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x109, ((x103 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x104);
  let mut x110: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x110, ((x103 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x105);
  let x111: u32 = (((((!((((0x1 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x112: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x112, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x113: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x113, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x102, ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x114: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x114, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x102) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x115: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x115, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32));
  let mut x116: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x116, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32));
  let mut x117: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x117, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x118: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x118, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x119: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x119, ((x114 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x113);
  let mut x120: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x120, ((x114 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x115);
  let mut x121: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x121, ((x114 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x116);
  let x122: u32 = (((((!((((0x1 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x123: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x123, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x124: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x124, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x113, ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x125: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x125, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x113) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x126: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x126, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32));
  let mut x127: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x127, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32));
  let mut x128: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x128, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x129: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x129, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x130: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x130, ((x125 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x124);
  let mut x131: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x131, ((x125 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x126);
  let mut x132: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x132, ((x125 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x127);
  let x133: u32 = (((((!((((0x1 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x134: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x134, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x135: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x135, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x124, ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x136: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x136, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x124) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x137: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x137, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32));
  let mut x138: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x138, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32));
  let mut x139: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x139, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x140: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x140, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x141: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x141, ((x136 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x135);
  let mut x142: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x142, ((x136 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x137);
  let mut x143: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x143, ((x136 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x138);
  let x144: u32 = (((((!((((0x1 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x145: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x145, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x146: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x146, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x135, ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x147: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x147, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x135) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x148: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x148, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32));
  let mut x149: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x149, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32));
  let mut x150: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x150, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x151: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x151, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x152: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x152, ((x147 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x146);
  let mut x153: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x153, ((x147 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x148);
  let mut x154: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x154, ((x147 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x149);
  let x155: u32 = (((((!((((0x1 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x156: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x156, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x157: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x157, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x146, ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x158: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x158, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x146) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x159: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x159, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32));
  let mut x160: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x160, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32));
  let mut x161: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x161, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x162: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x162, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x163: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x163, ((x158 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x157);
  let mut x164: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x164, ((x158 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x159);
  let mut x165: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x165, ((x158 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x160);
  let x166: u32 = (((((!((((0x1 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x167: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x167, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x168: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x168, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x157, ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x169: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x169, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x157) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x170: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x170, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32));
  let mut x171: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x171, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32));
  let mut x172: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x172, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x173: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x173, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x174: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x174, ((x169 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x168);
  let mut x175: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x175, ((x169 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x170);
  let mut x176: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x176, ((x169 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x171);
  let x177: u32 = (((((!((((0x1 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x178: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x178, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x179: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x179, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x168, ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x180: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x180, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x168) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x181: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x181, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32));
  let mut x182: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x182, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32));
  let mut x183: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x183, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x184: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x184, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x185: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x185, ((x180 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x179);
  let mut x186: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x186, ((x180 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x181);
  let mut x187: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x187, ((x180 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x182);
  let x188: u32 = (((((!((((0x1 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x189: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x189, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x190: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x190, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x179, ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x191: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x191, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x179) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x192: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x192, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32));
  let mut x193: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x193, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32));
  let mut x194: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x194, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x195: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x195, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x196: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x196, ((x191 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x190);
  let mut x197: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x197, ((x191 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x192);
  let mut x198: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x198, ((x191 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x193);
  let x199: u32 = (((((!((((0x1 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x200: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x200, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x201: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x201, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x190, ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x202: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x202, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x190) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x203: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x203, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32));
  let mut x204: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x204, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32));
  let mut x205: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x205, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x206: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x206, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x207: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x207, ((x202 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x201);
  let mut x208: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x208, ((x202 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x203);
  let mut x209: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x209, ((x202 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x204);
  let x210: u32 = (((((!((((0x1 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x211: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x211, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x212: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x212, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x201, ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x213: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x213, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x201) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x214: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x214, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32));
  let mut x215: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x215, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32));
  let mut x216: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x216, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x217: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x217, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x218: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x218, ((x213 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x212);
  let mut x219: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x219, ((x213 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x214);
  let mut x220: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x220, ((x213 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x215);
  let x221: u32 = (((((!((((0x1 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x222: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x222, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x223: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x223, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x212, ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x224: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x224, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x212) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x225: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x225, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32));
  let mut x226: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x226, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32));
  let mut x227: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x227, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x228: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x228, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x229: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x229, ((x224 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x223);
  let mut x230: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x230, ((x224 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x225);
  let mut x231: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x231, ((x224 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x226);
  let x232: u32 = (((((!((((0x1 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x233: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x233, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x234: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x234, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x223, ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x235: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x235, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x223) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x236: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x236, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32));
  let mut x237: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x237, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32));
  let mut x238: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x238, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x239: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x239, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x240: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x240, ((x235 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x234);
  let mut x241: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x241, ((x235 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x236);
  let mut x242: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x242, ((x235 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x237);
  let x243: u32 = (((((!((((0x1 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x244: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x244, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x245: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x245, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x234, ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x246: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x246, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x234) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x247: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x247, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32));
  let mut x248: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x248, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32));
  let mut x249: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x249, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x250: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x250, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x251: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x251, ((x246 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x245);
  let mut x252: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x252, ((x246 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x247);
  let mut x253: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x253, ((x246 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x248);
  let x254: u32 = (((((!((((0x1 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x255: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x255, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x256: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x256, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x245, ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x257: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x257, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x245) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x258: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x258, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32));
  let mut x259: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x259, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32));
  let mut x260: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x260, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x261: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x261, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x262: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x262, ((x257 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x256);
  let mut x263: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x263, ((x257 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x258);
  let mut x264: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x264, ((x257 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x259);
  let x265: u32 = (((((!((((0x1 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x266: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x266, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x267: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x267, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x256, ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x268: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x268, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x256) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x269: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x269, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32));
  let mut x270: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x270, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32));
  let mut x271: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x271, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x272: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x272, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x273: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x273, ((x268 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x267);
  let mut x274: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x274, ((x268 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x269);
  let mut x275: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x275, ((x268 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x270);
  let x276: u32 = (((((!((((0x1 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x277: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x277, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x278: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x278, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x267, ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x279: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x279, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x267) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x280: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x280, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32));
  let mut x281: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x281, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32));
  let mut x282: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x282, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x283: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x283, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x284: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x284, ((x279 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x278);
  let mut x285: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x285, ((x279 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x280);
  let mut x286: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x286, ((x279 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x281);
  let x287: u32 = (((((!((((0x1 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x288: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x288, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x289: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x289, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x278, ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x290: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x290, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x278) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x291: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x291, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32));
  let mut x292: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x292, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32));
  let mut x293: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x293, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x294: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x294, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x295: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x295, ((x290 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x289);
  let mut x296: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x296, ((x290 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x291);
  let mut x297: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x297, ((x290 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x292);
  let x298: u32 = (((((!((((0x1 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x299: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x299, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x300: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x300, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x289, ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x301: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x301, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x289) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x302: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x302, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32));
  let mut x303: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x303, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32));
  let mut x304: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x304, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x305: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x305, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x306: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x306, ((x301 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x300);
  let mut x307: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x307, ((x301 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x302);
  let mut x308: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x308, ((x301 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x303);
  let x309: u32 = (((((!((((0x1 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x310: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x310, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x311: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x311, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x300, ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x312: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x312, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x300) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x313: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x313, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32));
  let mut x314: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x314, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32));
  let mut x315: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x315, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x316: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x316, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x317: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x317, ((x312 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x311);
  let mut x318: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x318, ((x312 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x313);
  let mut x319: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x319, ((x312 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x314);
  let x320: u32 = (((((!((((0x1 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x321: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x321, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x1 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x322: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x322, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x311) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x323: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x323, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32));
  let mut x324: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x324, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32));
  let mut x325: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x325, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x326: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x326, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x327: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x327, ((x322 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x323);
  let mut x328: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x328, ((x322 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x324);
  let x329: u32 = ((((0x1 as u64) + (x321 as u64)) & (0xffffffff as u64)) as u32);
  let x330: u32 = ((((x323 as u64) + (x323 as u64)) & (0xffffffff as u64)) as u32);
  let x331: u32 = ((((x324 as u64) + (x324 as u64)) & (0xffffffff as u64)) as u32);
  let x332: u32 = ((((x325 as u64) + (x327 as u64)) & (0xffffffff as u64)) as u32);
  let x333: u32 = ((((x326 as u64) + (x328 as u64)) & (0xffffffff as u64)) as u32);
  *out1 = x329;
  *out2 = x330;
  *out3 = x331;
  *out4 = x332;
  *out5 = x333;
}

/// The function fiat_25519_inner_loop_hd computes a inner_loop_hd.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
///   out3: [0x0 ~> 0xffffffff]
///   out4: [0x0 ~> 0xffffffff]
///   out5: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_25519_inner_loop_hd(out1: &mut u32, out2: &mut u32, out3: &mut u32, out4: &mut u32, out5: &mut u32, arg1: u32, arg2: &[u32; 9], arg3: &[u32; 9]) -> () {
  let x1: u32 = (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x2: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x2, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), arg1, (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x3: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x3, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), (arg2[0]), (arg3[0]));
  let mut x4: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x4, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), (arg3[0]), (((((!(arg2[0])) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x5: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x5, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), 0x1, 0x0);
  let mut x6: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x6, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), 0x0, 0x1);
  let mut x7: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x7, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), (0x0 as u32), 0xffffffff);
  let mut x8: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x8, (((x1 >> 31) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_25519_u1)), 0x1, 0x0);
  let mut x9: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x9, ((x4 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x3);
  let mut x10: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x10, ((x4 & (0x1 as u32)) as fiat_25519_u1), 0x0, x5);
  let mut x11: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x11, ((x4 & (0x1 as u32)) as fiat_25519_u1), 0x0, x6);
  let x12: u32 = (((((!((((0x2 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x13: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x13, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x14: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x14, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x3, ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x15: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x15, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x3) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x16: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x16, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((x5 as u32) + (x5 as u32)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32));
  let mut x17: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x17, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((x6 as u32) + (x6 as u32)), ((x8 as u32) + (x11 as u32)));
  let mut x18: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x18, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32), (((((!((x5 as u32) + (x5 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x19: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x19, (((x12 >> 31) as fiat_25519_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((x8 as u32) + (x11 as u32)), (((((!((x6 as u32) + (x6 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x20: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x20, ((x15 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x14);
  let mut x21: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x21, ((x15 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x16);
  let mut x22: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x22, ((x15 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x17);
  let x23: u32 = (((((!((((0x2 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x24: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x24, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x25: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x25, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x14, ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x26: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x26, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x14) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x27: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x27, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32));
  let mut x28: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x28, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), (x17 + x17), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32));
  let mut x29: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x29, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x30: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x30, (((x23 >> 31) as fiat_25519_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32), (((((!(x17 + x17)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x31: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x31, ((x26 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x25);
  let mut x32: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x32, ((x26 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x27);
  let mut x33: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x33, ((x26 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x28);
  let x34: u32 = (((((!((((0x2 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x35: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x35, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x36: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x36, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x25, ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x37: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x37, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x25) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x38: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x38, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32));
  let mut x39: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x39, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32));
  let mut x40: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x40, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x41: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x41, (((x34 >> 31) as fiat_25519_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x42: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x42, ((x37 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x36);
  let mut x43: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x43, ((x37 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x38);
  let mut x44: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x44, ((x37 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x39);
  let x45: u32 = (((((!((((0x2 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x46: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x46, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x47: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x47, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x36, ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x48: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x48, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x36) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x49: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x49, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32));
  let mut x50: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x50, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32));
  let mut x51: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x51, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x52: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x52, (((x45 >> 31) as fiat_25519_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x53: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x53, ((x48 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x47);
  let mut x54: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x54, ((x48 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x49);
  let mut x55: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x55, ((x48 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x50);
  let x56: u32 = (((((!((((0x2 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x57: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x57, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x58: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x58, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x47, ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x59: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x59, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x47) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x60: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x60, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32));
  let mut x61: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x61, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32));
  let mut x62: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x62, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x63: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x63, (((x56 >> 31) as fiat_25519_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x64: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x64, ((x59 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x58);
  let mut x65: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x65, ((x59 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x60);
  let mut x66: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x66, ((x59 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x61);
  let x67: u32 = (((((!((((0x2 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x68: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x68, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x69: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x69, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x58, ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x70: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x70, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x58) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x71: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x71, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32));
  let mut x72: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x72, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32));
  let mut x73: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x73, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x74: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x74, (((x67 >> 31) as fiat_25519_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x75: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x75, ((x70 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x69);
  let mut x76: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x76, ((x70 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x71);
  let mut x77: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x77, ((x70 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x72);
  let x78: u32 = (((((!((((0x2 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x79: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x79, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x80: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x80, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x69, ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x81: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x81, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x69) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x82: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x82, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32));
  let mut x83: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x83, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32));
  let mut x84: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x84, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x85: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x85, (((x78 >> 31) as fiat_25519_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x86: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x86, ((x81 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x80);
  let mut x87: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x87, ((x81 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x82);
  let mut x88: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x88, ((x81 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x83);
  let x89: u32 = (((((!((((0x2 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x90: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x90, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x91: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x91, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x80, ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x92: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x92, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x80) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x93: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x93, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32));
  let mut x94: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x94, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32));
  let mut x95: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x95, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x96: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x96, (((x89 >> 31) as fiat_25519_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x97: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x97, ((x92 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x91);
  let mut x98: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x98, ((x92 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x93);
  let mut x99: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x99, ((x92 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x94);
  let x100: u32 = (((((!((((0x2 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x101: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x101, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x102: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x102, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x91, ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x103: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x103, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x91) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x104: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x104, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32));
  let mut x105: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x105, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32));
  let mut x106: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x106, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x107: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x107, (((x100 >> 31) as fiat_25519_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x108: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x108, ((x103 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x102);
  let mut x109: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x109, ((x103 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x104);
  let mut x110: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x110, ((x103 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x105);
  let x111: u32 = (((((!((((0x2 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x112: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x112, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x113: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x113, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x102, ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x114: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x114, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x102) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x115: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x115, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32));
  let mut x116: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x116, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32));
  let mut x117: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x117, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x118: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x118, (((x111 >> 31) as fiat_25519_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x119: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x119, ((x114 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x113);
  let mut x120: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x120, ((x114 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x115);
  let mut x121: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x121, ((x114 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x116);
  let x122: u32 = (((((!((((0x2 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x123: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x123, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x124: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x124, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x113, ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x125: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x125, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x113) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x126: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x126, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32));
  let mut x127: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x127, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32));
  let mut x128: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x128, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x129: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x129, (((x122 >> 31) as fiat_25519_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x130: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x130, ((x125 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x124);
  let mut x131: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x131, ((x125 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x126);
  let mut x132: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x132, ((x125 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x127);
  let x133: u32 = (((((!((((0x2 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x134: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x134, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x135: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x135, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x124, ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x136: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x136, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x124) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x137: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x137, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32));
  let mut x138: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x138, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32));
  let mut x139: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x139, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x140: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x140, (((x133 >> 31) as fiat_25519_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x141: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x141, ((x136 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x135);
  let mut x142: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x142, ((x136 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x137);
  let mut x143: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x143, ((x136 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x138);
  let x144: u32 = (((((!((((0x2 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x145: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x145, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x146: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x146, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x135, ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x147: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x147, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x135) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x148: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x148, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32));
  let mut x149: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x149, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32));
  let mut x150: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x150, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x151: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x151, (((x144 >> 31) as fiat_25519_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x152: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x152, ((x147 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x146);
  let mut x153: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x153, ((x147 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x148);
  let mut x154: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x154, ((x147 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x149);
  let x155: u32 = (((((!((((0x2 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x156: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x156, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x157: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x157, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x146, ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x158: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x158, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x146) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x159: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x159, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32));
  let mut x160: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x160, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32));
  let mut x161: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x161, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x162: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x162, (((x155 >> 31) as fiat_25519_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x163: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x163, ((x158 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x157);
  let mut x164: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x164, ((x158 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x159);
  let mut x165: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x165, ((x158 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x160);
  let x166: u32 = (((((!((((0x2 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x167: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x167, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x168: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x168, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x157, ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x169: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x169, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x157) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x170: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x170, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32));
  let mut x171: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x171, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32));
  let mut x172: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x172, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x173: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x173, (((x166 >> 31) as fiat_25519_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x174: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x174, ((x169 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x168);
  let mut x175: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x175, ((x169 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x170);
  let mut x176: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x176, ((x169 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x171);
  let x177: u32 = (((((!((((0x2 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x178: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x178, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x179: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x179, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x168, ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x180: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x180, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x168) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x181: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x181, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32));
  let mut x182: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x182, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32));
  let mut x183: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x183, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x184: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x184, (((x177 >> 31) as fiat_25519_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x185: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x185, ((x180 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x179);
  let mut x186: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x186, ((x180 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x181);
  let mut x187: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x187, ((x180 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x182);
  let x188: u32 = (((((!((((0x2 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x189: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x189, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x190: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x190, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x179, ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x191: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x191, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x179) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x192: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x192, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32));
  let mut x193: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x193, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32));
  let mut x194: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x194, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x195: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x195, (((x188 >> 31) as fiat_25519_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x196: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x196, ((x191 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x190);
  let mut x197: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x197, ((x191 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x192);
  let mut x198: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x198, ((x191 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x193);
  let x199: u32 = (((((!((((0x2 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x200: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x200, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x201: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x201, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x190, ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x202: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x202, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x190) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x203: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x203, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32));
  let mut x204: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x204, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32));
  let mut x205: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x205, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x206: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x206, (((x199 >> 31) as fiat_25519_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x207: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x207, ((x202 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x201);
  let mut x208: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x208, ((x202 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x203);
  let mut x209: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x209, ((x202 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x204);
  let x210: u32 = (((((!((((0x2 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x211: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x211, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x212: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x212, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x201, ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x213: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x213, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x201) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x214: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x214, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32));
  let mut x215: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x215, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32));
  let mut x216: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x216, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x217: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x217, (((x210 >> 31) as fiat_25519_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x218: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x218, ((x213 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x212);
  let mut x219: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x219, ((x213 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x214);
  let mut x220: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x220, ((x213 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x215);
  let x221: u32 = (((((!((((0x2 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x222: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x222, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x223: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x223, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x212, ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x224: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x224, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x212) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x225: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x225, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32));
  let mut x226: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x226, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32));
  let mut x227: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x227, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x228: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x228, (((x221 >> 31) as fiat_25519_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x229: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x229, ((x224 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x223);
  let mut x230: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x230, ((x224 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x225);
  let mut x231: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x231, ((x224 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x226);
  let x232: u32 = (((((!((((0x2 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x233: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x233, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x234: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x234, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x223, ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x235: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x235, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x223) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x236: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x236, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32));
  let mut x237: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x237, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32));
  let mut x238: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x238, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x239: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x239, (((x232 >> 31) as fiat_25519_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x240: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x240, ((x235 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x234);
  let mut x241: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x241, ((x235 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x236);
  let mut x242: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x242, ((x235 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x237);
  let x243: u32 = (((((!((((0x2 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x244: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x244, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x245: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x245, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x234, ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x246: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x246, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x234) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x247: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x247, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32));
  let mut x248: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x248, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32));
  let mut x249: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x249, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x250: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x250, (((x243 >> 31) as fiat_25519_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x251: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x251, ((x246 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x245);
  let mut x252: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x252, ((x246 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x247);
  let mut x253: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x253, ((x246 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x248);
  let x254: u32 = (((((!((((0x2 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x255: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x255, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x256: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x256, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x245, ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x257: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x257, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x245) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x258: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x258, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32));
  let mut x259: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x259, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32));
  let mut x260: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x260, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x261: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x261, (((x254 >> 31) as fiat_25519_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x262: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x262, ((x257 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x256);
  let mut x263: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x263, ((x257 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x258);
  let mut x264: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x264, ((x257 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x259);
  let x265: u32 = (((((!((((0x2 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x266: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x266, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x267: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x267, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x256, ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x268: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x268, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x256) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x269: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x269, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32));
  let mut x270: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x270, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32));
  let mut x271: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x271, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x272: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x272, (((x265 >> 31) as fiat_25519_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x273: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x273, ((x268 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x267);
  let mut x274: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x274, ((x268 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x269);
  let mut x275: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x275, ((x268 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x270);
  let x276: u32 = (((((!((((0x2 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x277: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x277, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x278: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x278, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x267, ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x279: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x279, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x267) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x280: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x280, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32));
  let mut x281: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x281, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32));
  let mut x282: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x282, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x283: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x283, (((x276 >> 31) as fiat_25519_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x284: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x284, ((x279 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x278);
  let mut x285: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x285, ((x279 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x280);
  let mut x286: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x286, ((x279 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x281);
  let x287: u32 = (((((!((((0x2 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x288: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x288, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x289: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x289, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x278, ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x290: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x290, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x278) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x291: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x291, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32));
  let mut x292: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x292, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32));
  let mut x293: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x293, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x294: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x294, (((x287 >> 31) as fiat_25519_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x295: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x295, ((x290 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x289);
  let mut x296: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x296, ((x290 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x291);
  let mut x297: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x297, ((x290 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x292);
  let x298: u32 = (((((!((((0x2 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x299: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x299, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x300: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x300, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x289, ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x301: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x301, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x289) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x302: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x302, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32));
  let mut x303: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x303, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32));
  let mut x304: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x304, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x305: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x305, (((x298 >> 31) as fiat_25519_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x306: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x306, ((x301 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x300);
  let mut x307: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x307, ((x301 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x302);
  let mut x308: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x308, ((x301 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x303);
  let x309: u32 = (((((!((((0x2 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x310: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x310, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x311: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x311, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), x300, ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x312: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x312, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x300) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x313: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x313, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32));
  let mut x314: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x314, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32));
  let mut x315: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x315, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x316: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x316, (((x309 >> 31) as fiat_25519_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x317: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x317, ((x312 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x311);
  let mut x318: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x318, ((x312 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x313);
  let mut x319: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x319, ((x312 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x314);
  let x320: u32 = (((((!((((0x2 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x321: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x321, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((0x2 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x322: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x322, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x311) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x323: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x323, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32));
  let mut x324: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x324, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32));
  let mut x325: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x325, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x326: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x326, (((x320 >> 31) as fiat_25519_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_25519_u1)), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x327: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x327, ((x322 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x323);
  let mut x328: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x328, ((x322 & (0x1 as u32)) as fiat_25519_u1), (0x0 as u32), x324);
  let x329: u32 = ((((0x2 as u64) + (x321 as u64)) & (0xffffffff as u64)) as u32);
  let x330: u32 = ((((x323 as u64) + (x323 as u64)) & (0xffffffff as u64)) as u32);
  let x331: u32 = ((((x324 as u64) + (x324 as u64)) & (0xffffffff as u64)) as u32);
  let x332: u32 = ((((x325 as u64) + (x327 as u64)) & (0xffffffff as u64)) as u32);
  let x333: u32 = ((((x326 as u64) + (x328 as u64)) & (0xffffffff as u64)) as u32);
  *out1 = x329;
  *out2 = x330;
  *out3 = x331;
  *out4 = x332;
  *out5 = x333;
}

/// The function fiat_25519_update_fg computes a update_fg.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [0x0 ~> 0xffffffff]
///   arg4: [0x0 ~> 0xffffffff]
///   arg5: [0x0 ~> 0xffffffff]
///   arg6: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_25519_update_fg(out1: &mut [u32; 9], out2: &mut [u32; 9], arg1: &[u32; 9], arg2: &[u32; 9], arg3: u32, arg4: u32, arg5: u32, arg6: u32) -> () {
  let mut x1: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x1, (((arg1[8]) >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x2: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x2, ((arg3 >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x3: u32 = 0;
  let mut x4: u32 = 0;
  fiat_25519_mulx_u32(&mut x3, &mut x4, x2, (arg1[0]));
  let mut x5: u32 = 0;
  let mut x6: u32 = 0;
  fiat_25519_mulx_u32(&mut x5, &mut x6, x2, (arg1[1]));
  let mut x7: u32 = 0;
  let mut x8: u32 = 0;
  fiat_25519_mulx_u32(&mut x7, &mut x8, x2, (arg1[0]));
  let mut x9: u32 = 0;
  let mut x10: u32 = 0;
  fiat_25519_mulx_u32(&mut x9, &mut x10, x2, (arg1[2]));
  let mut x11: u32 = 0;
  let mut x12: u32 = 0;
  fiat_25519_mulx_u32(&mut x11, &mut x12, x2, (arg1[1]));
  let mut x13: u32 = 0;
  let mut x14: u32 = 0;
  fiat_25519_mulx_u32(&mut x13, &mut x14, x2, (arg1[0]));
  let mut x15: u32 = 0;
  let mut x16: u32 = 0;
  fiat_25519_mulx_u32(&mut x15, &mut x16, x2, (arg1[3]));
  let mut x17: u32 = 0;
  let mut x18: u32 = 0;
  fiat_25519_mulx_u32(&mut x17, &mut x18, x2, (arg1[2]));
  let mut x19: u32 = 0;
  let mut x20: u32 = 0;
  fiat_25519_mulx_u32(&mut x19, &mut x20, x2, (arg1[1]));
  let mut x21: u32 = 0;
  let mut x22: u32 = 0;
  fiat_25519_mulx_u32(&mut x21, &mut x22, x2, (arg1[0]));
  let mut x23: u32 = 0;
  let mut x24: u32 = 0;
  fiat_25519_mulx_u32(&mut x23, &mut x24, x2, (arg1[4]));
  let mut x25: u32 = 0;
  let mut x26: u32 = 0;
  fiat_25519_mulx_u32(&mut x25, &mut x26, x2, (arg1[3]));
  let mut x27: u32 = 0;
  let mut x28: u32 = 0;
  fiat_25519_mulx_u32(&mut x27, &mut x28, x2, (arg1[2]));
  let mut x29: u32 = 0;
  let mut x30: u32 = 0;
  fiat_25519_mulx_u32(&mut x29, &mut x30, x2, (arg1[1]));
  let mut x31: u32 = 0;
  let mut x32: u32 = 0;
  fiat_25519_mulx_u32(&mut x31, &mut x32, x2, (arg1[0]));
  let mut x33: u32 = 0;
  let mut x34: u32 = 0;
  fiat_25519_mulx_u32(&mut x33, &mut x34, x2, (arg1[5]));
  let mut x35: u32 = 0;
  let mut x36: u32 = 0;
  fiat_25519_mulx_u32(&mut x35, &mut x36, x2, (arg1[4]));
  let mut x37: u32 = 0;
  let mut x38: u32 = 0;
  fiat_25519_mulx_u32(&mut x37, &mut x38, x2, (arg1[3]));
  let mut x39: u32 = 0;
  let mut x40: u32 = 0;
  fiat_25519_mulx_u32(&mut x39, &mut x40, x2, (arg1[2]));
  let mut x41: u32 = 0;
  let mut x42: u32 = 0;
  fiat_25519_mulx_u32(&mut x41, &mut x42, x2, (arg1[1]));
  let mut x43: u32 = 0;
  let mut x44: u32 = 0;
  fiat_25519_mulx_u32(&mut x43, &mut x44, x2, (arg1[0]));
  let mut x45: u32 = 0;
  let mut x46: u32 = 0;
  fiat_25519_mulx_u32(&mut x45, &mut x46, x2, (arg1[6]));
  let mut x47: u32 = 0;
  let mut x48: u32 = 0;
  fiat_25519_mulx_u32(&mut x47, &mut x48, x2, (arg1[5]));
  let mut x49: u32 = 0;
  let mut x50: u32 = 0;
  fiat_25519_mulx_u32(&mut x49, &mut x50, x2, (arg1[4]));
  let mut x51: u32 = 0;
  let mut x52: u32 = 0;
  fiat_25519_mulx_u32(&mut x51, &mut x52, x2, (arg1[3]));
  let mut x53: u32 = 0;
  let mut x54: u32 = 0;
  fiat_25519_mulx_u32(&mut x53, &mut x54, x2, (arg1[2]));
  let mut x55: u32 = 0;
  let mut x56: u32 = 0;
  fiat_25519_mulx_u32(&mut x55, &mut x56, x2, (arg1[1]));
  let mut x57: u32 = 0;
  let mut x58: u32 = 0;
  fiat_25519_mulx_u32(&mut x57, &mut x58, x2, (arg1[0]));
  let mut x59: u32 = 0;
  let mut x60: u32 = 0;
  fiat_25519_mulx_u32(&mut x59, &mut x60, x2, (arg1[7]));
  let mut x61: u32 = 0;
  let mut x62: u32 = 0;
  fiat_25519_mulx_u32(&mut x61, &mut x62, x2, (arg1[6]));
  let mut x63: u32 = 0;
  let mut x64: u32 = 0;
  fiat_25519_mulx_u32(&mut x63, &mut x64, x2, (arg1[5]));
  let mut x65: u32 = 0;
  let mut x66: u32 = 0;
  fiat_25519_mulx_u32(&mut x65, &mut x66, x2, (arg1[4]));
  let mut x67: u32 = 0;
  let mut x68: u32 = 0;
  fiat_25519_mulx_u32(&mut x67, &mut x68, x2, (arg1[3]));
  let mut x69: u32 = 0;
  let mut x70: u32 = 0;
  fiat_25519_mulx_u32(&mut x69, &mut x70, x2, (arg1[2]));
  let mut x71: u32 = 0;
  let mut x72: u32 = 0;
  fiat_25519_mulx_u32(&mut x71, &mut x72, x2, (arg1[1]));
  let mut x73: u32 = 0;
  let mut x74: u32 = 0;
  fiat_25519_mulx_u32(&mut x73, &mut x74, x2, (arg1[0]));
  let mut x75: u32 = 0;
  let mut x76: u32 = 0;
  fiat_25519_mulx_u32(&mut x75, &mut x76, x2, (arg1[8]));
  let mut x77: u32 = 0;
  let mut x78: u32 = 0;
  fiat_25519_mulx_u32(&mut x77, &mut x78, x2, (arg1[7]));
  let mut x79: u32 = 0;
  let mut x80: u32 = 0;
  fiat_25519_mulx_u32(&mut x79, &mut x80, x2, (arg1[6]));
  let mut x81: u32 = 0;
  let mut x82: u32 = 0;
  fiat_25519_mulx_u32(&mut x81, &mut x82, x2, (arg1[5]));
  let mut x83: u32 = 0;
  let mut x84: u32 = 0;
  fiat_25519_mulx_u32(&mut x83, &mut x84, x2, (arg1[4]));
  let mut x85: u32 = 0;
  let mut x86: u32 = 0;
  fiat_25519_mulx_u32(&mut x85, &mut x86, x2, (arg1[3]));
  let mut x87: u32 = 0;
  let mut x88: u32 = 0;
  fiat_25519_mulx_u32(&mut x87, &mut x88, x2, (arg1[2]));
  let mut x89: u32 = 0;
  let mut x90: u32 = 0;
  fiat_25519_mulx_u32(&mut x89, &mut x90, x2, (arg1[1]));
  let mut x91: u32 = 0;
  let mut x92: u32 = 0;
  fiat_25519_mulx_u32(&mut x91, &mut x92, x2, (arg1[0]));
  let mut x93: u32 = 0;
  let mut x94: u32 = 0;
  fiat_25519_mulx_u32(&mut x93, &mut x94, arg3, x1);
  let mut x95: u32 = 0;
  let mut x96: u32 = 0;
  fiat_25519_mulx_u32(&mut x95, &mut x96, arg3, (arg1[8]));
  let mut x97: u32 = 0;
  let mut x98: u32 = 0;
  fiat_25519_mulx_u32(&mut x97, &mut x98, arg3, (arg1[7]));
  let mut x99: u32 = 0;
  let mut x100: u32 = 0;
  fiat_25519_mulx_u32(&mut x99, &mut x100, arg3, (arg1[6]));
  let mut x101: u32 = 0;
  let mut x102: u32 = 0;
  fiat_25519_mulx_u32(&mut x101, &mut x102, arg3, (arg1[5]));
  let mut x103: u32 = 0;
  let mut x104: u32 = 0;
  fiat_25519_mulx_u32(&mut x103, &mut x104, arg3, (arg1[4]));
  let mut x105: u32 = 0;
  let mut x106: u32 = 0;
  fiat_25519_mulx_u32(&mut x105, &mut x106, arg3, (arg1[3]));
  let mut x107: u32 = 0;
  let mut x108: u32 = 0;
  fiat_25519_mulx_u32(&mut x107, &mut x108, arg3, (arg1[2]));
  let mut x109: u32 = 0;
  let mut x110: u32 = 0;
  fiat_25519_mulx_u32(&mut x109, &mut x110, arg3, (arg1[1]));
  let mut x111: u32 = 0;
  let mut x112: u32 = 0;
  fiat_25519_mulx_u32(&mut x111, &mut x112, arg3, (arg1[0]));
  let mut x113: u32 = 0;
  let mut x114: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x113, &mut x114, 0x0, x96, x3);
  let mut x115: u32 = 0;
  let mut x116: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x115, &mut x116, 0x0, x113, x5);
  let mut x117: u32 = 0;
  let mut x118: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x117, &mut x118, 0x0, x98, x7);
  let mut x119: u32 = 0;
  let mut x120: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x119, &mut x120, x118, x115, x8);
  let mut x121: u32 = 0;
  let mut x122: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x121, &mut x122, 0x0, x117, x11);
  let mut x123: u32 = 0;
  let mut x124: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x123, &mut x124, x122, x119, x9);
  let mut x125: u32 = 0;
  let mut x126: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x125, &mut x126, 0x0, x100, x13);
  let mut x127: u32 = 0;
  let mut x128: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x127, &mut x128, x126, x121, x14);
  let mut x129: u32 = 0;
  let mut x130: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x129, &mut x130, x128, x123, x12);
  let mut x131: u32 = 0;
  let mut x132: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x131, &mut x132, 0x0, x125, x19);
  let mut x133: u32 = 0;
  let mut x134: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x133, &mut x134, x132, x127, x17);
  let mut x135: u32 = 0;
  let mut x136: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x135, &mut x136, x134, x129, x15);
  let mut x137: u32 = 0;
  let mut x138: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x137, &mut x138, 0x0, x102, x21);
  let mut x139: u32 = 0;
  let mut x140: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x139, &mut x140, x138, x131, x22);
  let mut x141: u32 = 0;
  let mut x142: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x141, &mut x142, x140, x133, x20);
  let mut x143: u32 = 0;
  let mut x144: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x143, &mut x144, x142, x135, x18);
  let mut x145: u32 = 0;
  let mut x146: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x145, &mut x146, 0x0, x137, x29);
  let mut x147: u32 = 0;
  let mut x148: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x147, &mut x148, x146, x139, x27);
  let mut x149: u32 = 0;
  let mut x150: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x149, &mut x150, x148, x141, x25);
  let mut x151: u32 = 0;
  let mut x152: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x151, &mut x152, x150, x143, x23);
  let mut x153: u32 = 0;
  let mut x154: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x153, &mut x154, 0x0, x104, x31);
  let mut x155: u32 = 0;
  let mut x156: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x155, &mut x156, x154, x145, x32);
  let mut x157: u32 = 0;
  let mut x158: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x157, &mut x158, x156, x147, x30);
  let mut x159: u32 = 0;
  let mut x160: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x159, &mut x160, x158, x149, x28);
  let mut x161: u32 = 0;
  let mut x162: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x161, &mut x162, x160, x151, x26);
  let mut x163: u32 = 0;
  let mut x164: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x163, &mut x164, 0x0, x153, x41);
  let mut x165: u32 = 0;
  let mut x166: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x165, &mut x166, x164, x155, x39);
  let mut x167: u32 = 0;
  let mut x168: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x167, &mut x168, x166, x157, x37);
  let mut x169: u32 = 0;
  let mut x170: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x169, &mut x170, x168, x159, x35);
  let mut x171: u32 = 0;
  let mut x172: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x171, &mut x172, x170, x161, x33);
  let mut x173: u32 = 0;
  let mut x174: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x173, &mut x174, 0x0, x106, x43);
  let mut x175: u32 = 0;
  let mut x176: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x175, &mut x176, x174, x163, x44);
  let mut x177: u32 = 0;
  let mut x178: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x177, &mut x178, x176, x165, x42);
  let mut x179: u32 = 0;
  let mut x180: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x179, &mut x180, x178, x167, x40);
  let mut x181: u32 = 0;
  let mut x182: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x181, &mut x182, x180, x169, x38);
  let mut x183: u32 = 0;
  let mut x184: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x183, &mut x184, x182, x171, x36);
  let mut x185: u32 = 0;
  let mut x186: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x185, &mut x186, 0x0, x173, x55);
  let mut x187: u32 = 0;
  let mut x188: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x187, &mut x188, x186, x175, x53);
  let mut x189: u32 = 0;
  let mut x190: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x189, &mut x190, x188, x177, x51);
  let mut x191: u32 = 0;
  let mut x192: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x191, &mut x192, x190, x179, x49);
  let mut x193: u32 = 0;
  let mut x194: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x193, &mut x194, x192, x181, x47);
  let mut x195: u32 = 0;
  let mut x196: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x195, &mut x196, x194, x183, x45);
  let mut x197: u32 = 0;
  let mut x198: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x197, &mut x198, 0x0, x108, x57);
  let mut x199: u32 = 0;
  let mut x200: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x199, &mut x200, x198, x185, x58);
  let mut x201: u32 = 0;
  let mut x202: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x201, &mut x202, x200, x187, x56);
  let mut x203: u32 = 0;
  let mut x204: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x203, &mut x204, x202, x189, x54);
  let mut x205: u32 = 0;
  let mut x206: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x205, &mut x206, x204, x191, x52);
  let mut x207: u32 = 0;
  let mut x208: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x207, &mut x208, x206, x193, x50);
  let mut x209: u32 = 0;
  let mut x210: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x209, &mut x210, x208, x195, x48);
  let mut x211: u32 = 0;
  let mut x212: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x211, &mut x212, 0x0, x197, x71);
  let mut x213: u32 = 0;
  let mut x214: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x213, &mut x214, x212, x199, x69);
  let mut x215: u32 = 0;
  let mut x216: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x215, &mut x216, x214, x201, x67);
  let mut x217: u32 = 0;
  let mut x218: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x217, &mut x218, x216, x203, x65);
  let mut x219: u32 = 0;
  let mut x220: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x219, &mut x220, x218, x205, x63);
  let mut x221: u32 = 0;
  let mut x222: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x221, &mut x222, x220, x207, x61);
  let mut x223: u32 = 0;
  let mut x224: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x223, &mut x224, x222, x209, x59);
  let mut x225: u32 = 0;
  let mut x226: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x225, &mut x226, 0x0, x110, x73);
  let mut x227: u32 = 0;
  let mut x228: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x227, &mut x228, x226, x211, x74);
  let mut x229: u32 = 0;
  let mut x230: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x229, &mut x230, x228, x213, x72);
  let mut x231: u32 = 0;
  let mut x232: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x231, &mut x232, x230, x215, x70);
  let mut x233: u32 = 0;
  let mut x234: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x233, &mut x234, x232, x217, x68);
  let mut x235: u32 = 0;
  let mut x236: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x235, &mut x236, x234, x219, x66);
  let mut x237: u32 = 0;
  let mut x238: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x237, &mut x238, x236, x221, x64);
  let mut x239: u32 = 0;
  let mut x240: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x239, &mut x240, x238, x223, x62);
  let mut x241: u32 = 0;
  let mut x242: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x241, &mut x242, 0x0, x225, x89);
  let mut x243: u32 = 0;
  let mut x244: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x243, &mut x244, x242, x227, x87);
  let mut x245: u32 = 0;
  let mut x246: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x245, &mut x246, x244, x229, x85);
  let mut x247: u32 = 0;
  let mut x248: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x247, &mut x248, x246, x231, x83);
  let mut x249: u32 = 0;
  let mut x250: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x249, &mut x250, x248, x233, x81);
  let mut x251: u32 = 0;
  let mut x252: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x251, &mut x252, x250, x235, x79);
  let mut x253: u32 = 0;
  let mut x254: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x253, &mut x254, x252, x237, x77);
  let mut x255: u32 = 0;
  let mut x256: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x255, &mut x256, x254, x239, x75);
  let mut x257: u32 = 0;
  let mut x258: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x257, &mut x258, 0x0, x112, x91);
  let mut x259: u32 = 0;
  let mut x260: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x259, &mut x260, x258, x241, x92);
  let mut x261: u32 = 0;
  let mut x262: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x261, &mut x262, x260, x243, x90);
  let mut x263: u32 = 0;
  let mut x264: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x263, &mut x264, x262, x245, x88);
  let mut x265: u32 = 0;
  let mut x266: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x265, &mut x266, x264, x247, x86);
  let mut x267: u32 = 0;
  let mut x268: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x267, &mut x268, x266, x249, x84);
  let mut x269: u32 = 0;
  let mut x270: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x269, &mut x270, x268, x251, x82);
  let mut x271: u32 = 0;
  let mut x272: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x271, &mut x272, x270, x253, x80);
  let mut x273: u32 = 0;
  let mut x274: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x273, &mut x274, x272, x255, x78);
  let mut x275: u32 = 0;
  let mut x276: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x275, &mut x276, 0x0, x257, x109);
  let mut x277: u32 = 0;
  let mut x278: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x277, &mut x278, x276, x259, x107);
  let mut x279: u32 = 0;
  let mut x280: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x279, &mut x280, x278, x261, x105);
  let mut x281: u32 = 0;
  let mut x282: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x281, &mut x282, x280, x263, x103);
  let mut x283: u32 = 0;
  let mut x284: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x283, &mut x284, x282, x265, x101);
  let mut x285: u32 = 0;
  let mut x286: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x285, &mut x286, x284, x267, x99);
  let mut x287: u32 = 0;
  let mut x288: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x287, &mut x288, x286, x269, x97);
  let mut x289: u32 = 0;
  let mut x290: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x289, &mut x290, x288, x271, x95);
  let mut x291: u32 = 0;
  let mut x292: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x291, &mut x292, x290, x273, x93);
  let mut x293: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x293, (((arg2[8]) >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x294: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x294, ((arg4 >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x295: u32 = 0;
  let mut x296: u32 = 0;
  fiat_25519_mulx_u32(&mut x295, &mut x296, x294, (arg2[0]));
  let mut x297: u32 = 0;
  let mut x298: u32 = 0;
  fiat_25519_mulx_u32(&mut x297, &mut x298, x294, (arg2[1]));
  let mut x299: u32 = 0;
  let mut x300: u32 = 0;
  fiat_25519_mulx_u32(&mut x299, &mut x300, x294, (arg2[0]));
  let mut x301: u32 = 0;
  let mut x302: u32 = 0;
  fiat_25519_mulx_u32(&mut x301, &mut x302, x294, (arg2[2]));
  let mut x303: u32 = 0;
  let mut x304: u32 = 0;
  fiat_25519_mulx_u32(&mut x303, &mut x304, x294, (arg2[1]));
  let mut x305: u32 = 0;
  let mut x306: u32 = 0;
  fiat_25519_mulx_u32(&mut x305, &mut x306, x294, (arg2[0]));
  let mut x307: u32 = 0;
  let mut x308: u32 = 0;
  fiat_25519_mulx_u32(&mut x307, &mut x308, x294, (arg2[3]));
  let mut x309: u32 = 0;
  let mut x310: u32 = 0;
  fiat_25519_mulx_u32(&mut x309, &mut x310, x294, (arg2[2]));
  let mut x311: u32 = 0;
  let mut x312: u32 = 0;
  fiat_25519_mulx_u32(&mut x311, &mut x312, x294, (arg2[1]));
  let mut x313: u32 = 0;
  let mut x314: u32 = 0;
  fiat_25519_mulx_u32(&mut x313, &mut x314, x294, (arg2[0]));
  let mut x315: u32 = 0;
  let mut x316: u32 = 0;
  fiat_25519_mulx_u32(&mut x315, &mut x316, x294, (arg2[4]));
  let mut x317: u32 = 0;
  let mut x318: u32 = 0;
  fiat_25519_mulx_u32(&mut x317, &mut x318, x294, (arg2[3]));
  let mut x319: u32 = 0;
  let mut x320: u32 = 0;
  fiat_25519_mulx_u32(&mut x319, &mut x320, x294, (arg2[2]));
  let mut x321: u32 = 0;
  let mut x322: u32 = 0;
  fiat_25519_mulx_u32(&mut x321, &mut x322, x294, (arg2[1]));
  let mut x323: u32 = 0;
  let mut x324: u32 = 0;
  fiat_25519_mulx_u32(&mut x323, &mut x324, x294, (arg2[0]));
  let mut x325: u32 = 0;
  let mut x326: u32 = 0;
  fiat_25519_mulx_u32(&mut x325, &mut x326, x294, (arg2[5]));
  let mut x327: u32 = 0;
  let mut x328: u32 = 0;
  fiat_25519_mulx_u32(&mut x327, &mut x328, x294, (arg2[4]));
  let mut x329: u32 = 0;
  let mut x330: u32 = 0;
  fiat_25519_mulx_u32(&mut x329, &mut x330, x294, (arg2[3]));
  let mut x331: u32 = 0;
  let mut x332: u32 = 0;
  fiat_25519_mulx_u32(&mut x331, &mut x332, x294, (arg2[2]));
  let mut x333: u32 = 0;
  let mut x334: u32 = 0;
  fiat_25519_mulx_u32(&mut x333, &mut x334, x294, (arg2[1]));
  let mut x335: u32 = 0;
  let mut x336: u32 = 0;
  fiat_25519_mulx_u32(&mut x335, &mut x336, x294, (arg2[0]));
  let mut x337: u32 = 0;
  let mut x338: u32 = 0;
  fiat_25519_mulx_u32(&mut x337, &mut x338, x294, (arg2[6]));
  let mut x339: u32 = 0;
  let mut x340: u32 = 0;
  fiat_25519_mulx_u32(&mut x339, &mut x340, x294, (arg2[5]));
  let mut x341: u32 = 0;
  let mut x342: u32 = 0;
  fiat_25519_mulx_u32(&mut x341, &mut x342, x294, (arg2[4]));
  let mut x343: u32 = 0;
  let mut x344: u32 = 0;
  fiat_25519_mulx_u32(&mut x343, &mut x344, x294, (arg2[3]));
  let mut x345: u32 = 0;
  let mut x346: u32 = 0;
  fiat_25519_mulx_u32(&mut x345, &mut x346, x294, (arg2[2]));
  let mut x347: u32 = 0;
  let mut x348: u32 = 0;
  fiat_25519_mulx_u32(&mut x347, &mut x348, x294, (arg2[1]));
  let mut x349: u32 = 0;
  let mut x350: u32 = 0;
  fiat_25519_mulx_u32(&mut x349, &mut x350, x294, (arg2[0]));
  let mut x351: u32 = 0;
  let mut x352: u32 = 0;
  fiat_25519_mulx_u32(&mut x351, &mut x352, x294, (arg2[7]));
  let mut x353: u32 = 0;
  let mut x354: u32 = 0;
  fiat_25519_mulx_u32(&mut x353, &mut x354, x294, (arg2[6]));
  let mut x355: u32 = 0;
  let mut x356: u32 = 0;
  fiat_25519_mulx_u32(&mut x355, &mut x356, x294, (arg2[5]));
  let mut x357: u32 = 0;
  let mut x358: u32 = 0;
  fiat_25519_mulx_u32(&mut x357, &mut x358, x294, (arg2[4]));
  let mut x359: u32 = 0;
  let mut x360: u32 = 0;
  fiat_25519_mulx_u32(&mut x359, &mut x360, x294, (arg2[3]));
  let mut x361: u32 = 0;
  let mut x362: u32 = 0;
  fiat_25519_mulx_u32(&mut x361, &mut x362, x294, (arg2[2]));
  let mut x363: u32 = 0;
  let mut x364: u32 = 0;
  fiat_25519_mulx_u32(&mut x363, &mut x364, x294, (arg2[1]));
  let mut x365: u32 = 0;
  let mut x366: u32 = 0;
  fiat_25519_mulx_u32(&mut x365, &mut x366, x294, (arg2[0]));
  let mut x367: u32 = 0;
  let mut x368: u32 = 0;
  fiat_25519_mulx_u32(&mut x367, &mut x368, x294, (arg2[8]));
  let mut x369: u32 = 0;
  let mut x370: u32 = 0;
  fiat_25519_mulx_u32(&mut x369, &mut x370, x294, (arg2[7]));
  let mut x371: u32 = 0;
  let mut x372: u32 = 0;
  fiat_25519_mulx_u32(&mut x371, &mut x372, x294, (arg2[6]));
  let mut x373: u32 = 0;
  let mut x374: u32 = 0;
  fiat_25519_mulx_u32(&mut x373, &mut x374, x294, (arg2[5]));
  let mut x375: u32 = 0;
  let mut x376: u32 = 0;
  fiat_25519_mulx_u32(&mut x375, &mut x376, x294, (arg2[4]));
  let mut x377: u32 = 0;
  let mut x378: u32 = 0;
  fiat_25519_mulx_u32(&mut x377, &mut x378, x294, (arg2[3]));
  let mut x379: u32 = 0;
  let mut x380: u32 = 0;
  fiat_25519_mulx_u32(&mut x379, &mut x380, x294, (arg2[2]));
  let mut x381: u32 = 0;
  let mut x382: u32 = 0;
  fiat_25519_mulx_u32(&mut x381, &mut x382, x294, (arg2[1]));
  let mut x383: u32 = 0;
  let mut x384: u32 = 0;
  fiat_25519_mulx_u32(&mut x383, &mut x384, x294, (arg2[0]));
  let mut x385: u32 = 0;
  let mut x386: u32 = 0;
  fiat_25519_mulx_u32(&mut x385, &mut x386, arg4, x293);
  let mut x387: u32 = 0;
  let mut x388: u32 = 0;
  fiat_25519_mulx_u32(&mut x387, &mut x388, arg4, (arg2[8]));
  let mut x389: u32 = 0;
  let mut x390: u32 = 0;
  fiat_25519_mulx_u32(&mut x389, &mut x390, arg4, (arg2[7]));
  let mut x391: u32 = 0;
  let mut x392: u32 = 0;
  fiat_25519_mulx_u32(&mut x391, &mut x392, arg4, (arg2[6]));
  let mut x393: u32 = 0;
  let mut x394: u32 = 0;
  fiat_25519_mulx_u32(&mut x393, &mut x394, arg4, (arg2[5]));
  let mut x395: u32 = 0;
  let mut x396: u32 = 0;
  fiat_25519_mulx_u32(&mut x395, &mut x396, arg4, (arg2[4]));
  let mut x397: u32 = 0;
  let mut x398: u32 = 0;
  fiat_25519_mulx_u32(&mut x397, &mut x398, arg4, (arg2[3]));
  let mut x399: u32 = 0;
  let mut x400: u32 = 0;
  fiat_25519_mulx_u32(&mut x399, &mut x400, arg4, (arg2[2]));
  let mut x401: u32 = 0;
  let mut x402: u32 = 0;
  fiat_25519_mulx_u32(&mut x401, &mut x402, arg4, (arg2[1]));
  let mut x403: u32 = 0;
  let mut x404: u32 = 0;
  fiat_25519_mulx_u32(&mut x403, &mut x404, arg4, (arg2[0]));
  let mut x405: u32 = 0;
  let mut x406: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x405, &mut x406, 0x0, x388, x295);
  let mut x407: u32 = 0;
  let mut x408: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x407, &mut x408, 0x0, x405, x297);
  let mut x409: u32 = 0;
  let mut x410: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x409, &mut x410, 0x0, x390, x299);
  let mut x411: u32 = 0;
  let mut x412: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x411, &mut x412, x410, x407, x300);
  let mut x413: u32 = 0;
  let mut x414: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x413, &mut x414, 0x0, x409, x303);
  let mut x415: u32 = 0;
  let mut x416: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x415, &mut x416, x414, x411, x301);
  let mut x417: u32 = 0;
  let mut x418: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x417, &mut x418, 0x0, x392, x305);
  let mut x419: u32 = 0;
  let mut x420: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x419, &mut x420, x418, x413, x306);
  let mut x421: u32 = 0;
  let mut x422: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x421, &mut x422, x420, x415, x304);
  let mut x423: u32 = 0;
  let mut x424: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x423, &mut x424, 0x0, x417, x311);
  let mut x425: u32 = 0;
  let mut x426: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x425, &mut x426, x424, x419, x309);
  let mut x427: u32 = 0;
  let mut x428: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x427, &mut x428, x426, x421, x307);
  let mut x429: u32 = 0;
  let mut x430: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x429, &mut x430, 0x0, x394, x313);
  let mut x431: u32 = 0;
  let mut x432: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x431, &mut x432, x430, x423, x314);
  let mut x433: u32 = 0;
  let mut x434: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x433, &mut x434, x432, x425, x312);
  let mut x435: u32 = 0;
  let mut x436: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x435, &mut x436, x434, x427, x310);
  let mut x437: u32 = 0;
  let mut x438: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x437, &mut x438, 0x0, x429, x321);
  let mut x439: u32 = 0;
  let mut x440: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x439, &mut x440, x438, x431, x319);
  let mut x441: u32 = 0;
  let mut x442: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x441, &mut x442, x440, x433, x317);
  let mut x443: u32 = 0;
  let mut x444: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x443, &mut x444, x442, x435, x315);
  let mut x445: u32 = 0;
  let mut x446: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x445, &mut x446, 0x0, x396, x323);
  let mut x447: u32 = 0;
  let mut x448: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x447, &mut x448, x446, x437, x324);
  let mut x449: u32 = 0;
  let mut x450: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x449, &mut x450, x448, x439, x322);
  let mut x451: u32 = 0;
  let mut x452: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x451, &mut x452, x450, x441, x320);
  let mut x453: u32 = 0;
  let mut x454: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x453, &mut x454, x452, x443, x318);
  let mut x455: u32 = 0;
  let mut x456: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x455, &mut x456, 0x0, x445, x333);
  let mut x457: u32 = 0;
  let mut x458: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x457, &mut x458, x456, x447, x331);
  let mut x459: u32 = 0;
  let mut x460: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x459, &mut x460, x458, x449, x329);
  let mut x461: u32 = 0;
  let mut x462: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x461, &mut x462, x460, x451, x327);
  let mut x463: u32 = 0;
  let mut x464: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x463, &mut x464, x462, x453, x325);
  let mut x465: u32 = 0;
  let mut x466: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x465, &mut x466, 0x0, x398, x335);
  let mut x467: u32 = 0;
  let mut x468: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x467, &mut x468, x466, x455, x336);
  let mut x469: u32 = 0;
  let mut x470: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x469, &mut x470, x468, x457, x334);
  let mut x471: u32 = 0;
  let mut x472: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x471, &mut x472, x470, x459, x332);
  let mut x473: u32 = 0;
  let mut x474: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x473, &mut x474, x472, x461, x330);
  let mut x475: u32 = 0;
  let mut x476: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x475, &mut x476, x474, x463, x328);
  let mut x477: u32 = 0;
  let mut x478: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x477, &mut x478, 0x0, x465, x347);
  let mut x479: u32 = 0;
  let mut x480: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x479, &mut x480, x478, x467, x345);
  let mut x481: u32 = 0;
  let mut x482: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x481, &mut x482, x480, x469, x343);
  let mut x483: u32 = 0;
  let mut x484: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x483, &mut x484, x482, x471, x341);
  let mut x485: u32 = 0;
  let mut x486: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x485, &mut x486, x484, x473, x339);
  let mut x487: u32 = 0;
  let mut x488: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x487, &mut x488, x486, x475, x337);
  let mut x489: u32 = 0;
  let mut x490: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x489, &mut x490, 0x0, x400, x349);
  let mut x491: u32 = 0;
  let mut x492: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x491, &mut x492, x490, x477, x350);
  let mut x493: u32 = 0;
  let mut x494: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x493, &mut x494, x492, x479, x348);
  let mut x495: u32 = 0;
  let mut x496: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x495, &mut x496, x494, x481, x346);
  let mut x497: u32 = 0;
  let mut x498: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x497, &mut x498, x496, x483, x344);
  let mut x499: u32 = 0;
  let mut x500: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x499, &mut x500, x498, x485, x342);
  let mut x501: u32 = 0;
  let mut x502: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x501, &mut x502, x500, x487, x340);
  let mut x503: u32 = 0;
  let mut x504: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x503, &mut x504, 0x0, x489, x363);
  let mut x505: u32 = 0;
  let mut x506: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x505, &mut x506, x504, x491, x361);
  let mut x507: u32 = 0;
  let mut x508: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x507, &mut x508, x506, x493, x359);
  let mut x509: u32 = 0;
  let mut x510: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x509, &mut x510, x508, x495, x357);
  let mut x511: u32 = 0;
  let mut x512: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x511, &mut x512, x510, x497, x355);
  let mut x513: u32 = 0;
  let mut x514: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x513, &mut x514, x512, x499, x353);
  let mut x515: u32 = 0;
  let mut x516: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x515, &mut x516, x514, x501, x351);
  let mut x517: u32 = 0;
  let mut x518: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x517, &mut x518, 0x0, x402, x365);
  let mut x519: u32 = 0;
  let mut x520: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x519, &mut x520, x518, x503, x366);
  let mut x521: u32 = 0;
  let mut x522: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x521, &mut x522, x520, x505, x364);
  let mut x523: u32 = 0;
  let mut x524: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x523, &mut x524, x522, x507, x362);
  let mut x525: u32 = 0;
  let mut x526: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x525, &mut x526, x524, x509, x360);
  let mut x527: u32 = 0;
  let mut x528: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x527, &mut x528, x526, x511, x358);
  let mut x529: u32 = 0;
  let mut x530: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x529, &mut x530, x528, x513, x356);
  let mut x531: u32 = 0;
  let mut x532: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x531, &mut x532, x530, x515, x354);
  let mut x533: u32 = 0;
  let mut x534: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x533, &mut x534, 0x0, x517, x381);
  let mut x535: u32 = 0;
  let mut x536: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x535, &mut x536, x534, x519, x379);
  let mut x537: u32 = 0;
  let mut x538: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x537, &mut x538, x536, x521, x377);
  let mut x539: u32 = 0;
  let mut x540: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x539, &mut x540, x538, x523, x375);
  let mut x541: u32 = 0;
  let mut x542: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x541, &mut x542, x540, x525, x373);
  let mut x543: u32 = 0;
  let mut x544: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x543, &mut x544, x542, x527, x371);
  let mut x545: u32 = 0;
  let mut x546: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x545, &mut x546, x544, x529, x369);
  let mut x547: u32 = 0;
  let mut x548: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x547, &mut x548, x546, x531, x367);
  let mut x549: u32 = 0;
  let mut x550: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x549, &mut x550, 0x0, x404, x383);
  let mut x551: u32 = 0;
  let mut x552: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x551, &mut x552, x550, x533, x384);
  let mut x553: u32 = 0;
  let mut x554: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x553, &mut x554, x552, x535, x382);
  let mut x555: u32 = 0;
  let mut x556: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x555, &mut x556, x554, x537, x380);
  let mut x557: u32 = 0;
  let mut x558: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x557, &mut x558, x556, x539, x378);
  let mut x559: u32 = 0;
  let mut x560: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x559, &mut x560, x558, x541, x376);
  let mut x561: u32 = 0;
  let mut x562: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x561, &mut x562, x560, x543, x374);
  let mut x563: u32 = 0;
  let mut x564: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x563, &mut x564, x562, x545, x372);
  let mut x565: u32 = 0;
  let mut x566: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x565, &mut x566, x564, x547, x370);
  let mut x567: u32 = 0;
  let mut x568: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x567, &mut x568, 0x0, x549, x401);
  let mut x569: u32 = 0;
  let mut x570: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x569, &mut x570, x568, x551, x399);
  let mut x571: u32 = 0;
  let mut x572: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x571, &mut x572, x570, x553, x397);
  let mut x573: u32 = 0;
  let mut x574: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x573, &mut x574, x572, x555, x395);
  let mut x575: u32 = 0;
  let mut x576: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x575, &mut x576, x574, x557, x393);
  let mut x577: u32 = 0;
  let mut x578: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x577, &mut x578, x576, x559, x391);
  let mut x579: u32 = 0;
  let mut x580: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x579, &mut x580, x578, x561, x389);
  let mut x581: u32 = 0;
  let mut x582: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x581, &mut x582, x580, x563, x387);
  let mut x583: u32 = 0;
  let mut x584: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x583, &mut x584, x582, x565, x385);
  let mut x585: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x585, (((arg1[8]) >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x586: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x586, ((arg5 >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x587: u32 = 0;
  let mut x588: u32 = 0;
  fiat_25519_mulx_u32(&mut x587, &mut x588, x586, (arg1[0]));
  let mut x589: u32 = 0;
  let mut x590: u32 = 0;
  fiat_25519_mulx_u32(&mut x589, &mut x590, x586, (arg1[1]));
  let mut x591: u32 = 0;
  let mut x592: u32 = 0;
  fiat_25519_mulx_u32(&mut x591, &mut x592, x586, (arg1[0]));
  let mut x593: u32 = 0;
  let mut x594: u32 = 0;
  fiat_25519_mulx_u32(&mut x593, &mut x594, x586, (arg1[2]));
  let mut x595: u32 = 0;
  let mut x596: u32 = 0;
  fiat_25519_mulx_u32(&mut x595, &mut x596, x586, (arg1[1]));
  let mut x597: u32 = 0;
  let mut x598: u32 = 0;
  fiat_25519_mulx_u32(&mut x597, &mut x598, x586, (arg1[0]));
  let mut x599: u32 = 0;
  let mut x600: u32 = 0;
  fiat_25519_mulx_u32(&mut x599, &mut x600, x586, (arg1[3]));
  let mut x601: u32 = 0;
  let mut x602: u32 = 0;
  fiat_25519_mulx_u32(&mut x601, &mut x602, x586, (arg1[2]));
  let mut x603: u32 = 0;
  let mut x604: u32 = 0;
  fiat_25519_mulx_u32(&mut x603, &mut x604, x586, (arg1[1]));
  let mut x605: u32 = 0;
  let mut x606: u32 = 0;
  fiat_25519_mulx_u32(&mut x605, &mut x606, x586, (arg1[0]));
  let mut x607: u32 = 0;
  let mut x608: u32 = 0;
  fiat_25519_mulx_u32(&mut x607, &mut x608, x586, (arg1[4]));
  let mut x609: u32 = 0;
  let mut x610: u32 = 0;
  fiat_25519_mulx_u32(&mut x609, &mut x610, x586, (arg1[3]));
  let mut x611: u32 = 0;
  let mut x612: u32 = 0;
  fiat_25519_mulx_u32(&mut x611, &mut x612, x586, (arg1[2]));
  let mut x613: u32 = 0;
  let mut x614: u32 = 0;
  fiat_25519_mulx_u32(&mut x613, &mut x614, x586, (arg1[1]));
  let mut x615: u32 = 0;
  let mut x616: u32 = 0;
  fiat_25519_mulx_u32(&mut x615, &mut x616, x586, (arg1[0]));
  let mut x617: u32 = 0;
  let mut x618: u32 = 0;
  fiat_25519_mulx_u32(&mut x617, &mut x618, x586, (arg1[5]));
  let mut x619: u32 = 0;
  let mut x620: u32 = 0;
  fiat_25519_mulx_u32(&mut x619, &mut x620, x586, (arg1[4]));
  let mut x621: u32 = 0;
  let mut x622: u32 = 0;
  fiat_25519_mulx_u32(&mut x621, &mut x622, x586, (arg1[3]));
  let mut x623: u32 = 0;
  let mut x624: u32 = 0;
  fiat_25519_mulx_u32(&mut x623, &mut x624, x586, (arg1[2]));
  let mut x625: u32 = 0;
  let mut x626: u32 = 0;
  fiat_25519_mulx_u32(&mut x625, &mut x626, x586, (arg1[1]));
  let mut x627: u32 = 0;
  let mut x628: u32 = 0;
  fiat_25519_mulx_u32(&mut x627, &mut x628, x586, (arg1[0]));
  let mut x629: u32 = 0;
  let mut x630: u32 = 0;
  fiat_25519_mulx_u32(&mut x629, &mut x630, x586, (arg1[6]));
  let mut x631: u32 = 0;
  let mut x632: u32 = 0;
  fiat_25519_mulx_u32(&mut x631, &mut x632, x586, (arg1[5]));
  let mut x633: u32 = 0;
  let mut x634: u32 = 0;
  fiat_25519_mulx_u32(&mut x633, &mut x634, x586, (arg1[4]));
  let mut x635: u32 = 0;
  let mut x636: u32 = 0;
  fiat_25519_mulx_u32(&mut x635, &mut x636, x586, (arg1[3]));
  let mut x637: u32 = 0;
  let mut x638: u32 = 0;
  fiat_25519_mulx_u32(&mut x637, &mut x638, x586, (arg1[2]));
  let mut x639: u32 = 0;
  let mut x640: u32 = 0;
  fiat_25519_mulx_u32(&mut x639, &mut x640, x586, (arg1[1]));
  let mut x641: u32 = 0;
  let mut x642: u32 = 0;
  fiat_25519_mulx_u32(&mut x641, &mut x642, x586, (arg1[0]));
  let mut x643: u32 = 0;
  let mut x644: u32 = 0;
  fiat_25519_mulx_u32(&mut x643, &mut x644, x586, (arg1[7]));
  let mut x645: u32 = 0;
  let mut x646: u32 = 0;
  fiat_25519_mulx_u32(&mut x645, &mut x646, x586, (arg1[6]));
  let mut x647: u32 = 0;
  let mut x648: u32 = 0;
  fiat_25519_mulx_u32(&mut x647, &mut x648, x586, (arg1[5]));
  let mut x649: u32 = 0;
  let mut x650: u32 = 0;
  fiat_25519_mulx_u32(&mut x649, &mut x650, x586, (arg1[4]));
  let mut x651: u32 = 0;
  let mut x652: u32 = 0;
  fiat_25519_mulx_u32(&mut x651, &mut x652, x586, (arg1[3]));
  let mut x653: u32 = 0;
  let mut x654: u32 = 0;
  fiat_25519_mulx_u32(&mut x653, &mut x654, x586, (arg1[2]));
  let mut x655: u32 = 0;
  let mut x656: u32 = 0;
  fiat_25519_mulx_u32(&mut x655, &mut x656, x586, (arg1[1]));
  let mut x657: u32 = 0;
  let mut x658: u32 = 0;
  fiat_25519_mulx_u32(&mut x657, &mut x658, x586, (arg1[0]));
  let mut x659: u32 = 0;
  let mut x660: u32 = 0;
  fiat_25519_mulx_u32(&mut x659, &mut x660, x586, (arg1[8]));
  let mut x661: u32 = 0;
  let mut x662: u32 = 0;
  fiat_25519_mulx_u32(&mut x661, &mut x662, x586, (arg1[7]));
  let mut x663: u32 = 0;
  let mut x664: u32 = 0;
  fiat_25519_mulx_u32(&mut x663, &mut x664, x586, (arg1[6]));
  let mut x665: u32 = 0;
  let mut x666: u32 = 0;
  fiat_25519_mulx_u32(&mut x665, &mut x666, x586, (arg1[5]));
  let mut x667: u32 = 0;
  let mut x668: u32 = 0;
  fiat_25519_mulx_u32(&mut x667, &mut x668, x586, (arg1[4]));
  let mut x669: u32 = 0;
  let mut x670: u32 = 0;
  fiat_25519_mulx_u32(&mut x669, &mut x670, x586, (arg1[3]));
  let mut x671: u32 = 0;
  let mut x672: u32 = 0;
  fiat_25519_mulx_u32(&mut x671, &mut x672, x586, (arg1[2]));
  let mut x673: u32 = 0;
  let mut x674: u32 = 0;
  fiat_25519_mulx_u32(&mut x673, &mut x674, x586, (arg1[1]));
  let mut x675: u32 = 0;
  let mut x676: u32 = 0;
  fiat_25519_mulx_u32(&mut x675, &mut x676, x586, (arg1[0]));
  let mut x677: u32 = 0;
  let mut x678: u32 = 0;
  fiat_25519_mulx_u32(&mut x677, &mut x678, arg5, x585);
  let mut x679: u32 = 0;
  let mut x680: u32 = 0;
  fiat_25519_mulx_u32(&mut x679, &mut x680, arg5, (arg1[8]));
  let mut x681: u32 = 0;
  let mut x682: u32 = 0;
  fiat_25519_mulx_u32(&mut x681, &mut x682, arg5, (arg1[7]));
  let mut x683: u32 = 0;
  let mut x684: u32 = 0;
  fiat_25519_mulx_u32(&mut x683, &mut x684, arg5, (arg1[6]));
  let mut x685: u32 = 0;
  let mut x686: u32 = 0;
  fiat_25519_mulx_u32(&mut x685, &mut x686, arg5, (arg1[5]));
  let mut x687: u32 = 0;
  let mut x688: u32 = 0;
  fiat_25519_mulx_u32(&mut x687, &mut x688, arg5, (arg1[4]));
  let mut x689: u32 = 0;
  let mut x690: u32 = 0;
  fiat_25519_mulx_u32(&mut x689, &mut x690, arg5, (arg1[3]));
  let mut x691: u32 = 0;
  let mut x692: u32 = 0;
  fiat_25519_mulx_u32(&mut x691, &mut x692, arg5, (arg1[2]));
  let mut x693: u32 = 0;
  let mut x694: u32 = 0;
  fiat_25519_mulx_u32(&mut x693, &mut x694, arg5, (arg1[1]));
  let mut x695: u32 = 0;
  let mut x696: u32 = 0;
  fiat_25519_mulx_u32(&mut x695, &mut x696, arg5, (arg1[0]));
  let mut x697: u32 = 0;
  let mut x698: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x697, &mut x698, 0x0, x680, x587);
  let mut x699: u32 = 0;
  let mut x700: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x699, &mut x700, 0x0, x697, x589);
  let mut x701: u32 = 0;
  let mut x702: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x701, &mut x702, 0x0, x682, x591);
  let mut x703: u32 = 0;
  let mut x704: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x703, &mut x704, x702, x699, x592);
  let mut x705: u32 = 0;
  let mut x706: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x705, &mut x706, 0x0, x701, x595);
  let mut x707: u32 = 0;
  let mut x708: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x707, &mut x708, x706, x703, x593);
  let mut x709: u32 = 0;
  let mut x710: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x709, &mut x710, 0x0, x684, x597);
  let mut x711: u32 = 0;
  let mut x712: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x711, &mut x712, x710, x705, x598);
  let mut x713: u32 = 0;
  let mut x714: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x713, &mut x714, x712, x707, x596);
  let mut x715: u32 = 0;
  let mut x716: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x715, &mut x716, 0x0, x709, x603);
  let mut x717: u32 = 0;
  let mut x718: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x717, &mut x718, x716, x711, x601);
  let mut x719: u32 = 0;
  let mut x720: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x719, &mut x720, x718, x713, x599);
  let mut x721: u32 = 0;
  let mut x722: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x721, &mut x722, 0x0, x686, x605);
  let mut x723: u32 = 0;
  let mut x724: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x723, &mut x724, x722, x715, x606);
  let mut x725: u32 = 0;
  let mut x726: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x725, &mut x726, x724, x717, x604);
  let mut x727: u32 = 0;
  let mut x728: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x727, &mut x728, x726, x719, x602);
  let mut x729: u32 = 0;
  let mut x730: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x729, &mut x730, 0x0, x721, x613);
  let mut x731: u32 = 0;
  let mut x732: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x731, &mut x732, x730, x723, x611);
  let mut x733: u32 = 0;
  let mut x734: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x733, &mut x734, x732, x725, x609);
  let mut x735: u32 = 0;
  let mut x736: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x735, &mut x736, x734, x727, x607);
  let mut x737: u32 = 0;
  let mut x738: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x737, &mut x738, 0x0, x688, x615);
  let mut x739: u32 = 0;
  let mut x740: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x739, &mut x740, x738, x729, x616);
  let mut x741: u32 = 0;
  let mut x742: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x741, &mut x742, x740, x731, x614);
  let mut x743: u32 = 0;
  let mut x744: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x743, &mut x744, x742, x733, x612);
  let mut x745: u32 = 0;
  let mut x746: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x745, &mut x746, x744, x735, x610);
  let mut x747: u32 = 0;
  let mut x748: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x747, &mut x748, 0x0, x737, x625);
  let mut x749: u32 = 0;
  let mut x750: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x749, &mut x750, x748, x739, x623);
  let mut x751: u32 = 0;
  let mut x752: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x751, &mut x752, x750, x741, x621);
  let mut x753: u32 = 0;
  let mut x754: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x753, &mut x754, x752, x743, x619);
  let mut x755: u32 = 0;
  let mut x756: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x755, &mut x756, x754, x745, x617);
  let mut x757: u32 = 0;
  let mut x758: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x757, &mut x758, 0x0, x690, x627);
  let mut x759: u32 = 0;
  let mut x760: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x759, &mut x760, x758, x747, x628);
  let mut x761: u32 = 0;
  let mut x762: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x761, &mut x762, x760, x749, x626);
  let mut x763: u32 = 0;
  let mut x764: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x763, &mut x764, x762, x751, x624);
  let mut x765: u32 = 0;
  let mut x766: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x765, &mut x766, x764, x753, x622);
  let mut x767: u32 = 0;
  let mut x768: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x767, &mut x768, x766, x755, x620);
  let mut x769: u32 = 0;
  let mut x770: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x769, &mut x770, 0x0, x757, x639);
  let mut x771: u32 = 0;
  let mut x772: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x771, &mut x772, x770, x759, x637);
  let mut x773: u32 = 0;
  let mut x774: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x773, &mut x774, x772, x761, x635);
  let mut x775: u32 = 0;
  let mut x776: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x775, &mut x776, x774, x763, x633);
  let mut x777: u32 = 0;
  let mut x778: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x777, &mut x778, x776, x765, x631);
  let mut x779: u32 = 0;
  let mut x780: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x779, &mut x780, x778, x767, x629);
  let mut x781: u32 = 0;
  let mut x782: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x781, &mut x782, 0x0, x692, x641);
  let mut x783: u32 = 0;
  let mut x784: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x783, &mut x784, x782, x769, x642);
  let mut x785: u32 = 0;
  let mut x786: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x785, &mut x786, x784, x771, x640);
  let mut x787: u32 = 0;
  let mut x788: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x787, &mut x788, x786, x773, x638);
  let mut x789: u32 = 0;
  let mut x790: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x789, &mut x790, x788, x775, x636);
  let mut x791: u32 = 0;
  let mut x792: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x791, &mut x792, x790, x777, x634);
  let mut x793: u32 = 0;
  let mut x794: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x793, &mut x794, x792, x779, x632);
  let mut x795: u32 = 0;
  let mut x796: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x795, &mut x796, 0x0, x781, x655);
  let mut x797: u32 = 0;
  let mut x798: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x797, &mut x798, x796, x783, x653);
  let mut x799: u32 = 0;
  let mut x800: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x799, &mut x800, x798, x785, x651);
  let mut x801: u32 = 0;
  let mut x802: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x801, &mut x802, x800, x787, x649);
  let mut x803: u32 = 0;
  let mut x804: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x803, &mut x804, x802, x789, x647);
  let mut x805: u32 = 0;
  let mut x806: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x805, &mut x806, x804, x791, x645);
  let mut x807: u32 = 0;
  let mut x808: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x807, &mut x808, x806, x793, x643);
  let mut x809: u32 = 0;
  let mut x810: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x809, &mut x810, 0x0, x694, x657);
  let mut x811: u32 = 0;
  let mut x812: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x811, &mut x812, x810, x795, x658);
  let mut x813: u32 = 0;
  let mut x814: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x813, &mut x814, x812, x797, x656);
  let mut x815: u32 = 0;
  let mut x816: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x815, &mut x816, x814, x799, x654);
  let mut x817: u32 = 0;
  let mut x818: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x817, &mut x818, x816, x801, x652);
  let mut x819: u32 = 0;
  let mut x820: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x819, &mut x820, x818, x803, x650);
  let mut x821: u32 = 0;
  let mut x822: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x821, &mut x822, x820, x805, x648);
  let mut x823: u32 = 0;
  let mut x824: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x823, &mut x824, x822, x807, x646);
  let mut x825: u32 = 0;
  let mut x826: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x825, &mut x826, 0x0, x809, x673);
  let mut x827: u32 = 0;
  let mut x828: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x827, &mut x828, x826, x811, x671);
  let mut x829: u32 = 0;
  let mut x830: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x829, &mut x830, x828, x813, x669);
  let mut x831: u32 = 0;
  let mut x832: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x831, &mut x832, x830, x815, x667);
  let mut x833: u32 = 0;
  let mut x834: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x833, &mut x834, x832, x817, x665);
  let mut x835: u32 = 0;
  let mut x836: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x835, &mut x836, x834, x819, x663);
  let mut x837: u32 = 0;
  let mut x838: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x837, &mut x838, x836, x821, x661);
  let mut x839: u32 = 0;
  let mut x840: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x839, &mut x840, x838, x823, x659);
  let mut x841: u32 = 0;
  let mut x842: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x841, &mut x842, 0x0, x696, x675);
  let mut x843: u32 = 0;
  let mut x844: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x843, &mut x844, x842, x825, x676);
  let mut x845: u32 = 0;
  let mut x846: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x845, &mut x846, x844, x827, x674);
  let mut x847: u32 = 0;
  let mut x848: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x847, &mut x848, x846, x829, x672);
  let mut x849: u32 = 0;
  let mut x850: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x849, &mut x850, x848, x831, x670);
  let mut x851: u32 = 0;
  let mut x852: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x851, &mut x852, x850, x833, x668);
  let mut x853: u32 = 0;
  let mut x854: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x853, &mut x854, x852, x835, x666);
  let mut x855: u32 = 0;
  let mut x856: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x855, &mut x856, x854, x837, x664);
  let mut x857: u32 = 0;
  let mut x858: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x857, &mut x858, x856, x839, x662);
  let mut x859: u32 = 0;
  let mut x860: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x859, &mut x860, 0x0, x841, x693);
  let mut x861: u32 = 0;
  let mut x862: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x861, &mut x862, x860, x843, x691);
  let mut x863: u32 = 0;
  let mut x864: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x863, &mut x864, x862, x845, x689);
  let mut x865: u32 = 0;
  let mut x866: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x865, &mut x866, x864, x847, x687);
  let mut x867: u32 = 0;
  let mut x868: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x867, &mut x868, x866, x849, x685);
  let mut x869: u32 = 0;
  let mut x870: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x869, &mut x870, x868, x851, x683);
  let mut x871: u32 = 0;
  let mut x872: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x871, &mut x872, x870, x853, x681);
  let mut x873: u32 = 0;
  let mut x874: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x873, &mut x874, x872, x855, x679);
  let mut x875: u32 = 0;
  let mut x876: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x875, &mut x876, x874, x857, x677);
  let mut x877: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x877, (((arg2[8]) >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x878: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x878, ((arg6 >> 31) as fiat_25519_u1), (0x0 as u32), 0xffffffff);
  let mut x879: u32 = 0;
  let mut x880: u32 = 0;
  fiat_25519_mulx_u32(&mut x879, &mut x880, x878, (arg2[0]));
  let mut x881: u32 = 0;
  let mut x882: u32 = 0;
  fiat_25519_mulx_u32(&mut x881, &mut x882, x878, (arg2[1]));
  let mut x883: u32 = 0;
  let mut x884: u32 = 0;
  fiat_25519_mulx_u32(&mut x883, &mut x884, x878, (arg2[0]));
  let mut x885: u32 = 0;
  let mut x886: u32 = 0;
  fiat_25519_mulx_u32(&mut x885, &mut x886, x878, (arg2[2]));
  let mut x887: u32 = 0;
  let mut x888: u32 = 0;
  fiat_25519_mulx_u32(&mut x887, &mut x888, x878, (arg2[1]));
  let mut x889: u32 = 0;
  let mut x890: u32 = 0;
  fiat_25519_mulx_u32(&mut x889, &mut x890, x878, (arg2[0]));
  let mut x891: u32 = 0;
  let mut x892: u32 = 0;
  fiat_25519_mulx_u32(&mut x891, &mut x892, x878, (arg2[3]));
  let mut x893: u32 = 0;
  let mut x894: u32 = 0;
  fiat_25519_mulx_u32(&mut x893, &mut x894, x878, (arg2[2]));
  let mut x895: u32 = 0;
  let mut x896: u32 = 0;
  fiat_25519_mulx_u32(&mut x895, &mut x896, x878, (arg2[1]));
  let mut x897: u32 = 0;
  let mut x898: u32 = 0;
  fiat_25519_mulx_u32(&mut x897, &mut x898, x878, (arg2[0]));
  let mut x899: u32 = 0;
  let mut x900: u32 = 0;
  fiat_25519_mulx_u32(&mut x899, &mut x900, x878, (arg2[4]));
  let mut x901: u32 = 0;
  let mut x902: u32 = 0;
  fiat_25519_mulx_u32(&mut x901, &mut x902, x878, (arg2[3]));
  let mut x903: u32 = 0;
  let mut x904: u32 = 0;
  fiat_25519_mulx_u32(&mut x903, &mut x904, x878, (arg2[2]));
  let mut x905: u32 = 0;
  let mut x906: u32 = 0;
  fiat_25519_mulx_u32(&mut x905, &mut x906, x878, (arg2[1]));
  let mut x907: u32 = 0;
  let mut x908: u32 = 0;
  fiat_25519_mulx_u32(&mut x907, &mut x908, x878, (arg2[0]));
  let mut x909: u32 = 0;
  let mut x910: u32 = 0;
  fiat_25519_mulx_u32(&mut x909, &mut x910, x878, (arg2[5]));
  let mut x911: u32 = 0;
  let mut x912: u32 = 0;
  fiat_25519_mulx_u32(&mut x911, &mut x912, x878, (arg2[4]));
  let mut x913: u32 = 0;
  let mut x914: u32 = 0;
  fiat_25519_mulx_u32(&mut x913, &mut x914, x878, (arg2[3]));
  let mut x915: u32 = 0;
  let mut x916: u32 = 0;
  fiat_25519_mulx_u32(&mut x915, &mut x916, x878, (arg2[2]));
  let mut x917: u32 = 0;
  let mut x918: u32 = 0;
  fiat_25519_mulx_u32(&mut x917, &mut x918, x878, (arg2[1]));
  let mut x919: u32 = 0;
  let mut x920: u32 = 0;
  fiat_25519_mulx_u32(&mut x919, &mut x920, x878, (arg2[0]));
  let mut x921: u32 = 0;
  let mut x922: u32 = 0;
  fiat_25519_mulx_u32(&mut x921, &mut x922, x878, (arg2[6]));
  let mut x923: u32 = 0;
  let mut x924: u32 = 0;
  fiat_25519_mulx_u32(&mut x923, &mut x924, x878, (arg2[5]));
  let mut x925: u32 = 0;
  let mut x926: u32 = 0;
  fiat_25519_mulx_u32(&mut x925, &mut x926, x878, (arg2[4]));
  let mut x927: u32 = 0;
  let mut x928: u32 = 0;
  fiat_25519_mulx_u32(&mut x927, &mut x928, x878, (arg2[3]));
  let mut x929: u32 = 0;
  let mut x930: u32 = 0;
  fiat_25519_mulx_u32(&mut x929, &mut x930, x878, (arg2[2]));
  let mut x931: u32 = 0;
  let mut x932: u32 = 0;
  fiat_25519_mulx_u32(&mut x931, &mut x932, x878, (arg2[1]));
  let mut x933: u32 = 0;
  let mut x934: u32 = 0;
  fiat_25519_mulx_u32(&mut x933, &mut x934, x878, (arg2[0]));
  let mut x935: u32 = 0;
  let mut x936: u32 = 0;
  fiat_25519_mulx_u32(&mut x935, &mut x936, x878, (arg2[7]));
  let mut x937: u32 = 0;
  let mut x938: u32 = 0;
  fiat_25519_mulx_u32(&mut x937, &mut x938, x878, (arg2[6]));
  let mut x939: u32 = 0;
  let mut x940: u32 = 0;
  fiat_25519_mulx_u32(&mut x939, &mut x940, x878, (arg2[5]));
  let mut x941: u32 = 0;
  let mut x942: u32 = 0;
  fiat_25519_mulx_u32(&mut x941, &mut x942, x878, (arg2[4]));
  let mut x943: u32 = 0;
  let mut x944: u32 = 0;
  fiat_25519_mulx_u32(&mut x943, &mut x944, x878, (arg2[3]));
  let mut x945: u32 = 0;
  let mut x946: u32 = 0;
  fiat_25519_mulx_u32(&mut x945, &mut x946, x878, (arg2[2]));
  let mut x947: u32 = 0;
  let mut x948: u32 = 0;
  fiat_25519_mulx_u32(&mut x947, &mut x948, x878, (arg2[1]));
  let mut x949: u32 = 0;
  let mut x950: u32 = 0;
  fiat_25519_mulx_u32(&mut x949, &mut x950, x878, (arg2[0]));
  let mut x951: u32 = 0;
  let mut x952: u32 = 0;
  fiat_25519_mulx_u32(&mut x951, &mut x952, x878, (arg2[8]));
  let mut x953: u32 = 0;
  let mut x954: u32 = 0;
  fiat_25519_mulx_u32(&mut x953, &mut x954, x878, (arg2[7]));
  let mut x955: u32 = 0;
  let mut x956: u32 = 0;
  fiat_25519_mulx_u32(&mut x955, &mut x956, x878, (arg2[6]));
  let mut x957: u32 = 0;
  let mut x958: u32 = 0;
  fiat_25519_mulx_u32(&mut x957, &mut x958, x878, (arg2[5]));
  let mut x959: u32 = 0;
  let mut x960: u32 = 0;
  fiat_25519_mulx_u32(&mut x959, &mut x960, x878, (arg2[4]));
  let mut x961: u32 = 0;
  let mut x962: u32 = 0;
  fiat_25519_mulx_u32(&mut x961, &mut x962, x878, (arg2[3]));
  let mut x963: u32 = 0;
  let mut x964: u32 = 0;
  fiat_25519_mulx_u32(&mut x963, &mut x964, x878, (arg2[2]));
  let mut x965: u32 = 0;
  let mut x966: u32 = 0;
  fiat_25519_mulx_u32(&mut x965, &mut x966, x878, (arg2[1]));
  let mut x967: u32 = 0;
  let mut x968: u32 = 0;
  fiat_25519_mulx_u32(&mut x967, &mut x968, x878, (arg2[0]));
  let mut x969: u32 = 0;
  let mut x970: u32 = 0;
  fiat_25519_mulx_u32(&mut x969, &mut x970, arg6, x877);
  let mut x971: u32 = 0;
  let mut x972: u32 = 0;
  fiat_25519_mulx_u32(&mut x971, &mut x972, arg6, (arg2[8]));
  let mut x973: u32 = 0;
  let mut x974: u32 = 0;
  fiat_25519_mulx_u32(&mut x973, &mut x974, arg6, (arg2[7]));
  let mut x975: u32 = 0;
  let mut x976: u32 = 0;
  fiat_25519_mulx_u32(&mut x975, &mut x976, arg6, (arg2[6]));
  let mut x977: u32 = 0;
  let mut x978: u32 = 0;
  fiat_25519_mulx_u32(&mut x977, &mut x978, arg6, (arg2[5]));
  let mut x979: u32 = 0;
  let mut x980: u32 = 0;
  fiat_25519_mulx_u32(&mut x979, &mut x980, arg6, (arg2[4]));
  let mut x981: u32 = 0;
  let mut x982: u32 = 0;
  fiat_25519_mulx_u32(&mut x981, &mut x982, arg6, (arg2[3]));
  let mut x983: u32 = 0;
  let mut x984: u32 = 0;
  fiat_25519_mulx_u32(&mut x983, &mut x984, arg6, (arg2[2]));
  let mut x985: u32 = 0;
  let mut x986: u32 = 0;
  fiat_25519_mulx_u32(&mut x985, &mut x986, arg6, (arg2[1]));
  let mut x987: u32 = 0;
  let mut x988: u32 = 0;
  fiat_25519_mulx_u32(&mut x987, &mut x988, arg6, (arg2[0]));
  let mut x989: u32 = 0;
  let mut x990: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x989, &mut x990, 0x0, x972, x879);
  let mut x991: u32 = 0;
  let mut x992: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x991, &mut x992, 0x0, x989, x881);
  let mut x993: u32 = 0;
  let mut x994: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x993, &mut x994, 0x0, x974, x883);
  let mut x995: u32 = 0;
  let mut x996: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x995, &mut x996, x994, x991, x884);
  let mut x997: u32 = 0;
  let mut x998: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x997, &mut x998, 0x0, x993, x887);
  let mut x999: u32 = 0;
  let mut x1000: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x999, &mut x1000, x998, x995, x885);
  let mut x1001: u32 = 0;
  let mut x1002: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1001, &mut x1002, 0x0, x976, x889);
  let mut x1003: u32 = 0;
  let mut x1004: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1003, &mut x1004, x1002, x997, x890);
  let mut x1005: u32 = 0;
  let mut x1006: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1005, &mut x1006, x1004, x999, x888);
  let mut x1007: u32 = 0;
  let mut x1008: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1007, &mut x1008, 0x0, x1001, x895);
  let mut x1009: u32 = 0;
  let mut x1010: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1009, &mut x1010, x1008, x1003, x893);
  let mut x1011: u32 = 0;
  let mut x1012: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1011, &mut x1012, x1010, x1005, x891);
  let mut x1013: u32 = 0;
  let mut x1014: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1013, &mut x1014, 0x0, x978, x897);
  let mut x1015: u32 = 0;
  let mut x1016: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1015, &mut x1016, x1014, x1007, x898);
  let mut x1017: u32 = 0;
  let mut x1018: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1017, &mut x1018, x1016, x1009, x896);
  let mut x1019: u32 = 0;
  let mut x1020: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1019, &mut x1020, x1018, x1011, x894);
  let mut x1021: u32 = 0;
  let mut x1022: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1021, &mut x1022, 0x0, x1013, x905);
  let mut x1023: u32 = 0;
  let mut x1024: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1023, &mut x1024, x1022, x1015, x903);
  let mut x1025: u32 = 0;
  let mut x1026: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1025, &mut x1026, x1024, x1017, x901);
  let mut x1027: u32 = 0;
  let mut x1028: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1027, &mut x1028, x1026, x1019, x899);
  let mut x1029: u32 = 0;
  let mut x1030: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1029, &mut x1030, 0x0, x980, x907);
  let mut x1031: u32 = 0;
  let mut x1032: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1031, &mut x1032, x1030, x1021, x908);
  let mut x1033: u32 = 0;
  let mut x1034: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1033, &mut x1034, x1032, x1023, x906);
  let mut x1035: u32 = 0;
  let mut x1036: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1035, &mut x1036, x1034, x1025, x904);
  let mut x1037: u32 = 0;
  let mut x1038: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1037, &mut x1038, x1036, x1027, x902);
  let mut x1039: u32 = 0;
  let mut x1040: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1039, &mut x1040, 0x0, x1029, x917);
  let mut x1041: u32 = 0;
  let mut x1042: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1041, &mut x1042, x1040, x1031, x915);
  let mut x1043: u32 = 0;
  let mut x1044: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1043, &mut x1044, x1042, x1033, x913);
  let mut x1045: u32 = 0;
  let mut x1046: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1045, &mut x1046, x1044, x1035, x911);
  let mut x1047: u32 = 0;
  let mut x1048: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1047, &mut x1048, x1046, x1037, x909);
  let mut x1049: u32 = 0;
  let mut x1050: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1049, &mut x1050, 0x0, x982, x919);
  let mut x1051: u32 = 0;
  let mut x1052: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1051, &mut x1052, x1050, x1039, x920);
  let mut x1053: u32 = 0;
  let mut x1054: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1053, &mut x1054, x1052, x1041, x918);
  let mut x1055: u32 = 0;
  let mut x1056: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1055, &mut x1056, x1054, x1043, x916);
  let mut x1057: u32 = 0;
  let mut x1058: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1057, &mut x1058, x1056, x1045, x914);
  let mut x1059: u32 = 0;
  let mut x1060: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1059, &mut x1060, x1058, x1047, x912);
  let mut x1061: u32 = 0;
  let mut x1062: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1061, &mut x1062, 0x0, x1049, x931);
  let mut x1063: u32 = 0;
  let mut x1064: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1063, &mut x1064, x1062, x1051, x929);
  let mut x1065: u32 = 0;
  let mut x1066: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1065, &mut x1066, x1064, x1053, x927);
  let mut x1067: u32 = 0;
  let mut x1068: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1067, &mut x1068, x1066, x1055, x925);
  let mut x1069: u32 = 0;
  let mut x1070: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1069, &mut x1070, x1068, x1057, x923);
  let mut x1071: u32 = 0;
  let mut x1072: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1071, &mut x1072, x1070, x1059, x921);
  let mut x1073: u32 = 0;
  let mut x1074: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1073, &mut x1074, 0x0, x984, x933);
  let mut x1075: u32 = 0;
  let mut x1076: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1075, &mut x1076, x1074, x1061, x934);
  let mut x1077: u32 = 0;
  let mut x1078: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1077, &mut x1078, x1076, x1063, x932);
  let mut x1079: u32 = 0;
  let mut x1080: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1079, &mut x1080, x1078, x1065, x930);
  let mut x1081: u32 = 0;
  let mut x1082: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1081, &mut x1082, x1080, x1067, x928);
  let mut x1083: u32 = 0;
  let mut x1084: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1083, &mut x1084, x1082, x1069, x926);
  let mut x1085: u32 = 0;
  let mut x1086: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1085, &mut x1086, x1084, x1071, x924);
  let mut x1087: u32 = 0;
  let mut x1088: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1087, &mut x1088, 0x0, x1073, x947);
  let mut x1089: u32 = 0;
  let mut x1090: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1089, &mut x1090, x1088, x1075, x945);
  let mut x1091: u32 = 0;
  let mut x1092: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1091, &mut x1092, x1090, x1077, x943);
  let mut x1093: u32 = 0;
  let mut x1094: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1093, &mut x1094, x1092, x1079, x941);
  let mut x1095: u32 = 0;
  let mut x1096: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1095, &mut x1096, x1094, x1081, x939);
  let mut x1097: u32 = 0;
  let mut x1098: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1097, &mut x1098, x1096, x1083, x937);
  let mut x1099: u32 = 0;
  let mut x1100: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1099, &mut x1100, x1098, x1085, x935);
  let mut x1101: u32 = 0;
  let mut x1102: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1101, &mut x1102, 0x0, x986, x949);
  let mut x1103: u32 = 0;
  let mut x1104: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1103, &mut x1104, x1102, x1087, x950);
  let mut x1105: u32 = 0;
  let mut x1106: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1105, &mut x1106, x1104, x1089, x948);
  let mut x1107: u32 = 0;
  let mut x1108: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1107, &mut x1108, x1106, x1091, x946);
  let mut x1109: u32 = 0;
  let mut x1110: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1109, &mut x1110, x1108, x1093, x944);
  let mut x1111: u32 = 0;
  let mut x1112: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1111, &mut x1112, x1110, x1095, x942);
  let mut x1113: u32 = 0;
  let mut x1114: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1113, &mut x1114, x1112, x1097, x940);
  let mut x1115: u32 = 0;
  let mut x1116: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1115, &mut x1116, x1114, x1099, x938);
  let mut x1117: u32 = 0;
  let mut x1118: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1117, &mut x1118, 0x0, x1101, x965);
  let mut x1119: u32 = 0;
  let mut x1120: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1119, &mut x1120, x1118, x1103, x963);
  let mut x1121: u32 = 0;
  let mut x1122: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1121, &mut x1122, x1120, x1105, x961);
  let mut x1123: u32 = 0;
  let mut x1124: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1123, &mut x1124, x1122, x1107, x959);
  let mut x1125: u32 = 0;
  let mut x1126: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1125, &mut x1126, x1124, x1109, x957);
  let mut x1127: u32 = 0;
  let mut x1128: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1127, &mut x1128, x1126, x1111, x955);
  let mut x1129: u32 = 0;
  let mut x1130: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1129, &mut x1130, x1128, x1113, x953);
  let mut x1131: u32 = 0;
  let mut x1132: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1131, &mut x1132, x1130, x1115, x951);
  let mut x1133: u32 = 0;
  let mut x1134: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1133, &mut x1134, 0x0, x988, x967);
  let mut x1135: u32 = 0;
  let mut x1136: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1135, &mut x1136, x1134, x1117, x968);
  let mut x1137: u32 = 0;
  let mut x1138: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1137, &mut x1138, x1136, x1119, x966);
  let mut x1139: u32 = 0;
  let mut x1140: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1139, &mut x1140, x1138, x1121, x964);
  let mut x1141: u32 = 0;
  let mut x1142: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1141, &mut x1142, x1140, x1123, x962);
  let mut x1143: u32 = 0;
  let mut x1144: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1143, &mut x1144, x1142, x1125, x960);
  let mut x1145: u32 = 0;
  let mut x1146: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1145, &mut x1146, x1144, x1127, x958);
  let mut x1147: u32 = 0;
  let mut x1148: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1147, &mut x1148, x1146, x1129, x956);
  let mut x1149: u32 = 0;
  let mut x1150: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1149, &mut x1150, x1148, x1131, x954);
  let mut x1151: u32 = 0;
  let mut x1152: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1151, &mut x1152, 0x0, x1133, x985);
  let mut x1153: u32 = 0;
  let mut x1154: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1153, &mut x1154, x1152, x1135, x983);
  let mut x1155: u32 = 0;
  let mut x1156: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1155, &mut x1156, x1154, x1137, x981);
  let mut x1157: u32 = 0;
  let mut x1158: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1157, &mut x1158, x1156, x1139, x979);
  let mut x1159: u32 = 0;
  let mut x1160: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1159, &mut x1160, x1158, x1141, x977);
  let mut x1161: u32 = 0;
  let mut x1162: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1161, &mut x1162, x1160, x1143, x975);
  let mut x1163: u32 = 0;
  let mut x1164: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1163, &mut x1164, x1162, x1145, x973);
  let mut x1165: u32 = 0;
  let mut x1166: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1165, &mut x1166, x1164, x1147, x971);
  let mut x1167: u32 = 0;
  let mut x1168: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1167, &mut x1168, x1166, x1149, x969);
  let mut x1169: u32 = 0;
  let mut x1170: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1169, &mut x1170, 0x0, x111, x403);
  let mut x1171: u32 = 0;
  let mut x1172: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1171, &mut x1172, x1170, x275, x567);
  let mut x1173: u32 = 0;
  let mut x1174: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1173, &mut x1174, x1172, x277, x569);
  let mut x1175: u32 = 0;
  let mut x1176: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1175, &mut x1176, x1174, x279, x571);
  let mut x1177: u32 = 0;
  let mut x1178: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1177, &mut x1178, x1176, x281, x573);
  let mut x1179: u32 = 0;
  let mut x1180: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1179, &mut x1180, x1178, x283, x575);
  let mut x1181: u32 = 0;
  let mut x1182: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1181, &mut x1182, x1180, x285, x577);
  let mut x1183: u32 = 0;
  let mut x1184: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1183, &mut x1184, x1182, x287, x579);
  let mut x1185: u32 = 0;
  let mut x1186: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1185, &mut x1186, x1184, x289, x581);
  let mut x1187: u32 = 0;
  let mut x1188: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1187, &mut x1188, x1186, x291, x583);
  let mut x1189: u32 = 0;
  let mut x1190: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1189, &mut x1190, 0x0, x695, x987);
  let mut x1191: u32 = 0;
  let mut x1192: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1191, &mut x1192, x1190, x859, x1151);
  let mut x1193: u32 = 0;
  let mut x1194: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1193, &mut x1194, x1192, x861, x1153);
  let mut x1195: u32 = 0;
  let mut x1196: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1195, &mut x1196, x1194, x863, x1155);
  let mut x1197: u32 = 0;
  let mut x1198: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1197, &mut x1198, x1196, x865, x1157);
  let mut x1199: u32 = 0;
  let mut x1200: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1199, &mut x1200, x1198, x867, x1159);
  let mut x1201: u32 = 0;
  let mut x1202: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1201, &mut x1202, x1200, x869, x1161);
  let mut x1203: u32 = 0;
  let mut x1204: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1203, &mut x1204, x1202, x871, x1163);
  let mut x1205: u32 = 0;
  let mut x1206: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1205, &mut x1206, x1204, x873, x1165);
  let mut x1207: u32 = 0;
  let mut x1208: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x1207, &mut x1208, x1206, x875, x1167);
  let x1209: u32 = ((x1169 >> 30) | ((x1171 << 2) & 0xffffffff));
  let x1210: u32 = ((x1171 >> 30) | ((x1173 << 2) & 0xffffffff));
  let x1211: u32 = ((x1173 >> 30) | ((x1175 << 2) & 0xffffffff));
  let x1212: u32 = ((x1175 >> 30) | ((x1177 << 2) & 0xffffffff));
  let x1213: u32 = ((x1177 >> 30) | ((x1179 << 2) & 0xffffffff));
  let x1214: u32 = ((x1179 >> 30) | ((x1181 << 2) & 0xffffffff));
  let x1215: u32 = ((x1181 >> 30) | ((x1183 << 2) & 0xffffffff));
  let x1216: u32 = ((x1183 >> 30) | ((x1185 << 2) & 0xffffffff));
  let x1217: u32 = ((x1185 >> 30) | ((x1187 << 2) & 0xffffffff));
  let x1218: u32 = ((x1189 >> 30) | ((x1191 << 2) & 0xffffffff));
  let x1219: u32 = ((x1191 >> 30) | ((x1193 << 2) & 0xffffffff));
  let x1220: u32 = ((x1193 >> 30) | ((x1195 << 2) & 0xffffffff));
  let x1221: u32 = ((x1195 >> 30) | ((x1197 << 2) & 0xffffffff));
  let x1222: u32 = ((x1197 >> 30) | ((x1199 << 2) & 0xffffffff));
  let x1223: u32 = ((x1199 >> 30) | ((x1201 << 2) & 0xffffffff));
  let x1224: u32 = ((x1201 >> 30) | ((x1203 << 2) & 0xffffffff));
  let x1225: u32 = ((x1203 >> 30) | ((x1205 << 2) & 0xffffffff));
  let x1226: u32 = ((x1205 >> 30) | ((x1207 << 2) & 0xffffffff));
  out1[0] = x1209;
  out1[1] = x1210;
  out1[2] = x1211;
  out1[3] = x1212;
  out1[4] = x1213;
  out1[5] = x1214;
  out1[6] = x1215;
  out1[7] = x1216;
  out1[8] = x1217;
  out2[0] = x1218;
  out2[1] = x1219;
  out2[2] = x1220;
  out2[3] = x1221;
  out2[4] = x1222;
  out2[5] = x1223;
  out2[6] = x1224;
  out2[7] = x1225;
  out2[8] = x1226;
}

/// The function fiat_25519_update_vr computes a update_vr.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg3: [0x0 ~> 0xffffffff]
///   arg4: [0x0 ~> 0xffffffff]
///   arg5: [0x0 ~> 0xffffffff]
///   arg6: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_25519_update_vr(out1: &mut fiat_25519_tight_field_element, out2: &mut fiat_25519_tight_field_element, arg1: &fiat_25519_tight_field_element, arg2: &fiat_25519_tight_field_element, arg3: u32, arg4: u32, arg5: u32, arg6: u32) -> () {
  let x1: fiat_25519_u1 = ((arg3 >> 31) as fiat_25519_u1);
  let mut x2: u32 = 0;
  let mut x3: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x2, &mut x3, 0x0, (!arg3), (0x1 as u32));
  let x4: u32 = (arg3 >> 26);
  let x5: u32 = (arg3 & 0x3ffffff);
  let x6: u32 = (x2 >> 26);
  let x7: u32 = (x2 & 0x3ffffff);
  let x8: u32 = (0x7ffffda - x7);
  let x9: u32 = (0x3fffffe - x6);
  let x10: fiat_25519_u1 = ((x8 >> 26) as fiat_25519_u1);
  let x11: u32 = (x8 & 0x3ffffff);
  let x12: u32 = ((x10 as u32) + x9);
  let x13: u32 = (x12 & 0x1ffffff);
  let x14: u32 = (x11 + 0x13);
  let x15: fiat_25519_u1 = ((x14 >> 26) as fiat_25519_u1);
  let x16: u32 = (x14 & 0x3ffffff);
  let x17: u32 = ((x15 as u32) + x13);
  let x18: fiat_25519_u1 = ((x17 >> 25) as fiat_25519_u1);
  let x19: u32 = (x17 & 0x1ffffff);
  let x20: u32 = ((x18 as u32) + 0x3ffffff);
  let mut x21: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x21, x1, x5, x16);
  let mut x22: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x22, x1, x4, x19);
  let mut x23: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x23, x1, (0x0 as u32), x20);
  let mut x24: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x24, x1, (0x0 as u32), 0x1ffffff);
  let mut x25: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x25, x1, (0x0 as u32), 0x3ffffff);
  let mut x26: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x26, x1, (0x0 as u32), 0x1ffffff);
  let mut x27: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x27, x1, (0x0 as u32), 0x3ffffff);
  let mut x28: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x28, x1, (0x0 as u32), 0x1ffffff);
  let mut x29: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x29, x1, (0x0 as u32), 0x3ffffff);
  let mut x30: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x30, x1, (0x0 as u32), 0x1ffffff);
  let x31: fiat_25519_u1 = ((arg4 >> 31) as fiat_25519_u1);
  let mut x32: u32 = 0;
  let mut x33: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x32, &mut x33, 0x0, (!arg4), (0x1 as u32));
  let x34: u32 = (arg4 >> 26);
  let x35: u32 = (arg4 & 0x3ffffff);
  let x36: u32 = (x32 >> 26);
  let x37: u32 = (x32 & 0x3ffffff);
  let x38: u32 = (0x7ffffda - x37);
  let x39: u32 = (0x3fffffe - x36);
  let x40: fiat_25519_u1 = ((x38 >> 26) as fiat_25519_u1);
  let x41: u32 = (x38 & 0x3ffffff);
  let x42: u32 = ((x40 as u32) + x39);
  let x43: u32 = (x42 & 0x1ffffff);
  let x44: u32 = (x41 + 0x13);
  let x45: fiat_25519_u1 = ((x44 >> 26) as fiat_25519_u1);
  let x46: u32 = (x44 & 0x3ffffff);
  let x47: u32 = ((x45 as u32) + x43);
  let x48: fiat_25519_u1 = ((x47 >> 25) as fiat_25519_u1);
  let x49: u32 = (x47 & 0x1ffffff);
  let x50: u32 = ((x48 as u32) + 0x3ffffff);
  let mut x51: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x51, x31, x35, x46);
  let mut x52: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x52, x31, x34, x49);
  let mut x53: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x53, x31, (0x0 as u32), x50);
  let mut x54: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x54, x31, (0x0 as u32), 0x1ffffff);
  let mut x55: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x55, x31, (0x0 as u32), 0x3ffffff);
  let mut x56: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x56, x31, (0x0 as u32), 0x1ffffff);
  let mut x57: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x57, x31, (0x0 as u32), 0x3ffffff);
  let mut x58: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x58, x31, (0x0 as u32), 0x1ffffff);
  let mut x59: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x59, x31, (0x0 as u32), 0x3ffffff);
  let mut x60: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x60, x31, (0x0 as u32), 0x1ffffff);
  let x61: fiat_25519_u1 = ((arg5 >> 31) as fiat_25519_u1);
  let mut x62: u32 = 0;
  let mut x63: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x62, &mut x63, 0x0, (!arg5), (0x1 as u32));
  let x64: u32 = (arg5 >> 26);
  let x65: u32 = (arg5 & 0x3ffffff);
  let x66: u32 = (x62 >> 26);
  let x67: u32 = (x62 & 0x3ffffff);
  let x68: u32 = (0x7ffffda - x67);
  let x69: u32 = (0x3fffffe - x66);
  let x70: fiat_25519_u1 = ((x68 >> 26) as fiat_25519_u1);
  let x71: u32 = (x68 & 0x3ffffff);
  let x72: u32 = ((x70 as u32) + x69);
  let x73: u32 = (x72 & 0x1ffffff);
  let x74: u32 = (x71 + 0x13);
  let x75: fiat_25519_u1 = ((x74 >> 26) as fiat_25519_u1);
  let x76: u32 = (x74 & 0x3ffffff);
  let x77: u32 = ((x75 as u32) + x73);
  let x78: fiat_25519_u1 = ((x77 >> 25) as fiat_25519_u1);
  let x79: u32 = (x77 & 0x1ffffff);
  let x80: u32 = ((x78 as u32) + 0x3ffffff);
  let mut x81: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x81, x61, x65, x76);
  let mut x82: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x82, x61, x64, x79);
  let mut x83: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x83, x61, (0x0 as u32), x80);
  let mut x84: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x84, x61, (0x0 as u32), 0x1ffffff);
  let mut x85: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x85, x61, (0x0 as u32), 0x3ffffff);
  let mut x86: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x86, x61, (0x0 as u32), 0x1ffffff);
  let mut x87: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x87, x61, (0x0 as u32), 0x3ffffff);
  let mut x88: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x88, x61, (0x0 as u32), 0x1ffffff);
  let mut x89: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x89, x61, (0x0 as u32), 0x3ffffff);
  let mut x90: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x90, x61, (0x0 as u32), 0x1ffffff);
  let x91: fiat_25519_u1 = ((arg6 >> 31) as fiat_25519_u1);
  let mut x92: u32 = 0;
  let mut x93: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u32(&mut x92, &mut x93, 0x0, (!arg6), (0x1 as u32));
  let x94: u32 = (arg6 >> 26);
  let x95: u32 = (arg6 & 0x3ffffff);
  let x96: u32 = (x92 >> 26);
  let x97: u32 = (x92 & 0x3ffffff);
  let x98: u32 = (0x7ffffda - x97);
  let x99: u32 = (0x3fffffe - x96);
  let x100: fiat_25519_u1 = ((x98 >> 26) as fiat_25519_u1);
  let x101: u32 = (x98 & 0x3ffffff);
  let x102: u32 = ((x100 as u32) + x99);
  let x103: u32 = (x102 & 0x1ffffff);
  let x104: u32 = (x101 + 0x13);
  let x105: fiat_25519_u1 = ((x104 >> 26) as fiat_25519_u1);
  let x106: u32 = (x104 & 0x3ffffff);
  let x107: u32 = ((x105 as u32) + x103);
  let x108: fiat_25519_u1 = ((x107 >> 25) as fiat_25519_u1);
  let x109: u32 = (x107 & 0x1ffffff);
  let x110: u32 = ((x108 as u32) + 0x3ffffff);
  let mut x111: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x111, x91, x95, x106);
  let mut x112: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x112, x91, x94, x109);
  let mut x113: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x113, x91, (0x0 as u32), x110);
  let mut x114: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x114, x91, (0x0 as u32), 0x1ffffff);
  let mut x115: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x115, x91, (0x0 as u32), 0x3ffffff);
  let mut x116: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x116, x91, (0x0 as u32), 0x1ffffff);
  let mut x117: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x117, x91, (0x0 as u32), 0x3ffffff);
  let mut x118: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x118, x91, (0x0 as u32), 0x1ffffff);
  let mut x119: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x119, x91, (0x0 as u32), 0x3ffffff);
  let mut x120: u32 = 0;
  fiat_25519_cmovznz_u32(&mut x120, x91, (0x0 as u32), 0x1ffffff);
  let x121: u64 = ((x30 as u64) * (((arg1[9]) * 0x26) as u64));
  let x122: u64 = ((x30 as u64) * (((arg1[8]) * 0x13) as u64));
  let x123: u64 = ((x30 as u64) * (((arg1[7]) * 0x26) as u64));
  let x124: u64 = ((x30 as u64) * (((arg1[6]) * 0x13) as u64));
  let x125: u64 = ((x30 as u64) * (((arg1[5]) * 0x26) as u64));
  let x126: u64 = ((x30 as u64) * (((arg1[4]) * 0x13) as u64));
  let x127: u64 = ((x30 as u64) * (((arg1[3]) * 0x26) as u64));
  let x128: u64 = ((x30 as u64) * (((arg1[2]) * 0x13) as u64));
  let x129: u64 = ((x30 as u64) * (((arg1[1]) * 0x26) as u64));
  let x130: u64 = ((x29 as u64) * (((arg1[9]) * 0x13) as u64));
  let x131: u64 = ((x29 as u64) * (((arg1[8]) * 0x13) as u64));
  let x132: u64 = ((x29 as u64) * (((arg1[7]) * 0x13) as u64));
  let x133: u64 = ((x29 as u64) * (((arg1[6]) * 0x13) as u64));
  let x134: u64 = ((x29 as u64) * (((arg1[5]) * 0x13) as u64));
  let x135: u64 = ((x29 as u64) * (((arg1[4]) * 0x13) as u64));
  let x136: u64 = ((x29 as u64) * (((arg1[3]) * 0x13) as u64));
  let x137: u64 = ((x29 as u64) * (((arg1[2]) * 0x13) as u64));
  let x138: u64 = ((x28 as u64) * (((arg1[9]) * 0x26) as u64));
  let x139: u64 = ((x28 as u64) * (((arg1[8]) * 0x13) as u64));
  let x140: u64 = ((x28 as u64) * (((arg1[7]) * 0x26) as u64));
  let x141: u64 = ((x28 as u64) * (((arg1[6]) * 0x13) as u64));
  let x142: u64 = ((x28 as u64) * (((arg1[5]) * 0x26) as u64));
  let x143: u64 = ((x28 as u64) * (((arg1[4]) * 0x13) as u64));
  let x144: u64 = ((x28 as u64) * (((arg1[3]) * 0x26) as u64));
  let x145: u64 = ((x27 as u64) * (((arg1[9]) * 0x13) as u64));
  let x146: u64 = ((x27 as u64) * (((arg1[8]) * 0x13) as u64));
  let x147: u64 = ((x27 as u64) * (((arg1[7]) * 0x13) as u64));
  let x148: u64 = ((x27 as u64) * (((arg1[6]) * 0x13) as u64));
  let x149: u64 = ((x27 as u64) * (((arg1[5]) * 0x13) as u64));
  let x150: u64 = ((x27 as u64) * (((arg1[4]) * 0x13) as u64));
  let x151: u64 = ((x26 as u64) * (((arg1[9]) * 0x26) as u64));
  let x152: u64 = ((x26 as u64) * (((arg1[8]) * 0x13) as u64));
  let x153: u64 = ((x26 as u64) * (((arg1[7]) * 0x26) as u64));
  let x154: u64 = ((x26 as u64) * (((arg1[6]) * 0x13) as u64));
  let x155: u64 = ((x26 as u64) * (((arg1[5]) * 0x26) as u64));
  let x156: u64 = ((x25 as u64) * (((arg1[9]) * 0x13) as u64));
  let x157: u64 = ((x25 as u64) * (((arg1[8]) * 0x13) as u64));
  let x158: u64 = ((x25 as u64) * (((arg1[7]) * 0x13) as u64));
  let x159: u64 = ((x25 as u64) * (((arg1[6]) * 0x13) as u64));
  let x160: u64 = ((x24 as u64) * (((arg1[9]) * 0x26) as u64));
  let x161: u64 = ((x24 as u64) * (((arg1[8]) * 0x13) as u64));
  let x162: u64 = ((x24 as u64) * (((arg1[7]) * 0x26) as u64));
  let x163: u64 = ((x23 as u64) * (((arg1[9]) * 0x13) as u64));
  let x164: u64 = ((x23 as u64) * (((arg1[8]) * 0x13) as u64));
  let x165: u64 = ((x22 as u64) * (((arg1[9]) * 0x26) as u64));
  let x166: u64 = ((x30 as u64) * ((arg1[0]) as u64));
  let x167: u64 = ((x29 as u64) * ((arg1[1]) as u64));
  let x168: u64 = ((x29 as u64) * ((arg1[0]) as u64));
  let x169: u64 = ((x28 as u64) * ((arg1[2]) as u64));
  let x170: u64 = ((x28 as u64) * (((arg1[1]) * 0x2) as u64));
  let x171: u64 = ((x28 as u64) * ((arg1[0]) as u64));
  let x172: u64 = ((x27 as u64) * ((arg1[3]) as u64));
  let x173: u64 = ((x27 as u64) * ((arg1[2]) as u64));
  let x174: u64 = ((x27 as u64) * ((arg1[1]) as u64));
  let x175: u64 = ((x27 as u64) * ((arg1[0]) as u64));
  let x176: u64 = ((x26 as u64) * ((arg1[4]) as u64));
  let x177: u64 = ((x26 as u64) * (((arg1[3]) * 0x2) as u64));
  let x178: u64 = ((x26 as u64) * ((arg1[2]) as u64));
  let x179: u64 = ((x26 as u64) * (((arg1[1]) * 0x2) as u64));
  let x180: u64 = ((x26 as u64) * ((arg1[0]) as u64));
  let x181: u64 = ((x25 as u64) * ((arg1[5]) as u64));
  let x182: u64 = ((x25 as u64) * ((arg1[4]) as u64));
  let x183: u64 = ((x25 as u64) * ((arg1[3]) as u64));
  let x184: u64 = ((x25 as u64) * ((arg1[2]) as u64));
  let x185: u64 = ((x25 as u64) * ((arg1[1]) as u64));
  let x186: u64 = ((x25 as u64) * ((arg1[0]) as u64));
  let x187: u64 = ((x24 as u64) * ((arg1[6]) as u64));
  let x188: u64 = ((x24 as u64) * (((arg1[5]) * 0x2) as u64));
  let x189: u64 = ((x24 as u64) * ((arg1[4]) as u64));
  let x190: u64 = ((x24 as u64) * (((arg1[3]) * 0x2) as u64));
  let x191: u64 = ((x24 as u64) * ((arg1[2]) as u64));
  let x192: u64 = ((x24 as u64) * (((arg1[1]) * 0x2) as u64));
  let x193: u64 = ((x24 as u64) * ((arg1[0]) as u64));
  let x194: u64 = ((x23 as u64) * ((arg1[7]) as u64));
  let x195: u64 = ((x23 as u64) * ((arg1[6]) as u64));
  let x196: u64 = ((x23 as u64) * ((arg1[5]) as u64));
  let x197: u64 = ((x23 as u64) * ((arg1[4]) as u64));
  let x198: u64 = ((x23 as u64) * ((arg1[3]) as u64));
  let x199: u64 = ((x23 as u64) * ((arg1[2]) as u64));
  let x200: u64 = ((x23 as u64) * ((arg1[1]) as u64));
  let x201: u64 = ((x23 as u64) * ((arg1[0]) as u64));
  let x202: u64 = ((x22 as u64) * ((arg1[8]) as u64));
  let x203: u64 = ((x22 as u64) * (((arg1[7]) * 0x2) as u64));
  let x204: u64 = ((x22 as u64) * ((arg1[6]) as u64));
  let x205: u64 = ((x22 as u64) * (((arg1[5]) * 0x2) as u64));
  let x206: u64 = ((x22 as u64) * ((arg1[4]) as u64));
  let x207: u64 = ((x22 as u64) * (((arg1[3]) * 0x2) as u64));
  let x208: u64 = ((x22 as u64) * ((arg1[2]) as u64));
  let x209: u64 = ((x22 as u64) * (((arg1[1]) * 0x2) as u64));
  let x210: u64 = ((x22 as u64) * ((arg1[0]) as u64));
  let x211: u64 = ((x21 as u64) * ((arg1[9]) as u64));
  let x212: u64 = ((x21 as u64) * ((arg1[8]) as u64));
  let x213: u64 = ((x21 as u64) * ((arg1[7]) as u64));
  let x214: u64 = ((x21 as u64) * ((arg1[6]) as u64));
  let x215: u64 = ((x21 as u64) * ((arg1[5]) as u64));
  let x216: u64 = ((x21 as u64) * ((arg1[4]) as u64));
  let x217: u64 = ((x21 as u64) * ((arg1[3]) as u64));
  let x218: u64 = ((x21 as u64) * ((arg1[2]) as u64));
  let x219: u64 = ((x21 as u64) * ((arg1[1]) as u64));
  let x220: u64 = ((x21 as u64) * ((arg1[0]) as u64));
  let x221: u64 = (x220 + (x165 + (x164 + (x162 + (x159 + (x155 + (x150 + (x144 + (x137 + x129)))))))));
  let x222: u64 = (x221 >> 26);
  let x223: u32 = ((x221 & (0x3ffffff as u64)) as u32);
  let x224: u64 = (x211 + (x202 + (x194 + (x187 + (x181 + (x176 + (x172 + (x169 + (x167 + x166)))))))));
  let x225: u64 = (x212 + (x203 + (x195 + (x188 + (x182 + (x177 + (x173 + (x170 + (x168 + x121)))))))));
  let x226: u64 = (x213 + (x204 + (x196 + (x189 + (x183 + (x178 + (x174 + (x171 + (x130 + x122)))))))));
  let x227: u64 = (x214 + (x205 + (x197 + (x190 + (x184 + (x179 + (x175 + (x138 + (x131 + x123)))))))));
  let x228: u64 = (x215 + (x206 + (x198 + (x191 + (x185 + (x180 + (x145 + (x139 + (x132 + x124)))))))));
  let x229: u64 = (x216 + (x207 + (x199 + (x192 + (x186 + (x151 + (x146 + (x140 + (x133 + x125)))))))));
  let x230: u64 = (x217 + (x208 + (x200 + (x193 + (x156 + (x152 + (x147 + (x141 + (x134 + x126)))))))));
  let x231: u64 = (x218 + (x209 + (x201 + (x160 + (x157 + (x153 + (x148 + (x142 + (x135 + x127)))))))));
  let x232: u64 = (x219 + (x210 + (x163 + (x161 + (x158 + (x154 + (x149 + (x143 + (x136 + x128)))))))));
  let x233: u64 = (x222 + x232);
  let x234: u64 = (x233 >> 25);
  let x235: u32 = ((x233 & (0x1ffffff as u64)) as u32);
  let x236: u64 = (x234 + x231);
  let x237: u64 = (x236 >> 26);
  let x238: u32 = ((x236 & (0x3ffffff as u64)) as u32);
  let x239: u64 = (x237 + x230);
  let x240: u64 = (x239 >> 25);
  let x241: u32 = ((x239 & (0x1ffffff as u64)) as u32);
  let x242: u64 = (x240 + x229);
  let x243: u64 = (x242 >> 26);
  let x244: u32 = ((x242 & (0x3ffffff as u64)) as u32);
  let x245: u64 = (x243 + x228);
  let x246: u64 = (x245 >> 25);
  let x247: u32 = ((x245 & (0x1ffffff as u64)) as u32);
  let x248: u64 = (x246 + x227);
  let x249: u32 = ((x248 >> 26) as u32);
  let x250: u32 = ((x248 & (0x3ffffff as u64)) as u32);
  let x251: u64 = ((x249 as u64) + x226);
  let x252: u32 = ((x251 >> 25) as u32);
  let x253: u32 = ((x251 & (0x1ffffff as u64)) as u32);
  let x254: u64 = ((x252 as u64) + x225);
  let x255: u32 = ((x254 >> 26) as u32);
  let x256: u32 = ((x254 & (0x3ffffff as u64)) as u32);
  let x257: u64 = ((x255 as u64) + x224);
  let x258: u32 = ((x257 >> 25) as u32);
  let x259: u32 = ((x257 & (0x1ffffff as u64)) as u32);
  let x260: u64 = ((x258 as u64) * (0x13 as u64));
  let x261: u64 = ((x223 as u64) + x260);
  let x262: u32 = ((x261 >> 26) as u32);
  let x263: u32 = ((x261 & (0x3ffffff as u64)) as u32);
  let x264: u32 = (x262 + x235);
  let x265: fiat_25519_u1 = ((x264 >> 25) as fiat_25519_u1);
  let x266: u32 = (x264 & 0x1ffffff);
  let x267: u32 = ((x265 as u32) + x238);
  let x268: u64 = ((x60 as u64) * (((arg2[9]) * 0x26) as u64));
  let x269: u64 = ((x60 as u64) * (((arg2[8]) * 0x13) as u64));
  let x270: u64 = ((x60 as u64) * (((arg2[7]) * 0x26) as u64));
  let x271: u64 = ((x60 as u64) * (((arg2[6]) * 0x13) as u64));
  let x272: u64 = ((x60 as u64) * (((arg2[5]) * 0x26) as u64));
  let x273: u64 = ((x60 as u64) * (((arg2[4]) * 0x13) as u64));
  let x274: u64 = ((x60 as u64) * (((arg2[3]) * 0x26) as u64));
  let x275: u64 = ((x60 as u64) * (((arg2[2]) * 0x13) as u64));
  let x276: u64 = ((x60 as u64) * (((arg2[1]) * 0x26) as u64));
  let x277: u64 = ((x59 as u64) * (((arg2[9]) * 0x13) as u64));
  let x278: u64 = ((x59 as u64) * (((arg2[8]) * 0x13) as u64));
  let x279: u64 = ((x59 as u64) * (((arg2[7]) * 0x13) as u64));
  let x280: u64 = ((x59 as u64) * (((arg2[6]) * 0x13) as u64));
  let x281: u64 = ((x59 as u64) * (((arg2[5]) * 0x13) as u64));
  let x282: u64 = ((x59 as u64) * (((arg2[4]) * 0x13) as u64));
  let x283: u64 = ((x59 as u64) * (((arg2[3]) * 0x13) as u64));
  let x284: u64 = ((x59 as u64) * (((arg2[2]) * 0x13) as u64));
  let x285: u64 = ((x58 as u64) * (((arg2[9]) * 0x26) as u64));
  let x286: u64 = ((x58 as u64) * (((arg2[8]) * 0x13) as u64));
  let x287: u64 = ((x58 as u64) * (((arg2[7]) * 0x26) as u64));
  let x288: u64 = ((x58 as u64) * (((arg2[6]) * 0x13) as u64));
  let x289: u64 = ((x58 as u64) * (((arg2[5]) * 0x26) as u64));
  let x290: u64 = ((x58 as u64) * (((arg2[4]) * 0x13) as u64));
  let x291: u64 = ((x58 as u64) * (((arg2[3]) * 0x26) as u64));
  let x292: u64 = ((x57 as u64) * (((arg2[9]) * 0x13) as u64));
  let x293: u64 = ((x57 as u64) * (((arg2[8]) * 0x13) as u64));
  let x294: u64 = ((x57 as u64) * (((arg2[7]) * 0x13) as u64));
  let x295: u64 = ((x57 as u64) * (((arg2[6]) * 0x13) as u64));
  let x296: u64 = ((x57 as u64) * (((arg2[5]) * 0x13) as u64));
  let x297: u64 = ((x57 as u64) * (((arg2[4]) * 0x13) as u64));
  let x298: u64 = ((x56 as u64) * (((arg2[9]) * 0x26) as u64));
  let x299: u64 = ((x56 as u64) * (((arg2[8]) * 0x13) as u64));
  let x300: u64 = ((x56 as u64) * (((arg2[7]) * 0x26) as u64));
  let x301: u64 = ((x56 as u64) * (((arg2[6]) * 0x13) as u64));
  let x302: u64 = ((x56 as u64) * (((arg2[5]) * 0x26) as u64));
  let x303: u64 = ((x55 as u64) * (((arg2[9]) * 0x13) as u64));
  let x304: u64 = ((x55 as u64) * (((arg2[8]) * 0x13) as u64));
  let x305: u64 = ((x55 as u64) * (((arg2[7]) * 0x13) as u64));
  let x306: u64 = ((x55 as u64) * (((arg2[6]) * 0x13) as u64));
  let x307: u64 = ((x54 as u64) * (((arg2[9]) * 0x26) as u64));
  let x308: u64 = ((x54 as u64) * (((arg2[8]) * 0x13) as u64));
  let x309: u64 = ((x54 as u64) * (((arg2[7]) * 0x26) as u64));
  let x310: u64 = ((x53 as u64) * (((arg2[9]) * 0x13) as u64));
  let x311: u64 = ((x53 as u64) * (((arg2[8]) * 0x13) as u64));
  let x312: u64 = ((x52 as u64) * (((arg2[9]) * 0x26) as u64));
  let x313: u64 = ((x60 as u64) * ((arg2[0]) as u64));
  let x314: u64 = ((x59 as u64) * ((arg2[1]) as u64));
  let x315: u64 = ((x59 as u64) * ((arg2[0]) as u64));
  let x316: u64 = ((x58 as u64) * ((arg2[2]) as u64));
  let x317: u64 = ((x58 as u64) * (((arg2[1]) * 0x2) as u64));
  let x318: u64 = ((x58 as u64) * ((arg2[0]) as u64));
  let x319: u64 = ((x57 as u64) * ((arg2[3]) as u64));
  let x320: u64 = ((x57 as u64) * ((arg2[2]) as u64));
  let x321: u64 = ((x57 as u64) * ((arg2[1]) as u64));
  let x322: u64 = ((x57 as u64) * ((arg2[0]) as u64));
  let x323: u64 = ((x56 as u64) * ((arg2[4]) as u64));
  let x324: u64 = ((x56 as u64) * (((arg2[3]) * 0x2) as u64));
  let x325: u64 = ((x56 as u64) * ((arg2[2]) as u64));
  let x326: u64 = ((x56 as u64) * (((arg2[1]) * 0x2) as u64));
  let x327: u64 = ((x56 as u64) * ((arg2[0]) as u64));
  let x328: u64 = ((x55 as u64) * ((arg2[5]) as u64));
  let x329: u64 = ((x55 as u64) * ((arg2[4]) as u64));
  let x330: u64 = ((x55 as u64) * ((arg2[3]) as u64));
  let x331: u64 = ((x55 as u64) * ((arg2[2]) as u64));
  let x332: u64 = ((x55 as u64) * ((arg2[1]) as u64));
  let x333: u64 = ((x55 as u64) * ((arg2[0]) as u64));
  let x334: u64 = ((x54 as u64) * ((arg2[6]) as u64));
  let x335: u64 = ((x54 as u64) * (((arg2[5]) * 0x2) as u64));
  let x336: u64 = ((x54 as u64) * ((arg2[4]) as u64));
  let x337: u64 = ((x54 as u64) * (((arg2[3]) * 0x2) as u64));
  let x338: u64 = ((x54 as u64) * ((arg2[2]) as u64));
  let x339: u64 = ((x54 as u64) * (((arg2[1]) * 0x2) as u64));
  let x340: u64 = ((x54 as u64) * ((arg2[0]) as u64));
  let x341: u64 = ((x53 as u64) * ((arg2[7]) as u64));
  let x342: u64 = ((x53 as u64) * ((arg2[6]) as u64));
  let x343: u64 = ((x53 as u64) * ((arg2[5]) as u64));
  let x344: u64 = ((x53 as u64) * ((arg2[4]) as u64));
  let x345: u64 = ((x53 as u64) * ((arg2[3]) as u64));
  let x346: u64 = ((x53 as u64) * ((arg2[2]) as u64));
  let x347: u64 = ((x53 as u64) * ((arg2[1]) as u64));
  let x348: u64 = ((x53 as u64) * ((arg2[0]) as u64));
  let x349: u64 = ((x52 as u64) * ((arg2[8]) as u64));
  let x350: u64 = ((x52 as u64) * (((arg2[7]) * 0x2) as u64));
  let x351: u64 = ((x52 as u64) * ((arg2[6]) as u64));
  let x352: u64 = ((x52 as u64) * (((arg2[5]) * 0x2) as u64));
  let x353: u64 = ((x52 as u64) * ((arg2[4]) as u64));
  let x354: u64 = ((x52 as u64) * (((arg2[3]) * 0x2) as u64));
  let x355: u64 = ((x52 as u64) * ((arg2[2]) as u64));
  let x356: u64 = ((x52 as u64) * (((arg2[1]) * 0x2) as u64));
  let x357: u64 = ((x52 as u64) * ((arg2[0]) as u64));
  let x358: u64 = ((x51 as u64) * ((arg2[9]) as u64));
  let x359: u64 = ((x51 as u64) * ((arg2[8]) as u64));
  let x360: u64 = ((x51 as u64) * ((arg2[7]) as u64));
  let x361: u64 = ((x51 as u64) * ((arg2[6]) as u64));
  let x362: u64 = ((x51 as u64) * ((arg2[5]) as u64));
  let x363: u64 = ((x51 as u64) * ((arg2[4]) as u64));
  let x364: u64 = ((x51 as u64) * ((arg2[3]) as u64));
  let x365: u64 = ((x51 as u64) * ((arg2[2]) as u64));
  let x366: u64 = ((x51 as u64) * ((arg2[1]) as u64));
  let x367: u64 = ((x51 as u64) * ((arg2[0]) as u64));
  let x368: u64 = (x367 + (x312 + (x311 + (x309 + (x306 + (x302 + (x297 + (x291 + (x284 + x276)))))))));
  let x369: u64 = (x368 >> 26);
  let x370: u32 = ((x368 & (0x3ffffff as u64)) as u32);
  let x371: u64 = (x358 + (x349 + (x341 + (x334 + (x328 + (x323 + (x319 + (x316 + (x314 + x313)))))))));
  let x372: u64 = (x359 + (x350 + (x342 + (x335 + (x329 + (x324 + (x320 + (x317 + (x315 + x268)))))))));
  let x373: u64 = (x360 + (x351 + (x343 + (x336 + (x330 + (x325 + (x321 + (x318 + (x277 + x269)))))))));
  let x374: u64 = (x361 + (x352 + (x344 + (x337 + (x331 + (x326 + (x322 + (x285 + (x278 + x270)))))))));
  let x375: u64 = (x362 + (x353 + (x345 + (x338 + (x332 + (x327 + (x292 + (x286 + (x279 + x271)))))))));
  let x376: u64 = (x363 + (x354 + (x346 + (x339 + (x333 + (x298 + (x293 + (x287 + (x280 + x272)))))))));
  let x377: u64 = (x364 + (x355 + (x347 + (x340 + (x303 + (x299 + (x294 + (x288 + (x281 + x273)))))))));
  let x378: u64 = (x365 + (x356 + (x348 + (x307 + (x304 + (x300 + (x295 + (x289 + (x282 + x274)))))))));
  let x379: u64 = (x366 + (x357 + (x310 + (x308 + (x305 + (x301 + (x296 + (x290 + (x283 + x275)))))))));
  let x380: u64 = (x369 + x379);
  let x381: u64 = (x380 >> 25);
  let x382: u32 = ((x380 & (0x1ffffff as u64)) as u32);
  let x383: u64 = (x381 + x378);
  let x384: u64 = (x383 >> 26);
  let x385: u32 = ((x383 & (0x3ffffff as u64)) as u32);
  let x386: u64 = (x384 + x377);
  let x387: u64 = (x386 >> 25);
  let x388: u32 = ((x386 & (0x1ffffff as u64)) as u32);
  let x389: u64 = (x387 + x376);
  let x390: u64 = (x389 >> 26);
  let x391: u32 = ((x389 & (0x3ffffff as u64)) as u32);
  let x392: u64 = (x390 + x375);
  let x393: u64 = (x392 >> 25);
  let x394: u32 = ((x392 & (0x1ffffff as u64)) as u32);
  let x395: u64 = (x393 + x374);
  let x396: u32 = ((x395 >> 26) as u32);
  let x397: u32 = ((x395 & (0x3ffffff as u64)) as u32);
  let x398: u64 = ((x396 as u64) + x373);
  let x399: u32 = ((x398 >> 25) as u32);
  let x400: u32 = ((x398 & (0x1ffffff as u64)) as u32);
  let x401: u64 = ((x399 as u64) + x372);
  let x402: u32 = ((x401 >> 26) as u32);
  let x403: u32 = ((x401 & (0x3ffffff as u64)) as u32);
  let x404: u64 = ((x402 as u64) + x371);
  let x405: u32 = ((x404 >> 25) as u32);
  let x406: u32 = ((x404 & (0x1ffffff as u64)) as u32);
  let x407: u64 = ((x405 as u64) * (0x13 as u64));
  let x408: u64 = ((x370 as u64) + x407);
  let x409: u32 = ((x408 >> 26) as u32);
  let x410: u32 = ((x408 & (0x3ffffff as u64)) as u32);
  let x411: u32 = (x409 + x382);
  let x412: fiat_25519_u1 = ((x411 >> 25) as fiat_25519_u1);
  let x413: u32 = (x411 & 0x1ffffff);
  let x414: u32 = ((x412 as u32) + x385);
  let x415: u64 = ((x90 as u64) * (((arg1[9]) * 0x26) as u64));
  let x416: u64 = ((x90 as u64) * (((arg1[8]) * 0x13) as u64));
  let x417: u64 = ((x90 as u64) * (((arg1[7]) * 0x26) as u64));
  let x418: u64 = ((x90 as u64) * (((arg1[6]) * 0x13) as u64));
  let x419: u64 = ((x90 as u64) * (((arg1[5]) * 0x26) as u64));
  let x420: u64 = ((x90 as u64) * (((arg1[4]) * 0x13) as u64));
  let x421: u64 = ((x90 as u64) * (((arg1[3]) * 0x26) as u64));
  let x422: u64 = ((x90 as u64) * (((arg1[2]) * 0x13) as u64));
  let x423: u64 = ((x90 as u64) * (((arg1[1]) * 0x26) as u64));
  let x424: u64 = ((x89 as u64) * (((arg1[9]) * 0x13) as u64));
  let x425: u64 = ((x89 as u64) * (((arg1[8]) * 0x13) as u64));
  let x426: u64 = ((x89 as u64) * (((arg1[7]) * 0x13) as u64));
  let x427: u64 = ((x89 as u64) * (((arg1[6]) * 0x13) as u64));
  let x428: u64 = ((x89 as u64) * (((arg1[5]) * 0x13) as u64));
  let x429: u64 = ((x89 as u64) * (((arg1[4]) * 0x13) as u64));
  let x430: u64 = ((x89 as u64) * (((arg1[3]) * 0x13) as u64));
  let x431: u64 = ((x89 as u64) * (((arg1[2]) * 0x13) as u64));
  let x432: u64 = ((x88 as u64) * (((arg1[9]) * 0x26) as u64));
  let x433: u64 = ((x88 as u64) * (((arg1[8]) * 0x13) as u64));
  let x434: u64 = ((x88 as u64) * (((arg1[7]) * 0x26) as u64));
  let x435: u64 = ((x88 as u64) * (((arg1[6]) * 0x13) as u64));
  let x436: u64 = ((x88 as u64) * (((arg1[5]) * 0x26) as u64));
  let x437: u64 = ((x88 as u64) * (((arg1[4]) * 0x13) as u64));
  let x438: u64 = ((x88 as u64) * (((arg1[3]) * 0x26) as u64));
  let x439: u64 = ((x87 as u64) * (((arg1[9]) * 0x13) as u64));
  let x440: u64 = ((x87 as u64) * (((arg1[8]) * 0x13) as u64));
  let x441: u64 = ((x87 as u64) * (((arg1[7]) * 0x13) as u64));
  let x442: u64 = ((x87 as u64) * (((arg1[6]) * 0x13) as u64));
  let x443: u64 = ((x87 as u64) * (((arg1[5]) * 0x13) as u64));
  let x444: u64 = ((x87 as u64) * (((arg1[4]) * 0x13) as u64));
  let x445: u64 = ((x86 as u64) * (((arg1[9]) * 0x26) as u64));
  let x446: u64 = ((x86 as u64) * (((arg1[8]) * 0x13) as u64));
  let x447: u64 = ((x86 as u64) * (((arg1[7]) * 0x26) as u64));
  let x448: u64 = ((x86 as u64) * (((arg1[6]) * 0x13) as u64));
  let x449: u64 = ((x86 as u64) * (((arg1[5]) * 0x26) as u64));
  let x450: u64 = ((x85 as u64) * (((arg1[9]) * 0x13) as u64));
  let x451: u64 = ((x85 as u64) * (((arg1[8]) * 0x13) as u64));
  let x452: u64 = ((x85 as u64) * (((arg1[7]) * 0x13) as u64));
  let x453: u64 = ((x85 as u64) * (((arg1[6]) * 0x13) as u64));
  let x454: u64 = ((x84 as u64) * (((arg1[9]) * 0x26) as u64));
  let x455: u64 = ((x84 as u64) * (((arg1[8]) * 0x13) as u64));
  let x456: u64 = ((x84 as u64) * (((arg1[7]) * 0x26) as u64));
  let x457: u64 = ((x83 as u64) * (((arg1[9]) * 0x13) as u64));
  let x458: u64 = ((x83 as u64) * (((arg1[8]) * 0x13) as u64));
  let x459: u64 = ((x82 as u64) * (((arg1[9]) * 0x26) as u64));
  let x460: u64 = ((x90 as u64) * ((arg1[0]) as u64));
  let x461: u64 = ((x89 as u64) * ((arg1[1]) as u64));
  let x462: u64 = ((x89 as u64) * ((arg1[0]) as u64));
  let x463: u64 = ((x88 as u64) * ((arg1[2]) as u64));
  let x464: u64 = ((x88 as u64) * (((arg1[1]) * 0x2) as u64));
  let x465: u64 = ((x88 as u64) * ((arg1[0]) as u64));
  let x466: u64 = ((x87 as u64) * ((arg1[3]) as u64));
  let x467: u64 = ((x87 as u64) * ((arg1[2]) as u64));
  let x468: u64 = ((x87 as u64) * ((arg1[1]) as u64));
  let x469: u64 = ((x87 as u64) * ((arg1[0]) as u64));
  let x470: u64 = ((x86 as u64) * ((arg1[4]) as u64));
  let x471: u64 = ((x86 as u64) * (((arg1[3]) * 0x2) as u64));
  let x472: u64 = ((x86 as u64) * ((arg1[2]) as u64));
  let x473: u64 = ((x86 as u64) * (((arg1[1]) * 0x2) as u64));
  let x474: u64 = ((x86 as u64) * ((arg1[0]) as u64));
  let x475: u64 = ((x85 as u64) * ((arg1[5]) as u64));
  let x476: u64 = ((x85 as u64) * ((arg1[4]) as u64));
  let x477: u64 = ((x85 as u64) * ((arg1[3]) as u64));
  let x478: u64 = ((x85 as u64) * ((arg1[2]) as u64));
  let x479: u64 = ((x85 as u64) * ((arg1[1]) as u64));
  let x480: u64 = ((x85 as u64) * ((arg1[0]) as u64));
  let x481: u64 = ((x84 as u64) * ((arg1[6]) as u64));
  let x482: u64 = ((x84 as u64) * (((arg1[5]) * 0x2) as u64));
  let x483: u64 = ((x84 as u64) * ((arg1[4]) as u64));
  let x484: u64 = ((x84 as u64) * (((arg1[3]) * 0x2) as u64));
  let x485: u64 = ((x84 as u64) * ((arg1[2]) as u64));
  let x486: u64 = ((x84 as u64) * (((arg1[1]) * 0x2) as u64));
  let x487: u64 = ((x84 as u64) * ((arg1[0]) as u64));
  let x488: u64 = ((x83 as u64) * ((arg1[7]) as u64));
  let x489: u64 = ((x83 as u64) * ((arg1[6]) as u64));
  let x490: u64 = ((x83 as u64) * ((arg1[5]) as u64));
  let x491: u64 = ((x83 as u64) * ((arg1[4]) as u64));
  let x492: u64 = ((x83 as u64) * ((arg1[3]) as u64));
  let x493: u64 = ((x83 as u64) * ((arg1[2]) as u64));
  let x494: u64 = ((x83 as u64) * ((arg1[1]) as u64));
  let x495: u64 = ((x83 as u64) * ((arg1[0]) as u64));
  let x496: u64 = ((x82 as u64) * ((arg1[8]) as u64));
  let x497: u64 = ((x82 as u64) * (((arg1[7]) * 0x2) as u64));
  let x498: u64 = ((x82 as u64) * ((arg1[6]) as u64));
  let x499: u64 = ((x82 as u64) * (((arg1[5]) * 0x2) as u64));
  let x500: u64 = ((x82 as u64) * ((arg1[4]) as u64));
  let x501: u64 = ((x82 as u64) * (((arg1[3]) * 0x2) as u64));
  let x502: u64 = ((x82 as u64) * ((arg1[2]) as u64));
  let x503: u64 = ((x82 as u64) * (((arg1[1]) * 0x2) as u64));
  let x504: u64 = ((x82 as u64) * ((arg1[0]) as u64));
  let x505: u64 = ((x81 as u64) * ((arg1[9]) as u64));
  let x506: u64 = ((x81 as u64) * ((arg1[8]) as u64));
  let x507: u64 = ((x81 as u64) * ((arg1[7]) as u64));
  let x508: u64 = ((x81 as u64) * ((arg1[6]) as u64));
  let x509: u64 = ((x81 as u64) * ((arg1[5]) as u64));
  let x510: u64 = ((x81 as u64) * ((arg1[4]) as u64));
  let x511: u64 = ((x81 as u64) * ((arg1[3]) as u64));
  let x512: u64 = ((x81 as u64) * ((arg1[2]) as u64));
  let x513: u64 = ((x81 as u64) * ((arg1[1]) as u64));
  let x514: u64 = ((x81 as u64) * ((arg1[0]) as u64));
  let x515: u64 = (x514 + (x459 + (x458 + (x456 + (x453 + (x449 + (x444 + (x438 + (x431 + x423)))))))));
  let x516: u64 = (x515 >> 26);
  let x517: u32 = ((x515 & (0x3ffffff as u64)) as u32);
  let x518: u64 = (x505 + (x496 + (x488 + (x481 + (x475 + (x470 + (x466 + (x463 + (x461 + x460)))))))));
  let x519: u64 = (x506 + (x497 + (x489 + (x482 + (x476 + (x471 + (x467 + (x464 + (x462 + x415)))))))));
  let x520: u64 = (x507 + (x498 + (x490 + (x483 + (x477 + (x472 + (x468 + (x465 + (x424 + x416)))))))));
  let x521: u64 = (x508 + (x499 + (x491 + (x484 + (x478 + (x473 + (x469 + (x432 + (x425 + x417)))))))));
  let x522: u64 = (x509 + (x500 + (x492 + (x485 + (x479 + (x474 + (x439 + (x433 + (x426 + x418)))))))));
  let x523: u64 = (x510 + (x501 + (x493 + (x486 + (x480 + (x445 + (x440 + (x434 + (x427 + x419)))))))));
  let x524: u64 = (x511 + (x502 + (x494 + (x487 + (x450 + (x446 + (x441 + (x435 + (x428 + x420)))))))));
  let x525: u64 = (x512 + (x503 + (x495 + (x454 + (x451 + (x447 + (x442 + (x436 + (x429 + x421)))))))));
  let x526: u64 = (x513 + (x504 + (x457 + (x455 + (x452 + (x448 + (x443 + (x437 + (x430 + x422)))))))));
  let x527: u64 = (x516 + x526);
  let x528: u64 = (x527 >> 25);
  let x529: u32 = ((x527 & (0x1ffffff as u64)) as u32);
  let x530: u64 = (x528 + x525);
  let x531: u64 = (x530 >> 26);
  let x532: u32 = ((x530 & (0x3ffffff as u64)) as u32);
  let x533: u64 = (x531 + x524);
  let x534: u64 = (x533 >> 25);
  let x535: u32 = ((x533 & (0x1ffffff as u64)) as u32);
  let x536: u64 = (x534 + x523);
  let x537: u64 = (x536 >> 26);
  let x538: u32 = ((x536 & (0x3ffffff as u64)) as u32);
  let x539: u64 = (x537 + x522);
  let x540: u64 = (x539 >> 25);
  let x541: u32 = ((x539 & (0x1ffffff as u64)) as u32);
  let x542: u64 = (x540 + x521);
  let x543: u32 = ((x542 >> 26) as u32);
  let x544: u32 = ((x542 & (0x3ffffff as u64)) as u32);
  let x545: u64 = ((x543 as u64) + x520);
  let x546: u32 = ((x545 >> 25) as u32);
  let x547: u32 = ((x545 & (0x1ffffff as u64)) as u32);
  let x548: u64 = ((x546 as u64) + x519);
  let x549: u32 = ((x548 >> 26) as u32);
  let x550: u32 = ((x548 & (0x3ffffff as u64)) as u32);
  let x551: u64 = ((x549 as u64) + x518);
  let x552: u32 = ((x551 >> 25) as u32);
  let x553: u32 = ((x551 & (0x1ffffff as u64)) as u32);
  let x554: u64 = ((x552 as u64) * (0x13 as u64));
  let x555: u64 = ((x517 as u64) + x554);
  let x556: u32 = ((x555 >> 26) as u32);
  let x557: u32 = ((x555 & (0x3ffffff as u64)) as u32);
  let x558: u32 = (x556 + x529);
  let x559: fiat_25519_u1 = ((x558 >> 25) as fiat_25519_u1);
  let x560: u32 = (x558 & 0x1ffffff);
  let x561: u32 = ((x559 as u32) + x532);
  let x562: u64 = ((x120 as u64) * (((arg2[9]) * 0x26) as u64));
  let x563: u64 = ((x120 as u64) * (((arg2[8]) * 0x13) as u64));
  let x564: u64 = ((x120 as u64) * (((arg2[7]) * 0x26) as u64));
  let x565: u64 = ((x120 as u64) * (((arg2[6]) * 0x13) as u64));
  let x566: u64 = ((x120 as u64) * (((arg2[5]) * 0x26) as u64));
  let x567: u64 = ((x120 as u64) * (((arg2[4]) * 0x13) as u64));
  let x568: u64 = ((x120 as u64) * (((arg2[3]) * 0x26) as u64));
  let x569: u64 = ((x120 as u64) * (((arg2[2]) * 0x13) as u64));
  let x570: u64 = ((x120 as u64) * (((arg2[1]) * 0x26) as u64));
  let x571: u64 = ((x119 as u64) * (((arg2[9]) * 0x13) as u64));
  let x572: u64 = ((x119 as u64) * (((arg2[8]) * 0x13) as u64));
  let x573: u64 = ((x119 as u64) * (((arg2[7]) * 0x13) as u64));
  let x574: u64 = ((x119 as u64) * (((arg2[6]) * 0x13) as u64));
  let x575: u64 = ((x119 as u64) * (((arg2[5]) * 0x13) as u64));
  let x576: u64 = ((x119 as u64) * (((arg2[4]) * 0x13) as u64));
  let x577: u64 = ((x119 as u64) * (((arg2[3]) * 0x13) as u64));
  let x578: u64 = ((x119 as u64) * (((arg2[2]) * 0x13) as u64));
  let x579: u64 = ((x118 as u64) * (((arg2[9]) * 0x26) as u64));
  let x580: u64 = ((x118 as u64) * (((arg2[8]) * 0x13) as u64));
  let x581: u64 = ((x118 as u64) * (((arg2[7]) * 0x26) as u64));
  let x582: u64 = ((x118 as u64) * (((arg2[6]) * 0x13) as u64));
  let x583: u64 = ((x118 as u64) * (((arg2[5]) * 0x26) as u64));
  let x584: u64 = ((x118 as u64) * (((arg2[4]) * 0x13) as u64));
  let x585: u64 = ((x118 as u64) * (((arg2[3]) * 0x26) as u64));
  let x586: u64 = ((x117 as u64) * (((arg2[9]) * 0x13) as u64));
  let x587: u64 = ((x117 as u64) * (((arg2[8]) * 0x13) as u64));
  let x588: u64 = ((x117 as u64) * (((arg2[7]) * 0x13) as u64));
  let x589: u64 = ((x117 as u64) * (((arg2[6]) * 0x13) as u64));
  let x590: u64 = ((x117 as u64) * (((arg2[5]) * 0x13) as u64));
  let x591: u64 = ((x117 as u64) * (((arg2[4]) * 0x13) as u64));
  let x592: u64 = ((x116 as u64) * (((arg2[9]) * 0x26) as u64));
  let x593: u64 = ((x116 as u64) * (((arg2[8]) * 0x13) as u64));
  let x594: u64 = ((x116 as u64) * (((arg2[7]) * 0x26) as u64));
  let x595: u64 = ((x116 as u64) * (((arg2[6]) * 0x13) as u64));
  let x596: u64 = ((x116 as u64) * (((arg2[5]) * 0x26) as u64));
  let x597: u64 = ((x115 as u64) * (((arg2[9]) * 0x13) as u64));
  let x598: u64 = ((x115 as u64) * (((arg2[8]) * 0x13) as u64));
  let x599: u64 = ((x115 as u64) * (((arg2[7]) * 0x13) as u64));
  let x600: u64 = ((x115 as u64) * (((arg2[6]) * 0x13) as u64));
  let x601: u64 = ((x114 as u64) * (((arg2[9]) * 0x26) as u64));
  let x602: u64 = ((x114 as u64) * (((arg2[8]) * 0x13) as u64));
  let x603: u64 = ((x114 as u64) * (((arg2[7]) * 0x26) as u64));
  let x604: u64 = ((x113 as u64) * (((arg2[9]) * 0x13) as u64));
  let x605: u64 = ((x113 as u64) * (((arg2[8]) * 0x13) as u64));
  let x606: u64 = ((x112 as u64) * (((arg2[9]) * 0x26) as u64));
  let x607: u64 = ((x120 as u64) * ((arg2[0]) as u64));
  let x608: u64 = ((x119 as u64) * ((arg2[1]) as u64));
  let x609: u64 = ((x119 as u64) * ((arg2[0]) as u64));
  let x610: u64 = ((x118 as u64) * ((arg2[2]) as u64));
  let x611: u64 = ((x118 as u64) * (((arg2[1]) * 0x2) as u64));
  let x612: u64 = ((x118 as u64) * ((arg2[0]) as u64));
  let x613: u64 = ((x117 as u64) * ((arg2[3]) as u64));
  let x614: u64 = ((x117 as u64) * ((arg2[2]) as u64));
  let x615: u64 = ((x117 as u64) * ((arg2[1]) as u64));
  let x616: u64 = ((x117 as u64) * ((arg2[0]) as u64));
  let x617: u64 = ((x116 as u64) * ((arg2[4]) as u64));
  let x618: u64 = ((x116 as u64) * (((arg2[3]) * 0x2) as u64));
  let x619: u64 = ((x116 as u64) * ((arg2[2]) as u64));
  let x620: u64 = ((x116 as u64) * (((arg2[1]) * 0x2) as u64));
  let x621: u64 = ((x116 as u64) * ((arg2[0]) as u64));
  let x622: u64 = ((x115 as u64) * ((arg2[5]) as u64));
  let x623: u64 = ((x115 as u64) * ((arg2[4]) as u64));
  let x624: u64 = ((x115 as u64) * ((arg2[3]) as u64));
  let x625: u64 = ((x115 as u64) * ((arg2[2]) as u64));
  let x626: u64 = ((x115 as u64) * ((arg2[1]) as u64));
  let x627: u64 = ((x115 as u64) * ((arg2[0]) as u64));
  let x628: u64 = ((x114 as u64) * ((arg2[6]) as u64));
  let x629: u64 = ((x114 as u64) * (((arg2[5]) * 0x2) as u64));
  let x630: u64 = ((x114 as u64) * ((arg2[4]) as u64));
  let x631: u64 = ((x114 as u64) * (((arg2[3]) * 0x2) as u64));
  let x632: u64 = ((x114 as u64) * ((arg2[2]) as u64));
  let x633: u64 = ((x114 as u64) * (((arg2[1]) * 0x2) as u64));
  let x634: u64 = ((x114 as u64) * ((arg2[0]) as u64));
  let x635: u64 = ((x113 as u64) * ((arg2[7]) as u64));
  let x636: u64 = ((x113 as u64) * ((arg2[6]) as u64));
  let x637: u64 = ((x113 as u64) * ((arg2[5]) as u64));
  let x638: u64 = ((x113 as u64) * ((arg2[4]) as u64));
  let x639: u64 = ((x113 as u64) * ((arg2[3]) as u64));
  let x640: u64 = ((x113 as u64) * ((arg2[2]) as u64));
  let x641: u64 = ((x113 as u64) * ((arg2[1]) as u64));
  let x642: u64 = ((x113 as u64) * ((arg2[0]) as u64));
  let x643: u64 = ((x112 as u64) * ((arg2[8]) as u64));
  let x644: u64 = ((x112 as u64) * (((arg2[7]) * 0x2) as u64));
  let x645: u64 = ((x112 as u64) * ((arg2[6]) as u64));
  let x646: u64 = ((x112 as u64) * (((arg2[5]) * 0x2) as u64));
  let x647: u64 = ((x112 as u64) * ((arg2[4]) as u64));
  let x648: u64 = ((x112 as u64) * (((arg2[3]) * 0x2) as u64));
  let x649: u64 = ((x112 as u64) * ((arg2[2]) as u64));
  let x650: u64 = ((x112 as u64) * (((arg2[1]) * 0x2) as u64));
  let x651: u64 = ((x112 as u64) * ((arg2[0]) as u64));
  let x652: u64 = ((x111 as u64) * ((arg2[9]) as u64));
  let x653: u64 = ((x111 as u64) * ((arg2[8]) as u64));
  let x654: u64 = ((x111 as u64) * ((arg2[7]) as u64));
  let x655: u64 = ((x111 as u64) * ((arg2[6]) as u64));
  let x656: u64 = ((x111 as u64) * ((arg2[5]) as u64));
  let x657: u64 = ((x111 as u64) * ((arg2[4]) as u64));
  let x658: u64 = ((x111 as u64) * ((arg2[3]) as u64));
  let x659: u64 = ((x111 as u64) * ((arg2[2]) as u64));
  let x660: u64 = ((x111 as u64) * ((arg2[1]) as u64));
  let x661: u64 = ((x111 as u64) * ((arg2[0]) as u64));
  let x662: u64 = (x661 + (x606 + (x605 + (x603 + (x600 + (x596 + (x591 + (x585 + (x578 + x570)))))))));
  let x663: u64 = (x662 >> 26);
  let x664: u32 = ((x662 & (0x3ffffff as u64)) as u32);
  let x665: u64 = (x652 + (x643 + (x635 + (x628 + (x622 + (x617 + (x613 + (x610 + (x608 + x607)))))))));
  let x666: u64 = (x653 + (x644 + (x636 + (x629 + (x623 + (x618 + (x614 + (x611 + (x609 + x562)))))))));
  let x667: u64 = (x654 + (x645 + (x637 + (x630 + (x624 + (x619 + (x615 + (x612 + (x571 + x563)))))))));
  let x668: u64 = (x655 + (x646 + (x638 + (x631 + (x625 + (x620 + (x616 + (x579 + (x572 + x564)))))))));
  let x669: u64 = (x656 + (x647 + (x639 + (x632 + (x626 + (x621 + (x586 + (x580 + (x573 + x565)))))))));
  let x670: u64 = (x657 + (x648 + (x640 + (x633 + (x627 + (x592 + (x587 + (x581 + (x574 + x566)))))))));
  let x671: u64 = (x658 + (x649 + (x641 + (x634 + (x597 + (x593 + (x588 + (x582 + (x575 + x567)))))))));
  let x672: u64 = (x659 + (x650 + (x642 + (x601 + (x598 + (x594 + (x589 + (x583 + (x576 + x568)))))))));
  let x673: u64 = (x660 + (x651 + (x604 + (x602 + (x599 + (x595 + (x590 + (x584 + (x577 + x569)))))))));
  let x674: u64 = (x663 + x673);
  let x675: u64 = (x674 >> 25);
  let x676: u32 = ((x674 & (0x1ffffff as u64)) as u32);
  let x677: u64 = (x675 + x672);
  let x678: u64 = (x677 >> 26);
  let x679: u32 = ((x677 & (0x3ffffff as u64)) as u32);
  let x680: u64 = (x678 + x671);
  let x681: u64 = (x680 >> 25);
  let x682: u32 = ((x680 & (0x1ffffff as u64)) as u32);
  let x683: u64 = (x681 + x670);
  let x684: u64 = (x683 >> 26);
  let x685: u32 = ((x683 & (0x3ffffff as u64)) as u32);
  let x686: u64 = (x684 + x669);
  let x687: u64 = (x686 >> 25);
  let x688: u32 = ((x686 & (0x1ffffff as u64)) as u32);
  let x689: u64 = (x687 + x668);
  let x690: u32 = ((x689 >> 26) as u32);
  let x691: u32 = ((x689 & (0x3ffffff as u64)) as u32);
  let x692: u64 = ((x690 as u64) + x667);
  let x693: u32 = ((x692 >> 25) as u32);
  let x694: u32 = ((x692 & (0x1ffffff as u64)) as u32);
  let x695: u64 = ((x693 as u64) + x666);
  let x696: u32 = ((x695 >> 26) as u32);
  let x697: u32 = ((x695 & (0x3ffffff as u64)) as u32);
  let x698: u64 = ((x696 as u64) + x665);
  let x699: u32 = ((x698 >> 25) as u32);
  let x700: u32 = ((x698 & (0x1ffffff as u64)) as u32);
  let x701: u64 = ((x699 as u64) * (0x13 as u64));
  let x702: u64 = ((x664 as u64) + x701);
  let x703: u32 = ((x702 >> 26) as u32);
  let x704: u32 = ((x702 & (0x3ffffff as u64)) as u32);
  let x705: u32 = (x703 + x676);
  let x706: fiat_25519_u1 = ((x705 >> 25) as fiat_25519_u1);
  let x707: u32 = (x705 & 0x1ffffff);
  let x708: u32 = ((x706 as u32) + x679);
  let x709: u32 = (x263 + x410);
  let x710: u32 = (x266 + x413);
  let x711: u32 = (x267 + x414);
  let x712: u32 = (x241 + x388);
  let x713: u32 = (x244 + x391);
  let x714: u32 = (x247 + x394);
  let x715: u32 = (x250 + x397);
  let x716: u32 = (x253 + x400);
  let x717: u32 = (x256 + x403);
  let x718: u32 = (x259 + x406);
  let x719: fiat_25519_u1 = ((x709 >> 26) as fiat_25519_u1);
  let x720: u32 = (x709 & 0x3ffffff);
  let x721: u32 = ((x719 as u32) + x710);
  let x722: fiat_25519_u1 = ((x721 >> 25) as fiat_25519_u1);
  let x723: u32 = (x721 & 0x1ffffff);
  let x724: u32 = ((x722 as u32) + x711);
  let x725: u32 = (x724 >> 26);
  let x726: u32 = (x724 & 0x3ffffff);
  let x727: u32 = (x725 + x712);
  let x728: u32 = (x727 >> 25);
  let x729: u32 = (x727 & 0x1ffffff);
  let x730: u32 = (x728 + x713);
  let x731: u32 = (x730 >> 26);
  let x732: u32 = (x730 & 0x3ffffff);
  let x733: u32 = (x731 + x714);
  let x734: u32 = (x733 >> 25);
  let x735: u32 = (x733 & 0x1ffffff);
  let x736: u32 = (x734 + x715);
  let x737: u32 = (x736 >> 26);
  let x738: u32 = (x736 & 0x3ffffff);
  let x739: u32 = (x737 + x716);
  let x740: u32 = (x739 >> 25);
  let x741: u32 = (x739 & 0x1ffffff);
  let x742: u32 = (x740 + x717);
  let x743: u32 = (x742 >> 26);
  let x744: u32 = (x742 & 0x3ffffff);
  let x745: u32 = (x743 + x718);
  let x746: u32 = (x745 >> 25);
  let x747: u32 = (x745 & 0x1ffffff);
  let x748: u32 = (x746 * 0x13);
  let x749: u32 = (x720 + x748);
  let x750: fiat_25519_u1 = ((x749 >> 26) as fiat_25519_u1);
  let x751: u32 = (x749 & 0x3ffffff);
  let x752: u32 = ((x750 as u32) + x723);
  let x753: fiat_25519_u1 = ((x752 >> 25) as fiat_25519_u1);
  let x754: u32 = (x752 & 0x1ffffff);
  let x755: u32 = ((x753 as u32) + x726);
  let x756: u32 = (x557 + x704);
  let x757: u32 = (x560 + x707);
  let x758: u32 = (x561 + x708);
  let x759: u32 = (x535 + x682);
  let x760: u32 = (x538 + x685);
  let x761: u32 = (x541 + x688);
  let x762: u32 = (x544 + x691);
  let x763: u32 = (x547 + x694);
  let x764: u32 = (x550 + x697);
  let x765: u32 = (x553 + x700);
  let x766: fiat_25519_u1 = ((x756 >> 26) as fiat_25519_u1);
  let x767: u32 = (x756 & 0x3ffffff);
  let x768: u32 = ((x766 as u32) + x757);
  let x769: fiat_25519_u1 = ((x768 >> 25) as fiat_25519_u1);
  let x770: u32 = (x768 & 0x1ffffff);
  let x771: u32 = ((x769 as u32) + x758);
  let x772: u32 = (x771 >> 26);
  let x773: u32 = (x771 & 0x3ffffff);
  let x774: u32 = (x772 + x759);
  let x775: u32 = (x774 >> 25);
  let x776: u32 = (x774 & 0x1ffffff);
  let x777: u32 = (x775 + x760);
  let x778: u32 = (x777 >> 26);
  let x779: u32 = (x777 & 0x3ffffff);
  let x780: u32 = (x778 + x761);
  let x781: u32 = (x780 >> 25);
  let x782: u32 = (x780 & 0x1ffffff);
  let x783: u32 = (x781 + x762);
  let x784: u32 = (x783 >> 26);
  let x785: u32 = (x783 & 0x3ffffff);
  let x786: u32 = (x784 + x763);
  let x787: u32 = (x786 >> 25);
  let x788: u32 = (x786 & 0x1ffffff);
  let x789: u32 = (x787 + x764);
  let x790: u32 = (x789 >> 26);
  let x791: u32 = (x789 & 0x3ffffff);
  let x792: u32 = (x790 + x765);
  let x793: u32 = (x792 >> 25);
  let x794: u32 = (x792 & 0x1ffffff);
  let x795: u32 = (x793 * 0x13);
  let x796: u32 = (x767 + x795);
  let x797: fiat_25519_u1 = ((x796 >> 26) as fiat_25519_u1);
  let x798: u32 = (x796 & 0x3ffffff);
  let x799: u32 = ((x797 as u32) + x770);
  let x800: fiat_25519_u1 = ((x799 >> 25) as fiat_25519_u1);
  let x801: u32 = (x799 & 0x1ffffff);
  let x802: u32 = ((x800 as u32) + x773);
  out1[0] = x751;
  out1[1] = x754;
  out1[2] = x755;
  out1[3] = x729;
  out1[4] = x732;
  out1[5] = x735;
  out1[6] = x738;
  out1[7] = x741;
  out1[8] = x744;
  out1[9] = x747;
  out2[0] = x798;
  out2[1] = x801;
  out2[2] = x802;
  out2[3] = x776;
  out2[4] = x779;
  out2[5] = x782;
  out2[6] = x785;
  out2[7] = x788;
  out2[8] = x791;
  out2[9] = x794;
}

/// The function fiat_25519_jumpdivstep_precomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
#[inline]
pub fn fiat_25519_jumpdivstep_precomp(out1: &mut fiat_25519_tight_field_element) -> () {
  out1[0] = 0x6c8937;
  out1[1] = 0x1c1855b;
  out1[2] = 0x116482e;
  out1[3] = 0x8d3b28;
  out1[4] = 0x319ca54;
  out1[5] = 0xc33351;
  out1[6] = 0x2c73b3b;
  out1[7] = 0x16b27ac;
  out1[8] = 0x3e62c1d;
  out1[9] = 0x1b8b66;
}

/// The function fiat_25519_jumpdivstep_precomp_hd returns the precomputed value for the (half-delta) jump-version of Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
#[inline]
pub fn fiat_25519_jumpdivstep_precomp_hd(out1: &mut fiat_25519_tight_field_element) -> () {
  out1[0] = 0xdd407e;
  out1[1] = 0xf99e2;
  out1[2] = 0x992cad;
  out1[3] = 0x11e7e3a;
  out1[4] = 0x242a8c6;
  out1[5] = 0x16b14;
  out1[6] = 0x18d9127;
  out1[7] = 0x1b830ab;
  out1[8] = 0x22c905;
  out1[9] = 0x111a765;
}

/// The function fiat_25519_carry_scmul_121666 multiplies a field element by 121666 and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (121666 * eval arg1) mod m
///
#[inline]
pub fn fiat_25519_carry_scmul_121666(out1: &mut fiat_25519_tight_field_element, arg1: &fiat_25519_loose_field_element) -> () {
  let x1: u64 = ((0x1db42 as u64) * ((arg1[9]) as u64));
  let x2: u64 = ((0x1db42 as u64) * ((arg1[8]) as u64));
  let x3: u64 = ((0x1db42 as u64) * ((arg1[7]) as u64));
  let x4: u64 = ((0x1db42 as u64) * ((arg1[6]) as u64));
  let x5: u64 = ((0x1db42 as u64) * ((arg1[5]) as u64));
  let x6: u64 = ((0x1db42 as u64) * ((arg1[4]) as u64));
  let x7: u64 = ((0x1db42 as u64) * ((arg1[3]) as u64));
  let x8: u64 = ((0x1db42 as u64) * ((arg1[2]) as u64));
  let x9: u64 = ((0x1db42 as u64) * ((arg1[1]) as u64));
  let x10: u64 = ((0x1db42 as u64) * ((arg1[0]) as u64));
  let x11: u32 = ((x10 >> 26) as u32);
  let x12: u32 = ((x10 & (0x3ffffff as u64)) as u32);
  let x13: u64 = ((x11 as u64) + x9);
  let x14: u32 = ((x13 >> 25) as u32);
  let x15: u32 = ((x13 & (0x1ffffff as u64)) as u32);
  let x16: u64 = ((x14 as u64) + x8);
  let x17: u32 = ((x16 >> 26) as u32);
  let x18: u32 = ((x16 & (0x3ffffff as u64)) as u32);
  let x19: u64 = ((x17 as u64) + x7);
  let x20: u32 = ((x19 >> 25) as u32);
  let x21: u32 = ((x19 & (0x1ffffff as u64)) as u32);
  let x22: u64 = ((x20 as u64) + x6);
  let x23: u32 = ((x22 >> 26) as u32);
  let x24: u32 = ((x22 & (0x3ffffff as u64)) as u32);
  let x25: u64 = ((x23 as u64) + x5);
  let x26: u32 = ((x25 >> 25) as u32);
  let x27: u32 = ((x25 & (0x1ffffff as u64)) as u32);
  let x28: u64 = ((x26 as u64) + x4);
  let x29: u32 = ((x28 >> 26) as u32);
  let x30: u32 = ((x28 & (0x3ffffff as u64)) as u32);
  let x31: u64 = ((x29 as u64) + x3);
  let x32: u32 = ((x31 >> 25) as u32);
  let x33: u32 = ((x31 & (0x1ffffff as u64)) as u32);
  let x34: u64 = ((x32 as u64) + x2);
  let x35: u32 = ((x34 >> 26) as u32);
  let x36: u32 = ((x34 & (0x3ffffff as u64)) as u32);
  let x37: u64 = ((x35 as u64) + x1);
  let x38: u32 = ((x37 >> 25) as u32);
  let x39: u32 = ((x37 & (0x1ffffff as u64)) as u32);
  let x40: u32 = (x38 * 0x13);
  let x41: u32 = (x12 + x40);
  let x42: fiat_25519_u1 = ((x41 >> 26) as fiat_25519_u1);
  let x43: u32 = (x41 & 0x3ffffff);
  let x44: u32 = ((x42 as u32) + x15);
  let x45: fiat_25519_u1 = ((x44 >> 25) as fiat_25519_u1);
  let x46: u32 = (x44 & 0x1ffffff);
  let x47: u32 = ((x45 as u32) + x18);
  out1[0] = x43;
  out1[1] = x46;
  out1[2] = x47;
  out1[3] = x21;
  out1[4] = x24;
  out1[5] = x27;
  out1[6] = x30;
  out1[7] = x33;
  out1[8] = x36;
  out1[9] = x39;
}
