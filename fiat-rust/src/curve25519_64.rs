//! Autogenerated: src/ExtractionOCaml/unsaturated_solinas --lang Rust 25519 64 '(auto)' '2^255 - 19' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes one word_to_solina msat sat_from_bytes divstep divstep_precomp twos_complement_word_full_divstep asr_mw_sub2 sat_add word_sat_mul jumpdivstep_precomp outer_loop_body carry_scmul121666
//! curve description: 25519
//! machine_wordsize = 64 (from "64")
//! requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes, one, word_to_solina, msat, sat_from_bytes, divstep, divstep_precomp, twos_complement_word_full_divstep, asr_mw_sub2, sat_add, word_sat_mul, jumpdivstep_precomp, outer_loop_body, carry_scmul121666
//! n = 5 (from "(auto)")
//! s-c = 2^255 - [(1, 19)] (from "2^255 - 19")
//! tight_bounds_multiplier = 1 (from "")
//!
//! Computed values:
//! carry_chain = [0, 1, 2, 3, 4, 0, 1]
//! eval z = z[0] + (z[1] << 51) + (z[2] << 102) + (z[3] << 153) + (z[4] << 204)
//! bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248)
//! balance = [0xfffffffffffda, 0xffffffffffffe, 0xffffffffffffe, 0xffffffffffffe, 0xffffffffffffe]

#![allow(unused_parens)]
#[allow(non_camel_case_types)]

pub type fiat_25519_u1 = u8;
pub type fiat_25519_i1 = i8;
pub type fiat_25519_u2 = u8;
pub type fiat_25519_i2 = i8;


/// The function fiat_25519_addcarryx_u64 is an addition with carry.
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^64
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_addcarryx_u64(out1: &mut u64, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u64, arg3: u64) -> () {
  let x1: u128 = (((arg1 as u128) + (arg2 as u128)) + (arg3 as u128));
  let x2: u64 = ((x1 & (0xffffffffffffffff as u128)) as u64);
  let x3: fiat_25519_u1 = ((x1 >> 64) as fiat_25519_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_subborrowx_u64 is a subtraction with borrow.
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^64
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_subborrowx_u64(out1: &mut u64, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u64, arg3: u64) -> () {
  let x1: i128 = (((arg2 as i128) - (arg1 as i128)) - (arg3 as i128));
  let x2: fiat_25519_i1 = ((x1 >> 64) as fiat_25519_i1);
  let x3: u64 = ((x1 & (0xffffffffffffffff as i128)) as u64);
  *out1 = x3;
  *out2 = (((0x0 as fiat_25519_i2) - (x2 as fiat_25519_i2)) as fiat_25519_u1);
}

/// The function fiat_25519_addcarryx_u51 is an addition with carry.
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^51
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^51⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x7ffffffffffff]
///   arg3: [0x0 ~> 0x7ffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x7ffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_addcarryx_u51(out1: &mut u64, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u64, arg3: u64) -> () {
  let x1: u64 = (((arg1 as u64) + arg2) + arg3);
  let x2: u64 = (x1 & 0x7ffffffffffff);
  let x3: fiat_25519_u1 = ((x1 >> 51) as fiat_25519_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_subborrowx_u51 is a subtraction with borrow.
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^51
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^51⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x7ffffffffffff]
///   arg3: [0x0 ~> 0x7ffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x7ffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_subborrowx_u51(out1: &mut u64, out2: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: u64, arg3: u64) -> () {
  let x1: i64 = ((((((arg2 as i128) - (arg1 as i128)) as i64) as i128) - (arg3 as i128)) as i64);
  let x2: fiat_25519_i1 = ((x1 >> 51) as fiat_25519_i1);
  let x3: u64 = (((x1 as i128) & (0x7ffffffffffff as i128)) as u64);
  *out1 = x3;
  *out2 = (((0x0 as fiat_25519_i2) - (x2 as fiat_25519_i2)) as fiat_25519_u1);
}

/// The function fiat_25519_mulx_u64 is a multiplication, returning the full double-width result.
/// Postconditions:
///   out1 = (arg1 * arg2) mod 2^64
///   out2 = ⌊arg1 * arg2 / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_25519_mulx_u64(out1: &mut u64, out2: &mut u64, arg1: u64, arg2: u64) -> () {
  let x1: u128 = ((arg1 as u128) * (arg2 as u128));
  let x2: u64 = ((x1 & (0xffffffffffffffff as u128)) as u64);
  let x3: u64 = ((x1 >> 64) as u64);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_25519_cmovznz_u1 is a single-word conditional move.
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1]
///   arg3: [0x0 ~> 0x1]
/// Output Bounds:
///   out1: [0x0 ~> 0x1]
#[inline]
pub fn fiat_25519_cmovznz_u1(out1: &mut fiat_25519_u1, arg1: fiat_25519_u1, arg2: fiat_25519_u1, arg3: fiat_25519_u1) -> () {
  let x1: fiat_25519_u1 = (!(!arg1));
  let x2: fiat_25519_u1 = ((((((0x0 as fiat_25519_i2) - (x1 as fiat_25519_i2)) as fiat_25519_i1) as fiat_25519_i2) & (0x1 as fiat_25519_i2)) as fiat_25519_u1);
  let x3: fiat_25519_u1 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_25519_cmovznz_u64 is a single-word conditional move.
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_25519_cmovznz_u64(out1: &mut u64, arg1: fiat_25519_u1, arg2: u64, arg3: u64) -> () {
  let x1: fiat_25519_u1 = (!(!arg1));
  let x2: u64 = ((((((0x0 as fiat_25519_i2) - (x1 as fiat_25519_i2)) as fiat_25519_i1) as i128) & (0xffffffffffffffff as i128)) as u64);
  let x3: u64 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_25519_carry_mul multiplies two field elements and reduces the result.
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg2) mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
///   arg2: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_carry_mul(out1: &mut [u64; 5], arg1: &[u64; 5], arg2: &[u64; 5]) -> () {
  let x1: u128 = (((arg1[4]) as u128) * (((arg2[4]) * 0x13) as u128));
  let x2: u128 = (((arg1[4]) as u128) * (((arg2[3]) * 0x13) as u128));
  let x3: u128 = (((arg1[4]) as u128) * (((arg2[2]) * 0x13) as u128));
  let x4: u128 = (((arg1[4]) as u128) * (((arg2[1]) * 0x13) as u128));
  let x5: u128 = (((arg1[3]) as u128) * (((arg2[4]) * 0x13) as u128));
  let x6: u128 = (((arg1[3]) as u128) * (((arg2[3]) * 0x13) as u128));
  let x7: u128 = (((arg1[3]) as u128) * (((arg2[2]) * 0x13) as u128));
  let x8: u128 = (((arg1[2]) as u128) * (((arg2[4]) * 0x13) as u128));
  let x9: u128 = (((arg1[2]) as u128) * (((arg2[3]) * 0x13) as u128));
  let x10: u128 = (((arg1[1]) as u128) * (((arg2[4]) * 0x13) as u128));
  let x11: u128 = (((arg1[4]) as u128) * ((arg2[0]) as u128));
  let x12: u128 = (((arg1[3]) as u128) * ((arg2[1]) as u128));
  let x13: u128 = (((arg1[3]) as u128) * ((arg2[0]) as u128));
  let x14: u128 = (((arg1[2]) as u128) * ((arg2[2]) as u128));
  let x15: u128 = (((arg1[2]) as u128) * ((arg2[1]) as u128));
  let x16: u128 = (((arg1[2]) as u128) * ((arg2[0]) as u128));
  let x17: u128 = (((arg1[1]) as u128) * ((arg2[3]) as u128));
  let x18: u128 = (((arg1[1]) as u128) * ((arg2[2]) as u128));
  let x19: u128 = (((arg1[1]) as u128) * ((arg2[1]) as u128));
  let x20: u128 = (((arg1[1]) as u128) * ((arg2[0]) as u128));
  let x21: u128 = (((arg1[0]) as u128) * ((arg2[4]) as u128));
  let x22: u128 = (((arg1[0]) as u128) * ((arg2[3]) as u128));
  let x23: u128 = (((arg1[0]) as u128) * ((arg2[2]) as u128));
  let x24: u128 = (((arg1[0]) as u128) * ((arg2[1]) as u128));
  let x25: u128 = (((arg1[0]) as u128) * ((arg2[0]) as u128));
  let x26: u128 = (x25 + (x10 + (x9 + (x7 + x4))));
  let x27: u64 = ((x26 >> 51) as u64);
  let x28: u64 = ((x26 & (0x7ffffffffffff as u128)) as u64);
  let x29: u128 = (x21 + (x17 + (x14 + (x12 + x11))));
  let x30: u128 = (x22 + (x18 + (x15 + (x13 + x1))));
  let x31: u128 = (x23 + (x19 + (x16 + (x5 + x2))));
  let x32: u128 = (x24 + (x20 + (x8 + (x6 + x3))));
  let x33: u128 = ((x27 as u128) + x32);
  let x34: u64 = ((x33 >> 51) as u64);
  let x35: u64 = ((x33 & (0x7ffffffffffff as u128)) as u64);
  let x36: u128 = ((x34 as u128) + x31);
  let x37: u64 = ((x36 >> 51) as u64);
  let x38: u64 = ((x36 & (0x7ffffffffffff as u128)) as u64);
  let x39: u128 = ((x37 as u128) + x30);
  let x40: u64 = ((x39 >> 51) as u64);
  let x41: u64 = ((x39 & (0x7ffffffffffff as u128)) as u64);
  let x42: u128 = ((x40 as u128) + x29);
  let x43: u64 = ((x42 >> 51) as u64);
  let x44: u64 = ((x42 & (0x7ffffffffffff as u128)) as u64);
  let x45: u64 = (x43 * 0x13);
  let x46: u64 = (x28 + x45);
  let x47: u64 = (x46 >> 51);
  let x48: u64 = (x46 & 0x7ffffffffffff);
  let x49: u64 = (x47 + x35);
  let x50: fiat_25519_u1 = ((x49 >> 51) as fiat_25519_u1);
  let x51: u64 = (x49 & 0x7ffffffffffff);
  let x52: u64 = ((x50 as u64) + x38);
  out1[0] = x48;
  out1[1] = x51;
  out1[2] = x52;
  out1[3] = x41;
  out1[4] = x44;
}

/// The function fiat_25519_carry_square squares a field element and reduces the result.
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg1) mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_carry_square(out1: &mut [u64; 5], arg1: &[u64; 5]) -> () {
  let x1: u64 = ((arg1[4]) * 0x13);
  let x2: u64 = (x1 * 0x2);
  let x3: u64 = ((arg1[4]) * 0x2);
  let x4: u64 = ((arg1[3]) * 0x13);
  let x5: u64 = (x4 * 0x2);
  let x6: u64 = ((arg1[3]) * 0x2);
  let x7: u64 = ((arg1[2]) * 0x2);
  let x8: u64 = ((arg1[1]) * 0x2);
  let x9: u128 = (((arg1[4]) as u128) * (x1 as u128));
  let x10: u128 = (((arg1[3]) as u128) * (x2 as u128));
  let x11: u128 = (((arg1[3]) as u128) * (x4 as u128));
  let x12: u128 = (((arg1[2]) as u128) * (x2 as u128));
  let x13: u128 = (((arg1[2]) as u128) * (x5 as u128));
  let x14: u128 = (((arg1[2]) as u128) * ((arg1[2]) as u128));
  let x15: u128 = (((arg1[1]) as u128) * (x2 as u128));
  let x16: u128 = (((arg1[1]) as u128) * (x6 as u128));
  let x17: u128 = (((arg1[1]) as u128) * (x7 as u128));
  let x18: u128 = (((arg1[1]) as u128) * ((arg1[1]) as u128));
  let x19: u128 = (((arg1[0]) as u128) * (x3 as u128));
  let x20: u128 = (((arg1[0]) as u128) * (x6 as u128));
  let x21: u128 = (((arg1[0]) as u128) * (x7 as u128));
  let x22: u128 = (((arg1[0]) as u128) * (x8 as u128));
  let x23: u128 = (((arg1[0]) as u128) * ((arg1[0]) as u128));
  let x24: u128 = (x23 + (x15 + x13));
  let x25: u64 = ((x24 >> 51) as u64);
  let x26: u64 = ((x24 & (0x7ffffffffffff as u128)) as u64);
  let x27: u128 = (x19 + (x16 + x14));
  let x28: u128 = (x20 + (x17 + x9));
  let x29: u128 = (x21 + (x18 + x10));
  let x30: u128 = (x22 + (x12 + x11));
  let x31: u128 = ((x25 as u128) + x30);
  let x32: u64 = ((x31 >> 51) as u64);
  let x33: u64 = ((x31 & (0x7ffffffffffff as u128)) as u64);
  let x34: u128 = ((x32 as u128) + x29);
  let x35: u64 = ((x34 >> 51) as u64);
  let x36: u64 = ((x34 & (0x7ffffffffffff as u128)) as u64);
  let x37: u128 = ((x35 as u128) + x28);
  let x38: u64 = ((x37 >> 51) as u64);
  let x39: u64 = ((x37 & (0x7ffffffffffff as u128)) as u64);
  let x40: u128 = ((x38 as u128) + x27);
  let x41: u64 = ((x40 >> 51) as u64);
  let x42: u64 = ((x40 & (0x7ffffffffffff as u128)) as u64);
  let x43: u64 = (x41 * 0x13);
  let x44: u64 = (x26 + x43);
  let x45: u64 = (x44 >> 51);
  let x46: u64 = (x44 & 0x7ffffffffffff);
  let x47: u64 = (x45 + x33);
  let x48: fiat_25519_u1 = ((x47 >> 51) as fiat_25519_u1);
  let x49: u64 = (x47 & 0x7ffffffffffff);
  let x50: u64 = ((x48 as u64) + x36);
  out1[0] = x46;
  out1[1] = x49;
  out1[2] = x50;
  out1[3] = x39;
  out1[4] = x42;
}

/// The function fiat_25519_carry reduces a field element.
/// Postconditions:
///   eval out1 mod m = eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_carry(out1: &mut [u64; 5], arg1: &[u64; 5]) -> () {
  let x1: u64 = (arg1[0]);
  let x2: u64 = ((x1 >> 51) + (arg1[1]));
  let x3: u64 = ((x2 >> 51) + (arg1[2]));
  let x4: u64 = ((x3 >> 51) + (arg1[3]));
  let x5: u64 = ((x4 >> 51) + (arg1[4]));
  let x6: u64 = ((x1 & 0x7ffffffffffff) + ((x5 >> 51) * 0x13));
  let x7: u64 = ((((x6 >> 51) as fiat_25519_u1) as u64) + (x2 & 0x7ffffffffffff));
  let x8: u64 = (x6 & 0x7ffffffffffff);
  let x9: u64 = (x7 & 0x7ffffffffffff);
  let x10: u64 = ((((x7 >> 51) as fiat_25519_u1) as u64) + (x3 & 0x7ffffffffffff));
  let x11: u64 = (x4 & 0x7ffffffffffff);
  let x12: u64 = (x5 & 0x7ffffffffffff);
  out1[0] = x8;
  out1[1] = x9;
  out1[2] = x10;
  out1[3] = x11;
  out1[4] = x12;
}

/// The function fiat_25519_add adds two field elements.
/// Postconditions:
///   eval out1 mod m = (eval arg1 + eval arg2) mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
///   arg2: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
#[inline]
pub fn fiat_25519_add(out1: &mut [u64; 5], arg1: &[u64; 5], arg2: &[u64; 5]) -> () {
  let x1: u64 = ((arg1[0]) + (arg2[0]));
  let x2: u64 = ((arg1[1]) + (arg2[1]));
  let x3: u64 = ((arg1[2]) + (arg2[2]));
  let x4: u64 = ((arg1[3]) + (arg2[3]));
  let x5: u64 = ((arg1[4]) + (arg2[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_25519_sub subtracts two field elements.
/// Postconditions:
///   eval out1 mod m = (eval arg1 - eval arg2) mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
///   arg2: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
#[inline]
pub fn fiat_25519_sub(out1: &mut [u64; 5], arg1: &[u64; 5], arg2: &[u64; 5]) -> () {
  let x1: u64 = ((0xfffffffffffda + (arg1[0])) - (arg2[0]));
  let x2: u64 = ((0xffffffffffffe + (arg1[1])) - (arg2[1]));
  let x3: u64 = ((0xffffffffffffe + (arg1[2])) - (arg2[2]));
  let x4: u64 = ((0xffffffffffffe + (arg1[3])) - (arg2[3]));
  let x5: u64 = ((0xffffffffffffe + (arg1[4])) - (arg2[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_25519_opp negates a field element.
/// Postconditions:
///   eval out1 mod m = -eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
#[inline]
pub fn fiat_25519_opp(out1: &mut [u64; 5], arg1: &[u64; 5]) -> () {
  let x1: u64 = (0xfffffffffffda - (arg1[0]));
  let x2: u64 = (0xffffffffffffe - (arg1[1]));
  let x3: u64 = (0xffffffffffffe - (arg1[2]));
  let x4: u64 = (0xffffffffffffe - (arg1[3]));
  let x5: u64 = (0xffffffffffffe - (arg1[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_25519_selectznz is a multi-limb conditional select.
/// Postconditions:
///   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_selectznz(out1: &mut [u64; 5], arg1: fiat_25519_u1, arg2: &[u64; 5], arg3: &[u64; 5]) -> () {
  let mut x1: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x5, arg1, (arg2[4]), (arg3[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_25519_to_bytes serializes a field element to bytes in little-endian order.
/// Postconditions:
///   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
#[inline]
pub fn fiat_25519_to_bytes(out1: &mut [u8; 32], arg1: &[u64; 5]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u51(&mut x1, &mut x2, 0x0, (arg1[0]), 0x7ffffffffffed);
  let mut x3: u64 = 0;
  let mut x4: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u51(&mut x3, &mut x4, x2, (arg1[1]), 0x7ffffffffffff);
  let mut x5: u64 = 0;
  let mut x6: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u51(&mut x5, &mut x6, x4, (arg1[2]), 0x7ffffffffffff);
  let mut x7: u64 = 0;
  let mut x8: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u51(&mut x7, &mut x8, x6, (arg1[3]), 0x7ffffffffffff);
  let mut x9: u64 = 0;
  let mut x10: fiat_25519_u1 = 0;
  fiat_25519_subborrowx_u51(&mut x9, &mut x10, x8, (arg1[4]), 0x7ffffffffffff);
  let mut x11: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x11, x10, (0x0 as u64), 0xffffffffffffffff);
  let mut x12: u64 = 0;
  let mut x13: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u51(&mut x12, &mut x13, 0x0, x1, (x11 & 0x7ffffffffffed));
  let mut x14: u64 = 0;
  let mut x15: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u51(&mut x14, &mut x15, x13, x3, (x11 & 0x7ffffffffffff));
  let mut x16: u64 = 0;
  let mut x17: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u51(&mut x16, &mut x17, x15, x5, (x11 & 0x7ffffffffffff));
  let mut x18: u64 = 0;
  let mut x19: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u51(&mut x18, &mut x19, x17, x7, (x11 & 0x7ffffffffffff));
  let mut x20: u64 = 0;
  let mut x21: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u51(&mut x20, &mut x21, x19, x9, (x11 & 0x7ffffffffffff));
  let x22: u64 = (x20 << 4);
  let x23: u64 = (x18 * (0x2 as u64));
  let x24: u64 = (x16 << 6);
  let x25: u64 = (x14 << 3);
  let x26: u8 = ((x12 & (0xff as u64)) as u8);
  let x27: u64 = (x12 >> 8);
  let x28: u8 = ((x27 & (0xff as u64)) as u8);
  let x29: u64 = (x27 >> 8);
  let x30: u8 = ((x29 & (0xff as u64)) as u8);
  let x31: u64 = (x29 >> 8);
  let x32: u8 = ((x31 & (0xff as u64)) as u8);
  let x33: u64 = (x31 >> 8);
  let x34: u8 = ((x33 & (0xff as u64)) as u8);
  let x35: u64 = (x33 >> 8);
  let x36: u8 = ((x35 & (0xff as u64)) as u8);
  let x37: u8 = ((x35 >> 8) as u8);
  let x38: u64 = (x25 + (x37 as u64));
  let x39: u8 = ((x38 & (0xff as u64)) as u8);
  let x40: u64 = (x38 >> 8);
  let x41: u8 = ((x40 & (0xff as u64)) as u8);
  let x42: u64 = (x40 >> 8);
  let x43: u8 = ((x42 & (0xff as u64)) as u8);
  let x44: u64 = (x42 >> 8);
  let x45: u8 = ((x44 & (0xff as u64)) as u8);
  let x46: u64 = (x44 >> 8);
  let x47: u8 = ((x46 & (0xff as u64)) as u8);
  let x48: u64 = (x46 >> 8);
  let x49: u8 = ((x48 & (0xff as u64)) as u8);
  let x50: u8 = ((x48 >> 8) as u8);
  let x51: u64 = (x24 + (x50 as u64));
  let x52: u8 = ((x51 & (0xff as u64)) as u8);
  let x53: u64 = (x51 >> 8);
  let x54: u8 = ((x53 & (0xff as u64)) as u8);
  let x55: u64 = (x53 >> 8);
  let x56: u8 = ((x55 & (0xff as u64)) as u8);
  let x57: u64 = (x55 >> 8);
  let x58: u8 = ((x57 & (0xff as u64)) as u8);
  let x59: u64 = (x57 >> 8);
  let x60: u8 = ((x59 & (0xff as u64)) as u8);
  let x61: u64 = (x59 >> 8);
  let x62: u8 = ((x61 & (0xff as u64)) as u8);
  let x63: u64 = (x61 >> 8);
  let x64: u8 = ((x63 & (0xff as u64)) as u8);
  let x65: fiat_25519_u1 = ((x63 >> 8) as fiat_25519_u1);
  let x66: u64 = (x23 + (x65 as u64));
  let x67: u8 = ((x66 & (0xff as u64)) as u8);
  let x68: u64 = (x66 >> 8);
  let x69: u8 = ((x68 & (0xff as u64)) as u8);
  let x70: u64 = (x68 >> 8);
  let x71: u8 = ((x70 & (0xff as u64)) as u8);
  let x72: u64 = (x70 >> 8);
  let x73: u8 = ((x72 & (0xff as u64)) as u8);
  let x74: u64 = (x72 >> 8);
  let x75: u8 = ((x74 & (0xff as u64)) as u8);
  let x76: u64 = (x74 >> 8);
  let x77: u8 = ((x76 & (0xff as u64)) as u8);
  let x78: u8 = ((x76 >> 8) as u8);
  let x79: u64 = (x22 + (x78 as u64));
  let x80: u8 = ((x79 & (0xff as u64)) as u8);
  let x81: u64 = (x79 >> 8);
  let x82: u8 = ((x81 & (0xff as u64)) as u8);
  let x83: u64 = (x81 >> 8);
  let x84: u8 = ((x83 & (0xff as u64)) as u8);
  let x85: u64 = (x83 >> 8);
  let x86: u8 = ((x85 & (0xff as u64)) as u8);
  let x87: u64 = (x85 >> 8);
  let x88: u8 = ((x87 & (0xff as u64)) as u8);
  let x89: u64 = (x87 >> 8);
  let x90: u8 = ((x89 & (0xff as u64)) as u8);
  let x91: u8 = ((x89 >> 8) as u8);
  out1[0] = x26;
  out1[1] = x28;
  out1[2] = x30;
  out1[3] = x32;
  out1[4] = x34;
  out1[5] = x36;
  out1[6] = x39;
  out1[7] = x41;
  out1[8] = x43;
  out1[9] = x45;
  out1[10] = x47;
  out1[11] = x49;
  out1[12] = x52;
  out1[13] = x54;
  out1[14] = x56;
  out1[15] = x58;
  out1[16] = x60;
  out1[17] = x62;
  out1[18] = x64;
  out1[19] = x67;
  out1[20] = x69;
  out1[21] = x71;
  out1[22] = x73;
  out1[23] = x75;
  out1[24] = x77;
  out1[25] = x80;
  out1[26] = x82;
  out1[27] = x84;
  out1[28] = x86;
  out1[29] = x88;
  out1[30] = x90;
  out1[31] = x91;
}

/// The function fiat_25519_from_bytes deserializes a field element from bytes in little-endian order.
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_from_bytes(out1: &mut [u64; 5], arg1: &[u8; 32]) -> () {
  let x1: u64 = (((arg1[31]) as u64) << 44);
  let x2: u64 = (((arg1[30]) as u64) << 36);
  let x3: u64 = (((arg1[29]) as u64) << 28);
  let x4: u64 = (((arg1[28]) as u64) << 20);
  let x5: u64 = (((arg1[27]) as u64) << 12);
  let x6: u64 = (((arg1[26]) as u64) << 4);
  let x7: u64 = (((arg1[25]) as u64) << 47);
  let x8: u64 = (((arg1[24]) as u64) << 39);
  let x9: u64 = (((arg1[23]) as u64) << 31);
  let x10: u64 = (((arg1[22]) as u64) << 23);
  let x11: u64 = (((arg1[21]) as u64) << 15);
  let x12: u64 = (((arg1[20]) as u64) << 7);
  let x13: u64 = (((arg1[19]) as u64) << 50);
  let x14: u64 = (((arg1[18]) as u64) << 42);
  let x15: u64 = (((arg1[17]) as u64) << 34);
  let x16: u64 = (((arg1[16]) as u64) << 26);
  let x17: u64 = (((arg1[15]) as u64) << 18);
  let x18: u64 = (((arg1[14]) as u64) << 10);
  let x19: u64 = (((arg1[13]) as u64) << 2);
  let x20: u64 = (((arg1[12]) as u64) << 45);
  let x21: u64 = (((arg1[11]) as u64) << 37);
  let x22: u64 = (((arg1[10]) as u64) << 29);
  let x23: u64 = (((arg1[9]) as u64) << 21);
  let x24: u64 = (((arg1[8]) as u64) << 13);
  let x25: u64 = (((arg1[7]) as u64) << 5);
  let x26: u64 = (((arg1[6]) as u64) << 48);
  let x27: u64 = (((arg1[5]) as u64) << 40);
  let x28: u64 = (((arg1[4]) as u64) << 32);
  let x29: u64 = (((arg1[3]) as u64) << 24);
  let x30: u64 = (((arg1[2]) as u64) << 16);
  let x31: u64 = (((arg1[1]) as u64) << 8);
  let x32: u8 = (arg1[0]);
  let x33: u64 = (x31 + (x32 as u64));
  let x34: u64 = (x30 + x33);
  let x35: u64 = (x29 + x34);
  let x36: u64 = (x28 + x35);
  let x37: u64 = (x27 + x36);
  let x38: u64 = (x26 + x37);
  let x39: u64 = (x38 & 0x7ffffffffffff);
  let x40: u8 = ((x38 >> 51) as u8);
  let x41: u64 = (x25 + (x40 as u64));
  let x42: u64 = (x24 + x41);
  let x43: u64 = (x23 + x42);
  let x44: u64 = (x22 + x43);
  let x45: u64 = (x21 + x44);
  let x46: u64 = (x20 + x45);
  let x47: u64 = (x46 & 0x7ffffffffffff);
  let x48: u8 = ((x46 >> 51) as u8);
  let x49: u64 = (x19 + (x48 as u64));
  let x50: u64 = (x18 + x49);
  let x51: u64 = (x17 + x50);
  let x52: u64 = (x16 + x51);
  let x53: u64 = (x15 + x52);
  let x54: u64 = (x14 + x53);
  let x55: u64 = (x13 + x54);
  let x56: u64 = (x55 & 0x7ffffffffffff);
  let x57: u8 = ((x55 >> 51) as u8);
  let x58: u64 = (x12 + (x57 as u64));
  let x59: u64 = (x11 + x58);
  let x60: u64 = (x10 + x59);
  let x61: u64 = (x9 + x60);
  let x62: u64 = (x8 + x61);
  let x63: u64 = (x7 + x62);
  let x64: u64 = (x63 & 0x7ffffffffffff);
  let x65: u8 = ((x63 >> 51) as u8);
  let x66: u64 = (x6 + (x65 as u64));
  let x67: u64 = (x5 + x66);
  let x68: u64 = (x4 + x67);
  let x69: u64 = (x3 + x68);
  let x70: u64 = (x2 + x69);
  let x71: u64 = (x1 + x70);
  out1[0] = x39;
  out1[1] = x47;
  out1[2] = x56;
  out1[3] = x64;
  out1[4] = x71;
}

/// The function fiat_25519_one returns the field element one.
/// Postconditions:
///   eval out1 mod m = 1 mod m
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_one(out1: &mut [fiat_25519_u1; 5]) -> () {
  out1[0] = 0x1;
  out1[1] = 0x0;
  out1[2] = 0x0;
  out1[3] = 0x0;
  out1[4] = 0x0;
}

/// The function fiat_25519_word_to_solina computes a divstep on wordsized integers.
/// Postconditions:
///   eval out1 = arg1
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_word_to_solina(out1: &mut [u64; 5], arg1: u64) -> () {
  let x1: fiat_25519_u1 = ((arg1 >> 63) as fiat_25519_u1);
  let x2: u64 = (((((!arg1) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x3: u64 = (arg1 >> 51);
  let x4: u64 = (arg1 & 0x7ffffffffffff);
  let x5: u64 = (x2 >> 51);
  let x6: u64 = (x2 & 0x7ffffffffffff);
  let x7: u64 = (0xfffffffffffda - x6);
  let x8: u64 = (0xffffffffffffe - x5);
  let x9: fiat_25519_u1 = ((x7 >> 51) as fiat_25519_u1);
  let x10: u64 = (x7 & 0x7ffffffffffff);
  let x11: u64 = ((x9 as u64) + x8);
  let x12: u64 = (x11 & 0x7ffffffffffff);
  let x13: u64 = (x10 + 0x13);
  let x14: fiat_25519_u1 = ((x13 >> 51) as fiat_25519_u1);
  let x15: u64 = (x13 & 0x7ffffffffffff);
  let x16: u64 = ((x14 as u64) + x12);
  let x17: fiat_25519_u1 = ((x16 >> 51) as fiat_25519_u1);
  let x18: u64 = (x16 & 0x7ffffffffffff);
  let x19: u64 = ((x17 as u64) + 0x7ffffffffffff);
  let mut x20: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x20, x1, x4, x15);
  let mut x21: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x21, x1, x3, x18);
  let mut x22: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x22, x1, (0x0 as u64), x19);
  let mut x23: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x23, x1, (0x0 as u64), 0x7ffffffffffff);
  let mut x24: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x24, x1, (0x0 as u64), 0x7ffffffffffff);
  out1[0] = x20;
  out1[1] = x21;
  out1[2] = x22;
  out1[3] = x23;
  out1[4] = x24;
}

/// The function fiat_25519_msat returns the saturated (signed) representation of the prime modulus.
/// Postconditions:
///   twos_complement_eval out1 = m
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_msat(out1: &mut [u64; 5]) -> () {
  out1[0] = 0xffffffffffffffed;
  out1[1] = 0xffffffffffffffff;
  out1[2] = 0xffffffffffffffff;
  out1[3] = 0x7fffffffffffffff;
  out1[4] = (0x0 as u64);
}

/// The function fiat_25519_sat_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_sat_from_bytes(out1: &mut [u64; 5], arg1: &[u8; 32]) -> () {
  let x1: u64 = (((arg1[31]) as u64) << 56);
  let x2: u64 = (((arg1[30]) as u64) << 48);
  let x3: u64 = (((arg1[29]) as u64) << 40);
  let x4: u64 = (((arg1[28]) as u64) << 32);
  let x5: u64 = (((arg1[27]) as u64) << 24);
  let x6: u64 = (((arg1[26]) as u64) << 16);
  let x7: u64 = (((arg1[25]) as u64) << 8);
  let x8: u8 = (arg1[24]);
  let x9: u64 = (((arg1[23]) as u64) << 56);
  let x10: u64 = (((arg1[22]) as u64) << 48);
  let x11: u64 = (((arg1[21]) as u64) << 40);
  let x12: u64 = (((arg1[20]) as u64) << 32);
  let x13: u64 = (((arg1[19]) as u64) << 24);
  let x14: u64 = (((arg1[18]) as u64) << 16);
  let x15: u64 = (((arg1[17]) as u64) << 8);
  let x16: u8 = (arg1[16]);
  let x17: u64 = (((arg1[15]) as u64) << 56);
  let x18: u64 = (((arg1[14]) as u64) << 48);
  let x19: u64 = (((arg1[13]) as u64) << 40);
  let x20: u64 = (((arg1[12]) as u64) << 32);
  let x21: u64 = (((arg1[11]) as u64) << 24);
  let x22: u64 = (((arg1[10]) as u64) << 16);
  let x23: u64 = (((arg1[9]) as u64) << 8);
  let x24: u8 = (arg1[8]);
  let x25: u64 = (((arg1[7]) as u64) << 56);
  let x26: u64 = (((arg1[6]) as u64) << 48);
  let x27: u64 = (((arg1[5]) as u64) << 40);
  let x28: u64 = (((arg1[4]) as u64) << 32);
  let x29: u64 = (((arg1[3]) as u64) << 24);
  let x30: u64 = (((arg1[2]) as u64) << 16);
  let x31: u64 = (((arg1[1]) as u64) << 8);
  let x32: u8 = (arg1[0]);
  let x33: u64 = (x31 + (x32 as u64));
  let x34: u64 = (x30 + x33);
  let x35: u64 = (x29 + x34);
  let x36: u64 = (x28 + x35);
  let x37: u64 = (x27 + x36);
  let x38: u64 = (x26 + x37);
  let x39: u64 = (x25 + x38);
  let x40: u64 = (x23 + (x24 as u64));
  let x41: u64 = (x22 + x40);
  let x42: u64 = (x21 + x41);
  let x43: u64 = (x20 + x42);
  let x44: u64 = (x19 + x43);
  let x45: u64 = (x18 + x44);
  let x46: u64 = (x17 + x45);
  let x47: u64 = (x15 + (x16 as u64));
  let x48: u64 = (x14 + x47);
  let x49: u64 = (x13 + x48);
  let x50: u64 = (x12 + x49);
  let x51: u64 = (x11 + x50);
  let x52: u64 = (x10 + x51);
  let x53: u64 = (x9 + x52);
  let x54: u64 = (x7 + (x8 as u64));
  let x55: u64 = (x6 + x54);
  let x56: u64 = (x5 + x55);
  let x57: u64 = (x4 + x56);
  let x58: u64 = (x3 + x57);
  let x59: u64 = (x2 + x58);
  let x60: u64 = (x1 + x59);
  out1[0] = x39;
  out1[1] = x46;
  out1[2] = x53;
  out1[3] = x60;
  out1[4] = (0x0 as u64);
}

/// The function fiat_25519_divstep computes a divstep.
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
///   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
///   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
///   eval out4 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval arg5) mod m else (2 * eval arg4) mod m)
///   eval out5 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval arg4 - eval arg4) mod m else (eval arg5 + (twos_complement_eval arg3 mod 2) * eval arg4) mod m)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg4: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
///   arg5: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out4: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
///   out5: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_divstep(out1: &mut u64, out2: &mut [u64; 5], out3: &mut [u64; 5], out4: &mut [u64; 5], out5: &mut [u64; 5], arg1: u64, arg2: &[u64; 5], arg3: &[u64; 5], arg4: &[u64; 5], arg5: &[u64; 5]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1, &mut x2, 0x0, (!arg1), (0x1 as u64));
  let x3: fiat_25519_u1 = (((x1 >> 63) as fiat_25519_u1) & (((arg3[0]) & (0x1 as u64)) as fiat_25519_u1));
  let mut x4: u64 = 0;
  let mut x5: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x4, &mut x5, 0x0, (!arg1), (0x1 as u64));
  let mut x6: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x6, x3, arg1, x4);
  let mut x7: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x7, x3, (arg2[0]), (arg3[0]));
  let mut x8: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x8, x3, (arg2[1]), (arg3[1]));
  let mut x9: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x9, x3, (arg2[2]), (arg3[2]));
  let mut x10: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x10, x3, (arg2[3]), (arg3[3]));
  let mut x11: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x11, x3, (arg2[4]), (arg3[4]));
  let mut x12: u64 = 0;
  let mut x13: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x12, &mut x13, 0x0, (0x1 as u64), (!(arg2[0])));
  let mut x14: u64 = 0;
  let mut x15: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x14, &mut x15, x13, (0x0 as u64), (!(arg2[1])));
  let mut x16: u64 = 0;
  let mut x17: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x16, &mut x17, x15, (0x0 as u64), (!(arg2[2])));
  let mut x18: u64 = 0;
  let mut x19: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x18, &mut x19, x17, (0x0 as u64), (!(arg2[3])));
  let mut x20: u64 = 0;
  let mut x21: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x20, &mut x21, x19, (0x0 as u64), (!(arg2[4])));
  let mut x22: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x22, x3, (arg3[0]), x12);
  let mut x23: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x23, x3, (arg3[1]), x14);
  let mut x24: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x24, x3, (arg3[2]), x16);
  let mut x25: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x25, x3, (arg3[3]), x18);
  let mut x26: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x26, x3, (arg3[4]), x20);
  let mut x27: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x27, x3, (arg4[0]), (arg5[0]));
  let mut x28: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x28, x3, (arg4[1]), (arg5[1]));
  let mut x29: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x29, x3, (arg4[2]), (arg5[2]));
  let mut x30: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x30, x3, (arg4[3]), (arg5[3]));
  let mut x31: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x31, x3, (arg4[4]), (arg5[4]));
  let x32: u64 = (x27 + x27);
  let x33: u64 = (x32 >> 51);
  let x34: u64 = (x32 & 0x7ffffffffffff);
  let x35: u64 = (x31 + x31);
  let x36: u64 = (x30 + x30);
  let x37: u64 = (x29 + x29);
  let x38: u64 = (x28 + x28);
  let x39: u64 = (x33 + x38);
  let x40: u64 = (x39 >> 51);
  let x41: u64 = (x39 & 0x7ffffffffffff);
  let x42: u64 = (x40 + x37);
  let x43: u64 = (x42 >> 51);
  let x44: u64 = (x42 & 0x7ffffffffffff);
  let x45: u64 = (x43 + x36);
  let x46: u64 = (x45 >> 51);
  let x47: u64 = (x45 & 0x7ffffffffffff);
  let x48: u64 = (x46 + x35);
  let x49: u64 = (x48 >> 51);
  let x50: u64 = (x48 & 0x7ffffffffffff);
  let x51: u64 = (x49 * 0x13);
  let x52: u64 = (x34 + x51);
  let x53: fiat_25519_u1 = ((x52 >> 51) as fiat_25519_u1);
  let x54: u64 = (x52 & 0x7ffffffffffff);
  let x55: u64 = ((x53 as u64) + x41);
  let x56: fiat_25519_u1 = ((x55 >> 51) as fiat_25519_u1);
  let x57: u64 = (x55 & 0x7ffffffffffff);
  let x58: u64 = ((x56 as u64) + x44);
  let x59: u64 = (arg4[4]);
  let x60: u64 = (arg4[3]);
  let x61: u64 = (arg4[2]);
  let x62: u64 = (arg4[1]);
  let x63: u64 = (arg4[0]);
  let x64: u64 = (0xfffffffffffda - x63);
  let x65: u64 = (0xffffffffffffe - x62);
  let x66: u64 = (0xffffffffffffe - x61);
  let x67: u64 = (0xffffffffffffe - x60);
  let x68: u64 = (0xffffffffffffe - x59);
  let x69: fiat_25519_u1 = ((x64 >> 51) as fiat_25519_u1);
  let x70: u64 = (x64 & 0x7ffffffffffff);
  let x71: u64 = ((x69 as u64) + x65);
  let x72: fiat_25519_u1 = ((x71 >> 51) as fiat_25519_u1);
  let x73: u64 = (x71 & 0x7ffffffffffff);
  let x74: u64 = ((x72 as u64) + x66);
  let x75: fiat_25519_u1 = ((x74 >> 51) as fiat_25519_u1);
  let x76: u64 = (x74 & 0x7ffffffffffff);
  let x77: u64 = ((x75 as u64) + x67);
  let x78: fiat_25519_u1 = ((x77 >> 51) as fiat_25519_u1);
  let x79: u64 = (x77 & 0x7ffffffffffff);
  let x80: u64 = ((x78 as u64) + x68);
  let x81: fiat_25519_u1 = ((x80 >> 51) as fiat_25519_u1);
  let x82: u64 = (x80 & 0x7ffffffffffff);
  let x83: u64 = ((x81 as u64) * 0x13);
  let x84: u64 = (x70 + x83);
  let x85: fiat_25519_u1 = ((x84 >> 51) as fiat_25519_u1);
  let x86: u64 = (x84 & 0x7ffffffffffff);
  let x87: u64 = ((x85 as u64) + x73);
  let x88: fiat_25519_u1 = ((x87 >> 51) as fiat_25519_u1);
  let x89: u64 = (x87 & 0x7ffffffffffff);
  let x90: u64 = ((x88 as u64) + x76);
  let mut x91: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x91, x3, (arg5[0]), x86);
  let mut x92: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x92, x3, (arg5[1]), x89);
  let mut x93: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x93, x3, (arg5[2]), x90);
  let mut x94: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x94, x3, (arg5[3]), x79);
  let mut x95: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x95, x3, (arg5[4]), x82);
  let x96: fiat_25519_u1 = ((x22 & (0x1 as u64)) as fiat_25519_u1);
  let mut x97: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x97, x96, (0x0 as u64), x7);
  let mut x98: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x98, x96, (0x0 as u64), x8);
  let mut x99: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x99, x96, (0x0 as u64), x9);
  let mut x100: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x100, x96, (0x0 as u64), x10);
  let mut x101: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x101, x96, (0x0 as u64), x11);
  let mut x102: u64 = 0;
  let mut x103: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x102, &mut x103, 0x0, x22, x97);
  let mut x104: u64 = 0;
  let mut x105: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x104, &mut x105, x103, x23, x98);
  let mut x106: u64 = 0;
  let mut x107: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x106, &mut x107, x105, x24, x99);
  let mut x108: u64 = 0;
  let mut x109: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x108, &mut x109, x107, x25, x100);
  let mut x110: u64 = 0;
  let mut x111: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x110, &mut x111, x109, x26, x101);
  let mut x112: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x112, x96, (0x0 as u64), x27);
  let mut x113: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x113, x96, (0x0 as u64), x28);
  let mut x114: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x114, x96, (0x0 as u64), x29);
  let mut x115: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x115, x96, (0x0 as u64), x30);
  let mut x116: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x116, x96, (0x0 as u64), x31);
  let x117: u64 = (x91 + x112);
  let x118: u64 = (x117 >> 51);
  let x119: u64 = (x117 & 0x7ffffffffffff);
  let x120: u64 = (x95 + x116);
  let x121: u64 = (x94 + x115);
  let x122: u64 = (x93 + x114);
  let x123: u64 = (x92 + x113);
  let x124: u64 = (x118 + x123);
  let x125: u64 = (x124 >> 51);
  let x126: u64 = (x124 & 0x7ffffffffffff);
  let x127: u64 = (x125 + x122);
  let x128: u64 = (x127 >> 51);
  let x129: u64 = (x127 & 0x7ffffffffffff);
  let x130: u64 = (x128 + x121);
  let x131: u64 = (x130 >> 51);
  let x132: u64 = (x130 & 0x7ffffffffffff);
  let x133: u64 = (x131 + x120);
  let x134: u64 = (x133 >> 51);
  let x135: u64 = (x133 & 0x7ffffffffffff);
  let x136: u64 = (x134 * 0x13);
  let x137: u64 = (x119 + x136);
  let x138: fiat_25519_u1 = ((x137 >> 51) as fiat_25519_u1);
  let x139: u64 = (x137 & 0x7ffffffffffff);
  let x140: u64 = ((x138 as u64) + x126);
  let x141: fiat_25519_u1 = ((x140 >> 51) as fiat_25519_u1);
  let x142: u64 = (x140 & 0x7ffffffffffff);
  let x143: u64 = ((x141 as u64) + x129);
  let mut x144: u64 = 0;
  let mut x145: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x144, &mut x145, 0x0, x6, (0x1 as u64));
  let x146: u64 = ((x102 >> 1) | ((x104 << 63) & 0xffffffffffffffff));
  let x147: u64 = ((x104 >> 1) | ((x106 << 63) & 0xffffffffffffffff));
  let x148: u64 = ((x106 >> 1) | ((x108 << 63) & 0xffffffffffffffff));
  let x149: u64 = ((x108 >> 1) | ((x110 << 63) & 0xffffffffffffffff));
  let x150: u64 = ((x110 & 0x8000000000000000) | (x110 >> 1));
  *out1 = x144;
  out2[0] = x7;
  out2[1] = x8;
  out2[2] = x9;
  out2[3] = x10;
  out2[4] = x11;
  out3[0] = x146;
  out3[1] = x147;
  out3[2] = x148;
  out3[3] = x149;
  out3[4] = x150;
  out4[0] = x54;
  out4[1] = x57;
  out4[2] = x58;
  out4[3] = x47;
  out4[4] = x50;
  out5[0] = x139;
  out5[1] = x142;
  out5[2] = x143;
  out5[3] = x132;
  out5[4] = x135;
}

/// The function fiat_25519_divstep_precomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_divstep_precomp(out1: &mut [u64; 5]) -> () {
  out1[0] = 0x156c6c8938054;
  out1[1] = 0x6ca116482ee0c;
  out1[2] = 0x4d4719ca54469;
  out1[3] = 0x1eb2c73b3b619;
  out1[4] = 0x2d9be62c1db59;
}

/// The function fiat_25519_twos_complement_word_full_divstep computes a divstep on wordsized integers.
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ arg3 is odd then 1 - arg1 else 1 + arg1)
///   out2 = (if 0 < arg1 ∧ arg3 is odd then arg3 else arg2)
///   out3 = (if 0 < arg1 ∧ arg3 is odd then ⌊(arg3 - arg2) / 2⌋ else ⌊(arg3 + (arg3 mod 2) * arg2) / 2⌋)
///   out4 = (if 0 < arg1 ∧ arg3 is odd then 2 * arg6 else 2 * arg4)
///   out5 = (if 0 < arg1 ∧ arg3 is odd then 2 * arg7 else 2 * arg5)
///   out6 = (if 0 < arg1 ∧ arg3 is odd then arg6 - arg4 else arg6 + (arg3 mod 2) * arg4)
///   out7 = (if 0 < arg1 ∧ arg3 is odd then arg5 - arg7 else arg7 + (arg3 mod 2) * arg5)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
///   arg4: [0x0 ~> 0xffffffffffffffff]
///   arg5: [0x0 ~> 0xffffffffffffffff]
///   arg6: [0x0 ~> 0xffffffffffffffff]
///   arg7: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0xffffffffffffffff]
///   out3: [0x0 ~> 0xffffffffffffffff]
///   out4: [0x0 ~> 0xffffffffffffffff]
///   out5: [0x0 ~> 0xffffffffffffffff]
///   out6: [0x0 ~> 0xffffffffffffffff]
///   out7: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_25519_twos_complement_word_full_divstep(out1: &mut u64, out2: &mut u64, out3: &mut u64, out4: &mut u64, out5: &mut u64, out6: &mut u64, out7: &mut u64, arg1: u64, arg2: u64, arg3: u64, arg4: u64, arg5: u64, arg6: u64, arg7: u64) -> () {
  let x1: u64 = (((((!arg1) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x2: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x2, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg1, (((((!arg1) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x3: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x3, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg2, arg3);
  let mut x4: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x4, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg3, (((((!arg2) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x5: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x5, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg4, arg6);
  let mut x6: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x6, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg5, arg7);
  let mut x7: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x7, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg6, (((((!arg4) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x8: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x8, (((x1 >> 63) as fiat_25519_u1) & ((arg3 & (0x1 as u64)) as fiat_25519_u1)), arg7, (((((!arg5) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x9: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x9, ((x4 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x3);
  let mut x10: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x10, ((x4 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x5);
  let mut x11: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x11, ((x4 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x6);
  let x12: u64 = ((((0x1 as u128) + (x2 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x13: u64 = ((((((x4 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x4 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1));
  let x14: u64 = ((((x5 as u128) + (x5 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x15: u64 = ((((x6 as u128) + (x6 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x16: u64 = ((((x7 as u128) + (x10 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x17: u64 = ((((x8 as u128) + (x11 as u128)) & (0xffffffffffffffff as u128)) as u64);
  *out1 = x12;
  *out2 = x3;
  *out3 = x13;
  *out4 = x14;
  *out5 = x15;
  *out6 = x16;
  *out7 = x17;
}

/// The function fiat_25519_asr_mw_sub2 computes a divstep on wordsized integers.
/// Postconditions:
///   eval out1 = ⌊eval arg1 / 2^(64 - 2)⌋
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_asr_mw_sub2(out1: &mut [u64; 6], arg1: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1, (((arg1[5]) >> 63) as fiat_25519_u1), (0x0 as u64), 0xfffffffffffffffc);
  let x2: u64 = (((arg1[0]) >> 62) | (((arg1[1]) << 2) & 0xffffffffffffffff));
  let x3: u64 = (((arg1[1]) >> 62) | (((arg1[2]) << 2) & 0xffffffffffffffff));
  let x4: u64 = (((arg1[2]) >> 62) | (((arg1[3]) << 2) & 0xffffffffffffffff));
  let x5: u64 = (((arg1[3]) >> 62) | (((arg1[4]) << 2) & 0xffffffffffffffff));
  let x6: u64 = (((arg1[4]) >> 62) | (((arg1[5]) << 2) & 0xffffffffffffffff));
  let x7: u64 = (x1 | ((arg1[5]) >> 62));
  out1[0] = x2;
  out1[1] = x3;
  out1[2] = x4;
  out1[3] = x5;
  out1[4] = x6;
  out1[5] = x7;
}

/// The function fiat_25519_sat_add computes a divstep on wordsized integers.
/// Postconditions:
///   eval out1 = eval arg1 + eval arg2
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_sat_add(out1: &mut [u64; 6], arg1: &[u64; 6], arg2: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u64 = 0;
  let mut x4: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u64 = 0;
  let mut x6: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u64 = 0;
  let mut x8: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u64 = 0;
  let mut x10: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u64 = 0;
  let mut x12: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  out1[0] = x1;
  out1[1] = x3;
  out1[2] = x5;
  out1[3] = x7;
  out1[4] = x9;
  out1[5] = x11;
}

/// The function fiat_25519_word_sat_mul computes a divstep on wordsized integers.
/// Postconditions:
///   eval out1 = arg1 * eval arg2
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_word_sat_mul(out1: &mut [u64; 6], arg1: u64, arg2: &[u64; 5]) -> () {
  let mut x1: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1, (((arg2[4]) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x2: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x2, ((arg1 >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x3: u64 = 0;
  let mut x4: u64 = 0;
  fiat_25519_mulx_u64(&mut x3, &mut x4, x2, (arg2[0]));
  let mut x5: u64 = 0;
  let mut x6: u64 = 0;
  fiat_25519_mulx_u64(&mut x5, &mut x6, x2, (arg2[1]));
  let mut x7: u64 = 0;
  let mut x8: u64 = 0;
  fiat_25519_mulx_u64(&mut x7, &mut x8, x2, (arg2[0]));
  let mut x9: u64 = 0;
  let mut x10: u64 = 0;
  fiat_25519_mulx_u64(&mut x9, &mut x10, x2, (arg2[2]));
  let mut x11: u64 = 0;
  let mut x12: u64 = 0;
  fiat_25519_mulx_u64(&mut x11, &mut x12, x2, (arg2[1]));
  let mut x13: u64 = 0;
  let mut x14: u64 = 0;
  fiat_25519_mulx_u64(&mut x13, &mut x14, x2, (arg2[0]));
  let mut x15: u64 = 0;
  let mut x16: u64 = 0;
  fiat_25519_mulx_u64(&mut x15, &mut x16, x2, (arg2[3]));
  let mut x17: u64 = 0;
  let mut x18: u64 = 0;
  fiat_25519_mulx_u64(&mut x17, &mut x18, x2, (arg2[2]));
  let mut x19: u64 = 0;
  let mut x20: u64 = 0;
  fiat_25519_mulx_u64(&mut x19, &mut x20, x2, (arg2[1]));
  let mut x21: u64 = 0;
  let mut x22: u64 = 0;
  fiat_25519_mulx_u64(&mut x21, &mut x22, x2, (arg2[0]));
  let mut x23: u64 = 0;
  let mut x24: u64 = 0;
  fiat_25519_mulx_u64(&mut x23, &mut x24, x2, (arg2[4]));
  let mut x25: u64 = 0;
  let mut x26: u64 = 0;
  fiat_25519_mulx_u64(&mut x25, &mut x26, x2, (arg2[3]));
  let mut x27: u64 = 0;
  let mut x28: u64 = 0;
  fiat_25519_mulx_u64(&mut x27, &mut x28, x2, (arg2[2]));
  let mut x29: u64 = 0;
  let mut x30: u64 = 0;
  fiat_25519_mulx_u64(&mut x29, &mut x30, x2, (arg2[1]));
  let mut x31: u64 = 0;
  let mut x32: u64 = 0;
  fiat_25519_mulx_u64(&mut x31, &mut x32, x2, (arg2[0]));
  let mut x33: u64 = 0;
  let mut x34: u64 = 0;
  fiat_25519_mulx_u64(&mut x33, &mut x34, arg1, x1);
  let mut x35: u64 = 0;
  let mut x36: u64 = 0;
  fiat_25519_mulx_u64(&mut x35, &mut x36, arg1, (arg2[4]));
  let mut x37: u64 = 0;
  let mut x38: u64 = 0;
  fiat_25519_mulx_u64(&mut x37, &mut x38, arg1, (arg2[3]));
  let mut x39: u64 = 0;
  let mut x40: u64 = 0;
  fiat_25519_mulx_u64(&mut x39, &mut x40, arg1, (arg2[2]));
  let mut x41: u64 = 0;
  let mut x42: u64 = 0;
  fiat_25519_mulx_u64(&mut x41, &mut x42, arg1, (arg2[1]));
  let mut x43: u64 = 0;
  let mut x44: u64 = 0;
  fiat_25519_mulx_u64(&mut x43, &mut x44, arg1, (arg2[0]));
  let mut x45: u64 = 0;
  let mut x46: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x45, &mut x46, 0x0, x36, x3);
  let mut x47: u64 = 0;
  let mut x48: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x47, &mut x48, 0x0, x45, x5);
  let mut x49: u64 = 0;
  let mut x50: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x49, &mut x50, 0x0, x38, x7);
  let mut x51: u64 = 0;
  let mut x52: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x51, &mut x52, x50, x47, x8);
  let mut x53: u64 = 0;
  let mut x54: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x53, &mut x54, 0x0, x49, x11);
  let mut x55: u64 = 0;
  let mut x56: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x55, &mut x56, x54, x51, x9);
  let mut x57: u64 = 0;
  let mut x58: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x57, &mut x58, 0x0, x40, x13);
  let mut x59: u64 = 0;
  let mut x60: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x59, &mut x60, x58, x53, x14);
  let mut x61: u64 = 0;
  let mut x62: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x61, &mut x62, x60, x55, x12);
  let mut x63: u64 = 0;
  let mut x64: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x63, &mut x64, 0x0, x57, x19);
  let mut x65: u64 = 0;
  let mut x66: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x65, &mut x66, x64, x59, x17);
  let mut x67: u64 = 0;
  let mut x68: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x67, &mut x68, x66, x61, x15);
  let mut x69: u64 = 0;
  let mut x70: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x69, &mut x70, 0x0, x42, x21);
  let mut x71: u64 = 0;
  let mut x72: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x71, &mut x72, x70, x63, x22);
  let mut x73: u64 = 0;
  let mut x74: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x73, &mut x74, x72, x65, x20);
  let mut x75: u64 = 0;
  let mut x76: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x75, &mut x76, x74, x67, x18);
  let mut x77: u64 = 0;
  let mut x78: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x77, &mut x78, 0x0, x69, x29);
  let mut x79: u64 = 0;
  let mut x80: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x79, &mut x80, x78, x71, x27);
  let mut x81: u64 = 0;
  let mut x82: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x81, &mut x82, x80, x73, x25);
  let mut x83: u64 = 0;
  let mut x84: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x83, &mut x84, x82, x75, x23);
  let mut x85: u64 = 0;
  let mut x86: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x85, &mut x86, 0x0, x44, x31);
  let mut x87: u64 = 0;
  let mut x88: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x87, &mut x88, x86, x77, x32);
  let mut x89: u64 = 0;
  let mut x90: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x89, &mut x90, x88, x79, x30);
  let mut x91: u64 = 0;
  let mut x92: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x91, &mut x92, x90, x81, x28);
  let mut x93: u64 = 0;
  let mut x94: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x93, &mut x94, x92, x83, x26);
  let mut x95: u64 = 0;
  let mut x96: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x95, &mut x96, 0x0, x85, x41);
  let mut x97: u64 = 0;
  let mut x98: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x97, &mut x98, x96, x87, x39);
  let mut x99: u64 = 0;
  let mut x100: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x99, &mut x100, x98, x89, x37);
  let mut x101: u64 = 0;
  let mut x102: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x101, &mut x102, x100, x91, x35);
  let mut x103: u64 = 0;
  let mut x104: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x103, &mut x104, x102, x93, x33);
  out1[0] = x43;
  out1[1] = x95;
  out1[2] = x97;
  out1[3] = x99;
  out1[4] = x101;
  out1[5] = x103;
}

/// The function fiat_25519_jumpdivstep_precomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_25519_jumpdivstep_precomp(out1: &mut [u64; 5]) -> () {
  out1[0] = 0x1855b1b224df9;
  out1[1] = 0x53b2845920bb8;
  out1[2] = 0x33351c6729511;
  out1[3] = 0x327acb1ceced8;
  out1[4] = 0x38b66f98b076d;
}

/// The function fiat_25519_outer_loop_body computes the body of the outer loop in BY-inversion (jumpdivstep version).
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
///   arg4: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out3: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
///   out4: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_outer_loop_body(out1: &mut [u64; 5], out2: &mut [u64; 5], out3: &mut [u64; 5], out4: &mut [u64; 5], arg1: &[u64; 5], arg2: &[u64; 5], arg3: &[u64; 5], arg4: &[u64; 5]) -> () {
  let mut x1: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), (0x1 as u64), 0xffffffffffffffff);
  let mut x2: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x2, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), (arg1[0]), (arg2[0]));
  let mut x3: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x3, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), (arg2[0]), (((((!(arg1[0])) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x4: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x4, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), 0x1, 0x0);
  let mut x5: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x5, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), 0x0, 0x1);
  let mut x6: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x6, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x7: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x7, (((arg2[0]) & (0x1 as u64)) as fiat_25519_u1), 0x1, 0x0);
  let mut x8: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x8, ((x3 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x2);
  let mut x9: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x9, ((x3 & (0x1 as u64)) as fiat_25519_u1), 0x0, x4);
  let mut x10: fiat_25519_u1 = 0;
  fiat_25519_cmovznz_u1(&mut x10, ((x3 & (0x1 as u64)) as fiat_25519_u1), 0x0, x5);
  let x11: u64 = (((((!((((0x1 as u128) + (x1 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x12: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x12, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x1 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x1 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x13: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x13, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x2, ((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x14: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x14, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x2) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x15: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x15, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((x4 as u64) + (x4 as u64)), ((((x6 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x16: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x16, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((x5 as u64) + (x5 as u64)), ((x7 as u64) + (x10 as u64)));
  let mut x17: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x17, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x6 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((x4 as u64) + (x4 as u64))) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x18: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x18, (((x11 >> 63) as fiat_25519_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((x7 as u64) + (x10 as u64)), (((((!((x5 as u64) + (x5 as u64))) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x19: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x19, ((x14 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x13);
  let mut x20: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x20, ((x14 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x15);
  let mut x21: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x21, ((x14 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x16);
  let x22: u64 = (((((!((((0x1 as u128) + (x12 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x23: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x23, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x12 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x12 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x24: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x24, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x13, ((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x25: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x25, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x13) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x26: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x26, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x15 as u128) + (x15 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x17 as u128) + (x20 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x27: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x27, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), (x16 + x16), ((((x18 as u128) + (x21 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x28: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x28, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x17 as u128) + (x20 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x15 as u128) + (x15 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x29: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x29, (((x22 >> 63) as fiat_25519_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x18 as u128) + (x21 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!(x16 + x16)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x30: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x30, ((x25 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x24);
  let mut x31: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x31, ((x25 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x26);
  let mut x32: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x32, ((x25 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x27);
  let x33: u64 = (((((!((((0x1 as u128) + (x23 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x34: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x34, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x23 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x23 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x35: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x35, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x24, ((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x36: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x36, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x24) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x37: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x37, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x26 as u128) + (x26 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x28 as u128) + (x31 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x38: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x38, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x27 as u128) + (x27 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x29 as u128) + (x32 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x39: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x39, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x28 as u128) + (x31 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x26 as u128) + (x26 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x40: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x40, (((x33 >> 63) as fiat_25519_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x29 as u128) + (x32 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x27 as u128) + (x27 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x41: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x41, ((x36 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x35);
  let mut x42: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x42, ((x36 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x37);
  let mut x43: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x43, ((x36 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x38);
  let x44: u64 = (((((!((((0x1 as u128) + (x34 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x45: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x45, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x34 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x34 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x46: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x46, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x35, ((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x47: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x47, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x35) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x48: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x48, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x37 as u128) + (x37 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x39 as u128) + (x42 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x49: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x49, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x38 as u128) + (x38 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x40 as u128) + (x43 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x50: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x50, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x39 as u128) + (x42 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x37 as u128) + (x37 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x51: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x51, (((x44 >> 63) as fiat_25519_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x40 as u128) + (x43 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x38 as u128) + (x38 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x52: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x52, ((x47 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x46);
  let mut x53: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x53, ((x47 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x48);
  let mut x54: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x54, ((x47 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x49);
  let x55: u64 = (((((!((((0x1 as u128) + (x45 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x56: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x56, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x45 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x45 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x57: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x57, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x46, ((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x58: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x58, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x46) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x59: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x59, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x48 as u128) + (x48 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x50 as u128) + (x53 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x60: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x60, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x49 as u128) + (x49 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x51 as u128) + (x54 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x61: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x61, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x50 as u128) + (x53 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x48 as u128) + (x48 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x62: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x62, (((x55 >> 63) as fiat_25519_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x51 as u128) + (x54 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x49 as u128) + (x49 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x63: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x63, ((x58 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x57);
  let mut x64: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x64, ((x58 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x59);
  let mut x65: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x65, ((x58 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x60);
  let x66: u64 = (((((!((((0x1 as u128) + (x56 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x67: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x67, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x56 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x56 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x68: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x68, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x57, ((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x69: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x69, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x57) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x70: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x70, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x59 as u128) + (x59 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x61 as u128) + (x64 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x71: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x71, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x60 as u128) + (x60 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x62 as u128) + (x65 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x72: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x72, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x61 as u128) + (x64 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x59 as u128) + (x59 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x73: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x73, (((x66 >> 63) as fiat_25519_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x62 as u128) + (x65 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x60 as u128) + (x60 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x74: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x74, ((x69 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x68);
  let mut x75: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x75, ((x69 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x70);
  let mut x76: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x76, ((x69 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x71);
  let x77: u64 = (((((!((((0x1 as u128) + (x67 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x78: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x78, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x67 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x67 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x79: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x79, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x68, ((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x80: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x80, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x68) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x81: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x81, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x70 as u128) + (x70 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x72 as u128) + (x75 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x82: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x82, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x71 as u128) + (x71 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x73 as u128) + (x76 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x83: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x83, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x72 as u128) + (x75 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x70 as u128) + (x70 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x84: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x84, (((x77 >> 63) as fiat_25519_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x73 as u128) + (x76 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x71 as u128) + (x71 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x85: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x85, ((x80 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x79);
  let mut x86: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x86, ((x80 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x81);
  let mut x87: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x87, ((x80 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x82);
  let x88: u64 = (((((!((((0x1 as u128) + (x78 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x89: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x89, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x78 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x78 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x90: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x90, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x79, ((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x91: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x91, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x79) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x92: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x92, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x81 as u128) + (x81 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x83 as u128) + (x86 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x93: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x93, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x82 as u128) + (x82 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x84 as u128) + (x87 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x94: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x94, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x83 as u128) + (x86 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x81 as u128) + (x81 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x95: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x95, (((x88 >> 63) as fiat_25519_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x84 as u128) + (x87 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x82 as u128) + (x82 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x96: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x96, ((x91 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x90);
  let mut x97: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x97, ((x91 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x92);
  let mut x98: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x98, ((x91 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x93);
  let x99: u64 = (((((!((((0x1 as u128) + (x89 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x100: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x100, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x89 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x89 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x101: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x101, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x90, ((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x102: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x102, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x90) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x103: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x103, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x92 as u128) + (x92 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x94 as u128) + (x97 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x104: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x104, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x93 as u128) + (x93 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x95 as u128) + (x98 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x105: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x105, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x94 as u128) + (x97 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x92 as u128) + (x92 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x106: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x106, (((x99 >> 63) as fiat_25519_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x95 as u128) + (x98 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x93 as u128) + (x93 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x107: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x107, ((x102 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x101);
  let mut x108: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x108, ((x102 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x103);
  let mut x109: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x109, ((x102 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x104);
  let x110: u64 = (((((!((((0x1 as u128) + (x100 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x111: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x111, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x100 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x100 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x112: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x112, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x101, ((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x113: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x113, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x101) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x114: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x114, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x103 as u128) + (x103 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x105 as u128) + (x108 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x115: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x115, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x104 as u128) + (x104 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x106 as u128) + (x109 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x116: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x116, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x105 as u128) + (x108 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x103 as u128) + (x103 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x117: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x117, (((x110 >> 63) as fiat_25519_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x106 as u128) + (x109 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x104 as u128) + (x104 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x118: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x118, ((x113 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x112);
  let mut x119: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x119, ((x113 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x114);
  let mut x120: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x120, ((x113 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x115);
  let x121: u64 = (((((!((((0x1 as u128) + (x111 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x122: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x122, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x111 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x111 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x123: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x123, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x112, ((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x124: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x124, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x112) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x125: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x125, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x114 as u128) + (x114 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x116 as u128) + (x119 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x126: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x126, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x115 as u128) + (x115 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x117 as u128) + (x120 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x127: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x127, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x116 as u128) + (x119 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x114 as u128) + (x114 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x128: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x128, (((x121 >> 63) as fiat_25519_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x117 as u128) + (x120 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x115 as u128) + (x115 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x129: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x129, ((x124 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x123);
  let mut x130: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x130, ((x124 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x125);
  let mut x131: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x131, ((x124 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x126);
  let x132: u64 = (((((!((((0x1 as u128) + (x122 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x133: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x133, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x122 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x122 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x134: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x134, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x123, ((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x135: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x135, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x123) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x136: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x136, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x125 as u128) + (x125 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x127 as u128) + (x130 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x137: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x137, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x126 as u128) + (x126 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x128 as u128) + (x131 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x138: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x138, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x127 as u128) + (x130 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x125 as u128) + (x125 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x139: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x139, (((x132 >> 63) as fiat_25519_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x128 as u128) + (x131 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x126 as u128) + (x126 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x140: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x140, ((x135 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x134);
  let mut x141: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x141, ((x135 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x136);
  let mut x142: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x142, ((x135 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x137);
  let x143: u64 = (((((!((((0x1 as u128) + (x133 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x144: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x144, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x133 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x133 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x145: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x145, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x134, ((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x146: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x146, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x134) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x147: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x147, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x136 as u128) + (x136 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x138 as u128) + (x141 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x148: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x148, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x137 as u128) + (x137 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x139 as u128) + (x142 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x149: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x149, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x138 as u128) + (x141 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x136 as u128) + (x136 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x150: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x150, (((x143 >> 63) as fiat_25519_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x139 as u128) + (x142 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x137 as u128) + (x137 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x151: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x151, ((x146 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x145);
  let mut x152: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x152, ((x146 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x147);
  let mut x153: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x153, ((x146 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x148);
  let x154: u64 = (((((!((((0x1 as u128) + (x144 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x155: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x155, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x144 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x144 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x156: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x156, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x145, ((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x157: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x157, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x145) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x158: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x158, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x147 as u128) + (x147 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x149 as u128) + (x152 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x159: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x159, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x148 as u128) + (x148 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x150 as u128) + (x153 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x160: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x160, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x149 as u128) + (x152 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x147 as u128) + (x147 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x161: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x161, (((x154 >> 63) as fiat_25519_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x150 as u128) + (x153 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x148 as u128) + (x148 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x162: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x162, ((x157 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x156);
  let mut x163: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x163, ((x157 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x158);
  let mut x164: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x164, ((x157 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x159);
  let x165: u64 = (((((!((((0x1 as u128) + (x155 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x166: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x166, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x155 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x155 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x167: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x167, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x156, ((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x168: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x168, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x156) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x169: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x169, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x158 as u128) + (x158 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x160 as u128) + (x163 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x170: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x170, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x159 as u128) + (x159 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x161 as u128) + (x164 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x171: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x171, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x160 as u128) + (x163 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x158 as u128) + (x158 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x172: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x172, (((x165 >> 63) as fiat_25519_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x161 as u128) + (x164 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x159 as u128) + (x159 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x173: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x173, ((x168 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x167);
  let mut x174: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x174, ((x168 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x169);
  let mut x175: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x175, ((x168 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x170);
  let x176: u64 = (((((!((((0x1 as u128) + (x166 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x177: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x177, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x166 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x166 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x178: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x178, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x167, ((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x179: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x179, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x167) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x180: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x180, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x169 as u128) + (x169 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x171 as u128) + (x174 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x181: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x181, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x170 as u128) + (x170 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x172 as u128) + (x175 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x182: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x182, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x171 as u128) + (x174 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x169 as u128) + (x169 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x183: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x183, (((x176 >> 63) as fiat_25519_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x172 as u128) + (x175 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x170 as u128) + (x170 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x184: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x184, ((x179 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x178);
  let mut x185: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x185, ((x179 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x180);
  let mut x186: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x186, ((x179 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x181);
  let x187: u64 = (((((!((((0x1 as u128) + (x177 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x188: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x188, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x177 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x177 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x189: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x189, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x178, ((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x190: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x190, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x178) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x191: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x191, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x180 as u128) + (x180 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x182 as u128) + (x185 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x192: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x192, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x181 as u128) + (x181 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x183 as u128) + (x186 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x193: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x193, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x182 as u128) + (x185 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x180 as u128) + (x180 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x194: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x194, (((x187 >> 63) as fiat_25519_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x183 as u128) + (x186 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x181 as u128) + (x181 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x195: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x195, ((x190 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x189);
  let mut x196: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x196, ((x190 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x191);
  let mut x197: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x197, ((x190 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x192);
  let x198: u64 = (((((!((((0x1 as u128) + (x188 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x199: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x199, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x188 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x188 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x200: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x200, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x189, ((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x201: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x201, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x189) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x202: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x202, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x191 as u128) + (x191 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x193 as u128) + (x196 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x203: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x203, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x192 as u128) + (x192 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x194 as u128) + (x197 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x204: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x204, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x193 as u128) + (x196 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x191 as u128) + (x191 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x205: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x205, (((x198 >> 63) as fiat_25519_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x194 as u128) + (x197 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x192 as u128) + (x192 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x206: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x206, ((x201 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x200);
  let mut x207: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x207, ((x201 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x202);
  let mut x208: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x208, ((x201 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x203);
  let x209: u64 = (((((!((((0x1 as u128) + (x199 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x210: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x210, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x199 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x199 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x211: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x211, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x200, ((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x212: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x212, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x200) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x213: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x213, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x202 as u128) + (x202 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x204 as u128) + (x207 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x214: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x214, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x203 as u128) + (x203 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x205 as u128) + (x208 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x215: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x215, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x204 as u128) + (x207 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x202 as u128) + (x202 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x216: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x216, (((x209 >> 63) as fiat_25519_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x205 as u128) + (x208 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x203 as u128) + (x203 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x217: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x217, ((x212 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x211);
  let mut x218: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x218, ((x212 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x213);
  let mut x219: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x219, ((x212 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x214);
  let x220: u64 = (((((!((((0x1 as u128) + (x210 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x221: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x221, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x210 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x210 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x222: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x222, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x211, ((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x223: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x223, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x211) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x224: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x224, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x213 as u128) + (x213 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x215 as u128) + (x218 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x225: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x225, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x214 as u128) + (x214 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x216 as u128) + (x219 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x226: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x226, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x215 as u128) + (x218 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x213 as u128) + (x213 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x227: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x227, (((x220 >> 63) as fiat_25519_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x216 as u128) + (x219 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x214 as u128) + (x214 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x228: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x228, ((x223 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x222);
  let mut x229: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x229, ((x223 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x224);
  let mut x230: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x230, ((x223 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x225);
  let x231: u64 = (((((!((((0x1 as u128) + (x221 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x232: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x232, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x221 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x221 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x233: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x233, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x222, ((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x234: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x234, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x222) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x235: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x235, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x224 as u128) + (x224 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x226 as u128) + (x229 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x236: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x236, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x225 as u128) + (x225 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x227 as u128) + (x230 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x237: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x237, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x226 as u128) + (x229 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x224 as u128) + (x224 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x238: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x238, (((x231 >> 63) as fiat_25519_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x227 as u128) + (x230 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x225 as u128) + (x225 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x239: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x239, ((x234 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x233);
  let mut x240: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x240, ((x234 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x235);
  let mut x241: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x241, ((x234 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x236);
  let x242: u64 = (((((!((((0x1 as u128) + (x232 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x243: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x243, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x232 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x232 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x244: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x244, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x233, ((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x245: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x245, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x233) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x246: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x246, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x235 as u128) + (x235 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x237 as u128) + (x240 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x247: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x247, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x236 as u128) + (x236 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x238 as u128) + (x241 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x248: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x248, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x237 as u128) + (x240 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x235 as u128) + (x235 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x249: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x249, (((x242 >> 63) as fiat_25519_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x238 as u128) + (x241 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x236 as u128) + (x236 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x250: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x250, ((x245 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x244);
  let mut x251: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x251, ((x245 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x246);
  let mut x252: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x252, ((x245 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x247);
  let x253: u64 = (((((!((((0x1 as u128) + (x243 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x254: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x254, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x243 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x243 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x255: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x255, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x244, ((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x256: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x256, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x244) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x257: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x257, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x246 as u128) + (x246 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x248 as u128) + (x251 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x258: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x258, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x247 as u128) + (x247 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x249 as u128) + (x252 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x259: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x259, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x248 as u128) + (x251 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x246 as u128) + (x246 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x260: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x260, (((x253 >> 63) as fiat_25519_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x249 as u128) + (x252 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x247 as u128) + (x247 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x261: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x261, ((x256 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x255);
  let mut x262: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x262, ((x256 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x257);
  let mut x263: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x263, ((x256 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x258);
  let x264: u64 = (((((!((((0x1 as u128) + (x254 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x265: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x265, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x254 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x254 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x266: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x266, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x255, ((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x267: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x267, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x255) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x268: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x268, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x257 as u128) + (x257 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x259 as u128) + (x262 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x269: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x269, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x258 as u128) + (x258 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x260 as u128) + (x263 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x270: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x270, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x259 as u128) + (x262 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x257 as u128) + (x257 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x271: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x271, (((x264 >> 63) as fiat_25519_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x260 as u128) + (x263 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x258 as u128) + (x258 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x272: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x272, ((x267 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x266);
  let mut x273: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x273, ((x267 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x268);
  let mut x274: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x274, ((x267 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x269);
  let x275: u64 = (((((!((((0x1 as u128) + (x265 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x276: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x276, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x265 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x265 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x277: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x277, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x266, ((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x278: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x278, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x266) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x279: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x279, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x268 as u128) + (x268 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x270 as u128) + (x273 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x280: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x280, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x269 as u128) + (x269 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x271 as u128) + (x274 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x281: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x281, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x270 as u128) + (x273 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x268 as u128) + (x268 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x282: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x282, (((x275 >> 63) as fiat_25519_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x271 as u128) + (x274 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x269 as u128) + (x269 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x283: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x283, ((x278 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x277);
  let mut x284: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x284, ((x278 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x279);
  let mut x285: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x285, ((x278 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x280);
  let x286: u64 = (((((!((((0x1 as u128) + (x276 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x287: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x287, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x276 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x276 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x288: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x288, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x277, ((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x289: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x289, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x277) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x290: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x290, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x279 as u128) + (x279 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x281 as u128) + (x284 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x291: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x291, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x280 as u128) + (x280 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x282 as u128) + (x285 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x292: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x292, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x281 as u128) + (x284 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x279 as u128) + (x279 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x293: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x293, (((x286 >> 63) as fiat_25519_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x282 as u128) + (x285 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x280 as u128) + (x280 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x294: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x294, ((x289 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x288);
  let mut x295: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x295, ((x289 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x290);
  let mut x296: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x296, ((x289 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x291);
  let x297: u64 = (((((!((((0x1 as u128) + (x287 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x298: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x298, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x287 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x287 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x299: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x299, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x288, ((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x300: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x300, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x288) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x301: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x301, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x290 as u128) + (x290 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x292 as u128) + (x295 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x302: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x302, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x291 as u128) + (x291 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x293 as u128) + (x296 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x303: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x303, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x292 as u128) + (x295 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x290 as u128) + (x290 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x304: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x304, (((x297 >> 63) as fiat_25519_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x293 as u128) + (x296 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x291 as u128) + (x291 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x305: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x305, ((x300 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x299);
  let mut x306: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x306, ((x300 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x301);
  let mut x307: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x307, ((x300 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x302);
  let x308: u64 = (((((!((((0x1 as u128) + (x298 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x309: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x309, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x298 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x298 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x310: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x310, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x299, ((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x311: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x311, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x299) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x312: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x312, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x301 as u128) + (x301 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x303 as u128) + (x306 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x313: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x313, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x302 as u128) + (x302 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x304 as u128) + (x307 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x314: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x314, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x303 as u128) + (x306 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x301 as u128) + (x301 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x315: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x315, (((x308 >> 63) as fiat_25519_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x304 as u128) + (x307 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x302 as u128) + (x302 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x316: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x316, ((x311 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x310);
  let mut x317: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x317, ((x311 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x312);
  let mut x318: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x318, ((x311 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x313);
  let x319: u64 = (((((!((((0x1 as u128) + (x309 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x320: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x320, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x309 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x309 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x321: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x321, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x310, ((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x322: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x322, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x310) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x323: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x323, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x312 as u128) + (x312 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x314 as u128) + (x317 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x324: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x324, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x313 as u128) + (x313 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x315 as u128) + (x318 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x325: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x325, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x314 as u128) + (x317 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x312 as u128) + (x312 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x326: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x326, (((x319 >> 63) as fiat_25519_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x315 as u128) + (x318 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x313 as u128) + (x313 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x327: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x327, ((x322 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x321);
  let mut x328: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x328, ((x322 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x323);
  let mut x329: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x329, ((x322 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x324);
  let x330: u64 = (((((!((((0x1 as u128) + (x320 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x331: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x331, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x320 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x320 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x332: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x332, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x321, ((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x333: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x333, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x321) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x334: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x334, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x323 as u128) + (x323 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x325 as u128) + (x328 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x335: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x335, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x324 as u128) + (x324 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x326 as u128) + (x329 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x336: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x336, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x325 as u128) + (x328 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x323 as u128) + (x323 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x337: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x337, (((x330 >> 63) as fiat_25519_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x326 as u128) + (x329 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x324 as u128) + (x324 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x338: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x338, ((x333 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x332);
  let mut x339: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x339, ((x333 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x334);
  let mut x340: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x340, ((x333 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x335);
  let x341: u64 = (((((!((((0x1 as u128) + (x331 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x342: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x342, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x331 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x331 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x343: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x343, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x332, ((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x344: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x344, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x332) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x345: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x345, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x334 as u128) + (x334 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x336 as u128) + (x339 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x346: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x346, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x335 as u128) + (x335 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x337 as u128) + (x340 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x347: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x347, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x336 as u128) + (x339 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x334 as u128) + (x334 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x348: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x348, (((x341 >> 63) as fiat_25519_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x337 as u128) + (x340 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x335 as u128) + (x335 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x349: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x349, ((x344 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x343);
  let mut x350: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x350, ((x344 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x345);
  let mut x351: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x351, ((x344 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x346);
  let x352: u64 = (((((!((((0x1 as u128) + (x342 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x353: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x353, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x342 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x342 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x354: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x354, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x343, ((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x355: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x355, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x343) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x356: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x356, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x345 as u128) + (x345 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x347 as u128) + (x350 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x357: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x357, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x346 as u128) + (x346 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x348 as u128) + (x351 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x358: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x358, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x347 as u128) + (x350 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x345 as u128) + (x345 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x359: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x359, (((x352 >> 63) as fiat_25519_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x348 as u128) + (x351 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x346 as u128) + (x346 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x360: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x360, ((x355 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x354);
  let mut x361: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x361, ((x355 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x356);
  let mut x362: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x362, ((x355 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x357);
  let x363: u64 = (((((!((((0x1 as u128) + (x353 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x364: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x364, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x353 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x353 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x365: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x365, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x354, ((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x366: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x366, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x354) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x367: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x367, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x356 as u128) + (x356 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x358 as u128) + (x361 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x368: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x368, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x357 as u128) + (x357 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x359 as u128) + (x362 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x369: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x369, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x358 as u128) + (x361 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x356 as u128) + (x356 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x370: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x370, (((x363 >> 63) as fiat_25519_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x359 as u128) + (x362 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x357 as u128) + (x357 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x371: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x371, ((x366 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x365);
  let mut x372: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x372, ((x366 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x367);
  let mut x373: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x373, ((x366 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x368);
  let x374: u64 = (((((!((((0x1 as u128) + (x364 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x375: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x375, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x364 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x364 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x376: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x376, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x365, ((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x377: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x377, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x365) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x378: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x378, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x367 as u128) + (x367 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x369 as u128) + (x372 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x379: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x379, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x368 as u128) + (x368 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x370 as u128) + (x373 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x380: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x380, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x369 as u128) + (x372 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x367 as u128) + (x367 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x381: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x381, (((x374 >> 63) as fiat_25519_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x370 as u128) + (x373 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x368 as u128) + (x368 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x382: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x382, ((x377 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x376);
  let mut x383: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x383, ((x377 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x378);
  let mut x384: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x384, ((x377 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x379);
  let x385: u64 = (((((!((((0x1 as u128) + (x375 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x386: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x386, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x375 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x375 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x387: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x387, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x376, ((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x388: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x388, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x376) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x389: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x389, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x378 as u128) + (x378 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x380 as u128) + (x383 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x390: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x390, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x379 as u128) + (x379 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x381 as u128) + (x384 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x391: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x391, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x380 as u128) + (x383 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x378 as u128) + (x378 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x392: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x392, (((x385 >> 63) as fiat_25519_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x381 as u128) + (x384 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x379 as u128) + (x379 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x393: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x393, ((x388 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x387);
  let mut x394: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x394, ((x388 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x389);
  let mut x395: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x395, ((x388 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x390);
  let x396: u64 = (((((!((((0x1 as u128) + (x386 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x397: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x397, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x386 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x386 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x398: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x398, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x387, ((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x399: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x399, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x387) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x400: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x400, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x389 as u128) + (x389 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x391 as u128) + (x394 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x401: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x401, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x390 as u128) + (x390 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x392 as u128) + (x395 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x402: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x402, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x391 as u128) + (x394 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x389 as u128) + (x389 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x403: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x403, (((x396 >> 63) as fiat_25519_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x392 as u128) + (x395 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x390 as u128) + (x390 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x404: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x404, ((x399 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x398);
  let mut x405: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x405, ((x399 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x400);
  let mut x406: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x406, ((x399 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x401);
  let x407: u64 = (((((!((((0x1 as u128) + (x397 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x408: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x408, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x397 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x397 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x409: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x409, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x398, ((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x410: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x410, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x398) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x411: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x411, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x400 as u128) + (x400 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x402 as u128) + (x405 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x412: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x412, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x401 as u128) + (x401 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x403 as u128) + (x406 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x413: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x413, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x402 as u128) + (x405 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x400 as u128) + (x400 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x414: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x414, (((x407 >> 63) as fiat_25519_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x403 as u128) + (x406 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x401 as u128) + (x401 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x415: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x415, ((x410 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x409);
  let mut x416: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x416, ((x410 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x411);
  let mut x417: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x417, ((x410 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x412);
  let x418: u64 = (((((!((((0x1 as u128) + (x408 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x419: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x419, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x408 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x408 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x420: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x420, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x409, ((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x421: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x421, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x409) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x422: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x422, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x411 as u128) + (x411 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x413 as u128) + (x416 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x423: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x423, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x412 as u128) + (x412 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x414 as u128) + (x417 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x424: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x424, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x413 as u128) + (x416 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x411 as u128) + (x411 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x425: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x425, (((x418 >> 63) as fiat_25519_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x414 as u128) + (x417 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x412 as u128) + (x412 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x426: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x426, ((x421 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x420);
  let mut x427: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x427, ((x421 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x422);
  let mut x428: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x428, ((x421 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x423);
  let x429: u64 = (((((!((((0x1 as u128) + (x419 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x430: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x430, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x419 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x419 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x431: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x431, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x420, ((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x432: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x432, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x420) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x433: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x433, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x422 as u128) + (x422 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x424 as u128) + (x427 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x434: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x434, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x423 as u128) + (x423 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x425 as u128) + (x428 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x435: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x435, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x424 as u128) + (x427 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x422 as u128) + (x422 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x436: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x436, (((x429 >> 63) as fiat_25519_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x425 as u128) + (x428 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x423 as u128) + (x423 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x437: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x437, ((x432 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x431);
  let mut x438: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x438, ((x432 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x433);
  let mut x439: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x439, ((x432 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x434);
  let x440: u64 = (((((!((((0x1 as u128) + (x430 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x441: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x441, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x430 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x430 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x442: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x442, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x431, ((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x443: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x443, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x431) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x444: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x444, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x433 as u128) + (x433 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x435 as u128) + (x438 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x445: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x445, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x434 as u128) + (x434 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x436 as u128) + (x439 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x446: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x446, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x435 as u128) + (x438 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x433 as u128) + (x433 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x447: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x447, (((x440 >> 63) as fiat_25519_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x436 as u128) + (x439 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x434 as u128) + (x434 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x448: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x448, ((x443 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x442);
  let mut x449: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x449, ((x443 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x444);
  let mut x450: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x450, ((x443 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x445);
  let x451: u64 = (((((!((((0x1 as u128) + (x441 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x452: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x452, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x441 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x441 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x453: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x453, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x442, ((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x454: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x454, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x442) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x455: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x455, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x444 as u128) + (x444 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x446 as u128) + (x449 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x456: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x456, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x445 as u128) + (x445 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x447 as u128) + (x450 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x457: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x457, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x446 as u128) + (x449 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x444 as u128) + (x444 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x458: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x458, (((x451 >> 63) as fiat_25519_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x447 as u128) + (x450 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x445 as u128) + (x445 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x459: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x459, ((x454 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x453);
  let mut x460: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x460, ((x454 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x455);
  let mut x461: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x461, ((x454 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x456);
  let x462: u64 = (((((!((((0x1 as u128) + (x452 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x463: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x463, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x452 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x452 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x464: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x464, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x453, ((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x465: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x465, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x453) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x466: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x466, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x455 as u128) + (x455 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x457 as u128) + (x460 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x467: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x467, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x456 as u128) + (x456 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x458 as u128) + (x461 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x468: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x468, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x457 as u128) + (x460 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x455 as u128) + (x455 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x469: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x469, (((x462 >> 63) as fiat_25519_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x458 as u128) + (x461 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x456 as u128) + (x456 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x470: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x470, ((x465 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x464);
  let mut x471: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x471, ((x465 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x466);
  let mut x472: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x472, ((x465 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x467);
  let x473: u64 = (((((!((((0x1 as u128) + (x463 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x474: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x474, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x463 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x463 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x475: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x475, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x464, ((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x476: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x476, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x464) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x477: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x477, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x466 as u128) + (x466 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x468 as u128) + (x471 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x478: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x478, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x467 as u128) + (x467 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x469 as u128) + (x472 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x479: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x479, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x468 as u128) + (x471 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x466 as u128) + (x466 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x480: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x480, (((x473 >> 63) as fiat_25519_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x469 as u128) + (x472 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x467 as u128) + (x467 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x481: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x481, ((x476 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x475);
  let mut x482: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x482, ((x476 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x477);
  let mut x483: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x483, ((x476 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x478);
  let x484: u64 = (((((!((((0x1 as u128) + (x474 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x485: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x485, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x474 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x474 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x486: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x486, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x475, ((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x487: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x487, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x475) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x488: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x488, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x477 as u128) + (x477 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x479 as u128) + (x482 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x489: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x489, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x478 as u128) + (x478 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x480 as u128) + (x483 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x490: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x490, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x479 as u128) + (x482 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x477 as u128) + (x477 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x491: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x491, (((x484 >> 63) as fiat_25519_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x480 as u128) + (x483 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x478 as u128) + (x478 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x492: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x492, ((x487 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x486);
  let mut x493: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x493, ((x487 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x488);
  let mut x494: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x494, ((x487 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x489);
  let x495: u64 = (((((!((((0x1 as u128) + (x485 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x496: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x496, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x485 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x485 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x497: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x497, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x486, ((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x498: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x498, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x486) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x499: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x499, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x488 as u128) + (x488 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x490 as u128) + (x493 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x500: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x500, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x489 as u128) + (x489 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x491 as u128) + (x494 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x501: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x501, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x490 as u128) + (x493 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x488 as u128) + (x488 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x502: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x502, (((x495 >> 63) as fiat_25519_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x491 as u128) + (x494 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x489 as u128) + (x489 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x503: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x503, ((x498 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x497);
  let mut x504: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x504, ((x498 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x499);
  let mut x505: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x505, ((x498 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x500);
  let x506: u64 = (((((!((((0x1 as u128) + (x496 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x507: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x507, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x496 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x496 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x508: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x508, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x497, ((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x509: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x509, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x497) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x510: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x510, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x499 as u128) + (x499 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x501 as u128) + (x504 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x511: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x511, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x500 as u128) + (x500 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x502 as u128) + (x505 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x512: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x512, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x501 as u128) + (x504 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x499 as u128) + (x499 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x513: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x513, (((x506 >> 63) as fiat_25519_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x502 as u128) + (x505 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x500 as u128) + (x500 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x514: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x514, ((x509 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x508);
  let mut x515: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x515, ((x509 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x510);
  let mut x516: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x516, ((x509 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x511);
  let x517: u64 = (((((!((((0x1 as u128) + (x507 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x518: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x518, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x507 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x507 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x519: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x519, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x508, ((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x520: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x520, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x508) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x521: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x521, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x510 as u128) + (x510 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x512 as u128) + (x515 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x522: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x522, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x511 as u128) + (x511 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x513 as u128) + (x516 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x523: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x523, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x512 as u128) + (x515 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x510 as u128) + (x510 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x524: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x524, (((x517 >> 63) as fiat_25519_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x513 as u128) + (x516 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x511 as u128) + (x511 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x525: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x525, ((x520 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x519);
  let mut x526: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x526, ((x520 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x521);
  let mut x527: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x527, ((x520 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x522);
  let x528: u64 = (((((!((((0x1 as u128) + (x518 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x529: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x529, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x518 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x518 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x530: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x530, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x519, ((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x531: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x531, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x519) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x532: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x532, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x521 as u128) + (x521 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x523 as u128) + (x526 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x533: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x533, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x522 as u128) + (x522 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x524 as u128) + (x527 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x534: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x534, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x523 as u128) + (x526 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x521 as u128) + (x521 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x535: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x535, (((x528 >> 63) as fiat_25519_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x524 as u128) + (x527 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x522 as u128) + (x522 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x536: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x536, ((x531 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x530);
  let mut x537: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x537, ((x531 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x532);
  let mut x538: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x538, ((x531 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x533);
  let x539: u64 = (((((!((((0x1 as u128) + (x529 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x540: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x540, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x529 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x529 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x541: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x541, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x530, ((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x542: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x542, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x530) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x543: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x543, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x532 as u128) + (x532 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x534 as u128) + (x537 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x544: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x544, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x533 as u128) + (x533 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x535 as u128) + (x538 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x545: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x545, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x534 as u128) + (x537 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x532 as u128) + (x532 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x546: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x546, (((x539 >> 63) as fiat_25519_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x535 as u128) + (x538 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x533 as u128) + (x533 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x547: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x547, ((x542 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x541);
  let mut x548: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x548, ((x542 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x543);
  let mut x549: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x549, ((x542 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x544);
  let x550: u64 = (((((!((((0x1 as u128) + (x540 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x551: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x551, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x540 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x540 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x552: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x552, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x541, ((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x553: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x553, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x541) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x554: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x554, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x543 as u128) + (x543 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x545 as u128) + (x548 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x555: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x555, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x544 as u128) + (x544 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x546 as u128) + (x549 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x556: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x556, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x545 as u128) + (x548 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x543 as u128) + (x543 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x557: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x557, (((x550 >> 63) as fiat_25519_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x546 as u128) + (x549 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x544 as u128) + (x544 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x558: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x558, ((x553 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x552);
  let mut x559: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x559, ((x553 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x554);
  let mut x560: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x560, ((x553 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x555);
  let x561: u64 = (((((!((((0x1 as u128) + (x551 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x562: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x562, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x551 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x551 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x563: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x563, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x552, ((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x564: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x564, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x552) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x565: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x565, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x554 as u128) + (x554 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x556 as u128) + (x559 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x566: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x566, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x555 as u128) + (x555 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x557 as u128) + (x560 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x567: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x567, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x556 as u128) + (x559 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x554 as u128) + (x554 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x568: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x568, (((x561 >> 63) as fiat_25519_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x557 as u128) + (x560 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x555 as u128) + (x555 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x569: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x569, ((x564 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x563);
  let mut x570: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x570, ((x564 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x565);
  let mut x571: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x571, ((x564 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x566);
  let x572: u64 = (((((!((((0x1 as u128) + (x562 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x573: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x573, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x562 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x562 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x574: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x574, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x563, ((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x575: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x575, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x563) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x576: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x576, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x565 as u128) + (x565 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x567 as u128) + (x570 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x577: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x577, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x566 as u128) + (x566 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x568 as u128) + (x571 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x578: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x578, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x567 as u128) + (x570 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x565 as u128) + (x565 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x579: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x579, (((x572 >> 63) as fiat_25519_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x568 as u128) + (x571 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x566 as u128) + (x566 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x580: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x580, ((x575 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x574);
  let mut x581: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x581, ((x575 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x576);
  let mut x582: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x582, ((x575 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x577);
  let x583: u64 = (((((!((((0x1 as u128) + (x573 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x584: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x584, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x573 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x573 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x585: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x585, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x574, ((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x586: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x586, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x574) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x587: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x587, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x576 as u128) + (x576 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x578 as u128) + (x581 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x588: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x588, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x577 as u128) + (x577 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x579 as u128) + (x582 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x589: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x589, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x578 as u128) + (x581 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x576 as u128) + (x576 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x590: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x590, (((x583 >> 63) as fiat_25519_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x579 as u128) + (x582 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x577 as u128) + (x577 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x591: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x591, ((x586 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x585);
  let mut x592: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x592, ((x586 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x587);
  let mut x593: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x593, ((x586 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x588);
  let x594: u64 = (((((!((((0x1 as u128) + (x584 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x595: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x595, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x584 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x584 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x596: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x596, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x585, ((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x597: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x597, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x585) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x598: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x598, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x587 as u128) + (x587 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x589 as u128) + (x592 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x599: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x599, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x588 as u128) + (x588 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x590 as u128) + (x593 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x600: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x600, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x589 as u128) + (x592 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x587 as u128) + (x587 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x601: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x601, (((x594 >> 63) as fiat_25519_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x590 as u128) + (x593 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x588 as u128) + (x588 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x602: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x602, ((x597 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x596);
  let mut x603: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x603, ((x597 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x598);
  let mut x604: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x604, ((x597 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x599);
  let x605: u64 = (((((!((((0x1 as u128) + (x595 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x606: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x606, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x595 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x595 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x607: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x607, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x596, ((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x608: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x608, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x596) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x609: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x609, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x598 as u128) + (x598 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x600 as u128) + (x603 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x610: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x610, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x599 as u128) + (x599 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x601 as u128) + (x604 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x611: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x611, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x600 as u128) + (x603 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x598 as u128) + (x598 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x612: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x612, (((x605 >> 63) as fiat_25519_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x601 as u128) + (x604 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x599 as u128) + (x599 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x613: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x613, ((x608 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x607);
  let mut x614: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x614, ((x608 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x609);
  let mut x615: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x615, ((x608 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x610);
  let x616: u64 = (((((!((((0x1 as u128) + (x606 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x617: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x617, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x606 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x606 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x618: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x618, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x607, ((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x619: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x619, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x607) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x620: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x620, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x609 as u128) + (x609 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x611 as u128) + (x614 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x621: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x621, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x610 as u128) + (x610 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x612 as u128) + (x615 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x622: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x622, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x611 as u128) + (x614 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x609 as u128) + (x609 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x623: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x623, (((x616 >> 63) as fiat_25519_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x612 as u128) + (x615 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x610 as u128) + (x610 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x624: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x624, ((x619 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x618);
  let mut x625: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x625, ((x619 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x620);
  let mut x626: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x626, ((x619 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x621);
  let x627: u64 = (((((!((((0x1 as u128) + (x617 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x628: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x628, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x617 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x617 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x629: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x629, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x618, ((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x630: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x630, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x618) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x631: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x631, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x620 as u128) + (x620 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x622 as u128) + (x625 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x632: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x632, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x621 as u128) + (x621 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x623 as u128) + (x626 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x633: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x633, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x622 as u128) + (x625 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x620 as u128) + (x620 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x634: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x634, (((x627 >> 63) as fiat_25519_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x623 as u128) + (x626 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x621 as u128) + (x621 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x635: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x635, ((x630 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x629);
  let mut x636: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x636, ((x630 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x631);
  let mut x637: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x637, ((x630 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x632);
  let x638: u64 = (((((!((((0x1 as u128) + (x628 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x639: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x639, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x628 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x628 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x640: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x640, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x629, ((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x641: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x641, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x629) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x642: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x642, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x631 as u128) + (x631 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x633 as u128) + (x636 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x643: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x643, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x632 as u128) + (x632 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x634 as u128) + (x637 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x644: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x644, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x633 as u128) + (x636 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x631 as u128) + (x631 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x645: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x645, (((x638 >> 63) as fiat_25519_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x634 as u128) + (x637 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x632 as u128) + (x632 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x646: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x646, ((x641 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x640);
  let mut x647: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x647, ((x641 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x642);
  let mut x648: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x648, ((x641 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x643);
  let x649: u64 = (((((!((((0x1 as u128) + (x639 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x650: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x650, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x639 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x639 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x651: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x651, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x640, ((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x652: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x652, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x640) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x653: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x653, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x642 as u128) + (x642 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x644 as u128) + (x647 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x654: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x654, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x643 as u128) + (x643 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x645 as u128) + (x648 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x655: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x655, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x644 as u128) + (x647 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x642 as u128) + (x642 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x656: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x656, (((x649 >> 63) as fiat_25519_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x645 as u128) + (x648 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x643 as u128) + (x643 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x657: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x657, ((x652 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x651);
  let mut x658: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x658, ((x652 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x653);
  let mut x659: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x659, ((x652 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x654);
  let x660: u64 = (((((!((((0x1 as u128) + (x650 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x661: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x661, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((0x1 as u128) + (x650 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x650 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x662: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x662, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), x651, ((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x663: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x663, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x651) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x664: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x664, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x653 as u128) + (x653 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x655 as u128) + (x658 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x665: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x665, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x654 as u128) + (x654 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x656 as u128) + (x659 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x666: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x666, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x655 as u128) + (x658 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x653 as u128) + (x653 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x667: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x667, (((x660 >> 63) as fiat_25519_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x656 as u128) + (x659 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x654 as u128) + (x654 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x668: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x668, ((x663 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x662);
  let mut x669: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x669, ((x663 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x664);
  let mut x670: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x670, ((x663 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x665);
  let x671: u64 = (((((!((((0x1 as u128) + (x661 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x672: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x672, (((x671 >> 63) as fiat_25519_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x662) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x673: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x673, (((x671 >> 63) as fiat_25519_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x664 as u128) + (x664 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x666 as u128) + (x669 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x674: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x674, (((x671 >> 63) as fiat_25519_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x665 as u128) + (x665 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x667 as u128) + (x670 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x675: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x675, (((x671 >> 63) as fiat_25519_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x666 as u128) + (x669 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x664 as u128) + (x664 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x676: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x676, (((x671 >> 63) as fiat_25519_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_25519_u1)), ((((x667 as u128) + (x670 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x665 as u128) + (x665 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x677: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x677, ((x672 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x673);
  let mut x678: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x678, ((x672 & (0x1 as u64)) as fiat_25519_u1), (0x0 as u64), x674);
  let mut x679: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x679, (((arg1[4]) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x680: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x680, ((((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x681: u64 = 0;
  let mut x682: u64 = 0;
  fiat_25519_mulx_u64(&mut x681, &mut x682, x680, (arg1[0]));
  let mut x683: u64 = 0;
  let mut x684: u64 = 0;
  fiat_25519_mulx_u64(&mut x683, &mut x684, x680, (arg1[1]));
  let mut x685: u64 = 0;
  let mut x686: u64 = 0;
  fiat_25519_mulx_u64(&mut x685, &mut x686, x680, (arg1[0]));
  let mut x687: u64 = 0;
  let mut x688: u64 = 0;
  fiat_25519_mulx_u64(&mut x687, &mut x688, x680, (arg1[2]));
  let mut x689: u64 = 0;
  let mut x690: u64 = 0;
  fiat_25519_mulx_u64(&mut x689, &mut x690, x680, (arg1[1]));
  let mut x691: u64 = 0;
  let mut x692: u64 = 0;
  fiat_25519_mulx_u64(&mut x691, &mut x692, x680, (arg1[0]));
  let mut x693: u64 = 0;
  let mut x694: u64 = 0;
  fiat_25519_mulx_u64(&mut x693, &mut x694, x680, (arg1[3]));
  let mut x695: u64 = 0;
  let mut x696: u64 = 0;
  fiat_25519_mulx_u64(&mut x695, &mut x696, x680, (arg1[2]));
  let mut x697: u64 = 0;
  let mut x698: u64 = 0;
  fiat_25519_mulx_u64(&mut x697, &mut x698, x680, (arg1[1]));
  let mut x699: u64 = 0;
  let mut x700: u64 = 0;
  fiat_25519_mulx_u64(&mut x699, &mut x700, x680, (arg1[0]));
  let mut x701: u64 = 0;
  let mut x702: u64 = 0;
  fiat_25519_mulx_u64(&mut x701, &mut x702, x680, (arg1[4]));
  let mut x703: u64 = 0;
  let mut x704: u64 = 0;
  fiat_25519_mulx_u64(&mut x703, &mut x704, x680, (arg1[3]));
  let mut x705: u64 = 0;
  let mut x706: u64 = 0;
  fiat_25519_mulx_u64(&mut x705, &mut x706, x680, (arg1[2]));
  let mut x707: u64 = 0;
  let mut x708: u64 = 0;
  fiat_25519_mulx_u64(&mut x707, &mut x708, x680, (arg1[1]));
  let mut x709: u64 = 0;
  let mut x710: u64 = 0;
  fiat_25519_mulx_u64(&mut x709, &mut x710, x680, (arg1[0]));
  let mut x711: u64 = 0;
  let mut x712: u64 = 0;
  fiat_25519_mulx_u64(&mut x711, &mut x712, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), x679);
  let mut x713: u64 = 0;
  let mut x714: u64 = 0;
  fiat_25519_mulx_u64(&mut x713, &mut x714, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[4]));
  let mut x715: u64 = 0;
  let mut x716: u64 = 0;
  fiat_25519_mulx_u64(&mut x715, &mut x716, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[3]));
  let mut x717: u64 = 0;
  let mut x718: u64 = 0;
  fiat_25519_mulx_u64(&mut x717, &mut x718, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[2]));
  let mut x719: u64 = 0;
  let mut x720: u64 = 0;
  fiat_25519_mulx_u64(&mut x719, &mut x720, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[1]));
  let mut x721: u64 = 0;
  let mut x722: u64 = 0;
  fiat_25519_mulx_u64(&mut x721, &mut x722, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[0]));
  let mut x723: u64 = 0;
  let mut x724: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x723, &mut x724, 0x0, x714, x681);
  let mut x725: u64 = 0;
  let mut x726: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x725, &mut x726, 0x0, x723, x683);
  let mut x727: u64 = 0;
  let mut x728: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x727, &mut x728, 0x0, x716, x685);
  let mut x729: u64 = 0;
  let mut x730: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x729, &mut x730, x728, x725, x686);
  let mut x731: u64 = 0;
  let mut x732: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x731, &mut x732, 0x0, x727, x689);
  let mut x733: u64 = 0;
  let mut x734: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x733, &mut x734, x732, x729, x687);
  let mut x735: u64 = 0;
  let mut x736: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x735, &mut x736, 0x0, x718, x691);
  let mut x737: u64 = 0;
  let mut x738: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x737, &mut x738, x736, x731, x692);
  let mut x739: u64 = 0;
  let mut x740: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x739, &mut x740, x738, x733, x690);
  let mut x741: u64 = 0;
  let mut x742: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x741, &mut x742, 0x0, x735, x697);
  let mut x743: u64 = 0;
  let mut x744: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x743, &mut x744, x742, x737, x695);
  let mut x745: u64 = 0;
  let mut x746: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x745, &mut x746, x744, x739, x693);
  let mut x747: u64 = 0;
  let mut x748: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x747, &mut x748, 0x0, x720, x699);
  let mut x749: u64 = 0;
  let mut x750: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x749, &mut x750, x748, x741, x700);
  let mut x751: u64 = 0;
  let mut x752: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x751, &mut x752, x750, x743, x698);
  let mut x753: u64 = 0;
  let mut x754: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x753, &mut x754, x752, x745, x696);
  let mut x755: u64 = 0;
  let mut x756: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x755, &mut x756, 0x0, x747, x707);
  let mut x757: u64 = 0;
  let mut x758: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x757, &mut x758, x756, x749, x705);
  let mut x759: u64 = 0;
  let mut x760: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x759, &mut x760, x758, x751, x703);
  let mut x761: u64 = 0;
  let mut x762: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x761, &mut x762, x760, x753, x701);
  let mut x763: u64 = 0;
  let mut x764: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x763, &mut x764, 0x0, x722, x709);
  let mut x765: u64 = 0;
  let mut x766: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x765, &mut x766, x764, x755, x710);
  let mut x767: u64 = 0;
  let mut x768: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x767, &mut x768, x766, x757, x708);
  let mut x769: u64 = 0;
  let mut x770: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x769, &mut x770, x768, x759, x706);
  let mut x771: u64 = 0;
  let mut x772: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x771, &mut x772, x770, x761, x704);
  let mut x773: u64 = 0;
  let mut x774: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x773, &mut x774, 0x0, x763, x719);
  let mut x775: u64 = 0;
  let mut x776: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x775, &mut x776, x774, x765, x717);
  let mut x777: u64 = 0;
  let mut x778: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x777, &mut x778, x776, x767, x715);
  let mut x779: u64 = 0;
  let mut x780: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x779, &mut x780, x778, x769, x713);
  let mut x781: u64 = 0;
  let mut x782: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x781, &mut x782, x780, x771, x711);
  let mut x783: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x783, (((arg2[4]) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x784: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x784, ((((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x785: u64 = 0;
  let mut x786: u64 = 0;
  fiat_25519_mulx_u64(&mut x785, &mut x786, x784, (arg2[0]));
  let mut x787: u64 = 0;
  let mut x788: u64 = 0;
  fiat_25519_mulx_u64(&mut x787, &mut x788, x784, (arg2[1]));
  let mut x789: u64 = 0;
  let mut x790: u64 = 0;
  fiat_25519_mulx_u64(&mut x789, &mut x790, x784, (arg2[0]));
  let mut x791: u64 = 0;
  let mut x792: u64 = 0;
  fiat_25519_mulx_u64(&mut x791, &mut x792, x784, (arg2[2]));
  let mut x793: u64 = 0;
  let mut x794: u64 = 0;
  fiat_25519_mulx_u64(&mut x793, &mut x794, x784, (arg2[1]));
  let mut x795: u64 = 0;
  let mut x796: u64 = 0;
  fiat_25519_mulx_u64(&mut x795, &mut x796, x784, (arg2[0]));
  let mut x797: u64 = 0;
  let mut x798: u64 = 0;
  fiat_25519_mulx_u64(&mut x797, &mut x798, x784, (arg2[3]));
  let mut x799: u64 = 0;
  let mut x800: u64 = 0;
  fiat_25519_mulx_u64(&mut x799, &mut x800, x784, (arg2[2]));
  let mut x801: u64 = 0;
  let mut x802: u64 = 0;
  fiat_25519_mulx_u64(&mut x801, &mut x802, x784, (arg2[1]));
  let mut x803: u64 = 0;
  let mut x804: u64 = 0;
  fiat_25519_mulx_u64(&mut x803, &mut x804, x784, (arg2[0]));
  let mut x805: u64 = 0;
  let mut x806: u64 = 0;
  fiat_25519_mulx_u64(&mut x805, &mut x806, x784, (arg2[4]));
  let mut x807: u64 = 0;
  let mut x808: u64 = 0;
  fiat_25519_mulx_u64(&mut x807, &mut x808, x784, (arg2[3]));
  let mut x809: u64 = 0;
  let mut x810: u64 = 0;
  fiat_25519_mulx_u64(&mut x809, &mut x810, x784, (arg2[2]));
  let mut x811: u64 = 0;
  let mut x812: u64 = 0;
  fiat_25519_mulx_u64(&mut x811, &mut x812, x784, (arg2[1]));
  let mut x813: u64 = 0;
  let mut x814: u64 = 0;
  fiat_25519_mulx_u64(&mut x813, &mut x814, x784, (arg2[0]));
  let mut x815: u64 = 0;
  let mut x816: u64 = 0;
  fiat_25519_mulx_u64(&mut x815, &mut x816, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), x783);
  let mut x817: u64 = 0;
  let mut x818: u64 = 0;
  fiat_25519_mulx_u64(&mut x817, &mut x818, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[4]));
  let mut x819: u64 = 0;
  let mut x820: u64 = 0;
  fiat_25519_mulx_u64(&mut x819, &mut x820, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[3]));
  let mut x821: u64 = 0;
  let mut x822: u64 = 0;
  fiat_25519_mulx_u64(&mut x821, &mut x822, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[2]));
  let mut x823: u64 = 0;
  let mut x824: u64 = 0;
  fiat_25519_mulx_u64(&mut x823, &mut x824, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[1]));
  let mut x825: u64 = 0;
  let mut x826: u64 = 0;
  fiat_25519_mulx_u64(&mut x825, &mut x826, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[0]));
  let mut x827: u64 = 0;
  let mut x828: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x827, &mut x828, 0x0, x818, x785);
  let mut x829: u64 = 0;
  let mut x830: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x829, &mut x830, 0x0, x827, x787);
  let mut x831: u64 = 0;
  let mut x832: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x831, &mut x832, 0x0, x820, x789);
  let mut x833: u64 = 0;
  let mut x834: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x833, &mut x834, x832, x829, x790);
  let mut x835: u64 = 0;
  let mut x836: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x835, &mut x836, 0x0, x831, x793);
  let mut x837: u64 = 0;
  let mut x838: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x837, &mut x838, x836, x833, x791);
  let mut x839: u64 = 0;
  let mut x840: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x839, &mut x840, 0x0, x822, x795);
  let mut x841: u64 = 0;
  let mut x842: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x841, &mut x842, x840, x835, x796);
  let mut x843: u64 = 0;
  let mut x844: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x843, &mut x844, x842, x837, x794);
  let mut x845: u64 = 0;
  let mut x846: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x845, &mut x846, 0x0, x839, x801);
  let mut x847: u64 = 0;
  let mut x848: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x847, &mut x848, x846, x841, x799);
  let mut x849: u64 = 0;
  let mut x850: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x849, &mut x850, x848, x843, x797);
  let mut x851: u64 = 0;
  let mut x852: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x851, &mut x852, 0x0, x824, x803);
  let mut x853: u64 = 0;
  let mut x854: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x853, &mut x854, x852, x845, x804);
  let mut x855: u64 = 0;
  let mut x856: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x855, &mut x856, x854, x847, x802);
  let mut x857: u64 = 0;
  let mut x858: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x857, &mut x858, x856, x849, x800);
  let mut x859: u64 = 0;
  let mut x860: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x859, &mut x860, 0x0, x851, x811);
  let mut x861: u64 = 0;
  let mut x862: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x861, &mut x862, x860, x853, x809);
  let mut x863: u64 = 0;
  let mut x864: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x863, &mut x864, x862, x855, x807);
  let mut x865: u64 = 0;
  let mut x866: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x865, &mut x866, x864, x857, x805);
  let mut x867: u64 = 0;
  let mut x868: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x867, &mut x868, 0x0, x826, x813);
  let mut x869: u64 = 0;
  let mut x870: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x869, &mut x870, x868, x859, x814);
  let mut x871: u64 = 0;
  let mut x872: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x871, &mut x872, x870, x861, x812);
  let mut x873: u64 = 0;
  let mut x874: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x873, &mut x874, x872, x863, x810);
  let mut x875: u64 = 0;
  let mut x876: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x875, &mut x876, x874, x865, x808);
  let mut x877: u64 = 0;
  let mut x878: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x877, &mut x878, 0x0, x867, x823);
  let mut x879: u64 = 0;
  let mut x880: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x879, &mut x880, x878, x869, x821);
  let mut x881: u64 = 0;
  let mut x882: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x881, &mut x882, x880, x871, x819);
  let mut x883: u64 = 0;
  let mut x884: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x883, &mut x884, x882, x873, x817);
  let mut x885: u64 = 0;
  let mut x886: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x885, &mut x886, x884, x875, x815);
  let mut x887: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x887, (((arg1[4]) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x888: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x888, ((((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x889: u64 = 0;
  let mut x890: u64 = 0;
  fiat_25519_mulx_u64(&mut x889, &mut x890, x888, (arg1[0]));
  let mut x891: u64 = 0;
  let mut x892: u64 = 0;
  fiat_25519_mulx_u64(&mut x891, &mut x892, x888, (arg1[1]));
  let mut x893: u64 = 0;
  let mut x894: u64 = 0;
  fiat_25519_mulx_u64(&mut x893, &mut x894, x888, (arg1[0]));
  let mut x895: u64 = 0;
  let mut x896: u64 = 0;
  fiat_25519_mulx_u64(&mut x895, &mut x896, x888, (arg1[2]));
  let mut x897: u64 = 0;
  let mut x898: u64 = 0;
  fiat_25519_mulx_u64(&mut x897, &mut x898, x888, (arg1[1]));
  let mut x899: u64 = 0;
  let mut x900: u64 = 0;
  fiat_25519_mulx_u64(&mut x899, &mut x900, x888, (arg1[0]));
  let mut x901: u64 = 0;
  let mut x902: u64 = 0;
  fiat_25519_mulx_u64(&mut x901, &mut x902, x888, (arg1[3]));
  let mut x903: u64 = 0;
  let mut x904: u64 = 0;
  fiat_25519_mulx_u64(&mut x903, &mut x904, x888, (arg1[2]));
  let mut x905: u64 = 0;
  let mut x906: u64 = 0;
  fiat_25519_mulx_u64(&mut x905, &mut x906, x888, (arg1[1]));
  let mut x907: u64 = 0;
  let mut x908: u64 = 0;
  fiat_25519_mulx_u64(&mut x907, &mut x908, x888, (arg1[0]));
  let mut x909: u64 = 0;
  let mut x910: u64 = 0;
  fiat_25519_mulx_u64(&mut x909, &mut x910, x888, (arg1[4]));
  let mut x911: u64 = 0;
  let mut x912: u64 = 0;
  fiat_25519_mulx_u64(&mut x911, &mut x912, x888, (arg1[3]));
  let mut x913: u64 = 0;
  let mut x914: u64 = 0;
  fiat_25519_mulx_u64(&mut x913, &mut x914, x888, (arg1[2]));
  let mut x915: u64 = 0;
  let mut x916: u64 = 0;
  fiat_25519_mulx_u64(&mut x915, &mut x916, x888, (arg1[1]));
  let mut x917: u64 = 0;
  let mut x918: u64 = 0;
  fiat_25519_mulx_u64(&mut x917, &mut x918, x888, (arg1[0]));
  let mut x919: u64 = 0;
  let mut x920: u64 = 0;
  fiat_25519_mulx_u64(&mut x919, &mut x920, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), x887);
  let mut x921: u64 = 0;
  let mut x922: u64 = 0;
  fiat_25519_mulx_u64(&mut x921, &mut x922, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[4]));
  let mut x923: u64 = 0;
  let mut x924: u64 = 0;
  fiat_25519_mulx_u64(&mut x923, &mut x924, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[3]));
  let mut x925: u64 = 0;
  let mut x926: u64 = 0;
  fiat_25519_mulx_u64(&mut x925, &mut x926, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[2]));
  let mut x927: u64 = 0;
  let mut x928: u64 = 0;
  fiat_25519_mulx_u64(&mut x927, &mut x928, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[1]));
  let mut x929: u64 = 0;
  let mut x930: u64 = 0;
  fiat_25519_mulx_u64(&mut x929, &mut x930, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[0]));
  let mut x931: u64 = 0;
  let mut x932: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x931, &mut x932, 0x0, x922, x889);
  let mut x933: u64 = 0;
  let mut x934: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x933, &mut x934, 0x0, x931, x891);
  let mut x935: u64 = 0;
  let mut x936: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x935, &mut x936, 0x0, x924, x893);
  let mut x937: u64 = 0;
  let mut x938: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x937, &mut x938, x936, x933, x894);
  let mut x939: u64 = 0;
  let mut x940: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x939, &mut x940, 0x0, x935, x897);
  let mut x941: u64 = 0;
  let mut x942: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x941, &mut x942, x940, x937, x895);
  let mut x943: u64 = 0;
  let mut x944: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x943, &mut x944, 0x0, x926, x899);
  let mut x945: u64 = 0;
  let mut x946: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x945, &mut x946, x944, x939, x900);
  let mut x947: u64 = 0;
  let mut x948: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x947, &mut x948, x946, x941, x898);
  let mut x949: u64 = 0;
  let mut x950: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x949, &mut x950, 0x0, x943, x905);
  let mut x951: u64 = 0;
  let mut x952: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x951, &mut x952, x950, x945, x903);
  let mut x953: u64 = 0;
  let mut x954: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x953, &mut x954, x952, x947, x901);
  let mut x955: u64 = 0;
  let mut x956: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x955, &mut x956, 0x0, x928, x907);
  let mut x957: u64 = 0;
  let mut x958: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x957, &mut x958, x956, x949, x908);
  let mut x959: u64 = 0;
  let mut x960: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x959, &mut x960, x958, x951, x906);
  let mut x961: u64 = 0;
  let mut x962: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x961, &mut x962, x960, x953, x904);
  let mut x963: u64 = 0;
  let mut x964: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x963, &mut x964, 0x0, x955, x915);
  let mut x965: u64 = 0;
  let mut x966: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x965, &mut x966, x964, x957, x913);
  let mut x967: u64 = 0;
  let mut x968: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x967, &mut x968, x966, x959, x911);
  let mut x969: u64 = 0;
  let mut x970: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x969, &mut x970, x968, x961, x909);
  let mut x971: u64 = 0;
  let mut x972: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x971, &mut x972, 0x0, x930, x917);
  let mut x973: u64 = 0;
  let mut x974: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x973, &mut x974, x972, x963, x918);
  let mut x975: u64 = 0;
  let mut x976: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x975, &mut x976, x974, x965, x916);
  let mut x977: u64 = 0;
  let mut x978: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x977, &mut x978, x976, x967, x914);
  let mut x979: u64 = 0;
  let mut x980: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x979, &mut x980, x978, x969, x912);
  let mut x981: u64 = 0;
  let mut x982: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x981, &mut x982, 0x0, x971, x927);
  let mut x983: u64 = 0;
  let mut x984: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x983, &mut x984, x982, x973, x925);
  let mut x985: u64 = 0;
  let mut x986: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x985, &mut x986, x984, x975, x923);
  let mut x987: u64 = 0;
  let mut x988: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x987, &mut x988, x986, x977, x921);
  let mut x989: u64 = 0;
  let mut x990: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x989, &mut x990, x988, x979, x919);
  let mut x991: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x991, (((arg2[4]) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x992: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x992, ((((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x993: u64 = 0;
  let mut x994: u64 = 0;
  fiat_25519_mulx_u64(&mut x993, &mut x994, x992, (arg2[0]));
  let mut x995: u64 = 0;
  let mut x996: u64 = 0;
  fiat_25519_mulx_u64(&mut x995, &mut x996, x992, (arg2[1]));
  let mut x997: u64 = 0;
  let mut x998: u64 = 0;
  fiat_25519_mulx_u64(&mut x997, &mut x998, x992, (arg2[0]));
  let mut x999: u64 = 0;
  let mut x1000: u64 = 0;
  fiat_25519_mulx_u64(&mut x999, &mut x1000, x992, (arg2[2]));
  let mut x1001: u64 = 0;
  let mut x1002: u64 = 0;
  fiat_25519_mulx_u64(&mut x1001, &mut x1002, x992, (arg2[1]));
  let mut x1003: u64 = 0;
  let mut x1004: u64 = 0;
  fiat_25519_mulx_u64(&mut x1003, &mut x1004, x992, (arg2[0]));
  let mut x1005: u64 = 0;
  let mut x1006: u64 = 0;
  fiat_25519_mulx_u64(&mut x1005, &mut x1006, x992, (arg2[3]));
  let mut x1007: u64 = 0;
  let mut x1008: u64 = 0;
  fiat_25519_mulx_u64(&mut x1007, &mut x1008, x992, (arg2[2]));
  let mut x1009: u64 = 0;
  let mut x1010: u64 = 0;
  fiat_25519_mulx_u64(&mut x1009, &mut x1010, x992, (arg2[1]));
  let mut x1011: u64 = 0;
  let mut x1012: u64 = 0;
  fiat_25519_mulx_u64(&mut x1011, &mut x1012, x992, (arg2[0]));
  let mut x1013: u64 = 0;
  let mut x1014: u64 = 0;
  fiat_25519_mulx_u64(&mut x1013, &mut x1014, x992, (arg2[4]));
  let mut x1015: u64 = 0;
  let mut x1016: u64 = 0;
  fiat_25519_mulx_u64(&mut x1015, &mut x1016, x992, (arg2[3]));
  let mut x1017: u64 = 0;
  let mut x1018: u64 = 0;
  fiat_25519_mulx_u64(&mut x1017, &mut x1018, x992, (arg2[2]));
  let mut x1019: u64 = 0;
  let mut x1020: u64 = 0;
  fiat_25519_mulx_u64(&mut x1019, &mut x1020, x992, (arg2[1]));
  let mut x1021: u64 = 0;
  let mut x1022: u64 = 0;
  fiat_25519_mulx_u64(&mut x1021, &mut x1022, x992, (arg2[0]));
  let mut x1023: u64 = 0;
  let mut x1024: u64 = 0;
  fiat_25519_mulx_u64(&mut x1023, &mut x1024, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), x991);
  let mut x1025: u64 = 0;
  let mut x1026: u64 = 0;
  fiat_25519_mulx_u64(&mut x1025, &mut x1026, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[4]));
  let mut x1027: u64 = 0;
  let mut x1028: u64 = 0;
  fiat_25519_mulx_u64(&mut x1027, &mut x1028, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[3]));
  let mut x1029: u64 = 0;
  let mut x1030: u64 = 0;
  fiat_25519_mulx_u64(&mut x1029, &mut x1030, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[2]));
  let mut x1031: u64 = 0;
  let mut x1032: u64 = 0;
  fiat_25519_mulx_u64(&mut x1031, &mut x1032, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[1]));
  let mut x1033: u64 = 0;
  let mut x1034: u64 = 0;
  fiat_25519_mulx_u64(&mut x1033, &mut x1034, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[0]));
  let mut x1035: u64 = 0;
  let mut x1036: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1035, &mut x1036, 0x0, x1026, x993);
  let mut x1037: u64 = 0;
  let mut x1038: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1037, &mut x1038, 0x0, x1035, x995);
  let mut x1039: u64 = 0;
  let mut x1040: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1039, &mut x1040, 0x0, x1028, x997);
  let mut x1041: u64 = 0;
  let mut x1042: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1041, &mut x1042, x1040, x1037, x998);
  let mut x1043: u64 = 0;
  let mut x1044: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1043, &mut x1044, 0x0, x1039, x1001);
  let mut x1045: u64 = 0;
  let mut x1046: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1045, &mut x1046, x1044, x1041, x999);
  let mut x1047: u64 = 0;
  let mut x1048: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1047, &mut x1048, 0x0, x1030, x1003);
  let mut x1049: u64 = 0;
  let mut x1050: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1049, &mut x1050, x1048, x1043, x1004);
  let mut x1051: u64 = 0;
  let mut x1052: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1051, &mut x1052, x1050, x1045, x1002);
  let mut x1053: u64 = 0;
  let mut x1054: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1053, &mut x1054, 0x0, x1047, x1009);
  let mut x1055: u64 = 0;
  let mut x1056: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1055, &mut x1056, x1054, x1049, x1007);
  let mut x1057: u64 = 0;
  let mut x1058: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1057, &mut x1058, x1056, x1051, x1005);
  let mut x1059: u64 = 0;
  let mut x1060: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1059, &mut x1060, 0x0, x1032, x1011);
  let mut x1061: u64 = 0;
  let mut x1062: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1061, &mut x1062, x1060, x1053, x1012);
  let mut x1063: u64 = 0;
  let mut x1064: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1063, &mut x1064, x1062, x1055, x1010);
  let mut x1065: u64 = 0;
  let mut x1066: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1065, &mut x1066, x1064, x1057, x1008);
  let mut x1067: u64 = 0;
  let mut x1068: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1067, &mut x1068, 0x0, x1059, x1019);
  let mut x1069: u64 = 0;
  let mut x1070: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1069, &mut x1070, x1068, x1061, x1017);
  let mut x1071: u64 = 0;
  let mut x1072: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1071, &mut x1072, x1070, x1063, x1015);
  let mut x1073: u64 = 0;
  let mut x1074: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1073, &mut x1074, x1072, x1065, x1013);
  let mut x1075: u64 = 0;
  let mut x1076: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1075, &mut x1076, 0x0, x1034, x1021);
  let mut x1077: u64 = 0;
  let mut x1078: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1077, &mut x1078, x1076, x1067, x1022);
  let mut x1079: u64 = 0;
  let mut x1080: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1079, &mut x1080, x1078, x1069, x1020);
  let mut x1081: u64 = 0;
  let mut x1082: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1081, &mut x1082, x1080, x1071, x1018);
  let mut x1083: u64 = 0;
  let mut x1084: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1083, &mut x1084, x1082, x1073, x1016);
  let mut x1085: u64 = 0;
  let mut x1086: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1085, &mut x1086, 0x0, x1075, x1031);
  let mut x1087: u64 = 0;
  let mut x1088: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1087, &mut x1088, x1086, x1077, x1029);
  let mut x1089: u64 = 0;
  let mut x1090: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1089, &mut x1090, x1088, x1079, x1027);
  let mut x1091: u64 = 0;
  let mut x1092: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1091, &mut x1092, x1090, x1081, x1025);
  let mut x1093: u64 = 0;
  let mut x1094: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1093, &mut x1094, x1092, x1083, x1023);
  let mut x1095: u64 = 0;
  let mut x1096: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1095, &mut x1096, 0x0, x721, x825);
  let mut x1097: u64 = 0;
  let mut x1098: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1097, &mut x1098, x1096, x773, x877);
  let mut x1099: u64 = 0;
  let mut x1100: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1099, &mut x1100, x1098, x775, x879);
  let mut x1101: u64 = 0;
  let mut x1102: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1101, &mut x1102, x1100, x777, x881);
  let mut x1103: u64 = 0;
  let mut x1104: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1103, &mut x1104, x1102, x779, x883);
  let mut x1105: u64 = 0;
  let mut x1106: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1105, &mut x1106, x1104, x781, x885);
  let mut x1107: u64 = 0;
  let mut x1108: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1107, &mut x1108, 0x0, x929, x1033);
  let mut x1109: u64 = 0;
  let mut x1110: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1109, &mut x1110, x1108, x981, x1085);
  let mut x1111: u64 = 0;
  let mut x1112: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1111, &mut x1112, x1110, x983, x1087);
  let mut x1113: u64 = 0;
  let mut x1114: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1113, &mut x1114, x1112, x985, x1089);
  let mut x1115: u64 = 0;
  let mut x1116: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1115, &mut x1116, x1114, x987, x1091);
  let mut x1117: u64 = 0;
  let mut x1118: fiat_25519_u1 = 0;
  fiat_25519_addcarryx_u64(&mut x1117, &mut x1118, x1116, x989, x1093);
  let x1119: u64 = ((x1095 >> 62) | ((x1097 << 2) & 0xffffffffffffffff));
  let x1120: u64 = ((x1097 >> 62) | ((x1099 << 2) & 0xffffffffffffffff));
  let x1121: u64 = ((x1099 >> 62) | ((x1101 << 2) & 0xffffffffffffffff));
  let x1122: u64 = ((x1101 >> 62) | ((x1103 << 2) & 0xffffffffffffffff));
  let x1123: u64 = ((x1103 >> 62) | ((x1105 << 2) & 0xffffffffffffffff));
  let x1124: u64 = ((x1107 >> 62) | ((x1109 << 2) & 0xffffffffffffffff));
  let x1125: u64 = ((x1109 >> 62) | ((x1111 << 2) & 0xffffffffffffffff));
  let x1126: u64 = ((x1111 >> 62) | ((x1113 << 2) & 0xffffffffffffffff));
  let x1127: u64 = ((x1113 >> 62) | ((x1115 << 2) & 0xffffffffffffffff));
  let x1128: u64 = ((x1115 >> 62) | ((x1117 << 2) & 0xffffffffffffffff));
  let x1129: fiat_25519_u1 = ((((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1);
  let x1130: u64 = (((((!((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1131: u64 = ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1132: u64 = (x1131 >> 51);
  let x1133: u64 = (x1131 & 0x7ffffffffffff);
  let x1134: u64 = (x1130 >> 51);
  let x1135: u64 = (x1130 & 0x7ffffffffffff);
  let x1136: u64 = (0xfffffffffffda - x1135);
  let x1137: u64 = (0xffffffffffffe - x1134);
  let x1138: fiat_25519_u1 = ((x1136 >> 51) as fiat_25519_u1);
  let x1139: u64 = (x1136 & 0x7ffffffffffff);
  let x1140: u64 = ((x1138 as u64) + x1137);
  let x1141: u64 = (x1140 & 0x7ffffffffffff);
  let x1142: u64 = (x1139 + 0x13);
  let x1143: fiat_25519_u1 = ((x1142 >> 51) as fiat_25519_u1);
  let x1144: u64 = (x1142 & 0x7ffffffffffff);
  let x1145: u64 = ((x1143 as u64) + x1141);
  let x1146: fiat_25519_u1 = ((x1145 >> 51) as fiat_25519_u1);
  let x1147: u64 = (x1145 & 0x7ffffffffffff);
  let x1148: u64 = ((x1146 as u64) + 0x7ffffffffffff);
  let mut x1149: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1149, x1129, x1133, x1144);
  let mut x1150: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1150, x1129, x1132, x1147);
  let mut x1151: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1151, x1129, (0x0 as u64), x1148);
  let mut x1152: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1152, x1129, (0x0 as u64), 0x7ffffffffffff);
  let mut x1153: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1153, x1129, (0x0 as u64), 0x7ffffffffffff);
  let x1154: fiat_25519_u1 = ((((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1);
  let x1155: u64 = (((((!((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1156: u64 = ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1157: u64 = (x1156 >> 51);
  let x1158: u64 = (x1156 & 0x7ffffffffffff);
  let x1159: u64 = (x1155 >> 51);
  let x1160: u64 = (x1155 & 0x7ffffffffffff);
  let x1161: u64 = (0xfffffffffffda - x1160);
  let x1162: u64 = (0xffffffffffffe - x1159);
  let x1163: fiat_25519_u1 = ((x1161 >> 51) as fiat_25519_u1);
  let x1164: u64 = (x1161 & 0x7ffffffffffff);
  let x1165: u64 = ((x1163 as u64) + x1162);
  let x1166: u64 = (x1165 & 0x7ffffffffffff);
  let x1167: u64 = (x1164 + 0x13);
  let x1168: fiat_25519_u1 = ((x1167 >> 51) as fiat_25519_u1);
  let x1169: u64 = (x1167 & 0x7ffffffffffff);
  let x1170: u64 = ((x1168 as u64) + x1166);
  let x1171: fiat_25519_u1 = ((x1170 >> 51) as fiat_25519_u1);
  let x1172: u64 = (x1170 & 0x7ffffffffffff);
  let x1173: u64 = ((x1171 as u64) + 0x7ffffffffffff);
  let mut x1174: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1174, x1154, x1158, x1169);
  let mut x1175: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1175, x1154, x1157, x1172);
  let mut x1176: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1176, x1154, (0x0 as u64), x1173);
  let mut x1177: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1177, x1154, (0x0 as u64), 0x7ffffffffffff);
  let mut x1178: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1178, x1154, (0x0 as u64), 0x7ffffffffffff);
  let x1179: fiat_25519_u1 = ((((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1);
  let x1180: u64 = (((((!((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1181: u64 = ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1182: u64 = (x1181 >> 51);
  let x1183: u64 = (x1181 & 0x7ffffffffffff);
  let x1184: u64 = (x1180 >> 51);
  let x1185: u64 = (x1180 & 0x7ffffffffffff);
  let x1186: u64 = (0xfffffffffffda - x1185);
  let x1187: u64 = (0xffffffffffffe - x1184);
  let x1188: fiat_25519_u1 = ((x1186 >> 51) as fiat_25519_u1);
  let x1189: u64 = (x1186 & 0x7ffffffffffff);
  let x1190: u64 = ((x1188 as u64) + x1187);
  let x1191: u64 = (x1190 & 0x7ffffffffffff);
  let x1192: u64 = (x1189 + 0x13);
  let x1193: fiat_25519_u1 = ((x1192 >> 51) as fiat_25519_u1);
  let x1194: u64 = (x1192 & 0x7ffffffffffff);
  let x1195: u64 = ((x1193 as u64) + x1191);
  let x1196: fiat_25519_u1 = ((x1195 >> 51) as fiat_25519_u1);
  let x1197: u64 = (x1195 & 0x7ffffffffffff);
  let x1198: u64 = ((x1196 as u64) + 0x7ffffffffffff);
  let mut x1199: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1199, x1179, x1183, x1194);
  let mut x1200: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1200, x1179, x1182, x1197);
  let mut x1201: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1201, x1179, (0x0 as u64), x1198);
  let mut x1202: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1202, x1179, (0x0 as u64), 0x7ffffffffffff);
  let mut x1203: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1203, x1179, (0x0 as u64), 0x7ffffffffffff);
  let x1204: fiat_25519_u1 = ((((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_25519_u1);
  let x1205: u64 = (((((!((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1206: u64 = ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1207: u64 = (x1206 >> 51);
  let x1208: u64 = (x1206 & 0x7ffffffffffff);
  let x1209: u64 = (x1205 >> 51);
  let x1210: u64 = (x1205 & 0x7ffffffffffff);
  let x1211: u64 = (0xfffffffffffda - x1210);
  let x1212: u64 = (0xffffffffffffe - x1209);
  let x1213: fiat_25519_u1 = ((x1211 >> 51) as fiat_25519_u1);
  let x1214: u64 = (x1211 & 0x7ffffffffffff);
  let x1215: u64 = ((x1213 as u64) + x1212);
  let x1216: u64 = (x1215 & 0x7ffffffffffff);
  let x1217: u64 = (x1214 + 0x13);
  let x1218: fiat_25519_u1 = ((x1217 >> 51) as fiat_25519_u1);
  let x1219: u64 = (x1217 & 0x7ffffffffffff);
  let x1220: u64 = ((x1218 as u64) + x1216);
  let x1221: fiat_25519_u1 = ((x1220 >> 51) as fiat_25519_u1);
  let x1222: u64 = (x1220 & 0x7ffffffffffff);
  let x1223: u64 = ((x1221 as u64) + 0x7ffffffffffff);
  let mut x1224: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1224, x1204, x1208, x1219);
  let mut x1225: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1225, x1204, x1207, x1222);
  let mut x1226: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1226, x1204, (0x0 as u64), x1223);
  let mut x1227: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1227, x1204, (0x0 as u64), 0x7ffffffffffff);
  let mut x1228: u64 = 0;
  fiat_25519_cmovznz_u64(&mut x1228, x1204, (0x0 as u64), 0x7ffffffffffff);
  let x1229: u128 = ((x1153 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1230: u128 = ((x1153 as u128) * (((arg3[3]) * 0x13) as u128));
  let x1231: u128 = ((x1153 as u128) * (((arg3[2]) * 0x13) as u128));
  let x1232: u128 = ((x1153 as u128) * (((arg3[1]) * 0x13) as u128));
  let x1233: u128 = ((x1152 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1234: u128 = ((x1152 as u128) * (((arg3[3]) * 0x13) as u128));
  let x1235: u128 = ((x1152 as u128) * (((arg3[2]) * 0x13) as u128));
  let x1236: u128 = ((x1151 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1237: u128 = ((x1151 as u128) * (((arg3[3]) * 0x13) as u128));
  let x1238: u128 = ((x1150 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1239: u128 = ((x1153 as u128) * ((arg3[0]) as u128));
  let x1240: u128 = ((x1152 as u128) * ((arg3[1]) as u128));
  let x1241: u128 = ((x1152 as u128) * ((arg3[0]) as u128));
  let x1242: u128 = ((x1151 as u128) * ((arg3[2]) as u128));
  let x1243: u128 = ((x1151 as u128) * ((arg3[1]) as u128));
  let x1244: u128 = ((x1151 as u128) * ((arg3[0]) as u128));
  let x1245: u128 = ((x1150 as u128) * ((arg3[3]) as u128));
  let x1246: u128 = ((x1150 as u128) * ((arg3[2]) as u128));
  let x1247: u128 = ((x1150 as u128) * ((arg3[1]) as u128));
  let x1248: u128 = ((x1150 as u128) * ((arg3[0]) as u128));
  let x1249: u128 = ((x1149 as u128) * ((arg3[4]) as u128));
  let x1250: u128 = ((x1149 as u128) * ((arg3[3]) as u128));
  let x1251: u128 = ((x1149 as u128) * ((arg3[2]) as u128));
  let x1252: u128 = ((x1149 as u128) * ((arg3[1]) as u128));
  let x1253: u128 = ((x1149 as u128) * ((arg3[0]) as u128));
  let x1254: u128 = (x1253 + (x1238 + (x1237 + (x1235 + x1232))));
  let x1255: u64 = ((x1254 >> 51) as u64);
  let x1256: u64 = ((x1254 & (0x7ffffffffffff as u128)) as u64);
  let x1257: u128 = (x1249 + (x1245 + (x1242 + (x1240 + x1239))));
  let x1258: u128 = (x1250 + (x1246 + (x1243 + (x1241 + x1229))));
  let x1259: u128 = (x1251 + (x1247 + (x1244 + (x1233 + x1230))));
  let x1260: u128 = (x1252 + (x1248 + (x1236 + (x1234 + x1231))));
  let x1261: u128 = ((x1255 as u128) + x1260);
  let x1262: u64 = ((x1261 >> 51) as u64);
  let x1263: u64 = ((x1261 & (0x7ffffffffffff as u128)) as u64);
  let x1264: u128 = ((x1262 as u128) + x1259);
  let x1265: u64 = ((x1264 >> 51) as u64);
  let x1266: u64 = ((x1264 & (0x7ffffffffffff as u128)) as u64);
  let x1267: u128 = ((x1265 as u128) + x1258);
  let x1268: u64 = ((x1267 >> 51) as u64);
  let x1269: u64 = ((x1267 & (0x7ffffffffffff as u128)) as u64);
  let x1270: u128 = ((x1268 as u128) + x1257);
  let x1271: u64 = ((x1270 >> 51) as u64);
  let x1272: u64 = ((x1270 & (0x7ffffffffffff as u128)) as u64);
  let x1273: u64 = (x1271 * 0x13);
  let x1274: u64 = (x1256 + x1273);
  let x1275: u64 = (x1274 >> 51);
  let x1276: u64 = (x1274 & 0x7ffffffffffff);
  let x1277: u64 = (x1275 + x1263);
  let x1278: fiat_25519_u1 = ((x1277 >> 51) as fiat_25519_u1);
  let x1279: u64 = (x1277 & 0x7ffffffffffff);
  let x1280: u64 = ((x1278 as u64) + x1266);
  let x1281: u128 = ((x1178 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1282: u128 = ((x1178 as u128) * (((arg4[3]) * 0x13) as u128));
  let x1283: u128 = ((x1178 as u128) * (((arg4[2]) * 0x13) as u128));
  let x1284: u128 = ((x1178 as u128) * (((arg4[1]) * 0x13) as u128));
  let x1285: u128 = ((x1177 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1286: u128 = ((x1177 as u128) * (((arg4[3]) * 0x13) as u128));
  let x1287: u128 = ((x1177 as u128) * (((arg4[2]) * 0x13) as u128));
  let x1288: u128 = ((x1176 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1289: u128 = ((x1176 as u128) * (((arg4[3]) * 0x13) as u128));
  let x1290: u128 = ((x1175 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1291: u128 = ((x1178 as u128) * ((arg4[0]) as u128));
  let x1292: u128 = ((x1177 as u128) * ((arg4[1]) as u128));
  let x1293: u128 = ((x1177 as u128) * ((arg4[0]) as u128));
  let x1294: u128 = ((x1176 as u128) * ((arg4[2]) as u128));
  let x1295: u128 = ((x1176 as u128) * ((arg4[1]) as u128));
  let x1296: u128 = ((x1176 as u128) * ((arg4[0]) as u128));
  let x1297: u128 = ((x1175 as u128) * ((arg4[3]) as u128));
  let x1298: u128 = ((x1175 as u128) * ((arg4[2]) as u128));
  let x1299: u128 = ((x1175 as u128) * ((arg4[1]) as u128));
  let x1300: u128 = ((x1175 as u128) * ((arg4[0]) as u128));
  let x1301: u128 = ((x1174 as u128) * ((arg4[4]) as u128));
  let x1302: u128 = ((x1174 as u128) * ((arg4[3]) as u128));
  let x1303: u128 = ((x1174 as u128) * ((arg4[2]) as u128));
  let x1304: u128 = ((x1174 as u128) * ((arg4[1]) as u128));
  let x1305: u128 = ((x1174 as u128) * ((arg4[0]) as u128));
  let x1306: u128 = (x1305 + (x1290 + (x1289 + (x1287 + x1284))));
  let x1307: u64 = ((x1306 >> 51) as u64);
  let x1308: u64 = ((x1306 & (0x7ffffffffffff as u128)) as u64);
  let x1309: u128 = (x1301 + (x1297 + (x1294 + (x1292 + x1291))));
  let x1310: u128 = (x1302 + (x1298 + (x1295 + (x1293 + x1281))));
  let x1311: u128 = (x1303 + (x1299 + (x1296 + (x1285 + x1282))));
  let x1312: u128 = (x1304 + (x1300 + (x1288 + (x1286 + x1283))));
  let x1313: u128 = ((x1307 as u128) + x1312);
  let x1314: u64 = ((x1313 >> 51) as u64);
  let x1315: u64 = ((x1313 & (0x7ffffffffffff as u128)) as u64);
  let x1316: u128 = ((x1314 as u128) + x1311);
  let x1317: u64 = ((x1316 >> 51) as u64);
  let x1318: u64 = ((x1316 & (0x7ffffffffffff as u128)) as u64);
  let x1319: u128 = ((x1317 as u128) + x1310);
  let x1320: u64 = ((x1319 >> 51) as u64);
  let x1321: u64 = ((x1319 & (0x7ffffffffffff as u128)) as u64);
  let x1322: u128 = ((x1320 as u128) + x1309);
  let x1323: u64 = ((x1322 >> 51) as u64);
  let x1324: u64 = ((x1322 & (0x7ffffffffffff as u128)) as u64);
  let x1325: u64 = (x1323 * 0x13);
  let x1326: u64 = (x1308 + x1325);
  let x1327: u64 = (x1326 >> 51);
  let x1328: u64 = (x1326 & 0x7ffffffffffff);
  let x1329: u64 = (x1327 + x1315);
  let x1330: fiat_25519_u1 = ((x1329 >> 51) as fiat_25519_u1);
  let x1331: u64 = (x1329 & 0x7ffffffffffff);
  let x1332: u64 = ((x1330 as u64) + x1318);
  let x1333: u128 = ((x1203 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1334: u128 = ((x1203 as u128) * (((arg3[3]) * 0x13) as u128));
  let x1335: u128 = ((x1203 as u128) * (((arg3[2]) * 0x13) as u128));
  let x1336: u128 = ((x1203 as u128) * (((arg3[1]) * 0x13) as u128));
  let x1337: u128 = ((x1202 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1338: u128 = ((x1202 as u128) * (((arg3[3]) * 0x13) as u128));
  let x1339: u128 = ((x1202 as u128) * (((arg3[2]) * 0x13) as u128));
  let x1340: u128 = ((x1201 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1341: u128 = ((x1201 as u128) * (((arg3[3]) * 0x13) as u128));
  let x1342: u128 = ((x1200 as u128) * (((arg3[4]) * 0x13) as u128));
  let x1343: u128 = ((x1203 as u128) * ((arg3[0]) as u128));
  let x1344: u128 = ((x1202 as u128) * ((arg3[1]) as u128));
  let x1345: u128 = ((x1202 as u128) * ((arg3[0]) as u128));
  let x1346: u128 = ((x1201 as u128) * ((arg3[2]) as u128));
  let x1347: u128 = ((x1201 as u128) * ((arg3[1]) as u128));
  let x1348: u128 = ((x1201 as u128) * ((arg3[0]) as u128));
  let x1349: u128 = ((x1200 as u128) * ((arg3[3]) as u128));
  let x1350: u128 = ((x1200 as u128) * ((arg3[2]) as u128));
  let x1351: u128 = ((x1200 as u128) * ((arg3[1]) as u128));
  let x1352: u128 = ((x1200 as u128) * ((arg3[0]) as u128));
  let x1353: u128 = ((x1199 as u128) * ((arg3[4]) as u128));
  let x1354: u128 = ((x1199 as u128) * ((arg3[3]) as u128));
  let x1355: u128 = ((x1199 as u128) * ((arg3[2]) as u128));
  let x1356: u128 = ((x1199 as u128) * ((arg3[1]) as u128));
  let x1357: u128 = ((x1199 as u128) * ((arg3[0]) as u128));
  let x1358: u128 = (x1357 + (x1342 + (x1341 + (x1339 + x1336))));
  let x1359: u64 = ((x1358 >> 51) as u64);
  let x1360: u64 = ((x1358 & (0x7ffffffffffff as u128)) as u64);
  let x1361: u128 = (x1353 + (x1349 + (x1346 + (x1344 + x1343))));
  let x1362: u128 = (x1354 + (x1350 + (x1347 + (x1345 + x1333))));
  let x1363: u128 = (x1355 + (x1351 + (x1348 + (x1337 + x1334))));
  let x1364: u128 = (x1356 + (x1352 + (x1340 + (x1338 + x1335))));
  let x1365: u128 = ((x1359 as u128) + x1364);
  let x1366: u64 = ((x1365 >> 51) as u64);
  let x1367: u64 = ((x1365 & (0x7ffffffffffff as u128)) as u64);
  let x1368: u128 = ((x1366 as u128) + x1363);
  let x1369: u64 = ((x1368 >> 51) as u64);
  let x1370: u64 = ((x1368 & (0x7ffffffffffff as u128)) as u64);
  let x1371: u128 = ((x1369 as u128) + x1362);
  let x1372: u64 = ((x1371 >> 51) as u64);
  let x1373: u64 = ((x1371 & (0x7ffffffffffff as u128)) as u64);
  let x1374: u128 = ((x1372 as u128) + x1361);
  let x1375: u64 = ((x1374 >> 51) as u64);
  let x1376: u64 = ((x1374 & (0x7ffffffffffff as u128)) as u64);
  let x1377: u64 = (x1375 * 0x13);
  let x1378: u64 = (x1360 + x1377);
  let x1379: u64 = (x1378 >> 51);
  let x1380: u64 = (x1378 & 0x7ffffffffffff);
  let x1381: u64 = (x1379 + x1367);
  let x1382: fiat_25519_u1 = ((x1381 >> 51) as fiat_25519_u1);
  let x1383: u64 = (x1381 & 0x7ffffffffffff);
  let x1384: u64 = ((x1382 as u64) + x1370);
  let x1385: u128 = ((x1228 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1386: u128 = ((x1228 as u128) * (((arg4[3]) * 0x13) as u128));
  let x1387: u128 = ((x1228 as u128) * (((arg4[2]) * 0x13) as u128));
  let x1388: u128 = ((x1228 as u128) * (((arg4[1]) * 0x13) as u128));
  let x1389: u128 = ((x1227 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1390: u128 = ((x1227 as u128) * (((arg4[3]) * 0x13) as u128));
  let x1391: u128 = ((x1227 as u128) * (((arg4[2]) * 0x13) as u128));
  let x1392: u128 = ((x1226 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1393: u128 = ((x1226 as u128) * (((arg4[3]) * 0x13) as u128));
  let x1394: u128 = ((x1225 as u128) * (((arg4[4]) * 0x13) as u128));
  let x1395: u128 = ((x1228 as u128) * ((arg4[0]) as u128));
  let x1396: u128 = ((x1227 as u128) * ((arg4[1]) as u128));
  let x1397: u128 = ((x1227 as u128) * ((arg4[0]) as u128));
  let x1398: u128 = ((x1226 as u128) * ((arg4[2]) as u128));
  let x1399: u128 = ((x1226 as u128) * ((arg4[1]) as u128));
  let x1400: u128 = ((x1226 as u128) * ((arg4[0]) as u128));
  let x1401: u128 = ((x1225 as u128) * ((arg4[3]) as u128));
  let x1402: u128 = ((x1225 as u128) * ((arg4[2]) as u128));
  let x1403: u128 = ((x1225 as u128) * ((arg4[1]) as u128));
  let x1404: u128 = ((x1225 as u128) * ((arg4[0]) as u128));
  let x1405: u128 = ((x1224 as u128) * ((arg4[4]) as u128));
  let x1406: u128 = ((x1224 as u128) * ((arg4[3]) as u128));
  let x1407: u128 = ((x1224 as u128) * ((arg4[2]) as u128));
  let x1408: u128 = ((x1224 as u128) * ((arg4[1]) as u128));
  let x1409: u128 = ((x1224 as u128) * ((arg4[0]) as u128));
  let x1410: u128 = (x1409 + (x1394 + (x1393 + (x1391 + x1388))));
  let x1411: u64 = ((x1410 >> 51) as u64);
  let x1412: u64 = ((x1410 & (0x7ffffffffffff as u128)) as u64);
  let x1413: u128 = (x1405 + (x1401 + (x1398 + (x1396 + x1395))));
  let x1414: u128 = (x1406 + (x1402 + (x1399 + (x1397 + x1385))));
  let x1415: u128 = (x1407 + (x1403 + (x1400 + (x1389 + x1386))));
  let x1416: u128 = (x1408 + (x1404 + (x1392 + (x1390 + x1387))));
  let x1417: u128 = ((x1411 as u128) + x1416);
  let x1418: u64 = ((x1417 >> 51) as u64);
  let x1419: u64 = ((x1417 & (0x7ffffffffffff as u128)) as u64);
  let x1420: u128 = ((x1418 as u128) + x1415);
  let x1421: u64 = ((x1420 >> 51) as u64);
  let x1422: u64 = ((x1420 & (0x7ffffffffffff as u128)) as u64);
  let x1423: u128 = ((x1421 as u128) + x1414);
  let x1424: u64 = ((x1423 >> 51) as u64);
  let x1425: u64 = ((x1423 & (0x7ffffffffffff as u128)) as u64);
  let x1426: u128 = ((x1424 as u128) + x1413);
  let x1427: u64 = ((x1426 >> 51) as u64);
  let x1428: u64 = ((x1426 & (0x7ffffffffffff as u128)) as u64);
  let x1429: u64 = (x1427 * 0x13);
  let x1430: u64 = (x1412 + x1429);
  let x1431: u64 = (x1430 >> 51);
  let x1432: u64 = (x1430 & 0x7ffffffffffff);
  let x1433: u64 = (x1431 + x1419);
  let x1434: fiat_25519_u1 = ((x1433 >> 51) as fiat_25519_u1);
  let x1435: u64 = (x1433 & 0x7ffffffffffff);
  let x1436: u64 = ((x1434 as u64) + x1422);
  let x1437: u64 = (x1276 + x1328);
  let x1438: u64 = (x1279 + x1331);
  let x1439: u64 = (x1280 + x1332);
  let x1440: u64 = (x1269 + x1321);
  let x1441: u64 = (x1272 + x1324);
  let x1442: fiat_25519_u1 = ((x1437 >> 51) as fiat_25519_u1);
  let x1443: u64 = (x1437 & 0x7ffffffffffff);
  let x1444: u64 = ((x1442 as u64) + x1438);
  let x1445: fiat_25519_u1 = ((x1444 >> 51) as fiat_25519_u1);
  let x1446: u64 = (x1444 & 0x7ffffffffffff);
  let x1447: u64 = ((x1445 as u64) + x1439);
  let x1448: u64 = (x1447 >> 51);
  let x1449: u64 = (x1447 & 0x7ffffffffffff);
  let x1450: u64 = (x1448 + x1440);
  let x1451: u64 = (x1450 >> 51);
  let x1452: u64 = (x1450 & 0x7ffffffffffff);
  let x1453: u64 = (x1451 + x1441);
  let x1454: u64 = (x1453 >> 51);
  let x1455: u64 = (x1453 & 0x7ffffffffffff);
  let x1456: u64 = (x1454 * 0x13);
  let x1457: u64 = (x1443 + x1456);
  let x1458: fiat_25519_u1 = ((x1457 >> 51) as fiat_25519_u1);
  let x1459: u64 = (x1457 & 0x7ffffffffffff);
  let x1460: u64 = ((x1458 as u64) + x1446);
  let x1461: fiat_25519_u1 = ((x1460 >> 51) as fiat_25519_u1);
  let x1462: u64 = (x1460 & 0x7ffffffffffff);
  let x1463: u64 = ((x1461 as u64) + x1449);
  let x1464: u64 = (x1380 + x1432);
  let x1465: u64 = (x1383 + x1435);
  let x1466: u64 = (x1384 + x1436);
  let x1467: u64 = (x1373 + x1425);
  let x1468: u64 = (x1376 + x1428);
  let x1469: fiat_25519_u1 = ((x1464 >> 51) as fiat_25519_u1);
  let x1470: u64 = (x1464 & 0x7ffffffffffff);
  let x1471: u64 = ((x1469 as u64) + x1465);
  let x1472: fiat_25519_u1 = ((x1471 >> 51) as fiat_25519_u1);
  let x1473: u64 = (x1471 & 0x7ffffffffffff);
  let x1474: u64 = ((x1472 as u64) + x1466);
  let x1475: u64 = (x1474 >> 51);
  let x1476: u64 = (x1474 & 0x7ffffffffffff);
  let x1477: u64 = (x1475 + x1467);
  let x1478: u64 = (x1477 >> 51);
  let x1479: u64 = (x1477 & 0x7ffffffffffff);
  let x1480: u64 = (x1478 + x1468);
  let x1481: u64 = (x1480 >> 51);
  let x1482: u64 = (x1480 & 0x7ffffffffffff);
  let x1483: u64 = (x1481 * 0x13);
  let x1484: u64 = (x1470 + x1483);
  let x1485: fiat_25519_u1 = ((x1484 >> 51) as fiat_25519_u1);
  let x1486: u64 = (x1484 & 0x7ffffffffffff);
  let x1487: u64 = ((x1485 as u64) + x1473);
  let x1488: fiat_25519_u1 = ((x1487 >> 51) as fiat_25519_u1);
  let x1489: u64 = (x1487 & 0x7ffffffffffff);
  let x1490: u64 = ((x1488 as u64) + x1476);
  out1[0] = x1119;
  out1[1] = x1120;
  out1[2] = x1121;
  out1[3] = x1122;
  out1[4] = x1123;
  out2[0] = x1124;
  out2[1] = x1125;
  out2[2] = x1126;
  out2[3] = x1127;
  out2[4] = x1128;
  out3[0] = x1459;
  out3[1] = x1462;
  out3[2] = x1463;
  out3[3] = x1452;
  out3[4] = x1455;
  out4[0] = x1486;
  out4[1] = x1489;
  out4[2] = x1490;
  out4[3] = x1479;
  out4[4] = x1482;
}

/// The function fiat_25519_carry_scmul_121666 multiplies a field element by 121666 and reduces the result.
/// Postconditions:
///   eval out1 mod m = (121666 * eval arg1) mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000], [0x0 ~> 0x18000000000000]]
/// Output Bounds:
///   out1: [[0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000], [0x0 ~> 0x8000000000000]]
#[inline]
pub fn fiat_25519_carry_scmul_121666(out1: &mut [u64; 5], arg1: &[u64; 5]) -> () {
  let x1: u128 = ((0x1db42 as u128) * ((arg1[4]) as u128));
  let x2: u128 = ((0x1db42 as u128) * ((arg1[3]) as u128));
  let x3: u128 = ((0x1db42 as u128) * ((arg1[2]) as u128));
  let x4: u128 = ((0x1db42 as u128) * ((arg1[1]) as u128));
  let x5: u128 = ((0x1db42 as u128) * ((arg1[0]) as u128));
  let x6: u64 = ((x5 >> 51) as u64);
  let x7: u64 = ((x5 & (0x7ffffffffffff as u128)) as u64);
  let x8: u128 = ((x6 as u128) + x4);
  let x9: u64 = ((x8 >> 51) as u64);
  let x10: u64 = ((x8 & (0x7ffffffffffff as u128)) as u64);
  let x11: u128 = ((x9 as u128) + x3);
  let x12: u64 = ((x11 >> 51) as u64);
  let x13: u64 = ((x11 & (0x7ffffffffffff as u128)) as u64);
  let x14: u128 = ((x12 as u128) + x2);
  let x15: u64 = ((x14 >> 51) as u64);
  let x16: u64 = ((x14 & (0x7ffffffffffff as u128)) as u64);
  let x17: u128 = ((x15 as u128) + x1);
  let x18: u64 = ((x17 >> 51) as u64);
  let x19: u64 = ((x17 & (0x7ffffffffffff as u128)) as u64);
  let x20: u64 = (x18 * 0x13);
  let x21: u64 = (x7 + x20);
  let x22: fiat_25519_u1 = ((x21 >> 51) as fiat_25519_u1);
  let x23: u64 = (x21 & 0x7ffffffffffff);
  let x24: u64 = ((x22 as u64) + x10);
  let x25: fiat_25519_u1 = ((x24 >> 51) as fiat_25519_u1);
  let x26: u64 = (x24 & 0x7ffffffffffff);
  let x27: u64 = ((x25 as u64) + x13);
  out1[0] = x23;
  out1[1] = x26;
  out1[2] = x27;
  out1[3] = x16;
  out1[4] = x19;
}

