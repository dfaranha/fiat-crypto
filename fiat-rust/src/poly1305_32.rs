//! Autogenerated: 'src/ExtractionOCaml/unsaturated_solinas' --lang Rust --inline poly1305 32 '(auto)' '2^130 - 5' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes one relax msat sat_from_bytes divstep divstep_precomp inner_loop inner_loop_hd update_fg update_vr jumpdivstep_precomp jumpdivstep_precomp_hd
//! curve description: poly1305
//! machine_wordsize = 32 (from "32")
//! requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes, one, relax, msat, sat_from_bytes, divstep, divstep_precomp, inner_loop, inner_loop_hd, update_fg, update_vr, jumpdivstep_precomp, jumpdivstep_precomp_hd
//! n = 5 (from "(auto)")
//! s-c = 2^130 - [(1, 5)] (from "2^130 - 5")
//! tight_bounds_multiplier = 1 (from "")
//!
//! Computed values:
//!   carry_chain = [0, 1, 2, 3, 4, 0, 1]
//!   eval z = z[0] + (z[1] << 26) + (z[2] << 52) + (z[3] << 78) + (z[4] << 104)
//!   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128)
//!   balance = [0x7fffff6, 0x7fffffe, 0x7fffffe, 0x7fffffe, 0x7fffffe]

#![allow(unused_parens)]
#![allow(non_camel_case_types)]

pub type fiat_poly1305_u1 = u8;
pub type fiat_poly1305_i1 = i8;
pub type fiat_poly1305_u2 = u8;
pub type fiat_poly1305_i2 = i8;

/* The type fiat_poly1305_loose_field_element is a field element with loose bounds. */
/* Bounds: [[0x0 ~> 0xc000000], [0x0 ~> 0xc000000], [0x0 ~> 0xc000000], [0x0 ~> 0xc000000], [0x0 ~> 0xc000000]] */
pub type fiat_poly1305_loose_field_element = [u32; 5];

/* The type fiat_poly1305_tight_field_element is a field element with tight bounds. */
/* Bounds: [[0x0 ~> 0x4000000], [0x0 ~> 0x4000000], [0x0 ~> 0x4000000], [0x0 ~> 0x4000000], [0x0 ~> 0x4000000]] */
pub type fiat_poly1305_tight_field_element = [u32; 5];


/// The function fiat_poly1305_addcarryx_u32 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^32
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_poly1305_addcarryx_u32(out1: &mut u32, out2: &mut fiat_poly1305_u1, arg1: fiat_poly1305_u1, arg2: u32, arg3: u32) -> () {
  let x1: u64 = (((arg1 as u64) + (arg2 as u64)) + (arg3 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: fiat_poly1305_u1 = ((x1 >> 32) as fiat_poly1305_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_poly1305_subborrowx_u32 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^32
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_poly1305_subborrowx_u32(out1: &mut u32, out2: &mut fiat_poly1305_u1, arg1: fiat_poly1305_u1, arg2: u32, arg3: u32) -> () {
  let x1: i64 = (((arg2 as i64) - (arg1 as i64)) - (arg3 as i64));
  let x2: fiat_poly1305_i1 = ((x1 >> 32) as fiat_poly1305_i1);
  let x3: u32 = ((x1 & (0xffffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_poly1305_i2) - (x2 as fiat_poly1305_i2)) as fiat_poly1305_u1);
}

/// The function fiat_poly1305_addcarryx_u26 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^26
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^26⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x3ffffff]
///   arg3: [0x0 ~> 0x3ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x3ffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_poly1305_addcarryx_u26(out1: &mut u32, out2: &mut fiat_poly1305_u1, arg1: fiat_poly1305_u1, arg2: u32, arg3: u32) -> () {
  let x1: u32 = (((arg1 as u32) + arg2) + arg3);
  let x2: u32 = (x1 & 0x3ffffff);
  let x3: fiat_poly1305_u1 = ((x1 >> 26) as fiat_poly1305_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_poly1305_subborrowx_u26 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^26
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^26⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x3ffffff]
///   arg3: [0x0 ~> 0x3ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x3ffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_poly1305_subborrowx_u26(out1: &mut u32, out2: &mut fiat_poly1305_u1, arg1: fiat_poly1305_u1, arg2: u32, arg3: u32) -> () {
  let x1: i32 = ((((((arg2 as i64) - (arg1 as i64)) as i32) as i64) - (arg3 as i64)) as i32);
  let x2: fiat_poly1305_i1 = ((x1 >> 26) as fiat_poly1305_i1);
  let x3: u32 = (((x1 as i64) & (0x3ffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_poly1305_i2) - (x2 as fiat_poly1305_i2)) as fiat_poly1305_u1);
}

/// The function fiat_poly1305_mulx_u32 is a multiplication, returning the full double-width result.
///
/// Postconditions:
///   out1 = (arg1 * arg2) mod 2^32
///   out2 = ⌊arg1 * arg2 / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_poly1305_mulx_u32(out1: &mut u32, out2: &mut u32, arg1: u32, arg2: u32) -> () {
  let x1: u64 = ((arg1 as u64) * (arg2 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: u32 = ((x1 >> 32) as u32);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_poly1305_cmovznz_u32 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_poly1305_cmovznz_u32(out1: &mut u32, arg1: fiat_poly1305_u1, arg2: u32, arg3: u32) -> () {
  let x1: fiat_poly1305_u1 = (!(!arg1));
  let x2: u32 = ((((((0x0 as fiat_poly1305_i2) - (x1 as fiat_poly1305_i2)) as fiat_poly1305_i1) as i64) & (0xffffffff as i64)) as u32);
  let x3: u32 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_poly1305_cmovznz_u1 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1]
///   arg3: [0x0 ~> 0x1]
/// Output Bounds:
///   out1: [0x0 ~> 0x1]
#[inline]
pub fn fiat_poly1305_cmovznz_u1(out1: &mut fiat_poly1305_u1, arg1: fiat_poly1305_u1, arg2: fiat_poly1305_u1, arg3: fiat_poly1305_u1) -> () {
  let x1: fiat_poly1305_u1 = (!(!arg1));
  let x2: fiat_poly1305_u1 = ((((((0x0 as fiat_poly1305_i2) - (x1 as fiat_poly1305_i2)) as fiat_poly1305_i1) as fiat_poly1305_i2) & (0x1 as fiat_poly1305_i2)) as fiat_poly1305_u1);
  let x3: fiat_poly1305_u1 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_poly1305_carry_mul multiplies two field elements and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg2) mod m
///
#[inline]
pub fn fiat_poly1305_carry_mul(out1: &mut fiat_poly1305_tight_field_element, arg1: &fiat_poly1305_loose_field_element, arg2: &fiat_poly1305_loose_field_element) -> () {
  let x1: u64 = (((arg1[4]) as u64) * (((arg2[4]) * 0x5) as u64));
  let x2: u64 = (((arg1[4]) as u64) * (((arg2[3]) * 0x5) as u64));
  let x3: u64 = (((arg1[4]) as u64) * (((arg2[2]) * 0x5) as u64));
  let x4: u64 = (((arg1[4]) as u64) * (((arg2[1]) * 0x5) as u64));
  let x5: u64 = (((arg1[3]) as u64) * (((arg2[4]) * 0x5) as u64));
  let x6: u64 = (((arg1[3]) as u64) * (((arg2[3]) * 0x5) as u64));
  let x7: u64 = (((arg1[3]) as u64) * (((arg2[2]) * 0x5) as u64));
  let x8: u64 = (((arg1[2]) as u64) * (((arg2[4]) * 0x5) as u64));
  let x9: u64 = (((arg1[2]) as u64) * (((arg2[3]) * 0x5) as u64));
  let x10: u64 = (((arg1[1]) as u64) * (((arg2[4]) * 0x5) as u64));
  let x11: u64 = (((arg1[4]) as u64) * ((arg2[0]) as u64));
  let x12: u64 = (((arg1[3]) as u64) * ((arg2[1]) as u64));
  let x13: u64 = (((arg1[3]) as u64) * ((arg2[0]) as u64));
  let x14: u64 = (((arg1[2]) as u64) * ((arg2[2]) as u64));
  let x15: u64 = (((arg1[2]) as u64) * ((arg2[1]) as u64));
  let x16: u64 = (((arg1[2]) as u64) * ((arg2[0]) as u64));
  let x17: u64 = (((arg1[1]) as u64) * ((arg2[3]) as u64));
  let x18: u64 = (((arg1[1]) as u64) * ((arg2[2]) as u64));
  let x19: u64 = (((arg1[1]) as u64) * ((arg2[1]) as u64));
  let x20: u64 = (((arg1[1]) as u64) * ((arg2[0]) as u64));
  let x21: u64 = (((arg1[0]) as u64) * ((arg2[4]) as u64));
  let x22: u64 = (((arg1[0]) as u64) * ((arg2[3]) as u64));
  let x23: u64 = (((arg1[0]) as u64) * ((arg2[2]) as u64));
  let x24: u64 = (((arg1[0]) as u64) * ((arg2[1]) as u64));
  let x25: u64 = (((arg1[0]) as u64) * ((arg2[0]) as u64));
  let x26: u64 = (x25 + (x10 + (x9 + (x7 + x4))));
  let x27: u64 = (x26 >> 26);
  let x28: u32 = ((x26 & (0x3ffffff as u64)) as u32);
  let x29: u64 = (x21 + (x17 + (x14 + (x12 + x11))));
  let x30: u64 = (x22 + (x18 + (x15 + (x13 + x1))));
  let x31: u64 = (x23 + (x19 + (x16 + (x5 + x2))));
  let x32: u64 = (x24 + (x20 + (x8 + (x6 + x3))));
  let x33: u64 = (x27 + x32);
  let x34: u64 = (x33 >> 26);
  let x35: u32 = ((x33 & (0x3ffffff as u64)) as u32);
  let x36: u64 = (x34 + x31);
  let x37: u64 = (x36 >> 26);
  let x38: u32 = ((x36 & (0x3ffffff as u64)) as u32);
  let x39: u64 = (x37 + x30);
  let x40: u64 = (x39 >> 26);
  let x41: u32 = ((x39 & (0x3ffffff as u64)) as u32);
  let x42: u64 = (x40 + x29);
  let x43: u32 = ((x42 >> 26) as u32);
  let x44: u32 = ((x42 & (0x3ffffff as u64)) as u32);
  let x45: u64 = ((x43 as u64) * (0x5 as u64));
  let x46: u64 = ((x28 as u64) + x45);
  let x47: u32 = ((x46 >> 26) as u32);
  let x48: u32 = ((x46 & (0x3ffffff as u64)) as u32);
  let x49: u32 = (x47 + x35);
  let x50: fiat_poly1305_u1 = ((x49 >> 26) as fiat_poly1305_u1);
  let x51: u32 = (x49 & 0x3ffffff);
  let x52: u32 = ((x50 as u32) + x38);
  out1[0] = x48;
  out1[1] = x51;
  out1[2] = x52;
  out1[3] = x41;
  out1[4] = x44;
}

/// The function fiat_poly1305_carry_square squares a field element and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg1) mod m
///
#[inline]
pub fn fiat_poly1305_carry_square(out1: &mut fiat_poly1305_tight_field_element, arg1: &fiat_poly1305_loose_field_element) -> () {
  let x1: u32 = ((arg1[4]) * 0x5);
  let x2: u32 = (x1 * 0x2);
  let x3: u32 = ((arg1[4]) * 0x2);
  let x4: u32 = ((arg1[3]) * 0x5);
  let x5: u32 = (x4 * 0x2);
  let x6: u32 = ((arg1[3]) * 0x2);
  let x7: u32 = ((arg1[2]) * 0x2);
  let x8: u32 = ((arg1[1]) * 0x2);
  let x9: u64 = (((arg1[4]) as u64) * (x1 as u64));
  let x10: u64 = (((arg1[3]) as u64) * (x2 as u64));
  let x11: u64 = (((arg1[3]) as u64) * (x4 as u64));
  let x12: u64 = (((arg1[2]) as u64) * (x2 as u64));
  let x13: u64 = (((arg1[2]) as u64) * (x5 as u64));
  let x14: u64 = (((arg1[2]) as u64) * ((arg1[2]) as u64));
  let x15: u64 = (((arg1[1]) as u64) * (x2 as u64));
  let x16: u64 = (((arg1[1]) as u64) * (x6 as u64));
  let x17: u64 = (((arg1[1]) as u64) * (x7 as u64));
  let x18: u64 = (((arg1[1]) as u64) * ((arg1[1]) as u64));
  let x19: u64 = (((arg1[0]) as u64) * (x3 as u64));
  let x20: u64 = (((arg1[0]) as u64) * (x6 as u64));
  let x21: u64 = (((arg1[0]) as u64) * (x7 as u64));
  let x22: u64 = (((arg1[0]) as u64) * (x8 as u64));
  let x23: u64 = (((arg1[0]) as u64) * ((arg1[0]) as u64));
  let x24: u64 = (x23 + (x15 + x13));
  let x25: u64 = (x24 >> 26);
  let x26: u32 = ((x24 & (0x3ffffff as u64)) as u32);
  let x27: u64 = (x19 + (x16 + x14));
  let x28: u64 = (x20 + (x17 + x9));
  let x29: u64 = (x21 + (x18 + x10));
  let x30: u64 = (x22 + (x12 + x11));
  let x31: u64 = (x25 + x30);
  let x32: u64 = (x31 >> 26);
  let x33: u32 = ((x31 & (0x3ffffff as u64)) as u32);
  let x34: u64 = (x32 + x29);
  let x35: u64 = (x34 >> 26);
  let x36: u32 = ((x34 & (0x3ffffff as u64)) as u32);
  let x37: u64 = (x35 + x28);
  let x38: u64 = (x37 >> 26);
  let x39: u32 = ((x37 & (0x3ffffff as u64)) as u32);
  let x40: u64 = (x38 + x27);
  let x41: u32 = ((x40 >> 26) as u32);
  let x42: u32 = ((x40 & (0x3ffffff as u64)) as u32);
  let x43: u64 = ((x41 as u64) * (0x5 as u64));
  let x44: u64 = ((x26 as u64) + x43);
  let x45: u32 = ((x44 >> 26) as u32);
  let x46: u32 = ((x44 & (0x3ffffff as u64)) as u32);
  let x47: u32 = (x45 + x33);
  let x48: fiat_poly1305_u1 = ((x47 >> 26) as fiat_poly1305_u1);
  let x49: u32 = (x47 & 0x3ffffff);
  let x50: u32 = ((x48 as u32) + x36);
  out1[0] = x46;
  out1[1] = x49;
  out1[2] = x50;
  out1[3] = x39;
  out1[4] = x42;
}

/// The function fiat_poly1305_carry reduces a field element.
///
/// Postconditions:
///   eval out1 mod m = eval arg1 mod m
///
#[inline]
pub fn fiat_poly1305_carry(out1: &mut fiat_poly1305_tight_field_element, arg1: &fiat_poly1305_loose_field_element) -> () {
  let x1: u32 = (arg1[0]);
  let x2: u32 = ((x1 >> 26) + (arg1[1]));
  let x3: u32 = ((x2 >> 26) + (arg1[2]));
  let x4: u32 = ((x3 >> 26) + (arg1[3]));
  let x5: u32 = ((x4 >> 26) + (arg1[4]));
  let x6: u32 = ((x1 & 0x3ffffff) + ((x5 >> 26) * 0x5));
  let x7: u32 = ((((x6 >> 26) as fiat_poly1305_u1) as u32) + (x2 & 0x3ffffff));
  let x8: u32 = (x6 & 0x3ffffff);
  let x9: u32 = (x7 & 0x3ffffff);
  let x10: u32 = ((((x7 >> 26) as fiat_poly1305_u1) as u32) + (x3 & 0x3ffffff));
  let x11: u32 = (x4 & 0x3ffffff);
  let x12: u32 = (x5 & 0x3ffffff);
  out1[0] = x8;
  out1[1] = x9;
  out1[2] = x10;
  out1[3] = x11;
  out1[4] = x12;
}

/// The function fiat_poly1305_add adds two field elements.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 + eval arg2) mod m
///
#[inline]
pub fn fiat_poly1305_add(out1: &mut fiat_poly1305_loose_field_element, arg1: &fiat_poly1305_tight_field_element, arg2: &fiat_poly1305_tight_field_element) -> () {
  let x1: u32 = ((arg1[0]) + (arg2[0]));
  let x2: u32 = ((arg1[1]) + (arg2[1]));
  let x3: u32 = ((arg1[2]) + (arg2[2]));
  let x4: u32 = ((arg1[3]) + (arg2[3]));
  let x5: u32 = ((arg1[4]) + (arg2[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_poly1305_sub subtracts two field elements.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 - eval arg2) mod m
///
#[inline]
pub fn fiat_poly1305_sub(out1: &mut fiat_poly1305_loose_field_element, arg1: &fiat_poly1305_tight_field_element, arg2: &fiat_poly1305_tight_field_element) -> () {
  let x1: u32 = ((0x7fffff6 + (arg1[0])) - (arg2[0]));
  let x2: u32 = ((0x7fffffe + (arg1[1])) - (arg2[1]));
  let x3: u32 = ((0x7fffffe + (arg1[2])) - (arg2[2]));
  let x4: u32 = ((0x7fffffe + (arg1[3])) - (arg2[3]));
  let x5: u32 = ((0x7fffffe + (arg1[4])) - (arg2[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_poly1305_opp negates a field element.
///
/// Postconditions:
///   eval out1 mod m = -eval arg1 mod m
///
#[inline]
pub fn fiat_poly1305_opp(out1: &mut fiat_poly1305_loose_field_element, arg1: &fiat_poly1305_tight_field_element) -> () {
  let x1: u32 = (0x7fffff6 - (arg1[0]));
  let x2: u32 = (0x7fffffe - (arg1[1]));
  let x3: u32 = (0x7fffffe - (arg1[2]));
  let x4: u32 = (0x7fffffe - (arg1[3]));
  let x5: u32 = (0x7fffffe - (arg1[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_poly1305_selectznz is a multi-limb conditional select.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_poly1305_selectznz(out1: &mut [u32; 5], arg1: fiat_poly1305_u1, arg2: &[u32; 5], arg3: &[u32; 5]) -> () {
  let mut x1: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x5, arg1, (arg2[4]), (arg3[4]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_poly1305_to_bytes serializes a field element to bytes in little-endian order.
///
/// Postconditions:
///   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..16]
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x3]]
#[inline]
pub fn fiat_poly1305_to_bytes(out1: &mut [u8; 17], arg1: &fiat_poly1305_tight_field_element) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_poly1305_u1 = 0;
  fiat_poly1305_subborrowx_u26(&mut x1, &mut x2, 0x0, (arg1[0]), 0x3fffffb);
  let mut x3: u32 = 0;
  let mut x4: fiat_poly1305_u1 = 0;
  fiat_poly1305_subborrowx_u26(&mut x3, &mut x4, x2, (arg1[1]), 0x3ffffff);
  let mut x5: u32 = 0;
  let mut x6: fiat_poly1305_u1 = 0;
  fiat_poly1305_subborrowx_u26(&mut x5, &mut x6, x4, (arg1[2]), 0x3ffffff);
  let mut x7: u32 = 0;
  let mut x8: fiat_poly1305_u1 = 0;
  fiat_poly1305_subborrowx_u26(&mut x7, &mut x8, x6, (arg1[3]), 0x3ffffff);
  let mut x9: u32 = 0;
  let mut x10: fiat_poly1305_u1 = 0;
  fiat_poly1305_subborrowx_u26(&mut x9, &mut x10, x8, (arg1[4]), 0x3ffffff);
  let mut x11: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x11, x10, (0x0 as u32), 0xffffffff);
  let mut x12: u32 = 0;
  let mut x13: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u26(&mut x12, &mut x13, 0x0, x1, (x11 & 0x3fffffb));
  let mut x14: u32 = 0;
  let mut x15: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u26(&mut x14, &mut x15, x13, x3, (x11 & 0x3ffffff));
  let mut x16: u32 = 0;
  let mut x17: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u26(&mut x16, &mut x17, x15, x5, (x11 & 0x3ffffff));
  let mut x18: u32 = 0;
  let mut x19: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u26(&mut x18, &mut x19, x17, x7, (x11 & 0x3ffffff));
  let mut x20: u32 = 0;
  let mut x21: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u26(&mut x20, &mut x21, x19, x9, (x11 & 0x3ffffff));
  let x22: u32 = (x18 << 6);
  let x23: u32 = (x16 << 4);
  let x24: u32 = (x14 << 2);
  let x25: u8 = ((x12 & (0xff as u32)) as u8);
  let x26: u32 = (x12 >> 8);
  let x27: u8 = ((x26 & (0xff as u32)) as u8);
  let x28: u32 = (x26 >> 8);
  let x29: u8 = ((x28 & (0xff as u32)) as u8);
  let x30: u8 = ((x28 >> 8) as u8);
  let x31: u32 = (x24 + (x30 as u32));
  let x32: u8 = ((x31 & (0xff as u32)) as u8);
  let x33: u32 = (x31 >> 8);
  let x34: u8 = ((x33 & (0xff as u32)) as u8);
  let x35: u32 = (x33 >> 8);
  let x36: u8 = ((x35 & (0xff as u32)) as u8);
  let x37: u8 = ((x35 >> 8) as u8);
  let x38: u32 = (x23 + (x37 as u32));
  let x39: u8 = ((x38 & (0xff as u32)) as u8);
  let x40: u32 = (x38 >> 8);
  let x41: u8 = ((x40 & (0xff as u32)) as u8);
  let x42: u32 = (x40 >> 8);
  let x43: u8 = ((x42 & (0xff as u32)) as u8);
  let x44: u8 = ((x42 >> 8) as u8);
  let x45: u32 = (x22 + (x44 as u32));
  let x46: u8 = ((x45 & (0xff as u32)) as u8);
  let x47: u32 = (x45 >> 8);
  let x48: u8 = ((x47 & (0xff as u32)) as u8);
  let x49: u32 = (x47 >> 8);
  let x50: u8 = ((x49 & (0xff as u32)) as u8);
  let x51: u8 = ((x49 >> 8) as u8);
  let x52: u8 = ((x20 & (0xff as u32)) as u8);
  let x53: u32 = (x20 >> 8);
  let x54: u8 = ((x53 & (0xff as u32)) as u8);
  let x55: u32 = (x53 >> 8);
  let x56: u8 = ((x55 & (0xff as u32)) as u8);
  let x57: u8 = ((x55 >> 8) as u8);
  out1[0] = x25;
  out1[1] = x27;
  out1[2] = x29;
  out1[3] = x32;
  out1[4] = x34;
  out1[5] = x36;
  out1[6] = x39;
  out1[7] = x41;
  out1[8] = x43;
  out1[9] = x46;
  out1[10] = x48;
  out1[11] = x50;
  out1[12] = x51;
  out1[13] = x52;
  out1[14] = x54;
  out1[15] = x56;
  out1[16] = x57;
}

/// The function fiat_poly1305_from_bytes deserializes a field element from bytes in little-endian order.
///
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x3]]
#[inline]
pub fn fiat_poly1305_from_bytes(out1: &mut fiat_poly1305_tight_field_element, arg1: &[u8; 17]) -> () {
  let x1: u32 = (((arg1[16]) as u32) << 24);
  let x2: u32 = (((arg1[15]) as u32) << 16);
  let x3: u32 = (((arg1[14]) as u32) << 8);
  let x4: u8 = (arg1[13]);
  let x5: u32 = (((arg1[12]) as u32) << 18);
  let x6: u32 = (((arg1[11]) as u32) << 10);
  let x7: u32 = (((arg1[10]) as u32) << 2);
  let x8: u32 = (((arg1[9]) as u32) << 20);
  let x9: u32 = (((arg1[8]) as u32) << 12);
  let x10: u32 = (((arg1[7]) as u32) << 4);
  let x11: u32 = (((arg1[6]) as u32) << 22);
  let x12: u32 = (((arg1[5]) as u32) << 14);
  let x13: u32 = (((arg1[4]) as u32) << 6);
  let x14: u32 = (((arg1[3]) as u32) << 24);
  let x15: u32 = (((arg1[2]) as u32) << 16);
  let x16: u32 = (((arg1[1]) as u32) << 8);
  let x17: u8 = (arg1[0]);
  let x18: u32 = (x16 + (x17 as u32));
  let x19: u32 = (x15 + x18);
  let x20: u32 = (x14 + x19);
  let x21: u32 = (x20 & 0x3ffffff);
  let x22: u8 = ((x20 >> 26) as u8);
  let x23: u32 = (x13 + (x22 as u32));
  let x24: u32 = (x12 + x23);
  let x25: u32 = (x11 + x24);
  let x26: u32 = (x25 & 0x3ffffff);
  let x27: u8 = ((x25 >> 26) as u8);
  let x28: u32 = (x10 + (x27 as u32));
  let x29: u32 = (x9 + x28);
  let x30: u32 = (x8 + x29);
  let x31: u32 = (x30 & 0x3ffffff);
  let x32: u8 = ((x30 >> 26) as u8);
  let x33: u32 = (x7 + (x32 as u32));
  let x34: u32 = (x6 + x33);
  let x35: u32 = (x5 + x34);
  let x36: u32 = (x3 + (x4 as u32));
  let x37: u32 = (x2 + x36);
  let x38: u32 = (x1 + x37);
  out1[0] = x21;
  out1[1] = x26;
  out1[2] = x31;
  out1[3] = x35;
  out1[4] = x38;
}

/// The function fiat_poly1305_one returns the field element one.
///
/// Postconditions:
///   eval out1 mod m = 1 mod m
///
#[inline]
pub fn fiat_poly1305_one(out1: &mut fiat_poly1305_tight_field_element) -> () {
  out1[0] = 0x1;
  out1[1] = 0x0;
  out1[2] = 0x0;
  out1[3] = 0x0;
  out1[4] = 0x0;
}

/// The function fiat_poly1305_relax is the identity function converting from tight field elements to loose field elements.
///
/// Postconditions:
///   out1 = arg1
///
#[inline]
pub fn fiat_poly1305_relax(out1: &mut fiat_poly1305_loose_field_element, arg1: &fiat_poly1305_tight_field_element) -> () {
  let x1: u32 = (arg1[0]);
  let x2: u32 = (arg1[1]);
  let x3: u32 = (arg1[2]);
  let x4: u32 = (arg1[3]);
  let x5: u32 = (arg1[4]);
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
}

/// The function fiat_poly1305_msat returns the saturated (signed) representation of the prime modulus.
///
/// Postconditions:
///   twos_complement_eval out1 = m
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_poly1305_msat(out1: &mut [u32; 6]) -> () {
  out1[0] = 0xfffffffb;
  out1[1] = 0xffffffff;
  out1[2] = 0xffffffff;
  out1[3] = 0xffffffff;
  out1[4] = 0x3;
  out1[5] = (0x0 as u32);
}

/// The function fiat_poly1305_sat_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
///
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_poly1305_sat_from_bytes(out1: &mut [u32; 6], arg1: &[u8; 17]) -> () {
  let x1: u8 = (arg1[16]);
  let x2: u32 = (((arg1[15]) as u32) << 24);
  let x3: u32 = (((arg1[14]) as u32) << 16);
  let x4: u32 = (((arg1[13]) as u32) << 8);
  let x5: u8 = (arg1[12]);
  let x6: u32 = (((arg1[11]) as u32) << 24);
  let x7: u32 = (((arg1[10]) as u32) << 16);
  let x8: u32 = (((arg1[9]) as u32) << 8);
  let x9: u8 = (arg1[8]);
  let x10: u32 = (((arg1[7]) as u32) << 24);
  let x11: u32 = (((arg1[6]) as u32) << 16);
  let x12: u32 = (((arg1[5]) as u32) << 8);
  let x13: u8 = (arg1[4]);
  let x14: u32 = (((arg1[3]) as u32) << 24);
  let x15: u32 = (((arg1[2]) as u32) << 16);
  let x16: u32 = (((arg1[1]) as u32) << 8);
  let x17: u8 = (arg1[0]);
  let x18: u32 = (x16 + (x17 as u32));
  let x19: u32 = (x15 + x18);
  let x20: u32 = (x14 + x19);
  let x21: u32 = (x12 + (x13 as u32));
  let x22: u32 = (x11 + x21);
  let x23: u32 = (x10 + x22);
  let x24: u32 = (x8 + (x9 as u32));
  let x25: u32 = (x7 + x24);
  let x26: u32 = (x6 + x25);
  let x27: u32 = (x4 + (x5 as u32));
  let x28: u32 = (x3 + x27);
  let x29: u32 = (x2 + x28);
  out1[0] = x20;
  out1[1] = x23;
  out1[2] = x26;
  out1[3] = x29;
  out1[4] = (x1 as u32);
  out1[5] = (0x0 as u32);
}

/// The function fiat_poly1305_divstep computes a divstep.
///
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
///   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
///   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
///   eval out4 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval arg5) mod m else (2 * eval arg4) mod m)
///   eval out5 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval arg4 - eval arg4) mod m else (eval arg5 + (twos_complement_eval arg3 mod 2) * eval arg4) mod m)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_poly1305_divstep(out1: &mut u32, out2: &mut [u32; 6], out3: &mut [u32; 6], out4: &mut fiat_poly1305_tight_field_element, out5: &mut fiat_poly1305_tight_field_element, arg1: u32, arg2: &[u32; 6], arg3: &[u32; 6], arg4: &fiat_poly1305_tight_field_element, arg5: &fiat_poly1305_tight_field_element) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x1, &mut x2, 0x0, (!arg1), (0x1 as u32));
  let x3: fiat_poly1305_u1 = (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1));
  let mut x4: u32 = 0;
  let mut x5: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x4, &mut x5, 0x0, (!arg1), (0x1 as u32));
  let mut x6: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x6, x3, arg1, x4);
  let mut x7: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x7, x3, (arg2[0]), (arg3[0]));
  let mut x8: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x8, x3, (arg2[1]), (arg3[1]));
  let mut x9: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x9, x3, (arg2[2]), (arg3[2]));
  let mut x10: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x10, x3, (arg2[3]), (arg3[3]));
  let mut x11: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x11, x3, (arg2[4]), (arg3[4]));
  let mut x12: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x12, x3, (arg2[5]), (arg3[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x13, &mut x14, 0x0, (0x1 as u32), (!(arg2[0])));
  let mut x15: u32 = 0;
  let mut x16: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x15, &mut x16, x14, (0x0 as u32), (!(arg2[1])));
  let mut x17: u32 = 0;
  let mut x18: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x17, &mut x18, x16, (0x0 as u32), (!(arg2[2])));
  let mut x19: u32 = 0;
  let mut x20: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x19, &mut x20, x18, (0x0 as u32), (!(arg2[3])));
  let mut x21: u32 = 0;
  let mut x22: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x21, &mut x22, x20, (0x0 as u32), (!(arg2[4])));
  let mut x23: u32 = 0;
  let mut x24: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x23, &mut x24, x22, (0x0 as u32), (!(arg2[5])));
  let mut x25: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x25, x3, (arg3[0]), x13);
  let mut x26: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x26, x3, (arg3[1]), x15);
  let mut x27: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x27, x3, (arg3[2]), x17);
  let mut x28: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x28, x3, (arg3[3]), x19);
  let mut x29: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x29, x3, (arg3[4]), x21);
  let mut x30: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x30, x3, (arg3[5]), x23);
  let mut x31: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x31, x3, (arg4[0]), (arg5[0]));
  let mut x32: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x32, x3, (arg4[1]), (arg5[1]));
  let mut x33: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x33, x3, (arg4[2]), (arg5[2]));
  let mut x34: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x34, x3, (arg4[3]), (arg5[3]));
  let mut x35: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x35, x3, (arg4[4]), (arg5[4]));
  let x36: u32 = (x31 + x31);
  let x37: u32 = (x36 >> 26);
  let x38: u32 = (x36 & 0x3ffffff);
  let x39: u32 = (x35 + x35);
  let x40: u32 = (x34 + x34);
  let x41: u32 = (x33 + x33);
  let x42: u32 = (x32 + x32);
  let x43: u32 = (x37 + x42);
  let x44: u32 = (x43 >> 26);
  let x45: u32 = (x43 & 0x3ffffff);
  let x46: u32 = (x44 + x41);
  let x47: u32 = (x46 >> 26);
  let x48: u32 = (x46 & 0x3ffffff);
  let x49: u32 = (x47 + x40);
  let x50: u32 = (x49 >> 26);
  let x51: u32 = (x49 & 0x3ffffff);
  let x52: u32 = (x50 + x39);
  let x53: u32 = (x52 >> 26);
  let x54: u32 = (x52 & 0x3ffffff);
  let x55: u32 = (x53 * 0x5);
  let x56: u32 = (x38 + x55);
  let x57: fiat_poly1305_u1 = ((x56 >> 26) as fiat_poly1305_u1);
  let x58: u32 = (x56 & 0x3ffffff);
  let x59: u32 = ((x57 as u32) + x45);
  let x60: fiat_poly1305_u1 = ((x59 >> 26) as fiat_poly1305_u1);
  let x61: u32 = (x59 & 0x3ffffff);
  let x62: u32 = ((x60 as u32) + x48);
  let x63: u32 = (arg4[4]);
  let x64: u32 = (arg4[3]);
  let x65: u32 = (arg4[2]);
  let x66: u32 = (arg4[1]);
  let x67: u32 = (arg4[0]);
  let x68: u32 = (0x7fffff6 - x67);
  let x69: u32 = (0x7fffffe - x66);
  let x70: u32 = (0x7fffffe - x65);
  let x71: u32 = (0x7fffffe - x64);
  let x72: u32 = (0x7fffffe - x63);
  let x73: fiat_poly1305_u1 = ((x68 >> 26) as fiat_poly1305_u1);
  let x74: u32 = (x68 & 0x3ffffff);
  let x75: u32 = ((x73 as u32) + x69);
  let x76: fiat_poly1305_u1 = ((x75 >> 26) as fiat_poly1305_u1);
  let x77: u32 = (x75 & 0x3ffffff);
  let x78: u32 = ((x76 as u32) + x70);
  let x79: fiat_poly1305_u1 = ((x78 >> 26) as fiat_poly1305_u1);
  let x80: u32 = (x78 & 0x3ffffff);
  let x81: u32 = ((x79 as u32) + x71);
  let x82: fiat_poly1305_u1 = ((x81 >> 26) as fiat_poly1305_u1);
  let x83: u32 = (x81 & 0x3ffffff);
  let x84: u32 = ((x82 as u32) + x72);
  let x85: fiat_poly1305_u1 = ((x84 >> 26) as fiat_poly1305_u1);
  let x86: u32 = (x84 & 0x3ffffff);
  let x87: u32 = ((x85 as u32) * 0x5);
  let x88: u32 = (x74 + x87);
  let x89: fiat_poly1305_u1 = ((x88 >> 26) as fiat_poly1305_u1);
  let x90: u32 = (x88 & 0x3ffffff);
  let x91: u32 = ((x89 as u32) + x77);
  let x92: fiat_poly1305_u1 = ((x91 >> 26) as fiat_poly1305_u1);
  let x93: u32 = (x91 & 0x3ffffff);
  let x94: u32 = ((x92 as u32) + x80);
  let mut x95: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x95, x3, (arg5[0]), x90);
  let mut x96: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x96, x3, (arg5[1]), x93);
  let mut x97: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x97, x3, (arg5[2]), x94);
  let mut x98: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x98, x3, (arg5[3]), x83);
  let mut x99: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x99, x3, (arg5[4]), x86);
  let x100: fiat_poly1305_u1 = ((x25 & (0x1 as u32)) as fiat_poly1305_u1);
  let mut x101: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x101, x100, (0x0 as u32), x7);
  let mut x102: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x102, x100, (0x0 as u32), x8);
  let mut x103: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x103, x100, (0x0 as u32), x9);
  let mut x104: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x104, x100, (0x0 as u32), x10);
  let mut x105: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x105, x100, (0x0 as u32), x11);
  let mut x106: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x106, x100, (0x0 as u32), x12);
  let mut x107: u32 = 0;
  let mut x108: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x107, &mut x108, 0x0, x25, x101);
  let mut x109: u32 = 0;
  let mut x110: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x109, &mut x110, x108, x26, x102);
  let mut x111: u32 = 0;
  let mut x112: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x111, &mut x112, x110, x27, x103);
  let mut x113: u32 = 0;
  let mut x114: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x113, &mut x114, x112, x28, x104);
  let mut x115: u32 = 0;
  let mut x116: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x115, &mut x116, x114, x29, x105);
  let mut x117: u32 = 0;
  let mut x118: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x117, &mut x118, x116, x30, x106);
  let mut x119: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x119, x100, (0x0 as u32), x31);
  let mut x120: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x120, x100, (0x0 as u32), x32);
  let mut x121: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x121, x100, (0x0 as u32), x33);
  let mut x122: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x122, x100, (0x0 as u32), x34);
  let mut x123: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x123, x100, (0x0 as u32), x35);
  let x124: u32 = (x95 + x119);
  let x125: u32 = (x124 >> 26);
  let x126: u32 = (x124 & 0x3ffffff);
  let x127: u32 = (x99 + x123);
  let x128: u32 = (x98 + x122);
  let x129: u32 = (x97 + x121);
  let x130: u32 = (x96 + x120);
  let x131: u32 = (x125 + x130);
  let x132: u32 = (x131 >> 26);
  let x133: u32 = (x131 & 0x3ffffff);
  let x134: u32 = (x132 + x129);
  let x135: u32 = (x134 >> 26);
  let x136: u32 = (x134 & 0x3ffffff);
  let x137: u32 = (x135 + x128);
  let x138: u32 = (x137 >> 26);
  let x139: u32 = (x137 & 0x3ffffff);
  let x140: u32 = (x138 + x127);
  let x141: u32 = (x140 >> 26);
  let x142: u32 = (x140 & 0x3ffffff);
  let x143: u32 = (x141 * 0x5);
  let x144: u32 = (x126 + x143);
  let x145: fiat_poly1305_u1 = ((x144 >> 26) as fiat_poly1305_u1);
  let x146: u32 = (x144 & 0x3ffffff);
  let x147: u32 = ((x145 as u32) + x133);
  let x148: fiat_poly1305_u1 = ((x147 >> 26) as fiat_poly1305_u1);
  let x149: u32 = (x147 & 0x3ffffff);
  let x150: u32 = ((x148 as u32) + x136);
  let x151: u32 = ((((x6 as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let x152: u32 = ((x107 >> 1) | ((x109 << 31) & 0xffffffff));
  let x153: u32 = ((x109 >> 1) | ((x111 << 31) & 0xffffffff));
  let x154: u32 = ((x111 >> 1) | ((x113 << 31) & 0xffffffff));
  let x155: u32 = ((x113 >> 1) | ((x115 << 31) & 0xffffffff));
  let x156: u32 = ((x115 >> 1) | ((x117 << 31) & 0xffffffff));
  let x157: u32 = ((x117 & 0x80000000) | (x117 >> 1));
  *out1 = x151;
  out2[0] = x7;
  out2[1] = x8;
  out2[2] = x9;
  out2[3] = x10;
  out2[4] = x11;
  out2[5] = x12;
  out3[0] = x152;
  out3[1] = x153;
  out3[2] = x154;
  out3[3] = x155;
  out3[4] = x156;
  out3[5] = x157;
  out4[0] = x58;
  out4[1] = x61;
  out4[2] = x62;
  out4[3] = x51;
  out4[4] = x54;
  out5[0] = x146;
  out5[1] = x149;
  out5[2] = x150;
  out5[3] = x139;
  out5[4] = x142;
}

/// The function fiat_poly1305_divstep_precomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
#[inline]
pub fn fiat_poly1305_divstep_precomp(out1: &mut fiat_poly1305_tight_field_element) -> () {
  out1[0] = 0x2978d6d;
  out1[1] = 0x20c49b;
  out1[2] = 0x5a1cac;
  out1[3] = 0x3f7ced9;
  out1[4] = 0x2e978d4;
}

/// The function fiat_poly1305_inner_loop computes a inner_loop.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
///   out3: [0x0 ~> 0xffffffff]
///   out4: [0x0 ~> 0xffffffff]
///   out5: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_poly1305_inner_loop(out1: &mut u32, out2: &mut u32, out3: &mut u32, out4: &mut u32, out5: &mut u32, arg1: u32, arg2: &[u32; 6], arg3: &[u32; 6]) -> () {
  let x1: u32 = (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x2: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x2, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), arg1, (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x3: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x3, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), (arg2[0]), (arg3[0]));
  let mut x4: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x4, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), (arg3[0]), (((((!(arg2[0])) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x5: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x5, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), 0x1, 0x0);
  let mut x6: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x6, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), 0x0, 0x1);
  let mut x7: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x7, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), (0x0 as u32), 0xffffffff);
  let mut x8: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x8, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), 0x1, 0x0);
  let mut x9: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x9, ((x4 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x3);
  let mut x10: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x10, ((x4 & (0x1 as u32)) as fiat_poly1305_u1), 0x0, x5);
  let mut x11: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x11, ((x4 & (0x1 as u32)) as fiat_poly1305_u1), 0x0, x6);
  let x12: u32 = (((((!((((0x1 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x13: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x13, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x14: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x14, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x3, ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x15: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x15, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x3) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x16: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x16, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((x5 as u32) + (x5 as u32)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32));
  let mut x17: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x17, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((x6 as u32) + (x6 as u32)), ((x8 as u32) + (x11 as u32)));
  let mut x18: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x18, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32), (((((!((x5 as u32) + (x5 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x19: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x19, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((x8 as u32) + (x11 as u32)), (((((!((x6 as u32) + (x6 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x20: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x20, ((x15 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x14);
  let mut x21: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x21, ((x15 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x16);
  let mut x22: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x22, ((x15 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x17);
  let x23: u32 = (((((!((((0x1 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x24: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x24, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x25: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x25, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x14, ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x26: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x26, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x14) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x27: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x27, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32));
  let mut x28: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x28, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), (x17 + x17), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32));
  let mut x29: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x29, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x30: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x30, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32), (((((!(x17 + x17)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x31: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x31, ((x26 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x25);
  let mut x32: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x32, ((x26 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x27);
  let mut x33: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x33, ((x26 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x28);
  let x34: u32 = (((((!((((0x1 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x35: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x35, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x36: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x36, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x25, ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x37: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x37, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x25) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x38: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x38, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32));
  let mut x39: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x39, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32));
  let mut x40: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x40, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x41: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x41, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x42: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x42, ((x37 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x36);
  let mut x43: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x43, ((x37 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x38);
  let mut x44: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x44, ((x37 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x39);
  let x45: u32 = (((((!((((0x1 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x46: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x46, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x47: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x47, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x36, ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x48: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x48, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x36) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x49: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x49, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32));
  let mut x50: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x50, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32));
  let mut x51: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x51, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x52: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x52, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x53: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x53, ((x48 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x47);
  let mut x54: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x54, ((x48 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x49);
  let mut x55: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x55, ((x48 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x50);
  let x56: u32 = (((((!((((0x1 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x57: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x57, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x58: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x58, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x47, ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x59: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x59, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x47) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x60: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x60, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32));
  let mut x61: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x61, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32));
  let mut x62: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x62, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x63: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x63, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x64: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x64, ((x59 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x58);
  let mut x65: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x65, ((x59 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x60);
  let mut x66: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x66, ((x59 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x61);
  let x67: u32 = (((((!((((0x1 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x68: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x68, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x69: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x69, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x58, ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x70: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x70, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x58) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x71: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x71, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32));
  let mut x72: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x72, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32));
  let mut x73: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x73, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x74: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x74, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x75: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x75, ((x70 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x69);
  let mut x76: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x76, ((x70 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x71);
  let mut x77: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x77, ((x70 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x72);
  let x78: u32 = (((((!((((0x1 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x79: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x79, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x80: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x80, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x69, ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x81: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x81, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x69) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x82: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x82, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32));
  let mut x83: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x83, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32));
  let mut x84: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x84, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x85: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x85, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x86: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x86, ((x81 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x80);
  let mut x87: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x87, ((x81 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x82);
  let mut x88: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x88, ((x81 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x83);
  let x89: u32 = (((((!((((0x1 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x90: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x90, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x91: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x91, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x80, ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x92: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x92, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x80) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x93: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x93, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32));
  let mut x94: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x94, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32));
  let mut x95: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x95, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x96: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x96, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x97: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x97, ((x92 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x91);
  let mut x98: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x98, ((x92 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x93);
  let mut x99: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x99, ((x92 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x94);
  let x100: u32 = (((((!((((0x1 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x101: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x101, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x102: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x102, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x91, ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x103: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x103, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x91) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x104: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x104, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32));
  let mut x105: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x105, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32));
  let mut x106: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x106, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x107: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x107, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x108: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x108, ((x103 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x102);
  let mut x109: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x109, ((x103 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x104);
  let mut x110: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x110, ((x103 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x105);
  let x111: u32 = (((((!((((0x1 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x112: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x112, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x113: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x113, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x102, ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x114: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x114, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x102) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x115: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x115, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32));
  let mut x116: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x116, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32));
  let mut x117: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x117, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x118: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x118, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x119: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x119, ((x114 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x113);
  let mut x120: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x120, ((x114 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x115);
  let mut x121: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x121, ((x114 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x116);
  let x122: u32 = (((((!((((0x1 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x123: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x123, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x124: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x124, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x113, ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x125: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x125, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x113) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x126: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x126, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32));
  let mut x127: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x127, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32));
  let mut x128: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x128, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x129: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x129, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x130: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x130, ((x125 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x124);
  let mut x131: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x131, ((x125 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x126);
  let mut x132: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x132, ((x125 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x127);
  let x133: u32 = (((((!((((0x1 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x134: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x134, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x135: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x135, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x124, ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x136: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x136, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x124) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x137: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x137, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32));
  let mut x138: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x138, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32));
  let mut x139: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x139, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x140: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x140, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x141: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x141, ((x136 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x135);
  let mut x142: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x142, ((x136 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x137);
  let mut x143: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x143, ((x136 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x138);
  let x144: u32 = (((((!((((0x1 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x145: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x145, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x146: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x146, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x135, ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x147: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x147, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x135) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x148: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x148, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32));
  let mut x149: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x149, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32));
  let mut x150: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x150, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x151: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x151, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x152: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x152, ((x147 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x146);
  let mut x153: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x153, ((x147 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x148);
  let mut x154: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x154, ((x147 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x149);
  let x155: u32 = (((((!((((0x1 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x156: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x156, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x157: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x157, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x146, ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x158: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x158, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x146) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x159: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x159, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32));
  let mut x160: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x160, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32));
  let mut x161: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x161, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x162: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x162, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x163: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x163, ((x158 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x157);
  let mut x164: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x164, ((x158 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x159);
  let mut x165: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x165, ((x158 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x160);
  let x166: u32 = (((((!((((0x1 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x167: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x167, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x168: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x168, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x157, ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x169: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x169, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x157) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x170: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x170, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32));
  let mut x171: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x171, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32));
  let mut x172: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x172, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x173: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x173, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x174: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x174, ((x169 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x168);
  let mut x175: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x175, ((x169 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x170);
  let mut x176: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x176, ((x169 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x171);
  let x177: u32 = (((((!((((0x1 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x178: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x178, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x179: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x179, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x168, ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x180: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x180, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x168) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x181: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x181, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32));
  let mut x182: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x182, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32));
  let mut x183: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x183, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x184: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x184, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x185: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x185, ((x180 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x179);
  let mut x186: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x186, ((x180 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x181);
  let mut x187: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x187, ((x180 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x182);
  let x188: u32 = (((((!((((0x1 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x189: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x189, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x190: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x190, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x179, ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x191: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x191, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x179) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x192: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x192, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32));
  let mut x193: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x193, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32));
  let mut x194: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x194, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x195: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x195, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x196: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x196, ((x191 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x190);
  let mut x197: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x197, ((x191 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x192);
  let mut x198: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x198, ((x191 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x193);
  let x199: u32 = (((((!((((0x1 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x200: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x200, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x201: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x201, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x190, ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x202: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x202, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x190) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x203: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x203, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32));
  let mut x204: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x204, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32));
  let mut x205: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x205, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x206: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x206, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x207: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x207, ((x202 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x201);
  let mut x208: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x208, ((x202 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x203);
  let mut x209: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x209, ((x202 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x204);
  let x210: u32 = (((((!((((0x1 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x211: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x211, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x212: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x212, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x201, ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x213: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x213, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x201) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x214: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x214, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32));
  let mut x215: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x215, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32));
  let mut x216: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x216, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x217: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x217, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x218: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x218, ((x213 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x212);
  let mut x219: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x219, ((x213 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x214);
  let mut x220: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x220, ((x213 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x215);
  let x221: u32 = (((((!((((0x1 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x222: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x222, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x223: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x223, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x212, ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x224: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x224, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x212) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x225: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x225, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32));
  let mut x226: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x226, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32));
  let mut x227: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x227, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x228: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x228, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x229: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x229, ((x224 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x223);
  let mut x230: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x230, ((x224 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x225);
  let mut x231: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x231, ((x224 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x226);
  let x232: u32 = (((((!((((0x1 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x233: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x233, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x234: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x234, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x223, ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x235: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x235, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x223) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x236: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x236, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32));
  let mut x237: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x237, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32));
  let mut x238: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x238, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x239: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x239, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x240: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x240, ((x235 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x234);
  let mut x241: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x241, ((x235 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x236);
  let mut x242: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x242, ((x235 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x237);
  let x243: u32 = (((((!((((0x1 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x244: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x244, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x245: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x245, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x234, ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x246: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x246, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x234) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x247: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x247, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32));
  let mut x248: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x248, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32));
  let mut x249: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x249, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x250: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x250, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x251: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x251, ((x246 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x245);
  let mut x252: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x252, ((x246 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x247);
  let mut x253: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x253, ((x246 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x248);
  let x254: u32 = (((((!((((0x1 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x255: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x255, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x256: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x256, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x245, ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x257: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x257, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x245) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x258: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x258, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32));
  let mut x259: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x259, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32));
  let mut x260: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x260, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x261: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x261, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x262: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x262, ((x257 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x256);
  let mut x263: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x263, ((x257 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x258);
  let mut x264: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x264, ((x257 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x259);
  let x265: u32 = (((((!((((0x1 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x266: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x266, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x267: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x267, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x256, ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x268: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x268, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x256) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x269: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x269, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32));
  let mut x270: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x270, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32));
  let mut x271: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x271, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x272: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x272, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x273: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x273, ((x268 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x267);
  let mut x274: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x274, ((x268 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x269);
  let mut x275: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x275, ((x268 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x270);
  let x276: u32 = (((((!((((0x1 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x277: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x277, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x278: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x278, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x267, ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x279: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x279, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x267) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x280: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x280, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32));
  let mut x281: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x281, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32));
  let mut x282: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x282, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x283: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x283, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x284: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x284, ((x279 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x278);
  let mut x285: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x285, ((x279 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x280);
  let mut x286: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x286, ((x279 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x281);
  let x287: u32 = (((((!((((0x1 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x288: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x288, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x289: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x289, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x278, ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x290: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x290, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x278) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x291: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x291, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32));
  let mut x292: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x292, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32));
  let mut x293: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x293, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x294: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x294, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x295: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x295, ((x290 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x289);
  let mut x296: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x296, ((x290 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x291);
  let mut x297: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x297, ((x290 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x292);
  let x298: u32 = (((((!((((0x1 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x299: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x299, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x300: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x300, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x289, ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x301: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x301, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x289) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x302: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x302, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32));
  let mut x303: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x303, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32));
  let mut x304: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x304, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x305: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x305, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x306: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x306, ((x301 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x300);
  let mut x307: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x307, ((x301 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x302);
  let mut x308: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x308, ((x301 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x303);
  let x309: u32 = (((((!((((0x1 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x310: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x310, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x311: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x311, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x300, ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x312: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x312, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x300) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x313: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x313, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32));
  let mut x314: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x314, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32));
  let mut x315: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x315, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x316: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x316, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x317: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x317, ((x312 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x311);
  let mut x318: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x318, ((x312 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x313);
  let mut x319: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x319, ((x312 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x314);
  let x320: u32 = (((((!((((0x1 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x321: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x321, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x1 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x1 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x322: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x322, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x311) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x323: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x323, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32));
  let mut x324: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x324, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32));
  let mut x325: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x325, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x326: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x326, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x327: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x327, ((x322 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x323);
  let mut x328: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x328, ((x322 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x324);
  let x329: u32 = ((((0x1 as u64) + (x321 as u64)) & (0xffffffff as u64)) as u32);
  let x330: u32 = ((((x323 as u64) + (x323 as u64)) & (0xffffffff as u64)) as u32);
  let x331: u32 = ((((x324 as u64) + (x324 as u64)) & (0xffffffff as u64)) as u32);
  let x332: u32 = ((((x325 as u64) + (x327 as u64)) & (0xffffffff as u64)) as u32);
  let x333: u32 = ((((x326 as u64) + (x328 as u64)) & (0xffffffff as u64)) as u32);
  *out1 = x329;
  *out2 = x330;
  *out3 = x331;
  *out4 = x332;
  *out5 = x333;
}

/// The function fiat_poly1305_inner_loop_hd computes a inner_loop_hd.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
///   out3: [0x0 ~> 0xffffffff]
///   out4: [0x0 ~> 0xffffffff]
///   out5: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_poly1305_inner_loop_hd(out1: &mut u32, out2: &mut u32, out3: &mut u32, out4: &mut u32, out5: &mut u32, arg1: u32, arg2: &[u32; 6], arg3: &[u32; 6]) -> () {
  let x1: u32 = (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x2: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x2, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), arg1, (((((!arg1) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x3: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x3, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), (arg2[0]), (arg3[0]));
  let mut x4: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x4, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), (arg3[0]), (((((!(arg2[0])) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x5: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x5, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), 0x1, 0x0);
  let mut x6: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x6, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), 0x0, 0x1);
  let mut x7: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x7, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), (0x0 as u32), 0xffffffff);
  let mut x8: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x8, (((x1 >> 31) as fiat_poly1305_u1) & (((arg3[0]) & (0x1 as u32)) as fiat_poly1305_u1)), 0x1, 0x0);
  let mut x9: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x9, ((x4 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x3);
  let mut x10: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x10, ((x4 & (0x1 as u32)) as fiat_poly1305_u1), 0x0, x5);
  let mut x11: fiat_poly1305_u1 = 0;
  fiat_poly1305_cmovznz_u1(&mut x11, ((x4 & (0x1 as u32)) as fiat_poly1305_u1), 0x0, x6);
  let x12: u32 = (((((!((((0x2 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x13: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x13, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x2 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x14: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x14, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x3, ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x15: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x15, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x3) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x16: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x16, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((x5 as u32) + (x5 as u32)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32));
  let mut x17: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x17, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((x6 as u32) + (x6 as u32)), ((x8 as u32) + (x11 as u32)));
  let mut x18: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x18, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x7 as u64) + (x10 as u64)) & (0xffffffff as u64)) as u32), (((((!((x5 as u32) + (x5 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x19: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x19, (((x12 >> 31) as fiat_poly1305_u1) & ((((((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x4 as u64) + (x9 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((x8 as u32) + (x11 as u32)), (((((!((x6 as u32) + (x6 as u32))) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x20: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x20, ((x15 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x14);
  let mut x21: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x21, ((x15 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x16);
  let mut x22: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x22, ((x15 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x17);
  let x23: u32 = (((((!((((0x2 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x24: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x24, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x13 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x25: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x25, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x14, ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x26: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x26, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x14) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x27: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x27, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32));
  let mut x28: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x28, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), (x17 + x17), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32));
  let mut x29: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x29, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x18 as u64) + (x21 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x16 as u64) + (x16 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x30: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x30, (((x23 >> 31) as fiat_poly1305_u1) & ((((((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x15 as u64) + (x20 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x19 as u64) + (x22 as u64)) & (0xffffffff as u64)) as u32), (((((!(x17 + x17)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x31: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x31, ((x26 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x25);
  let mut x32: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x32, ((x26 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x27);
  let mut x33: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x33, ((x26 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x28);
  let x34: u32 = (((((!((((0x2 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x35: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x35, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x24 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x36: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x36, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x25, ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x37: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x37, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x25) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x38: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x38, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32));
  let mut x39: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x39, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32));
  let mut x40: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x40, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x29 as u64) + (x32 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x27 as u64) + (x27 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x41: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x41, (((x34 >> 31) as fiat_poly1305_u1) & ((((((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x26 as u64) + (x31 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x30 as u64) + (x33 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x28 as u64) + (x28 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x42: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x42, ((x37 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x36);
  let mut x43: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x43, ((x37 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x38);
  let mut x44: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x44, ((x37 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x39);
  let x45: u32 = (((((!((((0x2 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x46: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x46, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x35 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x47: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x47, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x36, ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x48: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x48, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x36) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x49: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x49, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32));
  let mut x50: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x50, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32));
  let mut x51: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x51, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x40 as u64) + (x43 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x38 as u64) + (x38 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x52: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x52, (((x45 >> 31) as fiat_poly1305_u1) & ((((((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x37 as u64) + (x42 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x41 as u64) + (x44 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x39 as u64) + (x39 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x53: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x53, ((x48 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x47);
  let mut x54: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x54, ((x48 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x49);
  let mut x55: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x55, ((x48 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x50);
  let x56: u32 = (((((!((((0x2 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x57: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x57, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x46 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x58: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x58, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x47, ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x59: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x59, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x47) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x60: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x60, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32));
  let mut x61: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x61, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32));
  let mut x62: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x62, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x51 as u64) + (x54 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x49 as u64) + (x49 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x63: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x63, (((x56 >> 31) as fiat_poly1305_u1) & ((((((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x48 as u64) + (x53 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x52 as u64) + (x55 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x50 as u64) + (x50 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x64: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x64, ((x59 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x58);
  let mut x65: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x65, ((x59 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x60);
  let mut x66: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x66, ((x59 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x61);
  let x67: u32 = (((((!((((0x2 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x68: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x68, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x57 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x69: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x69, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x58, ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x70: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x70, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x58) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x71: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x71, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32));
  let mut x72: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x72, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32));
  let mut x73: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x73, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x62 as u64) + (x65 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x60 as u64) + (x60 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x74: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x74, (((x67 >> 31) as fiat_poly1305_u1) & ((((((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x59 as u64) + (x64 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x63 as u64) + (x66 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x61 as u64) + (x61 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x75: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x75, ((x70 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x69);
  let mut x76: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x76, ((x70 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x71);
  let mut x77: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x77, ((x70 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x72);
  let x78: u32 = (((((!((((0x2 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x79: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x79, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x68 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x80: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x80, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x69, ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x81: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x81, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x69) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x82: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x82, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32));
  let mut x83: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x83, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32));
  let mut x84: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x84, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x73 as u64) + (x76 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x71 as u64) + (x71 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x85: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x85, (((x78 >> 31) as fiat_poly1305_u1) & ((((((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x70 as u64) + (x75 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x74 as u64) + (x77 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x72 as u64) + (x72 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x86: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x86, ((x81 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x80);
  let mut x87: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x87, ((x81 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x82);
  let mut x88: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x88, ((x81 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x83);
  let x89: u32 = (((((!((((0x2 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x90: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x90, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x79 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x91: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x91, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x80, ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x92: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x92, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x80) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x93: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x93, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32));
  let mut x94: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x94, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32));
  let mut x95: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x95, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x84 as u64) + (x87 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x82 as u64) + (x82 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x96: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x96, (((x89 >> 31) as fiat_poly1305_u1) & ((((((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x81 as u64) + (x86 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x85 as u64) + (x88 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x83 as u64) + (x83 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x97: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x97, ((x92 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x91);
  let mut x98: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x98, ((x92 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x93);
  let mut x99: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x99, ((x92 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x94);
  let x100: u32 = (((((!((((0x2 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x101: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x101, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x90 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x102: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x102, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x91, ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x103: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x103, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x91) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x104: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x104, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32));
  let mut x105: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x105, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32));
  let mut x106: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x106, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x95 as u64) + (x98 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x93 as u64) + (x93 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x107: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x107, (((x100 >> 31) as fiat_poly1305_u1) & ((((((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x92 as u64) + (x97 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x96 as u64) + (x99 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x94 as u64) + (x94 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x108: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x108, ((x103 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x102);
  let mut x109: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x109, ((x103 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x104);
  let mut x110: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x110, ((x103 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x105);
  let x111: u32 = (((((!((((0x2 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x112: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x112, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x101 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x113: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x113, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x102, ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x114: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x114, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x102) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x115: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x115, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32));
  let mut x116: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x116, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32));
  let mut x117: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x117, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x106 as u64) + (x109 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x104 as u64) + (x104 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x118: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x118, (((x111 >> 31) as fiat_poly1305_u1) & ((((((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x103 as u64) + (x108 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x107 as u64) + (x110 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x105 as u64) + (x105 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x119: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x119, ((x114 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x113);
  let mut x120: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x120, ((x114 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x115);
  let mut x121: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x121, ((x114 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x116);
  let x122: u32 = (((((!((((0x2 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x123: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x123, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x112 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x124: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x124, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x113, ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x125: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x125, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x113) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x126: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x126, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32));
  let mut x127: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x127, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32));
  let mut x128: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x128, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x117 as u64) + (x120 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x115 as u64) + (x115 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x129: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x129, (((x122 >> 31) as fiat_poly1305_u1) & ((((((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x114 as u64) + (x119 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x118 as u64) + (x121 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x116 as u64) + (x116 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x130: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x130, ((x125 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x124);
  let mut x131: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x131, ((x125 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x126);
  let mut x132: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x132, ((x125 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x127);
  let x133: u32 = (((((!((((0x2 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x134: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x134, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x123 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x135: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x135, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x124, ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x136: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x136, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x124) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x137: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x137, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32));
  let mut x138: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x138, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32));
  let mut x139: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x139, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x128 as u64) + (x131 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x126 as u64) + (x126 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x140: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x140, (((x133 >> 31) as fiat_poly1305_u1) & ((((((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x125 as u64) + (x130 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x129 as u64) + (x132 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x127 as u64) + (x127 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x141: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x141, ((x136 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x135);
  let mut x142: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x142, ((x136 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x137);
  let mut x143: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x143, ((x136 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x138);
  let x144: u32 = (((((!((((0x2 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x145: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x145, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x134 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x146: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x146, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x135, ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x147: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x147, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x135) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x148: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x148, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32));
  let mut x149: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x149, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32));
  let mut x150: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x150, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x139 as u64) + (x142 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x137 as u64) + (x137 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x151: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x151, (((x144 >> 31) as fiat_poly1305_u1) & ((((((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x136 as u64) + (x141 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x140 as u64) + (x143 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x138 as u64) + (x138 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x152: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x152, ((x147 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x146);
  let mut x153: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x153, ((x147 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x148);
  let mut x154: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x154, ((x147 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x149);
  let x155: u32 = (((((!((((0x2 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x156: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x156, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x145 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x157: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x157, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x146, ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x158: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x158, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x146) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x159: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x159, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32));
  let mut x160: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x160, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32));
  let mut x161: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x161, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x150 as u64) + (x153 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x148 as u64) + (x148 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x162: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x162, (((x155 >> 31) as fiat_poly1305_u1) & ((((((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x147 as u64) + (x152 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x151 as u64) + (x154 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x149 as u64) + (x149 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x163: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x163, ((x158 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x157);
  let mut x164: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x164, ((x158 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x159);
  let mut x165: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x165, ((x158 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x160);
  let x166: u32 = (((((!((((0x2 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x167: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x167, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x156 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x168: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x168, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x157, ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x169: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x169, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x157) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x170: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x170, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32));
  let mut x171: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x171, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32));
  let mut x172: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x172, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x161 as u64) + (x164 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x159 as u64) + (x159 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x173: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x173, (((x166 >> 31) as fiat_poly1305_u1) & ((((((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x158 as u64) + (x163 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x162 as u64) + (x165 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x160 as u64) + (x160 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x174: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x174, ((x169 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x168);
  let mut x175: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x175, ((x169 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x170);
  let mut x176: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x176, ((x169 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x171);
  let x177: u32 = (((((!((((0x2 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x178: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x178, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x167 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x179: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x179, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x168, ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x180: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x180, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x168) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x181: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x181, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32));
  let mut x182: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x182, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32));
  let mut x183: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x183, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x172 as u64) + (x175 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x170 as u64) + (x170 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x184: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x184, (((x177 >> 31) as fiat_poly1305_u1) & ((((((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x169 as u64) + (x174 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x173 as u64) + (x176 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x171 as u64) + (x171 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x185: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x185, ((x180 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x179);
  let mut x186: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x186, ((x180 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x181);
  let mut x187: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x187, ((x180 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x182);
  let x188: u32 = (((((!((((0x2 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x189: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x189, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x178 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x190: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x190, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x179, ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x191: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x191, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x179) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x192: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x192, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32));
  let mut x193: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x193, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32));
  let mut x194: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x194, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x183 as u64) + (x186 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x181 as u64) + (x181 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x195: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x195, (((x188 >> 31) as fiat_poly1305_u1) & ((((((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x180 as u64) + (x185 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x184 as u64) + (x187 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x182 as u64) + (x182 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x196: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x196, ((x191 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x190);
  let mut x197: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x197, ((x191 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x192);
  let mut x198: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x198, ((x191 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x193);
  let x199: u32 = (((((!((((0x2 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x200: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x200, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x189 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x201: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x201, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x190, ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x202: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x202, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x190) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x203: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x203, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32));
  let mut x204: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x204, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32));
  let mut x205: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x205, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x194 as u64) + (x197 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x192 as u64) + (x192 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x206: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x206, (((x199 >> 31) as fiat_poly1305_u1) & ((((((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x191 as u64) + (x196 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x195 as u64) + (x198 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x193 as u64) + (x193 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x207: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x207, ((x202 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x201);
  let mut x208: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x208, ((x202 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x203);
  let mut x209: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x209, ((x202 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x204);
  let x210: u32 = (((((!((((0x2 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x211: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x211, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x200 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x212: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x212, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x201, ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x213: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x213, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x201) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x214: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x214, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32));
  let mut x215: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x215, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32));
  let mut x216: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x216, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x205 as u64) + (x208 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x203 as u64) + (x203 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x217: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x217, (((x210 >> 31) as fiat_poly1305_u1) & ((((((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x202 as u64) + (x207 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x206 as u64) + (x209 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x204 as u64) + (x204 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x218: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x218, ((x213 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x212);
  let mut x219: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x219, ((x213 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x214);
  let mut x220: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x220, ((x213 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x215);
  let x221: u32 = (((((!((((0x2 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x222: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x222, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x211 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x223: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x223, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x212, ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x224: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x224, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x212) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x225: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x225, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32));
  let mut x226: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x226, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32));
  let mut x227: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x227, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x216 as u64) + (x219 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x214 as u64) + (x214 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x228: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x228, (((x221 >> 31) as fiat_poly1305_u1) & ((((((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x213 as u64) + (x218 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x217 as u64) + (x220 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x215 as u64) + (x215 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x229: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x229, ((x224 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x223);
  let mut x230: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x230, ((x224 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x225);
  let mut x231: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x231, ((x224 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x226);
  let x232: u32 = (((((!((((0x2 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x233: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x233, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x222 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x234: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x234, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x223, ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x235: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x235, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x223) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x236: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x236, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32));
  let mut x237: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x237, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32));
  let mut x238: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x238, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x227 as u64) + (x230 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x225 as u64) + (x225 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x239: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x239, (((x232 >> 31) as fiat_poly1305_u1) & ((((((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x224 as u64) + (x229 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x228 as u64) + (x231 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x226 as u64) + (x226 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x240: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x240, ((x235 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x234);
  let mut x241: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x241, ((x235 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x236);
  let mut x242: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x242, ((x235 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x237);
  let x243: u32 = (((((!((((0x2 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x244: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x244, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x233 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x245: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x245, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x234, ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x246: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x246, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x234) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x247: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x247, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32));
  let mut x248: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x248, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32));
  let mut x249: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x249, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x238 as u64) + (x241 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x236 as u64) + (x236 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x250: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x250, (((x243 >> 31) as fiat_poly1305_u1) & ((((((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x235 as u64) + (x240 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x239 as u64) + (x242 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x237 as u64) + (x237 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x251: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x251, ((x246 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x245);
  let mut x252: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x252, ((x246 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x247);
  let mut x253: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x253, ((x246 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x248);
  let x254: u32 = (((((!((((0x2 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x255: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x255, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x244 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x256: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x256, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x245, ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x257: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x257, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x245) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x258: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x258, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32));
  let mut x259: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x259, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32));
  let mut x260: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x260, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x249 as u64) + (x252 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x247 as u64) + (x247 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x261: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x261, (((x254 >> 31) as fiat_poly1305_u1) & ((((((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x246 as u64) + (x251 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x250 as u64) + (x253 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x248 as u64) + (x248 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x262: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x262, ((x257 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x256);
  let mut x263: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x263, ((x257 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x258);
  let mut x264: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x264, ((x257 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x259);
  let x265: u32 = (((((!((((0x2 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x266: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x266, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x255 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x267: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x267, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x256, ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x268: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x268, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x256) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x269: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x269, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32));
  let mut x270: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x270, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32));
  let mut x271: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x271, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x260 as u64) + (x263 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x258 as u64) + (x258 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x272: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x272, (((x265 >> 31) as fiat_poly1305_u1) & ((((((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x257 as u64) + (x262 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x261 as u64) + (x264 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x259 as u64) + (x259 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x273: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x273, ((x268 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x267);
  let mut x274: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x274, ((x268 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x269);
  let mut x275: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x275, ((x268 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x270);
  let x276: u32 = (((((!((((0x2 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x277: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x277, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x266 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x278: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x278, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x267, ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x279: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x279, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x267) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x280: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x280, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32));
  let mut x281: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x281, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32));
  let mut x282: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x282, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x271 as u64) + (x274 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x269 as u64) + (x269 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x283: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x283, (((x276 >> 31) as fiat_poly1305_u1) & ((((((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x268 as u64) + (x273 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x272 as u64) + (x275 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x270 as u64) + (x270 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x284: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x284, ((x279 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x278);
  let mut x285: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x285, ((x279 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x280);
  let mut x286: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x286, ((x279 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x281);
  let x287: u32 = (((((!((((0x2 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x288: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x288, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x277 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x289: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x289, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x278, ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x290: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x290, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x278) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x291: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x291, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32));
  let mut x292: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x292, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32));
  let mut x293: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x293, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x282 as u64) + (x285 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x280 as u64) + (x280 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x294: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x294, (((x287 >> 31) as fiat_poly1305_u1) & ((((((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x279 as u64) + (x284 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x283 as u64) + (x286 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x281 as u64) + (x281 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x295: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x295, ((x290 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x289);
  let mut x296: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x296, ((x290 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x291);
  let mut x297: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x297, ((x290 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x292);
  let x298: u32 = (((((!((((0x2 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x299: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x299, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x288 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x300: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x300, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x289, ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x301: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x301, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x289) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x302: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x302, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32));
  let mut x303: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x303, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32));
  let mut x304: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x304, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x293 as u64) + (x296 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x291 as u64) + (x291 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x305: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x305, (((x298 >> 31) as fiat_poly1305_u1) & ((((((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x290 as u64) + (x295 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x294 as u64) + (x297 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x292 as u64) + (x292 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x306: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x306, ((x301 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x300);
  let mut x307: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x307, ((x301 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x302);
  let mut x308: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x308, ((x301 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x303);
  let x309: u32 = (((((!((((0x2 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x310: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x310, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x299 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x311: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x311, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), x300, ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)));
  let mut x312: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x312, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x300) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x313: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x313, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32));
  let mut x314: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x314, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32));
  let mut x315: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x315, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x304 as u64) + (x307 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x302 as u64) + (x302 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x316: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x316, (((x309 >> 31) as fiat_poly1305_u1) & ((((((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x301 as u64) + (x306 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x305 as u64) + (x308 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x303 as u64) + (x303 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x317: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x317, ((x312 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x311);
  let mut x318: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x318, ((x312 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x313);
  let mut x319: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x319, ((x312 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x314);
  let x320: u32 = (((((!((((0x2 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32);
  let mut x321: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x321, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((0x2 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32), (((((!((((0x2 as u64) + (x310 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x322: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x322, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)), (((((!x311) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x323: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x323, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32));
  let mut x324: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x324, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32));
  let mut x325: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x325, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x315 as u64) + (x318 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x313 as u64) + (x313 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x326: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x326, (((x320 >> 31) as fiat_poly1305_u1) & ((((((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) & 0x80000000) | (((((x312 as u64) + (x317 as u64)) & (0xffffffff as u64)) as u32) >> 1)) & (0x1 as u32)) as fiat_poly1305_u1)), ((((x316 as u64) + (x319 as u64)) & (0xffffffff as u64)) as u32), (((((!((((x314 as u64) + (x314 as u64)) & (0xffffffff as u64)) as u32)) as u64) + (0x1 as u64)) & (0xffffffff as u64)) as u32));
  let mut x327: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x327, ((x322 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x323);
  let mut x328: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x328, ((x322 & (0x1 as u32)) as fiat_poly1305_u1), (0x0 as u32), x324);
  let x329: u32 = ((((0x2 as u64) + (x321 as u64)) & (0xffffffff as u64)) as u32);
  let x330: u32 = ((((x323 as u64) + (x323 as u64)) & (0xffffffff as u64)) as u32);
  let x331: u32 = ((((x324 as u64) + (x324 as u64)) & (0xffffffff as u64)) as u32);
  let x332: u32 = ((((x325 as u64) + (x327 as u64)) & (0xffffffff as u64)) as u32);
  let x333: u32 = ((((x326 as u64) + (x328 as u64)) & (0xffffffff as u64)) as u32);
  *out1 = x329;
  *out2 = x330;
  *out3 = x331;
  *out4 = x332;
  *out5 = x333;
}

/// The function fiat_poly1305_update_fg computes a update_fg.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [0x0 ~> 0xffffffff]
///   arg4: [0x0 ~> 0xffffffff]
///   arg5: [0x0 ~> 0xffffffff]
///   arg6: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
#[inline]
pub fn fiat_poly1305_update_fg(out1: &mut [u32; 6], out2: &mut [u32; 6], arg1: &[u32; 6], arg2: &[u32; 6], arg3: u32, arg4: u32, arg5: u32, arg6: u32) -> () {
  let mut x1: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x1, (((arg1[5]) >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x2: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x2, ((arg3 >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x3: u32 = 0;
  let mut x4: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x3, &mut x4, x2, (arg1[0]));
  let mut x5: u32 = 0;
  let mut x6: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x5, &mut x6, x2, (arg1[1]));
  let mut x7: u32 = 0;
  let mut x8: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x7, &mut x8, x2, (arg1[0]));
  let mut x9: u32 = 0;
  let mut x10: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x9, &mut x10, x2, (arg1[2]));
  let mut x11: u32 = 0;
  let mut x12: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x11, &mut x12, x2, (arg1[1]));
  let mut x13: u32 = 0;
  let mut x14: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x13, &mut x14, x2, (arg1[0]));
  let mut x15: u32 = 0;
  let mut x16: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x15, &mut x16, x2, (arg1[3]));
  let mut x17: u32 = 0;
  let mut x18: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x17, &mut x18, x2, (arg1[2]));
  let mut x19: u32 = 0;
  let mut x20: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x19, &mut x20, x2, (arg1[1]));
  let mut x21: u32 = 0;
  let mut x22: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x21, &mut x22, x2, (arg1[0]));
  let mut x23: u32 = 0;
  let mut x24: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x23, &mut x24, x2, (arg1[4]));
  let mut x25: u32 = 0;
  let mut x26: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x25, &mut x26, x2, (arg1[3]));
  let mut x27: u32 = 0;
  let mut x28: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x27, &mut x28, x2, (arg1[2]));
  let mut x29: u32 = 0;
  let mut x30: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x29, &mut x30, x2, (arg1[1]));
  let mut x31: u32 = 0;
  let mut x32: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x31, &mut x32, x2, (arg1[0]));
  let mut x33: u32 = 0;
  let mut x34: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x33, &mut x34, x2, (arg1[5]));
  let mut x35: u32 = 0;
  let mut x36: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x35, &mut x36, x2, (arg1[4]));
  let mut x37: u32 = 0;
  let mut x38: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x37, &mut x38, x2, (arg1[3]));
  let mut x39: u32 = 0;
  let mut x40: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x39, &mut x40, x2, (arg1[2]));
  let mut x41: u32 = 0;
  let mut x42: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x41, &mut x42, x2, (arg1[1]));
  let mut x43: u32 = 0;
  let mut x44: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x43, &mut x44, x2, (arg1[0]));
  let mut x45: u32 = 0;
  let mut x46: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x45, &mut x46, arg3, x1);
  let mut x47: u32 = 0;
  let mut x48: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x47, &mut x48, arg3, (arg1[5]));
  let mut x49: u32 = 0;
  let mut x50: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x49, &mut x50, arg3, (arg1[4]));
  let mut x51: u32 = 0;
  let mut x52: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x51, &mut x52, arg3, (arg1[3]));
  let mut x53: u32 = 0;
  let mut x54: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x53, &mut x54, arg3, (arg1[2]));
  let mut x55: u32 = 0;
  let mut x56: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x55, &mut x56, arg3, (arg1[1]));
  let mut x57: u32 = 0;
  let mut x58: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x57, &mut x58, arg3, (arg1[0]));
  let mut x59: u32 = 0;
  let mut x60: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x59, &mut x60, 0x0, x48, x3);
  let mut x61: u32 = 0;
  let mut x62: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x61, &mut x62, 0x0, x59, x5);
  let mut x63: u32 = 0;
  let mut x64: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x63, &mut x64, 0x0, x50, x7);
  let mut x65: u32 = 0;
  let mut x66: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x65, &mut x66, x64, x61, x8);
  let mut x67: u32 = 0;
  let mut x68: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x67, &mut x68, 0x0, x63, x11);
  let mut x69: u32 = 0;
  let mut x70: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x69, &mut x70, x68, x65, x9);
  let mut x71: u32 = 0;
  let mut x72: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x71, &mut x72, 0x0, x52, x13);
  let mut x73: u32 = 0;
  let mut x74: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x73, &mut x74, x72, x67, x14);
  let mut x75: u32 = 0;
  let mut x76: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x75, &mut x76, x74, x69, x12);
  let mut x77: u32 = 0;
  let mut x78: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x77, &mut x78, 0x0, x71, x19);
  let mut x79: u32 = 0;
  let mut x80: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x79, &mut x80, x78, x73, x17);
  let mut x81: u32 = 0;
  let mut x82: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x81, &mut x82, x80, x75, x15);
  let mut x83: u32 = 0;
  let mut x84: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x83, &mut x84, 0x0, x54, x21);
  let mut x85: u32 = 0;
  let mut x86: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x85, &mut x86, x84, x77, x22);
  let mut x87: u32 = 0;
  let mut x88: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x87, &mut x88, x86, x79, x20);
  let mut x89: u32 = 0;
  let mut x90: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x89, &mut x90, x88, x81, x18);
  let mut x91: u32 = 0;
  let mut x92: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x91, &mut x92, 0x0, x83, x29);
  let mut x93: u32 = 0;
  let mut x94: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x93, &mut x94, x92, x85, x27);
  let mut x95: u32 = 0;
  let mut x96: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x95, &mut x96, x94, x87, x25);
  let mut x97: u32 = 0;
  let mut x98: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x97, &mut x98, x96, x89, x23);
  let mut x99: u32 = 0;
  let mut x100: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x99, &mut x100, 0x0, x56, x31);
  let mut x101: u32 = 0;
  let mut x102: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x101, &mut x102, x100, x91, x32);
  let mut x103: u32 = 0;
  let mut x104: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x103, &mut x104, x102, x93, x30);
  let mut x105: u32 = 0;
  let mut x106: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x105, &mut x106, x104, x95, x28);
  let mut x107: u32 = 0;
  let mut x108: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x107, &mut x108, x106, x97, x26);
  let mut x109: u32 = 0;
  let mut x110: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x109, &mut x110, 0x0, x99, x41);
  let mut x111: u32 = 0;
  let mut x112: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x111, &mut x112, x110, x101, x39);
  let mut x113: u32 = 0;
  let mut x114: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x113, &mut x114, x112, x103, x37);
  let mut x115: u32 = 0;
  let mut x116: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x115, &mut x116, x114, x105, x35);
  let mut x117: u32 = 0;
  let mut x118: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x117, &mut x118, x116, x107, x33);
  let mut x119: u32 = 0;
  let mut x120: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x119, &mut x120, 0x0, x58, x43);
  let mut x121: u32 = 0;
  let mut x122: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x121, &mut x122, x120, x109, x44);
  let mut x123: u32 = 0;
  let mut x124: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x123, &mut x124, x122, x111, x42);
  let mut x125: u32 = 0;
  let mut x126: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x125, &mut x126, x124, x113, x40);
  let mut x127: u32 = 0;
  let mut x128: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x127, &mut x128, x126, x115, x38);
  let mut x129: u32 = 0;
  let mut x130: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x129, &mut x130, x128, x117, x36);
  let mut x131: u32 = 0;
  let mut x132: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x131, &mut x132, 0x0, x119, x55);
  let mut x133: u32 = 0;
  let mut x134: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x133, &mut x134, x132, x121, x53);
  let mut x135: u32 = 0;
  let mut x136: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x135, &mut x136, x134, x123, x51);
  let mut x137: u32 = 0;
  let mut x138: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x137, &mut x138, x136, x125, x49);
  let mut x139: u32 = 0;
  let mut x140: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x139, &mut x140, x138, x127, x47);
  let mut x141: u32 = 0;
  let mut x142: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x141, &mut x142, x140, x129, x45);
  let mut x143: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x143, (((arg2[5]) >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x144: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x144, ((arg4 >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x145: u32 = 0;
  let mut x146: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x145, &mut x146, x144, (arg2[0]));
  let mut x147: u32 = 0;
  let mut x148: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x147, &mut x148, x144, (arg2[1]));
  let mut x149: u32 = 0;
  let mut x150: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x149, &mut x150, x144, (arg2[0]));
  let mut x151: u32 = 0;
  let mut x152: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x151, &mut x152, x144, (arg2[2]));
  let mut x153: u32 = 0;
  let mut x154: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x153, &mut x154, x144, (arg2[1]));
  let mut x155: u32 = 0;
  let mut x156: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x155, &mut x156, x144, (arg2[0]));
  let mut x157: u32 = 0;
  let mut x158: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x157, &mut x158, x144, (arg2[3]));
  let mut x159: u32 = 0;
  let mut x160: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x159, &mut x160, x144, (arg2[2]));
  let mut x161: u32 = 0;
  let mut x162: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x161, &mut x162, x144, (arg2[1]));
  let mut x163: u32 = 0;
  let mut x164: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x163, &mut x164, x144, (arg2[0]));
  let mut x165: u32 = 0;
  let mut x166: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x165, &mut x166, x144, (arg2[4]));
  let mut x167: u32 = 0;
  let mut x168: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x167, &mut x168, x144, (arg2[3]));
  let mut x169: u32 = 0;
  let mut x170: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x169, &mut x170, x144, (arg2[2]));
  let mut x171: u32 = 0;
  let mut x172: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x171, &mut x172, x144, (arg2[1]));
  let mut x173: u32 = 0;
  let mut x174: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x173, &mut x174, x144, (arg2[0]));
  let mut x175: u32 = 0;
  let mut x176: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x175, &mut x176, x144, (arg2[5]));
  let mut x177: u32 = 0;
  let mut x178: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x177, &mut x178, x144, (arg2[4]));
  let mut x179: u32 = 0;
  let mut x180: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x179, &mut x180, x144, (arg2[3]));
  let mut x181: u32 = 0;
  let mut x182: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x181, &mut x182, x144, (arg2[2]));
  let mut x183: u32 = 0;
  let mut x184: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x183, &mut x184, x144, (arg2[1]));
  let mut x185: u32 = 0;
  let mut x186: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x185, &mut x186, x144, (arg2[0]));
  let mut x187: u32 = 0;
  let mut x188: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x187, &mut x188, arg4, x143);
  let mut x189: u32 = 0;
  let mut x190: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x189, &mut x190, arg4, (arg2[5]));
  let mut x191: u32 = 0;
  let mut x192: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x191, &mut x192, arg4, (arg2[4]));
  let mut x193: u32 = 0;
  let mut x194: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x193, &mut x194, arg4, (arg2[3]));
  let mut x195: u32 = 0;
  let mut x196: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x195, &mut x196, arg4, (arg2[2]));
  let mut x197: u32 = 0;
  let mut x198: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x197, &mut x198, arg4, (arg2[1]));
  let mut x199: u32 = 0;
  let mut x200: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x199, &mut x200, arg4, (arg2[0]));
  let mut x201: u32 = 0;
  let mut x202: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x201, &mut x202, 0x0, x190, x145);
  let mut x203: u32 = 0;
  let mut x204: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x203, &mut x204, 0x0, x201, x147);
  let mut x205: u32 = 0;
  let mut x206: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x205, &mut x206, 0x0, x192, x149);
  let mut x207: u32 = 0;
  let mut x208: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x207, &mut x208, x206, x203, x150);
  let mut x209: u32 = 0;
  let mut x210: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x209, &mut x210, 0x0, x205, x153);
  let mut x211: u32 = 0;
  let mut x212: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x211, &mut x212, x210, x207, x151);
  let mut x213: u32 = 0;
  let mut x214: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x213, &mut x214, 0x0, x194, x155);
  let mut x215: u32 = 0;
  let mut x216: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x215, &mut x216, x214, x209, x156);
  let mut x217: u32 = 0;
  let mut x218: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x217, &mut x218, x216, x211, x154);
  let mut x219: u32 = 0;
  let mut x220: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x219, &mut x220, 0x0, x213, x161);
  let mut x221: u32 = 0;
  let mut x222: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x221, &mut x222, x220, x215, x159);
  let mut x223: u32 = 0;
  let mut x224: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x223, &mut x224, x222, x217, x157);
  let mut x225: u32 = 0;
  let mut x226: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x225, &mut x226, 0x0, x196, x163);
  let mut x227: u32 = 0;
  let mut x228: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x227, &mut x228, x226, x219, x164);
  let mut x229: u32 = 0;
  let mut x230: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x229, &mut x230, x228, x221, x162);
  let mut x231: u32 = 0;
  let mut x232: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x231, &mut x232, x230, x223, x160);
  let mut x233: u32 = 0;
  let mut x234: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x233, &mut x234, 0x0, x225, x171);
  let mut x235: u32 = 0;
  let mut x236: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x235, &mut x236, x234, x227, x169);
  let mut x237: u32 = 0;
  let mut x238: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x237, &mut x238, x236, x229, x167);
  let mut x239: u32 = 0;
  let mut x240: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x239, &mut x240, x238, x231, x165);
  let mut x241: u32 = 0;
  let mut x242: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x241, &mut x242, 0x0, x198, x173);
  let mut x243: u32 = 0;
  let mut x244: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x243, &mut x244, x242, x233, x174);
  let mut x245: u32 = 0;
  let mut x246: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x245, &mut x246, x244, x235, x172);
  let mut x247: u32 = 0;
  let mut x248: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x247, &mut x248, x246, x237, x170);
  let mut x249: u32 = 0;
  let mut x250: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x249, &mut x250, x248, x239, x168);
  let mut x251: u32 = 0;
  let mut x252: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x251, &mut x252, 0x0, x241, x183);
  let mut x253: u32 = 0;
  let mut x254: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x253, &mut x254, x252, x243, x181);
  let mut x255: u32 = 0;
  let mut x256: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x255, &mut x256, x254, x245, x179);
  let mut x257: u32 = 0;
  let mut x258: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x257, &mut x258, x256, x247, x177);
  let mut x259: u32 = 0;
  let mut x260: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x259, &mut x260, x258, x249, x175);
  let mut x261: u32 = 0;
  let mut x262: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x261, &mut x262, 0x0, x200, x185);
  let mut x263: u32 = 0;
  let mut x264: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x263, &mut x264, x262, x251, x186);
  let mut x265: u32 = 0;
  let mut x266: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x265, &mut x266, x264, x253, x184);
  let mut x267: u32 = 0;
  let mut x268: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x267, &mut x268, x266, x255, x182);
  let mut x269: u32 = 0;
  let mut x270: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x269, &mut x270, x268, x257, x180);
  let mut x271: u32 = 0;
  let mut x272: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x271, &mut x272, x270, x259, x178);
  let mut x273: u32 = 0;
  let mut x274: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x273, &mut x274, 0x0, x261, x197);
  let mut x275: u32 = 0;
  let mut x276: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x275, &mut x276, x274, x263, x195);
  let mut x277: u32 = 0;
  let mut x278: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x277, &mut x278, x276, x265, x193);
  let mut x279: u32 = 0;
  let mut x280: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x279, &mut x280, x278, x267, x191);
  let mut x281: u32 = 0;
  let mut x282: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x281, &mut x282, x280, x269, x189);
  let mut x283: u32 = 0;
  let mut x284: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x283, &mut x284, x282, x271, x187);
  let mut x285: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x285, (((arg1[5]) >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x286: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x286, ((arg5 >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x287: u32 = 0;
  let mut x288: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x287, &mut x288, x286, (arg1[0]));
  let mut x289: u32 = 0;
  let mut x290: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x289, &mut x290, x286, (arg1[1]));
  let mut x291: u32 = 0;
  let mut x292: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x291, &mut x292, x286, (arg1[0]));
  let mut x293: u32 = 0;
  let mut x294: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x293, &mut x294, x286, (arg1[2]));
  let mut x295: u32 = 0;
  let mut x296: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x295, &mut x296, x286, (arg1[1]));
  let mut x297: u32 = 0;
  let mut x298: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x297, &mut x298, x286, (arg1[0]));
  let mut x299: u32 = 0;
  let mut x300: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x299, &mut x300, x286, (arg1[3]));
  let mut x301: u32 = 0;
  let mut x302: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x301, &mut x302, x286, (arg1[2]));
  let mut x303: u32 = 0;
  let mut x304: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x303, &mut x304, x286, (arg1[1]));
  let mut x305: u32 = 0;
  let mut x306: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x305, &mut x306, x286, (arg1[0]));
  let mut x307: u32 = 0;
  let mut x308: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x307, &mut x308, x286, (arg1[4]));
  let mut x309: u32 = 0;
  let mut x310: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x309, &mut x310, x286, (arg1[3]));
  let mut x311: u32 = 0;
  let mut x312: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x311, &mut x312, x286, (arg1[2]));
  let mut x313: u32 = 0;
  let mut x314: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x313, &mut x314, x286, (arg1[1]));
  let mut x315: u32 = 0;
  let mut x316: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x315, &mut x316, x286, (arg1[0]));
  let mut x317: u32 = 0;
  let mut x318: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x317, &mut x318, x286, (arg1[5]));
  let mut x319: u32 = 0;
  let mut x320: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x319, &mut x320, x286, (arg1[4]));
  let mut x321: u32 = 0;
  let mut x322: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x321, &mut x322, x286, (arg1[3]));
  let mut x323: u32 = 0;
  let mut x324: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x323, &mut x324, x286, (arg1[2]));
  let mut x325: u32 = 0;
  let mut x326: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x325, &mut x326, x286, (arg1[1]));
  let mut x327: u32 = 0;
  let mut x328: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x327, &mut x328, x286, (arg1[0]));
  let mut x329: u32 = 0;
  let mut x330: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x329, &mut x330, arg5, x285);
  let mut x331: u32 = 0;
  let mut x332: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x331, &mut x332, arg5, (arg1[5]));
  let mut x333: u32 = 0;
  let mut x334: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x333, &mut x334, arg5, (arg1[4]));
  let mut x335: u32 = 0;
  let mut x336: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x335, &mut x336, arg5, (arg1[3]));
  let mut x337: u32 = 0;
  let mut x338: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x337, &mut x338, arg5, (arg1[2]));
  let mut x339: u32 = 0;
  let mut x340: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x339, &mut x340, arg5, (arg1[1]));
  let mut x341: u32 = 0;
  let mut x342: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x341, &mut x342, arg5, (arg1[0]));
  let mut x343: u32 = 0;
  let mut x344: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x343, &mut x344, 0x0, x332, x287);
  let mut x345: u32 = 0;
  let mut x346: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x345, &mut x346, 0x0, x343, x289);
  let mut x347: u32 = 0;
  let mut x348: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x347, &mut x348, 0x0, x334, x291);
  let mut x349: u32 = 0;
  let mut x350: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x349, &mut x350, x348, x345, x292);
  let mut x351: u32 = 0;
  let mut x352: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x351, &mut x352, 0x0, x347, x295);
  let mut x353: u32 = 0;
  let mut x354: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x353, &mut x354, x352, x349, x293);
  let mut x355: u32 = 0;
  let mut x356: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x355, &mut x356, 0x0, x336, x297);
  let mut x357: u32 = 0;
  let mut x358: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x357, &mut x358, x356, x351, x298);
  let mut x359: u32 = 0;
  let mut x360: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x359, &mut x360, x358, x353, x296);
  let mut x361: u32 = 0;
  let mut x362: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x361, &mut x362, 0x0, x355, x303);
  let mut x363: u32 = 0;
  let mut x364: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x363, &mut x364, x362, x357, x301);
  let mut x365: u32 = 0;
  let mut x366: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x365, &mut x366, x364, x359, x299);
  let mut x367: u32 = 0;
  let mut x368: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x367, &mut x368, 0x0, x338, x305);
  let mut x369: u32 = 0;
  let mut x370: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x369, &mut x370, x368, x361, x306);
  let mut x371: u32 = 0;
  let mut x372: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x371, &mut x372, x370, x363, x304);
  let mut x373: u32 = 0;
  let mut x374: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x373, &mut x374, x372, x365, x302);
  let mut x375: u32 = 0;
  let mut x376: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x375, &mut x376, 0x0, x367, x313);
  let mut x377: u32 = 0;
  let mut x378: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x377, &mut x378, x376, x369, x311);
  let mut x379: u32 = 0;
  let mut x380: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x379, &mut x380, x378, x371, x309);
  let mut x381: u32 = 0;
  let mut x382: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x381, &mut x382, x380, x373, x307);
  let mut x383: u32 = 0;
  let mut x384: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x383, &mut x384, 0x0, x340, x315);
  let mut x385: u32 = 0;
  let mut x386: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x385, &mut x386, x384, x375, x316);
  let mut x387: u32 = 0;
  let mut x388: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x387, &mut x388, x386, x377, x314);
  let mut x389: u32 = 0;
  let mut x390: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x389, &mut x390, x388, x379, x312);
  let mut x391: u32 = 0;
  let mut x392: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x391, &mut x392, x390, x381, x310);
  let mut x393: u32 = 0;
  let mut x394: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x393, &mut x394, 0x0, x383, x325);
  let mut x395: u32 = 0;
  let mut x396: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x395, &mut x396, x394, x385, x323);
  let mut x397: u32 = 0;
  let mut x398: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x397, &mut x398, x396, x387, x321);
  let mut x399: u32 = 0;
  let mut x400: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x399, &mut x400, x398, x389, x319);
  let mut x401: u32 = 0;
  let mut x402: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x401, &mut x402, x400, x391, x317);
  let mut x403: u32 = 0;
  let mut x404: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x403, &mut x404, 0x0, x342, x327);
  let mut x405: u32 = 0;
  let mut x406: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x405, &mut x406, x404, x393, x328);
  let mut x407: u32 = 0;
  let mut x408: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x407, &mut x408, x406, x395, x326);
  let mut x409: u32 = 0;
  let mut x410: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x409, &mut x410, x408, x397, x324);
  let mut x411: u32 = 0;
  let mut x412: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x411, &mut x412, x410, x399, x322);
  let mut x413: u32 = 0;
  let mut x414: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x413, &mut x414, x412, x401, x320);
  let mut x415: u32 = 0;
  let mut x416: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x415, &mut x416, 0x0, x403, x339);
  let mut x417: u32 = 0;
  let mut x418: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x417, &mut x418, x416, x405, x337);
  let mut x419: u32 = 0;
  let mut x420: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x419, &mut x420, x418, x407, x335);
  let mut x421: u32 = 0;
  let mut x422: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x421, &mut x422, x420, x409, x333);
  let mut x423: u32 = 0;
  let mut x424: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x423, &mut x424, x422, x411, x331);
  let mut x425: u32 = 0;
  let mut x426: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x425, &mut x426, x424, x413, x329);
  let mut x427: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x427, (((arg2[5]) >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x428: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x428, ((arg6 >> 31) as fiat_poly1305_u1), (0x0 as u32), 0xffffffff);
  let mut x429: u32 = 0;
  let mut x430: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x429, &mut x430, x428, (arg2[0]));
  let mut x431: u32 = 0;
  let mut x432: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x431, &mut x432, x428, (arg2[1]));
  let mut x433: u32 = 0;
  let mut x434: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x433, &mut x434, x428, (arg2[0]));
  let mut x435: u32 = 0;
  let mut x436: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x435, &mut x436, x428, (arg2[2]));
  let mut x437: u32 = 0;
  let mut x438: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x437, &mut x438, x428, (arg2[1]));
  let mut x439: u32 = 0;
  let mut x440: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x439, &mut x440, x428, (arg2[0]));
  let mut x441: u32 = 0;
  let mut x442: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x441, &mut x442, x428, (arg2[3]));
  let mut x443: u32 = 0;
  let mut x444: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x443, &mut x444, x428, (arg2[2]));
  let mut x445: u32 = 0;
  let mut x446: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x445, &mut x446, x428, (arg2[1]));
  let mut x447: u32 = 0;
  let mut x448: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x447, &mut x448, x428, (arg2[0]));
  let mut x449: u32 = 0;
  let mut x450: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x449, &mut x450, x428, (arg2[4]));
  let mut x451: u32 = 0;
  let mut x452: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x451, &mut x452, x428, (arg2[3]));
  let mut x453: u32 = 0;
  let mut x454: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x453, &mut x454, x428, (arg2[2]));
  let mut x455: u32 = 0;
  let mut x456: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x455, &mut x456, x428, (arg2[1]));
  let mut x457: u32 = 0;
  let mut x458: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x457, &mut x458, x428, (arg2[0]));
  let mut x459: u32 = 0;
  let mut x460: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x459, &mut x460, x428, (arg2[5]));
  let mut x461: u32 = 0;
  let mut x462: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x461, &mut x462, x428, (arg2[4]));
  let mut x463: u32 = 0;
  let mut x464: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x463, &mut x464, x428, (arg2[3]));
  let mut x465: u32 = 0;
  let mut x466: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x465, &mut x466, x428, (arg2[2]));
  let mut x467: u32 = 0;
  let mut x468: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x467, &mut x468, x428, (arg2[1]));
  let mut x469: u32 = 0;
  let mut x470: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x469, &mut x470, x428, (arg2[0]));
  let mut x471: u32 = 0;
  let mut x472: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x471, &mut x472, arg6, x427);
  let mut x473: u32 = 0;
  let mut x474: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x473, &mut x474, arg6, (arg2[5]));
  let mut x475: u32 = 0;
  let mut x476: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x475, &mut x476, arg6, (arg2[4]));
  let mut x477: u32 = 0;
  let mut x478: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x477, &mut x478, arg6, (arg2[3]));
  let mut x479: u32 = 0;
  let mut x480: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x479, &mut x480, arg6, (arg2[2]));
  let mut x481: u32 = 0;
  let mut x482: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x481, &mut x482, arg6, (arg2[1]));
  let mut x483: u32 = 0;
  let mut x484: u32 = 0;
  fiat_poly1305_mulx_u32(&mut x483, &mut x484, arg6, (arg2[0]));
  let mut x485: u32 = 0;
  let mut x486: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x485, &mut x486, 0x0, x474, x429);
  let mut x487: u32 = 0;
  let mut x488: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x487, &mut x488, 0x0, x485, x431);
  let mut x489: u32 = 0;
  let mut x490: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x489, &mut x490, 0x0, x476, x433);
  let mut x491: u32 = 0;
  let mut x492: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x491, &mut x492, x490, x487, x434);
  let mut x493: u32 = 0;
  let mut x494: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x493, &mut x494, 0x0, x489, x437);
  let mut x495: u32 = 0;
  let mut x496: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x495, &mut x496, x494, x491, x435);
  let mut x497: u32 = 0;
  let mut x498: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x497, &mut x498, 0x0, x478, x439);
  let mut x499: u32 = 0;
  let mut x500: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x499, &mut x500, x498, x493, x440);
  let mut x501: u32 = 0;
  let mut x502: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x501, &mut x502, x500, x495, x438);
  let mut x503: u32 = 0;
  let mut x504: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x503, &mut x504, 0x0, x497, x445);
  let mut x505: u32 = 0;
  let mut x506: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x505, &mut x506, x504, x499, x443);
  let mut x507: u32 = 0;
  let mut x508: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x507, &mut x508, x506, x501, x441);
  let mut x509: u32 = 0;
  let mut x510: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x509, &mut x510, 0x0, x480, x447);
  let mut x511: u32 = 0;
  let mut x512: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x511, &mut x512, x510, x503, x448);
  let mut x513: u32 = 0;
  let mut x514: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x513, &mut x514, x512, x505, x446);
  let mut x515: u32 = 0;
  let mut x516: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x515, &mut x516, x514, x507, x444);
  let mut x517: u32 = 0;
  let mut x518: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x517, &mut x518, 0x0, x509, x455);
  let mut x519: u32 = 0;
  let mut x520: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x519, &mut x520, x518, x511, x453);
  let mut x521: u32 = 0;
  let mut x522: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x521, &mut x522, x520, x513, x451);
  let mut x523: u32 = 0;
  let mut x524: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x523, &mut x524, x522, x515, x449);
  let mut x525: u32 = 0;
  let mut x526: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x525, &mut x526, 0x0, x482, x457);
  let mut x527: u32 = 0;
  let mut x528: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x527, &mut x528, x526, x517, x458);
  let mut x529: u32 = 0;
  let mut x530: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x529, &mut x530, x528, x519, x456);
  let mut x531: u32 = 0;
  let mut x532: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x531, &mut x532, x530, x521, x454);
  let mut x533: u32 = 0;
  let mut x534: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x533, &mut x534, x532, x523, x452);
  let mut x535: u32 = 0;
  let mut x536: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x535, &mut x536, 0x0, x525, x467);
  let mut x537: u32 = 0;
  let mut x538: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x537, &mut x538, x536, x527, x465);
  let mut x539: u32 = 0;
  let mut x540: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x539, &mut x540, x538, x529, x463);
  let mut x541: u32 = 0;
  let mut x542: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x541, &mut x542, x540, x531, x461);
  let mut x543: u32 = 0;
  let mut x544: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x543, &mut x544, x542, x533, x459);
  let mut x545: u32 = 0;
  let mut x546: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x545, &mut x546, 0x0, x484, x469);
  let mut x547: u32 = 0;
  let mut x548: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x547, &mut x548, x546, x535, x470);
  let mut x549: u32 = 0;
  let mut x550: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x549, &mut x550, x548, x537, x468);
  let mut x551: u32 = 0;
  let mut x552: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x551, &mut x552, x550, x539, x466);
  let mut x553: u32 = 0;
  let mut x554: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x553, &mut x554, x552, x541, x464);
  let mut x555: u32 = 0;
  let mut x556: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x555, &mut x556, x554, x543, x462);
  let mut x557: u32 = 0;
  let mut x558: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x557, &mut x558, 0x0, x545, x481);
  let mut x559: u32 = 0;
  let mut x560: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x559, &mut x560, x558, x547, x479);
  let mut x561: u32 = 0;
  let mut x562: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x561, &mut x562, x560, x549, x477);
  let mut x563: u32 = 0;
  let mut x564: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x563, &mut x564, x562, x551, x475);
  let mut x565: u32 = 0;
  let mut x566: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x565, &mut x566, x564, x553, x473);
  let mut x567: u32 = 0;
  let mut x568: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x567, &mut x568, x566, x555, x471);
  let mut x569: u32 = 0;
  let mut x570: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x569, &mut x570, 0x0, x57, x199);
  let mut x571: u32 = 0;
  let mut x572: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x571, &mut x572, x570, x131, x273);
  let mut x573: u32 = 0;
  let mut x574: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x573, &mut x574, x572, x133, x275);
  let mut x575: u32 = 0;
  let mut x576: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x575, &mut x576, x574, x135, x277);
  let mut x577: u32 = 0;
  let mut x578: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x577, &mut x578, x576, x137, x279);
  let mut x579: u32 = 0;
  let mut x580: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x579, &mut x580, x578, x139, x281);
  let mut x581: u32 = 0;
  let mut x582: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x581, &mut x582, x580, x141, x283);
  let mut x583: u32 = 0;
  let mut x584: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x583, &mut x584, 0x0, x341, x483);
  let mut x585: u32 = 0;
  let mut x586: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x585, &mut x586, x584, x415, x557);
  let mut x587: u32 = 0;
  let mut x588: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x587, &mut x588, x586, x417, x559);
  let mut x589: u32 = 0;
  let mut x590: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x589, &mut x590, x588, x419, x561);
  let mut x591: u32 = 0;
  let mut x592: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x591, &mut x592, x590, x421, x563);
  let mut x593: u32 = 0;
  let mut x594: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x593, &mut x594, x592, x423, x565);
  let mut x595: u32 = 0;
  let mut x596: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x595, &mut x596, x594, x425, x567);
  let x597: u32 = ((x569 >> 30) | ((x571 << 2) & 0xffffffff));
  let x598: u32 = ((x571 >> 30) | ((x573 << 2) & 0xffffffff));
  let x599: u32 = ((x573 >> 30) | ((x575 << 2) & 0xffffffff));
  let x600: u32 = ((x575 >> 30) | ((x577 << 2) & 0xffffffff));
  let x601: u32 = ((x577 >> 30) | ((x579 << 2) & 0xffffffff));
  let x602: u32 = ((x579 >> 30) | ((x581 << 2) & 0xffffffff));
  let x603: u32 = ((x583 >> 30) | ((x585 << 2) & 0xffffffff));
  let x604: u32 = ((x585 >> 30) | ((x587 << 2) & 0xffffffff));
  let x605: u32 = ((x587 >> 30) | ((x589 << 2) & 0xffffffff));
  let x606: u32 = ((x589 >> 30) | ((x591 << 2) & 0xffffffff));
  let x607: u32 = ((x591 >> 30) | ((x593 << 2) & 0xffffffff));
  let x608: u32 = ((x593 >> 30) | ((x595 << 2) & 0xffffffff));
  out1[0] = x597;
  out1[1] = x598;
  out1[2] = x599;
  out1[3] = x600;
  out1[4] = x601;
  out1[5] = x602;
  out2[0] = x603;
  out2[1] = x604;
  out2[2] = x605;
  out2[3] = x606;
  out2[4] = x607;
  out2[5] = x608;
}

/// The function fiat_poly1305_update_vr computes a update_vr.
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg3: [0x0 ~> 0xffffffff]
///   arg4: [0x0 ~> 0xffffffff]
///   arg5: [0x0 ~> 0xffffffff]
///   arg6: [0x0 ~> 0xffffffff]
#[inline]
pub fn fiat_poly1305_update_vr(out1: &mut fiat_poly1305_tight_field_element, out2: &mut fiat_poly1305_tight_field_element, arg1: &fiat_poly1305_tight_field_element, arg2: &fiat_poly1305_tight_field_element, arg3: u32, arg4: u32, arg5: u32, arg6: u32) -> () {
  let x1: fiat_poly1305_u1 = ((arg3 >> 31) as fiat_poly1305_u1);
  let mut x2: u32 = 0;
  let mut x3: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x2, &mut x3, 0x0, (!arg3), (0x1 as u32));
  let x4: u32 = (arg3 >> 26);
  let x5: u32 = (arg3 & 0x3ffffff);
  let x6: u32 = (x2 >> 26);
  let x7: u32 = (x2 & 0x3ffffff);
  let x8: u32 = (0x7fffff6 - x7);
  let x9: u32 = (0x7fffffe - x6);
  let x10: fiat_poly1305_u1 = ((x8 >> 26) as fiat_poly1305_u1);
  let x11: u32 = (x8 & 0x3ffffff);
  let x12: u32 = ((x10 as u32) + x9);
  let x13: u32 = (x12 & 0x3ffffff);
  let x14: u32 = (x11 + 0x5);
  let x15: fiat_poly1305_u1 = ((x14 >> 26) as fiat_poly1305_u1);
  let x16: u32 = (x14 & 0x3ffffff);
  let x17: u32 = ((x15 as u32) + x13);
  let x18: fiat_poly1305_u1 = ((x17 >> 26) as fiat_poly1305_u1);
  let x19: u32 = (x17 & 0x3ffffff);
  let x20: u32 = ((x18 as u32) + 0x3ffffff);
  let mut x21: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x21, x1, x5, x16);
  let mut x22: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x22, x1, x4, x19);
  let mut x23: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x23, x1, (0x0 as u32), x20);
  let mut x24: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x24, x1, (0x0 as u32), 0x3ffffff);
  let mut x25: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x25, x1, (0x0 as u32), 0x3ffffff);
  let x26: fiat_poly1305_u1 = ((arg4 >> 31) as fiat_poly1305_u1);
  let mut x27: u32 = 0;
  let mut x28: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x27, &mut x28, 0x0, (!arg4), (0x1 as u32));
  let x29: u32 = (arg4 >> 26);
  let x30: u32 = (arg4 & 0x3ffffff);
  let x31: u32 = (x27 >> 26);
  let x32: u32 = (x27 & 0x3ffffff);
  let x33: u32 = (0x7fffff6 - x32);
  let x34: u32 = (0x7fffffe - x31);
  let x35: fiat_poly1305_u1 = ((x33 >> 26) as fiat_poly1305_u1);
  let x36: u32 = (x33 & 0x3ffffff);
  let x37: u32 = ((x35 as u32) + x34);
  let x38: u32 = (x37 & 0x3ffffff);
  let x39: u32 = (x36 + 0x5);
  let x40: fiat_poly1305_u1 = ((x39 >> 26) as fiat_poly1305_u1);
  let x41: u32 = (x39 & 0x3ffffff);
  let x42: u32 = ((x40 as u32) + x38);
  let x43: fiat_poly1305_u1 = ((x42 >> 26) as fiat_poly1305_u1);
  let x44: u32 = (x42 & 0x3ffffff);
  let x45: u32 = ((x43 as u32) + 0x3ffffff);
  let mut x46: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x46, x26, x30, x41);
  let mut x47: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x47, x26, x29, x44);
  let mut x48: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x48, x26, (0x0 as u32), x45);
  let mut x49: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x49, x26, (0x0 as u32), 0x3ffffff);
  let mut x50: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x50, x26, (0x0 as u32), 0x3ffffff);
  let x51: fiat_poly1305_u1 = ((arg5 >> 31) as fiat_poly1305_u1);
  let mut x52: u32 = 0;
  let mut x53: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x52, &mut x53, 0x0, (!arg5), (0x1 as u32));
  let x54: u32 = (arg5 >> 26);
  let x55: u32 = (arg5 & 0x3ffffff);
  let x56: u32 = (x52 >> 26);
  let x57: u32 = (x52 & 0x3ffffff);
  let x58: u32 = (0x7fffff6 - x57);
  let x59: u32 = (0x7fffffe - x56);
  let x60: fiat_poly1305_u1 = ((x58 >> 26) as fiat_poly1305_u1);
  let x61: u32 = (x58 & 0x3ffffff);
  let x62: u32 = ((x60 as u32) + x59);
  let x63: u32 = (x62 & 0x3ffffff);
  let x64: u32 = (x61 + 0x5);
  let x65: fiat_poly1305_u1 = ((x64 >> 26) as fiat_poly1305_u1);
  let x66: u32 = (x64 & 0x3ffffff);
  let x67: u32 = ((x65 as u32) + x63);
  let x68: fiat_poly1305_u1 = ((x67 >> 26) as fiat_poly1305_u1);
  let x69: u32 = (x67 & 0x3ffffff);
  let x70: u32 = ((x68 as u32) + 0x3ffffff);
  let mut x71: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x71, x51, x55, x66);
  let mut x72: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x72, x51, x54, x69);
  let mut x73: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x73, x51, (0x0 as u32), x70);
  let mut x74: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x74, x51, (0x0 as u32), 0x3ffffff);
  let mut x75: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x75, x51, (0x0 as u32), 0x3ffffff);
  let x76: fiat_poly1305_u1 = ((arg6 >> 31) as fiat_poly1305_u1);
  let mut x77: u32 = 0;
  let mut x78: fiat_poly1305_u1 = 0;
  fiat_poly1305_addcarryx_u32(&mut x77, &mut x78, 0x0, (!arg6), (0x1 as u32));
  let x79: u32 = (arg6 >> 26);
  let x80: u32 = (arg6 & 0x3ffffff);
  let x81: u32 = (x77 >> 26);
  let x82: u32 = (x77 & 0x3ffffff);
  let x83: u32 = (0x7fffff6 - x82);
  let x84: u32 = (0x7fffffe - x81);
  let x85: fiat_poly1305_u1 = ((x83 >> 26) as fiat_poly1305_u1);
  let x86: u32 = (x83 & 0x3ffffff);
  let x87: u32 = ((x85 as u32) + x84);
  let x88: u32 = (x87 & 0x3ffffff);
  let x89: u32 = (x86 + 0x5);
  let x90: fiat_poly1305_u1 = ((x89 >> 26) as fiat_poly1305_u1);
  let x91: u32 = (x89 & 0x3ffffff);
  let x92: u32 = ((x90 as u32) + x88);
  let x93: fiat_poly1305_u1 = ((x92 >> 26) as fiat_poly1305_u1);
  let x94: u32 = (x92 & 0x3ffffff);
  let x95: u32 = ((x93 as u32) + 0x3ffffff);
  let mut x96: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x96, x76, x80, x91);
  let mut x97: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x97, x76, x79, x94);
  let mut x98: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x98, x76, (0x0 as u32), x95);
  let mut x99: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x99, x76, (0x0 as u32), 0x3ffffff);
  let mut x100: u32 = 0;
  fiat_poly1305_cmovznz_u32(&mut x100, x76, (0x0 as u32), 0x3ffffff);
  let x101: u64 = ((x25 as u64) * (((arg1[4]) * 0x5) as u64));
  let x102: u64 = ((x25 as u64) * (((arg1[3]) * 0x5) as u64));
  let x103: u64 = ((x25 as u64) * (((arg1[2]) * 0x5) as u64));
  let x104: u64 = ((x25 as u64) * (((arg1[1]) * 0x5) as u64));
  let x105: u64 = ((x24 as u64) * (((arg1[4]) * 0x5) as u64));
  let x106: u64 = ((x24 as u64) * (((arg1[3]) * 0x5) as u64));
  let x107: u64 = ((x24 as u64) * (((arg1[2]) * 0x5) as u64));
  let x108: u64 = ((x23 as u64) * (((arg1[4]) * 0x5) as u64));
  let x109: u64 = ((x23 as u64) * (((arg1[3]) * 0x5) as u64));
  let x110: u64 = ((x22 as u64) * (((arg1[4]) * 0x5) as u64));
  let x111: u64 = ((x25 as u64) * ((arg1[0]) as u64));
  let x112: u64 = ((x24 as u64) * ((arg1[1]) as u64));
  let x113: u64 = ((x24 as u64) * ((arg1[0]) as u64));
  let x114: u64 = ((x23 as u64) * ((arg1[2]) as u64));
  let x115: u64 = ((x23 as u64) * ((arg1[1]) as u64));
  let x116: u64 = ((x23 as u64) * ((arg1[0]) as u64));
  let x117: u64 = ((x22 as u64) * ((arg1[3]) as u64));
  let x118: u64 = ((x22 as u64) * ((arg1[2]) as u64));
  let x119: u64 = ((x22 as u64) * ((arg1[1]) as u64));
  let x120: u64 = ((x22 as u64) * ((arg1[0]) as u64));
  let x121: u64 = ((x21 as u64) * ((arg1[4]) as u64));
  let x122: u64 = ((x21 as u64) * ((arg1[3]) as u64));
  let x123: u64 = ((x21 as u64) * ((arg1[2]) as u64));
  let x124: u64 = ((x21 as u64) * ((arg1[1]) as u64));
  let x125: u64 = ((x21 as u64) * ((arg1[0]) as u64));
  let x126: u64 = (x125 + (x110 + (x109 + (x107 + x104))));
  let x127: u32 = ((x126 >> 26) as u32);
  let x128: u32 = ((x126 & (0x3ffffff as u64)) as u32);
  let x129: u64 = (x121 + (x117 + (x114 + (x112 + x111))));
  let x130: u64 = (x122 + (x118 + (x115 + (x113 + x101))));
  let x131: u64 = (x123 + (x119 + (x116 + (x105 + x102))));
  let x132: u64 = (x124 + (x120 + (x108 + (x106 + x103))));
  let x133: u64 = ((x127 as u64) + x132);
  let x134: u32 = ((x133 >> 26) as u32);
  let x135: u32 = ((x133 & (0x3ffffff as u64)) as u32);
  let x136: u64 = ((x134 as u64) + x131);
  let x137: u32 = ((x136 >> 26) as u32);
  let x138: u32 = ((x136 & (0x3ffffff as u64)) as u32);
  let x139: u64 = ((x137 as u64) + x130);
  let x140: u32 = ((x139 >> 26) as u32);
  let x141: u32 = ((x139 & (0x3ffffff as u64)) as u32);
  let x142: u64 = ((x140 as u64) + x129);
  let x143: u32 = ((x142 >> 26) as u32);
  let x144: u32 = ((x142 & (0x3ffffff as u64)) as u32);
  let x145: u32 = (x143 * 0x5);
  let x146: u32 = (x128 + x145);
  let x147: u32 = (x146 >> 26);
  let x148: u32 = (x146 & 0x3ffffff);
  let x149: u32 = (x147 + x135);
  let x150: fiat_poly1305_u1 = ((x149 >> 26) as fiat_poly1305_u1);
  let x151: u32 = (x149 & 0x3ffffff);
  let x152: u32 = ((x150 as u32) + x138);
  let x153: u64 = ((x50 as u64) * (((arg2[4]) * 0x5) as u64));
  let x154: u64 = ((x50 as u64) * (((arg2[3]) * 0x5) as u64));
  let x155: u64 = ((x50 as u64) * (((arg2[2]) * 0x5) as u64));
  let x156: u64 = ((x50 as u64) * (((arg2[1]) * 0x5) as u64));
  let x157: u64 = ((x49 as u64) * (((arg2[4]) * 0x5) as u64));
  let x158: u64 = ((x49 as u64) * (((arg2[3]) * 0x5) as u64));
  let x159: u64 = ((x49 as u64) * (((arg2[2]) * 0x5) as u64));
  let x160: u64 = ((x48 as u64) * (((arg2[4]) * 0x5) as u64));
  let x161: u64 = ((x48 as u64) * (((arg2[3]) * 0x5) as u64));
  let x162: u64 = ((x47 as u64) * (((arg2[4]) * 0x5) as u64));
  let x163: u64 = ((x50 as u64) * ((arg2[0]) as u64));
  let x164: u64 = ((x49 as u64) * ((arg2[1]) as u64));
  let x165: u64 = ((x49 as u64) * ((arg2[0]) as u64));
  let x166: u64 = ((x48 as u64) * ((arg2[2]) as u64));
  let x167: u64 = ((x48 as u64) * ((arg2[1]) as u64));
  let x168: u64 = ((x48 as u64) * ((arg2[0]) as u64));
  let x169: u64 = ((x47 as u64) * ((arg2[3]) as u64));
  let x170: u64 = ((x47 as u64) * ((arg2[2]) as u64));
  let x171: u64 = ((x47 as u64) * ((arg2[1]) as u64));
  let x172: u64 = ((x47 as u64) * ((arg2[0]) as u64));
  let x173: u64 = ((x46 as u64) * ((arg2[4]) as u64));
  let x174: u64 = ((x46 as u64) * ((arg2[3]) as u64));
  let x175: u64 = ((x46 as u64) * ((arg2[2]) as u64));
  let x176: u64 = ((x46 as u64) * ((arg2[1]) as u64));
  let x177: u64 = ((x46 as u64) * ((arg2[0]) as u64));
  let x178: u64 = (x177 + (x162 + (x161 + (x159 + x156))));
  let x179: u32 = ((x178 >> 26) as u32);
  let x180: u32 = ((x178 & (0x3ffffff as u64)) as u32);
  let x181: u64 = (x173 + (x169 + (x166 + (x164 + x163))));
  let x182: u64 = (x174 + (x170 + (x167 + (x165 + x153))));
  let x183: u64 = (x175 + (x171 + (x168 + (x157 + x154))));
  let x184: u64 = (x176 + (x172 + (x160 + (x158 + x155))));
  let x185: u64 = ((x179 as u64) + x184);
  let x186: u32 = ((x185 >> 26) as u32);
  let x187: u32 = ((x185 & (0x3ffffff as u64)) as u32);
  let x188: u64 = ((x186 as u64) + x183);
  let x189: u32 = ((x188 >> 26) as u32);
  let x190: u32 = ((x188 & (0x3ffffff as u64)) as u32);
  let x191: u64 = ((x189 as u64) + x182);
  let x192: u32 = ((x191 >> 26) as u32);
  let x193: u32 = ((x191 & (0x3ffffff as u64)) as u32);
  let x194: u64 = ((x192 as u64) + x181);
  let x195: u32 = ((x194 >> 26) as u32);
  let x196: u32 = ((x194 & (0x3ffffff as u64)) as u32);
  let x197: u32 = (x195 * 0x5);
  let x198: u32 = (x180 + x197);
  let x199: u32 = (x198 >> 26);
  let x200: u32 = (x198 & 0x3ffffff);
  let x201: u32 = (x199 + x187);
  let x202: fiat_poly1305_u1 = ((x201 >> 26) as fiat_poly1305_u1);
  let x203: u32 = (x201 & 0x3ffffff);
  let x204: u32 = ((x202 as u32) + x190);
  let x205: u64 = ((x75 as u64) * (((arg1[4]) * 0x5) as u64));
  let x206: u64 = ((x75 as u64) * (((arg1[3]) * 0x5) as u64));
  let x207: u64 = ((x75 as u64) * (((arg1[2]) * 0x5) as u64));
  let x208: u64 = ((x75 as u64) * (((arg1[1]) * 0x5) as u64));
  let x209: u64 = ((x74 as u64) * (((arg1[4]) * 0x5) as u64));
  let x210: u64 = ((x74 as u64) * (((arg1[3]) * 0x5) as u64));
  let x211: u64 = ((x74 as u64) * (((arg1[2]) * 0x5) as u64));
  let x212: u64 = ((x73 as u64) * (((arg1[4]) * 0x5) as u64));
  let x213: u64 = ((x73 as u64) * (((arg1[3]) * 0x5) as u64));
  let x214: u64 = ((x72 as u64) * (((arg1[4]) * 0x5) as u64));
  let x215: u64 = ((x75 as u64) * ((arg1[0]) as u64));
  let x216: u64 = ((x74 as u64) * ((arg1[1]) as u64));
  let x217: u64 = ((x74 as u64) * ((arg1[0]) as u64));
  let x218: u64 = ((x73 as u64) * ((arg1[2]) as u64));
  let x219: u64 = ((x73 as u64) * ((arg1[1]) as u64));
  let x220: u64 = ((x73 as u64) * ((arg1[0]) as u64));
  let x221: u64 = ((x72 as u64) * ((arg1[3]) as u64));
  let x222: u64 = ((x72 as u64) * ((arg1[2]) as u64));
  let x223: u64 = ((x72 as u64) * ((arg1[1]) as u64));
  let x224: u64 = ((x72 as u64) * ((arg1[0]) as u64));
  let x225: u64 = ((x71 as u64) * ((arg1[4]) as u64));
  let x226: u64 = ((x71 as u64) * ((arg1[3]) as u64));
  let x227: u64 = ((x71 as u64) * ((arg1[2]) as u64));
  let x228: u64 = ((x71 as u64) * ((arg1[1]) as u64));
  let x229: u64 = ((x71 as u64) * ((arg1[0]) as u64));
  let x230: u64 = (x229 + (x214 + (x213 + (x211 + x208))));
  let x231: u32 = ((x230 >> 26) as u32);
  let x232: u32 = ((x230 & (0x3ffffff as u64)) as u32);
  let x233: u64 = (x225 + (x221 + (x218 + (x216 + x215))));
  let x234: u64 = (x226 + (x222 + (x219 + (x217 + x205))));
  let x235: u64 = (x227 + (x223 + (x220 + (x209 + x206))));
  let x236: u64 = (x228 + (x224 + (x212 + (x210 + x207))));
  let x237: u64 = ((x231 as u64) + x236);
  let x238: u32 = ((x237 >> 26) as u32);
  let x239: u32 = ((x237 & (0x3ffffff as u64)) as u32);
  let x240: u64 = ((x238 as u64) + x235);
  let x241: u32 = ((x240 >> 26) as u32);
  let x242: u32 = ((x240 & (0x3ffffff as u64)) as u32);
  let x243: u64 = ((x241 as u64) + x234);
  let x244: u32 = ((x243 >> 26) as u32);
  let x245: u32 = ((x243 & (0x3ffffff as u64)) as u32);
  let x246: u64 = ((x244 as u64) + x233);
  let x247: u32 = ((x246 >> 26) as u32);
  let x248: u32 = ((x246 & (0x3ffffff as u64)) as u32);
  let x249: u32 = (x247 * 0x5);
  let x250: u32 = (x232 + x249);
  let x251: u32 = (x250 >> 26);
  let x252: u32 = (x250 & 0x3ffffff);
  let x253: u32 = (x251 + x239);
  let x254: fiat_poly1305_u1 = ((x253 >> 26) as fiat_poly1305_u1);
  let x255: u32 = (x253 & 0x3ffffff);
  let x256: u32 = ((x254 as u32) + x242);
  let x257: u64 = ((x100 as u64) * (((arg2[4]) * 0x5) as u64));
  let x258: u64 = ((x100 as u64) * (((arg2[3]) * 0x5) as u64));
  let x259: u64 = ((x100 as u64) * (((arg2[2]) * 0x5) as u64));
  let x260: u64 = ((x100 as u64) * (((arg2[1]) * 0x5) as u64));
  let x261: u64 = ((x99 as u64) * (((arg2[4]) * 0x5) as u64));
  let x262: u64 = ((x99 as u64) * (((arg2[3]) * 0x5) as u64));
  let x263: u64 = ((x99 as u64) * (((arg2[2]) * 0x5) as u64));
  let x264: u64 = ((x98 as u64) * (((arg2[4]) * 0x5) as u64));
  let x265: u64 = ((x98 as u64) * (((arg2[3]) * 0x5) as u64));
  let x266: u64 = ((x97 as u64) * (((arg2[4]) * 0x5) as u64));
  let x267: u64 = ((x100 as u64) * ((arg2[0]) as u64));
  let x268: u64 = ((x99 as u64) * ((arg2[1]) as u64));
  let x269: u64 = ((x99 as u64) * ((arg2[0]) as u64));
  let x270: u64 = ((x98 as u64) * ((arg2[2]) as u64));
  let x271: u64 = ((x98 as u64) * ((arg2[1]) as u64));
  let x272: u64 = ((x98 as u64) * ((arg2[0]) as u64));
  let x273: u64 = ((x97 as u64) * ((arg2[3]) as u64));
  let x274: u64 = ((x97 as u64) * ((arg2[2]) as u64));
  let x275: u64 = ((x97 as u64) * ((arg2[1]) as u64));
  let x276: u64 = ((x97 as u64) * ((arg2[0]) as u64));
  let x277: u64 = ((x96 as u64) * ((arg2[4]) as u64));
  let x278: u64 = ((x96 as u64) * ((arg2[3]) as u64));
  let x279: u64 = ((x96 as u64) * ((arg2[2]) as u64));
  let x280: u64 = ((x96 as u64) * ((arg2[1]) as u64));
  let x281: u64 = ((x96 as u64) * ((arg2[0]) as u64));
  let x282: u64 = (x281 + (x266 + (x265 + (x263 + x260))));
  let x283: u32 = ((x282 >> 26) as u32);
  let x284: u32 = ((x282 & (0x3ffffff as u64)) as u32);
  let x285: u64 = (x277 + (x273 + (x270 + (x268 + x267))));
  let x286: u64 = (x278 + (x274 + (x271 + (x269 + x257))));
  let x287: u64 = (x279 + (x275 + (x272 + (x261 + x258))));
  let x288: u64 = (x280 + (x276 + (x264 + (x262 + x259))));
  let x289: u64 = ((x283 as u64) + x288);
  let x290: u32 = ((x289 >> 26) as u32);
  let x291: u32 = ((x289 & (0x3ffffff as u64)) as u32);
  let x292: u64 = ((x290 as u64) + x287);
  let x293: u32 = ((x292 >> 26) as u32);
  let x294: u32 = ((x292 & (0x3ffffff as u64)) as u32);
  let x295: u64 = ((x293 as u64) + x286);
  let x296: u32 = ((x295 >> 26) as u32);
  let x297: u32 = ((x295 & (0x3ffffff as u64)) as u32);
  let x298: u64 = ((x296 as u64) + x285);
  let x299: u32 = ((x298 >> 26) as u32);
  let x300: u32 = ((x298 & (0x3ffffff as u64)) as u32);
  let x301: u32 = (x299 * 0x5);
  let x302: u32 = (x284 + x301);
  let x303: u32 = (x302 >> 26);
  let x304: u32 = (x302 & 0x3ffffff);
  let x305: u32 = (x303 + x291);
  let x306: fiat_poly1305_u1 = ((x305 >> 26) as fiat_poly1305_u1);
  let x307: u32 = (x305 & 0x3ffffff);
  let x308: u32 = ((x306 as u32) + x294);
  let x309: u32 = (x148 + x200);
  let x310: u32 = (x151 + x203);
  let x311: u32 = (x152 + x204);
  let x312: u32 = (x141 + x193);
  let x313: u32 = (x144 + x196);
  let x314: fiat_poly1305_u1 = ((x309 >> 26) as fiat_poly1305_u1);
  let x315: u32 = (x309 & 0x3ffffff);
  let x316: u32 = ((x314 as u32) + x310);
  let x317: fiat_poly1305_u1 = ((x316 >> 26) as fiat_poly1305_u1);
  let x318: u32 = (x316 & 0x3ffffff);
  let x319: u32 = ((x317 as u32) + x311);
  let x320: u32 = (x319 >> 26);
  let x321: u32 = (x319 & 0x3ffffff);
  let x322: u32 = (x320 + x312);
  let x323: u32 = (x322 >> 26);
  let x324: u32 = (x322 & 0x3ffffff);
  let x325: u32 = (x323 + x313);
  let x326: u32 = (x325 >> 26);
  let x327: u32 = (x325 & 0x3ffffff);
  let x328: u32 = (x326 * 0x5);
  let x329: u32 = (x315 + x328);
  let x330: fiat_poly1305_u1 = ((x329 >> 26) as fiat_poly1305_u1);
  let x331: u32 = (x329 & 0x3ffffff);
  let x332: u32 = ((x330 as u32) + x318);
  let x333: fiat_poly1305_u1 = ((x332 >> 26) as fiat_poly1305_u1);
  let x334: u32 = (x332 & 0x3ffffff);
  let x335: u32 = ((x333 as u32) + x321);
  let x336: u32 = (x252 + x304);
  let x337: u32 = (x255 + x307);
  let x338: u32 = (x256 + x308);
  let x339: u32 = (x245 + x297);
  let x340: u32 = (x248 + x300);
  let x341: fiat_poly1305_u1 = ((x336 >> 26) as fiat_poly1305_u1);
  let x342: u32 = (x336 & 0x3ffffff);
  let x343: u32 = ((x341 as u32) + x337);
  let x344: fiat_poly1305_u1 = ((x343 >> 26) as fiat_poly1305_u1);
  let x345: u32 = (x343 & 0x3ffffff);
  let x346: u32 = ((x344 as u32) + x338);
  let x347: u32 = (x346 >> 26);
  let x348: u32 = (x346 & 0x3ffffff);
  let x349: u32 = (x347 + x339);
  let x350: u32 = (x349 >> 26);
  let x351: u32 = (x349 & 0x3ffffff);
  let x352: u32 = (x350 + x340);
  let x353: u32 = (x352 >> 26);
  let x354: u32 = (x352 & 0x3ffffff);
  let x355: u32 = (x353 * 0x5);
  let x356: u32 = (x342 + x355);
  let x357: fiat_poly1305_u1 = ((x356 >> 26) as fiat_poly1305_u1);
  let x358: u32 = (x356 & 0x3ffffff);
  let x359: u32 = ((x357 as u32) + x345);
  let x360: fiat_poly1305_u1 = ((x359 >> 26) as fiat_poly1305_u1);
  let x361: u32 = (x359 & 0x3ffffff);
  let x362: u32 = ((x360 as u32) + x348);
  out1[0] = x331;
  out1[1] = x334;
  out1[2] = x335;
  out1[3] = x324;
  out1[4] = x327;
  out2[0] = x358;
  out2[1] = x361;
  out2[2] = x362;
  out2[3] = x351;
  out2[4] = x354;
}

/// The function fiat_poly1305_jumpdivstep_precomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
#[inline]
pub fn fiat_poly1305_jumpdivstep_precomp(out1: &mut fiat_poly1305_tight_field_element) -> () {
  out1[0] = 0x126e975;
  out1[1] = 0x32b020c;
  out1[2] = 0x3b645a1;
  out1[3] = 0x2353f7c;
  out1[4] = 0x3126e97;
}

/// The function fiat_poly1305_jumpdivstep_precomp_hd returns the precomputed value for the (half-delta) jump-version of Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
#[inline]
pub fn fiat_poly1305_jumpdivstep_precomp_hd(out1: &mut fiat_poly1305_tight_field_element) -> () {
  out1[0] = 0x23d70a1;
  out1[1] = 0x28f5c2;
  out1[2] = 0x2e978d7;
  out1[3] = 0x3020c49;
  out1[4] = 0x245a1ca;
}
