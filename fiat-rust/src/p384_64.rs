//! Autogenerated: src/ExtractionOCaml/word_by_word_montgomery --lang Rust p384 64 '2^384 - 2^128 - 2^96 + 2^32 - 1' mul square add sub opp from_montgomery to_montgomery nonzero selectznz to_bytes from_bytes one twos_complement_word_to_montgomery_no_encode msat sat_from_bytes divstep divstep_precomp twos_complement_word_full_divstep asr_mw_sub2 sat_add word_sat_mul jumpdivstep_precomp outer_loop_body
//! curve description: p384
//! machine_wordsize = 64 (from "64")
//! requested operations: mul, square, add, sub, opp, from_montgomery, to_montgomery, nonzero, selectznz, to_bytes, from_bytes, one, twos_complement_word_to_montgomery_no_encode, msat, sat_from_bytes, divstep, divstep_precomp, twos_complement_word_full_divstep, asr_mw_sub2, sat_add, word_sat_mul, jumpdivstep_precomp, outer_loop_body
//! m = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff (from "2^384 - 2^128 - 2^96 + 2^32 - 1")
//!
//! NOTE: In addition to the bounds specified above each function, all
//!   functions synthesized for this Montgomery arithmetic require the
//!   input to be strictly less than the prime modulus (m), and also
//!   require the input to be in the unique saturated representation.
//!   All functions also ensure that these two properties are true of
//!   return values.
//!
//! Computed values:
//! eval z = z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140)
//! bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) + (z[32] << 256) + (z[33] << 0x108) + (z[34] << 0x110) + (z[35] << 0x118) + (z[36] << 0x120) + (z[37] << 0x128) + (z[38] << 0x130) + (z[39] << 0x138) + (z[40] << 0x140) + (z[41] << 0x148) + (z[42] << 0x150) + (z[43] << 0x158) + (z[44] << 0x160) + (z[45] << 0x168) + (z[46] << 0x170) + (z[47] << 0x178)

#![allow(unused_parens)]
#[allow(non_camel_case_types)]

pub type fiat_p384_u1 = u8;
pub type fiat_p384_i1 = i8;
pub type fiat_p384_u2 = u8;
pub type fiat_p384_i2 = i8;


/// The function fiat_p384_addcarryx_u64 is an addition with carry.
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^64
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_p384_addcarryx_u64(out1: &mut u64, out2: &mut fiat_p384_u1, arg1: fiat_p384_u1, arg2: u64, arg3: u64) -> () {
  let x1: u128 = (((arg1 as u128) + (arg2 as u128)) + (arg3 as u128));
  let x2: u64 = ((x1 & (0xffffffffffffffff as u128)) as u64);
  let x3: fiat_p384_u1 = ((x1 >> 64) as fiat_p384_u1);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_p384_subborrowx_u64 is a subtraction with borrow.
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^64
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub fn fiat_p384_subborrowx_u64(out1: &mut u64, out2: &mut fiat_p384_u1, arg1: fiat_p384_u1, arg2: u64, arg3: u64) -> () {
  let x1: i128 = (((arg2 as i128) - (arg1 as i128)) - (arg3 as i128));
  let x2: fiat_p384_i1 = ((x1 >> 64) as fiat_p384_i1);
  let x3: u64 = ((x1 & (0xffffffffffffffff as i128)) as u64);
  *out1 = x3;
  *out2 = (((0x0 as fiat_p384_i2) - (x2 as fiat_p384_i2)) as fiat_p384_u1);
}

/// The function fiat_p384_mulx_u64 is a multiplication, returning the full double-width result.
/// Postconditions:
///   out1 = (arg1 * arg2) mod 2^64
///   out2 = ⌊arg1 * arg2 / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_p384_mulx_u64(out1: &mut u64, out2: &mut u64, arg1: u64, arg2: u64) -> () {
  let x1: u128 = ((arg1 as u128) * (arg2 as u128));
  let x2: u64 = ((x1 & (0xffffffffffffffff as u128)) as u64);
  let x3: u64 = ((x1 >> 64) as u64);
  *out1 = x2;
  *out2 = x3;
}

/// The function fiat_p384_cmovznz_u1 is a single-word conditional move.
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1]
///   arg3: [0x0 ~> 0x1]
/// Output Bounds:
///   out1: [0x0 ~> 0x1]
#[inline]
pub fn fiat_p384_cmovznz_u1(out1: &mut fiat_p384_u1, arg1: fiat_p384_u1, arg2: fiat_p384_u1, arg3: fiat_p384_u1) -> () {
  let x1: fiat_p384_u1 = (!(!arg1));
  let x2: fiat_p384_u1 = ((((((0x0 as fiat_p384_i2) - (x1 as fiat_p384_i2)) as fiat_p384_i1) as fiat_p384_i2) & (0x1 as fiat_p384_i2)) as fiat_p384_u1);
  let x3: fiat_p384_u1 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_p384_cmovznz_u64 is a single-word conditional move.
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_p384_cmovznz_u64(out1: &mut u64, arg1: fiat_p384_u1, arg2: u64, arg3: u64) -> () {
  let x1: fiat_p384_u1 = (!(!arg1));
  let x2: u64 = ((((((0x0 as fiat_p384_i2) - (x1 as fiat_p384_i2)) as fiat_p384_i1) as i128) & (0xffffffffffffffff as i128)) as u64);
  let x3: u64 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/// The function fiat_p384_mul multiplies two field elements in the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
///   0 ≤ eval arg2 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_mul(out1: &mut [u64; 6], arg1: &[u64; 6], arg2: &[u64; 6]) -> () {
  let x1: u64 = (arg1[1]);
  let x2: u64 = (arg1[2]);
  let x3: u64 = (arg1[3]);
  let x4: u64 = (arg1[4]);
  let x5: u64 = (arg1[5]);
  let x6: u64 = (arg1[0]);
  let mut x7: u64 = 0;
  let mut x8: u64 = 0;
  fiat_p384_mulx_u64(&mut x7, &mut x8, x6, (arg2[5]));
  let mut x9: u64 = 0;
  let mut x10: u64 = 0;
  fiat_p384_mulx_u64(&mut x9, &mut x10, x6, (arg2[4]));
  let mut x11: u64 = 0;
  let mut x12: u64 = 0;
  fiat_p384_mulx_u64(&mut x11, &mut x12, x6, (arg2[3]));
  let mut x13: u64 = 0;
  let mut x14: u64 = 0;
  fiat_p384_mulx_u64(&mut x13, &mut x14, x6, (arg2[2]));
  let mut x15: u64 = 0;
  let mut x16: u64 = 0;
  fiat_p384_mulx_u64(&mut x15, &mut x16, x6, (arg2[1]));
  let mut x17: u64 = 0;
  let mut x18: u64 = 0;
  fiat_p384_mulx_u64(&mut x17, &mut x18, x6, (arg2[0]));
  let mut x19: u64 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x19, &mut x20, 0x0, x18, x15);
  let mut x21: u64 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x21, &mut x22, x20, x16, x13);
  let mut x23: u64 = 0;
  let mut x24: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x23, &mut x24, x22, x14, x11);
  let mut x25: u64 = 0;
  let mut x26: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x25, &mut x26, x24, x12, x9);
  let mut x27: u64 = 0;
  let mut x28: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x27, &mut x28, x26, x10, x7);
  let x29: u64 = ((x28 as u64) + x8);
  let mut x30: u64 = 0;
  let mut x31: u64 = 0;
  fiat_p384_mulx_u64(&mut x30, &mut x31, x17, 0x100000001);
  let mut x32: u64 = 0;
  let mut x33: u64 = 0;
  fiat_p384_mulx_u64(&mut x32, &mut x33, x30, 0xffffffffffffffff);
  let mut x34: u64 = 0;
  let mut x35: u64 = 0;
  fiat_p384_mulx_u64(&mut x34, &mut x35, x30, 0xffffffffffffffff);
  let mut x36: u64 = 0;
  let mut x37: u64 = 0;
  fiat_p384_mulx_u64(&mut x36, &mut x37, x30, 0xffffffffffffffff);
  let mut x38: u64 = 0;
  let mut x39: u64 = 0;
  fiat_p384_mulx_u64(&mut x38, &mut x39, x30, 0xfffffffffffffffe);
  let mut x40: u64 = 0;
  let mut x41: u64 = 0;
  fiat_p384_mulx_u64(&mut x40, &mut x41, x30, 0xffffffff00000000);
  let mut x42: u64 = 0;
  let mut x43: u64 = 0;
  fiat_p384_mulx_u64(&mut x42, &mut x43, x30, 0xffffffff);
  let mut x44: u64 = 0;
  let mut x45: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x44, &mut x45, 0x0, x43, x40);
  let mut x46: u64 = 0;
  let mut x47: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x46, &mut x47, x45, x41, x38);
  let mut x48: u64 = 0;
  let mut x49: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x48, &mut x49, x47, x39, x36);
  let mut x50: u64 = 0;
  let mut x51: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x50, &mut x51, x49, x37, x34);
  let mut x52: u64 = 0;
  let mut x53: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x52, &mut x53, x51, x35, x32);
  let x54: u64 = ((x53 as u64) + x33);
  let mut x55: u64 = 0;
  let mut x56: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x55, &mut x56, 0x0, x17, x42);
  let mut x57: u64 = 0;
  let mut x58: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x57, &mut x58, x56, x19, x44);
  let mut x59: u64 = 0;
  let mut x60: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x59, &mut x60, x58, x21, x46);
  let mut x61: u64 = 0;
  let mut x62: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x61, &mut x62, x60, x23, x48);
  let mut x63: u64 = 0;
  let mut x64: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x63, &mut x64, x62, x25, x50);
  let mut x65: u64 = 0;
  let mut x66: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x65, &mut x66, x64, x27, x52);
  let mut x67: u64 = 0;
  let mut x68: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x67, &mut x68, x66, x29, x54);
  let mut x69: u64 = 0;
  let mut x70: u64 = 0;
  fiat_p384_mulx_u64(&mut x69, &mut x70, x1, (arg2[5]));
  let mut x71: u64 = 0;
  let mut x72: u64 = 0;
  fiat_p384_mulx_u64(&mut x71, &mut x72, x1, (arg2[4]));
  let mut x73: u64 = 0;
  let mut x74: u64 = 0;
  fiat_p384_mulx_u64(&mut x73, &mut x74, x1, (arg2[3]));
  let mut x75: u64 = 0;
  let mut x76: u64 = 0;
  fiat_p384_mulx_u64(&mut x75, &mut x76, x1, (arg2[2]));
  let mut x77: u64 = 0;
  let mut x78: u64 = 0;
  fiat_p384_mulx_u64(&mut x77, &mut x78, x1, (arg2[1]));
  let mut x79: u64 = 0;
  let mut x80: u64 = 0;
  fiat_p384_mulx_u64(&mut x79, &mut x80, x1, (arg2[0]));
  let mut x81: u64 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x81, &mut x82, 0x0, x80, x77);
  let mut x83: u64 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x83, &mut x84, x82, x78, x75);
  let mut x85: u64 = 0;
  let mut x86: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x85, &mut x86, x84, x76, x73);
  let mut x87: u64 = 0;
  let mut x88: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x87, &mut x88, x86, x74, x71);
  let mut x89: u64 = 0;
  let mut x90: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x89, &mut x90, x88, x72, x69);
  let x91: u64 = ((x90 as u64) + x70);
  let mut x92: u64 = 0;
  let mut x93: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x92, &mut x93, 0x0, x57, x79);
  let mut x94: u64 = 0;
  let mut x95: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x94, &mut x95, x93, x59, x81);
  let mut x96: u64 = 0;
  let mut x97: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x96, &mut x97, x95, x61, x83);
  let mut x98: u64 = 0;
  let mut x99: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x98, &mut x99, x97, x63, x85);
  let mut x100: u64 = 0;
  let mut x101: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x100, &mut x101, x99, x65, x87);
  let mut x102: u64 = 0;
  let mut x103: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x102, &mut x103, x101, x67, x89);
  let mut x104: u64 = 0;
  let mut x105: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x104, &mut x105, x103, (x68 as u64), x91);
  let mut x106: u64 = 0;
  let mut x107: u64 = 0;
  fiat_p384_mulx_u64(&mut x106, &mut x107, x92, 0x100000001);
  let mut x108: u64 = 0;
  let mut x109: u64 = 0;
  fiat_p384_mulx_u64(&mut x108, &mut x109, x106, 0xffffffffffffffff);
  let mut x110: u64 = 0;
  let mut x111: u64 = 0;
  fiat_p384_mulx_u64(&mut x110, &mut x111, x106, 0xffffffffffffffff);
  let mut x112: u64 = 0;
  let mut x113: u64 = 0;
  fiat_p384_mulx_u64(&mut x112, &mut x113, x106, 0xffffffffffffffff);
  let mut x114: u64 = 0;
  let mut x115: u64 = 0;
  fiat_p384_mulx_u64(&mut x114, &mut x115, x106, 0xfffffffffffffffe);
  let mut x116: u64 = 0;
  let mut x117: u64 = 0;
  fiat_p384_mulx_u64(&mut x116, &mut x117, x106, 0xffffffff00000000);
  let mut x118: u64 = 0;
  let mut x119: u64 = 0;
  fiat_p384_mulx_u64(&mut x118, &mut x119, x106, 0xffffffff);
  let mut x120: u64 = 0;
  let mut x121: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x120, &mut x121, 0x0, x119, x116);
  let mut x122: u64 = 0;
  let mut x123: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x122, &mut x123, x121, x117, x114);
  let mut x124: u64 = 0;
  let mut x125: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x124, &mut x125, x123, x115, x112);
  let mut x126: u64 = 0;
  let mut x127: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x126, &mut x127, x125, x113, x110);
  let mut x128: u64 = 0;
  let mut x129: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x128, &mut x129, x127, x111, x108);
  let x130: u64 = ((x129 as u64) + x109);
  let mut x131: u64 = 0;
  let mut x132: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x131, &mut x132, 0x0, x92, x118);
  let mut x133: u64 = 0;
  let mut x134: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x133, &mut x134, x132, x94, x120);
  let mut x135: u64 = 0;
  let mut x136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x135, &mut x136, x134, x96, x122);
  let mut x137: u64 = 0;
  let mut x138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x137, &mut x138, x136, x98, x124);
  let mut x139: u64 = 0;
  let mut x140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x139, &mut x140, x138, x100, x126);
  let mut x141: u64 = 0;
  let mut x142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x141, &mut x142, x140, x102, x128);
  let mut x143: u64 = 0;
  let mut x144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x143, &mut x144, x142, x104, x130);
  let x145: u64 = ((x144 as u64) + (x105 as u64));
  let mut x146: u64 = 0;
  let mut x147: u64 = 0;
  fiat_p384_mulx_u64(&mut x146, &mut x147, x2, (arg2[5]));
  let mut x148: u64 = 0;
  let mut x149: u64 = 0;
  fiat_p384_mulx_u64(&mut x148, &mut x149, x2, (arg2[4]));
  let mut x150: u64 = 0;
  let mut x151: u64 = 0;
  fiat_p384_mulx_u64(&mut x150, &mut x151, x2, (arg2[3]));
  let mut x152: u64 = 0;
  let mut x153: u64 = 0;
  fiat_p384_mulx_u64(&mut x152, &mut x153, x2, (arg2[2]));
  let mut x154: u64 = 0;
  let mut x155: u64 = 0;
  fiat_p384_mulx_u64(&mut x154, &mut x155, x2, (arg2[1]));
  let mut x156: u64 = 0;
  let mut x157: u64 = 0;
  fiat_p384_mulx_u64(&mut x156, &mut x157, x2, (arg2[0]));
  let mut x158: u64 = 0;
  let mut x159: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x158, &mut x159, 0x0, x157, x154);
  let mut x160: u64 = 0;
  let mut x161: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x160, &mut x161, x159, x155, x152);
  let mut x162: u64 = 0;
  let mut x163: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x162, &mut x163, x161, x153, x150);
  let mut x164: u64 = 0;
  let mut x165: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x164, &mut x165, x163, x151, x148);
  let mut x166: u64 = 0;
  let mut x167: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x166, &mut x167, x165, x149, x146);
  let x168: u64 = ((x167 as u64) + x147);
  let mut x169: u64 = 0;
  let mut x170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x169, &mut x170, 0x0, x133, x156);
  let mut x171: u64 = 0;
  let mut x172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x171, &mut x172, x170, x135, x158);
  let mut x173: u64 = 0;
  let mut x174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x173, &mut x174, x172, x137, x160);
  let mut x175: u64 = 0;
  let mut x176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x175, &mut x176, x174, x139, x162);
  let mut x177: u64 = 0;
  let mut x178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x177, &mut x178, x176, x141, x164);
  let mut x179: u64 = 0;
  let mut x180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x179, &mut x180, x178, x143, x166);
  let mut x181: u64 = 0;
  let mut x182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x181, &mut x182, x180, x145, x168);
  let mut x183: u64 = 0;
  let mut x184: u64 = 0;
  fiat_p384_mulx_u64(&mut x183, &mut x184, x169, 0x100000001);
  let mut x185: u64 = 0;
  let mut x186: u64 = 0;
  fiat_p384_mulx_u64(&mut x185, &mut x186, x183, 0xffffffffffffffff);
  let mut x187: u64 = 0;
  let mut x188: u64 = 0;
  fiat_p384_mulx_u64(&mut x187, &mut x188, x183, 0xffffffffffffffff);
  let mut x189: u64 = 0;
  let mut x190: u64 = 0;
  fiat_p384_mulx_u64(&mut x189, &mut x190, x183, 0xffffffffffffffff);
  let mut x191: u64 = 0;
  let mut x192: u64 = 0;
  fiat_p384_mulx_u64(&mut x191, &mut x192, x183, 0xfffffffffffffffe);
  let mut x193: u64 = 0;
  let mut x194: u64 = 0;
  fiat_p384_mulx_u64(&mut x193, &mut x194, x183, 0xffffffff00000000);
  let mut x195: u64 = 0;
  let mut x196: u64 = 0;
  fiat_p384_mulx_u64(&mut x195, &mut x196, x183, 0xffffffff);
  let mut x197: u64 = 0;
  let mut x198: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x197, &mut x198, 0x0, x196, x193);
  let mut x199: u64 = 0;
  let mut x200: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x199, &mut x200, x198, x194, x191);
  let mut x201: u64 = 0;
  let mut x202: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x201, &mut x202, x200, x192, x189);
  let mut x203: u64 = 0;
  let mut x204: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x203, &mut x204, x202, x190, x187);
  let mut x205: u64 = 0;
  let mut x206: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x205, &mut x206, x204, x188, x185);
  let x207: u64 = ((x206 as u64) + x186);
  let mut x208: u64 = 0;
  let mut x209: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x208, &mut x209, 0x0, x169, x195);
  let mut x210: u64 = 0;
  let mut x211: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x210, &mut x211, x209, x171, x197);
  let mut x212: u64 = 0;
  let mut x213: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x212, &mut x213, x211, x173, x199);
  let mut x214: u64 = 0;
  let mut x215: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x214, &mut x215, x213, x175, x201);
  let mut x216: u64 = 0;
  let mut x217: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x216, &mut x217, x215, x177, x203);
  let mut x218: u64 = 0;
  let mut x219: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x218, &mut x219, x217, x179, x205);
  let mut x220: u64 = 0;
  let mut x221: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x220, &mut x221, x219, x181, x207);
  let x222: u64 = ((x221 as u64) + (x182 as u64));
  let mut x223: u64 = 0;
  let mut x224: u64 = 0;
  fiat_p384_mulx_u64(&mut x223, &mut x224, x3, (arg2[5]));
  let mut x225: u64 = 0;
  let mut x226: u64 = 0;
  fiat_p384_mulx_u64(&mut x225, &mut x226, x3, (arg2[4]));
  let mut x227: u64 = 0;
  let mut x228: u64 = 0;
  fiat_p384_mulx_u64(&mut x227, &mut x228, x3, (arg2[3]));
  let mut x229: u64 = 0;
  let mut x230: u64 = 0;
  fiat_p384_mulx_u64(&mut x229, &mut x230, x3, (arg2[2]));
  let mut x231: u64 = 0;
  let mut x232: u64 = 0;
  fiat_p384_mulx_u64(&mut x231, &mut x232, x3, (arg2[1]));
  let mut x233: u64 = 0;
  let mut x234: u64 = 0;
  fiat_p384_mulx_u64(&mut x233, &mut x234, x3, (arg2[0]));
  let mut x235: u64 = 0;
  let mut x236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x235, &mut x236, 0x0, x234, x231);
  let mut x237: u64 = 0;
  let mut x238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x237, &mut x238, x236, x232, x229);
  let mut x239: u64 = 0;
  let mut x240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x239, &mut x240, x238, x230, x227);
  let mut x241: u64 = 0;
  let mut x242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x241, &mut x242, x240, x228, x225);
  let mut x243: u64 = 0;
  let mut x244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x243, &mut x244, x242, x226, x223);
  let x245: u64 = ((x244 as u64) + x224);
  let mut x246: u64 = 0;
  let mut x247: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x246, &mut x247, 0x0, x210, x233);
  let mut x248: u64 = 0;
  let mut x249: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x248, &mut x249, x247, x212, x235);
  let mut x250: u64 = 0;
  let mut x251: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x250, &mut x251, x249, x214, x237);
  let mut x252: u64 = 0;
  let mut x253: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x252, &mut x253, x251, x216, x239);
  let mut x254: u64 = 0;
  let mut x255: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x254, &mut x255, x253, x218, x241);
  let mut x256: u64 = 0;
  let mut x257: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x256, &mut x257, x255, x220, x243);
  let mut x258: u64 = 0;
  let mut x259: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x258, &mut x259, x257, x222, x245);
  let mut x260: u64 = 0;
  let mut x261: u64 = 0;
  fiat_p384_mulx_u64(&mut x260, &mut x261, x246, 0x100000001);
  let mut x262: u64 = 0;
  let mut x263: u64 = 0;
  fiat_p384_mulx_u64(&mut x262, &mut x263, x260, 0xffffffffffffffff);
  let mut x264: u64 = 0;
  let mut x265: u64 = 0;
  fiat_p384_mulx_u64(&mut x264, &mut x265, x260, 0xffffffffffffffff);
  let mut x266: u64 = 0;
  let mut x267: u64 = 0;
  fiat_p384_mulx_u64(&mut x266, &mut x267, x260, 0xffffffffffffffff);
  let mut x268: u64 = 0;
  let mut x269: u64 = 0;
  fiat_p384_mulx_u64(&mut x268, &mut x269, x260, 0xfffffffffffffffe);
  let mut x270: u64 = 0;
  let mut x271: u64 = 0;
  fiat_p384_mulx_u64(&mut x270, &mut x271, x260, 0xffffffff00000000);
  let mut x272: u64 = 0;
  let mut x273: u64 = 0;
  fiat_p384_mulx_u64(&mut x272, &mut x273, x260, 0xffffffff);
  let mut x274: u64 = 0;
  let mut x275: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x274, &mut x275, 0x0, x273, x270);
  let mut x276: u64 = 0;
  let mut x277: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x276, &mut x277, x275, x271, x268);
  let mut x278: u64 = 0;
  let mut x279: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x278, &mut x279, x277, x269, x266);
  let mut x280: u64 = 0;
  let mut x281: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x280, &mut x281, x279, x267, x264);
  let mut x282: u64 = 0;
  let mut x283: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x282, &mut x283, x281, x265, x262);
  let x284: u64 = ((x283 as u64) + x263);
  let mut x285: u64 = 0;
  let mut x286: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x285, &mut x286, 0x0, x246, x272);
  let mut x287: u64 = 0;
  let mut x288: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x287, &mut x288, x286, x248, x274);
  let mut x289: u64 = 0;
  let mut x290: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x289, &mut x290, x288, x250, x276);
  let mut x291: u64 = 0;
  let mut x292: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x291, &mut x292, x290, x252, x278);
  let mut x293: u64 = 0;
  let mut x294: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x293, &mut x294, x292, x254, x280);
  let mut x295: u64 = 0;
  let mut x296: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x295, &mut x296, x294, x256, x282);
  let mut x297: u64 = 0;
  let mut x298: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x297, &mut x298, x296, x258, x284);
  let x299: u64 = ((x298 as u64) + (x259 as u64));
  let mut x300: u64 = 0;
  let mut x301: u64 = 0;
  fiat_p384_mulx_u64(&mut x300, &mut x301, x4, (arg2[5]));
  let mut x302: u64 = 0;
  let mut x303: u64 = 0;
  fiat_p384_mulx_u64(&mut x302, &mut x303, x4, (arg2[4]));
  let mut x304: u64 = 0;
  let mut x305: u64 = 0;
  fiat_p384_mulx_u64(&mut x304, &mut x305, x4, (arg2[3]));
  let mut x306: u64 = 0;
  let mut x307: u64 = 0;
  fiat_p384_mulx_u64(&mut x306, &mut x307, x4, (arg2[2]));
  let mut x308: u64 = 0;
  let mut x309: u64 = 0;
  fiat_p384_mulx_u64(&mut x308, &mut x309, x4, (arg2[1]));
  let mut x310: u64 = 0;
  let mut x311: u64 = 0;
  fiat_p384_mulx_u64(&mut x310, &mut x311, x4, (arg2[0]));
  let mut x312: u64 = 0;
  let mut x313: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x312, &mut x313, 0x0, x311, x308);
  let mut x314: u64 = 0;
  let mut x315: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x314, &mut x315, x313, x309, x306);
  let mut x316: u64 = 0;
  let mut x317: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x316, &mut x317, x315, x307, x304);
  let mut x318: u64 = 0;
  let mut x319: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x318, &mut x319, x317, x305, x302);
  let mut x320: u64 = 0;
  let mut x321: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x320, &mut x321, x319, x303, x300);
  let x322: u64 = ((x321 as u64) + x301);
  let mut x323: u64 = 0;
  let mut x324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x323, &mut x324, 0x0, x287, x310);
  let mut x325: u64 = 0;
  let mut x326: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x325, &mut x326, x324, x289, x312);
  let mut x327: u64 = 0;
  let mut x328: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x327, &mut x328, x326, x291, x314);
  let mut x329: u64 = 0;
  let mut x330: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x329, &mut x330, x328, x293, x316);
  let mut x331: u64 = 0;
  let mut x332: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x331, &mut x332, x330, x295, x318);
  let mut x333: u64 = 0;
  let mut x334: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x333, &mut x334, x332, x297, x320);
  let mut x335: u64 = 0;
  let mut x336: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x335, &mut x336, x334, x299, x322);
  let mut x337: u64 = 0;
  let mut x338: u64 = 0;
  fiat_p384_mulx_u64(&mut x337, &mut x338, x323, 0x100000001);
  let mut x339: u64 = 0;
  let mut x340: u64 = 0;
  fiat_p384_mulx_u64(&mut x339, &mut x340, x337, 0xffffffffffffffff);
  let mut x341: u64 = 0;
  let mut x342: u64 = 0;
  fiat_p384_mulx_u64(&mut x341, &mut x342, x337, 0xffffffffffffffff);
  let mut x343: u64 = 0;
  let mut x344: u64 = 0;
  fiat_p384_mulx_u64(&mut x343, &mut x344, x337, 0xffffffffffffffff);
  let mut x345: u64 = 0;
  let mut x346: u64 = 0;
  fiat_p384_mulx_u64(&mut x345, &mut x346, x337, 0xfffffffffffffffe);
  let mut x347: u64 = 0;
  let mut x348: u64 = 0;
  fiat_p384_mulx_u64(&mut x347, &mut x348, x337, 0xffffffff00000000);
  let mut x349: u64 = 0;
  let mut x350: u64 = 0;
  fiat_p384_mulx_u64(&mut x349, &mut x350, x337, 0xffffffff);
  let mut x351: u64 = 0;
  let mut x352: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x351, &mut x352, 0x0, x350, x347);
  let mut x353: u64 = 0;
  let mut x354: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x353, &mut x354, x352, x348, x345);
  let mut x355: u64 = 0;
  let mut x356: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x355, &mut x356, x354, x346, x343);
  let mut x357: u64 = 0;
  let mut x358: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x357, &mut x358, x356, x344, x341);
  let mut x359: u64 = 0;
  let mut x360: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x359, &mut x360, x358, x342, x339);
  let x361: u64 = ((x360 as u64) + x340);
  let mut x362: u64 = 0;
  let mut x363: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x362, &mut x363, 0x0, x323, x349);
  let mut x364: u64 = 0;
  let mut x365: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x364, &mut x365, x363, x325, x351);
  let mut x366: u64 = 0;
  let mut x367: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x366, &mut x367, x365, x327, x353);
  let mut x368: u64 = 0;
  let mut x369: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x368, &mut x369, x367, x329, x355);
  let mut x370: u64 = 0;
  let mut x371: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x370, &mut x371, x369, x331, x357);
  let mut x372: u64 = 0;
  let mut x373: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x372, &mut x373, x371, x333, x359);
  let mut x374: u64 = 0;
  let mut x375: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x374, &mut x375, x373, x335, x361);
  let x376: u64 = ((x375 as u64) + (x336 as u64));
  let mut x377: u64 = 0;
  let mut x378: u64 = 0;
  fiat_p384_mulx_u64(&mut x377, &mut x378, x5, (arg2[5]));
  let mut x379: u64 = 0;
  let mut x380: u64 = 0;
  fiat_p384_mulx_u64(&mut x379, &mut x380, x5, (arg2[4]));
  let mut x381: u64 = 0;
  let mut x382: u64 = 0;
  fiat_p384_mulx_u64(&mut x381, &mut x382, x5, (arg2[3]));
  let mut x383: u64 = 0;
  let mut x384: u64 = 0;
  fiat_p384_mulx_u64(&mut x383, &mut x384, x5, (arg2[2]));
  let mut x385: u64 = 0;
  let mut x386: u64 = 0;
  fiat_p384_mulx_u64(&mut x385, &mut x386, x5, (arg2[1]));
  let mut x387: u64 = 0;
  let mut x388: u64 = 0;
  fiat_p384_mulx_u64(&mut x387, &mut x388, x5, (arg2[0]));
  let mut x389: u64 = 0;
  let mut x390: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x389, &mut x390, 0x0, x388, x385);
  let mut x391: u64 = 0;
  let mut x392: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x391, &mut x392, x390, x386, x383);
  let mut x393: u64 = 0;
  let mut x394: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x393, &mut x394, x392, x384, x381);
  let mut x395: u64 = 0;
  let mut x396: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x395, &mut x396, x394, x382, x379);
  let mut x397: u64 = 0;
  let mut x398: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x397, &mut x398, x396, x380, x377);
  let x399: u64 = ((x398 as u64) + x378);
  let mut x400: u64 = 0;
  let mut x401: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x400, &mut x401, 0x0, x364, x387);
  let mut x402: u64 = 0;
  let mut x403: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x402, &mut x403, x401, x366, x389);
  let mut x404: u64 = 0;
  let mut x405: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x404, &mut x405, x403, x368, x391);
  let mut x406: u64 = 0;
  let mut x407: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x406, &mut x407, x405, x370, x393);
  let mut x408: u64 = 0;
  let mut x409: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x408, &mut x409, x407, x372, x395);
  let mut x410: u64 = 0;
  let mut x411: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x410, &mut x411, x409, x374, x397);
  let mut x412: u64 = 0;
  let mut x413: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x412, &mut x413, x411, x376, x399);
  let mut x414: u64 = 0;
  let mut x415: u64 = 0;
  fiat_p384_mulx_u64(&mut x414, &mut x415, x400, 0x100000001);
  let mut x416: u64 = 0;
  let mut x417: u64 = 0;
  fiat_p384_mulx_u64(&mut x416, &mut x417, x414, 0xffffffffffffffff);
  let mut x418: u64 = 0;
  let mut x419: u64 = 0;
  fiat_p384_mulx_u64(&mut x418, &mut x419, x414, 0xffffffffffffffff);
  let mut x420: u64 = 0;
  let mut x421: u64 = 0;
  fiat_p384_mulx_u64(&mut x420, &mut x421, x414, 0xffffffffffffffff);
  let mut x422: u64 = 0;
  let mut x423: u64 = 0;
  fiat_p384_mulx_u64(&mut x422, &mut x423, x414, 0xfffffffffffffffe);
  let mut x424: u64 = 0;
  let mut x425: u64 = 0;
  fiat_p384_mulx_u64(&mut x424, &mut x425, x414, 0xffffffff00000000);
  let mut x426: u64 = 0;
  let mut x427: u64 = 0;
  fiat_p384_mulx_u64(&mut x426, &mut x427, x414, 0xffffffff);
  let mut x428: u64 = 0;
  let mut x429: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x428, &mut x429, 0x0, x427, x424);
  let mut x430: u64 = 0;
  let mut x431: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x430, &mut x431, x429, x425, x422);
  let mut x432: u64 = 0;
  let mut x433: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x432, &mut x433, x431, x423, x420);
  let mut x434: u64 = 0;
  let mut x435: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x434, &mut x435, x433, x421, x418);
  let mut x436: u64 = 0;
  let mut x437: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x436, &mut x437, x435, x419, x416);
  let x438: u64 = ((x437 as u64) + x417);
  let mut x439: u64 = 0;
  let mut x440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x439, &mut x440, 0x0, x400, x426);
  let mut x441: u64 = 0;
  let mut x442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x441, &mut x442, x440, x402, x428);
  let mut x443: u64 = 0;
  let mut x444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x443, &mut x444, x442, x404, x430);
  let mut x445: u64 = 0;
  let mut x446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x445, &mut x446, x444, x406, x432);
  let mut x447: u64 = 0;
  let mut x448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x447, &mut x448, x446, x408, x434);
  let mut x449: u64 = 0;
  let mut x450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x449, &mut x450, x448, x410, x436);
  let mut x451: u64 = 0;
  let mut x452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x451, &mut x452, x450, x412, x438);
  let x453: u64 = ((x452 as u64) + (x413 as u64));
  let mut x454: u64 = 0;
  let mut x455: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x454, &mut x455, 0x0, x441, 0xffffffff);
  let mut x456: u64 = 0;
  let mut x457: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x456, &mut x457, x455, x443, 0xffffffff00000000);
  let mut x458: u64 = 0;
  let mut x459: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x458, &mut x459, x457, x445, 0xfffffffffffffffe);
  let mut x460: u64 = 0;
  let mut x461: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x460, &mut x461, x459, x447, 0xffffffffffffffff);
  let mut x462: u64 = 0;
  let mut x463: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x462, &mut x463, x461, x449, 0xffffffffffffffff);
  let mut x464: u64 = 0;
  let mut x465: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x464, &mut x465, x463, x451, 0xffffffffffffffff);
  let mut x466: u64 = 0;
  let mut x467: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x466, &mut x467, x465, x453, (0x0 as u64));
  let mut x468: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x468, x467, x454, x441);
  let mut x469: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x469, x467, x456, x443);
  let mut x470: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x470, x467, x458, x445);
  let mut x471: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x471, x467, x460, x447);
  let mut x472: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x472, x467, x462, x449);
  let mut x473: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x473, x467, x464, x451);
  out1[0] = x468;
  out1[1] = x469;
  out1[2] = x470;
  out1[3] = x471;
  out1[4] = x472;
  out1[5] = x473;
}

/// The function fiat_p384_square squares a field element in the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_square(out1: &mut [u64; 6], arg1: &[u64; 6]) -> () {
  let x1: u64 = (arg1[1]);
  let x2: u64 = (arg1[2]);
  let x3: u64 = (arg1[3]);
  let x4: u64 = (arg1[4]);
  let x5: u64 = (arg1[5]);
  let x6: u64 = (arg1[0]);
  let mut x7: u64 = 0;
  let mut x8: u64 = 0;
  fiat_p384_mulx_u64(&mut x7, &mut x8, x6, (arg1[5]));
  let mut x9: u64 = 0;
  let mut x10: u64 = 0;
  fiat_p384_mulx_u64(&mut x9, &mut x10, x6, (arg1[4]));
  let mut x11: u64 = 0;
  let mut x12: u64 = 0;
  fiat_p384_mulx_u64(&mut x11, &mut x12, x6, (arg1[3]));
  let mut x13: u64 = 0;
  let mut x14: u64 = 0;
  fiat_p384_mulx_u64(&mut x13, &mut x14, x6, (arg1[2]));
  let mut x15: u64 = 0;
  let mut x16: u64 = 0;
  fiat_p384_mulx_u64(&mut x15, &mut x16, x6, (arg1[1]));
  let mut x17: u64 = 0;
  let mut x18: u64 = 0;
  fiat_p384_mulx_u64(&mut x17, &mut x18, x6, (arg1[0]));
  let mut x19: u64 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x19, &mut x20, 0x0, x18, x15);
  let mut x21: u64 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x21, &mut x22, x20, x16, x13);
  let mut x23: u64 = 0;
  let mut x24: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x23, &mut x24, x22, x14, x11);
  let mut x25: u64 = 0;
  let mut x26: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x25, &mut x26, x24, x12, x9);
  let mut x27: u64 = 0;
  let mut x28: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x27, &mut x28, x26, x10, x7);
  let x29: u64 = ((x28 as u64) + x8);
  let mut x30: u64 = 0;
  let mut x31: u64 = 0;
  fiat_p384_mulx_u64(&mut x30, &mut x31, x17, 0x100000001);
  let mut x32: u64 = 0;
  let mut x33: u64 = 0;
  fiat_p384_mulx_u64(&mut x32, &mut x33, x30, 0xffffffffffffffff);
  let mut x34: u64 = 0;
  let mut x35: u64 = 0;
  fiat_p384_mulx_u64(&mut x34, &mut x35, x30, 0xffffffffffffffff);
  let mut x36: u64 = 0;
  let mut x37: u64 = 0;
  fiat_p384_mulx_u64(&mut x36, &mut x37, x30, 0xffffffffffffffff);
  let mut x38: u64 = 0;
  let mut x39: u64 = 0;
  fiat_p384_mulx_u64(&mut x38, &mut x39, x30, 0xfffffffffffffffe);
  let mut x40: u64 = 0;
  let mut x41: u64 = 0;
  fiat_p384_mulx_u64(&mut x40, &mut x41, x30, 0xffffffff00000000);
  let mut x42: u64 = 0;
  let mut x43: u64 = 0;
  fiat_p384_mulx_u64(&mut x42, &mut x43, x30, 0xffffffff);
  let mut x44: u64 = 0;
  let mut x45: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x44, &mut x45, 0x0, x43, x40);
  let mut x46: u64 = 0;
  let mut x47: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x46, &mut x47, x45, x41, x38);
  let mut x48: u64 = 0;
  let mut x49: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x48, &mut x49, x47, x39, x36);
  let mut x50: u64 = 0;
  let mut x51: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x50, &mut x51, x49, x37, x34);
  let mut x52: u64 = 0;
  let mut x53: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x52, &mut x53, x51, x35, x32);
  let x54: u64 = ((x53 as u64) + x33);
  let mut x55: u64 = 0;
  let mut x56: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x55, &mut x56, 0x0, x17, x42);
  let mut x57: u64 = 0;
  let mut x58: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x57, &mut x58, x56, x19, x44);
  let mut x59: u64 = 0;
  let mut x60: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x59, &mut x60, x58, x21, x46);
  let mut x61: u64 = 0;
  let mut x62: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x61, &mut x62, x60, x23, x48);
  let mut x63: u64 = 0;
  let mut x64: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x63, &mut x64, x62, x25, x50);
  let mut x65: u64 = 0;
  let mut x66: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x65, &mut x66, x64, x27, x52);
  let mut x67: u64 = 0;
  let mut x68: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x67, &mut x68, x66, x29, x54);
  let mut x69: u64 = 0;
  let mut x70: u64 = 0;
  fiat_p384_mulx_u64(&mut x69, &mut x70, x1, (arg1[5]));
  let mut x71: u64 = 0;
  let mut x72: u64 = 0;
  fiat_p384_mulx_u64(&mut x71, &mut x72, x1, (arg1[4]));
  let mut x73: u64 = 0;
  let mut x74: u64 = 0;
  fiat_p384_mulx_u64(&mut x73, &mut x74, x1, (arg1[3]));
  let mut x75: u64 = 0;
  let mut x76: u64 = 0;
  fiat_p384_mulx_u64(&mut x75, &mut x76, x1, (arg1[2]));
  let mut x77: u64 = 0;
  let mut x78: u64 = 0;
  fiat_p384_mulx_u64(&mut x77, &mut x78, x1, (arg1[1]));
  let mut x79: u64 = 0;
  let mut x80: u64 = 0;
  fiat_p384_mulx_u64(&mut x79, &mut x80, x1, (arg1[0]));
  let mut x81: u64 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x81, &mut x82, 0x0, x80, x77);
  let mut x83: u64 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x83, &mut x84, x82, x78, x75);
  let mut x85: u64 = 0;
  let mut x86: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x85, &mut x86, x84, x76, x73);
  let mut x87: u64 = 0;
  let mut x88: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x87, &mut x88, x86, x74, x71);
  let mut x89: u64 = 0;
  let mut x90: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x89, &mut x90, x88, x72, x69);
  let x91: u64 = ((x90 as u64) + x70);
  let mut x92: u64 = 0;
  let mut x93: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x92, &mut x93, 0x0, x57, x79);
  let mut x94: u64 = 0;
  let mut x95: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x94, &mut x95, x93, x59, x81);
  let mut x96: u64 = 0;
  let mut x97: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x96, &mut x97, x95, x61, x83);
  let mut x98: u64 = 0;
  let mut x99: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x98, &mut x99, x97, x63, x85);
  let mut x100: u64 = 0;
  let mut x101: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x100, &mut x101, x99, x65, x87);
  let mut x102: u64 = 0;
  let mut x103: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x102, &mut x103, x101, x67, x89);
  let mut x104: u64 = 0;
  let mut x105: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x104, &mut x105, x103, (x68 as u64), x91);
  let mut x106: u64 = 0;
  let mut x107: u64 = 0;
  fiat_p384_mulx_u64(&mut x106, &mut x107, x92, 0x100000001);
  let mut x108: u64 = 0;
  let mut x109: u64 = 0;
  fiat_p384_mulx_u64(&mut x108, &mut x109, x106, 0xffffffffffffffff);
  let mut x110: u64 = 0;
  let mut x111: u64 = 0;
  fiat_p384_mulx_u64(&mut x110, &mut x111, x106, 0xffffffffffffffff);
  let mut x112: u64 = 0;
  let mut x113: u64 = 0;
  fiat_p384_mulx_u64(&mut x112, &mut x113, x106, 0xffffffffffffffff);
  let mut x114: u64 = 0;
  let mut x115: u64 = 0;
  fiat_p384_mulx_u64(&mut x114, &mut x115, x106, 0xfffffffffffffffe);
  let mut x116: u64 = 0;
  let mut x117: u64 = 0;
  fiat_p384_mulx_u64(&mut x116, &mut x117, x106, 0xffffffff00000000);
  let mut x118: u64 = 0;
  let mut x119: u64 = 0;
  fiat_p384_mulx_u64(&mut x118, &mut x119, x106, 0xffffffff);
  let mut x120: u64 = 0;
  let mut x121: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x120, &mut x121, 0x0, x119, x116);
  let mut x122: u64 = 0;
  let mut x123: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x122, &mut x123, x121, x117, x114);
  let mut x124: u64 = 0;
  let mut x125: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x124, &mut x125, x123, x115, x112);
  let mut x126: u64 = 0;
  let mut x127: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x126, &mut x127, x125, x113, x110);
  let mut x128: u64 = 0;
  let mut x129: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x128, &mut x129, x127, x111, x108);
  let x130: u64 = ((x129 as u64) + x109);
  let mut x131: u64 = 0;
  let mut x132: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x131, &mut x132, 0x0, x92, x118);
  let mut x133: u64 = 0;
  let mut x134: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x133, &mut x134, x132, x94, x120);
  let mut x135: u64 = 0;
  let mut x136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x135, &mut x136, x134, x96, x122);
  let mut x137: u64 = 0;
  let mut x138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x137, &mut x138, x136, x98, x124);
  let mut x139: u64 = 0;
  let mut x140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x139, &mut x140, x138, x100, x126);
  let mut x141: u64 = 0;
  let mut x142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x141, &mut x142, x140, x102, x128);
  let mut x143: u64 = 0;
  let mut x144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x143, &mut x144, x142, x104, x130);
  let x145: u64 = ((x144 as u64) + (x105 as u64));
  let mut x146: u64 = 0;
  let mut x147: u64 = 0;
  fiat_p384_mulx_u64(&mut x146, &mut x147, x2, (arg1[5]));
  let mut x148: u64 = 0;
  let mut x149: u64 = 0;
  fiat_p384_mulx_u64(&mut x148, &mut x149, x2, (arg1[4]));
  let mut x150: u64 = 0;
  let mut x151: u64 = 0;
  fiat_p384_mulx_u64(&mut x150, &mut x151, x2, (arg1[3]));
  let mut x152: u64 = 0;
  let mut x153: u64 = 0;
  fiat_p384_mulx_u64(&mut x152, &mut x153, x2, (arg1[2]));
  let mut x154: u64 = 0;
  let mut x155: u64 = 0;
  fiat_p384_mulx_u64(&mut x154, &mut x155, x2, (arg1[1]));
  let mut x156: u64 = 0;
  let mut x157: u64 = 0;
  fiat_p384_mulx_u64(&mut x156, &mut x157, x2, (arg1[0]));
  let mut x158: u64 = 0;
  let mut x159: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x158, &mut x159, 0x0, x157, x154);
  let mut x160: u64 = 0;
  let mut x161: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x160, &mut x161, x159, x155, x152);
  let mut x162: u64 = 0;
  let mut x163: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x162, &mut x163, x161, x153, x150);
  let mut x164: u64 = 0;
  let mut x165: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x164, &mut x165, x163, x151, x148);
  let mut x166: u64 = 0;
  let mut x167: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x166, &mut x167, x165, x149, x146);
  let x168: u64 = ((x167 as u64) + x147);
  let mut x169: u64 = 0;
  let mut x170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x169, &mut x170, 0x0, x133, x156);
  let mut x171: u64 = 0;
  let mut x172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x171, &mut x172, x170, x135, x158);
  let mut x173: u64 = 0;
  let mut x174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x173, &mut x174, x172, x137, x160);
  let mut x175: u64 = 0;
  let mut x176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x175, &mut x176, x174, x139, x162);
  let mut x177: u64 = 0;
  let mut x178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x177, &mut x178, x176, x141, x164);
  let mut x179: u64 = 0;
  let mut x180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x179, &mut x180, x178, x143, x166);
  let mut x181: u64 = 0;
  let mut x182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x181, &mut x182, x180, x145, x168);
  let mut x183: u64 = 0;
  let mut x184: u64 = 0;
  fiat_p384_mulx_u64(&mut x183, &mut x184, x169, 0x100000001);
  let mut x185: u64 = 0;
  let mut x186: u64 = 0;
  fiat_p384_mulx_u64(&mut x185, &mut x186, x183, 0xffffffffffffffff);
  let mut x187: u64 = 0;
  let mut x188: u64 = 0;
  fiat_p384_mulx_u64(&mut x187, &mut x188, x183, 0xffffffffffffffff);
  let mut x189: u64 = 0;
  let mut x190: u64 = 0;
  fiat_p384_mulx_u64(&mut x189, &mut x190, x183, 0xffffffffffffffff);
  let mut x191: u64 = 0;
  let mut x192: u64 = 0;
  fiat_p384_mulx_u64(&mut x191, &mut x192, x183, 0xfffffffffffffffe);
  let mut x193: u64 = 0;
  let mut x194: u64 = 0;
  fiat_p384_mulx_u64(&mut x193, &mut x194, x183, 0xffffffff00000000);
  let mut x195: u64 = 0;
  let mut x196: u64 = 0;
  fiat_p384_mulx_u64(&mut x195, &mut x196, x183, 0xffffffff);
  let mut x197: u64 = 0;
  let mut x198: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x197, &mut x198, 0x0, x196, x193);
  let mut x199: u64 = 0;
  let mut x200: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x199, &mut x200, x198, x194, x191);
  let mut x201: u64 = 0;
  let mut x202: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x201, &mut x202, x200, x192, x189);
  let mut x203: u64 = 0;
  let mut x204: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x203, &mut x204, x202, x190, x187);
  let mut x205: u64 = 0;
  let mut x206: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x205, &mut x206, x204, x188, x185);
  let x207: u64 = ((x206 as u64) + x186);
  let mut x208: u64 = 0;
  let mut x209: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x208, &mut x209, 0x0, x169, x195);
  let mut x210: u64 = 0;
  let mut x211: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x210, &mut x211, x209, x171, x197);
  let mut x212: u64 = 0;
  let mut x213: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x212, &mut x213, x211, x173, x199);
  let mut x214: u64 = 0;
  let mut x215: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x214, &mut x215, x213, x175, x201);
  let mut x216: u64 = 0;
  let mut x217: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x216, &mut x217, x215, x177, x203);
  let mut x218: u64 = 0;
  let mut x219: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x218, &mut x219, x217, x179, x205);
  let mut x220: u64 = 0;
  let mut x221: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x220, &mut x221, x219, x181, x207);
  let x222: u64 = ((x221 as u64) + (x182 as u64));
  let mut x223: u64 = 0;
  let mut x224: u64 = 0;
  fiat_p384_mulx_u64(&mut x223, &mut x224, x3, (arg1[5]));
  let mut x225: u64 = 0;
  let mut x226: u64 = 0;
  fiat_p384_mulx_u64(&mut x225, &mut x226, x3, (arg1[4]));
  let mut x227: u64 = 0;
  let mut x228: u64 = 0;
  fiat_p384_mulx_u64(&mut x227, &mut x228, x3, (arg1[3]));
  let mut x229: u64 = 0;
  let mut x230: u64 = 0;
  fiat_p384_mulx_u64(&mut x229, &mut x230, x3, (arg1[2]));
  let mut x231: u64 = 0;
  let mut x232: u64 = 0;
  fiat_p384_mulx_u64(&mut x231, &mut x232, x3, (arg1[1]));
  let mut x233: u64 = 0;
  let mut x234: u64 = 0;
  fiat_p384_mulx_u64(&mut x233, &mut x234, x3, (arg1[0]));
  let mut x235: u64 = 0;
  let mut x236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x235, &mut x236, 0x0, x234, x231);
  let mut x237: u64 = 0;
  let mut x238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x237, &mut x238, x236, x232, x229);
  let mut x239: u64 = 0;
  let mut x240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x239, &mut x240, x238, x230, x227);
  let mut x241: u64 = 0;
  let mut x242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x241, &mut x242, x240, x228, x225);
  let mut x243: u64 = 0;
  let mut x244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x243, &mut x244, x242, x226, x223);
  let x245: u64 = ((x244 as u64) + x224);
  let mut x246: u64 = 0;
  let mut x247: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x246, &mut x247, 0x0, x210, x233);
  let mut x248: u64 = 0;
  let mut x249: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x248, &mut x249, x247, x212, x235);
  let mut x250: u64 = 0;
  let mut x251: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x250, &mut x251, x249, x214, x237);
  let mut x252: u64 = 0;
  let mut x253: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x252, &mut x253, x251, x216, x239);
  let mut x254: u64 = 0;
  let mut x255: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x254, &mut x255, x253, x218, x241);
  let mut x256: u64 = 0;
  let mut x257: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x256, &mut x257, x255, x220, x243);
  let mut x258: u64 = 0;
  let mut x259: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x258, &mut x259, x257, x222, x245);
  let mut x260: u64 = 0;
  let mut x261: u64 = 0;
  fiat_p384_mulx_u64(&mut x260, &mut x261, x246, 0x100000001);
  let mut x262: u64 = 0;
  let mut x263: u64 = 0;
  fiat_p384_mulx_u64(&mut x262, &mut x263, x260, 0xffffffffffffffff);
  let mut x264: u64 = 0;
  let mut x265: u64 = 0;
  fiat_p384_mulx_u64(&mut x264, &mut x265, x260, 0xffffffffffffffff);
  let mut x266: u64 = 0;
  let mut x267: u64 = 0;
  fiat_p384_mulx_u64(&mut x266, &mut x267, x260, 0xffffffffffffffff);
  let mut x268: u64 = 0;
  let mut x269: u64 = 0;
  fiat_p384_mulx_u64(&mut x268, &mut x269, x260, 0xfffffffffffffffe);
  let mut x270: u64 = 0;
  let mut x271: u64 = 0;
  fiat_p384_mulx_u64(&mut x270, &mut x271, x260, 0xffffffff00000000);
  let mut x272: u64 = 0;
  let mut x273: u64 = 0;
  fiat_p384_mulx_u64(&mut x272, &mut x273, x260, 0xffffffff);
  let mut x274: u64 = 0;
  let mut x275: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x274, &mut x275, 0x0, x273, x270);
  let mut x276: u64 = 0;
  let mut x277: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x276, &mut x277, x275, x271, x268);
  let mut x278: u64 = 0;
  let mut x279: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x278, &mut x279, x277, x269, x266);
  let mut x280: u64 = 0;
  let mut x281: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x280, &mut x281, x279, x267, x264);
  let mut x282: u64 = 0;
  let mut x283: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x282, &mut x283, x281, x265, x262);
  let x284: u64 = ((x283 as u64) + x263);
  let mut x285: u64 = 0;
  let mut x286: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x285, &mut x286, 0x0, x246, x272);
  let mut x287: u64 = 0;
  let mut x288: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x287, &mut x288, x286, x248, x274);
  let mut x289: u64 = 0;
  let mut x290: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x289, &mut x290, x288, x250, x276);
  let mut x291: u64 = 0;
  let mut x292: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x291, &mut x292, x290, x252, x278);
  let mut x293: u64 = 0;
  let mut x294: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x293, &mut x294, x292, x254, x280);
  let mut x295: u64 = 0;
  let mut x296: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x295, &mut x296, x294, x256, x282);
  let mut x297: u64 = 0;
  let mut x298: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x297, &mut x298, x296, x258, x284);
  let x299: u64 = ((x298 as u64) + (x259 as u64));
  let mut x300: u64 = 0;
  let mut x301: u64 = 0;
  fiat_p384_mulx_u64(&mut x300, &mut x301, x4, (arg1[5]));
  let mut x302: u64 = 0;
  let mut x303: u64 = 0;
  fiat_p384_mulx_u64(&mut x302, &mut x303, x4, (arg1[4]));
  let mut x304: u64 = 0;
  let mut x305: u64 = 0;
  fiat_p384_mulx_u64(&mut x304, &mut x305, x4, (arg1[3]));
  let mut x306: u64 = 0;
  let mut x307: u64 = 0;
  fiat_p384_mulx_u64(&mut x306, &mut x307, x4, (arg1[2]));
  let mut x308: u64 = 0;
  let mut x309: u64 = 0;
  fiat_p384_mulx_u64(&mut x308, &mut x309, x4, (arg1[1]));
  let mut x310: u64 = 0;
  let mut x311: u64 = 0;
  fiat_p384_mulx_u64(&mut x310, &mut x311, x4, (arg1[0]));
  let mut x312: u64 = 0;
  let mut x313: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x312, &mut x313, 0x0, x311, x308);
  let mut x314: u64 = 0;
  let mut x315: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x314, &mut x315, x313, x309, x306);
  let mut x316: u64 = 0;
  let mut x317: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x316, &mut x317, x315, x307, x304);
  let mut x318: u64 = 0;
  let mut x319: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x318, &mut x319, x317, x305, x302);
  let mut x320: u64 = 0;
  let mut x321: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x320, &mut x321, x319, x303, x300);
  let x322: u64 = ((x321 as u64) + x301);
  let mut x323: u64 = 0;
  let mut x324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x323, &mut x324, 0x0, x287, x310);
  let mut x325: u64 = 0;
  let mut x326: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x325, &mut x326, x324, x289, x312);
  let mut x327: u64 = 0;
  let mut x328: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x327, &mut x328, x326, x291, x314);
  let mut x329: u64 = 0;
  let mut x330: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x329, &mut x330, x328, x293, x316);
  let mut x331: u64 = 0;
  let mut x332: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x331, &mut x332, x330, x295, x318);
  let mut x333: u64 = 0;
  let mut x334: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x333, &mut x334, x332, x297, x320);
  let mut x335: u64 = 0;
  let mut x336: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x335, &mut x336, x334, x299, x322);
  let mut x337: u64 = 0;
  let mut x338: u64 = 0;
  fiat_p384_mulx_u64(&mut x337, &mut x338, x323, 0x100000001);
  let mut x339: u64 = 0;
  let mut x340: u64 = 0;
  fiat_p384_mulx_u64(&mut x339, &mut x340, x337, 0xffffffffffffffff);
  let mut x341: u64 = 0;
  let mut x342: u64 = 0;
  fiat_p384_mulx_u64(&mut x341, &mut x342, x337, 0xffffffffffffffff);
  let mut x343: u64 = 0;
  let mut x344: u64 = 0;
  fiat_p384_mulx_u64(&mut x343, &mut x344, x337, 0xffffffffffffffff);
  let mut x345: u64 = 0;
  let mut x346: u64 = 0;
  fiat_p384_mulx_u64(&mut x345, &mut x346, x337, 0xfffffffffffffffe);
  let mut x347: u64 = 0;
  let mut x348: u64 = 0;
  fiat_p384_mulx_u64(&mut x347, &mut x348, x337, 0xffffffff00000000);
  let mut x349: u64 = 0;
  let mut x350: u64 = 0;
  fiat_p384_mulx_u64(&mut x349, &mut x350, x337, 0xffffffff);
  let mut x351: u64 = 0;
  let mut x352: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x351, &mut x352, 0x0, x350, x347);
  let mut x353: u64 = 0;
  let mut x354: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x353, &mut x354, x352, x348, x345);
  let mut x355: u64 = 0;
  let mut x356: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x355, &mut x356, x354, x346, x343);
  let mut x357: u64 = 0;
  let mut x358: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x357, &mut x358, x356, x344, x341);
  let mut x359: u64 = 0;
  let mut x360: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x359, &mut x360, x358, x342, x339);
  let x361: u64 = ((x360 as u64) + x340);
  let mut x362: u64 = 0;
  let mut x363: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x362, &mut x363, 0x0, x323, x349);
  let mut x364: u64 = 0;
  let mut x365: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x364, &mut x365, x363, x325, x351);
  let mut x366: u64 = 0;
  let mut x367: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x366, &mut x367, x365, x327, x353);
  let mut x368: u64 = 0;
  let mut x369: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x368, &mut x369, x367, x329, x355);
  let mut x370: u64 = 0;
  let mut x371: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x370, &mut x371, x369, x331, x357);
  let mut x372: u64 = 0;
  let mut x373: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x372, &mut x373, x371, x333, x359);
  let mut x374: u64 = 0;
  let mut x375: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x374, &mut x375, x373, x335, x361);
  let x376: u64 = ((x375 as u64) + (x336 as u64));
  let mut x377: u64 = 0;
  let mut x378: u64 = 0;
  fiat_p384_mulx_u64(&mut x377, &mut x378, x5, (arg1[5]));
  let mut x379: u64 = 0;
  let mut x380: u64 = 0;
  fiat_p384_mulx_u64(&mut x379, &mut x380, x5, (arg1[4]));
  let mut x381: u64 = 0;
  let mut x382: u64 = 0;
  fiat_p384_mulx_u64(&mut x381, &mut x382, x5, (arg1[3]));
  let mut x383: u64 = 0;
  let mut x384: u64 = 0;
  fiat_p384_mulx_u64(&mut x383, &mut x384, x5, (arg1[2]));
  let mut x385: u64 = 0;
  let mut x386: u64 = 0;
  fiat_p384_mulx_u64(&mut x385, &mut x386, x5, (arg1[1]));
  let mut x387: u64 = 0;
  let mut x388: u64 = 0;
  fiat_p384_mulx_u64(&mut x387, &mut x388, x5, (arg1[0]));
  let mut x389: u64 = 0;
  let mut x390: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x389, &mut x390, 0x0, x388, x385);
  let mut x391: u64 = 0;
  let mut x392: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x391, &mut x392, x390, x386, x383);
  let mut x393: u64 = 0;
  let mut x394: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x393, &mut x394, x392, x384, x381);
  let mut x395: u64 = 0;
  let mut x396: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x395, &mut x396, x394, x382, x379);
  let mut x397: u64 = 0;
  let mut x398: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x397, &mut x398, x396, x380, x377);
  let x399: u64 = ((x398 as u64) + x378);
  let mut x400: u64 = 0;
  let mut x401: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x400, &mut x401, 0x0, x364, x387);
  let mut x402: u64 = 0;
  let mut x403: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x402, &mut x403, x401, x366, x389);
  let mut x404: u64 = 0;
  let mut x405: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x404, &mut x405, x403, x368, x391);
  let mut x406: u64 = 0;
  let mut x407: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x406, &mut x407, x405, x370, x393);
  let mut x408: u64 = 0;
  let mut x409: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x408, &mut x409, x407, x372, x395);
  let mut x410: u64 = 0;
  let mut x411: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x410, &mut x411, x409, x374, x397);
  let mut x412: u64 = 0;
  let mut x413: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x412, &mut x413, x411, x376, x399);
  let mut x414: u64 = 0;
  let mut x415: u64 = 0;
  fiat_p384_mulx_u64(&mut x414, &mut x415, x400, 0x100000001);
  let mut x416: u64 = 0;
  let mut x417: u64 = 0;
  fiat_p384_mulx_u64(&mut x416, &mut x417, x414, 0xffffffffffffffff);
  let mut x418: u64 = 0;
  let mut x419: u64 = 0;
  fiat_p384_mulx_u64(&mut x418, &mut x419, x414, 0xffffffffffffffff);
  let mut x420: u64 = 0;
  let mut x421: u64 = 0;
  fiat_p384_mulx_u64(&mut x420, &mut x421, x414, 0xffffffffffffffff);
  let mut x422: u64 = 0;
  let mut x423: u64 = 0;
  fiat_p384_mulx_u64(&mut x422, &mut x423, x414, 0xfffffffffffffffe);
  let mut x424: u64 = 0;
  let mut x425: u64 = 0;
  fiat_p384_mulx_u64(&mut x424, &mut x425, x414, 0xffffffff00000000);
  let mut x426: u64 = 0;
  let mut x427: u64 = 0;
  fiat_p384_mulx_u64(&mut x426, &mut x427, x414, 0xffffffff);
  let mut x428: u64 = 0;
  let mut x429: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x428, &mut x429, 0x0, x427, x424);
  let mut x430: u64 = 0;
  let mut x431: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x430, &mut x431, x429, x425, x422);
  let mut x432: u64 = 0;
  let mut x433: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x432, &mut x433, x431, x423, x420);
  let mut x434: u64 = 0;
  let mut x435: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x434, &mut x435, x433, x421, x418);
  let mut x436: u64 = 0;
  let mut x437: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x436, &mut x437, x435, x419, x416);
  let x438: u64 = ((x437 as u64) + x417);
  let mut x439: u64 = 0;
  let mut x440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x439, &mut x440, 0x0, x400, x426);
  let mut x441: u64 = 0;
  let mut x442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x441, &mut x442, x440, x402, x428);
  let mut x443: u64 = 0;
  let mut x444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x443, &mut x444, x442, x404, x430);
  let mut x445: u64 = 0;
  let mut x446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x445, &mut x446, x444, x406, x432);
  let mut x447: u64 = 0;
  let mut x448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x447, &mut x448, x446, x408, x434);
  let mut x449: u64 = 0;
  let mut x450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x449, &mut x450, x448, x410, x436);
  let mut x451: u64 = 0;
  let mut x452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x451, &mut x452, x450, x412, x438);
  let x453: u64 = ((x452 as u64) + (x413 as u64));
  let mut x454: u64 = 0;
  let mut x455: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x454, &mut x455, 0x0, x441, 0xffffffff);
  let mut x456: u64 = 0;
  let mut x457: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x456, &mut x457, x455, x443, 0xffffffff00000000);
  let mut x458: u64 = 0;
  let mut x459: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x458, &mut x459, x457, x445, 0xfffffffffffffffe);
  let mut x460: u64 = 0;
  let mut x461: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x460, &mut x461, x459, x447, 0xffffffffffffffff);
  let mut x462: u64 = 0;
  let mut x463: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x462, &mut x463, x461, x449, 0xffffffffffffffff);
  let mut x464: u64 = 0;
  let mut x465: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x464, &mut x465, x463, x451, 0xffffffffffffffff);
  let mut x466: u64 = 0;
  let mut x467: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x466, &mut x467, x465, x453, (0x0 as u64));
  let mut x468: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x468, x467, x454, x441);
  let mut x469: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x469, x467, x456, x443);
  let mut x470: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x470, x467, x458, x445);
  let mut x471: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x471, x467, x460, x447);
  let mut x472: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x472, x467, x462, x449);
  let mut x473: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x473, x467, x464, x451);
  out1[0] = x468;
  out1[1] = x469;
  out1[2] = x470;
  out1[3] = x471;
  out1[4] = x472;
  out1[5] = x473;
}

/// The function fiat_p384_add adds two field elements in the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
///   0 ≤ eval arg2 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_add(out1: &mut [u64; 6], arg1: &[u64; 6], arg2: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u64 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u64 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u64 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u64 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u64 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u64 = 0;
  let mut x14: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x13, &mut x14, 0x0, x1, 0xffffffff);
  let mut x15: u64 = 0;
  let mut x16: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x15, &mut x16, x14, x3, 0xffffffff00000000);
  let mut x17: u64 = 0;
  let mut x18: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x17, &mut x18, x16, x5, 0xfffffffffffffffe);
  let mut x19: u64 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x19, &mut x20, x18, x7, 0xffffffffffffffff);
  let mut x21: u64 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x21, &mut x22, x20, x9, 0xffffffffffffffff);
  let mut x23: u64 = 0;
  let mut x24: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x23, &mut x24, x22, x11, 0xffffffffffffffff);
  let mut x25: u64 = 0;
  let mut x26: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x25, &mut x26, x24, (x12 as u64), (0x0 as u64));
  let mut x27: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x27, x26, x13, x1);
  let mut x28: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x28, x26, x15, x3);
  let mut x29: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x29, x26, x17, x5);
  let mut x30: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x30, x26, x19, x7);
  let mut x31: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x31, x26, x21, x9);
  let mut x32: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x32, x26, x23, x11);
  out1[0] = x27;
  out1[1] = x28;
  out1[2] = x29;
  out1[3] = x30;
  out1[4] = x31;
  out1[5] = x32;
}

/// The function fiat_p384_sub subtracts two field elements in the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
///   0 ≤ eval arg2 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_sub(out1: &mut [u64; 6], arg1: &[u64; 6], arg2: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u64 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u64 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u64 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u64 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u64 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x13, x12, (0x0 as u64), 0xffffffffffffffff);
  let mut x14: u64 = 0;
  let mut x15: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x14, &mut x15, 0x0, x1, (x13 & 0xffffffff));
  let mut x16: u64 = 0;
  let mut x17: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x16, &mut x17, x15, x3, (x13 & 0xffffffff00000000));
  let mut x18: u64 = 0;
  let mut x19: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x18, &mut x19, x17, x5, (x13 & 0xfffffffffffffffe));
  let mut x20: u64 = 0;
  let mut x21: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x20, &mut x21, x19, x7, x13);
  let mut x22: u64 = 0;
  let mut x23: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x22, &mut x23, x21, x9, x13);
  let mut x24: u64 = 0;
  let mut x25: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x24, &mut x25, x23, x11, x13);
  out1[0] = x14;
  out1[1] = x16;
  out1[2] = x18;
  out1[3] = x20;
  out1[4] = x22;
  out1[5] = x24;
}

/// The function fiat_p384_opp negates a field element in the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_opp(out1: &mut [u64; 6], arg1: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1, &mut x2, 0x0, (0x0 as u64), (arg1[0]));
  let mut x3: u64 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3, &mut x4, x2, (0x0 as u64), (arg1[1]));
  let mut x5: u64 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x5, &mut x6, x4, (0x0 as u64), (arg1[2]));
  let mut x7: u64 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x7, &mut x8, x6, (0x0 as u64), (arg1[3]));
  let mut x9: u64 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x9, &mut x10, x8, (0x0 as u64), (arg1[4]));
  let mut x11: u64 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x11, &mut x12, x10, (0x0 as u64), (arg1[5]));
  let mut x13: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x13, x12, (0x0 as u64), 0xffffffffffffffff);
  let mut x14: u64 = 0;
  let mut x15: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x14, &mut x15, 0x0, x1, (x13 & 0xffffffff));
  let mut x16: u64 = 0;
  let mut x17: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x16, &mut x17, x15, x3, (x13 & 0xffffffff00000000));
  let mut x18: u64 = 0;
  let mut x19: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x18, &mut x19, x17, x5, (x13 & 0xfffffffffffffffe));
  let mut x20: u64 = 0;
  let mut x21: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x20, &mut x21, x19, x7, x13);
  let mut x22: u64 = 0;
  let mut x23: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x22, &mut x23, x21, x9, x13);
  let mut x24: u64 = 0;
  let mut x25: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x24, &mut x25, x23, x11, x13);
  out1[0] = x14;
  out1[1] = x16;
  out1[2] = x18;
  out1[3] = x20;
  out1[4] = x22;
  out1[5] = x24;
}

/// The function fiat_p384_from_montgomery translates a field element out of the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval out1 mod m = (eval arg1 * ((2^64)⁻¹ mod m)^6) mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_from_montgomery(out1: &mut [u64; 6], arg1: &[u64; 6]) -> () {
  let x1: u64 = (arg1[0]);
  let mut x2: u64 = 0;
  let mut x3: u64 = 0;
  fiat_p384_mulx_u64(&mut x2, &mut x3, x1, 0x100000001);
  let mut x4: u64 = 0;
  let mut x5: u64 = 0;
  fiat_p384_mulx_u64(&mut x4, &mut x5, x2, 0xffffffffffffffff);
  let mut x6: u64 = 0;
  let mut x7: u64 = 0;
  fiat_p384_mulx_u64(&mut x6, &mut x7, x2, 0xffffffffffffffff);
  let mut x8: u64 = 0;
  let mut x9: u64 = 0;
  fiat_p384_mulx_u64(&mut x8, &mut x9, x2, 0xffffffffffffffff);
  let mut x10: u64 = 0;
  let mut x11: u64 = 0;
  fiat_p384_mulx_u64(&mut x10, &mut x11, x2, 0xfffffffffffffffe);
  let mut x12: u64 = 0;
  let mut x13: u64 = 0;
  fiat_p384_mulx_u64(&mut x12, &mut x13, x2, 0xffffffff00000000);
  let mut x14: u64 = 0;
  let mut x15: u64 = 0;
  fiat_p384_mulx_u64(&mut x14, &mut x15, x2, 0xffffffff);
  let mut x16: u64 = 0;
  let mut x17: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x16, &mut x17, 0x0, x15, x12);
  let mut x18: u64 = 0;
  let mut x19: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x18, &mut x19, x17, x13, x10);
  let mut x20: u64 = 0;
  let mut x21: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x20, &mut x21, x19, x11, x8);
  let mut x22: u64 = 0;
  let mut x23: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x22, &mut x23, x21, x9, x6);
  let mut x24: u64 = 0;
  let mut x25: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x24, &mut x25, x23, x7, x4);
  let mut x26: u64 = 0;
  let mut x27: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x26, &mut x27, 0x0, x1, x14);
  let mut x28: u64 = 0;
  let mut x29: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x28, &mut x29, x27, (0x0 as u64), x16);
  let mut x30: u64 = 0;
  let mut x31: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x30, &mut x31, x29, (0x0 as u64), x18);
  let mut x32: u64 = 0;
  let mut x33: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x32, &mut x33, x31, (0x0 as u64), x20);
  let mut x34: u64 = 0;
  let mut x35: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x34, &mut x35, x33, (0x0 as u64), x22);
  let mut x36: u64 = 0;
  let mut x37: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x36, &mut x37, x35, (0x0 as u64), x24);
  let mut x38: u64 = 0;
  let mut x39: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x38, &mut x39, x37, (0x0 as u64), ((x25 as u64) + x5));
  let mut x40: u64 = 0;
  let mut x41: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x40, &mut x41, 0x0, x28, (arg1[1]));
  let mut x42: u64 = 0;
  let mut x43: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x42, &mut x43, x41, x30, (0x0 as u64));
  let mut x44: u64 = 0;
  let mut x45: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x44, &mut x45, x43, x32, (0x0 as u64));
  let mut x46: u64 = 0;
  let mut x47: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x46, &mut x47, x45, x34, (0x0 as u64));
  let mut x48: u64 = 0;
  let mut x49: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x48, &mut x49, x47, x36, (0x0 as u64));
  let mut x50: u64 = 0;
  let mut x51: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x50, &mut x51, x49, x38, (0x0 as u64));
  let mut x52: u64 = 0;
  let mut x53: u64 = 0;
  fiat_p384_mulx_u64(&mut x52, &mut x53, x40, 0x100000001);
  let mut x54: u64 = 0;
  let mut x55: u64 = 0;
  fiat_p384_mulx_u64(&mut x54, &mut x55, x52, 0xffffffffffffffff);
  let mut x56: u64 = 0;
  let mut x57: u64 = 0;
  fiat_p384_mulx_u64(&mut x56, &mut x57, x52, 0xffffffffffffffff);
  let mut x58: u64 = 0;
  let mut x59: u64 = 0;
  fiat_p384_mulx_u64(&mut x58, &mut x59, x52, 0xffffffffffffffff);
  let mut x60: u64 = 0;
  let mut x61: u64 = 0;
  fiat_p384_mulx_u64(&mut x60, &mut x61, x52, 0xfffffffffffffffe);
  let mut x62: u64 = 0;
  let mut x63: u64 = 0;
  fiat_p384_mulx_u64(&mut x62, &mut x63, x52, 0xffffffff00000000);
  let mut x64: u64 = 0;
  let mut x65: u64 = 0;
  fiat_p384_mulx_u64(&mut x64, &mut x65, x52, 0xffffffff);
  let mut x66: u64 = 0;
  let mut x67: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x66, &mut x67, 0x0, x65, x62);
  let mut x68: u64 = 0;
  let mut x69: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x68, &mut x69, x67, x63, x60);
  let mut x70: u64 = 0;
  let mut x71: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x70, &mut x71, x69, x61, x58);
  let mut x72: u64 = 0;
  let mut x73: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x72, &mut x73, x71, x59, x56);
  let mut x74: u64 = 0;
  let mut x75: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x74, &mut x75, x73, x57, x54);
  let mut x76: u64 = 0;
  let mut x77: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x76, &mut x77, 0x0, x40, x64);
  let mut x78: u64 = 0;
  let mut x79: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x78, &mut x79, x77, x42, x66);
  let mut x80: u64 = 0;
  let mut x81: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x80, &mut x81, x79, x44, x68);
  let mut x82: u64 = 0;
  let mut x83: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x82, &mut x83, x81, x46, x70);
  let mut x84: u64 = 0;
  let mut x85: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x84, &mut x85, x83, x48, x72);
  let mut x86: u64 = 0;
  let mut x87: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x86, &mut x87, x85, x50, x74);
  let mut x88: u64 = 0;
  let mut x89: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x88, &mut x89, x87, ((x51 as u64) + (x39 as u64)), ((x75 as u64) + x55));
  let mut x90: u64 = 0;
  let mut x91: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x90, &mut x91, 0x0, x78, (arg1[2]));
  let mut x92: u64 = 0;
  let mut x93: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x92, &mut x93, x91, x80, (0x0 as u64));
  let mut x94: u64 = 0;
  let mut x95: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x94, &mut x95, x93, x82, (0x0 as u64));
  let mut x96: u64 = 0;
  let mut x97: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x96, &mut x97, x95, x84, (0x0 as u64));
  let mut x98: u64 = 0;
  let mut x99: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x98, &mut x99, x97, x86, (0x0 as u64));
  let mut x100: u64 = 0;
  let mut x101: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x100, &mut x101, x99, x88, (0x0 as u64));
  let mut x102: u64 = 0;
  let mut x103: u64 = 0;
  fiat_p384_mulx_u64(&mut x102, &mut x103, x90, 0x100000001);
  let mut x104: u64 = 0;
  let mut x105: u64 = 0;
  fiat_p384_mulx_u64(&mut x104, &mut x105, x102, 0xffffffffffffffff);
  let mut x106: u64 = 0;
  let mut x107: u64 = 0;
  fiat_p384_mulx_u64(&mut x106, &mut x107, x102, 0xffffffffffffffff);
  let mut x108: u64 = 0;
  let mut x109: u64 = 0;
  fiat_p384_mulx_u64(&mut x108, &mut x109, x102, 0xffffffffffffffff);
  let mut x110: u64 = 0;
  let mut x111: u64 = 0;
  fiat_p384_mulx_u64(&mut x110, &mut x111, x102, 0xfffffffffffffffe);
  let mut x112: u64 = 0;
  let mut x113: u64 = 0;
  fiat_p384_mulx_u64(&mut x112, &mut x113, x102, 0xffffffff00000000);
  let mut x114: u64 = 0;
  let mut x115: u64 = 0;
  fiat_p384_mulx_u64(&mut x114, &mut x115, x102, 0xffffffff);
  let mut x116: u64 = 0;
  let mut x117: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x116, &mut x117, 0x0, x115, x112);
  let mut x118: u64 = 0;
  let mut x119: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x118, &mut x119, x117, x113, x110);
  let mut x120: u64 = 0;
  let mut x121: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x120, &mut x121, x119, x111, x108);
  let mut x122: u64 = 0;
  let mut x123: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x122, &mut x123, x121, x109, x106);
  let mut x124: u64 = 0;
  let mut x125: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x124, &mut x125, x123, x107, x104);
  let mut x126: u64 = 0;
  let mut x127: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x126, &mut x127, 0x0, x90, x114);
  let mut x128: u64 = 0;
  let mut x129: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x128, &mut x129, x127, x92, x116);
  let mut x130: u64 = 0;
  let mut x131: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x130, &mut x131, x129, x94, x118);
  let mut x132: u64 = 0;
  let mut x133: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x132, &mut x133, x131, x96, x120);
  let mut x134: u64 = 0;
  let mut x135: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x134, &mut x135, x133, x98, x122);
  let mut x136: u64 = 0;
  let mut x137: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x136, &mut x137, x135, x100, x124);
  let mut x138: u64 = 0;
  let mut x139: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x138, &mut x139, x137, ((x101 as u64) + (x89 as u64)), ((x125 as u64) + x105));
  let mut x140: u64 = 0;
  let mut x141: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x140, &mut x141, 0x0, x128, (arg1[3]));
  let mut x142: u64 = 0;
  let mut x143: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x142, &mut x143, x141, x130, (0x0 as u64));
  let mut x144: u64 = 0;
  let mut x145: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x144, &mut x145, x143, x132, (0x0 as u64));
  let mut x146: u64 = 0;
  let mut x147: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x146, &mut x147, x145, x134, (0x0 as u64));
  let mut x148: u64 = 0;
  let mut x149: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x148, &mut x149, x147, x136, (0x0 as u64));
  let mut x150: u64 = 0;
  let mut x151: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x150, &mut x151, x149, x138, (0x0 as u64));
  let mut x152: u64 = 0;
  let mut x153: u64 = 0;
  fiat_p384_mulx_u64(&mut x152, &mut x153, x140, 0x100000001);
  let mut x154: u64 = 0;
  let mut x155: u64 = 0;
  fiat_p384_mulx_u64(&mut x154, &mut x155, x152, 0xffffffffffffffff);
  let mut x156: u64 = 0;
  let mut x157: u64 = 0;
  fiat_p384_mulx_u64(&mut x156, &mut x157, x152, 0xffffffffffffffff);
  let mut x158: u64 = 0;
  let mut x159: u64 = 0;
  fiat_p384_mulx_u64(&mut x158, &mut x159, x152, 0xffffffffffffffff);
  let mut x160: u64 = 0;
  let mut x161: u64 = 0;
  fiat_p384_mulx_u64(&mut x160, &mut x161, x152, 0xfffffffffffffffe);
  let mut x162: u64 = 0;
  let mut x163: u64 = 0;
  fiat_p384_mulx_u64(&mut x162, &mut x163, x152, 0xffffffff00000000);
  let mut x164: u64 = 0;
  let mut x165: u64 = 0;
  fiat_p384_mulx_u64(&mut x164, &mut x165, x152, 0xffffffff);
  let mut x166: u64 = 0;
  let mut x167: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x166, &mut x167, 0x0, x165, x162);
  let mut x168: u64 = 0;
  let mut x169: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x168, &mut x169, x167, x163, x160);
  let mut x170: u64 = 0;
  let mut x171: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x170, &mut x171, x169, x161, x158);
  let mut x172: u64 = 0;
  let mut x173: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x172, &mut x173, x171, x159, x156);
  let mut x174: u64 = 0;
  let mut x175: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x174, &mut x175, x173, x157, x154);
  let mut x176: u64 = 0;
  let mut x177: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x176, &mut x177, 0x0, x140, x164);
  let mut x178: u64 = 0;
  let mut x179: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x178, &mut x179, x177, x142, x166);
  let mut x180: u64 = 0;
  let mut x181: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x180, &mut x181, x179, x144, x168);
  let mut x182: u64 = 0;
  let mut x183: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x182, &mut x183, x181, x146, x170);
  let mut x184: u64 = 0;
  let mut x185: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x184, &mut x185, x183, x148, x172);
  let mut x186: u64 = 0;
  let mut x187: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x186, &mut x187, x185, x150, x174);
  let mut x188: u64 = 0;
  let mut x189: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x188, &mut x189, x187, ((x151 as u64) + (x139 as u64)), ((x175 as u64) + x155));
  let mut x190: u64 = 0;
  let mut x191: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x190, &mut x191, 0x0, x178, (arg1[4]));
  let mut x192: u64 = 0;
  let mut x193: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x192, &mut x193, x191, x180, (0x0 as u64));
  let mut x194: u64 = 0;
  let mut x195: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x194, &mut x195, x193, x182, (0x0 as u64));
  let mut x196: u64 = 0;
  let mut x197: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x196, &mut x197, x195, x184, (0x0 as u64));
  let mut x198: u64 = 0;
  let mut x199: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x198, &mut x199, x197, x186, (0x0 as u64));
  let mut x200: u64 = 0;
  let mut x201: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x200, &mut x201, x199, x188, (0x0 as u64));
  let mut x202: u64 = 0;
  let mut x203: u64 = 0;
  fiat_p384_mulx_u64(&mut x202, &mut x203, x190, 0x100000001);
  let mut x204: u64 = 0;
  let mut x205: u64 = 0;
  fiat_p384_mulx_u64(&mut x204, &mut x205, x202, 0xffffffffffffffff);
  let mut x206: u64 = 0;
  let mut x207: u64 = 0;
  fiat_p384_mulx_u64(&mut x206, &mut x207, x202, 0xffffffffffffffff);
  let mut x208: u64 = 0;
  let mut x209: u64 = 0;
  fiat_p384_mulx_u64(&mut x208, &mut x209, x202, 0xffffffffffffffff);
  let mut x210: u64 = 0;
  let mut x211: u64 = 0;
  fiat_p384_mulx_u64(&mut x210, &mut x211, x202, 0xfffffffffffffffe);
  let mut x212: u64 = 0;
  let mut x213: u64 = 0;
  fiat_p384_mulx_u64(&mut x212, &mut x213, x202, 0xffffffff00000000);
  let mut x214: u64 = 0;
  let mut x215: u64 = 0;
  fiat_p384_mulx_u64(&mut x214, &mut x215, x202, 0xffffffff);
  let mut x216: u64 = 0;
  let mut x217: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x216, &mut x217, 0x0, x215, x212);
  let mut x218: u64 = 0;
  let mut x219: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x218, &mut x219, x217, x213, x210);
  let mut x220: u64 = 0;
  let mut x221: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x220, &mut x221, x219, x211, x208);
  let mut x222: u64 = 0;
  let mut x223: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x222, &mut x223, x221, x209, x206);
  let mut x224: u64 = 0;
  let mut x225: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x224, &mut x225, x223, x207, x204);
  let mut x226: u64 = 0;
  let mut x227: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x226, &mut x227, 0x0, x190, x214);
  let mut x228: u64 = 0;
  let mut x229: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x228, &mut x229, x227, x192, x216);
  let mut x230: u64 = 0;
  let mut x231: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x230, &mut x231, x229, x194, x218);
  let mut x232: u64 = 0;
  let mut x233: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x232, &mut x233, x231, x196, x220);
  let mut x234: u64 = 0;
  let mut x235: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x234, &mut x235, x233, x198, x222);
  let mut x236: u64 = 0;
  let mut x237: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x236, &mut x237, x235, x200, x224);
  let mut x238: u64 = 0;
  let mut x239: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x238, &mut x239, x237, ((x201 as u64) + (x189 as u64)), ((x225 as u64) + x205));
  let mut x240: u64 = 0;
  let mut x241: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x240, &mut x241, 0x0, x228, (arg1[5]));
  let mut x242: u64 = 0;
  let mut x243: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x242, &mut x243, x241, x230, (0x0 as u64));
  let mut x244: u64 = 0;
  let mut x245: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x244, &mut x245, x243, x232, (0x0 as u64));
  let mut x246: u64 = 0;
  let mut x247: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x246, &mut x247, x245, x234, (0x0 as u64));
  let mut x248: u64 = 0;
  let mut x249: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x248, &mut x249, x247, x236, (0x0 as u64));
  let mut x250: u64 = 0;
  let mut x251: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x250, &mut x251, x249, x238, (0x0 as u64));
  let mut x252: u64 = 0;
  let mut x253: u64 = 0;
  fiat_p384_mulx_u64(&mut x252, &mut x253, x240, 0x100000001);
  let mut x254: u64 = 0;
  let mut x255: u64 = 0;
  fiat_p384_mulx_u64(&mut x254, &mut x255, x252, 0xffffffffffffffff);
  let mut x256: u64 = 0;
  let mut x257: u64 = 0;
  fiat_p384_mulx_u64(&mut x256, &mut x257, x252, 0xffffffffffffffff);
  let mut x258: u64 = 0;
  let mut x259: u64 = 0;
  fiat_p384_mulx_u64(&mut x258, &mut x259, x252, 0xffffffffffffffff);
  let mut x260: u64 = 0;
  let mut x261: u64 = 0;
  fiat_p384_mulx_u64(&mut x260, &mut x261, x252, 0xfffffffffffffffe);
  let mut x262: u64 = 0;
  let mut x263: u64 = 0;
  fiat_p384_mulx_u64(&mut x262, &mut x263, x252, 0xffffffff00000000);
  let mut x264: u64 = 0;
  let mut x265: u64 = 0;
  fiat_p384_mulx_u64(&mut x264, &mut x265, x252, 0xffffffff);
  let mut x266: u64 = 0;
  let mut x267: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x266, &mut x267, 0x0, x265, x262);
  let mut x268: u64 = 0;
  let mut x269: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x268, &mut x269, x267, x263, x260);
  let mut x270: u64 = 0;
  let mut x271: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x270, &mut x271, x269, x261, x258);
  let mut x272: u64 = 0;
  let mut x273: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x272, &mut x273, x271, x259, x256);
  let mut x274: u64 = 0;
  let mut x275: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x274, &mut x275, x273, x257, x254);
  let mut x276: u64 = 0;
  let mut x277: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x276, &mut x277, 0x0, x240, x264);
  let mut x278: u64 = 0;
  let mut x279: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x278, &mut x279, x277, x242, x266);
  let mut x280: u64 = 0;
  let mut x281: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x280, &mut x281, x279, x244, x268);
  let mut x282: u64 = 0;
  let mut x283: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x282, &mut x283, x281, x246, x270);
  let mut x284: u64 = 0;
  let mut x285: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x284, &mut x285, x283, x248, x272);
  let mut x286: u64 = 0;
  let mut x287: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x286, &mut x287, x285, x250, x274);
  let mut x288: u64 = 0;
  let mut x289: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x288, &mut x289, x287, ((x251 as u64) + (x239 as u64)), ((x275 as u64) + x255));
  let mut x290: u64 = 0;
  let mut x291: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x290, &mut x291, 0x0, x278, 0xffffffff);
  let mut x292: u64 = 0;
  let mut x293: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x292, &mut x293, x291, x280, 0xffffffff00000000);
  let mut x294: u64 = 0;
  let mut x295: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x294, &mut x295, x293, x282, 0xfffffffffffffffe);
  let mut x296: u64 = 0;
  let mut x297: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x296, &mut x297, x295, x284, 0xffffffffffffffff);
  let mut x298: u64 = 0;
  let mut x299: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x298, &mut x299, x297, x286, 0xffffffffffffffff);
  let mut x300: u64 = 0;
  let mut x301: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x300, &mut x301, x299, x288, 0xffffffffffffffff);
  let mut x302: u64 = 0;
  let mut x303: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x302, &mut x303, x301, (x289 as u64), (0x0 as u64));
  let mut x304: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x304, x303, x290, x278);
  let mut x305: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x305, x303, x292, x280);
  let mut x306: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x306, x303, x294, x282);
  let mut x307: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x307, x303, x296, x284);
  let mut x308: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x308, x303, x298, x286);
  let mut x309: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x309, x303, x300, x288);
  out1[0] = x304;
  out1[1] = x305;
  out1[2] = x306;
  out1[3] = x307;
  out1[4] = x308;
  out1[5] = x309;
}

/// The function fiat_p384_to_montgomery translates a field element into the Montgomery domain.
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = eval arg1 mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_to_montgomery(out1: &mut [u64; 6], arg1: &[u64; 6]) -> () {
  let x1: u64 = (arg1[1]);
  let x2: u64 = (arg1[2]);
  let x3: u64 = (arg1[3]);
  let x4: u64 = (arg1[4]);
  let x5: u64 = (arg1[5]);
  let x6: u64 = (arg1[0]);
  let mut x7: u64 = 0;
  let mut x8: u64 = 0;
  fiat_p384_mulx_u64(&mut x7, &mut x8, x6, 0x200000000);
  let mut x9: u64 = 0;
  let mut x10: u64 = 0;
  fiat_p384_mulx_u64(&mut x9, &mut x10, x6, 0xfffffffe00000000);
  let mut x11: u64 = 0;
  let mut x12: u64 = 0;
  fiat_p384_mulx_u64(&mut x11, &mut x12, x6, 0x200000000);
  let mut x13: u64 = 0;
  let mut x14: u64 = 0;
  fiat_p384_mulx_u64(&mut x13, &mut x14, x6, 0xfffffffe00000001);
  let mut x15: u64 = 0;
  let mut x16: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x15, &mut x16, 0x0, x14, x11);
  let mut x17: u64 = 0;
  let mut x18: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x17, &mut x18, x16, x12, x9);
  let mut x19: u64 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x19, &mut x20, x18, x10, x7);
  let mut x21: u64 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x21, &mut x22, x20, x8, x6);
  let mut x23: u64 = 0;
  let mut x24: u64 = 0;
  fiat_p384_mulx_u64(&mut x23, &mut x24, x13, 0x100000001);
  let mut x25: u64 = 0;
  let mut x26: u64 = 0;
  fiat_p384_mulx_u64(&mut x25, &mut x26, x23, 0xffffffffffffffff);
  let mut x27: u64 = 0;
  let mut x28: u64 = 0;
  fiat_p384_mulx_u64(&mut x27, &mut x28, x23, 0xffffffffffffffff);
  let mut x29: u64 = 0;
  let mut x30: u64 = 0;
  fiat_p384_mulx_u64(&mut x29, &mut x30, x23, 0xffffffffffffffff);
  let mut x31: u64 = 0;
  let mut x32: u64 = 0;
  fiat_p384_mulx_u64(&mut x31, &mut x32, x23, 0xfffffffffffffffe);
  let mut x33: u64 = 0;
  let mut x34: u64 = 0;
  fiat_p384_mulx_u64(&mut x33, &mut x34, x23, 0xffffffff00000000);
  let mut x35: u64 = 0;
  let mut x36: u64 = 0;
  fiat_p384_mulx_u64(&mut x35, &mut x36, x23, 0xffffffff);
  let mut x37: u64 = 0;
  let mut x38: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x37, &mut x38, 0x0, x36, x33);
  let mut x39: u64 = 0;
  let mut x40: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x39, &mut x40, x38, x34, x31);
  let mut x41: u64 = 0;
  let mut x42: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x41, &mut x42, x40, x32, x29);
  let mut x43: u64 = 0;
  let mut x44: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x43, &mut x44, x42, x30, x27);
  let mut x45: u64 = 0;
  let mut x46: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x45, &mut x46, x44, x28, x25);
  let mut x47: u64 = 0;
  let mut x48: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x47, &mut x48, 0x0, x13, x35);
  let mut x49: u64 = 0;
  let mut x50: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x49, &mut x50, x48, x15, x37);
  let mut x51: u64 = 0;
  let mut x52: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x51, &mut x52, x50, x17, x39);
  let mut x53: u64 = 0;
  let mut x54: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x53, &mut x54, x52, x19, x41);
  let mut x55: u64 = 0;
  let mut x56: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x55, &mut x56, x54, x21, x43);
  let mut x57: u64 = 0;
  let mut x58: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x57, &mut x58, x56, (x22 as u64), x45);
  let mut x59: u64 = 0;
  let mut x60: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x59, &mut x60, x58, (0x0 as u64), ((x46 as u64) + x26));
  let mut x61: u64 = 0;
  let mut x62: u64 = 0;
  fiat_p384_mulx_u64(&mut x61, &mut x62, x1, 0x200000000);
  let mut x63: u64 = 0;
  let mut x64: u64 = 0;
  fiat_p384_mulx_u64(&mut x63, &mut x64, x1, 0xfffffffe00000000);
  let mut x65: u64 = 0;
  let mut x66: u64 = 0;
  fiat_p384_mulx_u64(&mut x65, &mut x66, x1, 0x200000000);
  let mut x67: u64 = 0;
  let mut x68: u64 = 0;
  fiat_p384_mulx_u64(&mut x67, &mut x68, x1, 0xfffffffe00000001);
  let mut x69: u64 = 0;
  let mut x70: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x69, &mut x70, 0x0, x68, x65);
  let mut x71: u64 = 0;
  let mut x72: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x71, &mut x72, x70, x66, x63);
  let mut x73: u64 = 0;
  let mut x74: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x73, &mut x74, x72, x64, x61);
  let mut x75: u64 = 0;
  let mut x76: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x75, &mut x76, x74, x62, x1);
  let mut x77: u64 = 0;
  let mut x78: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x77, &mut x78, 0x0, x49, x67);
  let mut x79: u64 = 0;
  let mut x80: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x79, &mut x80, x78, x51, x69);
  let mut x81: u64 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x81, &mut x82, x80, x53, x71);
  let mut x83: u64 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x83, &mut x84, x82, x55, x73);
  let mut x85: u64 = 0;
  let mut x86: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x85, &mut x86, x84, x57, x75);
  let mut x87: u64 = 0;
  let mut x88: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x87, &mut x88, x86, x59, (x76 as u64));
  let mut x89: u64 = 0;
  let mut x90: u64 = 0;
  fiat_p384_mulx_u64(&mut x89, &mut x90, x77, 0x100000001);
  let mut x91: u64 = 0;
  let mut x92: u64 = 0;
  fiat_p384_mulx_u64(&mut x91, &mut x92, x89, 0xffffffffffffffff);
  let mut x93: u64 = 0;
  let mut x94: u64 = 0;
  fiat_p384_mulx_u64(&mut x93, &mut x94, x89, 0xffffffffffffffff);
  let mut x95: u64 = 0;
  let mut x96: u64 = 0;
  fiat_p384_mulx_u64(&mut x95, &mut x96, x89, 0xffffffffffffffff);
  let mut x97: u64 = 0;
  let mut x98: u64 = 0;
  fiat_p384_mulx_u64(&mut x97, &mut x98, x89, 0xfffffffffffffffe);
  let mut x99: u64 = 0;
  let mut x100: u64 = 0;
  fiat_p384_mulx_u64(&mut x99, &mut x100, x89, 0xffffffff00000000);
  let mut x101: u64 = 0;
  let mut x102: u64 = 0;
  fiat_p384_mulx_u64(&mut x101, &mut x102, x89, 0xffffffff);
  let mut x103: u64 = 0;
  let mut x104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x103, &mut x104, 0x0, x102, x99);
  let mut x105: u64 = 0;
  let mut x106: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x105, &mut x106, x104, x100, x97);
  let mut x107: u64 = 0;
  let mut x108: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x107, &mut x108, x106, x98, x95);
  let mut x109: u64 = 0;
  let mut x110: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x109, &mut x110, x108, x96, x93);
  let mut x111: u64 = 0;
  let mut x112: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x111, &mut x112, x110, x94, x91);
  let mut x113: u64 = 0;
  let mut x114: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x113, &mut x114, 0x0, x77, x101);
  let mut x115: u64 = 0;
  let mut x116: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x115, &mut x116, x114, x79, x103);
  let mut x117: u64 = 0;
  let mut x118: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x117, &mut x118, x116, x81, x105);
  let mut x119: u64 = 0;
  let mut x120: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x119, &mut x120, x118, x83, x107);
  let mut x121: u64 = 0;
  let mut x122: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x121, &mut x122, x120, x85, x109);
  let mut x123: u64 = 0;
  let mut x124: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x123, &mut x124, x122, x87, x111);
  let mut x125: u64 = 0;
  let mut x126: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x125, &mut x126, x124, ((x88 as u64) + (x60 as u64)), ((x112 as u64) + x92));
  let mut x127: u64 = 0;
  let mut x128: u64 = 0;
  fiat_p384_mulx_u64(&mut x127, &mut x128, x2, 0x200000000);
  let mut x129: u64 = 0;
  let mut x130: u64 = 0;
  fiat_p384_mulx_u64(&mut x129, &mut x130, x2, 0xfffffffe00000000);
  let mut x131: u64 = 0;
  let mut x132: u64 = 0;
  fiat_p384_mulx_u64(&mut x131, &mut x132, x2, 0x200000000);
  let mut x133: u64 = 0;
  let mut x134: u64 = 0;
  fiat_p384_mulx_u64(&mut x133, &mut x134, x2, 0xfffffffe00000001);
  let mut x135: u64 = 0;
  let mut x136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x135, &mut x136, 0x0, x134, x131);
  let mut x137: u64 = 0;
  let mut x138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x137, &mut x138, x136, x132, x129);
  let mut x139: u64 = 0;
  let mut x140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x139, &mut x140, x138, x130, x127);
  let mut x141: u64 = 0;
  let mut x142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x141, &mut x142, x140, x128, x2);
  let mut x143: u64 = 0;
  let mut x144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x143, &mut x144, 0x0, x115, x133);
  let mut x145: u64 = 0;
  let mut x146: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x145, &mut x146, x144, x117, x135);
  let mut x147: u64 = 0;
  let mut x148: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x147, &mut x148, x146, x119, x137);
  let mut x149: u64 = 0;
  let mut x150: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x149, &mut x150, x148, x121, x139);
  let mut x151: u64 = 0;
  let mut x152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x151, &mut x152, x150, x123, x141);
  let mut x153: u64 = 0;
  let mut x154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x153, &mut x154, x152, x125, (x142 as u64));
  let mut x155: u64 = 0;
  let mut x156: u64 = 0;
  fiat_p384_mulx_u64(&mut x155, &mut x156, x143, 0x100000001);
  let mut x157: u64 = 0;
  let mut x158: u64 = 0;
  fiat_p384_mulx_u64(&mut x157, &mut x158, x155, 0xffffffffffffffff);
  let mut x159: u64 = 0;
  let mut x160: u64 = 0;
  fiat_p384_mulx_u64(&mut x159, &mut x160, x155, 0xffffffffffffffff);
  let mut x161: u64 = 0;
  let mut x162: u64 = 0;
  fiat_p384_mulx_u64(&mut x161, &mut x162, x155, 0xffffffffffffffff);
  let mut x163: u64 = 0;
  let mut x164: u64 = 0;
  fiat_p384_mulx_u64(&mut x163, &mut x164, x155, 0xfffffffffffffffe);
  let mut x165: u64 = 0;
  let mut x166: u64 = 0;
  fiat_p384_mulx_u64(&mut x165, &mut x166, x155, 0xffffffff00000000);
  let mut x167: u64 = 0;
  let mut x168: u64 = 0;
  fiat_p384_mulx_u64(&mut x167, &mut x168, x155, 0xffffffff);
  let mut x169: u64 = 0;
  let mut x170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x169, &mut x170, 0x0, x168, x165);
  let mut x171: u64 = 0;
  let mut x172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x171, &mut x172, x170, x166, x163);
  let mut x173: u64 = 0;
  let mut x174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x173, &mut x174, x172, x164, x161);
  let mut x175: u64 = 0;
  let mut x176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x175, &mut x176, x174, x162, x159);
  let mut x177: u64 = 0;
  let mut x178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x177, &mut x178, x176, x160, x157);
  let mut x179: u64 = 0;
  let mut x180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x179, &mut x180, 0x0, x143, x167);
  let mut x181: u64 = 0;
  let mut x182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x181, &mut x182, x180, x145, x169);
  let mut x183: u64 = 0;
  let mut x184: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x183, &mut x184, x182, x147, x171);
  let mut x185: u64 = 0;
  let mut x186: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x185, &mut x186, x184, x149, x173);
  let mut x187: u64 = 0;
  let mut x188: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x187, &mut x188, x186, x151, x175);
  let mut x189: u64 = 0;
  let mut x190: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x189, &mut x190, x188, x153, x177);
  let mut x191: u64 = 0;
  let mut x192: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x191, &mut x192, x190, ((x154 as u64) + (x126 as u64)), ((x178 as u64) + x158));
  let mut x193: u64 = 0;
  let mut x194: u64 = 0;
  fiat_p384_mulx_u64(&mut x193, &mut x194, x3, 0x200000000);
  let mut x195: u64 = 0;
  let mut x196: u64 = 0;
  fiat_p384_mulx_u64(&mut x195, &mut x196, x3, 0xfffffffe00000000);
  let mut x197: u64 = 0;
  let mut x198: u64 = 0;
  fiat_p384_mulx_u64(&mut x197, &mut x198, x3, 0x200000000);
  let mut x199: u64 = 0;
  let mut x200: u64 = 0;
  fiat_p384_mulx_u64(&mut x199, &mut x200, x3, 0xfffffffe00000001);
  let mut x201: u64 = 0;
  let mut x202: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x201, &mut x202, 0x0, x200, x197);
  let mut x203: u64 = 0;
  let mut x204: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x203, &mut x204, x202, x198, x195);
  let mut x205: u64 = 0;
  let mut x206: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x205, &mut x206, x204, x196, x193);
  let mut x207: u64 = 0;
  let mut x208: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x207, &mut x208, x206, x194, x3);
  let mut x209: u64 = 0;
  let mut x210: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x209, &mut x210, 0x0, x181, x199);
  let mut x211: u64 = 0;
  let mut x212: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x211, &mut x212, x210, x183, x201);
  let mut x213: u64 = 0;
  let mut x214: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x213, &mut x214, x212, x185, x203);
  let mut x215: u64 = 0;
  let mut x216: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x215, &mut x216, x214, x187, x205);
  let mut x217: u64 = 0;
  let mut x218: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x217, &mut x218, x216, x189, x207);
  let mut x219: u64 = 0;
  let mut x220: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x219, &mut x220, x218, x191, (x208 as u64));
  let mut x221: u64 = 0;
  let mut x222: u64 = 0;
  fiat_p384_mulx_u64(&mut x221, &mut x222, x209, 0x100000001);
  let mut x223: u64 = 0;
  let mut x224: u64 = 0;
  fiat_p384_mulx_u64(&mut x223, &mut x224, x221, 0xffffffffffffffff);
  let mut x225: u64 = 0;
  let mut x226: u64 = 0;
  fiat_p384_mulx_u64(&mut x225, &mut x226, x221, 0xffffffffffffffff);
  let mut x227: u64 = 0;
  let mut x228: u64 = 0;
  fiat_p384_mulx_u64(&mut x227, &mut x228, x221, 0xffffffffffffffff);
  let mut x229: u64 = 0;
  let mut x230: u64 = 0;
  fiat_p384_mulx_u64(&mut x229, &mut x230, x221, 0xfffffffffffffffe);
  let mut x231: u64 = 0;
  let mut x232: u64 = 0;
  fiat_p384_mulx_u64(&mut x231, &mut x232, x221, 0xffffffff00000000);
  let mut x233: u64 = 0;
  let mut x234: u64 = 0;
  fiat_p384_mulx_u64(&mut x233, &mut x234, x221, 0xffffffff);
  let mut x235: u64 = 0;
  let mut x236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x235, &mut x236, 0x0, x234, x231);
  let mut x237: u64 = 0;
  let mut x238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x237, &mut x238, x236, x232, x229);
  let mut x239: u64 = 0;
  let mut x240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x239, &mut x240, x238, x230, x227);
  let mut x241: u64 = 0;
  let mut x242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x241, &mut x242, x240, x228, x225);
  let mut x243: u64 = 0;
  let mut x244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x243, &mut x244, x242, x226, x223);
  let mut x245: u64 = 0;
  let mut x246: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x245, &mut x246, 0x0, x209, x233);
  let mut x247: u64 = 0;
  let mut x248: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x247, &mut x248, x246, x211, x235);
  let mut x249: u64 = 0;
  let mut x250: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x249, &mut x250, x248, x213, x237);
  let mut x251: u64 = 0;
  let mut x252: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x251, &mut x252, x250, x215, x239);
  let mut x253: u64 = 0;
  let mut x254: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x253, &mut x254, x252, x217, x241);
  let mut x255: u64 = 0;
  let mut x256: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x255, &mut x256, x254, x219, x243);
  let mut x257: u64 = 0;
  let mut x258: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x257, &mut x258, x256, ((x220 as u64) + (x192 as u64)), ((x244 as u64) + x224));
  let mut x259: u64 = 0;
  let mut x260: u64 = 0;
  fiat_p384_mulx_u64(&mut x259, &mut x260, x4, 0x200000000);
  let mut x261: u64 = 0;
  let mut x262: u64 = 0;
  fiat_p384_mulx_u64(&mut x261, &mut x262, x4, 0xfffffffe00000000);
  let mut x263: u64 = 0;
  let mut x264: u64 = 0;
  fiat_p384_mulx_u64(&mut x263, &mut x264, x4, 0x200000000);
  let mut x265: u64 = 0;
  let mut x266: u64 = 0;
  fiat_p384_mulx_u64(&mut x265, &mut x266, x4, 0xfffffffe00000001);
  let mut x267: u64 = 0;
  let mut x268: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x267, &mut x268, 0x0, x266, x263);
  let mut x269: u64 = 0;
  let mut x270: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x269, &mut x270, x268, x264, x261);
  let mut x271: u64 = 0;
  let mut x272: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x271, &mut x272, x270, x262, x259);
  let mut x273: u64 = 0;
  let mut x274: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x273, &mut x274, x272, x260, x4);
  let mut x275: u64 = 0;
  let mut x276: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x275, &mut x276, 0x0, x247, x265);
  let mut x277: u64 = 0;
  let mut x278: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x277, &mut x278, x276, x249, x267);
  let mut x279: u64 = 0;
  let mut x280: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x279, &mut x280, x278, x251, x269);
  let mut x281: u64 = 0;
  let mut x282: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x281, &mut x282, x280, x253, x271);
  let mut x283: u64 = 0;
  let mut x284: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x283, &mut x284, x282, x255, x273);
  let mut x285: u64 = 0;
  let mut x286: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x285, &mut x286, x284, x257, (x274 as u64));
  let mut x287: u64 = 0;
  let mut x288: u64 = 0;
  fiat_p384_mulx_u64(&mut x287, &mut x288, x275, 0x100000001);
  let mut x289: u64 = 0;
  let mut x290: u64 = 0;
  fiat_p384_mulx_u64(&mut x289, &mut x290, x287, 0xffffffffffffffff);
  let mut x291: u64 = 0;
  let mut x292: u64 = 0;
  fiat_p384_mulx_u64(&mut x291, &mut x292, x287, 0xffffffffffffffff);
  let mut x293: u64 = 0;
  let mut x294: u64 = 0;
  fiat_p384_mulx_u64(&mut x293, &mut x294, x287, 0xffffffffffffffff);
  let mut x295: u64 = 0;
  let mut x296: u64 = 0;
  fiat_p384_mulx_u64(&mut x295, &mut x296, x287, 0xfffffffffffffffe);
  let mut x297: u64 = 0;
  let mut x298: u64 = 0;
  fiat_p384_mulx_u64(&mut x297, &mut x298, x287, 0xffffffff00000000);
  let mut x299: u64 = 0;
  let mut x300: u64 = 0;
  fiat_p384_mulx_u64(&mut x299, &mut x300, x287, 0xffffffff);
  let mut x301: u64 = 0;
  let mut x302: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x301, &mut x302, 0x0, x300, x297);
  let mut x303: u64 = 0;
  let mut x304: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x303, &mut x304, x302, x298, x295);
  let mut x305: u64 = 0;
  let mut x306: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x305, &mut x306, x304, x296, x293);
  let mut x307: u64 = 0;
  let mut x308: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x307, &mut x308, x306, x294, x291);
  let mut x309: u64 = 0;
  let mut x310: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x309, &mut x310, x308, x292, x289);
  let mut x311: u64 = 0;
  let mut x312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x311, &mut x312, 0x0, x275, x299);
  let mut x313: u64 = 0;
  let mut x314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x313, &mut x314, x312, x277, x301);
  let mut x315: u64 = 0;
  let mut x316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x315, &mut x316, x314, x279, x303);
  let mut x317: u64 = 0;
  let mut x318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x317, &mut x318, x316, x281, x305);
  let mut x319: u64 = 0;
  let mut x320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x319, &mut x320, x318, x283, x307);
  let mut x321: u64 = 0;
  let mut x322: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x321, &mut x322, x320, x285, x309);
  let mut x323: u64 = 0;
  let mut x324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x323, &mut x324, x322, ((x286 as u64) + (x258 as u64)), ((x310 as u64) + x290));
  let mut x325: u64 = 0;
  let mut x326: u64 = 0;
  fiat_p384_mulx_u64(&mut x325, &mut x326, x5, 0x200000000);
  let mut x327: u64 = 0;
  let mut x328: u64 = 0;
  fiat_p384_mulx_u64(&mut x327, &mut x328, x5, 0xfffffffe00000000);
  let mut x329: u64 = 0;
  let mut x330: u64 = 0;
  fiat_p384_mulx_u64(&mut x329, &mut x330, x5, 0x200000000);
  let mut x331: u64 = 0;
  let mut x332: u64 = 0;
  fiat_p384_mulx_u64(&mut x331, &mut x332, x5, 0xfffffffe00000001);
  let mut x333: u64 = 0;
  let mut x334: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x333, &mut x334, 0x0, x332, x329);
  let mut x335: u64 = 0;
  let mut x336: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x335, &mut x336, x334, x330, x327);
  let mut x337: u64 = 0;
  let mut x338: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x337, &mut x338, x336, x328, x325);
  let mut x339: u64 = 0;
  let mut x340: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x339, &mut x340, x338, x326, x5);
  let mut x341: u64 = 0;
  let mut x342: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x341, &mut x342, 0x0, x313, x331);
  let mut x343: u64 = 0;
  let mut x344: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x343, &mut x344, x342, x315, x333);
  let mut x345: u64 = 0;
  let mut x346: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x345, &mut x346, x344, x317, x335);
  let mut x347: u64 = 0;
  let mut x348: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x347, &mut x348, x346, x319, x337);
  let mut x349: u64 = 0;
  let mut x350: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x349, &mut x350, x348, x321, x339);
  let mut x351: u64 = 0;
  let mut x352: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x351, &mut x352, x350, x323, (x340 as u64));
  let mut x353: u64 = 0;
  let mut x354: u64 = 0;
  fiat_p384_mulx_u64(&mut x353, &mut x354, x341, 0x100000001);
  let mut x355: u64 = 0;
  let mut x356: u64 = 0;
  fiat_p384_mulx_u64(&mut x355, &mut x356, x353, 0xffffffffffffffff);
  let mut x357: u64 = 0;
  let mut x358: u64 = 0;
  fiat_p384_mulx_u64(&mut x357, &mut x358, x353, 0xffffffffffffffff);
  let mut x359: u64 = 0;
  let mut x360: u64 = 0;
  fiat_p384_mulx_u64(&mut x359, &mut x360, x353, 0xffffffffffffffff);
  let mut x361: u64 = 0;
  let mut x362: u64 = 0;
  fiat_p384_mulx_u64(&mut x361, &mut x362, x353, 0xfffffffffffffffe);
  let mut x363: u64 = 0;
  let mut x364: u64 = 0;
  fiat_p384_mulx_u64(&mut x363, &mut x364, x353, 0xffffffff00000000);
  let mut x365: u64 = 0;
  let mut x366: u64 = 0;
  fiat_p384_mulx_u64(&mut x365, &mut x366, x353, 0xffffffff);
  let mut x367: u64 = 0;
  let mut x368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x367, &mut x368, 0x0, x366, x363);
  let mut x369: u64 = 0;
  let mut x370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x369, &mut x370, x368, x364, x361);
  let mut x371: u64 = 0;
  let mut x372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x371, &mut x372, x370, x362, x359);
  let mut x373: u64 = 0;
  let mut x374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x373, &mut x374, x372, x360, x357);
  let mut x375: u64 = 0;
  let mut x376: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x375, &mut x376, x374, x358, x355);
  let mut x377: u64 = 0;
  let mut x378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x377, &mut x378, 0x0, x341, x365);
  let mut x379: u64 = 0;
  let mut x380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x379, &mut x380, x378, x343, x367);
  let mut x381: u64 = 0;
  let mut x382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x381, &mut x382, x380, x345, x369);
  let mut x383: u64 = 0;
  let mut x384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x383, &mut x384, x382, x347, x371);
  let mut x385: u64 = 0;
  let mut x386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x385, &mut x386, x384, x349, x373);
  let mut x387: u64 = 0;
  let mut x388: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x387, &mut x388, x386, x351, x375);
  let mut x389: u64 = 0;
  let mut x390: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x389, &mut x390, x388, ((x352 as u64) + (x324 as u64)), ((x376 as u64) + x356));
  let mut x391: u64 = 0;
  let mut x392: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x391, &mut x392, 0x0, x379, 0xffffffff);
  let mut x393: u64 = 0;
  let mut x394: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x393, &mut x394, x392, x381, 0xffffffff00000000);
  let mut x395: u64 = 0;
  let mut x396: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x395, &mut x396, x394, x383, 0xfffffffffffffffe);
  let mut x397: u64 = 0;
  let mut x398: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x397, &mut x398, x396, x385, 0xffffffffffffffff);
  let mut x399: u64 = 0;
  let mut x400: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x399, &mut x400, x398, x387, 0xffffffffffffffff);
  let mut x401: u64 = 0;
  let mut x402: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x401, &mut x402, x400, x389, 0xffffffffffffffff);
  let mut x403: u64 = 0;
  let mut x404: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x403, &mut x404, x402, (x390 as u64), (0x0 as u64));
  let mut x405: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x405, x404, x391, x379);
  let mut x406: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x406, x404, x393, x381);
  let mut x407: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x407, x404, x395, x383);
  let mut x408: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x408, x404, x397, x385);
  let mut x409: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x409, x404, x399, x387);
  let mut x410: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x410, x404, x401, x389);
  out1[0] = x405;
  out1[1] = x406;
  out1[2] = x407;
  out1[3] = x408;
  out1[4] = x409;
  out1[5] = x410;
}

/// The function fiat_p384_nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_p384_nonzero(out1: &mut u64, arg1: &[u64; 6]) -> () {
  let x1: u64 = ((arg1[0]) | ((arg1[1]) | ((arg1[2]) | ((arg1[3]) | ((arg1[4]) | (arg1[5]))))));
  *out1 = x1;
}

/// The function fiat_p384_selectznz is a multi-limb conditional select.
/// Postconditions:
///   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_selectznz(out1: &mut [u64; 6], arg1: fiat_p384_u1, arg2: &[u64; 6], arg3: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x5, arg1, (arg2[4]), (arg3[4]));
  let mut x6: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x6, arg1, (arg2[5]), (arg3[5]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
}

/// The function fiat_p384_to_bytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..47]
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
#[inline]
pub fn fiat_p384_to_bytes(out1: &mut [u8; 48], arg1: &[u64; 6]) -> () {
  let x1: u64 = (arg1[5]);
  let x2: u64 = (arg1[4]);
  let x3: u64 = (arg1[3]);
  let x4: u64 = (arg1[2]);
  let x5: u64 = (arg1[1]);
  let x6: u64 = (arg1[0]);
  let x7: u8 = ((x6 & (0xff as u64)) as u8);
  let x8: u64 = (x6 >> 8);
  let x9: u8 = ((x8 & (0xff as u64)) as u8);
  let x10: u64 = (x8 >> 8);
  let x11: u8 = ((x10 & (0xff as u64)) as u8);
  let x12: u64 = (x10 >> 8);
  let x13: u8 = ((x12 & (0xff as u64)) as u8);
  let x14: u64 = (x12 >> 8);
  let x15: u8 = ((x14 & (0xff as u64)) as u8);
  let x16: u64 = (x14 >> 8);
  let x17: u8 = ((x16 & (0xff as u64)) as u8);
  let x18: u64 = (x16 >> 8);
  let x19: u8 = ((x18 & (0xff as u64)) as u8);
  let x20: u8 = ((x18 >> 8) as u8);
  let x21: u8 = ((x5 & (0xff as u64)) as u8);
  let x22: u64 = (x5 >> 8);
  let x23: u8 = ((x22 & (0xff as u64)) as u8);
  let x24: u64 = (x22 >> 8);
  let x25: u8 = ((x24 & (0xff as u64)) as u8);
  let x26: u64 = (x24 >> 8);
  let x27: u8 = ((x26 & (0xff as u64)) as u8);
  let x28: u64 = (x26 >> 8);
  let x29: u8 = ((x28 & (0xff as u64)) as u8);
  let x30: u64 = (x28 >> 8);
  let x31: u8 = ((x30 & (0xff as u64)) as u8);
  let x32: u64 = (x30 >> 8);
  let x33: u8 = ((x32 & (0xff as u64)) as u8);
  let x34: u8 = ((x32 >> 8) as u8);
  let x35: u8 = ((x4 & (0xff as u64)) as u8);
  let x36: u64 = (x4 >> 8);
  let x37: u8 = ((x36 & (0xff as u64)) as u8);
  let x38: u64 = (x36 >> 8);
  let x39: u8 = ((x38 & (0xff as u64)) as u8);
  let x40: u64 = (x38 >> 8);
  let x41: u8 = ((x40 & (0xff as u64)) as u8);
  let x42: u64 = (x40 >> 8);
  let x43: u8 = ((x42 & (0xff as u64)) as u8);
  let x44: u64 = (x42 >> 8);
  let x45: u8 = ((x44 & (0xff as u64)) as u8);
  let x46: u64 = (x44 >> 8);
  let x47: u8 = ((x46 & (0xff as u64)) as u8);
  let x48: u8 = ((x46 >> 8) as u8);
  let x49: u8 = ((x3 & (0xff as u64)) as u8);
  let x50: u64 = (x3 >> 8);
  let x51: u8 = ((x50 & (0xff as u64)) as u8);
  let x52: u64 = (x50 >> 8);
  let x53: u8 = ((x52 & (0xff as u64)) as u8);
  let x54: u64 = (x52 >> 8);
  let x55: u8 = ((x54 & (0xff as u64)) as u8);
  let x56: u64 = (x54 >> 8);
  let x57: u8 = ((x56 & (0xff as u64)) as u8);
  let x58: u64 = (x56 >> 8);
  let x59: u8 = ((x58 & (0xff as u64)) as u8);
  let x60: u64 = (x58 >> 8);
  let x61: u8 = ((x60 & (0xff as u64)) as u8);
  let x62: u8 = ((x60 >> 8) as u8);
  let x63: u8 = ((x2 & (0xff as u64)) as u8);
  let x64: u64 = (x2 >> 8);
  let x65: u8 = ((x64 & (0xff as u64)) as u8);
  let x66: u64 = (x64 >> 8);
  let x67: u8 = ((x66 & (0xff as u64)) as u8);
  let x68: u64 = (x66 >> 8);
  let x69: u8 = ((x68 & (0xff as u64)) as u8);
  let x70: u64 = (x68 >> 8);
  let x71: u8 = ((x70 & (0xff as u64)) as u8);
  let x72: u64 = (x70 >> 8);
  let x73: u8 = ((x72 & (0xff as u64)) as u8);
  let x74: u64 = (x72 >> 8);
  let x75: u8 = ((x74 & (0xff as u64)) as u8);
  let x76: u8 = ((x74 >> 8) as u8);
  let x77: u8 = ((x1 & (0xff as u64)) as u8);
  let x78: u64 = (x1 >> 8);
  let x79: u8 = ((x78 & (0xff as u64)) as u8);
  let x80: u64 = (x78 >> 8);
  let x81: u8 = ((x80 & (0xff as u64)) as u8);
  let x82: u64 = (x80 >> 8);
  let x83: u8 = ((x82 & (0xff as u64)) as u8);
  let x84: u64 = (x82 >> 8);
  let x85: u8 = ((x84 & (0xff as u64)) as u8);
  let x86: u64 = (x84 >> 8);
  let x87: u8 = ((x86 & (0xff as u64)) as u8);
  let x88: u64 = (x86 >> 8);
  let x89: u8 = ((x88 & (0xff as u64)) as u8);
  let x90: u8 = ((x88 >> 8) as u8);
  out1[0] = x7;
  out1[1] = x9;
  out1[2] = x11;
  out1[3] = x13;
  out1[4] = x15;
  out1[5] = x17;
  out1[6] = x19;
  out1[7] = x20;
  out1[8] = x21;
  out1[9] = x23;
  out1[10] = x25;
  out1[11] = x27;
  out1[12] = x29;
  out1[13] = x31;
  out1[14] = x33;
  out1[15] = x34;
  out1[16] = x35;
  out1[17] = x37;
  out1[18] = x39;
  out1[19] = x41;
  out1[20] = x43;
  out1[21] = x45;
  out1[22] = x47;
  out1[23] = x48;
  out1[24] = x49;
  out1[25] = x51;
  out1[26] = x53;
  out1[27] = x55;
  out1[28] = x57;
  out1[29] = x59;
  out1[30] = x61;
  out1[31] = x62;
  out1[32] = x63;
  out1[33] = x65;
  out1[34] = x67;
  out1[35] = x69;
  out1[36] = x71;
  out1[37] = x73;
  out1[38] = x75;
  out1[39] = x76;
  out1[40] = x77;
  out1[41] = x79;
  out1[42] = x81;
  out1[43] = x83;
  out1[44] = x85;
  out1[45] = x87;
  out1[46] = x89;
  out1[47] = x90;
}

/// The function fiat_p384_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
/// Preconditions:
///   0 ≤ bytes_eval arg1 < m
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_from_bytes(out1: &mut [u64; 6], arg1: &[u8; 48]) -> () {
  let x1: u64 = (((arg1[47]) as u64) << 56);
  let x2: u64 = (((arg1[46]) as u64) << 48);
  let x3: u64 = (((arg1[45]) as u64) << 40);
  let x4: u64 = (((arg1[44]) as u64) << 32);
  let x5: u64 = (((arg1[43]) as u64) << 24);
  let x6: u64 = (((arg1[42]) as u64) << 16);
  let x7: u64 = (((arg1[41]) as u64) << 8);
  let x8: u8 = (arg1[40]);
  let x9: u64 = (((arg1[39]) as u64) << 56);
  let x10: u64 = (((arg1[38]) as u64) << 48);
  let x11: u64 = (((arg1[37]) as u64) << 40);
  let x12: u64 = (((arg1[36]) as u64) << 32);
  let x13: u64 = (((arg1[35]) as u64) << 24);
  let x14: u64 = (((arg1[34]) as u64) << 16);
  let x15: u64 = (((arg1[33]) as u64) << 8);
  let x16: u8 = (arg1[32]);
  let x17: u64 = (((arg1[31]) as u64) << 56);
  let x18: u64 = (((arg1[30]) as u64) << 48);
  let x19: u64 = (((arg1[29]) as u64) << 40);
  let x20: u64 = (((arg1[28]) as u64) << 32);
  let x21: u64 = (((arg1[27]) as u64) << 24);
  let x22: u64 = (((arg1[26]) as u64) << 16);
  let x23: u64 = (((arg1[25]) as u64) << 8);
  let x24: u8 = (arg1[24]);
  let x25: u64 = (((arg1[23]) as u64) << 56);
  let x26: u64 = (((arg1[22]) as u64) << 48);
  let x27: u64 = (((arg1[21]) as u64) << 40);
  let x28: u64 = (((arg1[20]) as u64) << 32);
  let x29: u64 = (((arg1[19]) as u64) << 24);
  let x30: u64 = (((arg1[18]) as u64) << 16);
  let x31: u64 = (((arg1[17]) as u64) << 8);
  let x32: u8 = (arg1[16]);
  let x33: u64 = (((arg1[15]) as u64) << 56);
  let x34: u64 = (((arg1[14]) as u64) << 48);
  let x35: u64 = (((arg1[13]) as u64) << 40);
  let x36: u64 = (((arg1[12]) as u64) << 32);
  let x37: u64 = (((arg1[11]) as u64) << 24);
  let x38: u64 = (((arg1[10]) as u64) << 16);
  let x39: u64 = (((arg1[9]) as u64) << 8);
  let x40: u8 = (arg1[8]);
  let x41: u64 = (((arg1[7]) as u64) << 56);
  let x42: u64 = (((arg1[6]) as u64) << 48);
  let x43: u64 = (((arg1[5]) as u64) << 40);
  let x44: u64 = (((arg1[4]) as u64) << 32);
  let x45: u64 = (((arg1[3]) as u64) << 24);
  let x46: u64 = (((arg1[2]) as u64) << 16);
  let x47: u64 = (((arg1[1]) as u64) << 8);
  let x48: u8 = (arg1[0]);
  let x49: u64 = (x47 + (x48 as u64));
  let x50: u64 = (x46 + x49);
  let x51: u64 = (x45 + x50);
  let x52: u64 = (x44 + x51);
  let x53: u64 = (x43 + x52);
  let x54: u64 = (x42 + x53);
  let x55: u64 = (x41 + x54);
  let x56: u64 = (x39 + (x40 as u64));
  let x57: u64 = (x38 + x56);
  let x58: u64 = (x37 + x57);
  let x59: u64 = (x36 + x58);
  let x60: u64 = (x35 + x59);
  let x61: u64 = (x34 + x60);
  let x62: u64 = (x33 + x61);
  let x63: u64 = (x31 + (x32 as u64));
  let x64: u64 = (x30 + x63);
  let x65: u64 = (x29 + x64);
  let x66: u64 = (x28 + x65);
  let x67: u64 = (x27 + x66);
  let x68: u64 = (x26 + x67);
  let x69: u64 = (x25 + x68);
  let x70: u64 = (x23 + (x24 as u64));
  let x71: u64 = (x22 + x70);
  let x72: u64 = (x21 + x71);
  let x73: u64 = (x20 + x72);
  let x74: u64 = (x19 + x73);
  let x75: u64 = (x18 + x74);
  let x76: u64 = (x17 + x75);
  let x77: u64 = (x15 + (x16 as u64));
  let x78: u64 = (x14 + x77);
  let x79: u64 = (x13 + x78);
  let x80: u64 = (x12 + x79);
  let x81: u64 = (x11 + x80);
  let x82: u64 = (x10 + x81);
  let x83: u64 = (x9 + x82);
  let x84: u64 = (x7 + (x8 as u64));
  let x85: u64 = (x6 + x84);
  let x86: u64 = (x5 + x85);
  let x87: u64 = (x4 + x86);
  let x88: u64 = (x3 + x87);
  let x89: u64 = (x2 + x88);
  let x90: u64 = (x1 + x89);
  out1[0] = x55;
  out1[1] = x62;
  out1[2] = x69;
  out1[3] = x76;
  out1[4] = x83;
  out1[5] = x90;
}

/// The function fiat_p384_set_one returns the field element one in the Montgomery domain.
/// Postconditions:
///   eval (from_montgomery out1) mod m = 1 mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_set_one(out1: &mut [u64; 6]) -> () {
  out1[0] = 0xffffffff00000001;
  out1[1] = 0xffffffff;
  out1[2] = (0x1 as u64);
  out1[3] = (0x0 as u64);
  out1[4] = (0x0 as u64);
  out1[5] = (0x0 as u64);
}

/// The function fiat_p384_twos_complement_word_to_montgomery_no_encode computes a divstep on wordsized integers.
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_twos_complement_word_to_montgomery_no_encode(out1: &mut [u64; 6], arg1: u64) -> () {
  let x1: fiat_p384_u1 = ((arg1 >> 63) as fiat_p384_u1);
  let x2: u64 = (((((!arg1) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x3: u64 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3, &mut x4, 0x0, (0x0 as u64), x2);
  let mut x5: u64 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x5, &mut x6, x4, (0x0 as u64), (0x0 as u64));
  let mut x7: u64 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x7, &mut x8, x6, (0x0 as u64), (0x0 as u64));
  let mut x9: u64 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x9, &mut x10, x8, (0x0 as u64), (0x0 as u64));
  let mut x11: u64 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x11, &mut x12, x10, (0x0 as u64), (0x0 as u64));
  let mut x13: u64 = 0;
  let mut x14: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x13, &mut x14, x12, (0x0 as u64), (0x0 as u64));
  let mut x15: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x15, x14, (0x0 as u64), 0xffffffffffffffff);
  let mut x16: u64 = 0;
  let mut x17: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x16, &mut x17, 0x0, x3, (x15 & 0xffffffff));
  let mut x18: u64 = 0;
  let mut x19: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x18, &mut x19, x17, x5, (x15 & 0xffffffff00000000));
  let mut x20: u64 = 0;
  let mut x21: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x20, &mut x21, x19, x7, (x15 & 0xfffffffffffffffe));
  let mut x22: u64 = 0;
  let mut x23: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x22, &mut x23, x21, x9, x15);
  let mut x24: u64 = 0;
  let mut x25: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x24, &mut x25, x23, x11, x15);
  let mut x26: u64 = 0;
  let mut x27: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x26, &mut x27, x25, x13, x15);
  let mut x28: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x28, x1, arg1, x16);
  let mut x29: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x29, x1, (0x0 as u64), x18);
  let mut x30: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x30, x1, (0x0 as u64), x20);
  let mut x31: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x31, x1, (0x0 as u64), x22);
  let mut x32: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x32, x1, (0x0 as u64), x24);
  let mut x33: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x33, x1, (0x0 as u64), x26);
  out1[0] = x28;
  out1[1] = x29;
  out1[2] = x30;
  out1[3] = x31;
  out1[4] = x32;
  out1[5] = x33;
}

/// The function fiat_p384_msat returns the saturated represtation of the prime modulus.
/// Postconditions:
///   twos_complement_eval out1 = m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_msat(out1: &mut [u64; 7]) -> () {
  out1[0] = 0xffffffff;
  out1[1] = 0xffffffff00000000;
  out1[2] = 0xfffffffffffffffe;
  out1[3] = 0xffffffffffffffff;
  out1[4] = 0xffffffffffffffff;
  out1[5] = 0xffffffffffffffff;
  out1[6] = (0x0 as u64);
}

/// The function fiat_p384_sat_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_sat_from_bytes(out1: &mut [u64; 7], arg1: &[u8; 48]) -> () {
  let x1: u64 = (((arg1[47]) as u64) << 56);
  let x2: u64 = (((arg1[46]) as u64) << 48);
  let x3: u64 = (((arg1[45]) as u64) << 40);
  let x4: u64 = (((arg1[44]) as u64) << 32);
  let x5: u64 = (((arg1[43]) as u64) << 24);
  let x6: u64 = (((arg1[42]) as u64) << 16);
  let x7: u64 = (((arg1[41]) as u64) << 8);
  let x8: u8 = (arg1[40]);
  let x9: u64 = (((arg1[39]) as u64) << 56);
  let x10: u64 = (((arg1[38]) as u64) << 48);
  let x11: u64 = (((arg1[37]) as u64) << 40);
  let x12: u64 = (((arg1[36]) as u64) << 32);
  let x13: u64 = (((arg1[35]) as u64) << 24);
  let x14: u64 = (((arg1[34]) as u64) << 16);
  let x15: u64 = (((arg1[33]) as u64) << 8);
  let x16: u8 = (arg1[32]);
  let x17: u64 = (((arg1[31]) as u64) << 56);
  let x18: u64 = (((arg1[30]) as u64) << 48);
  let x19: u64 = (((arg1[29]) as u64) << 40);
  let x20: u64 = (((arg1[28]) as u64) << 32);
  let x21: u64 = (((arg1[27]) as u64) << 24);
  let x22: u64 = (((arg1[26]) as u64) << 16);
  let x23: u64 = (((arg1[25]) as u64) << 8);
  let x24: u8 = (arg1[24]);
  let x25: u64 = (((arg1[23]) as u64) << 56);
  let x26: u64 = (((arg1[22]) as u64) << 48);
  let x27: u64 = (((arg1[21]) as u64) << 40);
  let x28: u64 = (((arg1[20]) as u64) << 32);
  let x29: u64 = (((arg1[19]) as u64) << 24);
  let x30: u64 = (((arg1[18]) as u64) << 16);
  let x31: u64 = (((arg1[17]) as u64) << 8);
  let x32: u8 = (arg1[16]);
  let x33: u64 = (((arg1[15]) as u64) << 56);
  let x34: u64 = (((arg1[14]) as u64) << 48);
  let x35: u64 = (((arg1[13]) as u64) << 40);
  let x36: u64 = (((arg1[12]) as u64) << 32);
  let x37: u64 = (((arg1[11]) as u64) << 24);
  let x38: u64 = (((arg1[10]) as u64) << 16);
  let x39: u64 = (((arg1[9]) as u64) << 8);
  let x40: u8 = (arg1[8]);
  let x41: u64 = (((arg1[7]) as u64) << 56);
  let x42: u64 = (((arg1[6]) as u64) << 48);
  let x43: u64 = (((arg1[5]) as u64) << 40);
  let x44: u64 = (((arg1[4]) as u64) << 32);
  let x45: u64 = (((arg1[3]) as u64) << 24);
  let x46: u64 = (((arg1[2]) as u64) << 16);
  let x47: u64 = (((arg1[1]) as u64) << 8);
  let x48: u8 = (arg1[0]);
  let x49: u64 = (x47 + (x48 as u64));
  let x50: u64 = (x46 + x49);
  let x51: u64 = (x45 + x50);
  let x52: u64 = (x44 + x51);
  let x53: u64 = (x43 + x52);
  let x54: u64 = (x42 + x53);
  let x55: u64 = (x41 + x54);
  let x56: u64 = (x39 + (x40 as u64));
  let x57: u64 = (x38 + x56);
  let x58: u64 = (x37 + x57);
  let x59: u64 = (x36 + x58);
  let x60: u64 = (x35 + x59);
  let x61: u64 = (x34 + x60);
  let x62: u64 = (x33 + x61);
  let x63: u64 = (x31 + (x32 as u64));
  let x64: u64 = (x30 + x63);
  let x65: u64 = (x29 + x64);
  let x66: u64 = (x28 + x65);
  let x67: u64 = (x27 + x66);
  let x68: u64 = (x26 + x67);
  let x69: u64 = (x25 + x68);
  let x70: u64 = (x23 + (x24 as u64));
  let x71: u64 = (x22 + x70);
  let x72: u64 = (x21 + x71);
  let x73: u64 = (x20 + x72);
  let x74: u64 = (x19 + x73);
  let x75: u64 = (x18 + x74);
  let x76: u64 = (x17 + x75);
  let x77: u64 = (x15 + (x16 as u64));
  let x78: u64 = (x14 + x77);
  let x79: u64 = (x13 + x78);
  let x80: u64 = (x12 + x79);
  let x81: u64 = (x11 + x80);
  let x82: u64 = (x10 + x81);
  let x83: u64 = (x9 + x82);
  let x84: u64 = (x7 + (x8 as u64));
  let x85: u64 = (x6 + x84);
  let x86: u64 = (x5 + x85);
  let x87: u64 = (x4 + x86);
  let x88: u64 = (x3 + x87);
  let x89: u64 = (x2 + x88);
  let x90: u64 = (x1 + x89);
  out1[0] = x55;
  out1[1] = x62;
  out1[2] = x69;
  out1[3] = x76;
  out1[4] = x83;
  out1[5] = x90;
  out1[6] = (0x0 as u64);
}

/// The function fiat_p384_divstep computes a divstep.
/// Preconditions:
///   0 ≤ eval arg4 < m
///   0 ≤ eval arg5 < m
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
///   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
///   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
///   eval (from_montgomery out4) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval (from_montgomery arg5)) mod m else (2 * eval (from_montgomery arg4)) mod m)
///   eval (from_montgomery out5) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval (from_montgomery arg4) - eval (from_montgomery arg4)) mod m else (eval (from_montgomery arg5) + (twos_complement_eval arg3 mod 2) * eval (from_montgomery arg4)) mod m)
///   0 ≤ eval out5 < m
///   0 ≤ eval out4 < m
///   0 ≤ eval out2 < m
///   0 ≤ eval out3 < m
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg4: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg5: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out4: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out5: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_divstep(out1: &mut u64, out2: &mut [u64; 7], out3: &mut [u64; 7], out4: &mut [u64; 6], out5: &mut [u64; 6], arg1: u64, arg2: &[u64; 7], arg3: &[u64; 7], arg4: &[u64; 6], arg5: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1, &mut x2, 0x0, (!arg1), (0x1 as u64));
  let x3: fiat_p384_u1 = (((x1 >> 63) as fiat_p384_u1) & (((arg3[0]) & (0x1 as u64)) as fiat_p384_u1));
  let mut x4: u64 = 0;
  let mut x5: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x4, &mut x5, 0x0, (!arg1), (0x1 as u64));
  let mut x6: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x6, x3, arg1, x4);
  let mut x7: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x7, x3, (arg2[0]), (arg3[0]));
  let mut x8: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x8, x3, (arg2[1]), (arg3[1]));
  let mut x9: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x9, x3, (arg2[2]), (arg3[2]));
  let mut x10: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x10, x3, (arg2[3]), (arg3[3]));
  let mut x11: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x11, x3, (arg2[4]), (arg3[4]));
  let mut x12: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x12, x3, (arg2[5]), (arg3[5]));
  let mut x13: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x13, x3, (arg2[6]), (arg3[6]));
  let mut x14: u64 = 0;
  let mut x15: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x14, &mut x15, 0x0, (0x1 as u64), (!(arg2[0])));
  let mut x16: u64 = 0;
  let mut x17: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x16, &mut x17, x15, (0x0 as u64), (!(arg2[1])));
  let mut x18: u64 = 0;
  let mut x19: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x18, &mut x19, x17, (0x0 as u64), (!(arg2[2])));
  let mut x20: u64 = 0;
  let mut x21: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x20, &mut x21, x19, (0x0 as u64), (!(arg2[3])));
  let mut x22: u64 = 0;
  let mut x23: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x22, &mut x23, x21, (0x0 as u64), (!(arg2[4])));
  let mut x24: u64 = 0;
  let mut x25: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x24, &mut x25, x23, (0x0 as u64), (!(arg2[5])));
  let mut x26: u64 = 0;
  let mut x27: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x26, &mut x27, x25, (0x0 as u64), (!(arg2[6])));
  let mut x28: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x28, x3, (arg3[0]), x14);
  let mut x29: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x29, x3, (arg3[1]), x16);
  let mut x30: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x30, x3, (arg3[2]), x18);
  let mut x31: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x31, x3, (arg3[3]), x20);
  let mut x32: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x32, x3, (arg3[4]), x22);
  let mut x33: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x33, x3, (arg3[5]), x24);
  let mut x34: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x34, x3, (arg3[6]), x26);
  let mut x35: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x35, x3, (arg4[0]), (arg5[0]));
  let mut x36: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x36, x3, (arg4[1]), (arg5[1]));
  let mut x37: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x37, x3, (arg4[2]), (arg5[2]));
  let mut x38: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x38, x3, (arg4[3]), (arg5[3]));
  let mut x39: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x39, x3, (arg4[4]), (arg5[4]));
  let mut x40: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x40, x3, (arg4[5]), (arg5[5]));
  let mut x41: u64 = 0;
  let mut x42: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x41, &mut x42, 0x0, x35, x35);
  let mut x43: u64 = 0;
  let mut x44: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x43, &mut x44, x42, x36, x36);
  let mut x45: u64 = 0;
  let mut x46: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x45, &mut x46, x44, x37, x37);
  let mut x47: u64 = 0;
  let mut x48: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x47, &mut x48, x46, x38, x38);
  let mut x49: u64 = 0;
  let mut x50: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x49, &mut x50, x48, x39, x39);
  let mut x51: u64 = 0;
  let mut x52: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x51, &mut x52, x50, x40, x40);
  let mut x53: u64 = 0;
  let mut x54: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x53, &mut x54, 0x0, x41, 0xffffffff);
  let mut x55: u64 = 0;
  let mut x56: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x55, &mut x56, x54, x43, 0xffffffff00000000);
  let mut x57: u64 = 0;
  let mut x58: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x57, &mut x58, x56, x45, 0xfffffffffffffffe);
  let mut x59: u64 = 0;
  let mut x60: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x59, &mut x60, x58, x47, 0xffffffffffffffff);
  let mut x61: u64 = 0;
  let mut x62: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x61, &mut x62, x60, x49, 0xffffffffffffffff);
  let mut x63: u64 = 0;
  let mut x64: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x63, &mut x64, x62, x51, 0xffffffffffffffff);
  let mut x65: u64 = 0;
  let mut x66: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x65, &mut x66, x64, (x52 as u64), (0x0 as u64));
  let x67: u64 = (arg4[5]);
  let x68: u64 = (arg4[4]);
  let x69: u64 = (arg4[3]);
  let x70: u64 = (arg4[2]);
  let x71: u64 = (arg4[1]);
  let x72: u64 = (arg4[0]);
  let mut x73: u64 = 0;
  let mut x74: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x73, &mut x74, 0x0, (0x0 as u64), x72);
  let mut x75: u64 = 0;
  let mut x76: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x75, &mut x76, x74, (0x0 as u64), x71);
  let mut x77: u64 = 0;
  let mut x78: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x77, &mut x78, x76, (0x0 as u64), x70);
  let mut x79: u64 = 0;
  let mut x80: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x79, &mut x80, x78, (0x0 as u64), x69);
  let mut x81: u64 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x81, &mut x82, x80, (0x0 as u64), x68);
  let mut x83: u64 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x83, &mut x84, x82, (0x0 as u64), x67);
  let mut x85: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x85, x84, (0x0 as u64), 0xffffffffffffffff);
  let mut x86: u64 = 0;
  let mut x87: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x86, &mut x87, 0x0, x73, (x85 & 0xffffffff));
  let mut x88: u64 = 0;
  let mut x89: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x88, &mut x89, x87, x75, (x85 & 0xffffffff00000000));
  let mut x90: u64 = 0;
  let mut x91: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x90, &mut x91, x89, x77, (x85 & 0xfffffffffffffffe));
  let mut x92: u64 = 0;
  let mut x93: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x92, &mut x93, x91, x79, x85);
  let mut x94: u64 = 0;
  let mut x95: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x94, &mut x95, x93, x81, x85);
  let mut x96: u64 = 0;
  let mut x97: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x96, &mut x97, x95, x83, x85);
  let mut x98: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x98, x3, (arg5[0]), x86);
  let mut x99: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x99, x3, (arg5[1]), x88);
  let mut x100: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x100, x3, (arg5[2]), x90);
  let mut x101: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x101, x3, (arg5[3]), x92);
  let mut x102: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x102, x3, (arg5[4]), x94);
  let mut x103: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x103, x3, (arg5[5]), x96);
  let x104: fiat_p384_u1 = ((x28 & (0x1 as u64)) as fiat_p384_u1);
  let mut x105: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x105, x104, (0x0 as u64), x7);
  let mut x106: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x106, x104, (0x0 as u64), x8);
  let mut x107: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x107, x104, (0x0 as u64), x9);
  let mut x108: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x108, x104, (0x0 as u64), x10);
  let mut x109: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x109, x104, (0x0 as u64), x11);
  let mut x110: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x110, x104, (0x0 as u64), x12);
  let mut x111: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x111, x104, (0x0 as u64), x13);
  let mut x112: u64 = 0;
  let mut x113: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x112, &mut x113, 0x0, x28, x105);
  let mut x114: u64 = 0;
  let mut x115: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x114, &mut x115, x113, x29, x106);
  let mut x116: u64 = 0;
  let mut x117: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x116, &mut x117, x115, x30, x107);
  let mut x118: u64 = 0;
  let mut x119: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x118, &mut x119, x117, x31, x108);
  let mut x120: u64 = 0;
  let mut x121: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x120, &mut x121, x119, x32, x109);
  let mut x122: u64 = 0;
  let mut x123: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x122, &mut x123, x121, x33, x110);
  let mut x124: u64 = 0;
  let mut x125: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x124, &mut x125, x123, x34, x111);
  let mut x126: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x126, x104, (0x0 as u64), x35);
  let mut x127: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x127, x104, (0x0 as u64), x36);
  let mut x128: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x128, x104, (0x0 as u64), x37);
  let mut x129: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x129, x104, (0x0 as u64), x38);
  let mut x130: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x130, x104, (0x0 as u64), x39);
  let mut x131: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x131, x104, (0x0 as u64), x40);
  let mut x132: u64 = 0;
  let mut x133: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x132, &mut x133, 0x0, x98, x126);
  let mut x134: u64 = 0;
  let mut x135: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x134, &mut x135, x133, x99, x127);
  let mut x136: u64 = 0;
  let mut x137: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x136, &mut x137, x135, x100, x128);
  let mut x138: u64 = 0;
  let mut x139: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x138, &mut x139, x137, x101, x129);
  let mut x140: u64 = 0;
  let mut x141: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x140, &mut x141, x139, x102, x130);
  let mut x142: u64 = 0;
  let mut x143: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x142, &mut x143, x141, x103, x131);
  let mut x144: u64 = 0;
  let mut x145: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x144, &mut x145, 0x0, x132, 0xffffffff);
  let mut x146: u64 = 0;
  let mut x147: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x146, &mut x147, x145, x134, 0xffffffff00000000);
  let mut x148: u64 = 0;
  let mut x149: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x148, &mut x149, x147, x136, 0xfffffffffffffffe);
  let mut x150: u64 = 0;
  let mut x151: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x150, &mut x151, x149, x138, 0xffffffffffffffff);
  let mut x152: u64 = 0;
  let mut x153: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x152, &mut x153, x151, x140, 0xffffffffffffffff);
  let mut x154: u64 = 0;
  let mut x155: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x154, &mut x155, x153, x142, 0xffffffffffffffff);
  let mut x156: u64 = 0;
  let mut x157: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x156, &mut x157, x155, (x143 as u64), (0x0 as u64));
  let mut x158: u64 = 0;
  let mut x159: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x158, &mut x159, 0x0, x6, (0x1 as u64));
  let x160: u64 = ((x112 >> 1) | ((x114 << 63) & 0xffffffffffffffff));
  let x161: u64 = ((x114 >> 1) | ((x116 << 63) & 0xffffffffffffffff));
  let x162: u64 = ((x116 >> 1) | ((x118 << 63) & 0xffffffffffffffff));
  let x163: u64 = ((x118 >> 1) | ((x120 << 63) & 0xffffffffffffffff));
  let x164: u64 = ((x120 >> 1) | ((x122 << 63) & 0xffffffffffffffff));
  let x165: u64 = ((x122 >> 1) | ((x124 << 63) & 0xffffffffffffffff));
  let x166: u64 = ((x124 & 0x8000000000000000) | (x124 >> 1));
  let mut x167: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x167, x66, x53, x41);
  let mut x168: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x168, x66, x55, x43);
  let mut x169: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x169, x66, x57, x45);
  let mut x170: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x170, x66, x59, x47);
  let mut x171: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x171, x66, x61, x49);
  let mut x172: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x172, x66, x63, x51);
  let mut x173: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x173, x157, x144, x132);
  let mut x174: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x174, x157, x146, x134);
  let mut x175: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x175, x157, x148, x136);
  let mut x176: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x176, x157, x150, x138);
  let mut x177: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x177, x157, x152, x140);
  let mut x178: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x178, x157, x154, x142);
  *out1 = x158;
  out2[0] = x7;
  out2[1] = x8;
  out2[2] = x9;
  out2[3] = x10;
  out2[4] = x11;
  out2[5] = x12;
  out2[6] = x13;
  out3[0] = x160;
  out3[1] = x161;
  out3[2] = x162;
  out3[3] = x163;
  out3[4] = x164;
  out3[5] = x165;
  out3[6] = x166;
  out4[0] = x167;
  out4[1] = x168;
  out4[2] = x169;
  out4[3] = x170;
  out4[4] = x171;
  out4[5] = x172;
  out5[0] = x173;
  out5[1] = x174;
  out5[2] = x175;
  out5[3] = x176;
  out5[4] = x177;
  out5[5] = x178;
}

/// The function fiat_p384_divstep_precomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
/// Postconditions:
///   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///   0 ≤ eval out1 < m
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_divstep_precomp(out1: &mut [u64; 6]) -> () {
  out1[0] = 0xfff69400fff18fff;
  out1[1] = 0x2b7feffffd3ff;
  out1[2] = 0xfffedbfffffe97ff;
  out1[3] = 0x2840000002fff;
  out1[4] = 0x6040000050400;
  out1[5] = 0xfffc480000038000;
}

/// The function fiat_p384_twos_complement_word_full_divstep computes a divstep on wordsized integers.
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
///   arg4: [0x0 ~> 0xffffffffffffffff]
///   arg5: [0x0 ~> 0xffffffffffffffff]
///   arg6: [0x0 ~> 0xffffffffffffffff]
///   arg7: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0xffffffffffffffff]
///   out3: [0x0 ~> 0xffffffffffffffff]
///   out4: [0x0 ~> 0xffffffffffffffff]
///   out5: [0x0 ~> 0xffffffffffffffff]
///   out6: [0x0 ~> 0xffffffffffffffff]
///   out7: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub fn fiat_p384_twos_complement_word_full_divstep(out1: &mut u64, out2: &mut u64, out3: &mut u64, out4: &mut u64, out5: &mut u64, out6: &mut u64, out7: &mut u64, arg1: u64, arg2: u64, arg3: u64, arg4: u64, arg5: u64, arg6: u64, arg7: u64) -> () {
  let x1: u64 = (((((!arg1) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x2: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg1, (((((!arg1) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x3: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg2, arg3);
  let mut x4: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x4, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg3, (((((!arg2) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x5: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x5, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg4, arg6);
  let mut x6: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x6, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg5, arg7);
  let mut x7: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x7, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg6, (((((!arg4) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x8: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x8, (((x1 >> 63) as fiat_p384_u1) & ((arg3 & (0x1 as u64)) as fiat_p384_u1)), arg7, (((((!arg5) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x9: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x9, ((x4 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x3);
  let mut x10: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x10, ((x4 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x5);
  let mut x11: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x11, ((x4 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x6);
  let x12: u64 = ((((0x1 as u128) + (x2 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x13: u64 = ((((((x4 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x4 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1));
  let x14: u64 = ((((x5 as u128) + (x5 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x15: u64 = ((((x6 as u128) + (x6 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x16: u64 = ((((x7 as u128) + (x10 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x17: u64 = ((((x8 as u128) + (x11 as u128)) & (0xffffffffffffffff as u128)) as u64);
  *out1 = x12;
  *out2 = x3;
  *out3 = x13;
  *out4 = x14;
  *out5 = x15;
  *out6 = x16;
  *out7 = x17;
}

/// The function fiat_p384_asr_mw_sub2 computes a divstep on wordsized integers.
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_asr_mw_sub2(out1: &mut [u64; 8], arg1: &[u64; 8]) -> () {
  let mut x1: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1, (((arg1[7]) >> 63) as fiat_p384_u1), (0x0 as u64), 0xfffffffffffffffc);
  let x2: u64 = (((arg1[0]) >> 62) | (((arg1[1]) << 2) & 0xffffffffffffffff));
  let x3: u64 = (((arg1[1]) >> 62) | (((arg1[2]) << 2) & 0xffffffffffffffff));
  let x4: u64 = (((arg1[2]) >> 62) | (((arg1[3]) << 2) & 0xffffffffffffffff));
  let x5: u64 = (((arg1[3]) >> 62) | (((arg1[4]) << 2) & 0xffffffffffffffff));
  let x6: u64 = (((arg1[4]) >> 62) | (((arg1[5]) << 2) & 0xffffffffffffffff));
  let x7: u64 = (((arg1[5]) >> 62) | (((arg1[6]) << 2) & 0xffffffffffffffff));
  let x8: u64 = (((arg1[6]) >> 62) | (((arg1[7]) << 2) & 0xffffffffffffffff));
  let x9: u64 = (x1 | ((arg1[7]) >> 62));
  out1[0] = x2;
  out1[1] = x3;
  out1[2] = x4;
  out1[3] = x5;
  out1[4] = x6;
  out1[5] = x7;
  out1[6] = x8;
  out1[7] = x9;
}

/// The function fiat_p384_sat_add computes a divstep on wordsized integers.
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_sat_add(out1: &mut [u64; 8], arg1: &[u64; 8], arg2: &[u64; 8]) -> () {
  let mut x1: u64 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u64 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u64 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u64 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u64 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u64 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u64 = 0;
  let mut x14: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u64 = 0;
  let mut x16: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x15, &mut x16, x14, (arg1[7]), (arg2[7]));
  out1[0] = x1;
  out1[1] = x3;
  out1[2] = x5;
  out1[3] = x7;
  out1[4] = x9;
  out1[5] = x11;
  out1[6] = x13;
  out1[7] = x15;
}

/// The function fiat_p384_word_sat_mul computes a divstep on wordsized integers.
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_word_sat_mul(out1: &mut [u64; 8], arg1: u64, arg2: &[u64; 7]) -> () {
  let mut x1: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1, (((arg2[6]) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x2: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2, ((arg1 >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x3: u64 = 0;
  let mut x4: u64 = 0;
  fiat_p384_mulx_u64(&mut x3, &mut x4, x2, (arg2[0]));
  let mut x5: u64 = 0;
  let mut x6: u64 = 0;
  fiat_p384_mulx_u64(&mut x5, &mut x6, x2, (arg2[1]));
  let mut x7: u64 = 0;
  let mut x8: u64 = 0;
  fiat_p384_mulx_u64(&mut x7, &mut x8, x2, (arg2[0]));
  let mut x9: u64 = 0;
  let mut x10: u64 = 0;
  fiat_p384_mulx_u64(&mut x9, &mut x10, x2, (arg2[2]));
  let mut x11: u64 = 0;
  let mut x12: u64 = 0;
  fiat_p384_mulx_u64(&mut x11, &mut x12, x2, (arg2[1]));
  let mut x13: u64 = 0;
  let mut x14: u64 = 0;
  fiat_p384_mulx_u64(&mut x13, &mut x14, x2, (arg2[0]));
  let mut x15: u64 = 0;
  let mut x16: u64 = 0;
  fiat_p384_mulx_u64(&mut x15, &mut x16, x2, (arg2[3]));
  let mut x17: u64 = 0;
  let mut x18: u64 = 0;
  fiat_p384_mulx_u64(&mut x17, &mut x18, x2, (arg2[2]));
  let mut x19: u64 = 0;
  let mut x20: u64 = 0;
  fiat_p384_mulx_u64(&mut x19, &mut x20, x2, (arg2[1]));
  let mut x21: u64 = 0;
  let mut x22: u64 = 0;
  fiat_p384_mulx_u64(&mut x21, &mut x22, x2, (arg2[0]));
  let mut x23: u64 = 0;
  let mut x24: u64 = 0;
  fiat_p384_mulx_u64(&mut x23, &mut x24, x2, (arg2[4]));
  let mut x25: u64 = 0;
  let mut x26: u64 = 0;
  fiat_p384_mulx_u64(&mut x25, &mut x26, x2, (arg2[3]));
  let mut x27: u64 = 0;
  let mut x28: u64 = 0;
  fiat_p384_mulx_u64(&mut x27, &mut x28, x2, (arg2[2]));
  let mut x29: u64 = 0;
  let mut x30: u64 = 0;
  fiat_p384_mulx_u64(&mut x29, &mut x30, x2, (arg2[1]));
  let mut x31: u64 = 0;
  let mut x32: u64 = 0;
  fiat_p384_mulx_u64(&mut x31, &mut x32, x2, (arg2[0]));
  let mut x33: u64 = 0;
  let mut x34: u64 = 0;
  fiat_p384_mulx_u64(&mut x33, &mut x34, x2, (arg2[5]));
  let mut x35: u64 = 0;
  let mut x36: u64 = 0;
  fiat_p384_mulx_u64(&mut x35, &mut x36, x2, (arg2[4]));
  let mut x37: u64 = 0;
  let mut x38: u64 = 0;
  fiat_p384_mulx_u64(&mut x37, &mut x38, x2, (arg2[3]));
  let mut x39: u64 = 0;
  let mut x40: u64 = 0;
  fiat_p384_mulx_u64(&mut x39, &mut x40, x2, (arg2[2]));
  let mut x41: u64 = 0;
  let mut x42: u64 = 0;
  fiat_p384_mulx_u64(&mut x41, &mut x42, x2, (arg2[1]));
  let mut x43: u64 = 0;
  let mut x44: u64 = 0;
  fiat_p384_mulx_u64(&mut x43, &mut x44, x2, (arg2[0]));
  let mut x45: u64 = 0;
  let mut x46: u64 = 0;
  fiat_p384_mulx_u64(&mut x45, &mut x46, x2, (arg2[6]));
  let mut x47: u64 = 0;
  let mut x48: u64 = 0;
  fiat_p384_mulx_u64(&mut x47, &mut x48, x2, (arg2[5]));
  let mut x49: u64 = 0;
  let mut x50: u64 = 0;
  fiat_p384_mulx_u64(&mut x49, &mut x50, x2, (arg2[4]));
  let mut x51: u64 = 0;
  let mut x52: u64 = 0;
  fiat_p384_mulx_u64(&mut x51, &mut x52, x2, (arg2[3]));
  let mut x53: u64 = 0;
  let mut x54: u64 = 0;
  fiat_p384_mulx_u64(&mut x53, &mut x54, x2, (arg2[2]));
  let mut x55: u64 = 0;
  let mut x56: u64 = 0;
  fiat_p384_mulx_u64(&mut x55, &mut x56, x2, (arg2[1]));
  let mut x57: u64 = 0;
  let mut x58: u64 = 0;
  fiat_p384_mulx_u64(&mut x57, &mut x58, x2, (arg2[0]));
  let mut x59: u64 = 0;
  let mut x60: u64 = 0;
  fiat_p384_mulx_u64(&mut x59, &mut x60, arg1, x1);
  let mut x61: u64 = 0;
  let mut x62: u64 = 0;
  fiat_p384_mulx_u64(&mut x61, &mut x62, arg1, (arg2[6]));
  let mut x63: u64 = 0;
  let mut x64: u64 = 0;
  fiat_p384_mulx_u64(&mut x63, &mut x64, arg1, (arg2[5]));
  let mut x65: u64 = 0;
  let mut x66: u64 = 0;
  fiat_p384_mulx_u64(&mut x65, &mut x66, arg1, (arg2[4]));
  let mut x67: u64 = 0;
  let mut x68: u64 = 0;
  fiat_p384_mulx_u64(&mut x67, &mut x68, arg1, (arg2[3]));
  let mut x69: u64 = 0;
  let mut x70: u64 = 0;
  fiat_p384_mulx_u64(&mut x69, &mut x70, arg1, (arg2[2]));
  let mut x71: u64 = 0;
  let mut x72: u64 = 0;
  fiat_p384_mulx_u64(&mut x71, &mut x72, arg1, (arg2[1]));
  let mut x73: u64 = 0;
  let mut x74: u64 = 0;
  fiat_p384_mulx_u64(&mut x73, &mut x74, arg1, (arg2[0]));
  let mut x75: u64 = 0;
  let mut x76: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x75, &mut x76, 0x0, x62, x3);
  let mut x77: u64 = 0;
  let mut x78: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x77, &mut x78, 0x0, x75, x5);
  let mut x79: u64 = 0;
  let mut x80: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x79, &mut x80, 0x0, x64, x7);
  let mut x81: u64 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x81, &mut x82, x80, x77, x8);
  let mut x83: u64 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x83, &mut x84, 0x0, x79, x11);
  let mut x85: u64 = 0;
  let mut x86: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x85, &mut x86, x84, x81, x9);
  let mut x87: u64 = 0;
  let mut x88: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x87, &mut x88, 0x0, x66, x13);
  let mut x89: u64 = 0;
  let mut x90: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x89, &mut x90, x88, x83, x14);
  let mut x91: u64 = 0;
  let mut x92: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x91, &mut x92, x90, x85, x12);
  let mut x93: u64 = 0;
  let mut x94: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x93, &mut x94, 0x0, x87, x19);
  let mut x95: u64 = 0;
  let mut x96: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x95, &mut x96, x94, x89, x17);
  let mut x97: u64 = 0;
  let mut x98: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x97, &mut x98, x96, x91, x15);
  let mut x99: u64 = 0;
  let mut x100: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x99, &mut x100, 0x0, x68, x21);
  let mut x101: u64 = 0;
  let mut x102: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x101, &mut x102, x100, x93, x22);
  let mut x103: u64 = 0;
  let mut x104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x103, &mut x104, x102, x95, x20);
  let mut x105: u64 = 0;
  let mut x106: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x105, &mut x106, x104, x97, x18);
  let mut x107: u64 = 0;
  let mut x108: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x107, &mut x108, 0x0, x99, x29);
  let mut x109: u64 = 0;
  let mut x110: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x109, &mut x110, x108, x101, x27);
  let mut x111: u64 = 0;
  let mut x112: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x111, &mut x112, x110, x103, x25);
  let mut x113: u64 = 0;
  let mut x114: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x113, &mut x114, x112, x105, x23);
  let mut x115: u64 = 0;
  let mut x116: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x115, &mut x116, 0x0, x70, x31);
  let mut x117: u64 = 0;
  let mut x118: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x117, &mut x118, x116, x107, x32);
  let mut x119: u64 = 0;
  let mut x120: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x119, &mut x120, x118, x109, x30);
  let mut x121: u64 = 0;
  let mut x122: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x121, &mut x122, x120, x111, x28);
  let mut x123: u64 = 0;
  let mut x124: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x123, &mut x124, x122, x113, x26);
  let mut x125: u64 = 0;
  let mut x126: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x125, &mut x126, 0x0, x115, x41);
  let mut x127: u64 = 0;
  let mut x128: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x127, &mut x128, x126, x117, x39);
  let mut x129: u64 = 0;
  let mut x130: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x129, &mut x130, x128, x119, x37);
  let mut x131: u64 = 0;
  let mut x132: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x131, &mut x132, x130, x121, x35);
  let mut x133: u64 = 0;
  let mut x134: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x133, &mut x134, x132, x123, x33);
  let mut x135: u64 = 0;
  let mut x136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x135, &mut x136, 0x0, x72, x43);
  let mut x137: u64 = 0;
  let mut x138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x137, &mut x138, x136, x125, x44);
  let mut x139: u64 = 0;
  let mut x140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x139, &mut x140, x138, x127, x42);
  let mut x141: u64 = 0;
  let mut x142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x141, &mut x142, x140, x129, x40);
  let mut x143: u64 = 0;
  let mut x144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x143, &mut x144, x142, x131, x38);
  let mut x145: u64 = 0;
  let mut x146: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x145, &mut x146, x144, x133, x36);
  let mut x147: u64 = 0;
  let mut x148: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x147, &mut x148, 0x0, x135, x55);
  let mut x149: u64 = 0;
  let mut x150: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x149, &mut x150, x148, x137, x53);
  let mut x151: u64 = 0;
  let mut x152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x151, &mut x152, x150, x139, x51);
  let mut x153: u64 = 0;
  let mut x154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x153, &mut x154, x152, x141, x49);
  let mut x155: u64 = 0;
  let mut x156: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x155, &mut x156, x154, x143, x47);
  let mut x157: u64 = 0;
  let mut x158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x157, &mut x158, x156, x145, x45);
  let mut x159: u64 = 0;
  let mut x160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x159, &mut x160, 0x0, x74, x57);
  let mut x161: u64 = 0;
  let mut x162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x161, &mut x162, x160, x147, x58);
  let mut x163: u64 = 0;
  let mut x164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x163, &mut x164, x162, x149, x56);
  let mut x165: u64 = 0;
  let mut x166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x165, &mut x166, x164, x151, x54);
  let mut x167: u64 = 0;
  let mut x168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x167, &mut x168, x166, x153, x52);
  let mut x169: u64 = 0;
  let mut x170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x169, &mut x170, x168, x155, x50);
  let mut x171: u64 = 0;
  let mut x172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x171, &mut x172, x170, x157, x48);
  let mut x173: u64 = 0;
  let mut x174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x173, &mut x174, 0x0, x159, x71);
  let mut x175: u64 = 0;
  let mut x176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x175, &mut x176, x174, x161, x69);
  let mut x177: u64 = 0;
  let mut x178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x177, &mut x178, x176, x163, x67);
  let mut x179: u64 = 0;
  let mut x180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x179, &mut x180, x178, x165, x65);
  let mut x181: u64 = 0;
  let mut x182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x181, &mut x182, x180, x167, x63);
  let mut x183: u64 = 0;
  let mut x184: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x183, &mut x184, x182, x169, x61);
  let mut x185: u64 = 0;
  let mut x186: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x185, &mut x186, x184, x171, x59);
  out1[0] = x73;
  out1[1] = x173;
  out1[2] = x175;
  out1[3] = x177;
  out1[4] = x179;
  out1[5] = x181;
  out1[6] = x183;
  out1[7] = x185;
}

/// The function fiat_p384_jumpdivstep_precomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
/// Postconditions:
///   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///   0 ≤ eval out1 < m
///
/// Input Bounds:
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_jumpdivstep_precomp(out1: &mut [u64; 6]) -> () {
  out1[0] = 0x628b9c401ec8b770;
  out1[1] = 0xaa535ed05404b24f;
  out1[2] = 0xded9afcf70304bd0;
  out1[3] = 0xf5f52fe04b9f941e;
  out1[4] = 0x363bd1ffe7271cc0;
  out1[5] = 0xa2d9730ff7be615f;
}

/// The function fiat_p384_outer_loop_body computes the body of the outer loop in BY-inversion (jumpdivstep version).
/// Postconditions:
///   0 ≤ eval arg1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg4: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out4: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub fn fiat_p384_outer_loop_body(out1: &mut [u64; 7], out2: &mut [u64; 7], out3: &mut [u64; 6], out4: &mut [u64; 6], arg1: &[u64; 7], arg2: &[u64; 7], arg3: &[u64; 6], arg4: &[u64; 6]) -> () {
  let mut x1: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), (0x1 as u64), 0xffffffffffffffff);
  let mut x2: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), (arg1[0]), (arg2[0]));
  let mut x3: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), (arg2[0]), (((((!(arg1[0])) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_cmovznz_u1(&mut x4, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), 0x1, 0x0);
  let mut x5: fiat_p384_u1 = 0;
  fiat_p384_cmovznz_u1(&mut x5, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), 0x0, 0x1);
  let mut x6: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x6, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x7: fiat_p384_u1 = 0;
  fiat_p384_cmovznz_u1(&mut x7, (((arg2[0]) & (0x1 as u64)) as fiat_p384_u1), 0x1, 0x0);
  let mut x8: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x8, ((x3 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x2);
  let mut x9: fiat_p384_u1 = 0;
  fiat_p384_cmovznz_u1(&mut x9, ((x3 & (0x1 as u64)) as fiat_p384_u1), 0x0, x4);
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_cmovznz_u1(&mut x10, ((x3 & (0x1 as u64)) as fiat_p384_u1), 0x0, x5);
  let x11: u64 = (((((!((((0x1 as u128) + (x1 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x12: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x12, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x1 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x1 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x13: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x13, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x2, ((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x14: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x14, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x2) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x15: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x15, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((x4 as u64) + (x4 as u64)), ((((x6 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x16: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x16, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((x5 as u64) + (x5 as u64)), ((x7 as u64) + (x10 as u64)));
  let mut x17: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x17, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x6 as u128) + (x9 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((x4 as u64) + (x4 as u64))) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x18: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x18, (((x11 >> 63) as fiat_p384_u1) & ((((((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x3 as u128) + (x8 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((x7 as u64) + (x10 as u64)), (((((!((x5 as u64) + (x5 as u64))) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x19: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x19, ((x14 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x13);
  let mut x20: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x20, ((x14 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x15);
  let mut x21: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x21, ((x14 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x16);
  let x22: u64 = (((((!((((0x1 as u128) + (x12 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x23: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x23, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x12 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x12 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x24: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x24, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x13, ((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x25: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x25, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x13) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x26: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x26, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x15 as u128) + (x15 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x17 as u128) + (x20 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x27: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x27, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), (x16 + x16), ((((x18 as u128) + (x21 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x28: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x28, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x17 as u128) + (x20 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x15 as u128) + (x15 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x29: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x29, (((x22 >> 63) as fiat_p384_u1) & ((((((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x14 as u128) + (x19 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x18 as u128) + (x21 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!(x16 + x16)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x30: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x30, ((x25 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x24);
  let mut x31: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x31, ((x25 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x26);
  let mut x32: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x32, ((x25 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x27);
  let x33: u64 = (((((!((((0x1 as u128) + (x23 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x34: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x34, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x23 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x23 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x35: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x35, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x24, ((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x36: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x36, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x24) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x37: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x37, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x26 as u128) + (x26 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x28 as u128) + (x31 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x38: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x38, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x27 as u128) + (x27 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x29 as u128) + (x32 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x39: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x39, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x28 as u128) + (x31 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x26 as u128) + (x26 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x40: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x40, (((x33 >> 63) as fiat_p384_u1) & ((((((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x25 as u128) + (x30 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x29 as u128) + (x32 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x27 as u128) + (x27 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x41: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x41, ((x36 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x35);
  let mut x42: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x42, ((x36 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x37);
  let mut x43: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x43, ((x36 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x38);
  let x44: u64 = (((((!((((0x1 as u128) + (x34 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x45: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x45, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x34 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x34 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x46: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x46, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x35, ((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x47: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x47, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x35) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x48: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x48, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x37 as u128) + (x37 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x39 as u128) + (x42 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x49: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x49, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x38 as u128) + (x38 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x40 as u128) + (x43 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x50: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x50, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x39 as u128) + (x42 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x37 as u128) + (x37 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x51: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x51, (((x44 >> 63) as fiat_p384_u1) & ((((((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x36 as u128) + (x41 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x40 as u128) + (x43 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x38 as u128) + (x38 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x52: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x52, ((x47 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x46);
  let mut x53: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x53, ((x47 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x48);
  let mut x54: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x54, ((x47 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x49);
  let x55: u64 = (((((!((((0x1 as u128) + (x45 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x56: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x56, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x45 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x45 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x57: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x57, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x46, ((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x58: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x58, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x46) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x59: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x59, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x48 as u128) + (x48 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x50 as u128) + (x53 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x60: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x60, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x49 as u128) + (x49 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x51 as u128) + (x54 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x61: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x61, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x50 as u128) + (x53 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x48 as u128) + (x48 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x62: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x62, (((x55 >> 63) as fiat_p384_u1) & ((((((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x47 as u128) + (x52 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x51 as u128) + (x54 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x49 as u128) + (x49 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x63: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x63, ((x58 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x57);
  let mut x64: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x64, ((x58 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x59);
  let mut x65: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x65, ((x58 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x60);
  let x66: u64 = (((((!((((0x1 as u128) + (x56 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x67: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x67, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x56 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x56 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x68: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x68, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x57, ((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x69: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x69, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x57) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x70: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x70, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x59 as u128) + (x59 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x61 as u128) + (x64 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x71: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x71, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x60 as u128) + (x60 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x62 as u128) + (x65 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x72: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x72, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x61 as u128) + (x64 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x59 as u128) + (x59 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x73: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x73, (((x66 >> 63) as fiat_p384_u1) & ((((((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x58 as u128) + (x63 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x62 as u128) + (x65 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x60 as u128) + (x60 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x74: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x74, ((x69 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x68);
  let mut x75: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x75, ((x69 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x70);
  let mut x76: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x76, ((x69 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x71);
  let x77: u64 = (((((!((((0x1 as u128) + (x67 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x78: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x78, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x67 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x67 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x79: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x79, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x68, ((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x80: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x80, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x68) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x81: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x81, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x70 as u128) + (x70 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x72 as u128) + (x75 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x82: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x82, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x71 as u128) + (x71 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x73 as u128) + (x76 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x83: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x83, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x72 as u128) + (x75 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x70 as u128) + (x70 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x84: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x84, (((x77 >> 63) as fiat_p384_u1) & ((((((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x69 as u128) + (x74 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x73 as u128) + (x76 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x71 as u128) + (x71 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x85: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x85, ((x80 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x79);
  let mut x86: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x86, ((x80 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x81);
  let mut x87: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x87, ((x80 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x82);
  let x88: u64 = (((((!((((0x1 as u128) + (x78 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x89: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x89, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x78 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x78 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x90: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x90, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x79, ((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x91: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x91, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x79) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x92: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x92, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x81 as u128) + (x81 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x83 as u128) + (x86 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x93: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x93, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x82 as u128) + (x82 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x84 as u128) + (x87 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x94: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x94, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x83 as u128) + (x86 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x81 as u128) + (x81 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x95: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x95, (((x88 >> 63) as fiat_p384_u1) & ((((((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x80 as u128) + (x85 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x84 as u128) + (x87 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x82 as u128) + (x82 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x96: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x96, ((x91 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x90);
  let mut x97: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x97, ((x91 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x92);
  let mut x98: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x98, ((x91 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x93);
  let x99: u64 = (((((!((((0x1 as u128) + (x89 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x100: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x100, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x89 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x89 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x101: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x101, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x90, ((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x102: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x102, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x90) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x103: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x103, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x92 as u128) + (x92 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x94 as u128) + (x97 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x104: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x104, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x93 as u128) + (x93 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x95 as u128) + (x98 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x105: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x105, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x94 as u128) + (x97 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x92 as u128) + (x92 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x106: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x106, (((x99 >> 63) as fiat_p384_u1) & ((((((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x91 as u128) + (x96 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x95 as u128) + (x98 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x93 as u128) + (x93 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x107: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x107, ((x102 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x101);
  let mut x108: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x108, ((x102 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x103);
  let mut x109: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x109, ((x102 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x104);
  let x110: u64 = (((((!((((0x1 as u128) + (x100 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x111: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x111, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x100 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x100 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x112: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x112, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x101, ((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x113: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x113, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x101) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x114: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x114, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x103 as u128) + (x103 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x105 as u128) + (x108 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x115: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x115, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x104 as u128) + (x104 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x106 as u128) + (x109 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x116: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x116, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x105 as u128) + (x108 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x103 as u128) + (x103 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x117: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x117, (((x110 >> 63) as fiat_p384_u1) & ((((((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x102 as u128) + (x107 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x106 as u128) + (x109 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x104 as u128) + (x104 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x118: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x118, ((x113 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x112);
  let mut x119: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x119, ((x113 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x114);
  let mut x120: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x120, ((x113 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x115);
  let x121: u64 = (((((!((((0x1 as u128) + (x111 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x122: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x122, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x111 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x111 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x123: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x123, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x112, ((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x124: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x124, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x112) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x125: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x125, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x114 as u128) + (x114 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x116 as u128) + (x119 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x126: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x126, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x115 as u128) + (x115 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x117 as u128) + (x120 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x127: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x127, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x116 as u128) + (x119 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x114 as u128) + (x114 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x128: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x128, (((x121 >> 63) as fiat_p384_u1) & ((((((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x113 as u128) + (x118 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x117 as u128) + (x120 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x115 as u128) + (x115 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x129: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x129, ((x124 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x123);
  let mut x130: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x130, ((x124 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x125);
  let mut x131: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x131, ((x124 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x126);
  let x132: u64 = (((((!((((0x1 as u128) + (x122 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x133: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x133, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x122 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x122 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x134: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x134, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x123, ((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x135: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x135, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x123) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x136: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x136, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x125 as u128) + (x125 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x127 as u128) + (x130 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x137: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x137, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x126 as u128) + (x126 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x128 as u128) + (x131 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x138: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x138, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x127 as u128) + (x130 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x125 as u128) + (x125 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x139: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x139, (((x132 >> 63) as fiat_p384_u1) & ((((((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x124 as u128) + (x129 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x128 as u128) + (x131 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x126 as u128) + (x126 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x140: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x140, ((x135 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x134);
  let mut x141: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x141, ((x135 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x136);
  let mut x142: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x142, ((x135 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x137);
  let x143: u64 = (((((!((((0x1 as u128) + (x133 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x144: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x144, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x133 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x133 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x145: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x145, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x134, ((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x146: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x146, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x134) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x147: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x147, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x136 as u128) + (x136 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x138 as u128) + (x141 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x148: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x148, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x137 as u128) + (x137 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x139 as u128) + (x142 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x149: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x149, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x138 as u128) + (x141 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x136 as u128) + (x136 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x150: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x150, (((x143 >> 63) as fiat_p384_u1) & ((((((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x135 as u128) + (x140 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x139 as u128) + (x142 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x137 as u128) + (x137 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x151: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x151, ((x146 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x145);
  let mut x152: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x152, ((x146 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x147);
  let mut x153: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x153, ((x146 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x148);
  let x154: u64 = (((((!((((0x1 as u128) + (x144 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x155: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x155, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x144 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x144 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x156: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x156, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x145, ((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x157: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x157, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x145) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x158: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x158, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x147 as u128) + (x147 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x149 as u128) + (x152 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x159: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x159, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x148 as u128) + (x148 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x150 as u128) + (x153 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x160: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x160, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x149 as u128) + (x152 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x147 as u128) + (x147 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x161: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x161, (((x154 >> 63) as fiat_p384_u1) & ((((((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x146 as u128) + (x151 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x150 as u128) + (x153 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x148 as u128) + (x148 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x162: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x162, ((x157 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x156);
  let mut x163: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x163, ((x157 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x158);
  let mut x164: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x164, ((x157 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x159);
  let x165: u64 = (((((!((((0x1 as u128) + (x155 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x166: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x166, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x155 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x155 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x167: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x167, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x156, ((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x168: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x168, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x156) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x169: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x169, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x158 as u128) + (x158 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x160 as u128) + (x163 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x170: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x170, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x159 as u128) + (x159 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x161 as u128) + (x164 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x171: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x171, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x160 as u128) + (x163 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x158 as u128) + (x158 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x172: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x172, (((x165 >> 63) as fiat_p384_u1) & ((((((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x157 as u128) + (x162 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x161 as u128) + (x164 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x159 as u128) + (x159 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x173: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x173, ((x168 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x167);
  let mut x174: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x174, ((x168 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x169);
  let mut x175: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x175, ((x168 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x170);
  let x176: u64 = (((((!((((0x1 as u128) + (x166 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x177: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x177, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x166 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x166 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x178: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x178, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x167, ((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x179: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x179, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x167) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x180: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x180, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x169 as u128) + (x169 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x171 as u128) + (x174 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x181: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x181, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x170 as u128) + (x170 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x172 as u128) + (x175 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x182: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x182, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x171 as u128) + (x174 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x169 as u128) + (x169 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x183: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x183, (((x176 >> 63) as fiat_p384_u1) & ((((((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x168 as u128) + (x173 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x172 as u128) + (x175 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x170 as u128) + (x170 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x184: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x184, ((x179 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x178);
  let mut x185: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x185, ((x179 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x180);
  let mut x186: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x186, ((x179 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x181);
  let x187: u64 = (((((!((((0x1 as u128) + (x177 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x188: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x188, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x177 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x177 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x189: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x189, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x178, ((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x190: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x190, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x178) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x191: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x191, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x180 as u128) + (x180 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x182 as u128) + (x185 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x192: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x192, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x181 as u128) + (x181 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x183 as u128) + (x186 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x193: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x193, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x182 as u128) + (x185 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x180 as u128) + (x180 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x194: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x194, (((x187 >> 63) as fiat_p384_u1) & ((((((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x179 as u128) + (x184 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x183 as u128) + (x186 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x181 as u128) + (x181 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x195: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x195, ((x190 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x189);
  let mut x196: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x196, ((x190 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x191);
  let mut x197: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x197, ((x190 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x192);
  let x198: u64 = (((((!((((0x1 as u128) + (x188 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x199: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x199, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x188 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x188 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x200: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x200, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x189, ((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x201: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x201, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x189) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x202: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x202, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x191 as u128) + (x191 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x193 as u128) + (x196 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x203: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x203, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x192 as u128) + (x192 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x194 as u128) + (x197 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x204: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x204, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x193 as u128) + (x196 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x191 as u128) + (x191 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x205: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x205, (((x198 >> 63) as fiat_p384_u1) & ((((((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x190 as u128) + (x195 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x194 as u128) + (x197 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x192 as u128) + (x192 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x206: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x206, ((x201 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x200);
  let mut x207: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x207, ((x201 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x202);
  let mut x208: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x208, ((x201 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x203);
  let x209: u64 = (((((!((((0x1 as u128) + (x199 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x210: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x210, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x199 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x199 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x211: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x211, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x200, ((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x212: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x212, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x200) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x213: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x213, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x202 as u128) + (x202 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x204 as u128) + (x207 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x214: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x214, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x203 as u128) + (x203 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x205 as u128) + (x208 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x215: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x215, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x204 as u128) + (x207 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x202 as u128) + (x202 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x216: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x216, (((x209 >> 63) as fiat_p384_u1) & ((((((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x201 as u128) + (x206 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x205 as u128) + (x208 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x203 as u128) + (x203 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x217: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x217, ((x212 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x211);
  let mut x218: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x218, ((x212 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x213);
  let mut x219: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x219, ((x212 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x214);
  let x220: u64 = (((((!((((0x1 as u128) + (x210 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x221: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x221, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x210 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x210 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x222: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x222, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x211, ((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x223: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x223, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x211) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x224: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x224, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x213 as u128) + (x213 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x215 as u128) + (x218 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x225: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x225, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x214 as u128) + (x214 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x216 as u128) + (x219 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x226: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x226, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x215 as u128) + (x218 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x213 as u128) + (x213 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x227: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x227, (((x220 >> 63) as fiat_p384_u1) & ((((((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x212 as u128) + (x217 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x216 as u128) + (x219 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x214 as u128) + (x214 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x228: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x228, ((x223 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x222);
  let mut x229: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x229, ((x223 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x224);
  let mut x230: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x230, ((x223 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x225);
  let x231: u64 = (((((!((((0x1 as u128) + (x221 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x232: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x232, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x221 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x221 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x233: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x233, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x222, ((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x234: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x234, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x222) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x235: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x235, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x224 as u128) + (x224 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x226 as u128) + (x229 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x236: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x236, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x225 as u128) + (x225 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x227 as u128) + (x230 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x237: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x237, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x226 as u128) + (x229 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x224 as u128) + (x224 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x238: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x238, (((x231 >> 63) as fiat_p384_u1) & ((((((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x223 as u128) + (x228 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x227 as u128) + (x230 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x225 as u128) + (x225 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x239: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x239, ((x234 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x233);
  let mut x240: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x240, ((x234 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x235);
  let mut x241: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x241, ((x234 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x236);
  let x242: u64 = (((((!((((0x1 as u128) + (x232 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x243: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x243, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x232 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x232 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x244: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x244, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x233, ((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x245: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x245, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x233) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x246: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x246, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x235 as u128) + (x235 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x237 as u128) + (x240 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x247: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x247, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x236 as u128) + (x236 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x238 as u128) + (x241 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x248: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x248, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x237 as u128) + (x240 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x235 as u128) + (x235 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x249: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x249, (((x242 >> 63) as fiat_p384_u1) & ((((((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x234 as u128) + (x239 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x238 as u128) + (x241 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x236 as u128) + (x236 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x250: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x250, ((x245 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x244);
  let mut x251: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x251, ((x245 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x246);
  let mut x252: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x252, ((x245 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x247);
  let x253: u64 = (((((!((((0x1 as u128) + (x243 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x254: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x254, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x243 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x243 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x255: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x255, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x244, ((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x256: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x256, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x244) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x257: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x257, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x246 as u128) + (x246 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x248 as u128) + (x251 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x258: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x258, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x247 as u128) + (x247 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x249 as u128) + (x252 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x259: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x259, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x248 as u128) + (x251 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x246 as u128) + (x246 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x260: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x260, (((x253 >> 63) as fiat_p384_u1) & ((((((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x245 as u128) + (x250 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x249 as u128) + (x252 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x247 as u128) + (x247 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x261: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x261, ((x256 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x255);
  let mut x262: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x262, ((x256 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x257);
  let mut x263: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x263, ((x256 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x258);
  let x264: u64 = (((((!((((0x1 as u128) + (x254 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x265: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x265, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x254 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x254 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x266: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x266, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x255, ((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x267: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x267, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x255) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x268: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x268, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x257 as u128) + (x257 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x259 as u128) + (x262 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x269: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x269, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x258 as u128) + (x258 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x260 as u128) + (x263 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x270: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x270, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x259 as u128) + (x262 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x257 as u128) + (x257 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x271: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x271, (((x264 >> 63) as fiat_p384_u1) & ((((((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x256 as u128) + (x261 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x260 as u128) + (x263 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x258 as u128) + (x258 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x272: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x272, ((x267 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x266);
  let mut x273: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x273, ((x267 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x268);
  let mut x274: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x274, ((x267 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x269);
  let x275: u64 = (((((!((((0x1 as u128) + (x265 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x276: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x276, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x265 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x265 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x277: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x277, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x266, ((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x278: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x278, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x266) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x279: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x279, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x268 as u128) + (x268 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x270 as u128) + (x273 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x280: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x280, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x269 as u128) + (x269 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x271 as u128) + (x274 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x281: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x281, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x270 as u128) + (x273 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x268 as u128) + (x268 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x282: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x282, (((x275 >> 63) as fiat_p384_u1) & ((((((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x267 as u128) + (x272 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x271 as u128) + (x274 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x269 as u128) + (x269 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x283: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x283, ((x278 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x277);
  let mut x284: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x284, ((x278 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x279);
  let mut x285: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x285, ((x278 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x280);
  let x286: u64 = (((((!((((0x1 as u128) + (x276 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x287: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x287, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x276 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x276 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x288: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x288, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x277, ((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x289: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x289, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x277) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x290: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x290, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x279 as u128) + (x279 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x281 as u128) + (x284 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x291: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x291, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x280 as u128) + (x280 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x282 as u128) + (x285 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x292: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x292, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x281 as u128) + (x284 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x279 as u128) + (x279 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x293: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x293, (((x286 >> 63) as fiat_p384_u1) & ((((((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x278 as u128) + (x283 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x282 as u128) + (x285 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x280 as u128) + (x280 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x294: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x294, ((x289 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x288);
  let mut x295: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x295, ((x289 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x290);
  let mut x296: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x296, ((x289 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x291);
  let x297: u64 = (((((!((((0x1 as u128) + (x287 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x298: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x298, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x287 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x287 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x299: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x299, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x288, ((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x300: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x300, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x288) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x301: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x301, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x290 as u128) + (x290 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x292 as u128) + (x295 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x302: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x302, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x291 as u128) + (x291 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x293 as u128) + (x296 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x303: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x303, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x292 as u128) + (x295 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x290 as u128) + (x290 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x304: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x304, (((x297 >> 63) as fiat_p384_u1) & ((((((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x289 as u128) + (x294 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x293 as u128) + (x296 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x291 as u128) + (x291 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x305: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x305, ((x300 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x299);
  let mut x306: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x306, ((x300 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x301);
  let mut x307: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x307, ((x300 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x302);
  let x308: u64 = (((((!((((0x1 as u128) + (x298 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x309: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x309, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x298 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x298 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x310: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x310, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x299, ((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x311: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x311, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x299) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x312: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x312, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x301 as u128) + (x301 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x303 as u128) + (x306 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x313: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x313, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x302 as u128) + (x302 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x304 as u128) + (x307 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x314: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x314, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x303 as u128) + (x306 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x301 as u128) + (x301 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x315: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x315, (((x308 >> 63) as fiat_p384_u1) & ((((((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x300 as u128) + (x305 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x304 as u128) + (x307 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x302 as u128) + (x302 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x316: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x316, ((x311 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x310);
  let mut x317: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x317, ((x311 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x312);
  let mut x318: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x318, ((x311 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x313);
  let x319: u64 = (((((!((((0x1 as u128) + (x309 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x320: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x320, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x309 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x309 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x321: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x321, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x310, ((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x322: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x322, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x310) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x323: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x323, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x312 as u128) + (x312 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x314 as u128) + (x317 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x324: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x324, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x313 as u128) + (x313 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x315 as u128) + (x318 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x325: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x325, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x314 as u128) + (x317 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x312 as u128) + (x312 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x326: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x326, (((x319 >> 63) as fiat_p384_u1) & ((((((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x311 as u128) + (x316 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x315 as u128) + (x318 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x313 as u128) + (x313 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x327: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x327, ((x322 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x321);
  let mut x328: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x328, ((x322 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x323);
  let mut x329: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x329, ((x322 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x324);
  let x330: u64 = (((((!((((0x1 as u128) + (x320 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x331: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x331, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x320 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x320 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x332: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x332, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x321, ((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x333: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x333, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x321) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x334: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x334, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x323 as u128) + (x323 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x325 as u128) + (x328 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x335: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x335, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x324 as u128) + (x324 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x326 as u128) + (x329 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x336: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x336, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x325 as u128) + (x328 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x323 as u128) + (x323 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x337: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x337, (((x330 >> 63) as fiat_p384_u1) & ((((((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x322 as u128) + (x327 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x326 as u128) + (x329 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x324 as u128) + (x324 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x338: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x338, ((x333 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x332);
  let mut x339: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x339, ((x333 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x334);
  let mut x340: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x340, ((x333 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x335);
  let x341: u64 = (((((!((((0x1 as u128) + (x331 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x342: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x342, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x331 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x331 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x343: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x343, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x332, ((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x344: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x344, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x332) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x345: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x345, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x334 as u128) + (x334 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x336 as u128) + (x339 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x346: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x346, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x335 as u128) + (x335 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x337 as u128) + (x340 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x347: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x347, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x336 as u128) + (x339 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x334 as u128) + (x334 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x348: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x348, (((x341 >> 63) as fiat_p384_u1) & ((((((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x333 as u128) + (x338 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x337 as u128) + (x340 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x335 as u128) + (x335 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x349: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x349, ((x344 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x343);
  let mut x350: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x350, ((x344 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x345);
  let mut x351: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x351, ((x344 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x346);
  let x352: u64 = (((((!((((0x1 as u128) + (x342 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x353: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x353, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x342 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x342 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x354: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x354, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x343, ((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x355: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x355, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x343) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x356: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x356, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x345 as u128) + (x345 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x347 as u128) + (x350 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x357: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x357, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x346 as u128) + (x346 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x348 as u128) + (x351 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x358: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x358, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x347 as u128) + (x350 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x345 as u128) + (x345 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x359: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x359, (((x352 >> 63) as fiat_p384_u1) & ((((((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x344 as u128) + (x349 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x348 as u128) + (x351 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x346 as u128) + (x346 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x360: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x360, ((x355 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x354);
  let mut x361: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x361, ((x355 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x356);
  let mut x362: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x362, ((x355 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x357);
  let x363: u64 = (((((!((((0x1 as u128) + (x353 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x364: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x364, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x353 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x353 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x365: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x365, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x354, ((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x366: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x366, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x354) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x367: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x367, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x356 as u128) + (x356 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x358 as u128) + (x361 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x368: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x368, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x357 as u128) + (x357 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x359 as u128) + (x362 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x369: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x369, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x358 as u128) + (x361 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x356 as u128) + (x356 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x370: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x370, (((x363 >> 63) as fiat_p384_u1) & ((((((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x355 as u128) + (x360 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x359 as u128) + (x362 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x357 as u128) + (x357 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x371: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x371, ((x366 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x365);
  let mut x372: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x372, ((x366 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x367);
  let mut x373: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x373, ((x366 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x368);
  let x374: u64 = (((((!((((0x1 as u128) + (x364 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x375: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x375, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x364 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x364 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x376: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x376, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x365, ((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x377: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x377, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x365) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x378: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x378, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x367 as u128) + (x367 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x369 as u128) + (x372 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x379: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x379, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x368 as u128) + (x368 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x370 as u128) + (x373 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x380: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x380, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x369 as u128) + (x372 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x367 as u128) + (x367 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x381: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x381, (((x374 >> 63) as fiat_p384_u1) & ((((((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x366 as u128) + (x371 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x370 as u128) + (x373 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x368 as u128) + (x368 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x382: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x382, ((x377 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x376);
  let mut x383: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x383, ((x377 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x378);
  let mut x384: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x384, ((x377 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x379);
  let x385: u64 = (((((!((((0x1 as u128) + (x375 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x386: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x386, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x375 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x375 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x387: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x387, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x376, ((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x388: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x388, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x376) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x389: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x389, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x378 as u128) + (x378 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x380 as u128) + (x383 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x390: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x390, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x379 as u128) + (x379 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x381 as u128) + (x384 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x391: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x391, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x380 as u128) + (x383 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x378 as u128) + (x378 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x392: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x392, (((x385 >> 63) as fiat_p384_u1) & ((((((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x377 as u128) + (x382 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x381 as u128) + (x384 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x379 as u128) + (x379 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x393: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x393, ((x388 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x387);
  let mut x394: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x394, ((x388 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x389);
  let mut x395: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x395, ((x388 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x390);
  let x396: u64 = (((((!((((0x1 as u128) + (x386 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x397: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x397, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x386 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x386 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x398: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x398, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x387, ((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x399: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x399, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x387) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x400: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x400, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x389 as u128) + (x389 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x391 as u128) + (x394 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x401: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x401, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x390 as u128) + (x390 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x392 as u128) + (x395 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x402: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x402, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x391 as u128) + (x394 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x389 as u128) + (x389 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x403: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x403, (((x396 >> 63) as fiat_p384_u1) & ((((((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x388 as u128) + (x393 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x392 as u128) + (x395 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x390 as u128) + (x390 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x404: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x404, ((x399 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x398);
  let mut x405: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x405, ((x399 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x400);
  let mut x406: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x406, ((x399 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x401);
  let x407: u64 = (((((!((((0x1 as u128) + (x397 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x408: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x408, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x397 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x397 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x409: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x409, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x398, ((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x410: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x410, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x398) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x411: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x411, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x400 as u128) + (x400 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x402 as u128) + (x405 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x412: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x412, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x401 as u128) + (x401 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x403 as u128) + (x406 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x413: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x413, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x402 as u128) + (x405 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x400 as u128) + (x400 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x414: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x414, (((x407 >> 63) as fiat_p384_u1) & ((((((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x399 as u128) + (x404 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x403 as u128) + (x406 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x401 as u128) + (x401 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x415: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x415, ((x410 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x409);
  let mut x416: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x416, ((x410 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x411);
  let mut x417: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x417, ((x410 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x412);
  let x418: u64 = (((((!((((0x1 as u128) + (x408 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x419: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x419, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x408 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x408 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x420: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x420, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x409, ((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x421: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x421, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x409) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x422: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x422, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x411 as u128) + (x411 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x413 as u128) + (x416 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x423: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x423, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x412 as u128) + (x412 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x414 as u128) + (x417 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x424: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x424, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x413 as u128) + (x416 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x411 as u128) + (x411 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x425: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x425, (((x418 >> 63) as fiat_p384_u1) & ((((((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x410 as u128) + (x415 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x414 as u128) + (x417 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x412 as u128) + (x412 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x426: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x426, ((x421 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x420);
  let mut x427: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x427, ((x421 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x422);
  let mut x428: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x428, ((x421 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x423);
  let x429: u64 = (((((!((((0x1 as u128) + (x419 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x430: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x430, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x419 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x419 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x431: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x431, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x420, ((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x432: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x432, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x420) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x433: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x433, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x422 as u128) + (x422 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x424 as u128) + (x427 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x434: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x434, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x423 as u128) + (x423 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x425 as u128) + (x428 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x435: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x435, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x424 as u128) + (x427 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x422 as u128) + (x422 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x436: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x436, (((x429 >> 63) as fiat_p384_u1) & ((((((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x421 as u128) + (x426 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x425 as u128) + (x428 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x423 as u128) + (x423 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x437: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x437, ((x432 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x431);
  let mut x438: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x438, ((x432 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x433);
  let mut x439: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x439, ((x432 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x434);
  let x440: u64 = (((((!((((0x1 as u128) + (x430 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x441: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x441, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x430 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x430 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x442: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x442, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x431, ((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x443: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x443, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x431) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x444: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x444, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x433 as u128) + (x433 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x435 as u128) + (x438 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x445: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x445, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x434 as u128) + (x434 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x436 as u128) + (x439 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x446: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x446, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x435 as u128) + (x438 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x433 as u128) + (x433 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x447: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x447, (((x440 >> 63) as fiat_p384_u1) & ((((((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x432 as u128) + (x437 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x436 as u128) + (x439 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x434 as u128) + (x434 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x448: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x448, ((x443 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x442);
  let mut x449: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x449, ((x443 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x444);
  let mut x450: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x450, ((x443 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x445);
  let x451: u64 = (((((!((((0x1 as u128) + (x441 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x452: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x452, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x441 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x441 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x453: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x453, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x442, ((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x454: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x454, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x442) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x455: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x455, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x444 as u128) + (x444 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x446 as u128) + (x449 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x456: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x456, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x445 as u128) + (x445 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x447 as u128) + (x450 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x457: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x457, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x446 as u128) + (x449 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x444 as u128) + (x444 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x458: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x458, (((x451 >> 63) as fiat_p384_u1) & ((((((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x443 as u128) + (x448 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x447 as u128) + (x450 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x445 as u128) + (x445 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x459: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x459, ((x454 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x453);
  let mut x460: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x460, ((x454 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x455);
  let mut x461: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x461, ((x454 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x456);
  let x462: u64 = (((((!((((0x1 as u128) + (x452 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x463: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x463, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x452 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x452 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x464: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x464, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x453, ((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x465: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x465, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x453) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x466: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x466, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x455 as u128) + (x455 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x457 as u128) + (x460 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x467: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x467, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x456 as u128) + (x456 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x458 as u128) + (x461 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x468: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x468, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x457 as u128) + (x460 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x455 as u128) + (x455 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x469: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x469, (((x462 >> 63) as fiat_p384_u1) & ((((((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x454 as u128) + (x459 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x458 as u128) + (x461 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x456 as u128) + (x456 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x470: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x470, ((x465 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x464);
  let mut x471: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x471, ((x465 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x466);
  let mut x472: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x472, ((x465 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x467);
  let x473: u64 = (((((!((((0x1 as u128) + (x463 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x474: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x474, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x463 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x463 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x475: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x475, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x464, ((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x476: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x476, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x464) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x477: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x477, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x466 as u128) + (x466 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x468 as u128) + (x471 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x478: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x478, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x467 as u128) + (x467 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x469 as u128) + (x472 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x479: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x479, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x468 as u128) + (x471 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x466 as u128) + (x466 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x480: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x480, (((x473 >> 63) as fiat_p384_u1) & ((((((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x465 as u128) + (x470 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x469 as u128) + (x472 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x467 as u128) + (x467 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x481: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x481, ((x476 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x475);
  let mut x482: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x482, ((x476 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x477);
  let mut x483: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x483, ((x476 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x478);
  let x484: u64 = (((((!((((0x1 as u128) + (x474 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x485: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x485, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x474 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x474 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x486: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x486, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x475, ((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x487: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x487, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x475) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x488: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x488, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x477 as u128) + (x477 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x479 as u128) + (x482 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x489: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x489, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x478 as u128) + (x478 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x480 as u128) + (x483 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x490: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x490, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x479 as u128) + (x482 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x477 as u128) + (x477 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x491: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x491, (((x484 >> 63) as fiat_p384_u1) & ((((((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x476 as u128) + (x481 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x480 as u128) + (x483 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x478 as u128) + (x478 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x492: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x492, ((x487 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x486);
  let mut x493: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x493, ((x487 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x488);
  let mut x494: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x494, ((x487 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x489);
  let x495: u64 = (((((!((((0x1 as u128) + (x485 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x496: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x496, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x485 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x485 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x497: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x497, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x486, ((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x498: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x498, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x486) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x499: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x499, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x488 as u128) + (x488 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x490 as u128) + (x493 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x500: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x500, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x489 as u128) + (x489 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x491 as u128) + (x494 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x501: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x501, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x490 as u128) + (x493 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x488 as u128) + (x488 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x502: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x502, (((x495 >> 63) as fiat_p384_u1) & ((((((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x487 as u128) + (x492 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x491 as u128) + (x494 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x489 as u128) + (x489 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x503: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x503, ((x498 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x497);
  let mut x504: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x504, ((x498 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x499);
  let mut x505: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x505, ((x498 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x500);
  let x506: u64 = (((((!((((0x1 as u128) + (x496 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x507: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x507, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x496 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x496 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x508: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x508, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x497, ((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x509: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x509, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x497) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x510: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x510, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x499 as u128) + (x499 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x501 as u128) + (x504 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x511: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x511, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x500 as u128) + (x500 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x502 as u128) + (x505 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x512: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x512, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x501 as u128) + (x504 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x499 as u128) + (x499 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x513: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x513, (((x506 >> 63) as fiat_p384_u1) & ((((((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x498 as u128) + (x503 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x502 as u128) + (x505 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x500 as u128) + (x500 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x514: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x514, ((x509 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x508);
  let mut x515: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x515, ((x509 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x510);
  let mut x516: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x516, ((x509 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x511);
  let x517: u64 = (((((!((((0x1 as u128) + (x507 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x518: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x518, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x507 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x507 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x519: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x519, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x508, ((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x520: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x520, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x508) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x521: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x521, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x510 as u128) + (x510 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x512 as u128) + (x515 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x522: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x522, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x511 as u128) + (x511 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x513 as u128) + (x516 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x523: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x523, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x512 as u128) + (x515 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x510 as u128) + (x510 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x524: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x524, (((x517 >> 63) as fiat_p384_u1) & ((((((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x509 as u128) + (x514 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x513 as u128) + (x516 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x511 as u128) + (x511 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x525: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x525, ((x520 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x519);
  let mut x526: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x526, ((x520 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x521);
  let mut x527: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x527, ((x520 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x522);
  let x528: u64 = (((((!((((0x1 as u128) + (x518 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x529: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x529, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x518 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x518 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x530: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x530, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x519, ((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x531: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x531, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x519) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x532: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x532, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x521 as u128) + (x521 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x523 as u128) + (x526 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x533: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x533, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x522 as u128) + (x522 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x524 as u128) + (x527 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x534: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x534, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x523 as u128) + (x526 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x521 as u128) + (x521 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x535: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x535, (((x528 >> 63) as fiat_p384_u1) & ((((((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x520 as u128) + (x525 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x524 as u128) + (x527 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x522 as u128) + (x522 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x536: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x536, ((x531 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x530);
  let mut x537: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x537, ((x531 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x532);
  let mut x538: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x538, ((x531 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x533);
  let x539: u64 = (((((!((((0x1 as u128) + (x529 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x540: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x540, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x529 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x529 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x541: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x541, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x530, ((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x542: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x542, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x530) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x543: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x543, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x532 as u128) + (x532 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x534 as u128) + (x537 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x544: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x544, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x533 as u128) + (x533 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x535 as u128) + (x538 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x545: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x545, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x534 as u128) + (x537 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x532 as u128) + (x532 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x546: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x546, (((x539 >> 63) as fiat_p384_u1) & ((((((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x531 as u128) + (x536 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x535 as u128) + (x538 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x533 as u128) + (x533 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x547: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x547, ((x542 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x541);
  let mut x548: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x548, ((x542 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x543);
  let mut x549: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x549, ((x542 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x544);
  let x550: u64 = (((((!((((0x1 as u128) + (x540 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x551: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x551, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x540 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x540 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x552: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x552, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x541, ((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x553: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x553, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x541) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x554: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x554, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x543 as u128) + (x543 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x545 as u128) + (x548 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x555: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x555, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x544 as u128) + (x544 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x546 as u128) + (x549 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x556: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x556, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x545 as u128) + (x548 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x543 as u128) + (x543 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x557: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x557, (((x550 >> 63) as fiat_p384_u1) & ((((((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x542 as u128) + (x547 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x546 as u128) + (x549 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x544 as u128) + (x544 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x558: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x558, ((x553 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x552);
  let mut x559: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x559, ((x553 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x554);
  let mut x560: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x560, ((x553 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x555);
  let x561: u64 = (((((!((((0x1 as u128) + (x551 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x562: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x562, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x551 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x551 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x563: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x563, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x552, ((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x564: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x564, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x552) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x565: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x565, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x554 as u128) + (x554 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x556 as u128) + (x559 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x566: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x566, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x555 as u128) + (x555 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x557 as u128) + (x560 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x567: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x567, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x556 as u128) + (x559 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x554 as u128) + (x554 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x568: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x568, (((x561 >> 63) as fiat_p384_u1) & ((((((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x553 as u128) + (x558 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x557 as u128) + (x560 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x555 as u128) + (x555 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x569: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x569, ((x564 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x563);
  let mut x570: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x570, ((x564 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x565);
  let mut x571: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x571, ((x564 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x566);
  let x572: u64 = (((((!((((0x1 as u128) + (x562 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x573: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x573, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x562 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x562 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x574: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x574, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x563, ((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x575: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x575, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x563) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x576: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x576, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x565 as u128) + (x565 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x567 as u128) + (x570 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x577: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x577, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x566 as u128) + (x566 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x568 as u128) + (x571 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x578: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x578, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x567 as u128) + (x570 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x565 as u128) + (x565 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x579: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x579, (((x572 >> 63) as fiat_p384_u1) & ((((((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x564 as u128) + (x569 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x568 as u128) + (x571 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x566 as u128) + (x566 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x580: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x580, ((x575 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x574);
  let mut x581: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x581, ((x575 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x576);
  let mut x582: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x582, ((x575 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x577);
  let x583: u64 = (((((!((((0x1 as u128) + (x573 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x584: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x584, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x573 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x573 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x585: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x585, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x574, ((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x586: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x586, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x574) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x587: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x587, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x576 as u128) + (x576 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x578 as u128) + (x581 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x588: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x588, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x577 as u128) + (x577 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x579 as u128) + (x582 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x589: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x589, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x578 as u128) + (x581 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x576 as u128) + (x576 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x590: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x590, (((x583 >> 63) as fiat_p384_u1) & ((((((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x575 as u128) + (x580 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x579 as u128) + (x582 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x577 as u128) + (x577 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x591: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x591, ((x586 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x585);
  let mut x592: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x592, ((x586 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x587);
  let mut x593: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x593, ((x586 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x588);
  let x594: u64 = (((((!((((0x1 as u128) + (x584 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x595: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x595, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x584 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x584 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x596: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x596, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x585, ((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x597: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x597, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x585) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x598: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x598, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x587 as u128) + (x587 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x589 as u128) + (x592 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x599: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x599, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x588 as u128) + (x588 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x590 as u128) + (x593 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x600: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x600, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x589 as u128) + (x592 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x587 as u128) + (x587 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x601: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x601, (((x594 >> 63) as fiat_p384_u1) & ((((((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x586 as u128) + (x591 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x590 as u128) + (x593 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x588 as u128) + (x588 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x602: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x602, ((x597 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x596);
  let mut x603: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x603, ((x597 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x598);
  let mut x604: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x604, ((x597 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x599);
  let x605: u64 = (((((!((((0x1 as u128) + (x595 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x606: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x606, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x595 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x595 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x607: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x607, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x596, ((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x608: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x608, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x596) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x609: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x609, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x598 as u128) + (x598 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x600 as u128) + (x603 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x610: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x610, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x599 as u128) + (x599 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x601 as u128) + (x604 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x611: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x611, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x600 as u128) + (x603 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x598 as u128) + (x598 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x612: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x612, (((x605 >> 63) as fiat_p384_u1) & ((((((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x597 as u128) + (x602 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x601 as u128) + (x604 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x599 as u128) + (x599 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x613: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x613, ((x608 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x607);
  let mut x614: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x614, ((x608 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x609);
  let mut x615: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x615, ((x608 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x610);
  let x616: u64 = (((((!((((0x1 as u128) + (x606 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x617: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x617, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x606 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x606 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x618: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x618, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x607, ((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x619: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x619, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x607) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x620: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x620, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x609 as u128) + (x609 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x611 as u128) + (x614 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x621: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x621, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x610 as u128) + (x610 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x612 as u128) + (x615 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x622: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x622, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x611 as u128) + (x614 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x609 as u128) + (x609 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x623: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x623, (((x616 >> 63) as fiat_p384_u1) & ((((((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x608 as u128) + (x613 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x612 as u128) + (x615 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x610 as u128) + (x610 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x624: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x624, ((x619 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x618);
  let mut x625: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x625, ((x619 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x620);
  let mut x626: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x626, ((x619 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x621);
  let x627: u64 = (((((!((((0x1 as u128) + (x617 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x628: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x628, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x617 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x617 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x629: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x629, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x618, ((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x630: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x630, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x618) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x631: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x631, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x620 as u128) + (x620 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x622 as u128) + (x625 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x632: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x632, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x621 as u128) + (x621 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x623 as u128) + (x626 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x633: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x633, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x622 as u128) + (x625 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x620 as u128) + (x620 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x634: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x634, (((x627 >> 63) as fiat_p384_u1) & ((((((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x619 as u128) + (x624 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x623 as u128) + (x626 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x621 as u128) + (x621 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x635: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x635, ((x630 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x629);
  let mut x636: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x636, ((x630 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x631);
  let mut x637: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x637, ((x630 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x632);
  let x638: u64 = (((((!((((0x1 as u128) + (x628 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x639: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x639, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x628 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x628 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x640: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x640, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x629, ((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x641: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x641, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x629) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x642: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x642, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x631 as u128) + (x631 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x633 as u128) + (x636 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x643: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x643, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x632 as u128) + (x632 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x634 as u128) + (x637 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x644: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x644, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x633 as u128) + (x636 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x631 as u128) + (x631 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x645: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x645, (((x638 >> 63) as fiat_p384_u1) & ((((((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x630 as u128) + (x635 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x634 as u128) + (x637 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x632 as u128) + (x632 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x646: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x646, ((x641 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x640);
  let mut x647: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x647, ((x641 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x642);
  let mut x648: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x648, ((x641 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x643);
  let x649: u64 = (((((!((((0x1 as u128) + (x639 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x650: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x650, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x639 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x639 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x651: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x651, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x640, ((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x652: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x652, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x640) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x653: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x653, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x642 as u128) + (x642 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x644 as u128) + (x647 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x654: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x654, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x643 as u128) + (x643 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x645 as u128) + (x648 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x655: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x655, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x644 as u128) + (x647 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x642 as u128) + (x642 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x656: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x656, (((x649 >> 63) as fiat_p384_u1) & ((((((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x641 as u128) + (x646 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x645 as u128) + (x648 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x643 as u128) + (x643 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x657: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x657, ((x652 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x651);
  let mut x658: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x658, ((x652 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x653);
  let mut x659: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x659, ((x652 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x654);
  let x660: u64 = (((((!((((0x1 as u128) + (x650 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x661: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x661, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((0x1 as u128) + (x650 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((0x1 as u128) + (x650 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x662: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x662, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), x651, ((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)));
  let mut x663: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x663, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x651) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x664: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x664, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x653 as u128) + (x653 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x655 as u128) + (x658 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x665: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x665, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x654 as u128) + (x654 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x656 as u128) + (x659 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x666: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x666, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x655 as u128) + (x658 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x653 as u128) + (x653 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x667: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x667, (((x660 >> 63) as fiat_p384_u1) & ((((((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x652 as u128) + (x657 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x656 as u128) + (x659 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x654 as u128) + (x654 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x668: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x668, ((x663 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x662);
  let mut x669: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x669, ((x663 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x664);
  let mut x670: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x670, ((x663 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x665);
  let x671: u64 = (((((!((((0x1 as u128) + (x661 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x672: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x672, (((x671 >> 63) as fiat_p384_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)), (((((!x662) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x673: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x673, (((x671 >> 63) as fiat_p384_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x664 as u128) + (x664 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x666 as u128) + (x669 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x674: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x674, (((x671 >> 63) as fiat_p384_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x665 as u128) + (x665 as u128)) & (0xffffffffffffffff as u128)) as u64), ((((x667 as u128) + (x670 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x675: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x675, (((x671 >> 63) as fiat_p384_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x666 as u128) + (x669 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x664 as u128) + (x664 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x676: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x676, (((x671 >> 63) as fiat_p384_u1) & ((((((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) & 0x8000000000000000) | (((((x663 as u128) + (x668 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 1)) & (0x1 as u64)) as fiat_p384_u1)), ((((x667 as u128) + (x670 as u128)) & (0xffffffffffffffff as u128)) as u64), (((((!((((x665 as u128) + (x665 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64));
  let mut x677: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x677, ((x672 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x673);
  let mut x678: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x678, ((x672 & (0x1 as u64)) as fiat_p384_u1), (0x0 as u64), x674);
  let mut x679: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x679, (((arg1[6]) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x680: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x680, ((((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x681: u64 = 0;
  let mut x682: u64 = 0;
  fiat_p384_mulx_u64(&mut x681, &mut x682, x680, (arg1[0]));
  let mut x683: u64 = 0;
  let mut x684: u64 = 0;
  fiat_p384_mulx_u64(&mut x683, &mut x684, x680, (arg1[1]));
  let mut x685: u64 = 0;
  let mut x686: u64 = 0;
  fiat_p384_mulx_u64(&mut x685, &mut x686, x680, (arg1[0]));
  let mut x687: u64 = 0;
  let mut x688: u64 = 0;
  fiat_p384_mulx_u64(&mut x687, &mut x688, x680, (arg1[2]));
  let mut x689: u64 = 0;
  let mut x690: u64 = 0;
  fiat_p384_mulx_u64(&mut x689, &mut x690, x680, (arg1[1]));
  let mut x691: u64 = 0;
  let mut x692: u64 = 0;
  fiat_p384_mulx_u64(&mut x691, &mut x692, x680, (arg1[0]));
  let mut x693: u64 = 0;
  let mut x694: u64 = 0;
  fiat_p384_mulx_u64(&mut x693, &mut x694, x680, (arg1[3]));
  let mut x695: u64 = 0;
  let mut x696: u64 = 0;
  fiat_p384_mulx_u64(&mut x695, &mut x696, x680, (arg1[2]));
  let mut x697: u64 = 0;
  let mut x698: u64 = 0;
  fiat_p384_mulx_u64(&mut x697, &mut x698, x680, (arg1[1]));
  let mut x699: u64 = 0;
  let mut x700: u64 = 0;
  fiat_p384_mulx_u64(&mut x699, &mut x700, x680, (arg1[0]));
  let mut x701: u64 = 0;
  let mut x702: u64 = 0;
  fiat_p384_mulx_u64(&mut x701, &mut x702, x680, (arg1[4]));
  let mut x703: u64 = 0;
  let mut x704: u64 = 0;
  fiat_p384_mulx_u64(&mut x703, &mut x704, x680, (arg1[3]));
  let mut x705: u64 = 0;
  let mut x706: u64 = 0;
  fiat_p384_mulx_u64(&mut x705, &mut x706, x680, (arg1[2]));
  let mut x707: u64 = 0;
  let mut x708: u64 = 0;
  fiat_p384_mulx_u64(&mut x707, &mut x708, x680, (arg1[1]));
  let mut x709: u64 = 0;
  let mut x710: u64 = 0;
  fiat_p384_mulx_u64(&mut x709, &mut x710, x680, (arg1[0]));
  let mut x711: u64 = 0;
  let mut x712: u64 = 0;
  fiat_p384_mulx_u64(&mut x711, &mut x712, x680, (arg1[5]));
  let mut x713: u64 = 0;
  let mut x714: u64 = 0;
  fiat_p384_mulx_u64(&mut x713, &mut x714, x680, (arg1[4]));
  let mut x715: u64 = 0;
  let mut x716: u64 = 0;
  fiat_p384_mulx_u64(&mut x715, &mut x716, x680, (arg1[3]));
  let mut x717: u64 = 0;
  let mut x718: u64 = 0;
  fiat_p384_mulx_u64(&mut x717, &mut x718, x680, (arg1[2]));
  let mut x719: u64 = 0;
  let mut x720: u64 = 0;
  fiat_p384_mulx_u64(&mut x719, &mut x720, x680, (arg1[1]));
  let mut x721: u64 = 0;
  let mut x722: u64 = 0;
  fiat_p384_mulx_u64(&mut x721, &mut x722, x680, (arg1[0]));
  let mut x723: u64 = 0;
  let mut x724: u64 = 0;
  fiat_p384_mulx_u64(&mut x723, &mut x724, x680, (arg1[6]));
  let mut x725: u64 = 0;
  let mut x726: u64 = 0;
  fiat_p384_mulx_u64(&mut x725, &mut x726, x680, (arg1[5]));
  let mut x727: u64 = 0;
  let mut x728: u64 = 0;
  fiat_p384_mulx_u64(&mut x727, &mut x728, x680, (arg1[4]));
  let mut x729: u64 = 0;
  let mut x730: u64 = 0;
  fiat_p384_mulx_u64(&mut x729, &mut x730, x680, (arg1[3]));
  let mut x731: u64 = 0;
  let mut x732: u64 = 0;
  fiat_p384_mulx_u64(&mut x731, &mut x732, x680, (arg1[2]));
  let mut x733: u64 = 0;
  let mut x734: u64 = 0;
  fiat_p384_mulx_u64(&mut x733, &mut x734, x680, (arg1[1]));
  let mut x735: u64 = 0;
  let mut x736: u64 = 0;
  fiat_p384_mulx_u64(&mut x735, &mut x736, x680, (arg1[0]));
  let mut x737: u64 = 0;
  let mut x738: u64 = 0;
  fiat_p384_mulx_u64(&mut x737, &mut x738, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), x679);
  let mut x739: u64 = 0;
  let mut x740: u64 = 0;
  fiat_p384_mulx_u64(&mut x739, &mut x740, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[6]));
  let mut x741: u64 = 0;
  let mut x742: u64 = 0;
  fiat_p384_mulx_u64(&mut x741, &mut x742, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[5]));
  let mut x743: u64 = 0;
  let mut x744: u64 = 0;
  fiat_p384_mulx_u64(&mut x743, &mut x744, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[4]));
  let mut x745: u64 = 0;
  let mut x746: u64 = 0;
  fiat_p384_mulx_u64(&mut x745, &mut x746, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[3]));
  let mut x747: u64 = 0;
  let mut x748: u64 = 0;
  fiat_p384_mulx_u64(&mut x747, &mut x748, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[2]));
  let mut x749: u64 = 0;
  let mut x750: u64 = 0;
  fiat_p384_mulx_u64(&mut x749, &mut x750, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[1]));
  let mut x751: u64 = 0;
  let mut x752: u64 = 0;
  fiat_p384_mulx_u64(&mut x751, &mut x752, ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[0]));
  let mut x753: u64 = 0;
  let mut x754: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x753, &mut x754, 0x0, x740, x681);
  let mut x755: u64 = 0;
  let mut x756: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x755, &mut x756, 0x0, x753, x683);
  let mut x757: u64 = 0;
  let mut x758: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x757, &mut x758, 0x0, x742, x685);
  let mut x759: u64 = 0;
  let mut x760: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x759, &mut x760, x758, x755, x686);
  let mut x761: u64 = 0;
  let mut x762: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x761, &mut x762, 0x0, x757, x689);
  let mut x763: u64 = 0;
  let mut x764: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x763, &mut x764, x762, x759, x687);
  let mut x765: u64 = 0;
  let mut x766: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x765, &mut x766, 0x0, x744, x691);
  let mut x767: u64 = 0;
  let mut x768: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x767, &mut x768, x766, x761, x692);
  let mut x769: u64 = 0;
  let mut x770: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x769, &mut x770, x768, x763, x690);
  let mut x771: u64 = 0;
  let mut x772: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x771, &mut x772, 0x0, x765, x697);
  let mut x773: u64 = 0;
  let mut x774: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x773, &mut x774, x772, x767, x695);
  let mut x775: u64 = 0;
  let mut x776: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x775, &mut x776, x774, x769, x693);
  let mut x777: u64 = 0;
  let mut x778: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x777, &mut x778, 0x0, x746, x699);
  let mut x779: u64 = 0;
  let mut x780: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x779, &mut x780, x778, x771, x700);
  let mut x781: u64 = 0;
  let mut x782: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x781, &mut x782, x780, x773, x698);
  let mut x783: u64 = 0;
  let mut x784: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x783, &mut x784, x782, x775, x696);
  let mut x785: u64 = 0;
  let mut x786: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x785, &mut x786, 0x0, x777, x707);
  let mut x787: u64 = 0;
  let mut x788: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x787, &mut x788, x786, x779, x705);
  let mut x789: u64 = 0;
  let mut x790: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x789, &mut x790, x788, x781, x703);
  let mut x791: u64 = 0;
  let mut x792: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x791, &mut x792, x790, x783, x701);
  let mut x793: u64 = 0;
  let mut x794: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x793, &mut x794, 0x0, x748, x709);
  let mut x795: u64 = 0;
  let mut x796: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x795, &mut x796, x794, x785, x710);
  let mut x797: u64 = 0;
  let mut x798: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x797, &mut x798, x796, x787, x708);
  let mut x799: u64 = 0;
  let mut x800: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x799, &mut x800, x798, x789, x706);
  let mut x801: u64 = 0;
  let mut x802: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x801, &mut x802, x800, x791, x704);
  let mut x803: u64 = 0;
  let mut x804: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x803, &mut x804, 0x0, x793, x719);
  let mut x805: u64 = 0;
  let mut x806: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x805, &mut x806, x804, x795, x717);
  let mut x807: u64 = 0;
  let mut x808: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x807, &mut x808, x806, x797, x715);
  let mut x809: u64 = 0;
  let mut x810: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x809, &mut x810, x808, x799, x713);
  let mut x811: u64 = 0;
  let mut x812: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x811, &mut x812, x810, x801, x711);
  let mut x813: u64 = 0;
  let mut x814: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x813, &mut x814, 0x0, x750, x721);
  let mut x815: u64 = 0;
  let mut x816: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x815, &mut x816, x814, x803, x722);
  let mut x817: u64 = 0;
  let mut x818: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x817, &mut x818, x816, x805, x720);
  let mut x819: u64 = 0;
  let mut x820: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x819, &mut x820, x818, x807, x718);
  let mut x821: u64 = 0;
  let mut x822: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x821, &mut x822, x820, x809, x716);
  let mut x823: u64 = 0;
  let mut x824: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x823, &mut x824, x822, x811, x714);
  let mut x825: u64 = 0;
  let mut x826: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x825, &mut x826, 0x0, x813, x733);
  let mut x827: u64 = 0;
  let mut x828: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x827, &mut x828, x826, x815, x731);
  let mut x829: u64 = 0;
  let mut x830: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x829, &mut x830, x828, x817, x729);
  let mut x831: u64 = 0;
  let mut x832: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x831, &mut x832, x830, x819, x727);
  let mut x833: u64 = 0;
  let mut x834: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x833, &mut x834, x832, x821, x725);
  let mut x835: u64 = 0;
  let mut x836: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x835, &mut x836, x834, x823, x723);
  let mut x837: u64 = 0;
  let mut x838: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x837, &mut x838, 0x0, x752, x735);
  let mut x839: u64 = 0;
  let mut x840: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x839, &mut x840, x838, x825, x736);
  let mut x841: u64 = 0;
  let mut x842: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x841, &mut x842, x840, x827, x734);
  let mut x843: u64 = 0;
  let mut x844: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x843, &mut x844, x842, x829, x732);
  let mut x845: u64 = 0;
  let mut x846: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x845, &mut x846, x844, x831, x730);
  let mut x847: u64 = 0;
  let mut x848: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x847, &mut x848, x846, x833, x728);
  let mut x849: u64 = 0;
  let mut x850: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x849, &mut x850, x848, x835, x726);
  let mut x851: u64 = 0;
  let mut x852: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x851, &mut x852, 0x0, x837, x749);
  let mut x853: u64 = 0;
  let mut x854: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x853, &mut x854, x852, x839, x747);
  let mut x855: u64 = 0;
  let mut x856: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x855, &mut x856, x854, x841, x745);
  let mut x857: u64 = 0;
  let mut x858: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x857, &mut x858, x856, x843, x743);
  let mut x859: u64 = 0;
  let mut x860: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x859, &mut x860, x858, x845, x741);
  let mut x861: u64 = 0;
  let mut x862: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x861, &mut x862, x860, x847, x739);
  let mut x863: u64 = 0;
  let mut x864: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x863, &mut x864, x862, x849, x737);
  let mut x865: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x865, (((arg2[6]) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x866: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x866, ((((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x867: u64 = 0;
  let mut x868: u64 = 0;
  fiat_p384_mulx_u64(&mut x867, &mut x868, x866, (arg2[0]));
  let mut x869: u64 = 0;
  let mut x870: u64 = 0;
  fiat_p384_mulx_u64(&mut x869, &mut x870, x866, (arg2[1]));
  let mut x871: u64 = 0;
  let mut x872: u64 = 0;
  fiat_p384_mulx_u64(&mut x871, &mut x872, x866, (arg2[0]));
  let mut x873: u64 = 0;
  let mut x874: u64 = 0;
  fiat_p384_mulx_u64(&mut x873, &mut x874, x866, (arg2[2]));
  let mut x875: u64 = 0;
  let mut x876: u64 = 0;
  fiat_p384_mulx_u64(&mut x875, &mut x876, x866, (arg2[1]));
  let mut x877: u64 = 0;
  let mut x878: u64 = 0;
  fiat_p384_mulx_u64(&mut x877, &mut x878, x866, (arg2[0]));
  let mut x879: u64 = 0;
  let mut x880: u64 = 0;
  fiat_p384_mulx_u64(&mut x879, &mut x880, x866, (arg2[3]));
  let mut x881: u64 = 0;
  let mut x882: u64 = 0;
  fiat_p384_mulx_u64(&mut x881, &mut x882, x866, (arg2[2]));
  let mut x883: u64 = 0;
  let mut x884: u64 = 0;
  fiat_p384_mulx_u64(&mut x883, &mut x884, x866, (arg2[1]));
  let mut x885: u64 = 0;
  let mut x886: u64 = 0;
  fiat_p384_mulx_u64(&mut x885, &mut x886, x866, (arg2[0]));
  let mut x887: u64 = 0;
  let mut x888: u64 = 0;
  fiat_p384_mulx_u64(&mut x887, &mut x888, x866, (arg2[4]));
  let mut x889: u64 = 0;
  let mut x890: u64 = 0;
  fiat_p384_mulx_u64(&mut x889, &mut x890, x866, (arg2[3]));
  let mut x891: u64 = 0;
  let mut x892: u64 = 0;
  fiat_p384_mulx_u64(&mut x891, &mut x892, x866, (arg2[2]));
  let mut x893: u64 = 0;
  let mut x894: u64 = 0;
  fiat_p384_mulx_u64(&mut x893, &mut x894, x866, (arg2[1]));
  let mut x895: u64 = 0;
  let mut x896: u64 = 0;
  fiat_p384_mulx_u64(&mut x895, &mut x896, x866, (arg2[0]));
  let mut x897: u64 = 0;
  let mut x898: u64 = 0;
  fiat_p384_mulx_u64(&mut x897, &mut x898, x866, (arg2[5]));
  let mut x899: u64 = 0;
  let mut x900: u64 = 0;
  fiat_p384_mulx_u64(&mut x899, &mut x900, x866, (arg2[4]));
  let mut x901: u64 = 0;
  let mut x902: u64 = 0;
  fiat_p384_mulx_u64(&mut x901, &mut x902, x866, (arg2[3]));
  let mut x903: u64 = 0;
  let mut x904: u64 = 0;
  fiat_p384_mulx_u64(&mut x903, &mut x904, x866, (arg2[2]));
  let mut x905: u64 = 0;
  let mut x906: u64 = 0;
  fiat_p384_mulx_u64(&mut x905, &mut x906, x866, (arg2[1]));
  let mut x907: u64 = 0;
  let mut x908: u64 = 0;
  fiat_p384_mulx_u64(&mut x907, &mut x908, x866, (arg2[0]));
  let mut x909: u64 = 0;
  let mut x910: u64 = 0;
  fiat_p384_mulx_u64(&mut x909, &mut x910, x866, (arg2[6]));
  let mut x911: u64 = 0;
  let mut x912: u64 = 0;
  fiat_p384_mulx_u64(&mut x911, &mut x912, x866, (arg2[5]));
  let mut x913: u64 = 0;
  let mut x914: u64 = 0;
  fiat_p384_mulx_u64(&mut x913, &mut x914, x866, (arg2[4]));
  let mut x915: u64 = 0;
  let mut x916: u64 = 0;
  fiat_p384_mulx_u64(&mut x915, &mut x916, x866, (arg2[3]));
  let mut x917: u64 = 0;
  let mut x918: u64 = 0;
  fiat_p384_mulx_u64(&mut x917, &mut x918, x866, (arg2[2]));
  let mut x919: u64 = 0;
  let mut x920: u64 = 0;
  fiat_p384_mulx_u64(&mut x919, &mut x920, x866, (arg2[1]));
  let mut x921: u64 = 0;
  let mut x922: u64 = 0;
  fiat_p384_mulx_u64(&mut x921, &mut x922, x866, (arg2[0]));
  let mut x923: u64 = 0;
  let mut x924: u64 = 0;
  fiat_p384_mulx_u64(&mut x923, &mut x924, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), x865);
  let mut x925: u64 = 0;
  let mut x926: u64 = 0;
  fiat_p384_mulx_u64(&mut x925, &mut x926, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[6]));
  let mut x927: u64 = 0;
  let mut x928: u64 = 0;
  fiat_p384_mulx_u64(&mut x927, &mut x928, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[5]));
  let mut x929: u64 = 0;
  let mut x930: u64 = 0;
  fiat_p384_mulx_u64(&mut x929, &mut x930, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[4]));
  let mut x931: u64 = 0;
  let mut x932: u64 = 0;
  fiat_p384_mulx_u64(&mut x931, &mut x932, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[3]));
  let mut x933: u64 = 0;
  let mut x934: u64 = 0;
  fiat_p384_mulx_u64(&mut x933, &mut x934, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[2]));
  let mut x935: u64 = 0;
  let mut x936: u64 = 0;
  fiat_p384_mulx_u64(&mut x935, &mut x936, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[1]));
  let mut x937: u64 = 0;
  let mut x938: u64 = 0;
  fiat_p384_mulx_u64(&mut x937, &mut x938, ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[0]));
  let mut x939: u64 = 0;
  let mut x940: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x939, &mut x940, 0x0, x926, x867);
  let mut x941: u64 = 0;
  let mut x942: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x941, &mut x942, 0x0, x939, x869);
  let mut x943: u64 = 0;
  let mut x944: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x943, &mut x944, 0x0, x928, x871);
  let mut x945: u64 = 0;
  let mut x946: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x945, &mut x946, x944, x941, x872);
  let mut x947: u64 = 0;
  let mut x948: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x947, &mut x948, 0x0, x943, x875);
  let mut x949: u64 = 0;
  let mut x950: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x949, &mut x950, x948, x945, x873);
  let mut x951: u64 = 0;
  let mut x952: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x951, &mut x952, 0x0, x930, x877);
  let mut x953: u64 = 0;
  let mut x954: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x953, &mut x954, x952, x947, x878);
  let mut x955: u64 = 0;
  let mut x956: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x955, &mut x956, x954, x949, x876);
  let mut x957: u64 = 0;
  let mut x958: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x957, &mut x958, 0x0, x951, x883);
  let mut x959: u64 = 0;
  let mut x960: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x959, &mut x960, x958, x953, x881);
  let mut x961: u64 = 0;
  let mut x962: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x961, &mut x962, x960, x955, x879);
  let mut x963: u64 = 0;
  let mut x964: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x963, &mut x964, 0x0, x932, x885);
  let mut x965: u64 = 0;
  let mut x966: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x965, &mut x966, x964, x957, x886);
  let mut x967: u64 = 0;
  let mut x968: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x967, &mut x968, x966, x959, x884);
  let mut x969: u64 = 0;
  let mut x970: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x969, &mut x970, x968, x961, x882);
  let mut x971: u64 = 0;
  let mut x972: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x971, &mut x972, 0x0, x963, x893);
  let mut x973: u64 = 0;
  let mut x974: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x973, &mut x974, x972, x965, x891);
  let mut x975: u64 = 0;
  let mut x976: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x975, &mut x976, x974, x967, x889);
  let mut x977: u64 = 0;
  let mut x978: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x977, &mut x978, x976, x969, x887);
  let mut x979: u64 = 0;
  let mut x980: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x979, &mut x980, 0x0, x934, x895);
  let mut x981: u64 = 0;
  let mut x982: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x981, &mut x982, x980, x971, x896);
  let mut x983: u64 = 0;
  let mut x984: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x983, &mut x984, x982, x973, x894);
  let mut x985: u64 = 0;
  let mut x986: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x985, &mut x986, x984, x975, x892);
  let mut x987: u64 = 0;
  let mut x988: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x987, &mut x988, x986, x977, x890);
  let mut x989: u64 = 0;
  let mut x990: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x989, &mut x990, 0x0, x979, x905);
  let mut x991: u64 = 0;
  let mut x992: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x991, &mut x992, x990, x981, x903);
  let mut x993: u64 = 0;
  let mut x994: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x993, &mut x994, x992, x983, x901);
  let mut x995: u64 = 0;
  let mut x996: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x995, &mut x996, x994, x985, x899);
  let mut x997: u64 = 0;
  let mut x998: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x997, &mut x998, x996, x987, x897);
  let mut x999: u64 = 0;
  let mut x1000: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x999, &mut x1000, 0x0, x936, x907);
  let mut x1001: u64 = 0;
  let mut x1002: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1001, &mut x1002, x1000, x989, x908);
  let mut x1003: u64 = 0;
  let mut x1004: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1003, &mut x1004, x1002, x991, x906);
  let mut x1005: u64 = 0;
  let mut x1006: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1005, &mut x1006, x1004, x993, x904);
  let mut x1007: u64 = 0;
  let mut x1008: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1007, &mut x1008, x1006, x995, x902);
  let mut x1009: u64 = 0;
  let mut x1010: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1009, &mut x1010, x1008, x997, x900);
  let mut x1011: u64 = 0;
  let mut x1012: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1011, &mut x1012, 0x0, x999, x919);
  let mut x1013: u64 = 0;
  let mut x1014: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1013, &mut x1014, x1012, x1001, x917);
  let mut x1015: u64 = 0;
  let mut x1016: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1015, &mut x1016, x1014, x1003, x915);
  let mut x1017: u64 = 0;
  let mut x1018: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1017, &mut x1018, x1016, x1005, x913);
  let mut x1019: u64 = 0;
  let mut x1020: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1019, &mut x1020, x1018, x1007, x911);
  let mut x1021: u64 = 0;
  let mut x1022: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1021, &mut x1022, x1020, x1009, x909);
  let mut x1023: u64 = 0;
  let mut x1024: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1023, &mut x1024, 0x0, x938, x921);
  let mut x1025: u64 = 0;
  let mut x1026: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1025, &mut x1026, x1024, x1011, x922);
  let mut x1027: u64 = 0;
  let mut x1028: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1027, &mut x1028, x1026, x1013, x920);
  let mut x1029: u64 = 0;
  let mut x1030: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1029, &mut x1030, x1028, x1015, x918);
  let mut x1031: u64 = 0;
  let mut x1032: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1031, &mut x1032, x1030, x1017, x916);
  let mut x1033: u64 = 0;
  let mut x1034: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1033, &mut x1034, x1032, x1019, x914);
  let mut x1035: u64 = 0;
  let mut x1036: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1035, &mut x1036, x1034, x1021, x912);
  let mut x1037: u64 = 0;
  let mut x1038: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1037, &mut x1038, 0x0, x1023, x935);
  let mut x1039: u64 = 0;
  let mut x1040: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1039, &mut x1040, x1038, x1025, x933);
  let mut x1041: u64 = 0;
  let mut x1042: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1041, &mut x1042, x1040, x1027, x931);
  let mut x1043: u64 = 0;
  let mut x1044: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1043, &mut x1044, x1042, x1029, x929);
  let mut x1045: u64 = 0;
  let mut x1046: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1045, &mut x1046, x1044, x1031, x927);
  let mut x1047: u64 = 0;
  let mut x1048: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1047, &mut x1048, x1046, x1033, x925);
  let mut x1049: u64 = 0;
  let mut x1050: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1049, &mut x1050, x1048, x1035, x923);
  let mut x1051: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1051, (((arg1[6]) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x1052: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1052, ((((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x1053: u64 = 0;
  let mut x1054: u64 = 0;
  fiat_p384_mulx_u64(&mut x1053, &mut x1054, x1052, (arg1[0]));
  let mut x1055: u64 = 0;
  let mut x1056: u64 = 0;
  fiat_p384_mulx_u64(&mut x1055, &mut x1056, x1052, (arg1[1]));
  let mut x1057: u64 = 0;
  let mut x1058: u64 = 0;
  fiat_p384_mulx_u64(&mut x1057, &mut x1058, x1052, (arg1[0]));
  let mut x1059: u64 = 0;
  let mut x1060: u64 = 0;
  fiat_p384_mulx_u64(&mut x1059, &mut x1060, x1052, (arg1[2]));
  let mut x1061: u64 = 0;
  let mut x1062: u64 = 0;
  fiat_p384_mulx_u64(&mut x1061, &mut x1062, x1052, (arg1[1]));
  let mut x1063: u64 = 0;
  let mut x1064: u64 = 0;
  fiat_p384_mulx_u64(&mut x1063, &mut x1064, x1052, (arg1[0]));
  let mut x1065: u64 = 0;
  let mut x1066: u64 = 0;
  fiat_p384_mulx_u64(&mut x1065, &mut x1066, x1052, (arg1[3]));
  let mut x1067: u64 = 0;
  let mut x1068: u64 = 0;
  fiat_p384_mulx_u64(&mut x1067, &mut x1068, x1052, (arg1[2]));
  let mut x1069: u64 = 0;
  let mut x1070: u64 = 0;
  fiat_p384_mulx_u64(&mut x1069, &mut x1070, x1052, (arg1[1]));
  let mut x1071: u64 = 0;
  let mut x1072: u64 = 0;
  fiat_p384_mulx_u64(&mut x1071, &mut x1072, x1052, (arg1[0]));
  let mut x1073: u64 = 0;
  let mut x1074: u64 = 0;
  fiat_p384_mulx_u64(&mut x1073, &mut x1074, x1052, (arg1[4]));
  let mut x1075: u64 = 0;
  let mut x1076: u64 = 0;
  fiat_p384_mulx_u64(&mut x1075, &mut x1076, x1052, (arg1[3]));
  let mut x1077: u64 = 0;
  let mut x1078: u64 = 0;
  fiat_p384_mulx_u64(&mut x1077, &mut x1078, x1052, (arg1[2]));
  let mut x1079: u64 = 0;
  let mut x1080: u64 = 0;
  fiat_p384_mulx_u64(&mut x1079, &mut x1080, x1052, (arg1[1]));
  let mut x1081: u64 = 0;
  let mut x1082: u64 = 0;
  fiat_p384_mulx_u64(&mut x1081, &mut x1082, x1052, (arg1[0]));
  let mut x1083: u64 = 0;
  let mut x1084: u64 = 0;
  fiat_p384_mulx_u64(&mut x1083, &mut x1084, x1052, (arg1[5]));
  let mut x1085: u64 = 0;
  let mut x1086: u64 = 0;
  fiat_p384_mulx_u64(&mut x1085, &mut x1086, x1052, (arg1[4]));
  let mut x1087: u64 = 0;
  let mut x1088: u64 = 0;
  fiat_p384_mulx_u64(&mut x1087, &mut x1088, x1052, (arg1[3]));
  let mut x1089: u64 = 0;
  let mut x1090: u64 = 0;
  fiat_p384_mulx_u64(&mut x1089, &mut x1090, x1052, (arg1[2]));
  let mut x1091: u64 = 0;
  let mut x1092: u64 = 0;
  fiat_p384_mulx_u64(&mut x1091, &mut x1092, x1052, (arg1[1]));
  let mut x1093: u64 = 0;
  let mut x1094: u64 = 0;
  fiat_p384_mulx_u64(&mut x1093, &mut x1094, x1052, (arg1[0]));
  let mut x1095: u64 = 0;
  let mut x1096: u64 = 0;
  fiat_p384_mulx_u64(&mut x1095, &mut x1096, x1052, (arg1[6]));
  let mut x1097: u64 = 0;
  let mut x1098: u64 = 0;
  fiat_p384_mulx_u64(&mut x1097, &mut x1098, x1052, (arg1[5]));
  let mut x1099: u64 = 0;
  let mut x1100: u64 = 0;
  fiat_p384_mulx_u64(&mut x1099, &mut x1100, x1052, (arg1[4]));
  let mut x1101: u64 = 0;
  let mut x1102: u64 = 0;
  fiat_p384_mulx_u64(&mut x1101, &mut x1102, x1052, (arg1[3]));
  let mut x1103: u64 = 0;
  let mut x1104: u64 = 0;
  fiat_p384_mulx_u64(&mut x1103, &mut x1104, x1052, (arg1[2]));
  let mut x1105: u64 = 0;
  let mut x1106: u64 = 0;
  fiat_p384_mulx_u64(&mut x1105, &mut x1106, x1052, (arg1[1]));
  let mut x1107: u64 = 0;
  let mut x1108: u64 = 0;
  fiat_p384_mulx_u64(&mut x1107, &mut x1108, x1052, (arg1[0]));
  let mut x1109: u64 = 0;
  let mut x1110: u64 = 0;
  fiat_p384_mulx_u64(&mut x1109, &mut x1110, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), x1051);
  let mut x1111: u64 = 0;
  let mut x1112: u64 = 0;
  fiat_p384_mulx_u64(&mut x1111, &mut x1112, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[6]));
  let mut x1113: u64 = 0;
  let mut x1114: u64 = 0;
  fiat_p384_mulx_u64(&mut x1113, &mut x1114, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[5]));
  let mut x1115: u64 = 0;
  let mut x1116: u64 = 0;
  fiat_p384_mulx_u64(&mut x1115, &mut x1116, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[4]));
  let mut x1117: u64 = 0;
  let mut x1118: u64 = 0;
  fiat_p384_mulx_u64(&mut x1117, &mut x1118, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[3]));
  let mut x1119: u64 = 0;
  let mut x1120: u64 = 0;
  fiat_p384_mulx_u64(&mut x1119, &mut x1120, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[2]));
  let mut x1121: u64 = 0;
  let mut x1122: u64 = 0;
  fiat_p384_mulx_u64(&mut x1121, &mut x1122, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[1]));
  let mut x1123: u64 = 0;
  let mut x1124: u64 = 0;
  fiat_p384_mulx_u64(&mut x1123, &mut x1124, ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg1[0]));
  let mut x1125: u64 = 0;
  let mut x1126: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1125, &mut x1126, 0x0, x1112, x1053);
  let mut x1127: u64 = 0;
  let mut x1128: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1127, &mut x1128, 0x0, x1125, x1055);
  let mut x1129: u64 = 0;
  let mut x1130: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1129, &mut x1130, 0x0, x1114, x1057);
  let mut x1131: u64 = 0;
  let mut x1132: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1131, &mut x1132, x1130, x1127, x1058);
  let mut x1133: u64 = 0;
  let mut x1134: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1133, &mut x1134, 0x0, x1129, x1061);
  let mut x1135: u64 = 0;
  let mut x1136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1135, &mut x1136, x1134, x1131, x1059);
  let mut x1137: u64 = 0;
  let mut x1138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1137, &mut x1138, 0x0, x1116, x1063);
  let mut x1139: u64 = 0;
  let mut x1140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1139, &mut x1140, x1138, x1133, x1064);
  let mut x1141: u64 = 0;
  let mut x1142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1141, &mut x1142, x1140, x1135, x1062);
  let mut x1143: u64 = 0;
  let mut x1144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1143, &mut x1144, 0x0, x1137, x1069);
  let mut x1145: u64 = 0;
  let mut x1146: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1145, &mut x1146, x1144, x1139, x1067);
  let mut x1147: u64 = 0;
  let mut x1148: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1147, &mut x1148, x1146, x1141, x1065);
  let mut x1149: u64 = 0;
  let mut x1150: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1149, &mut x1150, 0x0, x1118, x1071);
  let mut x1151: u64 = 0;
  let mut x1152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1151, &mut x1152, x1150, x1143, x1072);
  let mut x1153: u64 = 0;
  let mut x1154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1153, &mut x1154, x1152, x1145, x1070);
  let mut x1155: u64 = 0;
  let mut x1156: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1155, &mut x1156, x1154, x1147, x1068);
  let mut x1157: u64 = 0;
  let mut x1158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1157, &mut x1158, 0x0, x1149, x1079);
  let mut x1159: u64 = 0;
  let mut x1160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1159, &mut x1160, x1158, x1151, x1077);
  let mut x1161: u64 = 0;
  let mut x1162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1161, &mut x1162, x1160, x1153, x1075);
  let mut x1163: u64 = 0;
  let mut x1164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1163, &mut x1164, x1162, x1155, x1073);
  let mut x1165: u64 = 0;
  let mut x1166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1165, &mut x1166, 0x0, x1120, x1081);
  let mut x1167: u64 = 0;
  let mut x1168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1167, &mut x1168, x1166, x1157, x1082);
  let mut x1169: u64 = 0;
  let mut x1170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1169, &mut x1170, x1168, x1159, x1080);
  let mut x1171: u64 = 0;
  let mut x1172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1171, &mut x1172, x1170, x1161, x1078);
  let mut x1173: u64 = 0;
  let mut x1174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1173, &mut x1174, x1172, x1163, x1076);
  let mut x1175: u64 = 0;
  let mut x1176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1175, &mut x1176, 0x0, x1165, x1091);
  let mut x1177: u64 = 0;
  let mut x1178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1177, &mut x1178, x1176, x1167, x1089);
  let mut x1179: u64 = 0;
  let mut x1180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1179, &mut x1180, x1178, x1169, x1087);
  let mut x1181: u64 = 0;
  let mut x1182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1181, &mut x1182, x1180, x1171, x1085);
  let mut x1183: u64 = 0;
  let mut x1184: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1183, &mut x1184, x1182, x1173, x1083);
  let mut x1185: u64 = 0;
  let mut x1186: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1185, &mut x1186, 0x0, x1122, x1093);
  let mut x1187: u64 = 0;
  let mut x1188: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1187, &mut x1188, x1186, x1175, x1094);
  let mut x1189: u64 = 0;
  let mut x1190: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1189, &mut x1190, x1188, x1177, x1092);
  let mut x1191: u64 = 0;
  let mut x1192: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1191, &mut x1192, x1190, x1179, x1090);
  let mut x1193: u64 = 0;
  let mut x1194: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1193, &mut x1194, x1192, x1181, x1088);
  let mut x1195: u64 = 0;
  let mut x1196: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1195, &mut x1196, x1194, x1183, x1086);
  let mut x1197: u64 = 0;
  let mut x1198: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1197, &mut x1198, 0x0, x1185, x1105);
  let mut x1199: u64 = 0;
  let mut x1200: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1199, &mut x1200, x1198, x1187, x1103);
  let mut x1201: u64 = 0;
  let mut x1202: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1201, &mut x1202, x1200, x1189, x1101);
  let mut x1203: u64 = 0;
  let mut x1204: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1203, &mut x1204, x1202, x1191, x1099);
  let mut x1205: u64 = 0;
  let mut x1206: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1205, &mut x1206, x1204, x1193, x1097);
  let mut x1207: u64 = 0;
  let mut x1208: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1207, &mut x1208, x1206, x1195, x1095);
  let mut x1209: u64 = 0;
  let mut x1210: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1209, &mut x1210, 0x0, x1124, x1107);
  let mut x1211: u64 = 0;
  let mut x1212: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1211, &mut x1212, x1210, x1197, x1108);
  let mut x1213: u64 = 0;
  let mut x1214: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1213, &mut x1214, x1212, x1199, x1106);
  let mut x1215: u64 = 0;
  let mut x1216: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1215, &mut x1216, x1214, x1201, x1104);
  let mut x1217: u64 = 0;
  let mut x1218: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1217, &mut x1218, x1216, x1203, x1102);
  let mut x1219: u64 = 0;
  let mut x1220: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1219, &mut x1220, x1218, x1205, x1100);
  let mut x1221: u64 = 0;
  let mut x1222: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1221, &mut x1222, x1220, x1207, x1098);
  let mut x1223: u64 = 0;
  let mut x1224: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1223, &mut x1224, 0x0, x1209, x1121);
  let mut x1225: u64 = 0;
  let mut x1226: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1225, &mut x1226, x1224, x1211, x1119);
  let mut x1227: u64 = 0;
  let mut x1228: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1227, &mut x1228, x1226, x1213, x1117);
  let mut x1229: u64 = 0;
  let mut x1230: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1229, &mut x1230, x1228, x1215, x1115);
  let mut x1231: u64 = 0;
  let mut x1232: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1231, &mut x1232, x1230, x1217, x1113);
  let mut x1233: u64 = 0;
  let mut x1234: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1233, &mut x1234, x1232, x1219, x1111);
  let mut x1235: u64 = 0;
  let mut x1236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1235, &mut x1236, x1234, x1221, x1109);
  let mut x1237: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1237, (((arg2[6]) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x1238: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1238, ((((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1), (0x0 as u64), 0xffffffffffffffff);
  let mut x1239: u64 = 0;
  let mut x1240: u64 = 0;
  fiat_p384_mulx_u64(&mut x1239, &mut x1240, x1238, (arg2[0]));
  let mut x1241: u64 = 0;
  let mut x1242: u64 = 0;
  fiat_p384_mulx_u64(&mut x1241, &mut x1242, x1238, (arg2[1]));
  let mut x1243: u64 = 0;
  let mut x1244: u64 = 0;
  fiat_p384_mulx_u64(&mut x1243, &mut x1244, x1238, (arg2[0]));
  let mut x1245: u64 = 0;
  let mut x1246: u64 = 0;
  fiat_p384_mulx_u64(&mut x1245, &mut x1246, x1238, (arg2[2]));
  let mut x1247: u64 = 0;
  let mut x1248: u64 = 0;
  fiat_p384_mulx_u64(&mut x1247, &mut x1248, x1238, (arg2[1]));
  let mut x1249: u64 = 0;
  let mut x1250: u64 = 0;
  fiat_p384_mulx_u64(&mut x1249, &mut x1250, x1238, (arg2[0]));
  let mut x1251: u64 = 0;
  let mut x1252: u64 = 0;
  fiat_p384_mulx_u64(&mut x1251, &mut x1252, x1238, (arg2[3]));
  let mut x1253: u64 = 0;
  let mut x1254: u64 = 0;
  fiat_p384_mulx_u64(&mut x1253, &mut x1254, x1238, (arg2[2]));
  let mut x1255: u64 = 0;
  let mut x1256: u64 = 0;
  fiat_p384_mulx_u64(&mut x1255, &mut x1256, x1238, (arg2[1]));
  let mut x1257: u64 = 0;
  let mut x1258: u64 = 0;
  fiat_p384_mulx_u64(&mut x1257, &mut x1258, x1238, (arg2[0]));
  let mut x1259: u64 = 0;
  let mut x1260: u64 = 0;
  fiat_p384_mulx_u64(&mut x1259, &mut x1260, x1238, (arg2[4]));
  let mut x1261: u64 = 0;
  let mut x1262: u64 = 0;
  fiat_p384_mulx_u64(&mut x1261, &mut x1262, x1238, (arg2[3]));
  let mut x1263: u64 = 0;
  let mut x1264: u64 = 0;
  fiat_p384_mulx_u64(&mut x1263, &mut x1264, x1238, (arg2[2]));
  let mut x1265: u64 = 0;
  let mut x1266: u64 = 0;
  fiat_p384_mulx_u64(&mut x1265, &mut x1266, x1238, (arg2[1]));
  let mut x1267: u64 = 0;
  let mut x1268: u64 = 0;
  fiat_p384_mulx_u64(&mut x1267, &mut x1268, x1238, (arg2[0]));
  let mut x1269: u64 = 0;
  let mut x1270: u64 = 0;
  fiat_p384_mulx_u64(&mut x1269, &mut x1270, x1238, (arg2[5]));
  let mut x1271: u64 = 0;
  let mut x1272: u64 = 0;
  fiat_p384_mulx_u64(&mut x1271, &mut x1272, x1238, (arg2[4]));
  let mut x1273: u64 = 0;
  let mut x1274: u64 = 0;
  fiat_p384_mulx_u64(&mut x1273, &mut x1274, x1238, (arg2[3]));
  let mut x1275: u64 = 0;
  let mut x1276: u64 = 0;
  fiat_p384_mulx_u64(&mut x1275, &mut x1276, x1238, (arg2[2]));
  let mut x1277: u64 = 0;
  let mut x1278: u64 = 0;
  fiat_p384_mulx_u64(&mut x1277, &mut x1278, x1238, (arg2[1]));
  let mut x1279: u64 = 0;
  let mut x1280: u64 = 0;
  fiat_p384_mulx_u64(&mut x1279, &mut x1280, x1238, (arg2[0]));
  let mut x1281: u64 = 0;
  let mut x1282: u64 = 0;
  fiat_p384_mulx_u64(&mut x1281, &mut x1282, x1238, (arg2[6]));
  let mut x1283: u64 = 0;
  let mut x1284: u64 = 0;
  fiat_p384_mulx_u64(&mut x1283, &mut x1284, x1238, (arg2[5]));
  let mut x1285: u64 = 0;
  let mut x1286: u64 = 0;
  fiat_p384_mulx_u64(&mut x1285, &mut x1286, x1238, (arg2[4]));
  let mut x1287: u64 = 0;
  let mut x1288: u64 = 0;
  fiat_p384_mulx_u64(&mut x1287, &mut x1288, x1238, (arg2[3]));
  let mut x1289: u64 = 0;
  let mut x1290: u64 = 0;
  fiat_p384_mulx_u64(&mut x1289, &mut x1290, x1238, (arg2[2]));
  let mut x1291: u64 = 0;
  let mut x1292: u64 = 0;
  fiat_p384_mulx_u64(&mut x1291, &mut x1292, x1238, (arg2[1]));
  let mut x1293: u64 = 0;
  let mut x1294: u64 = 0;
  fiat_p384_mulx_u64(&mut x1293, &mut x1294, x1238, (arg2[0]));
  let mut x1295: u64 = 0;
  let mut x1296: u64 = 0;
  fiat_p384_mulx_u64(&mut x1295, &mut x1296, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), x1237);
  let mut x1297: u64 = 0;
  let mut x1298: u64 = 0;
  fiat_p384_mulx_u64(&mut x1297, &mut x1298, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[6]));
  let mut x1299: u64 = 0;
  let mut x1300: u64 = 0;
  fiat_p384_mulx_u64(&mut x1299, &mut x1300, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[5]));
  let mut x1301: u64 = 0;
  let mut x1302: u64 = 0;
  fiat_p384_mulx_u64(&mut x1301, &mut x1302, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[4]));
  let mut x1303: u64 = 0;
  let mut x1304: u64 = 0;
  fiat_p384_mulx_u64(&mut x1303, &mut x1304, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[3]));
  let mut x1305: u64 = 0;
  let mut x1306: u64 = 0;
  fiat_p384_mulx_u64(&mut x1305, &mut x1306, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[2]));
  let mut x1307: u64 = 0;
  let mut x1308: u64 = 0;
  fiat_p384_mulx_u64(&mut x1307, &mut x1308, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[1]));
  let mut x1309: u64 = 0;
  let mut x1310: u64 = 0;
  fiat_p384_mulx_u64(&mut x1309, &mut x1310, ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64), (arg2[0]));
  let mut x1311: u64 = 0;
  let mut x1312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1311, &mut x1312, 0x0, x1298, x1239);
  let mut x1313: u64 = 0;
  let mut x1314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1313, &mut x1314, 0x0, x1311, x1241);
  let mut x1315: u64 = 0;
  let mut x1316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1315, &mut x1316, 0x0, x1300, x1243);
  let mut x1317: u64 = 0;
  let mut x1318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1317, &mut x1318, x1316, x1313, x1244);
  let mut x1319: u64 = 0;
  let mut x1320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1319, &mut x1320, 0x0, x1315, x1247);
  let mut x1321: u64 = 0;
  let mut x1322: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1321, &mut x1322, x1320, x1317, x1245);
  let mut x1323: u64 = 0;
  let mut x1324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1323, &mut x1324, 0x0, x1302, x1249);
  let mut x1325: u64 = 0;
  let mut x1326: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1325, &mut x1326, x1324, x1319, x1250);
  let mut x1327: u64 = 0;
  let mut x1328: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1327, &mut x1328, x1326, x1321, x1248);
  let mut x1329: u64 = 0;
  let mut x1330: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1329, &mut x1330, 0x0, x1323, x1255);
  let mut x1331: u64 = 0;
  let mut x1332: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1331, &mut x1332, x1330, x1325, x1253);
  let mut x1333: u64 = 0;
  let mut x1334: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1333, &mut x1334, x1332, x1327, x1251);
  let mut x1335: u64 = 0;
  let mut x1336: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1335, &mut x1336, 0x0, x1304, x1257);
  let mut x1337: u64 = 0;
  let mut x1338: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1337, &mut x1338, x1336, x1329, x1258);
  let mut x1339: u64 = 0;
  let mut x1340: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1339, &mut x1340, x1338, x1331, x1256);
  let mut x1341: u64 = 0;
  let mut x1342: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1341, &mut x1342, x1340, x1333, x1254);
  let mut x1343: u64 = 0;
  let mut x1344: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1343, &mut x1344, 0x0, x1335, x1265);
  let mut x1345: u64 = 0;
  let mut x1346: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1345, &mut x1346, x1344, x1337, x1263);
  let mut x1347: u64 = 0;
  let mut x1348: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1347, &mut x1348, x1346, x1339, x1261);
  let mut x1349: u64 = 0;
  let mut x1350: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1349, &mut x1350, x1348, x1341, x1259);
  let mut x1351: u64 = 0;
  let mut x1352: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1351, &mut x1352, 0x0, x1306, x1267);
  let mut x1353: u64 = 0;
  let mut x1354: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1353, &mut x1354, x1352, x1343, x1268);
  let mut x1355: u64 = 0;
  let mut x1356: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1355, &mut x1356, x1354, x1345, x1266);
  let mut x1357: u64 = 0;
  let mut x1358: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1357, &mut x1358, x1356, x1347, x1264);
  let mut x1359: u64 = 0;
  let mut x1360: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1359, &mut x1360, x1358, x1349, x1262);
  let mut x1361: u64 = 0;
  let mut x1362: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1361, &mut x1362, 0x0, x1351, x1277);
  let mut x1363: u64 = 0;
  let mut x1364: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1363, &mut x1364, x1362, x1353, x1275);
  let mut x1365: u64 = 0;
  let mut x1366: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1365, &mut x1366, x1364, x1355, x1273);
  let mut x1367: u64 = 0;
  let mut x1368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1367, &mut x1368, x1366, x1357, x1271);
  let mut x1369: u64 = 0;
  let mut x1370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1369, &mut x1370, x1368, x1359, x1269);
  let mut x1371: u64 = 0;
  let mut x1372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1371, &mut x1372, 0x0, x1308, x1279);
  let mut x1373: u64 = 0;
  let mut x1374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1373, &mut x1374, x1372, x1361, x1280);
  let mut x1375: u64 = 0;
  let mut x1376: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1375, &mut x1376, x1374, x1363, x1278);
  let mut x1377: u64 = 0;
  let mut x1378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1377, &mut x1378, x1376, x1365, x1276);
  let mut x1379: u64 = 0;
  let mut x1380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1379, &mut x1380, x1378, x1367, x1274);
  let mut x1381: u64 = 0;
  let mut x1382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1381, &mut x1382, x1380, x1369, x1272);
  let mut x1383: u64 = 0;
  let mut x1384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1383, &mut x1384, 0x0, x1371, x1291);
  let mut x1385: u64 = 0;
  let mut x1386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1385, &mut x1386, x1384, x1373, x1289);
  let mut x1387: u64 = 0;
  let mut x1388: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1387, &mut x1388, x1386, x1375, x1287);
  let mut x1389: u64 = 0;
  let mut x1390: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1389, &mut x1390, x1388, x1377, x1285);
  let mut x1391: u64 = 0;
  let mut x1392: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1391, &mut x1392, x1390, x1379, x1283);
  let mut x1393: u64 = 0;
  let mut x1394: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1393, &mut x1394, x1392, x1381, x1281);
  let mut x1395: u64 = 0;
  let mut x1396: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1395, &mut x1396, 0x0, x1310, x1293);
  let mut x1397: u64 = 0;
  let mut x1398: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1397, &mut x1398, x1396, x1383, x1294);
  let mut x1399: u64 = 0;
  let mut x1400: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1399, &mut x1400, x1398, x1385, x1292);
  let mut x1401: u64 = 0;
  let mut x1402: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1401, &mut x1402, x1400, x1387, x1290);
  let mut x1403: u64 = 0;
  let mut x1404: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1403, &mut x1404, x1402, x1389, x1288);
  let mut x1405: u64 = 0;
  let mut x1406: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1405, &mut x1406, x1404, x1391, x1286);
  let mut x1407: u64 = 0;
  let mut x1408: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1407, &mut x1408, x1406, x1393, x1284);
  let mut x1409: u64 = 0;
  let mut x1410: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1409, &mut x1410, 0x0, x1395, x1307);
  let mut x1411: u64 = 0;
  let mut x1412: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1411, &mut x1412, x1410, x1397, x1305);
  let mut x1413: u64 = 0;
  let mut x1414: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1413, &mut x1414, x1412, x1399, x1303);
  let mut x1415: u64 = 0;
  let mut x1416: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1415, &mut x1416, x1414, x1401, x1301);
  let mut x1417: u64 = 0;
  let mut x1418: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1417, &mut x1418, x1416, x1403, x1299);
  let mut x1419: u64 = 0;
  let mut x1420: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1419, &mut x1420, x1418, x1405, x1297);
  let mut x1421: u64 = 0;
  let mut x1422: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1421, &mut x1422, x1420, x1407, x1295);
  let mut x1423: u64 = 0;
  let mut x1424: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1423, &mut x1424, 0x0, x751, x937);
  let mut x1425: u64 = 0;
  let mut x1426: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1425, &mut x1426, x1424, x851, x1037);
  let mut x1427: u64 = 0;
  let mut x1428: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1427, &mut x1428, x1426, x853, x1039);
  let mut x1429: u64 = 0;
  let mut x1430: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1429, &mut x1430, x1428, x855, x1041);
  let mut x1431: u64 = 0;
  let mut x1432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1431, &mut x1432, x1430, x857, x1043);
  let mut x1433: u64 = 0;
  let mut x1434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1433, &mut x1434, x1432, x859, x1045);
  let mut x1435: u64 = 0;
  let mut x1436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1435, &mut x1436, x1434, x861, x1047);
  let mut x1437: u64 = 0;
  let mut x1438: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1437, &mut x1438, x1436, x863, x1049);
  let mut x1439: u64 = 0;
  let mut x1440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1439, &mut x1440, 0x0, x1123, x1309);
  let mut x1441: u64 = 0;
  let mut x1442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1441, &mut x1442, x1440, x1223, x1409);
  let mut x1443: u64 = 0;
  let mut x1444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1443, &mut x1444, x1442, x1225, x1411);
  let mut x1445: u64 = 0;
  let mut x1446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1445, &mut x1446, x1444, x1227, x1413);
  let mut x1447: u64 = 0;
  let mut x1448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1447, &mut x1448, x1446, x1229, x1415);
  let mut x1449: u64 = 0;
  let mut x1450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1449, &mut x1450, x1448, x1231, x1417);
  let mut x1451: u64 = 0;
  let mut x1452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1451, &mut x1452, x1450, x1233, x1419);
  let mut x1453: u64 = 0;
  let mut x1454: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1453, &mut x1454, x1452, x1235, x1421);
  let x1455: u64 = ((x1423 >> 62) | ((x1425 << 2) & 0xffffffffffffffff));
  let x1456: u64 = ((x1425 >> 62) | ((x1427 << 2) & 0xffffffffffffffff));
  let x1457: u64 = ((x1427 >> 62) | ((x1429 << 2) & 0xffffffffffffffff));
  let x1458: u64 = ((x1429 >> 62) | ((x1431 << 2) & 0xffffffffffffffff));
  let x1459: u64 = ((x1431 >> 62) | ((x1433 << 2) & 0xffffffffffffffff));
  let x1460: u64 = ((x1433 >> 62) | ((x1435 << 2) & 0xffffffffffffffff));
  let x1461: u64 = ((x1435 >> 62) | ((x1437 << 2) & 0xffffffffffffffff));
  let x1462: u64 = ((x1439 >> 62) | ((x1441 << 2) & 0xffffffffffffffff));
  let x1463: u64 = ((x1441 >> 62) | ((x1443 << 2) & 0xffffffffffffffff));
  let x1464: u64 = ((x1443 >> 62) | ((x1445 << 2) & 0xffffffffffffffff));
  let x1465: u64 = ((x1445 >> 62) | ((x1447 << 2) & 0xffffffffffffffff));
  let x1466: u64 = ((x1447 >> 62) | ((x1449 << 2) & 0xffffffffffffffff));
  let x1467: u64 = ((x1449 >> 62) | ((x1451 << 2) & 0xffffffffffffffff));
  let x1468: u64 = ((x1451 >> 62) | ((x1453 << 2) & 0xffffffffffffffff));
  let x1469: fiat_p384_u1 = ((((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1);
  let x1470: u64 = (((((!((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1471: u64 = ((((x673 as u128) + (x673 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x1472: u64 = 0;
  let mut x1473: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1472, &mut x1473, 0x0, (0x0 as u64), x1470);
  let mut x1474: u64 = 0;
  let mut x1475: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1474, &mut x1475, x1473, (0x0 as u64), (0x0 as u64));
  let mut x1476: u64 = 0;
  let mut x1477: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1476, &mut x1477, x1475, (0x0 as u64), (0x0 as u64));
  let mut x1478: u64 = 0;
  let mut x1479: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1478, &mut x1479, x1477, (0x0 as u64), (0x0 as u64));
  let mut x1480: u64 = 0;
  let mut x1481: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1480, &mut x1481, x1479, (0x0 as u64), (0x0 as u64));
  let mut x1482: u64 = 0;
  let mut x1483: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1482, &mut x1483, x1481, (0x0 as u64), (0x0 as u64));
  let mut x1484: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1484, x1483, (0x0 as u64), 0xffffffffffffffff);
  let mut x1485: u64 = 0;
  let mut x1486: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1485, &mut x1486, 0x0, x1472, (x1484 & 0xffffffff));
  let mut x1487: u64 = 0;
  let mut x1488: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1487, &mut x1488, x1486, x1474, (x1484 & 0xffffffff00000000));
  let mut x1489: u64 = 0;
  let mut x1490: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1489, &mut x1490, x1488, x1476, (x1484 & 0xfffffffffffffffe));
  let mut x1491: u64 = 0;
  let mut x1492: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1491, &mut x1492, x1490, x1478, x1484);
  let mut x1493: u64 = 0;
  let mut x1494: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1493, &mut x1494, x1492, x1480, x1484);
  let mut x1495: u64 = 0;
  let mut x1496: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1495, &mut x1496, x1494, x1482, x1484);
  let mut x1497: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1497, x1469, x1471, x1485);
  let mut x1498: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1498, x1469, (0x0 as u64), x1487);
  let mut x1499: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1499, x1469, (0x0 as u64), x1489);
  let mut x1500: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1500, x1469, (0x0 as u64), x1491);
  let mut x1501: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1501, x1469, (0x0 as u64), x1493);
  let mut x1502: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1502, x1469, (0x0 as u64), x1495);
  let x1503: fiat_p384_u1 = ((((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1);
  let x1504: u64 = (((((!((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1505: u64 = ((((x674 as u128) + (x674 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x1506: u64 = 0;
  let mut x1507: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1506, &mut x1507, 0x0, (0x0 as u64), x1504);
  let mut x1508: u64 = 0;
  let mut x1509: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1508, &mut x1509, x1507, (0x0 as u64), (0x0 as u64));
  let mut x1510: u64 = 0;
  let mut x1511: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1510, &mut x1511, x1509, (0x0 as u64), (0x0 as u64));
  let mut x1512: u64 = 0;
  let mut x1513: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1512, &mut x1513, x1511, (0x0 as u64), (0x0 as u64));
  let mut x1514: u64 = 0;
  let mut x1515: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1514, &mut x1515, x1513, (0x0 as u64), (0x0 as u64));
  let mut x1516: u64 = 0;
  let mut x1517: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1516, &mut x1517, x1515, (0x0 as u64), (0x0 as u64));
  let mut x1518: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1518, x1517, (0x0 as u64), 0xffffffffffffffff);
  let mut x1519: u64 = 0;
  let mut x1520: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1519, &mut x1520, 0x0, x1506, (x1518 & 0xffffffff));
  let mut x1521: u64 = 0;
  let mut x1522: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1521, &mut x1522, x1520, x1508, (x1518 & 0xffffffff00000000));
  let mut x1523: u64 = 0;
  let mut x1524: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1523, &mut x1524, x1522, x1510, (x1518 & 0xfffffffffffffffe));
  let mut x1525: u64 = 0;
  let mut x1526: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1525, &mut x1526, x1524, x1512, x1518);
  let mut x1527: u64 = 0;
  let mut x1528: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1527, &mut x1528, x1526, x1514, x1518);
  let mut x1529: u64 = 0;
  let mut x1530: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1529, &mut x1530, x1528, x1516, x1518);
  let mut x1531: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1531, x1503, x1505, x1519);
  let mut x1532: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1532, x1503, (0x0 as u64), x1521);
  let mut x1533: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1533, x1503, (0x0 as u64), x1523);
  let mut x1534: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1534, x1503, (0x0 as u64), x1525);
  let mut x1535: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1535, x1503, (0x0 as u64), x1527);
  let mut x1536: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1536, x1503, (0x0 as u64), x1529);
  let x1537: fiat_p384_u1 = ((((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1);
  let x1538: u64 = (((((!((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1539: u64 = ((((x675 as u128) + (x677 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x1540: u64 = 0;
  let mut x1541: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1540, &mut x1541, 0x0, (0x0 as u64), x1538);
  let mut x1542: u64 = 0;
  let mut x1543: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1542, &mut x1543, x1541, (0x0 as u64), (0x0 as u64));
  let mut x1544: u64 = 0;
  let mut x1545: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1544, &mut x1545, x1543, (0x0 as u64), (0x0 as u64));
  let mut x1546: u64 = 0;
  let mut x1547: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1546, &mut x1547, x1545, (0x0 as u64), (0x0 as u64));
  let mut x1548: u64 = 0;
  let mut x1549: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1548, &mut x1549, x1547, (0x0 as u64), (0x0 as u64));
  let mut x1550: u64 = 0;
  let mut x1551: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1550, &mut x1551, x1549, (0x0 as u64), (0x0 as u64));
  let mut x1552: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1552, x1551, (0x0 as u64), 0xffffffffffffffff);
  let mut x1553: u64 = 0;
  let mut x1554: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1553, &mut x1554, 0x0, x1540, (x1552 & 0xffffffff));
  let mut x1555: u64 = 0;
  let mut x1556: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1555, &mut x1556, x1554, x1542, (x1552 & 0xffffffff00000000));
  let mut x1557: u64 = 0;
  let mut x1558: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1557, &mut x1558, x1556, x1544, (x1552 & 0xfffffffffffffffe));
  let mut x1559: u64 = 0;
  let mut x1560: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1559, &mut x1560, x1558, x1546, x1552);
  let mut x1561: u64 = 0;
  let mut x1562: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1561, &mut x1562, x1560, x1548, x1552);
  let mut x1563: u64 = 0;
  let mut x1564: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1563, &mut x1564, x1562, x1550, x1552);
  let mut x1565: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1565, x1537, x1539, x1553);
  let mut x1566: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1566, x1537, (0x0 as u64), x1555);
  let mut x1567: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1567, x1537, (0x0 as u64), x1557);
  let mut x1568: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1568, x1537, (0x0 as u64), x1559);
  let mut x1569: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1569, x1537, (0x0 as u64), x1561);
  let mut x1570: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1570, x1537, (0x0 as u64), x1563);
  let x1571: fiat_p384_u1 = ((((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64) >> 63) as fiat_p384_u1);
  let x1572: u64 = (((((!((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64)) as u128) + (0x1 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let x1573: u64 = ((((x676 as u128) + (x678 as u128)) & (0xffffffffffffffff as u128)) as u64);
  let mut x1574: u64 = 0;
  let mut x1575: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1574, &mut x1575, 0x0, (0x0 as u64), x1572);
  let mut x1576: u64 = 0;
  let mut x1577: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1576, &mut x1577, x1575, (0x0 as u64), (0x0 as u64));
  let mut x1578: u64 = 0;
  let mut x1579: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1578, &mut x1579, x1577, (0x0 as u64), (0x0 as u64));
  let mut x1580: u64 = 0;
  let mut x1581: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1580, &mut x1581, x1579, (0x0 as u64), (0x0 as u64));
  let mut x1582: u64 = 0;
  let mut x1583: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1582, &mut x1583, x1581, (0x0 as u64), (0x0 as u64));
  let mut x1584: u64 = 0;
  let mut x1585: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x1584, &mut x1585, x1583, (0x0 as u64), (0x0 as u64));
  let mut x1586: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1586, x1585, (0x0 as u64), 0xffffffffffffffff);
  let mut x1587: u64 = 0;
  let mut x1588: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1587, &mut x1588, 0x0, x1574, (x1586 & 0xffffffff));
  let mut x1589: u64 = 0;
  let mut x1590: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1589, &mut x1590, x1588, x1576, (x1586 & 0xffffffff00000000));
  let mut x1591: u64 = 0;
  let mut x1592: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1591, &mut x1592, x1590, x1578, (x1586 & 0xfffffffffffffffe));
  let mut x1593: u64 = 0;
  let mut x1594: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1593, &mut x1594, x1592, x1580, x1586);
  let mut x1595: u64 = 0;
  let mut x1596: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1595, &mut x1596, x1594, x1582, x1586);
  let mut x1597: u64 = 0;
  let mut x1598: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1597, &mut x1598, x1596, x1584, x1586);
  let mut x1599: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1599, x1571, x1573, x1587);
  let mut x1600: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1600, x1571, (0x0 as u64), x1589);
  let mut x1601: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1601, x1571, (0x0 as u64), x1591);
  let mut x1602: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1602, x1571, (0x0 as u64), x1593);
  let mut x1603: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1603, x1571, (0x0 as u64), x1595);
  let mut x1604: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x1604, x1571, (0x0 as u64), x1597);
  let mut x1605: u64 = 0;
  let mut x1606: u64 = 0;
  fiat_p384_mulx_u64(&mut x1605, &mut x1606, x1497, (arg3[5]));
  let mut x1607: u64 = 0;
  let mut x1608: u64 = 0;
  fiat_p384_mulx_u64(&mut x1607, &mut x1608, x1497, (arg3[4]));
  let mut x1609: u64 = 0;
  let mut x1610: u64 = 0;
  fiat_p384_mulx_u64(&mut x1609, &mut x1610, x1497, (arg3[3]));
  let mut x1611: u64 = 0;
  let mut x1612: u64 = 0;
  fiat_p384_mulx_u64(&mut x1611, &mut x1612, x1497, (arg3[2]));
  let mut x1613: u64 = 0;
  let mut x1614: u64 = 0;
  fiat_p384_mulx_u64(&mut x1613, &mut x1614, x1497, (arg3[1]));
  let mut x1615: u64 = 0;
  let mut x1616: u64 = 0;
  fiat_p384_mulx_u64(&mut x1615, &mut x1616, x1497, (arg3[0]));
  let mut x1617: u64 = 0;
  let mut x1618: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1617, &mut x1618, 0x0, x1616, x1613);
  let mut x1619: u64 = 0;
  let mut x1620: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1619, &mut x1620, x1618, x1614, x1611);
  let mut x1621: u64 = 0;
  let mut x1622: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1621, &mut x1622, x1620, x1612, x1609);
  let mut x1623: u64 = 0;
  let mut x1624: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1623, &mut x1624, x1622, x1610, x1607);
  let mut x1625: u64 = 0;
  let mut x1626: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1625, &mut x1626, x1624, x1608, x1605);
  let x1627: u64 = ((x1626 as u64) + x1606);
  let mut x1628: u64 = 0;
  let mut x1629: u64 = 0;
  fiat_p384_mulx_u64(&mut x1628, &mut x1629, x1615, 0x100000001);
  let mut x1630: u64 = 0;
  let mut x1631: u64 = 0;
  fiat_p384_mulx_u64(&mut x1630, &mut x1631, x1628, 0xffffffffffffffff);
  let mut x1632: u64 = 0;
  let mut x1633: u64 = 0;
  fiat_p384_mulx_u64(&mut x1632, &mut x1633, x1628, 0xffffffffffffffff);
  let mut x1634: u64 = 0;
  let mut x1635: u64 = 0;
  fiat_p384_mulx_u64(&mut x1634, &mut x1635, x1628, 0xffffffffffffffff);
  let mut x1636: u64 = 0;
  let mut x1637: u64 = 0;
  fiat_p384_mulx_u64(&mut x1636, &mut x1637, x1628, 0xfffffffffffffffe);
  let mut x1638: u64 = 0;
  let mut x1639: u64 = 0;
  fiat_p384_mulx_u64(&mut x1638, &mut x1639, x1628, 0xffffffff00000000);
  let mut x1640: u64 = 0;
  let mut x1641: u64 = 0;
  fiat_p384_mulx_u64(&mut x1640, &mut x1641, x1628, 0xffffffff);
  let mut x1642: u64 = 0;
  let mut x1643: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1642, &mut x1643, 0x0, x1641, x1638);
  let mut x1644: u64 = 0;
  let mut x1645: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1644, &mut x1645, x1643, x1639, x1636);
  let mut x1646: u64 = 0;
  let mut x1647: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1646, &mut x1647, x1645, x1637, x1634);
  let mut x1648: u64 = 0;
  let mut x1649: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1648, &mut x1649, x1647, x1635, x1632);
  let mut x1650: u64 = 0;
  let mut x1651: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1650, &mut x1651, x1649, x1633, x1630);
  let x1652: u64 = ((x1651 as u64) + x1631);
  let mut x1653: u64 = 0;
  let mut x1654: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1653, &mut x1654, 0x0, x1615, x1640);
  let mut x1655: u64 = 0;
  let mut x1656: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1655, &mut x1656, x1654, x1617, x1642);
  let mut x1657: u64 = 0;
  let mut x1658: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1657, &mut x1658, x1656, x1619, x1644);
  let mut x1659: u64 = 0;
  let mut x1660: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1659, &mut x1660, x1658, x1621, x1646);
  let mut x1661: u64 = 0;
  let mut x1662: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1661, &mut x1662, x1660, x1623, x1648);
  let mut x1663: u64 = 0;
  let mut x1664: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1663, &mut x1664, x1662, x1625, x1650);
  let mut x1665: u64 = 0;
  let mut x1666: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1665, &mut x1666, x1664, x1627, x1652);
  let mut x1667: u64 = 0;
  let mut x1668: u64 = 0;
  fiat_p384_mulx_u64(&mut x1667, &mut x1668, x1498, (arg3[5]));
  let mut x1669: u64 = 0;
  let mut x1670: u64 = 0;
  fiat_p384_mulx_u64(&mut x1669, &mut x1670, x1498, (arg3[4]));
  let mut x1671: u64 = 0;
  let mut x1672: u64 = 0;
  fiat_p384_mulx_u64(&mut x1671, &mut x1672, x1498, (arg3[3]));
  let mut x1673: u64 = 0;
  let mut x1674: u64 = 0;
  fiat_p384_mulx_u64(&mut x1673, &mut x1674, x1498, (arg3[2]));
  let mut x1675: u64 = 0;
  let mut x1676: u64 = 0;
  fiat_p384_mulx_u64(&mut x1675, &mut x1676, x1498, (arg3[1]));
  let mut x1677: u64 = 0;
  let mut x1678: u64 = 0;
  fiat_p384_mulx_u64(&mut x1677, &mut x1678, x1498, (arg3[0]));
  let mut x1679: u64 = 0;
  let mut x1680: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1679, &mut x1680, 0x0, x1678, x1675);
  let mut x1681: u64 = 0;
  let mut x1682: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1681, &mut x1682, x1680, x1676, x1673);
  let mut x1683: u64 = 0;
  let mut x1684: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1683, &mut x1684, x1682, x1674, x1671);
  let mut x1685: u64 = 0;
  let mut x1686: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1685, &mut x1686, x1684, x1672, x1669);
  let mut x1687: u64 = 0;
  let mut x1688: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1687, &mut x1688, x1686, x1670, x1667);
  let x1689: u64 = ((x1688 as u64) + x1668);
  let mut x1690: u64 = 0;
  let mut x1691: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1690, &mut x1691, 0x0, x1655, x1677);
  let mut x1692: u64 = 0;
  let mut x1693: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1692, &mut x1693, x1691, x1657, x1679);
  let mut x1694: u64 = 0;
  let mut x1695: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1694, &mut x1695, x1693, x1659, x1681);
  let mut x1696: u64 = 0;
  let mut x1697: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1696, &mut x1697, x1695, x1661, x1683);
  let mut x1698: u64 = 0;
  let mut x1699: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1698, &mut x1699, x1697, x1663, x1685);
  let mut x1700: u64 = 0;
  let mut x1701: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1700, &mut x1701, x1699, x1665, x1687);
  let mut x1702: u64 = 0;
  let mut x1703: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1702, &mut x1703, x1701, (x1666 as u64), x1689);
  let mut x1704: u64 = 0;
  let mut x1705: u64 = 0;
  fiat_p384_mulx_u64(&mut x1704, &mut x1705, x1690, 0x100000001);
  let mut x1706: u64 = 0;
  let mut x1707: u64 = 0;
  fiat_p384_mulx_u64(&mut x1706, &mut x1707, x1704, 0xffffffffffffffff);
  let mut x1708: u64 = 0;
  let mut x1709: u64 = 0;
  fiat_p384_mulx_u64(&mut x1708, &mut x1709, x1704, 0xffffffffffffffff);
  let mut x1710: u64 = 0;
  let mut x1711: u64 = 0;
  fiat_p384_mulx_u64(&mut x1710, &mut x1711, x1704, 0xffffffffffffffff);
  let mut x1712: u64 = 0;
  let mut x1713: u64 = 0;
  fiat_p384_mulx_u64(&mut x1712, &mut x1713, x1704, 0xfffffffffffffffe);
  let mut x1714: u64 = 0;
  let mut x1715: u64 = 0;
  fiat_p384_mulx_u64(&mut x1714, &mut x1715, x1704, 0xffffffff00000000);
  let mut x1716: u64 = 0;
  let mut x1717: u64 = 0;
  fiat_p384_mulx_u64(&mut x1716, &mut x1717, x1704, 0xffffffff);
  let mut x1718: u64 = 0;
  let mut x1719: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1718, &mut x1719, 0x0, x1717, x1714);
  let mut x1720: u64 = 0;
  let mut x1721: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1720, &mut x1721, x1719, x1715, x1712);
  let mut x1722: u64 = 0;
  let mut x1723: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1722, &mut x1723, x1721, x1713, x1710);
  let mut x1724: u64 = 0;
  let mut x1725: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1724, &mut x1725, x1723, x1711, x1708);
  let mut x1726: u64 = 0;
  let mut x1727: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1726, &mut x1727, x1725, x1709, x1706);
  let x1728: u64 = ((x1727 as u64) + x1707);
  let mut x1729: u64 = 0;
  let mut x1730: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1729, &mut x1730, 0x0, x1690, x1716);
  let mut x1731: u64 = 0;
  let mut x1732: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1731, &mut x1732, x1730, x1692, x1718);
  let mut x1733: u64 = 0;
  let mut x1734: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1733, &mut x1734, x1732, x1694, x1720);
  let mut x1735: u64 = 0;
  let mut x1736: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1735, &mut x1736, x1734, x1696, x1722);
  let mut x1737: u64 = 0;
  let mut x1738: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1737, &mut x1738, x1736, x1698, x1724);
  let mut x1739: u64 = 0;
  let mut x1740: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1739, &mut x1740, x1738, x1700, x1726);
  let mut x1741: u64 = 0;
  let mut x1742: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1741, &mut x1742, x1740, x1702, x1728);
  let x1743: u64 = ((x1742 as u64) + (x1703 as u64));
  let mut x1744: u64 = 0;
  let mut x1745: u64 = 0;
  fiat_p384_mulx_u64(&mut x1744, &mut x1745, x1499, (arg3[5]));
  let mut x1746: u64 = 0;
  let mut x1747: u64 = 0;
  fiat_p384_mulx_u64(&mut x1746, &mut x1747, x1499, (arg3[4]));
  let mut x1748: u64 = 0;
  let mut x1749: u64 = 0;
  fiat_p384_mulx_u64(&mut x1748, &mut x1749, x1499, (arg3[3]));
  let mut x1750: u64 = 0;
  let mut x1751: u64 = 0;
  fiat_p384_mulx_u64(&mut x1750, &mut x1751, x1499, (arg3[2]));
  let mut x1752: u64 = 0;
  let mut x1753: u64 = 0;
  fiat_p384_mulx_u64(&mut x1752, &mut x1753, x1499, (arg3[1]));
  let mut x1754: u64 = 0;
  let mut x1755: u64 = 0;
  fiat_p384_mulx_u64(&mut x1754, &mut x1755, x1499, (arg3[0]));
  let mut x1756: u64 = 0;
  let mut x1757: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1756, &mut x1757, 0x0, x1755, x1752);
  let mut x1758: u64 = 0;
  let mut x1759: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1758, &mut x1759, x1757, x1753, x1750);
  let mut x1760: u64 = 0;
  let mut x1761: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1760, &mut x1761, x1759, x1751, x1748);
  let mut x1762: u64 = 0;
  let mut x1763: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1762, &mut x1763, x1761, x1749, x1746);
  let mut x1764: u64 = 0;
  let mut x1765: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1764, &mut x1765, x1763, x1747, x1744);
  let x1766: u64 = ((x1765 as u64) + x1745);
  let mut x1767: u64 = 0;
  let mut x1768: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1767, &mut x1768, 0x0, x1731, x1754);
  let mut x1769: u64 = 0;
  let mut x1770: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1769, &mut x1770, x1768, x1733, x1756);
  let mut x1771: u64 = 0;
  let mut x1772: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1771, &mut x1772, x1770, x1735, x1758);
  let mut x1773: u64 = 0;
  let mut x1774: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1773, &mut x1774, x1772, x1737, x1760);
  let mut x1775: u64 = 0;
  let mut x1776: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1775, &mut x1776, x1774, x1739, x1762);
  let mut x1777: u64 = 0;
  let mut x1778: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1777, &mut x1778, x1776, x1741, x1764);
  let mut x1779: u64 = 0;
  let mut x1780: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1779, &mut x1780, x1778, x1743, x1766);
  let mut x1781: u64 = 0;
  let mut x1782: u64 = 0;
  fiat_p384_mulx_u64(&mut x1781, &mut x1782, x1767, 0x100000001);
  let mut x1783: u64 = 0;
  let mut x1784: u64 = 0;
  fiat_p384_mulx_u64(&mut x1783, &mut x1784, x1781, 0xffffffffffffffff);
  let mut x1785: u64 = 0;
  let mut x1786: u64 = 0;
  fiat_p384_mulx_u64(&mut x1785, &mut x1786, x1781, 0xffffffffffffffff);
  let mut x1787: u64 = 0;
  let mut x1788: u64 = 0;
  fiat_p384_mulx_u64(&mut x1787, &mut x1788, x1781, 0xffffffffffffffff);
  let mut x1789: u64 = 0;
  let mut x1790: u64 = 0;
  fiat_p384_mulx_u64(&mut x1789, &mut x1790, x1781, 0xfffffffffffffffe);
  let mut x1791: u64 = 0;
  let mut x1792: u64 = 0;
  fiat_p384_mulx_u64(&mut x1791, &mut x1792, x1781, 0xffffffff00000000);
  let mut x1793: u64 = 0;
  let mut x1794: u64 = 0;
  fiat_p384_mulx_u64(&mut x1793, &mut x1794, x1781, 0xffffffff);
  let mut x1795: u64 = 0;
  let mut x1796: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1795, &mut x1796, 0x0, x1794, x1791);
  let mut x1797: u64 = 0;
  let mut x1798: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1797, &mut x1798, x1796, x1792, x1789);
  let mut x1799: u64 = 0;
  let mut x1800: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1799, &mut x1800, x1798, x1790, x1787);
  let mut x1801: u64 = 0;
  let mut x1802: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1801, &mut x1802, x1800, x1788, x1785);
  let mut x1803: u64 = 0;
  let mut x1804: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1803, &mut x1804, x1802, x1786, x1783);
  let x1805: u64 = ((x1804 as u64) + x1784);
  let mut x1806: u64 = 0;
  let mut x1807: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1806, &mut x1807, 0x0, x1767, x1793);
  let mut x1808: u64 = 0;
  let mut x1809: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1808, &mut x1809, x1807, x1769, x1795);
  let mut x1810: u64 = 0;
  let mut x1811: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1810, &mut x1811, x1809, x1771, x1797);
  let mut x1812: u64 = 0;
  let mut x1813: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1812, &mut x1813, x1811, x1773, x1799);
  let mut x1814: u64 = 0;
  let mut x1815: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1814, &mut x1815, x1813, x1775, x1801);
  let mut x1816: u64 = 0;
  let mut x1817: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1816, &mut x1817, x1815, x1777, x1803);
  let mut x1818: u64 = 0;
  let mut x1819: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1818, &mut x1819, x1817, x1779, x1805);
  let x1820: u64 = ((x1819 as u64) + (x1780 as u64));
  let mut x1821: u64 = 0;
  let mut x1822: u64 = 0;
  fiat_p384_mulx_u64(&mut x1821, &mut x1822, x1500, (arg3[5]));
  let mut x1823: u64 = 0;
  let mut x1824: u64 = 0;
  fiat_p384_mulx_u64(&mut x1823, &mut x1824, x1500, (arg3[4]));
  let mut x1825: u64 = 0;
  let mut x1826: u64 = 0;
  fiat_p384_mulx_u64(&mut x1825, &mut x1826, x1500, (arg3[3]));
  let mut x1827: u64 = 0;
  let mut x1828: u64 = 0;
  fiat_p384_mulx_u64(&mut x1827, &mut x1828, x1500, (arg3[2]));
  let mut x1829: u64 = 0;
  let mut x1830: u64 = 0;
  fiat_p384_mulx_u64(&mut x1829, &mut x1830, x1500, (arg3[1]));
  let mut x1831: u64 = 0;
  let mut x1832: u64 = 0;
  fiat_p384_mulx_u64(&mut x1831, &mut x1832, x1500, (arg3[0]));
  let mut x1833: u64 = 0;
  let mut x1834: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1833, &mut x1834, 0x0, x1832, x1829);
  let mut x1835: u64 = 0;
  let mut x1836: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1835, &mut x1836, x1834, x1830, x1827);
  let mut x1837: u64 = 0;
  let mut x1838: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1837, &mut x1838, x1836, x1828, x1825);
  let mut x1839: u64 = 0;
  let mut x1840: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1839, &mut x1840, x1838, x1826, x1823);
  let mut x1841: u64 = 0;
  let mut x1842: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1841, &mut x1842, x1840, x1824, x1821);
  let x1843: u64 = ((x1842 as u64) + x1822);
  let mut x1844: u64 = 0;
  let mut x1845: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1844, &mut x1845, 0x0, x1808, x1831);
  let mut x1846: u64 = 0;
  let mut x1847: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1846, &mut x1847, x1845, x1810, x1833);
  let mut x1848: u64 = 0;
  let mut x1849: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1848, &mut x1849, x1847, x1812, x1835);
  let mut x1850: u64 = 0;
  let mut x1851: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1850, &mut x1851, x1849, x1814, x1837);
  let mut x1852: u64 = 0;
  let mut x1853: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1852, &mut x1853, x1851, x1816, x1839);
  let mut x1854: u64 = 0;
  let mut x1855: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1854, &mut x1855, x1853, x1818, x1841);
  let mut x1856: u64 = 0;
  let mut x1857: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1856, &mut x1857, x1855, x1820, x1843);
  let mut x1858: u64 = 0;
  let mut x1859: u64 = 0;
  fiat_p384_mulx_u64(&mut x1858, &mut x1859, x1844, 0x100000001);
  let mut x1860: u64 = 0;
  let mut x1861: u64 = 0;
  fiat_p384_mulx_u64(&mut x1860, &mut x1861, x1858, 0xffffffffffffffff);
  let mut x1862: u64 = 0;
  let mut x1863: u64 = 0;
  fiat_p384_mulx_u64(&mut x1862, &mut x1863, x1858, 0xffffffffffffffff);
  let mut x1864: u64 = 0;
  let mut x1865: u64 = 0;
  fiat_p384_mulx_u64(&mut x1864, &mut x1865, x1858, 0xffffffffffffffff);
  let mut x1866: u64 = 0;
  let mut x1867: u64 = 0;
  fiat_p384_mulx_u64(&mut x1866, &mut x1867, x1858, 0xfffffffffffffffe);
  let mut x1868: u64 = 0;
  let mut x1869: u64 = 0;
  fiat_p384_mulx_u64(&mut x1868, &mut x1869, x1858, 0xffffffff00000000);
  let mut x1870: u64 = 0;
  let mut x1871: u64 = 0;
  fiat_p384_mulx_u64(&mut x1870, &mut x1871, x1858, 0xffffffff);
  let mut x1872: u64 = 0;
  let mut x1873: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1872, &mut x1873, 0x0, x1871, x1868);
  let mut x1874: u64 = 0;
  let mut x1875: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1874, &mut x1875, x1873, x1869, x1866);
  let mut x1876: u64 = 0;
  let mut x1877: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1876, &mut x1877, x1875, x1867, x1864);
  let mut x1878: u64 = 0;
  let mut x1879: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1878, &mut x1879, x1877, x1865, x1862);
  let mut x1880: u64 = 0;
  let mut x1881: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1880, &mut x1881, x1879, x1863, x1860);
  let x1882: u64 = ((x1881 as u64) + x1861);
  let mut x1883: u64 = 0;
  let mut x1884: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1883, &mut x1884, 0x0, x1844, x1870);
  let mut x1885: u64 = 0;
  let mut x1886: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1885, &mut x1886, x1884, x1846, x1872);
  let mut x1887: u64 = 0;
  let mut x1888: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1887, &mut x1888, x1886, x1848, x1874);
  let mut x1889: u64 = 0;
  let mut x1890: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1889, &mut x1890, x1888, x1850, x1876);
  let mut x1891: u64 = 0;
  let mut x1892: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1891, &mut x1892, x1890, x1852, x1878);
  let mut x1893: u64 = 0;
  let mut x1894: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1893, &mut x1894, x1892, x1854, x1880);
  let mut x1895: u64 = 0;
  let mut x1896: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1895, &mut x1896, x1894, x1856, x1882);
  let x1897: u64 = ((x1896 as u64) + (x1857 as u64));
  let mut x1898: u64 = 0;
  let mut x1899: u64 = 0;
  fiat_p384_mulx_u64(&mut x1898, &mut x1899, x1501, (arg3[5]));
  let mut x1900: u64 = 0;
  let mut x1901: u64 = 0;
  fiat_p384_mulx_u64(&mut x1900, &mut x1901, x1501, (arg3[4]));
  let mut x1902: u64 = 0;
  let mut x1903: u64 = 0;
  fiat_p384_mulx_u64(&mut x1902, &mut x1903, x1501, (arg3[3]));
  let mut x1904: u64 = 0;
  let mut x1905: u64 = 0;
  fiat_p384_mulx_u64(&mut x1904, &mut x1905, x1501, (arg3[2]));
  let mut x1906: u64 = 0;
  let mut x1907: u64 = 0;
  fiat_p384_mulx_u64(&mut x1906, &mut x1907, x1501, (arg3[1]));
  let mut x1908: u64 = 0;
  let mut x1909: u64 = 0;
  fiat_p384_mulx_u64(&mut x1908, &mut x1909, x1501, (arg3[0]));
  let mut x1910: u64 = 0;
  let mut x1911: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1910, &mut x1911, 0x0, x1909, x1906);
  let mut x1912: u64 = 0;
  let mut x1913: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1912, &mut x1913, x1911, x1907, x1904);
  let mut x1914: u64 = 0;
  let mut x1915: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1914, &mut x1915, x1913, x1905, x1902);
  let mut x1916: u64 = 0;
  let mut x1917: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1916, &mut x1917, x1915, x1903, x1900);
  let mut x1918: u64 = 0;
  let mut x1919: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1918, &mut x1919, x1917, x1901, x1898);
  let x1920: u64 = ((x1919 as u64) + x1899);
  let mut x1921: u64 = 0;
  let mut x1922: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1921, &mut x1922, 0x0, x1885, x1908);
  let mut x1923: u64 = 0;
  let mut x1924: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1923, &mut x1924, x1922, x1887, x1910);
  let mut x1925: u64 = 0;
  let mut x1926: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1925, &mut x1926, x1924, x1889, x1912);
  let mut x1927: u64 = 0;
  let mut x1928: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1927, &mut x1928, x1926, x1891, x1914);
  let mut x1929: u64 = 0;
  let mut x1930: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1929, &mut x1930, x1928, x1893, x1916);
  let mut x1931: u64 = 0;
  let mut x1932: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1931, &mut x1932, x1930, x1895, x1918);
  let mut x1933: u64 = 0;
  let mut x1934: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1933, &mut x1934, x1932, x1897, x1920);
  let mut x1935: u64 = 0;
  let mut x1936: u64 = 0;
  fiat_p384_mulx_u64(&mut x1935, &mut x1936, x1921, 0x100000001);
  let mut x1937: u64 = 0;
  let mut x1938: u64 = 0;
  fiat_p384_mulx_u64(&mut x1937, &mut x1938, x1935, 0xffffffffffffffff);
  let mut x1939: u64 = 0;
  let mut x1940: u64 = 0;
  fiat_p384_mulx_u64(&mut x1939, &mut x1940, x1935, 0xffffffffffffffff);
  let mut x1941: u64 = 0;
  let mut x1942: u64 = 0;
  fiat_p384_mulx_u64(&mut x1941, &mut x1942, x1935, 0xffffffffffffffff);
  let mut x1943: u64 = 0;
  let mut x1944: u64 = 0;
  fiat_p384_mulx_u64(&mut x1943, &mut x1944, x1935, 0xfffffffffffffffe);
  let mut x1945: u64 = 0;
  let mut x1946: u64 = 0;
  fiat_p384_mulx_u64(&mut x1945, &mut x1946, x1935, 0xffffffff00000000);
  let mut x1947: u64 = 0;
  let mut x1948: u64 = 0;
  fiat_p384_mulx_u64(&mut x1947, &mut x1948, x1935, 0xffffffff);
  let mut x1949: u64 = 0;
  let mut x1950: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1949, &mut x1950, 0x0, x1948, x1945);
  let mut x1951: u64 = 0;
  let mut x1952: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1951, &mut x1952, x1950, x1946, x1943);
  let mut x1953: u64 = 0;
  let mut x1954: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1953, &mut x1954, x1952, x1944, x1941);
  let mut x1955: u64 = 0;
  let mut x1956: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1955, &mut x1956, x1954, x1942, x1939);
  let mut x1957: u64 = 0;
  let mut x1958: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1957, &mut x1958, x1956, x1940, x1937);
  let x1959: u64 = ((x1958 as u64) + x1938);
  let mut x1960: u64 = 0;
  let mut x1961: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1960, &mut x1961, 0x0, x1921, x1947);
  let mut x1962: u64 = 0;
  let mut x1963: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1962, &mut x1963, x1961, x1923, x1949);
  let mut x1964: u64 = 0;
  let mut x1965: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1964, &mut x1965, x1963, x1925, x1951);
  let mut x1966: u64 = 0;
  let mut x1967: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1966, &mut x1967, x1965, x1927, x1953);
  let mut x1968: u64 = 0;
  let mut x1969: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1968, &mut x1969, x1967, x1929, x1955);
  let mut x1970: u64 = 0;
  let mut x1971: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1970, &mut x1971, x1969, x1931, x1957);
  let mut x1972: u64 = 0;
  let mut x1973: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1972, &mut x1973, x1971, x1933, x1959);
  let x1974: u64 = ((x1973 as u64) + (x1934 as u64));
  let mut x1975: u64 = 0;
  let mut x1976: u64 = 0;
  fiat_p384_mulx_u64(&mut x1975, &mut x1976, x1502, (arg3[5]));
  let mut x1977: u64 = 0;
  let mut x1978: u64 = 0;
  fiat_p384_mulx_u64(&mut x1977, &mut x1978, x1502, (arg3[4]));
  let mut x1979: u64 = 0;
  let mut x1980: u64 = 0;
  fiat_p384_mulx_u64(&mut x1979, &mut x1980, x1502, (arg3[3]));
  let mut x1981: u64 = 0;
  let mut x1982: u64 = 0;
  fiat_p384_mulx_u64(&mut x1981, &mut x1982, x1502, (arg3[2]));
  let mut x1983: u64 = 0;
  let mut x1984: u64 = 0;
  fiat_p384_mulx_u64(&mut x1983, &mut x1984, x1502, (arg3[1]));
  let mut x1985: u64 = 0;
  let mut x1986: u64 = 0;
  fiat_p384_mulx_u64(&mut x1985, &mut x1986, x1502, (arg3[0]));
  let mut x1987: u64 = 0;
  let mut x1988: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1987, &mut x1988, 0x0, x1986, x1983);
  let mut x1989: u64 = 0;
  let mut x1990: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1989, &mut x1990, x1988, x1984, x1981);
  let mut x1991: u64 = 0;
  let mut x1992: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1991, &mut x1992, x1990, x1982, x1979);
  let mut x1993: u64 = 0;
  let mut x1994: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1993, &mut x1994, x1992, x1980, x1977);
  let mut x1995: u64 = 0;
  let mut x1996: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1995, &mut x1996, x1994, x1978, x1975);
  let x1997: u64 = ((x1996 as u64) + x1976);
  let mut x1998: u64 = 0;
  let mut x1999: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x1998, &mut x1999, 0x0, x1962, x1985);
  let mut x2000: u64 = 0;
  let mut x2001: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2000, &mut x2001, x1999, x1964, x1987);
  let mut x2002: u64 = 0;
  let mut x2003: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2002, &mut x2003, x2001, x1966, x1989);
  let mut x2004: u64 = 0;
  let mut x2005: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2004, &mut x2005, x2003, x1968, x1991);
  let mut x2006: u64 = 0;
  let mut x2007: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2006, &mut x2007, x2005, x1970, x1993);
  let mut x2008: u64 = 0;
  let mut x2009: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2008, &mut x2009, x2007, x1972, x1995);
  let mut x2010: u64 = 0;
  let mut x2011: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2010, &mut x2011, x2009, x1974, x1997);
  let mut x2012: u64 = 0;
  let mut x2013: u64 = 0;
  fiat_p384_mulx_u64(&mut x2012, &mut x2013, x1998, 0x100000001);
  let mut x2014: u64 = 0;
  let mut x2015: u64 = 0;
  fiat_p384_mulx_u64(&mut x2014, &mut x2015, x2012, 0xffffffffffffffff);
  let mut x2016: u64 = 0;
  let mut x2017: u64 = 0;
  fiat_p384_mulx_u64(&mut x2016, &mut x2017, x2012, 0xffffffffffffffff);
  let mut x2018: u64 = 0;
  let mut x2019: u64 = 0;
  fiat_p384_mulx_u64(&mut x2018, &mut x2019, x2012, 0xffffffffffffffff);
  let mut x2020: u64 = 0;
  let mut x2021: u64 = 0;
  fiat_p384_mulx_u64(&mut x2020, &mut x2021, x2012, 0xfffffffffffffffe);
  let mut x2022: u64 = 0;
  let mut x2023: u64 = 0;
  fiat_p384_mulx_u64(&mut x2022, &mut x2023, x2012, 0xffffffff00000000);
  let mut x2024: u64 = 0;
  let mut x2025: u64 = 0;
  fiat_p384_mulx_u64(&mut x2024, &mut x2025, x2012, 0xffffffff);
  let mut x2026: u64 = 0;
  let mut x2027: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2026, &mut x2027, 0x0, x2025, x2022);
  let mut x2028: u64 = 0;
  let mut x2029: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2028, &mut x2029, x2027, x2023, x2020);
  let mut x2030: u64 = 0;
  let mut x2031: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2030, &mut x2031, x2029, x2021, x2018);
  let mut x2032: u64 = 0;
  let mut x2033: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2032, &mut x2033, x2031, x2019, x2016);
  let mut x2034: u64 = 0;
  let mut x2035: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2034, &mut x2035, x2033, x2017, x2014);
  let x2036: u64 = ((x2035 as u64) + x2015);
  let mut x2037: u64 = 0;
  let mut x2038: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2037, &mut x2038, 0x0, x1998, x2024);
  let mut x2039: u64 = 0;
  let mut x2040: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2039, &mut x2040, x2038, x2000, x2026);
  let mut x2041: u64 = 0;
  let mut x2042: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2041, &mut x2042, x2040, x2002, x2028);
  let mut x2043: u64 = 0;
  let mut x2044: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2043, &mut x2044, x2042, x2004, x2030);
  let mut x2045: u64 = 0;
  let mut x2046: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2045, &mut x2046, x2044, x2006, x2032);
  let mut x2047: u64 = 0;
  let mut x2048: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2047, &mut x2048, x2046, x2008, x2034);
  let mut x2049: u64 = 0;
  let mut x2050: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2049, &mut x2050, x2048, x2010, x2036);
  let x2051: u64 = ((x2050 as u64) + (x2011 as u64));
  let mut x2052: u64 = 0;
  let mut x2053: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2052, &mut x2053, 0x0, x2039, 0xffffffff);
  let mut x2054: u64 = 0;
  let mut x2055: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2054, &mut x2055, x2053, x2041, 0xffffffff00000000);
  let mut x2056: u64 = 0;
  let mut x2057: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2056, &mut x2057, x2055, x2043, 0xfffffffffffffffe);
  let mut x2058: u64 = 0;
  let mut x2059: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2058, &mut x2059, x2057, x2045, 0xffffffffffffffff);
  let mut x2060: u64 = 0;
  let mut x2061: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2060, &mut x2061, x2059, x2047, 0xffffffffffffffff);
  let mut x2062: u64 = 0;
  let mut x2063: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2062, &mut x2063, x2061, x2049, 0xffffffffffffffff);
  let mut x2064: u64 = 0;
  let mut x2065: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2064, &mut x2065, x2063, x2051, (0x0 as u64));
  let mut x2066: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2066, x2065, x2052, x2039);
  let mut x2067: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2067, x2065, x2054, x2041);
  let mut x2068: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2068, x2065, x2056, x2043);
  let mut x2069: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2069, x2065, x2058, x2045);
  let mut x2070: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2070, x2065, x2060, x2047);
  let mut x2071: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2071, x2065, x2062, x2049);
  let mut x2072: u64 = 0;
  let mut x2073: u64 = 0;
  fiat_p384_mulx_u64(&mut x2072, &mut x2073, x1531, (arg4[5]));
  let mut x2074: u64 = 0;
  let mut x2075: u64 = 0;
  fiat_p384_mulx_u64(&mut x2074, &mut x2075, x1531, (arg4[4]));
  let mut x2076: u64 = 0;
  let mut x2077: u64 = 0;
  fiat_p384_mulx_u64(&mut x2076, &mut x2077, x1531, (arg4[3]));
  let mut x2078: u64 = 0;
  let mut x2079: u64 = 0;
  fiat_p384_mulx_u64(&mut x2078, &mut x2079, x1531, (arg4[2]));
  let mut x2080: u64 = 0;
  let mut x2081: u64 = 0;
  fiat_p384_mulx_u64(&mut x2080, &mut x2081, x1531, (arg4[1]));
  let mut x2082: u64 = 0;
  let mut x2083: u64 = 0;
  fiat_p384_mulx_u64(&mut x2082, &mut x2083, x1531, (arg4[0]));
  let mut x2084: u64 = 0;
  let mut x2085: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2084, &mut x2085, 0x0, x2083, x2080);
  let mut x2086: u64 = 0;
  let mut x2087: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2086, &mut x2087, x2085, x2081, x2078);
  let mut x2088: u64 = 0;
  let mut x2089: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2088, &mut x2089, x2087, x2079, x2076);
  let mut x2090: u64 = 0;
  let mut x2091: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2090, &mut x2091, x2089, x2077, x2074);
  let mut x2092: u64 = 0;
  let mut x2093: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2092, &mut x2093, x2091, x2075, x2072);
  let x2094: u64 = ((x2093 as u64) + x2073);
  let mut x2095: u64 = 0;
  let mut x2096: u64 = 0;
  fiat_p384_mulx_u64(&mut x2095, &mut x2096, x2082, 0x100000001);
  let mut x2097: u64 = 0;
  let mut x2098: u64 = 0;
  fiat_p384_mulx_u64(&mut x2097, &mut x2098, x2095, 0xffffffffffffffff);
  let mut x2099: u64 = 0;
  let mut x2100: u64 = 0;
  fiat_p384_mulx_u64(&mut x2099, &mut x2100, x2095, 0xffffffffffffffff);
  let mut x2101: u64 = 0;
  let mut x2102: u64 = 0;
  fiat_p384_mulx_u64(&mut x2101, &mut x2102, x2095, 0xffffffffffffffff);
  let mut x2103: u64 = 0;
  let mut x2104: u64 = 0;
  fiat_p384_mulx_u64(&mut x2103, &mut x2104, x2095, 0xfffffffffffffffe);
  let mut x2105: u64 = 0;
  let mut x2106: u64 = 0;
  fiat_p384_mulx_u64(&mut x2105, &mut x2106, x2095, 0xffffffff00000000);
  let mut x2107: u64 = 0;
  let mut x2108: u64 = 0;
  fiat_p384_mulx_u64(&mut x2107, &mut x2108, x2095, 0xffffffff);
  let mut x2109: u64 = 0;
  let mut x2110: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2109, &mut x2110, 0x0, x2108, x2105);
  let mut x2111: u64 = 0;
  let mut x2112: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2111, &mut x2112, x2110, x2106, x2103);
  let mut x2113: u64 = 0;
  let mut x2114: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2113, &mut x2114, x2112, x2104, x2101);
  let mut x2115: u64 = 0;
  let mut x2116: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2115, &mut x2116, x2114, x2102, x2099);
  let mut x2117: u64 = 0;
  let mut x2118: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2117, &mut x2118, x2116, x2100, x2097);
  let x2119: u64 = ((x2118 as u64) + x2098);
  let mut x2120: u64 = 0;
  let mut x2121: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2120, &mut x2121, 0x0, x2082, x2107);
  let mut x2122: u64 = 0;
  let mut x2123: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2122, &mut x2123, x2121, x2084, x2109);
  let mut x2124: u64 = 0;
  let mut x2125: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2124, &mut x2125, x2123, x2086, x2111);
  let mut x2126: u64 = 0;
  let mut x2127: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2126, &mut x2127, x2125, x2088, x2113);
  let mut x2128: u64 = 0;
  let mut x2129: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2128, &mut x2129, x2127, x2090, x2115);
  let mut x2130: u64 = 0;
  let mut x2131: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2130, &mut x2131, x2129, x2092, x2117);
  let mut x2132: u64 = 0;
  let mut x2133: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2132, &mut x2133, x2131, x2094, x2119);
  let mut x2134: u64 = 0;
  let mut x2135: u64 = 0;
  fiat_p384_mulx_u64(&mut x2134, &mut x2135, x1532, (arg4[5]));
  let mut x2136: u64 = 0;
  let mut x2137: u64 = 0;
  fiat_p384_mulx_u64(&mut x2136, &mut x2137, x1532, (arg4[4]));
  let mut x2138: u64 = 0;
  let mut x2139: u64 = 0;
  fiat_p384_mulx_u64(&mut x2138, &mut x2139, x1532, (arg4[3]));
  let mut x2140: u64 = 0;
  let mut x2141: u64 = 0;
  fiat_p384_mulx_u64(&mut x2140, &mut x2141, x1532, (arg4[2]));
  let mut x2142: u64 = 0;
  let mut x2143: u64 = 0;
  fiat_p384_mulx_u64(&mut x2142, &mut x2143, x1532, (arg4[1]));
  let mut x2144: u64 = 0;
  let mut x2145: u64 = 0;
  fiat_p384_mulx_u64(&mut x2144, &mut x2145, x1532, (arg4[0]));
  let mut x2146: u64 = 0;
  let mut x2147: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2146, &mut x2147, 0x0, x2145, x2142);
  let mut x2148: u64 = 0;
  let mut x2149: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2148, &mut x2149, x2147, x2143, x2140);
  let mut x2150: u64 = 0;
  let mut x2151: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2150, &mut x2151, x2149, x2141, x2138);
  let mut x2152: u64 = 0;
  let mut x2153: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2152, &mut x2153, x2151, x2139, x2136);
  let mut x2154: u64 = 0;
  let mut x2155: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2154, &mut x2155, x2153, x2137, x2134);
  let x2156: u64 = ((x2155 as u64) + x2135);
  let mut x2157: u64 = 0;
  let mut x2158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2157, &mut x2158, 0x0, x2122, x2144);
  let mut x2159: u64 = 0;
  let mut x2160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2159, &mut x2160, x2158, x2124, x2146);
  let mut x2161: u64 = 0;
  let mut x2162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2161, &mut x2162, x2160, x2126, x2148);
  let mut x2163: u64 = 0;
  let mut x2164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2163, &mut x2164, x2162, x2128, x2150);
  let mut x2165: u64 = 0;
  let mut x2166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2165, &mut x2166, x2164, x2130, x2152);
  let mut x2167: u64 = 0;
  let mut x2168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2167, &mut x2168, x2166, x2132, x2154);
  let mut x2169: u64 = 0;
  let mut x2170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2169, &mut x2170, x2168, (x2133 as u64), x2156);
  let mut x2171: u64 = 0;
  let mut x2172: u64 = 0;
  fiat_p384_mulx_u64(&mut x2171, &mut x2172, x2157, 0x100000001);
  let mut x2173: u64 = 0;
  let mut x2174: u64 = 0;
  fiat_p384_mulx_u64(&mut x2173, &mut x2174, x2171, 0xffffffffffffffff);
  let mut x2175: u64 = 0;
  let mut x2176: u64 = 0;
  fiat_p384_mulx_u64(&mut x2175, &mut x2176, x2171, 0xffffffffffffffff);
  let mut x2177: u64 = 0;
  let mut x2178: u64 = 0;
  fiat_p384_mulx_u64(&mut x2177, &mut x2178, x2171, 0xffffffffffffffff);
  let mut x2179: u64 = 0;
  let mut x2180: u64 = 0;
  fiat_p384_mulx_u64(&mut x2179, &mut x2180, x2171, 0xfffffffffffffffe);
  let mut x2181: u64 = 0;
  let mut x2182: u64 = 0;
  fiat_p384_mulx_u64(&mut x2181, &mut x2182, x2171, 0xffffffff00000000);
  let mut x2183: u64 = 0;
  let mut x2184: u64 = 0;
  fiat_p384_mulx_u64(&mut x2183, &mut x2184, x2171, 0xffffffff);
  let mut x2185: u64 = 0;
  let mut x2186: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2185, &mut x2186, 0x0, x2184, x2181);
  let mut x2187: u64 = 0;
  let mut x2188: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2187, &mut x2188, x2186, x2182, x2179);
  let mut x2189: u64 = 0;
  let mut x2190: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2189, &mut x2190, x2188, x2180, x2177);
  let mut x2191: u64 = 0;
  let mut x2192: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2191, &mut x2192, x2190, x2178, x2175);
  let mut x2193: u64 = 0;
  let mut x2194: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2193, &mut x2194, x2192, x2176, x2173);
  let x2195: u64 = ((x2194 as u64) + x2174);
  let mut x2196: u64 = 0;
  let mut x2197: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2196, &mut x2197, 0x0, x2157, x2183);
  let mut x2198: u64 = 0;
  let mut x2199: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2198, &mut x2199, x2197, x2159, x2185);
  let mut x2200: u64 = 0;
  let mut x2201: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2200, &mut x2201, x2199, x2161, x2187);
  let mut x2202: u64 = 0;
  let mut x2203: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2202, &mut x2203, x2201, x2163, x2189);
  let mut x2204: u64 = 0;
  let mut x2205: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2204, &mut x2205, x2203, x2165, x2191);
  let mut x2206: u64 = 0;
  let mut x2207: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2206, &mut x2207, x2205, x2167, x2193);
  let mut x2208: u64 = 0;
  let mut x2209: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2208, &mut x2209, x2207, x2169, x2195);
  let x2210: u64 = ((x2209 as u64) + (x2170 as u64));
  let mut x2211: u64 = 0;
  let mut x2212: u64 = 0;
  fiat_p384_mulx_u64(&mut x2211, &mut x2212, x1533, (arg4[5]));
  let mut x2213: u64 = 0;
  let mut x2214: u64 = 0;
  fiat_p384_mulx_u64(&mut x2213, &mut x2214, x1533, (arg4[4]));
  let mut x2215: u64 = 0;
  let mut x2216: u64 = 0;
  fiat_p384_mulx_u64(&mut x2215, &mut x2216, x1533, (arg4[3]));
  let mut x2217: u64 = 0;
  let mut x2218: u64 = 0;
  fiat_p384_mulx_u64(&mut x2217, &mut x2218, x1533, (arg4[2]));
  let mut x2219: u64 = 0;
  let mut x2220: u64 = 0;
  fiat_p384_mulx_u64(&mut x2219, &mut x2220, x1533, (arg4[1]));
  let mut x2221: u64 = 0;
  let mut x2222: u64 = 0;
  fiat_p384_mulx_u64(&mut x2221, &mut x2222, x1533, (arg4[0]));
  let mut x2223: u64 = 0;
  let mut x2224: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2223, &mut x2224, 0x0, x2222, x2219);
  let mut x2225: u64 = 0;
  let mut x2226: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2225, &mut x2226, x2224, x2220, x2217);
  let mut x2227: u64 = 0;
  let mut x2228: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2227, &mut x2228, x2226, x2218, x2215);
  let mut x2229: u64 = 0;
  let mut x2230: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2229, &mut x2230, x2228, x2216, x2213);
  let mut x2231: u64 = 0;
  let mut x2232: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2231, &mut x2232, x2230, x2214, x2211);
  let x2233: u64 = ((x2232 as u64) + x2212);
  let mut x2234: u64 = 0;
  let mut x2235: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2234, &mut x2235, 0x0, x2198, x2221);
  let mut x2236: u64 = 0;
  let mut x2237: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2236, &mut x2237, x2235, x2200, x2223);
  let mut x2238: u64 = 0;
  let mut x2239: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2238, &mut x2239, x2237, x2202, x2225);
  let mut x2240: u64 = 0;
  let mut x2241: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2240, &mut x2241, x2239, x2204, x2227);
  let mut x2242: u64 = 0;
  let mut x2243: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2242, &mut x2243, x2241, x2206, x2229);
  let mut x2244: u64 = 0;
  let mut x2245: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2244, &mut x2245, x2243, x2208, x2231);
  let mut x2246: u64 = 0;
  let mut x2247: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2246, &mut x2247, x2245, x2210, x2233);
  let mut x2248: u64 = 0;
  let mut x2249: u64 = 0;
  fiat_p384_mulx_u64(&mut x2248, &mut x2249, x2234, 0x100000001);
  let mut x2250: u64 = 0;
  let mut x2251: u64 = 0;
  fiat_p384_mulx_u64(&mut x2250, &mut x2251, x2248, 0xffffffffffffffff);
  let mut x2252: u64 = 0;
  let mut x2253: u64 = 0;
  fiat_p384_mulx_u64(&mut x2252, &mut x2253, x2248, 0xffffffffffffffff);
  let mut x2254: u64 = 0;
  let mut x2255: u64 = 0;
  fiat_p384_mulx_u64(&mut x2254, &mut x2255, x2248, 0xffffffffffffffff);
  let mut x2256: u64 = 0;
  let mut x2257: u64 = 0;
  fiat_p384_mulx_u64(&mut x2256, &mut x2257, x2248, 0xfffffffffffffffe);
  let mut x2258: u64 = 0;
  let mut x2259: u64 = 0;
  fiat_p384_mulx_u64(&mut x2258, &mut x2259, x2248, 0xffffffff00000000);
  let mut x2260: u64 = 0;
  let mut x2261: u64 = 0;
  fiat_p384_mulx_u64(&mut x2260, &mut x2261, x2248, 0xffffffff);
  let mut x2262: u64 = 0;
  let mut x2263: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2262, &mut x2263, 0x0, x2261, x2258);
  let mut x2264: u64 = 0;
  let mut x2265: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2264, &mut x2265, x2263, x2259, x2256);
  let mut x2266: u64 = 0;
  let mut x2267: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2266, &mut x2267, x2265, x2257, x2254);
  let mut x2268: u64 = 0;
  let mut x2269: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2268, &mut x2269, x2267, x2255, x2252);
  let mut x2270: u64 = 0;
  let mut x2271: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2270, &mut x2271, x2269, x2253, x2250);
  let x2272: u64 = ((x2271 as u64) + x2251);
  let mut x2273: u64 = 0;
  let mut x2274: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2273, &mut x2274, 0x0, x2234, x2260);
  let mut x2275: u64 = 0;
  let mut x2276: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2275, &mut x2276, x2274, x2236, x2262);
  let mut x2277: u64 = 0;
  let mut x2278: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2277, &mut x2278, x2276, x2238, x2264);
  let mut x2279: u64 = 0;
  let mut x2280: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2279, &mut x2280, x2278, x2240, x2266);
  let mut x2281: u64 = 0;
  let mut x2282: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2281, &mut x2282, x2280, x2242, x2268);
  let mut x2283: u64 = 0;
  let mut x2284: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2283, &mut x2284, x2282, x2244, x2270);
  let mut x2285: u64 = 0;
  let mut x2286: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2285, &mut x2286, x2284, x2246, x2272);
  let x2287: u64 = ((x2286 as u64) + (x2247 as u64));
  let mut x2288: u64 = 0;
  let mut x2289: u64 = 0;
  fiat_p384_mulx_u64(&mut x2288, &mut x2289, x1534, (arg4[5]));
  let mut x2290: u64 = 0;
  let mut x2291: u64 = 0;
  fiat_p384_mulx_u64(&mut x2290, &mut x2291, x1534, (arg4[4]));
  let mut x2292: u64 = 0;
  let mut x2293: u64 = 0;
  fiat_p384_mulx_u64(&mut x2292, &mut x2293, x1534, (arg4[3]));
  let mut x2294: u64 = 0;
  let mut x2295: u64 = 0;
  fiat_p384_mulx_u64(&mut x2294, &mut x2295, x1534, (arg4[2]));
  let mut x2296: u64 = 0;
  let mut x2297: u64 = 0;
  fiat_p384_mulx_u64(&mut x2296, &mut x2297, x1534, (arg4[1]));
  let mut x2298: u64 = 0;
  let mut x2299: u64 = 0;
  fiat_p384_mulx_u64(&mut x2298, &mut x2299, x1534, (arg4[0]));
  let mut x2300: u64 = 0;
  let mut x2301: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2300, &mut x2301, 0x0, x2299, x2296);
  let mut x2302: u64 = 0;
  let mut x2303: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2302, &mut x2303, x2301, x2297, x2294);
  let mut x2304: u64 = 0;
  let mut x2305: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2304, &mut x2305, x2303, x2295, x2292);
  let mut x2306: u64 = 0;
  let mut x2307: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2306, &mut x2307, x2305, x2293, x2290);
  let mut x2308: u64 = 0;
  let mut x2309: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2308, &mut x2309, x2307, x2291, x2288);
  let x2310: u64 = ((x2309 as u64) + x2289);
  let mut x2311: u64 = 0;
  let mut x2312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2311, &mut x2312, 0x0, x2275, x2298);
  let mut x2313: u64 = 0;
  let mut x2314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2313, &mut x2314, x2312, x2277, x2300);
  let mut x2315: u64 = 0;
  let mut x2316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2315, &mut x2316, x2314, x2279, x2302);
  let mut x2317: u64 = 0;
  let mut x2318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2317, &mut x2318, x2316, x2281, x2304);
  let mut x2319: u64 = 0;
  let mut x2320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2319, &mut x2320, x2318, x2283, x2306);
  let mut x2321: u64 = 0;
  let mut x2322: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2321, &mut x2322, x2320, x2285, x2308);
  let mut x2323: u64 = 0;
  let mut x2324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2323, &mut x2324, x2322, x2287, x2310);
  let mut x2325: u64 = 0;
  let mut x2326: u64 = 0;
  fiat_p384_mulx_u64(&mut x2325, &mut x2326, x2311, 0x100000001);
  let mut x2327: u64 = 0;
  let mut x2328: u64 = 0;
  fiat_p384_mulx_u64(&mut x2327, &mut x2328, x2325, 0xffffffffffffffff);
  let mut x2329: u64 = 0;
  let mut x2330: u64 = 0;
  fiat_p384_mulx_u64(&mut x2329, &mut x2330, x2325, 0xffffffffffffffff);
  let mut x2331: u64 = 0;
  let mut x2332: u64 = 0;
  fiat_p384_mulx_u64(&mut x2331, &mut x2332, x2325, 0xffffffffffffffff);
  let mut x2333: u64 = 0;
  let mut x2334: u64 = 0;
  fiat_p384_mulx_u64(&mut x2333, &mut x2334, x2325, 0xfffffffffffffffe);
  let mut x2335: u64 = 0;
  let mut x2336: u64 = 0;
  fiat_p384_mulx_u64(&mut x2335, &mut x2336, x2325, 0xffffffff00000000);
  let mut x2337: u64 = 0;
  let mut x2338: u64 = 0;
  fiat_p384_mulx_u64(&mut x2337, &mut x2338, x2325, 0xffffffff);
  let mut x2339: u64 = 0;
  let mut x2340: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2339, &mut x2340, 0x0, x2338, x2335);
  let mut x2341: u64 = 0;
  let mut x2342: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2341, &mut x2342, x2340, x2336, x2333);
  let mut x2343: u64 = 0;
  let mut x2344: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2343, &mut x2344, x2342, x2334, x2331);
  let mut x2345: u64 = 0;
  let mut x2346: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2345, &mut x2346, x2344, x2332, x2329);
  let mut x2347: u64 = 0;
  let mut x2348: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2347, &mut x2348, x2346, x2330, x2327);
  let x2349: u64 = ((x2348 as u64) + x2328);
  let mut x2350: u64 = 0;
  let mut x2351: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2350, &mut x2351, 0x0, x2311, x2337);
  let mut x2352: u64 = 0;
  let mut x2353: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2352, &mut x2353, x2351, x2313, x2339);
  let mut x2354: u64 = 0;
  let mut x2355: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2354, &mut x2355, x2353, x2315, x2341);
  let mut x2356: u64 = 0;
  let mut x2357: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2356, &mut x2357, x2355, x2317, x2343);
  let mut x2358: u64 = 0;
  let mut x2359: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2358, &mut x2359, x2357, x2319, x2345);
  let mut x2360: u64 = 0;
  let mut x2361: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2360, &mut x2361, x2359, x2321, x2347);
  let mut x2362: u64 = 0;
  let mut x2363: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2362, &mut x2363, x2361, x2323, x2349);
  let x2364: u64 = ((x2363 as u64) + (x2324 as u64));
  let mut x2365: u64 = 0;
  let mut x2366: u64 = 0;
  fiat_p384_mulx_u64(&mut x2365, &mut x2366, x1535, (arg4[5]));
  let mut x2367: u64 = 0;
  let mut x2368: u64 = 0;
  fiat_p384_mulx_u64(&mut x2367, &mut x2368, x1535, (arg4[4]));
  let mut x2369: u64 = 0;
  let mut x2370: u64 = 0;
  fiat_p384_mulx_u64(&mut x2369, &mut x2370, x1535, (arg4[3]));
  let mut x2371: u64 = 0;
  let mut x2372: u64 = 0;
  fiat_p384_mulx_u64(&mut x2371, &mut x2372, x1535, (arg4[2]));
  let mut x2373: u64 = 0;
  let mut x2374: u64 = 0;
  fiat_p384_mulx_u64(&mut x2373, &mut x2374, x1535, (arg4[1]));
  let mut x2375: u64 = 0;
  let mut x2376: u64 = 0;
  fiat_p384_mulx_u64(&mut x2375, &mut x2376, x1535, (arg4[0]));
  let mut x2377: u64 = 0;
  let mut x2378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2377, &mut x2378, 0x0, x2376, x2373);
  let mut x2379: u64 = 0;
  let mut x2380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2379, &mut x2380, x2378, x2374, x2371);
  let mut x2381: u64 = 0;
  let mut x2382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2381, &mut x2382, x2380, x2372, x2369);
  let mut x2383: u64 = 0;
  let mut x2384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2383, &mut x2384, x2382, x2370, x2367);
  let mut x2385: u64 = 0;
  let mut x2386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2385, &mut x2386, x2384, x2368, x2365);
  let x2387: u64 = ((x2386 as u64) + x2366);
  let mut x2388: u64 = 0;
  let mut x2389: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2388, &mut x2389, 0x0, x2352, x2375);
  let mut x2390: u64 = 0;
  let mut x2391: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2390, &mut x2391, x2389, x2354, x2377);
  let mut x2392: u64 = 0;
  let mut x2393: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2392, &mut x2393, x2391, x2356, x2379);
  let mut x2394: u64 = 0;
  let mut x2395: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2394, &mut x2395, x2393, x2358, x2381);
  let mut x2396: u64 = 0;
  let mut x2397: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2396, &mut x2397, x2395, x2360, x2383);
  let mut x2398: u64 = 0;
  let mut x2399: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2398, &mut x2399, x2397, x2362, x2385);
  let mut x2400: u64 = 0;
  let mut x2401: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2400, &mut x2401, x2399, x2364, x2387);
  let mut x2402: u64 = 0;
  let mut x2403: u64 = 0;
  fiat_p384_mulx_u64(&mut x2402, &mut x2403, x2388, 0x100000001);
  let mut x2404: u64 = 0;
  let mut x2405: u64 = 0;
  fiat_p384_mulx_u64(&mut x2404, &mut x2405, x2402, 0xffffffffffffffff);
  let mut x2406: u64 = 0;
  let mut x2407: u64 = 0;
  fiat_p384_mulx_u64(&mut x2406, &mut x2407, x2402, 0xffffffffffffffff);
  let mut x2408: u64 = 0;
  let mut x2409: u64 = 0;
  fiat_p384_mulx_u64(&mut x2408, &mut x2409, x2402, 0xffffffffffffffff);
  let mut x2410: u64 = 0;
  let mut x2411: u64 = 0;
  fiat_p384_mulx_u64(&mut x2410, &mut x2411, x2402, 0xfffffffffffffffe);
  let mut x2412: u64 = 0;
  let mut x2413: u64 = 0;
  fiat_p384_mulx_u64(&mut x2412, &mut x2413, x2402, 0xffffffff00000000);
  let mut x2414: u64 = 0;
  let mut x2415: u64 = 0;
  fiat_p384_mulx_u64(&mut x2414, &mut x2415, x2402, 0xffffffff);
  let mut x2416: u64 = 0;
  let mut x2417: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2416, &mut x2417, 0x0, x2415, x2412);
  let mut x2418: u64 = 0;
  let mut x2419: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2418, &mut x2419, x2417, x2413, x2410);
  let mut x2420: u64 = 0;
  let mut x2421: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2420, &mut x2421, x2419, x2411, x2408);
  let mut x2422: u64 = 0;
  let mut x2423: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2422, &mut x2423, x2421, x2409, x2406);
  let mut x2424: u64 = 0;
  let mut x2425: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2424, &mut x2425, x2423, x2407, x2404);
  let x2426: u64 = ((x2425 as u64) + x2405);
  let mut x2427: u64 = 0;
  let mut x2428: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2427, &mut x2428, 0x0, x2388, x2414);
  let mut x2429: u64 = 0;
  let mut x2430: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2429, &mut x2430, x2428, x2390, x2416);
  let mut x2431: u64 = 0;
  let mut x2432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2431, &mut x2432, x2430, x2392, x2418);
  let mut x2433: u64 = 0;
  let mut x2434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2433, &mut x2434, x2432, x2394, x2420);
  let mut x2435: u64 = 0;
  let mut x2436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2435, &mut x2436, x2434, x2396, x2422);
  let mut x2437: u64 = 0;
  let mut x2438: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2437, &mut x2438, x2436, x2398, x2424);
  let mut x2439: u64 = 0;
  let mut x2440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2439, &mut x2440, x2438, x2400, x2426);
  let x2441: u64 = ((x2440 as u64) + (x2401 as u64));
  let mut x2442: u64 = 0;
  let mut x2443: u64 = 0;
  fiat_p384_mulx_u64(&mut x2442, &mut x2443, x1536, (arg4[5]));
  let mut x2444: u64 = 0;
  let mut x2445: u64 = 0;
  fiat_p384_mulx_u64(&mut x2444, &mut x2445, x1536, (arg4[4]));
  let mut x2446: u64 = 0;
  let mut x2447: u64 = 0;
  fiat_p384_mulx_u64(&mut x2446, &mut x2447, x1536, (arg4[3]));
  let mut x2448: u64 = 0;
  let mut x2449: u64 = 0;
  fiat_p384_mulx_u64(&mut x2448, &mut x2449, x1536, (arg4[2]));
  let mut x2450: u64 = 0;
  let mut x2451: u64 = 0;
  fiat_p384_mulx_u64(&mut x2450, &mut x2451, x1536, (arg4[1]));
  let mut x2452: u64 = 0;
  let mut x2453: u64 = 0;
  fiat_p384_mulx_u64(&mut x2452, &mut x2453, x1536, (arg4[0]));
  let mut x2454: u64 = 0;
  let mut x2455: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2454, &mut x2455, 0x0, x2453, x2450);
  let mut x2456: u64 = 0;
  let mut x2457: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2456, &mut x2457, x2455, x2451, x2448);
  let mut x2458: u64 = 0;
  let mut x2459: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2458, &mut x2459, x2457, x2449, x2446);
  let mut x2460: u64 = 0;
  let mut x2461: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2460, &mut x2461, x2459, x2447, x2444);
  let mut x2462: u64 = 0;
  let mut x2463: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2462, &mut x2463, x2461, x2445, x2442);
  let x2464: u64 = ((x2463 as u64) + x2443);
  let mut x2465: u64 = 0;
  let mut x2466: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2465, &mut x2466, 0x0, x2429, x2452);
  let mut x2467: u64 = 0;
  let mut x2468: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2467, &mut x2468, x2466, x2431, x2454);
  let mut x2469: u64 = 0;
  let mut x2470: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2469, &mut x2470, x2468, x2433, x2456);
  let mut x2471: u64 = 0;
  let mut x2472: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2471, &mut x2472, x2470, x2435, x2458);
  let mut x2473: u64 = 0;
  let mut x2474: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2473, &mut x2474, x2472, x2437, x2460);
  let mut x2475: u64 = 0;
  let mut x2476: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2475, &mut x2476, x2474, x2439, x2462);
  let mut x2477: u64 = 0;
  let mut x2478: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2477, &mut x2478, x2476, x2441, x2464);
  let mut x2479: u64 = 0;
  let mut x2480: u64 = 0;
  fiat_p384_mulx_u64(&mut x2479, &mut x2480, x2465, 0x100000001);
  let mut x2481: u64 = 0;
  let mut x2482: u64 = 0;
  fiat_p384_mulx_u64(&mut x2481, &mut x2482, x2479, 0xffffffffffffffff);
  let mut x2483: u64 = 0;
  let mut x2484: u64 = 0;
  fiat_p384_mulx_u64(&mut x2483, &mut x2484, x2479, 0xffffffffffffffff);
  let mut x2485: u64 = 0;
  let mut x2486: u64 = 0;
  fiat_p384_mulx_u64(&mut x2485, &mut x2486, x2479, 0xffffffffffffffff);
  let mut x2487: u64 = 0;
  let mut x2488: u64 = 0;
  fiat_p384_mulx_u64(&mut x2487, &mut x2488, x2479, 0xfffffffffffffffe);
  let mut x2489: u64 = 0;
  let mut x2490: u64 = 0;
  fiat_p384_mulx_u64(&mut x2489, &mut x2490, x2479, 0xffffffff00000000);
  let mut x2491: u64 = 0;
  let mut x2492: u64 = 0;
  fiat_p384_mulx_u64(&mut x2491, &mut x2492, x2479, 0xffffffff);
  let mut x2493: u64 = 0;
  let mut x2494: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2493, &mut x2494, 0x0, x2492, x2489);
  let mut x2495: u64 = 0;
  let mut x2496: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2495, &mut x2496, x2494, x2490, x2487);
  let mut x2497: u64 = 0;
  let mut x2498: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2497, &mut x2498, x2496, x2488, x2485);
  let mut x2499: u64 = 0;
  let mut x2500: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2499, &mut x2500, x2498, x2486, x2483);
  let mut x2501: u64 = 0;
  let mut x2502: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2501, &mut x2502, x2500, x2484, x2481);
  let x2503: u64 = ((x2502 as u64) + x2482);
  let mut x2504: u64 = 0;
  let mut x2505: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2504, &mut x2505, 0x0, x2465, x2491);
  let mut x2506: u64 = 0;
  let mut x2507: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2506, &mut x2507, x2505, x2467, x2493);
  let mut x2508: u64 = 0;
  let mut x2509: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2508, &mut x2509, x2507, x2469, x2495);
  let mut x2510: u64 = 0;
  let mut x2511: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2510, &mut x2511, x2509, x2471, x2497);
  let mut x2512: u64 = 0;
  let mut x2513: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2512, &mut x2513, x2511, x2473, x2499);
  let mut x2514: u64 = 0;
  let mut x2515: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2514, &mut x2515, x2513, x2475, x2501);
  let mut x2516: u64 = 0;
  let mut x2517: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2516, &mut x2517, x2515, x2477, x2503);
  let x2518: u64 = ((x2517 as u64) + (x2478 as u64));
  let mut x2519: u64 = 0;
  let mut x2520: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2519, &mut x2520, 0x0, x2506, 0xffffffff);
  let mut x2521: u64 = 0;
  let mut x2522: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2521, &mut x2522, x2520, x2508, 0xffffffff00000000);
  let mut x2523: u64 = 0;
  let mut x2524: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2523, &mut x2524, x2522, x2510, 0xfffffffffffffffe);
  let mut x2525: u64 = 0;
  let mut x2526: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2525, &mut x2526, x2524, x2512, 0xffffffffffffffff);
  let mut x2527: u64 = 0;
  let mut x2528: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2527, &mut x2528, x2526, x2514, 0xffffffffffffffff);
  let mut x2529: u64 = 0;
  let mut x2530: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2529, &mut x2530, x2528, x2516, 0xffffffffffffffff);
  let mut x2531: u64 = 0;
  let mut x2532: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2531, &mut x2532, x2530, x2518, (0x0 as u64));
  let mut x2533: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2533, x2532, x2519, x2506);
  let mut x2534: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2534, x2532, x2521, x2508);
  let mut x2535: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2535, x2532, x2523, x2510);
  let mut x2536: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2536, x2532, x2525, x2512);
  let mut x2537: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2537, x2532, x2527, x2514);
  let mut x2538: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x2538, x2532, x2529, x2516);
  let mut x2539: u64 = 0;
  let mut x2540: u64 = 0;
  fiat_p384_mulx_u64(&mut x2539, &mut x2540, x1565, (arg3[5]));
  let mut x2541: u64 = 0;
  let mut x2542: u64 = 0;
  fiat_p384_mulx_u64(&mut x2541, &mut x2542, x1565, (arg3[4]));
  let mut x2543: u64 = 0;
  let mut x2544: u64 = 0;
  fiat_p384_mulx_u64(&mut x2543, &mut x2544, x1565, (arg3[3]));
  let mut x2545: u64 = 0;
  let mut x2546: u64 = 0;
  fiat_p384_mulx_u64(&mut x2545, &mut x2546, x1565, (arg3[2]));
  let mut x2547: u64 = 0;
  let mut x2548: u64 = 0;
  fiat_p384_mulx_u64(&mut x2547, &mut x2548, x1565, (arg3[1]));
  let mut x2549: u64 = 0;
  let mut x2550: u64 = 0;
  fiat_p384_mulx_u64(&mut x2549, &mut x2550, x1565, (arg3[0]));
  let mut x2551: u64 = 0;
  let mut x2552: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2551, &mut x2552, 0x0, x2550, x2547);
  let mut x2553: u64 = 0;
  let mut x2554: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2553, &mut x2554, x2552, x2548, x2545);
  let mut x2555: u64 = 0;
  let mut x2556: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2555, &mut x2556, x2554, x2546, x2543);
  let mut x2557: u64 = 0;
  let mut x2558: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2557, &mut x2558, x2556, x2544, x2541);
  let mut x2559: u64 = 0;
  let mut x2560: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2559, &mut x2560, x2558, x2542, x2539);
  let x2561: u64 = ((x2560 as u64) + x2540);
  let mut x2562: u64 = 0;
  let mut x2563: u64 = 0;
  fiat_p384_mulx_u64(&mut x2562, &mut x2563, x2549, 0x100000001);
  let mut x2564: u64 = 0;
  let mut x2565: u64 = 0;
  fiat_p384_mulx_u64(&mut x2564, &mut x2565, x2562, 0xffffffffffffffff);
  let mut x2566: u64 = 0;
  let mut x2567: u64 = 0;
  fiat_p384_mulx_u64(&mut x2566, &mut x2567, x2562, 0xffffffffffffffff);
  let mut x2568: u64 = 0;
  let mut x2569: u64 = 0;
  fiat_p384_mulx_u64(&mut x2568, &mut x2569, x2562, 0xffffffffffffffff);
  let mut x2570: u64 = 0;
  let mut x2571: u64 = 0;
  fiat_p384_mulx_u64(&mut x2570, &mut x2571, x2562, 0xfffffffffffffffe);
  let mut x2572: u64 = 0;
  let mut x2573: u64 = 0;
  fiat_p384_mulx_u64(&mut x2572, &mut x2573, x2562, 0xffffffff00000000);
  let mut x2574: u64 = 0;
  let mut x2575: u64 = 0;
  fiat_p384_mulx_u64(&mut x2574, &mut x2575, x2562, 0xffffffff);
  let mut x2576: u64 = 0;
  let mut x2577: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2576, &mut x2577, 0x0, x2575, x2572);
  let mut x2578: u64 = 0;
  let mut x2579: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2578, &mut x2579, x2577, x2573, x2570);
  let mut x2580: u64 = 0;
  let mut x2581: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2580, &mut x2581, x2579, x2571, x2568);
  let mut x2582: u64 = 0;
  let mut x2583: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2582, &mut x2583, x2581, x2569, x2566);
  let mut x2584: u64 = 0;
  let mut x2585: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2584, &mut x2585, x2583, x2567, x2564);
  let x2586: u64 = ((x2585 as u64) + x2565);
  let mut x2587: u64 = 0;
  let mut x2588: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2587, &mut x2588, 0x0, x2549, x2574);
  let mut x2589: u64 = 0;
  let mut x2590: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2589, &mut x2590, x2588, x2551, x2576);
  let mut x2591: u64 = 0;
  let mut x2592: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2591, &mut x2592, x2590, x2553, x2578);
  let mut x2593: u64 = 0;
  let mut x2594: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2593, &mut x2594, x2592, x2555, x2580);
  let mut x2595: u64 = 0;
  let mut x2596: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2595, &mut x2596, x2594, x2557, x2582);
  let mut x2597: u64 = 0;
  let mut x2598: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2597, &mut x2598, x2596, x2559, x2584);
  let mut x2599: u64 = 0;
  let mut x2600: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2599, &mut x2600, x2598, x2561, x2586);
  let mut x2601: u64 = 0;
  let mut x2602: u64 = 0;
  fiat_p384_mulx_u64(&mut x2601, &mut x2602, x1566, (arg3[5]));
  let mut x2603: u64 = 0;
  let mut x2604: u64 = 0;
  fiat_p384_mulx_u64(&mut x2603, &mut x2604, x1566, (arg3[4]));
  let mut x2605: u64 = 0;
  let mut x2606: u64 = 0;
  fiat_p384_mulx_u64(&mut x2605, &mut x2606, x1566, (arg3[3]));
  let mut x2607: u64 = 0;
  let mut x2608: u64 = 0;
  fiat_p384_mulx_u64(&mut x2607, &mut x2608, x1566, (arg3[2]));
  let mut x2609: u64 = 0;
  let mut x2610: u64 = 0;
  fiat_p384_mulx_u64(&mut x2609, &mut x2610, x1566, (arg3[1]));
  let mut x2611: u64 = 0;
  let mut x2612: u64 = 0;
  fiat_p384_mulx_u64(&mut x2611, &mut x2612, x1566, (arg3[0]));
  let mut x2613: u64 = 0;
  let mut x2614: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2613, &mut x2614, 0x0, x2612, x2609);
  let mut x2615: u64 = 0;
  let mut x2616: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2615, &mut x2616, x2614, x2610, x2607);
  let mut x2617: u64 = 0;
  let mut x2618: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2617, &mut x2618, x2616, x2608, x2605);
  let mut x2619: u64 = 0;
  let mut x2620: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2619, &mut x2620, x2618, x2606, x2603);
  let mut x2621: u64 = 0;
  let mut x2622: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2621, &mut x2622, x2620, x2604, x2601);
  let x2623: u64 = ((x2622 as u64) + x2602);
  let mut x2624: u64 = 0;
  let mut x2625: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2624, &mut x2625, 0x0, x2589, x2611);
  let mut x2626: u64 = 0;
  let mut x2627: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2626, &mut x2627, x2625, x2591, x2613);
  let mut x2628: u64 = 0;
  let mut x2629: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2628, &mut x2629, x2627, x2593, x2615);
  let mut x2630: u64 = 0;
  let mut x2631: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2630, &mut x2631, x2629, x2595, x2617);
  let mut x2632: u64 = 0;
  let mut x2633: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2632, &mut x2633, x2631, x2597, x2619);
  let mut x2634: u64 = 0;
  let mut x2635: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2634, &mut x2635, x2633, x2599, x2621);
  let mut x2636: u64 = 0;
  let mut x2637: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2636, &mut x2637, x2635, (x2600 as u64), x2623);
  let mut x2638: u64 = 0;
  let mut x2639: u64 = 0;
  fiat_p384_mulx_u64(&mut x2638, &mut x2639, x2624, 0x100000001);
  let mut x2640: u64 = 0;
  let mut x2641: u64 = 0;
  fiat_p384_mulx_u64(&mut x2640, &mut x2641, x2638, 0xffffffffffffffff);
  let mut x2642: u64 = 0;
  let mut x2643: u64 = 0;
  fiat_p384_mulx_u64(&mut x2642, &mut x2643, x2638, 0xffffffffffffffff);
  let mut x2644: u64 = 0;
  let mut x2645: u64 = 0;
  fiat_p384_mulx_u64(&mut x2644, &mut x2645, x2638, 0xffffffffffffffff);
  let mut x2646: u64 = 0;
  let mut x2647: u64 = 0;
  fiat_p384_mulx_u64(&mut x2646, &mut x2647, x2638, 0xfffffffffffffffe);
  let mut x2648: u64 = 0;
  let mut x2649: u64 = 0;
  fiat_p384_mulx_u64(&mut x2648, &mut x2649, x2638, 0xffffffff00000000);
  let mut x2650: u64 = 0;
  let mut x2651: u64 = 0;
  fiat_p384_mulx_u64(&mut x2650, &mut x2651, x2638, 0xffffffff);
  let mut x2652: u64 = 0;
  let mut x2653: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2652, &mut x2653, 0x0, x2651, x2648);
  let mut x2654: u64 = 0;
  let mut x2655: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2654, &mut x2655, x2653, x2649, x2646);
  let mut x2656: u64 = 0;
  let mut x2657: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2656, &mut x2657, x2655, x2647, x2644);
  let mut x2658: u64 = 0;
  let mut x2659: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2658, &mut x2659, x2657, x2645, x2642);
  let mut x2660: u64 = 0;
  let mut x2661: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2660, &mut x2661, x2659, x2643, x2640);
  let x2662: u64 = ((x2661 as u64) + x2641);
  let mut x2663: u64 = 0;
  let mut x2664: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2663, &mut x2664, 0x0, x2624, x2650);
  let mut x2665: u64 = 0;
  let mut x2666: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2665, &mut x2666, x2664, x2626, x2652);
  let mut x2667: u64 = 0;
  let mut x2668: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2667, &mut x2668, x2666, x2628, x2654);
  let mut x2669: u64 = 0;
  let mut x2670: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2669, &mut x2670, x2668, x2630, x2656);
  let mut x2671: u64 = 0;
  let mut x2672: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2671, &mut x2672, x2670, x2632, x2658);
  let mut x2673: u64 = 0;
  let mut x2674: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2673, &mut x2674, x2672, x2634, x2660);
  let mut x2675: u64 = 0;
  let mut x2676: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2675, &mut x2676, x2674, x2636, x2662);
  let x2677: u64 = ((x2676 as u64) + (x2637 as u64));
  let mut x2678: u64 = 0;
  let mut x2679: u64 = 0;
  fiat_p384_mulx_u64(&mut x2678, &mut x2679, x1567, (arg3[5]));
  let mut x2680: u64 = 0;
  let mut x2681: u64 = 0;
  fiat_p384_mulx_u64(&mut x2680, &mut x2681, x1567, (arg3[4]));
  let mut x2682: u64 = 0;
  let mut x2683: u64 = 0;
  fiat_p384_mulx_u64(&mut x2682, &mut x2683, x1567, (arg3[3]));
  let mut x2684: u64 = 0;
  let mut x2685: u64 = 0;
  fiat_p384_mulx_u64(&mut x2684, &mut x2685, x1567, (arg3[2]));
  let mut x2686: u64 = 0;
  let mut x2687: u64 = 0;
  fiat_p384_mulx_u64(&mut x2686, &mut x2687, x1567, (arg3[1]));
  let mut x2688: u64 = 0;
  let mut x2689: u64 = 0;
  fiat_p384_mulx_u64(&mut x2688, &mut x2689, x1567, (arg3[0]));
  let mut x2690: u64 = 0;
  let mut x2691: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2690, &mut x2691, 0x0, x2689, x2686);
  let mut x2692: u64 = 0;
  let mut x2693: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2692, &mut x2693, x2691, x2687, x2684);
  let mut x2694: u64 = 0;
  let mut x2695: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2694, &mut x2695, x2693, x2685, x2682);
  let mut x2696: u64 = 0;
  let mut x2697: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2696, &mut x2697, x2695, x2683, x2680);
  let mut x2698: u64 = 0;
  let mut x2699: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2698, &mut x2699, x2697, x2681, x2678);
  let x2700: u64 = ((x2699 as u64) + x2679);
  let mut x2701: u64 = 0;
  let mut x2702: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2701, &mut x2702, 0x0, x2665, x2688);
  let mut x2703: u64 = 0;
  let mut x2704: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2703, &mut x2704, x2702, x2667, x2690);
  let mut x2705: u64 = 0;
  let mut x2706: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2705, &mut x2706, x2704, x2669, x2692);
  let mut x2707: u64 = 0;
  let mut x2708: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2707, &mut x2708, x2706, x2671, x2694);
  let mut x2709: u64 = 0;
  let mut x2710: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2709, &mut x2710, x2708, x2673, x2696);
  let mut x2711: u64 = 0;
  let mut x2712: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2711, &mut x2712, x2710, x2675, x2698);
  let mut x2713: u64 = 0;
  let mut x2714: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2713, &mut x2714, x2712, x2677, x2700);
  let mut x2715: u64 = 0;
  let mut x2716: u64 = 0;
  fiat_p384_mulx_u64(&mut x2715, &mut x2716, x2701, 0x100000001);
  let mut x2717: u64 = 0;
  let mut x2718: u64 = 0;
  fiat_p384_mulx_u64(&mut x2717, &mut x2718, x2715, 0xffffffffffffffff);
  let mut x2719: u64 = 0;
  let mut x2720: u64 = 0;
  fiat_p384_mulx_u64(&mut x2719, &mut x2720, x2715, 0xffffffffffffffff);
  let mut x2721: u64 = 0;
  let mut x2722: u64 = 0;
  fiat_p384_mulx_u64(&mut x2721, &mut x2722, x2715, 0xffffffffffffffff);
  let mut x2723: u64 = 0;
  let mut x2724: u64 = 0;
  fiat_p384_mulx_u64(&mut x2723, &mut x2724, x2715, 0xfffffffffffffffe);
  let mut x2725: u64 = 0;
  let mut x2726: u64 = 0;
  fiat_p384_mulx_u64(&mut x2725, &mut x2726, x2715, 0xffffffff00000000);
  let mut x2727: u64 = 0;
  let mut x2728: u64 = 0;
  fiat_p384_mulx_u64(&mut x2727, &mut x2728, x2715, 0xffffffff);
  let mut x2729: u64 = 0;
  let mut x2730: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2729, &mut x2730, 0x0, x2728, x2725);
  let mut x2731: u64 = 0;
  let mut x2732: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2731, &mut x2732, x2730, x2726, x2723);
  let mut x2733: u64 = 0;
  let mut x2734: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2733, &mut x2734, x2732, x2724, x2721);
  let mut x2735: u64 = 0;
  let mut x2736: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2735, &mut x2736, x2734, x2722, x2719);
  let mut x2737: u64 = 0;
  let mut x2738: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2737, &mut x2738, x2736, x2720, x2717);
  let x2739: u64 = ((x2738 as u64) + x2718);
  let mut x2740: u64 = 0;
  let mut x2741: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2740, &mut x2741, 0x0, x2701, x2727);
  let mut x2742: u64 = 0;
  let mut x2743: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2742, &mut x2743, x2741, x2703, x2729);
  let mut x2744: u64 = 0;
  let mut x2745: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2744, &mut x2745, x2743, x2705, x2731);
  let mut x2746: u64 = 0;
  let mut x2747: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2746, &mut x2747, x2745, x2707, x2733);
  let mut x2748: u64 = 0;
  let mut x2749: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2748, &mut x2749, x2747, x2709, x2735);
  let mut x2750: u64 = 0;
  let mut x2751: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2750, &mut x2751, x2749, x2711, x2737);
  let mut x2752: u64 = 0;
  let mut x2753: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2752, &mut x2753, x2751, x2713, x2739);
  let x2754: u64 = ((x2753 as u64) + (x2714 as u64));
  let mut x2755: u64 = 0;
  let mut x2756: u64 = 0;
  fiat_p384_mulx_u64(&mut x2755, &mut x2756, x1568, (arg3[5]));
  let mut x2757: u64 = 0;
  let mut x2758: u64 = 0;
  fiat_p384_mulx_u64(&mut x2757, &mut x2758, x1568, (arg3[4]));
  let mut x2759: u64 = 0;
  let mut x2760: u64 = 0;
  fiat_p384_mulx_u64(&mut x2759, &mut x2760, x1568, (arg3[3]));
  let mut x2761: u64 = 0;
  let mut x2762: u64 = 0;
  fiat_p384_mulx_u64(&mut x2761, &mut x2762, x1568, (arg3[2]));
  let mut x2763: u64 = 0;
  let mut x2764: u64 = 0;
  fiat_p384_mulx_u64(&mut x2763, &mut x2764, x1568, (arg3[1]));
  let mut x2765: u64 = 0;
  let mut x2766: u64 = 0;
  fiat_p384_mulx_u64(&mut x2765, &mut x2766, x1568, (arg3[0]));
  let mut x2767: u64 = 0;
  let mut x2768: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2767, &mut x2768, 0x0, x2766, x2763);
  let mut x2769: u64 = 0;
  let mut x2770: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2769, &mut x2770, x2768, x2764, x2761);
  let mut x2771: u64 = 0;
  let mut x2772: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2771, &mut x2772, x2770, x2762, x2759);
  let mut x2773: u64 = 0;
  let mut x2774: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2773, &mut x2774, x2772, x2760, x2757);
  let mut x2775: u64 = 0;
  let mut x2776: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2775, &mut x2776, x2774, x2758, x2755);
  let x2777: u64 = ((x2776 as u64) + x2756);
  let mut x2778: u64 = 0;
  let mut x2779: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2778, &mut x2779, 0x0, x2742, x2765);
  let mut x2780: u64 = 0;
  let mut x2781: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2780, &mut x2781, x2779, x2744, x2767);
  let mut x2782: u64 = 0;
  let mut x2783: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2782, &mut x2783, x2781, x2746, x2769);
  let mut x2784: u64 = 0;
  let mut x2785: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2784, &mut x2785, x2783, x2748, x2771);
  let mut x2786: u64 = 0;
  let mut x2787: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2786, &mut x2787, x2785, x2750, x2773);
  let mut x2788: u64 = 0;
  let mut x2789: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2788, &mut x2789, x2787, x2752, x2775);
  let mut x2790: u64 = 0;
  let mut x2791: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2790, &mut x2791, x2789, x2754, x2777);
  let mut x2792: u64 = 0;
  let mut x2793: u64 = 0;
  fiat_p384_mulx_u64(&mut x2792, &mut x2793, x2778, 0x100000001);
  let mut x2794: u64 = 0;
  let mut x2795: u64 = 0;
  fiat_p384_mulx_u64(&mut x2794, &mut x2795, x2792, 0xffffffffffffffff);
  let mut x2796: u64 = 0;
  let mut x2797: u64 = 0;
  fiat_p384_mulx_u64(&mut x2796, &mut x2797, x2792, 0xffffffffffffffff);
  let mut x2798: u64 = 0;
  let mut x2799: u64 = 0;
  fiat_p384_mulx_u64(&mut x2798, &mut x2799, x2792, 0xffffffffffffffff);
  let mut x2800: u64 = 0;
  let mut x2801: u64 = 0;
  fiat_p384_mulx_u64(&mut x2800, &mut x2801, x2792, 0xfffffffffffffffe);
  let mut x2802: u64 = 0;
  let mut x2803: u64 = 0;
  fiat_p384_mulx_u64(&mut x2802, &mut x2803, x2792, 0xffffffff00000000);
  let mut x2804: u64 = 0;
  let mut x2805: u64 = 0;
  fiat_p384_mulx_u64(&mut x2804, &mut x2805, x2792, 0xffffffff);
  let mut x2806: u64 = 0;
  let mut x2807: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2806, &mut x2807, 0x0, x2805, x2802);
  let mut x2808: u64 = 0;
  let mut x2809: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2808, &mut x2809, x2807, x2803, x2800);
  let mut x2810: u64 = 0;
  let mut x2811: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2810, &mut x2811, x2809, x2801, x2798);
  let mut x2812: u64 = 0;
  let mut x2813: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2812, &mut x2813, x2811, x2799, x2796);
  let mut x2814: u64 = 0;
  let mut x2815: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2814, &mut x2815, x2813, x2797, x2794);
  let x2816: u64 = ((x2815 as u64) + x2795);
  let mut x2817: u64 = 0;
  let mut x2818: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2817, &mut x2818, 0x0, x2778, x2804);
  let mut x2819: u64 = 0;
  let mut x2820: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2819, &mut x2820, x2818, x2780, x2806);
  let mut x2821: u64 = 0;
  let mut x2822: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2821, &mut x2822, x2820, x2782, x2808);
  let mut x2823: u64 = 0;
  let mut x2824: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2823, &mut x2824, x2822, x2784, x2810);
  let mut x2825: u64 = 0;
  let mut x2826: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2825, &mut x2826, x2824, x2786, x2812);
  let mut x2827: u64 = 0;
  let mut x2828: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2827, &mut x2828, x2826, x2788, x2814);
  let mut x2829: u64 = 0;
  let mut x2830: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2829, &mut x2830, x2828, x2790, x2816);
  let x2831: u64 = ((x2830 as u64) + (x2791 as u64));
  let mut x2832: u64 = 0;
  let mut x2833: u64 = 0;
  fiat_p384_mulx_u64(&mut x2832, &mut x2833, x1569, (arg3[5]));
  let mut x2834: u64 = 0;
  let mut x2835: u64 = 0;
  fiat_p384_mulx_u64(&mut x2834, &mut x2835, x1569, (arg3[4]));
  let mut x2836: u64 = 0;
  let mut x2837: u64 = 0;
  fiat_p384_mulx_u64(&mut x2836, &mut x2837, x1569, (arg3[3]));
  let mut x2838: u64 = 0;
  let mut x2839: u64 = 0;
  fiat_p384_mulx_u64(&mut x2838, &mut x2839, x1569, (arg3[2]));
  let mut x2840: u64 = 0;
  let mut x2841: u64 = 0;
  fiat_p384_mulx_u64(&mut x2840, &mut x2841, x1569, (arg3[1]));
  let mut x2842: u64 = 0;
  let mut x2843: u64 = 0;
  fiat_p384_mulx_u64(&mut x2842, &mut x2843, x1569, (arg3[0]));
  let mut x2844: u64 = 0;
  let mut x2845: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2844, &mut x2845, 0x0, x2843, x2840);
  let mut x2846: u64 = 0;
  let mut x2847: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2846, &mut x2847, x2845, x2841, x2838);
  let mut x2848: u64 = 0;
  let mut x2849: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2848, &mut x2849, x2847, x2839, x2836);
  let mut x2850: u64 = 0;
  let mut x2851: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2850, &mut x2851, x2849, x2837, x2834);
  let mut x2852: u64 = 0;
  let mut x2853: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2852, &mut x2853, x2851, x2835, x2832);
  let x2854: u64 = ((x2853 as u64) + x2833);
  let mut x2855: u64 = 0;
  let mut x2856: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2855, &mut x2856, 0x0, x2819, x2842);
  let mut x2857: u64 = 0;
  let mut x2858: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2857, &mut x2858, x2856, x2821, x2844);
  let mut x2859: u64 = 0;
  let mut x2860: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2859, &mut x2860, x2858, x2823, x2846);
  let mut x2861: u64 = 0;
  let mut x2862: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2861, &mut x2862, x2860, x2825, x2848);
  let mut x2863: u64 = 0;
  let mut x2864: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2863, &mut x2864, x2862, x2827, x2850);
  let mut x2865: u64 = 0;
  let mut x2866: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2865, &mut x2866, x2864, x2829, x2852);
  let mut x2867: u64 = 0;
  let mut x2868: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2867, &mut x2868, x2866, x2831, x2854);
  let mut x2869: u64 = 0;
  let mut x2870: u64 = 0;
  fiat_p384_mulx_u64(&mut x2869, &mut x2870, x2855, 0x100000001);
  let mut x2871: u64 = 0;
  let mut x2872: u64 = 0;
  fiat_p384_mulx_u64(&mut x2871, &mut x2872, x2869, 0xffffffffffffffff);
  let mut x2873: u64 = 0;
  let mut x2874: u64 = 0;
  fiat_p384_mulx_u64(&mut x2873, &mut x2874, x2869, 0xffffffffffffffff);
  let mut x2875: u64 = 0;
  let mut x2876: u64 = 0;
  fiat_p384_mulx_u64(&mut x2875, &mut x2876, x2869, 0xffffffffffffffff);
  let mut x2877: u64 = 0;
  let mut x2878: u64 = 0;
  fiat_p384_mulx_u64(&mut x2877, &mut x2878, x2869, 0xfffffffffffffffe);
  let mut x2879: u64 = 0;
  let mut x2880: u64 = 0;
  fiat_p384_mulx_u64(&mut x2879, &mut x2880, x2869, 0xffffffff00000000);
  let mut x2881: u64 = 0;
  let mut x2882: u64 = 0;
  fiat_p384_mulx_u64(&mut x2881, &mut x2882, x2869, 0xffffffff);
  let mut x2883: u64 = 0;
  let mut x2884: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2883, &mut x2884, 0x0, x2882, x2879);
  let mut x2885: u64 = 0;
  let mut x2886: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2885, &mut x2886, x2884, x2880, x2877);
  let mut x2887: u64 = 0;
  let mut x2888: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2887, &mut x2888, x2886, x2878, x2875);
  let mut x2889: u64 = 0;
  let mut x2890: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2889, &mut x2890, x2888, x2876, x2873);
  let mut x2891: u64 = 0;
  let mut x2892: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2891, &mut x2892, x2890, x2874, x2871);
  let x2893: u64 = ((x2892 as u64) + x2872);
  let mut x2894: u64 = 0;
  let mut x2895: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2894, &mut x2895, 0x0, x2855, x2881);
  let mut x2896: u64 = 0;
  let mut x2897: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2896, &mut x2897, x2895, x2857, x2883);
  let mut x2898: u64 = 0;
  let mut x2899: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2898, &mut x2899, x2897, x2859, x2885);
  let mut x2900: u64 = 0;
  let mut x2901: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2900, &mut x2901, x2899, x2861, x2887);
  let mut x2902: u64 = 0;
  let mut x2903: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2902, &mut x2903, x2901, x2863, x2889);
  let mut x2904: u64 = 0;
  let mut x2905: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2904, &mut x2905, x2903, x2865, x2891);
  let mut x2906: u64 = 0;
  let mut x2907: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2906, &mut x2907, x2905, x2867, x2893);
  let x2908: u64 = ((x2907 as u64) + (x2868 as u64));
  let mut x2909: u64 = 0;
  let mut x2910: u64 = 0;
  fiat_p384_mulx_u64(&mut x2909, &mut x2910, x1570, (arg3[5]));
  let mut x2911: u64 = 0;
  let mut x2912: u64 = 0;
  fiat_p384_mulx_u64(&mut x2911, &mut x2912, x1570, (arg3[4]));
  let mut x2913: u64 = 0;
  let mut x2914: u64 = 0;
  fiat_p384_mulx_u64(&mut x2913, &mut x2914, x1570, (arg3[3]));
  let mut x2915: u64 = 0;
  let mut x2916: u64 = 0;
  fiat_p384_mulx_u64(&mut x2915, &mut x2916, x1570, (arg3[2]));
  let mut x2917: u64 = 0;
  let mut x2918: u64 = 0;
  fiat_p384_mulx_u64(&mut x2917, &mut x2918, x1570, (arg3[1]));
  let mut x2919: u64 = 0;
  let mut x2920: u64 = 0;
  fiat_p384_mulx_u64(&mut x2919, &mut x2920, x1570, (arg3[0]));
  let mut x2921: u64 = 0;
  let mut x2922: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2921, &mut x2922, 0x0, x2920, x2917);
  let mut x2923: u64 = 0;
  let mut x2924: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2923, &mut x2924, x2922, x2918, x2915);
  let mut x2925: u64 = 0;
  let mut x2926: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2925, &mut x2926, x2924, x2916, x2913);
  let mut x2927: u64 = 0;
  let mut x2928: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2927, &mut x2928, x2926, x2914, x2911);
  let mut x2929: u64 = 0;
  let mut x2930: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2929, &mut x2930, x2928, x2912, x2909);
  let x2931: u64 = ((x2930 as u64) + x2910);
  let mut x2932: u64 = 0;
  let mut x2933: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2932, &mut x2933, 0x0, x2896, x2919);
  let mut x2934: u64 = 0;
  let mut x2935: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2934, &mut x2935, x2933, x2898, x2921);
  let mut x2936: u64 = 0;
  let mut x2937: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2936, &mut x2937, x2935, x2900, x2923);
  let mut x2938: u64 = 0;
  let mut x2939: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2938, &mut x2939, x2937, x2902, x2925);
  let mut x2940: u64 = 0;
  let mut x2941: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2940, &mut x2941, x2939, x2904, x2927);
  let mut x2942: u64 = 0;
  let mut x2943: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2942, &mut x2943, x2941, x2906, x2929);
  let mut x2944: u64 = 0;
  let mut x2945: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2944, &mut x2945, x2943, x2908, x2931);
  let mut x2946: u64 = 0;
  let mut x2947: u64 = 0;
  fiat_p384_mulx_u64(&mut x2946, &mut x2947, x2932, 0x100000001);
  let mut x2948: u64 = 0;
  let mut x2949: u64 = 0;
  fiat_p384_mulx_u64(&mut x2948, &mut x2949, x2946, 0xffffffffffffffff);
  let mut x2950: u64 = 0;
  let mut x2951: u64 = 0;
  fiat_p384_mulx_u64(&mut x2950, &mut x2951, x2946, 0xffffffffffffffff);
  let mut x2952: u64 = 0;
  let mut x2953: u64 = 0;
  fiat_p384_mulx_u64(&mut x2952, &mut x2953, x2946, 0xffffffffffffffff);
  let mut x2954: u64 = 0;
  let mut x2955: u64 = 0;
  fiat_p384_mulx_u64(&mut x2954, &mut x2955, x2946, 0xfffffffffffffffe);
  let mut x2956: u64 = 0;
  let mut x2957: u64 = 0;
  fiat_p384_mulx_u64(&mut x2956, &mut x2957, x2946, 0xffffffff00000000);
  let mut x2958: u64 = 0;
  let mut x2959: u64 = 0;
  fiat_p384_mulx_u64(&mut x2958, &mut x2959, x2946, 0xffffffff);
  let mut x2960: u64 = 0;
  let mut x2961: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2960, &mut x2961, 0x0, x2959, x2956);
  let mut x2962: u64 = 0;
  let mut x2963: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2962, &mut x2963, x2961, x2957, x2954);
  let mut x2964: u64 = 0;
  let mut x2965: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2964, &mut x2965, x2963, x2955, x2952);
  let mut x2966: u64 = 0;
  let mut x2967: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2966, &mut x2967, x2965, x2953, x2950);
  let mut x2968: u64 = 0;
  let mut x2969: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2968, &mut x2969, x2967, x2951, x2948);
  let x2970: u64 = ((x2969 as u64) + x2949);
  let mut x2971: u64 = 0;
  let mut x2972: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2971, &mut x2972, 0x0, x2932, x2958);
  let mut x2973: u64 = 0;
  let mut x2974: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2973, &mut x2974, x2972, x2934, x2960);
  let mut x2975: u64 = 0;
  let mut x2976: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2975, &mut x2976, x2974, x2936, x2962);
  let mut x2977: u64 = 0;
  let mut x2978: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2977, &mut x2978, x2976, x2938, x2964);
  let mut x2979: u64 = 0;
  let mut x2980: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2979, &mut x2980, x2978, x2940, x2966);
  let mut x2981: u64 = 0;
  let mut x2982: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2981, &mut x2982, x2980, x2942, x2968);
  let mut x2983: u64 = 0;
  let mut x2984: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x2983, &mut x2984, x2982, x2944, x2970);
  let x2985: u64 = ((x2984 as u64) + (x2945 as u64));
  let mut x2986: u64 = 0;
  let mut x2987: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2986, &mut x2987, 0x0, x2973, 0xffffffff);
  let mut x2988: u64 = 0;
  let mut x2989: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2988, &mut x2989, x2987, x2975, 0xffffffff00000000);
  let mut x2990: u64 = 0;
  let mut x2991: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2990, &mut x2991, x2989, x2977, 0xfffffffffffffffe);
  let mut x2992: u64 = 0;
  let mut x2993: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2992, &mut x2993, x2991, x2979, 0xffffffffffffffff);
  let mut x2994: u64 = 0;
  let mut x2995: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2994, &mut x2995, x2993, x2981, 0xffffffffffffffff);
  let mut x2996: u64 = 0;
  let mut x2997: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2996, &mut x2997, x2995, x2983, 0xffffffffffffffff);
  let mut x2998: u64 = 0;
  let mut x2999: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x2998, &mut x2999, x2997, x2985, (0x0 as u64));
  let mut x3000: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3000, x2999, x2986, x2973);
  let mut x3001: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3001, x2999, x2988, x2975);
  let mut x3002: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3002, x2999, x2990, x2977);
  let mut x3003: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3003, x2999, x2992, x2979);
  let mut x3004: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3004, x2999, x2994, x2981);
  let mut x3005: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3005, x2999, x2996, x2983);
  let mut x3006: u64 = 0;
  let mut x3007: u64 = 0;
  fiat_p384_mulx_u64(&mut x3006, &mut x3007, x1599, (arg4[5]));
  let mut x3008: u64 = 0;
  let mut x3009: u64 = 0;
  fiat_p384_mulx_u64(&mut x3008, &mut x3009, x1599, (arg4[4]));
  let mut x3010: u64 = 0;
  let mut x3011: u64 = 0;
  fiat_p384_mulx_u64(&mut x3010, &mut x3011, x1599, (arg4[3]));
  let mut x3012: u64 = 0;
  let mut x3013: u64 = 0;
  fiat_p384_mulx_u64(&mut x3012, &mut x3013, x1599, (arg4[2]));
  let mut x3014: u64 = 0;
  let mut x3015: u64 = 0;
  fiat_p384_mulx_u64(&mut x3014, &mut x3015, x1599, (arg4[1]));
  let mut x3016: u64 = 0;
  let mut x3017: u64 = 0;
  fiat_p384_mulx_u64(&mut x3016, &mut x3017, x1599, (arg4[0]));
  let mut x3018: u64 = 0;
  let mut x3019: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3018, &mut x3019, 0x0, x3017, x3014);
  let mut x3020: u64 = 0;
  let mut x3021: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3020, &mut x3021, x3019, x3015, x3012);
  let mut x3022: u64 = 0;
  let mut x3023: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3022, &mut x3023, x3021, x3013, x3010);
  let mut x3024: u64 = 0;
  let mut x3025: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3024, &mut x3025, x3023, x3011, x3008);
  let mut x3026: u64 = 0;
  let mut x3027: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3026, &mut x3027, x3025, x3009, x3006);
  let x3028: u64 = ((x3027 as u64) + x3007);
  let mut x3029: u64 = 0;
  let mut x3030: u64 = 0;
  fiat_p384_mulx_u64(&mut x3029, &mut x3030, x3016, 0x100000001);
  let mut x3031: u64 = 0;
  let mut x3032: u64 = 0;
  fiat_p384_mulx_u64(&mut x3031, &mut x3032, x3029, 0xffffffffffffffff);
  let mut x3033: u64 = 0;
  let mut x3034: u64 = 0;
  fiat_p384_mulx_u64(&mut x3033, &mut x3034, x3029, 0xffffffffffffffff);
  let mut x3035: u64 = 0;
  let mut x3036: u64 = 0;
  fiat_p384_mulx_u64(&mut x3035, &mut x3036, x3029, 0xffffffffffffffff);
  let mut x3037: u64 = 0;
  let mut x3038: u64 = 0;
  fiat_p384_mulx_u64(&mut x3037, &mut x3038, x3029, 0xfffffffffffffffe);
  let mut x3039: u64 = 0;
  let mut x3040: u64 = 0;
  fiat_p384_mulx_u64(&mut x3039, &mut x3040, x3029, 0xffffffff00000000);
  let mut x3041: u64 = 0;
  let mut x3042: u64 = 0;
  fiat_p384_mulx_u64(&mut x3041, &mut x3042, x3029, 0xffffffff);
  let mut x3043: u64 = 0;
  let mut x3044: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3043, &mut x3044, 0x0, x3042, x3039);
  let mut x3045: u64 = 0;
  let mut x3046: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3045, &mut x3046, x3044, x3040, x3037);
  let mut x3047: u64 = 0;
  let mut x3048: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3047, &mut x3048, x3046, x3038, x3035);
  let mut x3049: u64 = 0;
  let mut x3050: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3049, &mut x3050, x3048, x3036, x3033);
  let mut x3051: u64 = 0;
  let mut x3052: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3051, &mut x3052, x3050, x3034, x3031);
  let x3053: u64 = ((x3052 as u64) + x3032);
  let mut x3054: u64 = 0;
  let mut x3055: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3054, &mut x3055, 0x0, x3016, x3041);
  let mut x3056: u64 = 0;
  let mut x3057: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3056, &mut x3057, x3055, x3018, x3043);
  let mut x3058: u64 = 0;
  let mut x3059: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3058, &mut x3059, x3057, x3020, x3045);
  let mut x3060: u64 = 0;
  let mut x3061: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3060, &mut x3061, x3059, x3022, x3047);
  let mut x3062: u64 = 0;
  let mut x3063: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3062, &mut x3063, x3061, x3024, x3049);
  let mut x3064: u64 = 0;
  let mut x3065: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3064, &mut x3065, x3063, x3026, x3051);
  let mut x3066: u64 = 0;
  let mut x3067: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3066, &mut x3067, x3065, x3028, x3053);
  let mut x3068: u64 = 0;
  let mut x3069: u64 = 0;
  fiat_p384_mulx_u64(&mut x3068, &mut x3069, x1600, (arg4[5]));
  let mut x3070: u64 = 0;
  let mut x3071: u64 = 0;
  fiat_p384_mulx_u64(&mut x3070, &mut x3071, x1600, (arg4[4]));
  let mut x3072: u64 = 0;
  let mut x3073: u64 = 0;
  fiat_p384_mulx_u64(&mut x3072, &mut x3073, x1600, (arg4[3]));
  let mut x3074: u64 = 0;
  let mut x3075: u64 = 0;
  fiat_p384_mulx_u64(&mut x3074, &mut x3075, x1600, (arg4[2]));
  let mut x3076: u64 = 0;
  let mut x3077: u64 = 0;
  fiat_p384_mulx_u64(&mut x3076, &mut x3077, x1600, (arg4[1]));
  let mut x3078: u64 = 0;
  let mut x3079: u64 = 0;
  fiat_p384_mulx_u64(&mut x3078, &mut x3079, x1600, (arg4[0]));
  let mut x3080: u64 = 0;
  let mut x3081: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3080, &mut x3081, 0x0, x3079, x3076);
  let mut x3082: u64 = 0;
  let mut x3083: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3082, &mut x3083, x3081, x3077, x3074);
  let mut x3084: u64 = 0;
  let mut x3085: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3084, &mut x3085, x3083, x3075, x3072);
  let mut x3086: u64 = 0;
  let mut x3087: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3086, &mut x3087, x3085, x3073, x3070);
  let mut x3088: u64 = 0;
  let mut x3089: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3088, &mut x3089, x3087, x3071, x3068);
  let x3090: u64 = ((x3089 as u64) + x3069);
  let mut x3091: u64 = 0;
  let mut x3092: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3091, &mut x3092, 0x0, x3056, x3078);
  let mut x3093: u64 = 0;
  let mut x3094: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3093, &mut x3094, x3092, x3058, x3080);
  let mut x3095: u64 = 0;
  let mut x3096: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3095, &mut x3096, x3094, x3060, x3082);
  let mut x3097: u64 = 0;
  let mut x3098: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3097, &mut x3098, x3096, x3062, x3084);
  let mut x3099: u64 = 0;
  let mut x3100: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3099, &mut x3100, x3098, x3064, x3086);
  let mut x3101: u64 = 0;
  let mut x3102: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3101, &mut x3102, x3100, x3066, x3088);
  let mut x3103: u64 = 0;
  let mut x3104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3103, &mut x3104, x3102, (x3067 as u64), x3090);
  let mut x3105: u64 = 0;
  let mut x3106: u64 = 0;
  fiat_p384_mulx_u64(&mut x3105, &mut x3106, x3091, 0x100000001);
  let mut x3107: u64 = 0;
  let mut x3108: u64 = 0;
  fiat_p384_mulx_u64(&mut x3107, &mut x3108, x3105, 0xffffffffffffffff);
  let mut x3109: u64 = 0;
  let mut x3110: u64 = 0;
  fiat_p384_mulx_u64(&mut x3109, &mut x3110, x3105, 0xffffffffffffffff);
  let mut x3111: u64 = 0;
  let mut x3112: u64 = 0;
  fiat_p384_mulx_u64(&mut x3111, &mut x3112, x3105, 0xffffffffffffffff);
  let mut x3113: u64 = 0;
  let mut x3114: u64 = 0;
  fiat_p384_mulx_u64(&mut x3113, &mut x3114, x3105, 0xfffffffffffffffe);
  let mut x3115: u64 = 0;
  let mut x3116: u64 = 0;
  fiat_p384_mulx_u64(&mut x3115, &mut x3116, x3105, 0xffffffff00000000);
  let mut x3117: u64 = 0;
  let mut x3118: u64 = 0;
  fiat_p384_mulx_u64(&mut x3117, &mut x3118, x3105, 0xffffffff);
  let mut x3119: u64 = 0;
  let mut x3120: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3119, &mut x3120, 0x0, x3118, x3115);
  let mut x3121: u64 = 0;
  let mut x3122: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3121, &mut x3122, x3120, x3116, x3113);
  let mut x3123: u64 = 0;
  let mut x3124: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3123, &mut x3124, x3122, x3114, x3111);
  let mut x3125: u64 = 0;
  let mut x3126: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3125, &mut x3126, x3124, x3112, x3109);
  let mut x3127: u64 = 0;
  let mut x3128: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3127, &mut x3128, x3126, x3110, x3107);
  let x3129: u64 = ((x3128 as u64) + x3108);
  let mut x3130: u64 = 0;
  let mut x3131: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3130, &mut x3131, 0x0, x3091, x3117);
  let mut x3132: u64 = 0;
  let mut x3133: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3132, &mut x3133, x3131, x3093, x3119);
  let mut x3134: u64 = 0;
  let mut x3135: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3134, &mut x3135, x3133, x3095, x3121);
  let mut x3136: u64 = 0;
  let mut x3137: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3136, &mut x3137, x3135, x3097, x3123);
  let mut x3138: u64 = 0;
  let mut x3139: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3138, &mut x3139, x3137, x3099, x3125);
  let mut x3140: u64 = 0;
  let mut x3141: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3140, &mut x3141, x3139, x3101, x3127);
  let mut x3142: u64 = 0;
  let mut x3143: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3142, &mut x3143, x3141, x3103, x3129);
  let x3144: u64 = ((x3143 as u64) + (x3104 as u64));
  let mut x3145: u64 = 0;
  let mut x3146: u64 = 0;
  fiat_p384_mulx_u64(&mut x3145, &mut x3146, x1601, (arg4[5]));
  let mut x3147: u64 = 0;
  let mut x3148: u64 = 0;
  fiat_p384_mulx_u64(&mut x3147, &mut x3148, x1601, (arg4[4]));
  let mut x3149: u64 = 0;
  let mut x3150: u64 = 0;
  fiat_p384_mulx_u64(&mut x3149, &mut x3150, x1601, (arg4[3]));
  let mut x3151: u64 = 0;
  let mut x3152: u64 = 0;
  fiat_p384_mulx_u64(&mut x3151, &mut x3152, x1601, (arg4[2]));
  let mut x3153: u64 = 0;
  let mut x3154: u64 = 0;
  fiat_p384_mulx_u64(&mut x3153, &mut x3154, x1601, (arg4[1]));
  let mut x3155: u64 = 0;
  let mut x3156: u64 = 0;
  fiat_p384_mulx_u64(&mut x3155, &mut x3156, x1601, (arg4[0]));
  let mut x3157: u64 = 0;
  let mut x3158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3157, &mut x3158, 0x0, x3156, x3153);
  let mut x3159: u64 = 0;
  let mut x3160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3159, &mut x3160, x3158, x3154, x3151);
  let mut x3161: u64 = 0;
  let mut x3162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3161, &mut x3162, x3160, x3152, x3149);
  let mut x3163: u64 = 0;
  let mut x3164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3163, &mut x3164, x3162, x3150, x3147);
  let mut x3165: u64 = 0;
  let mut x3166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3165, &mut x3166, x3164, x3148, x3145);
  let x3167: u64 = ((x3166 as u64) + x3146);
  let mut x3168: u64 = 0;
  let mut x3169: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3168, &mut x3169, 0x0, x3132, x3155);
  let mut x3170: u64 = 0;
  let mut x3171: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3170, &mut x3171, x3169, x3134, x3157);
  let mut x3172: u64 = 0;
  let mut x3173: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3172, &mut x3173, x3171, x3136, x3159);
  let mut x3174: u64 = 0;
  let mut x3175: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3174, &mut x3175, x3173, x3138, x3161);
  let mut x3176: u64 = 0;
  let mut x3177: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3176, &mut x3177, x3175, x3140, x3163);
  let mut x3178: u64 = 0;
  let mut x3179: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3178, &mut x3179, x3177, x3142, x3165);
  let mut x3180: u64 = 0;
  let mut x3181: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3180, &mut x3181, x3179, x3144, x3167);
  let mut x3182: u64 = 0;
  let mut x3183: u64 = 0;
  fiat_p384_mulx_u64(&mut x3182, &mut x3183, x3168, 0x100000001);
  let mut x3184: u64 = 0;
  let mut x3185: u64 = 0;
  fiat_p384_mulx_u64(&mut x3184, &mut x3185, x3182, 0xffffffffffffffff);
  let mut x3186: u64 = 0;
  let mut x3187: u64 = 0;
  fiat_p384_mulx_u64(&mut x3186, &mut x3187, x3182, 0xffffffffffffffff);
  let mut x3188: u64 = 0;
  let mut x3189: u64 = 0;
  fiat_p384_mulx_u64(&mut x3188, &mut x3189, x3182, 0xffffffffffffffff);
  let mut x3190: u64 = 0;
  let mut x3191: u64 = 0;
  fiat_p384_mulx_u64(&mut x3190, &mut x3191, x3182, 0xfffffffffffffffe);
  let mut x3192: u64 = 0;
  let mut x3193: u64 = 0;
  fiat_p384_mulx_u64(&mut x3192, &mut x3193, x3182, 0xffffffff00000000);
  let mut x3194: u64 = 0;
  let mut x3195: u64 = 0;
  fiat_p384_mulx_u64(&mut x3194, &mut x3195, x3182, 0xffffffff);
  let mut x3196: u64 = 0;
  let mut x3197: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3196, &mut x3197, 0x0, x3195, x3192);
  let mut x3198: u64 = 0;
  let mut x3199: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3198, &mut x3199, x3197, x3193, x3190);
  let mut x3200: u64 = 0;
  let mut x3201: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3200, &mut x3201, x3199, x3191, x3188);
  let mut x3202: u64 = 0;
  let mut x3203: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3202, &mut x3203, x3201, x3189, x3186);
  let mut x3204: u64 = 0;
  let mut x3205: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3204, &mut x3205, x3203, x3187, x3184);
  let x3206: u64 = ((x3205 as u64) + x3185);
  let mut x3207: u64 = 0;
  let mut x3208: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3207, &mut x3208, 0x0, x3168, x3194);
  let mut x3209: u64 = 0;
  let mut x3210: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3209, &mut x3210, x3208, x3170, x3196);
  let mut x3211: u64 = 0;
  let mut x3212: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3211, &mut x3212, x3210, x3172, x3198);
  let mut x3213: u64 = 0;
  let mut x3214: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3213, &mut x3214, x3212, x3174, x3200);
  let mut x3215: u64 = 0;
  let mut x3216: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3215, &mut x3216, x3214, x3176, x3202);
  let mut x3217: u64 = 0;
  let mut x3218: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3217, &mut x3218, x3216, x3178, x3204);
  let mut x3219: u64 = 0;
  let mut x3220: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3219, &mut x3220, x3218, x3180, x3206);
  let x3221: u64 = ((x3220 as u64) + (x3181 as u64));
  let mut x3222: u64 = 0;
  let mut x3223: u64 = 0;
  fiat_p384_mulx_u64(&mut x3222, &mut x3223, x1602, (arg4[5]));
  let mut x3224: u64 = 0;
  let mut x3225: u64 = 0;
  fiat_p384_mulx_u64(&mut x3224, &mut x3225, x1602, (arg4[4]));
  let mut x3226: u64 = 0;
  let mut x3227: u64 = 0;
  fiat_p384_mulx_u64(&mut x3226, &mut x3227, x1602, (arg4[3]));
  let mut x3228: u64 = 0;
  let mut x3229: u64 = 0;
  fiat_p384_mulx_u64(&mut x3228, &mut x3229, x1602, (arg4[2]));
  let mut x3230: u64 = 0;
  let mut x3231: u64 = 0;
  fiat_p384_mulx_u64(&mut x3230, &mut x3231, x1602, (arg4[1]));
  let mut x3232: u64 = 0;
  let mut x3233: u64 = 0;
  fiat_p384_mulx_u64(&mut x3232, &mut x3233, x1602, (arg4[0]));
  let mut x3234: u64 = 0;
  let mut x3235: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3234, &mut x3235, 0x0, x3233, x3230);
  let mut x3236: u64 = 0;
  let mut x3237: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3236, &mut x3237, x3235, x3231, x3228);
  let mut x3238: u64 = 0;
  let mut x3239: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3238, &mut x3239, x3237, x3229, x3226);
  let mut x3240: u64 = 0;
  let mut x3241: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3240, &mut x3241, x3239, x3227, x3224);
  let mut x3242: u64 = 0;
  let mut x3243: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3242, &mut x3243, x3241, x3225, x3222);
  let x3244: u64 = ((x3243 as u64) + x3223);
  let mut x3245: u64 = 0;
  let mut x3246: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3245, &mut x3246, 0x0, x3209, x3232);
  let mut x3247: u64 = 0;
  let mut x3248: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3247, &mut x3248, x3246, x3211, x3234);
  let mut x3249: u64 = 0;
  let mut x3250: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3249, &mut x3250, x3248, x3213, x3236);
  let mut x3251: u64 = 0;
  let mut x3252: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3251, &mut x3252, x3250, x3215, x3238);
  let mut x3253: u64 = 0;
  let mut x3254: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3253, &mut x3254, x3252, x3217, x3240);
  let mut x3255: u64 = 0;
  let mut x3256: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3255, &mut x3256, x3254, x3219, x3242);
  let mut x3257: u64 = 0;
  let mut x3258: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3257, &mut x3258, x3256, x3221, x3244);
  let mut x3259: u64 = 0;
  let mut x3260: u64 = 0;
  fiat_p384_mulx_u64(&mut x3259, &mut x3260, x3245, 0x100000001);
  let mut x3261: u64 = 0;
  let mut x3262: u64 = 0;
  fiat_p384_mulx_u64(&mut x3261, &mut x3262, x3259, 0xffffffffffffffff);
  let mut x3263: u64 = 0;
  let mut x3264: u64 = 0;
  fiat_p384_mulx_u64(&mut x3263, &mut x3264, x3259, 0xffffffffffffffff);
  let mut x3265: u64 = 0;
  let mut x3266: u64 = 0;
  fiat_p384_mulx_u64(&mut x3265, &mut x3266, x3259, 0xffffffffffffffff);
  let mut x3267: u64 = 0;
  let mut x3268: u64 = 0;
  fiat_p384_mulx_u64(&mut x3267, &mut x3268, x3259, 0xfffffffffffffffe);
  let mut x3269: u64 = 0;
  let mut x3270: u64 = 0;
  fiat_p384_mulx_u64(&mut x3269, &mut x3270, x3259, 0xffffffff00000000);
  let mut x3271: u64 = 0;
  let mut x3272: u64 = 0;
  fiat_p384_mulx_u64(&mut x3271, &mut x3272, x3259, 0xffffffff);
  let mut x3273: u64 = 0;
  let mut x3274: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3273, &mut x3274, 0x0, x3272, x3269);
  let mut x3275: u64 = 0;
  let mut x3276: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3275, &mut x3276, x3274, x3270, x3267);
  let mut x3277: u64 = 0;
  let mut x3278: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3277, &mut x3278, x3276, x3268, x3265);
  let mut x3279: u64 = 0;
  let mut x3280: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3279, &mut x3280, x3278, x3266, x3263);
  let mut x3281: u64 = 0;
  let mut x3282: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3281, &mut x3282, x3280, x3264, x3261);
  let x3283: u64 = ((x3282 as u64) + x3262);
  let mut x3284: u64 = 0;
  let mut x3285: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3284, &mut x3285, 0x0, x3245, x3271);
  let mut x3286: u64 = 0;
  let mut x3287: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3286, &mut x3287, x3285, x3247, x3273);
  let mut x3288: u64 = 0;
  let mut x3289: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3288, &mut x3289, x3287, x3249, x3275);
  let mut x3290: u64 = 0;
  let mut x3291: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3290, &mut x3291, x3289, x3251, x3277);
  let mut x3292: u64 = 0;
  let mut x3293: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3292, &mut x3293, x3291, x3253, x3279);
  let mut x3294: u64 = 0;
  let mut x3295: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3294, &mut x3295, x3293, x3255, x3281);
  let mut x3296: u64 = 0;
  let mut x3297: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3296, &mut x3297, x3295, x3257, x3283);
  let x3298: u64 = ((x3297 as u64) + (x3258 as u64));
  let mut x3299: u64 = 0;
  let mut x3300: u64 = 0;
  fiat_p384_mulx_u64(&mut x3299, &mut x3300, x1603, (arg4[5]));
  let mut x3301: u64 = 0;
  let mut x3302: u64 = 0;
  fiat_p384_mulx_u64(&mut x3301, &mut x3302, x1603, (arg4[4]));
  let mut x3303: u64 = 0;
  let mut x3304: u64 = 0;
  fiat_p384_mulx_u64(&mut x3303, &mut x3304, x1603, (arg4[3]));
  let mut x3305: u64 = 0;
  let mut x3306: u64 = 0;
  fiat_p384_mulx_u64(&mut x3305, &mut x3306, x1603, (arg4[2]));
  let mut x3307: u64 = 0;
  let mut x3308: u64 = 0;
  fiat_p384_mulx_u64(&mut x3307, &mut x3308, x1603, (arg4[1]));
  let mut x3309: u64 = 0;
  let mut x3310: u64 = 0;
  fiat_p384_mulx_u64(&mut x3309, &mut x3310, x1603, (arg4[0]));
  let mut x3311: u64 = 0;
  let mut x3312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3311, &mut x3312, 0x0, x3310, x3307);
  let mut x3313: u64 = 0;
  let mut x3314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3313, &mut x3314, x3312, x3308, x3305);
  let mut x3315: u64 = 0;
  let mut x3316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3315, &mut x3316, x3314, x3306, x3303);
  let mut x3317: u64 = 0;
  let mut x3318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3317, &mut x3318, x3316, x3304, x3301);
  let mut x3319: u64 = 0;
  let mut x3320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3319, &mut x3320, x3318, x3302, x3299);
  let x3321: u64 = ((x3320 as u64) + x3300);
  let mut x3322: u64 = 0;
  let mut x3323: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3322, &mut x3323, 0x0, x3286, x3309);
  let mut x3324: u64 = 0;
  let mut x3325: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3324, &mut x3325, x3323, x3288, x3311);
  let mut x3326: u64 = 0;
  let mut x3327: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3326, &mut x3327, x3325, x3290, x3313);
  let mut x3328: u64 = 0;
  let mut x3329: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3328, &mut x3329, x3327, x3292, x3315);
  let mut x3330: u64 = 0;
  let mut x3331: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3330, &mut x3331, x3329, x3294, x3317);
  let mut x3332: u64 = 0;
  let mut x3333: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3332, &mut x3333, x3331, x3296, x3319);
  let mut x3334: u64 = 0;
  let mut x3335: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3334, &mut x3335, x3333, x3298, x3321);
  let mut x3336: u64 = 0;
  let mut x3337: u64 = 0;
  fiat_p384_mulx_u64(&mut x3336, &mut x3337, x3322, 0x100000001);
  let mut x3338: u64 = 0;
  let mut x3339: u64 = 0;
  fiat_p384_mulx_u64(&mut x3338, &mut x3339, x3336, 0xffffffffffffffff);
  let mut x3340: u64 = 0;
  let mut x3341: u64 = 0;
  fiat_p384_mulx_u64(&mut x3340, &mut x3341, x3336, 0xffffffffffffffff);
  let mut x3342: u64 = 0;
  let mut x3343: u64 = 0;
  fiat_p384_mulx_u64(&mut x3342, &mut x3343, x3336, 0xffffffffffffffff);
  let mut x3344: u64 = 0;
  let mut x3345: u64 = 0;
  fiat_p384_mulx_u64(&mut x3344, &mut x3345, x3336, 0xfffffffffffffffe);
  let mut x3346: u64 = 0;
  let mut x3347: u64 = 0;
  fiat_p384_mulx_u64(&mut x3346, &mut x3347, x3336, 0xffffffff00000000);
  let mut x3348: u64 = 0;
  let mut x3349: u64 = 0;
  fiat_p384_mulx_u64(&mut x3348, &mut x3349, x3336, 0xffffffff);
  let mut x3350: u64 = 0;
  let mut x3351: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3350, &mut x3351, 0x0, x3349, x3346);
  let mut x3352: u64 = 0;
  let mut x3353: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3352, &mut x3353, x3351, x3347, x3344);
  let mut x3354: u64 = 0;
  let mut x3355: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3354, &mut x3355, x3353, x3345, x3342);
  let mut x3356: u64 = 0;
  let mut x3357: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3356, &mut x3357, x3355, x3343, x3340);
  let mut x3358: u64 = 0;
  let mut x3359: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3358, &mut x3359, x3357, x3341, x3338);
  let x3360: u64 = ((x3359 as u64) + x3339);
  let mut x3361: u64 = 0;
  let mut x3362: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3361, &mut x3362, 0x0, x3322, x3348);
  let mut x3363: u64 = 0;
  let mut x3364: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3363, &mut x3364, x3362, x3324, x3350);
  let mut x3365: u64 = 0;
  let mut x3366: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3365, &mut x3366, x3364, x3326, x3352);
  let mut x3367: u64 = 0;
  let mut x3368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3367, &mut x3368, x3366, x3328, x3354);
  let mut x3369: u64 = 0;
  let mut x3370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3369, &mut x3370, x3368, x3330, x3356);
  let mut x3371: u64 = 0;
  let mut x3372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3371, &mut x3372, x3370, x3332, x3358);
  let mut x3373: u64 = 0;
  let mut x3374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3373, &mut x3374, x3372, x3334, x3360);
  let x3375: u64 = ((x3374 as u64) + (x3335 as u64));
  let mut x3376: u64 = 0;
  let mut x3377: u64 = 0;
  fiat_p384_mulx_u64(&mut x3376, &mut x3377, x1604, (arg4[5]));
  let mut x3378: u64 = 0;
  let mut x3379: u64 = 0;
  fiat_p384_mulx_u64(&mut x3378, &mut x3379, x1604, (arg4[4]));
  let mut x3380: u64 = 0;
  let mut x3381: u64 = 0;
  fiat_p384_mulx_u64(&mut x3380, &mut x3381, x1604, (arg4[3]));
  let mut x3382: u64 = 0;
  let mut x3383: u64 = 0;
  fiat_p384_mulx_u64(&mut x3382, &mut x3383, x1604, (arg4[2]));
  let mut x3384: u64 = 0;
  let mut x3385: u64 = 0;
  fiat_p384_mulx_u64(&mut x3384, &mut x3385, x1604, (arg4[1]));
  let mut x3386: u64 = 0;
  let mut x3387: u64 = 0;
  fiat_p384_mulx_u64(&mut x3386, &mut x3387, x1604, (arg4[0]));
  let mut x3388: u64 = 0;
  let mut x3389: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3388, &mut x3389, 0x0, x3387, x3384);
  let mut x3390: u64 = 0;
  let mut x3391: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3390, &mut x3391, x3389, x3385, x3382);
  let mut x3392: u64 = 0;
  let mut x3393: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3392, &mut x3393, x3391, x3383, x3380);
  let mut x3394: u64 = 0;
  let mut x3395: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3394, &mut x3395, x3393, x3381, x3378);
  let mut x3396: u64 = 0;
  let mut x3397: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3396, &mut x3397, x3395, x3379, x3376);
  let x3398: u64 = ((x3397 as u64) + x3377);
  let mut x3399: u64 = 0;
  let mut x3400: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3399, &mut x3400, 0x0, x3363, x3386);
  let mut x3401: u64 = 0;
  let mut x3402: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3401, &mut x3402, x3400, x3365, x3388);
  let mut x3403: u64 = 0;
  let mut x3404: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3403, &mut x3404, x3402, x3367, x3390);
  let mut x3405: u64 = 0;
  let mut x3406: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3405, &mut x3406, x3404, x3369, x3392);
  let mut x3407: u64 = 0;
  let mut x3408: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3407, &mut x3408, x3406, x3371, x3394);
  let mut x3409: u64 = 0;
  let mut x3410: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3409, &mut x3410, x3408, x3373, x3396);
  let mut x3411: u64 = 0;
  let mut x3412: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3411, &mut x3412, x3410, x3375, x3398);
  let mut x3413: u64 = 0;
  let mut x3414: u64 = 0;
  fiat_p384_mulx_u64(&mut x3413, &mut x3414, x3399, 0x100000001);
  let mut x3415: u64 = 0;
  let mut x3416: u64 = 0;
  fiat_p384_mulx_u64(&mut x3415, &mut x3416, x3413, 0xffffffffffffffff);
  let mut x3417: u64 = 0;
  let mut x3418: u64 = 0;
  fiat_p384_mulx_u64(&mut x3417, &mut x3418, x3413, 0xffffffffffffffff);
  let mut x3419: u64 = 0;
  let mut x3420: u64 = 0;
  fiat_p384_mulx_u64(&mut x3419, &mut x3420, x3413, 0xffffffffffffffff);
  let mut x3421: u64 = 0;
  let mut x3422: u64 = 0;
  fiat_p384_mulx_u64(&mut x3421, &mut x3422, x3413, 0xfffffffffffffffe);
  let mut x3423: u64 = 0;
  let mut x3424: u64 = 0;
  fiat_p384_mulx_u64(&mut x3423, &mut x3424, x3413, 0xffffffff00000000);
  let mut x3425: u64 = 0;
  let mut x3426: u64 = 0;
  fiat_p384_mulx_u64(&mut x3425, &mut x3426, x3413, 0xffffffff);
  let mut x3427: u64 = 0;
  let mut x3428: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3427, &mut x3428, 0x0, x3426, x3423);
  let mut x3429: u64 = 0;
  let mut x3430: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3429, &mut x3430, x3428, x3424, x3421);
  let mut x3431: u64 = 0;
  let mut x3432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3431, &mut x3432, x3430, x3422, x3419);
  let mut x3433: u64 = 0;
  let mut x3434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3433, &mut x3434, x3432, x3420, x3417);
  let mut x3435: u64 = 0;
  let mut x3436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3435, &mut x3436, x3434, x3418, x3415);
  let x3437: u64 = ((x3436 as u64) + x3416);
  let mut x3438: u64 = 0;
  let mut x3439: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3438, &mut x3439, 0x0, x3399, x3425);
  let mut x3440: u64 = 0;
  let mut x3441: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3440, &mut x3441, x3439, x3401, x3427);
  let mut x3442: u64 = 0;
  let mut x3443: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3442, &mut x3443, x3441, x3403, x3429);
  let mut x3444: u64 = 0;
  let mut x3445: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3444, &mut x3445, x3443, x3405, x3431);
  let mut x3446: u64 = 0;
  let mut x3447: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3446, &mut x3447, x3445, x3407, x3433);
  let mut x3448: u64 = 0;
  let mut x3449: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3448, &mut x3449, x3447, x3409, x3435);
  let mut x3450: u64 = 0;
  let mut x3451: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3450, &mut x3451, x3449, x3411, x3437);
  let x3452: u64 = ((x3451 as u64) + (x3412 as u64));
  let mut x3453: u64 = 0;
  let mut x3454: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3453, &mut x3454, 0x0, x3440, 0xffffffff);
  let mut x3455: u64 = 0;
  let mut x3456: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3455, &mut x3456, x3454, x3442, 0xffffffff00000000);
  let mut x3457: u64 = 0;
  let mut x3458: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3457, &mut x3458, x3456, x3444, 0xfffffffffffffffe);
  let mut x3459: u64 = 0;
  let mut x3460: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3459, &mut x3460, x3458, x3446, 0xffffffffffffffff);
  let mut x3461: u64 = 0;
  let mut x3462: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3461, &mut x3462, x3460, x3448, 0xffffffffffffffff);
  let mut x3463: u64 = 0;
  let mut x3464: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3463, &mut x3464, x3462, x3450, 0xffffffffffffffff);
  let mut x3465: u64 = 0;
  let mut x3466: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3465, &mut x3466, x3464, x3452, (0x0 as u64));
  let mut x3467: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3467, x3466, x3453, x3440);
  let mut x3468: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3468, x3466, x3455, x3442);
  let mut x3469: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3469, x3466, x3457, x3444);
  let mut x3470: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3470, x3466, x3459, x3446);
  let mut x3471: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3471, x3466, x3461, x3448);
  let mut x3472: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3472, x3466, x3463, x3450);
  let mut x3473: u64 = 0;
  let mut x3474: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3473, &mut x3474, 0x0, x2066, x2533);
  let mut x3475: u64 = 0;
  let mut x3476: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3475, &mut x3476, x3474, x2067, x2534);
  let mut x3477: u64 = 0;
  let mut x3478: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3477, &mut x3478, x3476, x2068, x2535);
  let mut x3479: u64 = 0;
  let mut x3480: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3479, &mut x3480, x3478, x2069, x2536);
  let mut x3481: u64 = 0;
  let mut x3482: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3481, &mut x3482, x3480, x2070, x2537);
  let mut x3483: u64 = 0;
  let mut x3484: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3483, &mut x3484, x3482, x2071, x2538);
  let mut x3485: u64 = 0;
  let mut x3486: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3485, &mut x3486, 0x0, x3473, 0xffffffff);
  let mut x3487: u64 = 0;
  let mut x3488: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3487, &mut x3488, x3486, x3475, 0xffffffff00000000);
  let mut x3489: u64 = 0;
  let mut x3490: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3489, &mut x3490, x3488, x3477, 0xfffffffffffffffe);
  let mut x3491: u64 = 0;
  let mut x3492: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3491, &mut x3492, x3490, x3479, 0xffffffffffffffff);
  let mut x3493: u64 = 0;
  let mut x3494: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3493, &mut x3494, x3492, x3481, 0xffffffffffffffff);
  let mut x3495: u64 = 0;
  let mut x3496: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3495, &mut x3496, x3494, x3483, 0xffffffffffffffff);
  let mut x3497: u64 = 0;
  let mut x3498: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3497, &mut x3498, x3496, (x3484 as u64), (0x0 as u64));
  let mut x3499: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3499, x3498, x3485, x3473);
  let mut x3500: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3500, x3498, x3487, x3475);
  let mut x3501: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3501, x3498, x3489, x3477);
  let mut x3502: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3502, x3498, x3491, x3479);
  let mut x3503: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3503, x3498, x3493, x3481);
  let mut x3504: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3504, x3498, x3495, x3483);
  let mut x3505: u64 = 0;
  let mut x3506: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3505, &mut x3506, 0x0, x3000, x3467);
  let mut x3507: u64 = 0;
  let mut x3508: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3507, &mut x3508, x3506, x3001, x3468);
  let mut x3509: u64 = 0;
  let mut x3510: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3509, &mut x3510, x3508, x3002, x3469);
  let mut x3511: u64 = 0;
  let mut x3512: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3511, &mut x3512, x3510, x3003, x3470);
  let mut x3513: u64 = 0;
  let mut x3514: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3513, &mut x3514, x3512, x3004, x3471);
  let mut x3515: u64 = 0;
  let mut x3516: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u64(&mut x3515, &mut x3516, x3514, x3005, x3472);
  let mut x3517: u64 = 0;
  let mut x3518: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3517, &mut x3518, 0x0, x3505, 0xffffffff);
  let mut x3519: u64 = 0;
  let mut x3520: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3519, &mut x3520, x3518, x3507, 0xffffffff00000000);
  let mut x3521: u64 = 0;
  let mut x3522: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3521, &mut x3522, x3520, x3509, 0xfffffffffffffffe);
  let mut x3523: u64 = 0;
  let mut x3524: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3523, &mut x3524, x3522, x3511, 0xffffffffffffffff);
  let mut x3525: u64 = 0;
  let mut x3526: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3525, &mut x3526, x3524, x3513, 0xffffffffffffffff);
  let mut x3527: u64 = 0;
  let mut x3528: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3527, &mut x3528, x3526, x3515, 0xffffffffffffffff);
  let mut x3529: u64 = 0;
  let mut x3530: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u64(&mut x3529, &mut x3530, x3528, (x3516 as u64), (0x0 as u64));
  let mut x3531: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3531, x3530, x3517, x3505);
  let mut x3532: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3532, x3530, x3519, x3507);
  let mut x3533: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3533, x3530, x3521, x3509);
  let mut x3534: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3534, x3530, x3523, x3511);
  let mut x3535: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3535, x3530, x3525, x3513);
  let mut x3536: u64 = 0;
  fiat_p384_cmovznz_u64(&mut x3536, x3530, x3527, x3515);
  out1[0] = x1455;
  out1[1] = x1456;
  out1[2] = x1457;
  out1[3] = x1458;
  out1[4] = x1459;
  out1[5] = x1460;
  out1[6] = x1461;
  out2[0] = x1462;
  out2[1] = x1463;
  out2[2] = x1464;
  out2[3] = x1465;
  out2[4] = x1466;
  out2[5] = x1467;
  out2[6] = x1468;
  out3[0] = x3499;
  out3[1] = x3500;
  out3[2] = x3501;
  out3[3] = x3502;
  out3[4] = x3503;
  out3[5] = x3504;
  out4[0] = x3531;
  out4[1] = x3532;
  out4[2] = x3533;
  out4[3] = x3534;
  out4[4] = x3535;
  out4[5] = x3536;
}

