// Autogenerated: 'src/ExtractionOCaml/unsaturated_solinas' --lang Zig --internal-static --public-function-case camelCase --private-function-case camelCase --public-type-case UpperCamelCase --private-type-case UpperCamelCase --no-prefix-fiat --package-name 25519 '' 32 '(auto)' '2^255 - 19' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes one relax msat sat_from_bytes divstep divstep_precomp jumpdivstep_precomp outer_loop_body carry_scmul121666
// curve description (via package name): 25519
// machine_wordsize = 32 (from "32")
// requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes, one, relax, msat, sat_from_bytes, divstep, divstep_precomp, jumpdivstep_precomp, outer_loop_body, carry_scmul121666
// n = 10 (from "(auto)")
// s-c = 2^255 - [(1, 19)] (from "2^255 - 19")
// tight_bounds_multiplier = 1 (from "")
//
// Computed values:
//   carry_chain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]
//   eval z = z[0] + (z[1] << 26) + (z[2] << 51) + (z[3] << 77) + (z[4] << 102) + (z[5] << 128) + (z[6] << 153) + (z[7] << 179) + (z[8] << 204) + (z[9] << 230)
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248)
//   balance = [0x7ffffda, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe, 0x7fffffe, 0x3fffffe]

const std = @import("std");
const mode = @import("builtin").mode; // Checked arithmetic is disabled in non-debug modes to avoid side channels

inline fn cast(comptime DestType: type, target: anytype) DestType {
    if (@typeInfo(@TypeOf(target)) == .Int) {
        const dest = @typeInfo(DestType).Int;
        const source = @typeInfo(@TypeOf(target)).Int;
        if (dest.bits < source.bits) {
            return @bitCast(DestType, @truncate(std.meta.Int(source.signedness, dest.bits), target));
        } else {
            return @bitCast(DestType, @as(std.meta.Int(source.signedness, dest.bits), target));
        }
    }
    return @as(DestType, target);
}

// The type LooseFieldElement is a field element with loose bounds.
// Bounds: [[0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000], [0x0 ~> 0xc000000], [0x0 ~> 0x6000000]]
pub const LooseFieldElement = [10]u32;

// The type TightFieldElement is a field element with tight bounds.
// Bounds: [[0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000], [0x0 ~> 0x4000000], [0x0 ~> 0x2000000]]
pub const TightFieldElement = [10]u32;

/// The function addcarryxU32 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^32
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0x1]
inline fn addcarryxU32(out1: *u32, out2: *u1, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((cast(u64, arg1) + cast(u64, arg2)) + cast(u64, arg3));
    const x2 = cast(u32, (x1 & cast(u64, 0xffffffff)));
    const x3 = cast(u1, (x1 >> 32));
    out1.* = x2;
    out2.* = x3;
}

/// The function subborrowxU32 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^32
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0x1]
inline fn subborrowxU32(out1: *u32, out2: *u1, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((cast(i64, arg2) - cast(i64, arg1)) - cast(i64, arg3));
    const x2 = cast(i1, (x1 >> 32));
    const x3 = cast(u32, (x1 & cast(i64, 0xffffffff)));
    out1.* = x3;
    out2.* = cast(u1, (cast(i2, 0x0) - cast(i2, x2)));
}

/// The function addcarryxU26 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^26
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^26⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x3ffffff]
///   arg3: [0x0 ~> 0x3ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x3ffffff]
///   out2: [0x0 ~> 0x1]
inline fn addcarryxU26(out1: *u32, out2: *u1, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((cast(u32, arg1) + arg2) + arg3);
    const x2 = (x1 & 0x3ffffff);
    const x3 = cast(u1, (x1 >> 26));
    out1.* = x2;
    out2.* = x3;
}

/// The function subborrowxU26 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^26
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^26⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x3ffffff]
///   arg3: [0x0 ~> 0x3ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x3ffffff]
///   out2: [0x0 ~> 0x1]
inline fn subborrowxU26(out1: *u32, out2: *u1, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = cast(i32, (cast(i64, cast(i32, (cast(i64, arg2) - cast(i64, arg1)))) - cast(i64, arg3)));
    const x2 = cast(i1, (x1 >> 26));
    const x3 = cast(u32, (cast(i64, x1) & cast(i64, 0x3ffffff)));
    out1.* = x3;
    out2.* = cast(u1, (cast(i2, 0x0) - cast(i2, x2)));
}

/// The function addcarryxU25 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^25
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^25⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1ffffff]
///   arg3: [0x0 ~> 0x1ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x1ffffff]
///   out2: [0x0 ~> 0x1]
inline fn addcarryxU25(out1: *u32, out2: *u1, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((cast(u32, arg1) + arg2) + arg3);
    const x2 = (x1 & 0x1ffffff);
    const x3 = cast(u1, (x1 >> 25));
    out1.* = x2;
    out2.* = x3;
}

/// The function subborrowxU25 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^25
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^25⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1ffffff]
///   arg3: [0x0 ~> 0x1ffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0x1ffffff]
///   out2: [0x0 ~> 0x1]
inline fn subborrowxU25(out1: *u32, out2: *u1, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = cast(i32, (cast(i64, cast(i32, (cast(i64, arg2) - cast(i64, arg1)))) - cast(i64, arg3)));
    const x2 = cast(i1, (x1 >> 25));
    const x3 = cast(u32, (cast(i64, x1) & cast(i64, 0x1ffffff)));
    out1.* = x3;
    out2.* = cast(u1, (cast(i2, 0x0) - cast(i2, x2)));
}

/// The function mulxU32 is a multiplication, returning the full double-width result.
///
/// Postconditions:
///   out1 = (arg1 * arg2) mod 2^32
///   out2 = ⌊arg1 * arg2 / 2^32⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [0x0 ~> 0xffffffff]
inline fn mulxU32(out1: *u32, out2: *u32, arg1: u32, arg2: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (cast(u64, arg1) * cast(u64, arg2));
    const x2 = cast(u32, (x1 & cast(u64, 0xffffffff)));
    const x3 = cast(u32, (x1 >> 32));
    out1.* = x2;
    out2.* = x3;
}

/// The function cmovznzU32 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffff]
///   arg3: [0x0 ~> 0xffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
inline fn cmovznzU32(out1: *u32, arg1: u1, arg2: u32, arg3: u32) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (~(~arg1));
    const x2 = cast(u32, (cast(i64, cast(i1, (cast(i2, 0x0) - cast(i2, x1)))) & cast(i64, 0xffffffff)));
    const x3 = ((x2 & arg3) | ((~x2) & arg2));
    out1.* = x3;
}

/// The function cmovznzU1 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0x1]
///   arg3: [0x0 ~> 0x1]
/// Output Bounds:
///   out1: [0x0 ~> 0x1]
inline fn cmovznzU1(out1: *u1, arg1: u1, arg2: u1, arg3: u1) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (~(~arg1));
    const x2 = cast(u1, (cast(i2, cast(i1, (cast(i2, 0x0) - cast(i2, x1)))) & cast(i2, 0x1)));
    const x3 = ((x2 & arg3) | ((~x2) & arg2));
    out1.* = x3;
}

/// The function carryMul multiplies two field elements and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg2) mod m
///
pub fn carryMul(out1: *TightFieldElement, arg1: LooseFieldElement, arg2: LooseFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[9]) * 0x26)));
    const x2 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[8]) * 0x13)));
    const x3 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[7]) * 0x26)));
    const x4 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[6]) * 0x13)));
    const x5 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[5]) * 0x26)));
    const x6 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[4]) * 0x13)));
    const x7 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[3]) * 0x26)));
    const x8 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[2]) * 0x13)));
    const x9 = (cast(u64, (arg1[9])) * cast(u64, ((arg2[1]) * 0x26)));
    const x10 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[9]) * 0x13)));
    const x11 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[8]) * 0x13)));
    const x12 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[7]) * 0x13)));
    const x13 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[6]) * 0x13)));
    const x14 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[5]) * 0x13)));
    const x15 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[4]) * 0x13)));
    const x16 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[3]) * 0x13)));
    const x17 = (cast(u64, (arg1[8])) * cast(u64, ((arg2[2]) * 0x13)));
    const x18 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[9]) * 0x26)));
    const x19 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[8]) * 0x13)));
    const x20 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[7]) * 0x26)));
    const x21 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[6]) * 0x13)));
    const x22 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[5]) * 0x26)));
    const x23 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[4]) * 0x13)));
    const x24 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[3]) * 0x26)));
    const x25 = (cast(u64, (arg1[6])) * cast(u64, ((arg2[9]) * 0x13)));
    const x26 = (cast(u64, (arg1[6])) * cast(u64, ((arg2[8]) * 0x13)));
    const x27 = (cast(u64, (arg1[6])) * cast(u64, ((arg2[7]) * 0x13)));
    const x28 = (cast(u64, (arg1[6])) * cast(u64, ((arg2[6]) * 0x13)));
    const x29 = (cast(u64, (arg1[6])) * cast(u64, ((arg2[5]) * 0x13)));
    const x30 = (cast(u64, (arg1[6])) * cast(u64, ((arg2[4]) * 0x13)));
    const x31 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[9]) * 0x26)));
    const x32 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[8]) * 0x13)));
    const x33 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[7]) * 0x26)));
    const x34 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[6]) * 0x13)));
    const x35 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[5]) * 0x26)));
    const x36 = (cast(u64, (arg1[4])) * cast(u64, ((arg2[9]) * 0x13)));
    const x37 = (cast(u64, (arg1[4])) * cast(u64, ((arg2[8]) * 0x13)));
    const x38 = (cast(u64, (arg1[4])) * cast(u64, ((arg2[7]) * 0x13)));
    const x39 = (cast(u64, (arg1[4])) * cast(u64, ((arg2[6]) * 0x13)));
    const x40 = (cast(u64, (arg1[3])) * cast(u64, ((arg2[9]) * 0x26)));
    const x41 = (cast(u64, (arg1[3])) * cast(u64, ((arg2[8]) * 0x13)));
    const x42 = (cast(u64, (arg1[3])) * cast(u64, ((arg2[7]) * 0x26)));
    const x43 = (cast(u64, (arg1[2])) * cast(u64, ((arg2[9]) * 0x13)));
    const x44 = (cast(u64, (arg1[2])) * cast(u64, ((arg2[8]) * 0x13)));
    const x45 = (cast(u64, (arg1[1])) * cast(u64, ((arg2[9]) * 0x26)));
    const x46 = (cast(u64, (arg1[9])) * cast(u64, (arg2[0])));
    const x47 = (cast(u64, (arg1[8])) * cast(u64, (arg2[1])));
    const x48 = (cast(u64, (arg1[8])) * cast(u64, (arg2[0])));
    const x49 = (cast(u64, (arg1[7])) * cast(u64, (arg2[2])));
    const x50 = (cast(u64, (arg1[7])) * cast(u64, ((arg2[1]) * 0x2)));
    const x51 = (cast(u64, (arg1[7])) * cast(u64, (arg2[0])));
    const x52 = (cast(u64, (arg1[6])) * cast(u64, (arg2[3])));
    const x53 = (cast(u64, (arg1[6])) * cast(u64, (arg2[2])));
    const x54 = (cast(u64, (arg1[6])) * cast(u64, (arg2[1])));
    const x55 = (cast(u64, (arg1[6])) * cast(u64, (arg2[0])));
    const x56 = (cast(u64, (arg1[5])) * cast(u64, (arg2[4])));
    const x57 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[3]) * 0x2)));
    const x58 = (cast(u64, (arg1[5])) * cast(u64, (arg2[2])));
    const x59 = (cast(u64, (arg1[5])) * cast(u64, ((arg2[1]) * 0x2)));
    const x60 = (cast(u64, (arg1[5])) * cast(u64, (arg2[0])));
    const x61 = (cast(u64, (arg1[4])) * cast(u64, (arg2[5])));
    const x62 = (cast(u64, (arg1[4])) * cast(u64, (arg2[4])));
    const x63 = (cast(u64, (arg1[4])) * cast(u64, (arg2[3])));
    const x64 = (cast(u64, (arg1[4])) * cast(u64, (arg2[2])));
    const x65 = (cast(u64, (arg1[4])) * cast(u64, (arg2[1])));
    const x66 = (cast(u64, (arg1[4])) * cast(u64, (arg2[0])));
    const x67 = (cast(u64, (arg1[3])) * cast(u64, (arg2[6])));
    const x68 = (cast(u64, (arg1[3])) * cast(u64, ((arg2[5]) * 0x2)));
    const x69 = (cast(u64, (arg1[3])) * cast(u64, (arg2[4])));
    const x70 = (cast(u64, (arg1[3])) * cast(u64, ((arg2[3]) * 0x2)));
    const x71 = (cast(u64, (arg1[3])) * cast(u64, (arg2[2])));
    const x72 = (cast(u64, (arg1[3])) * cast(u64, ((arg2[1]) * 0x2)));
    const x73 = (cast(u64, (arg1[3])) * cast(u64, (arg2[0])));
    const x74 = (cast(u64, (arg1[2])) * cast(u64, (arg2[7])));
    const x75 = (cast(u64, (arg1[2])) * cast(u64, (arg2[6])));
    const x76 = (cast(u64, (arg1[2])) * cast(u64, (arg2[5])));
    const x77 = (cast(u64, (arg1[2])) * cast(u64, (arg2[4])));
    const x78 = (cast(u64, (arg1[2])) * cast(u64, (arg2[3])));
    const x79 = (cast(u64, (arg1[2])) * cast(u64, (arg2[2])));
    const x80 = (cast(u64, (arg1[2])) * cast(u64, (arg2[1])));
    const x81 = (cast(u64, (arg1[2])) * cast(u64, (arg2[0])));
    const x82 = (cast(u64, (arg1[1])) * cast(u64, (arg2[8])));
    const x83 = (cast(u64, (arg1[1])) * cast(u64, ((arg2[7]) * 0x2)));
    const x84 = (cast(u64, (arg1[1])) * cast(u64, (arg2[6])));
    const x85 = (cast(u64, (arg1[1])) * cast(u64, ((arg2[5]) * 0x2)));
    const x86 = (cast(u64, (arg1[1])) * cast(u64, (arg2[4])));
    const x87 = (cast(u64, (arg1[1])) * cast(u64, ((arg2[3]) * 0x2)));
    const x88 = (cast(u64, (arg1[1])) * cast(u64, (arg2[2])));
    const x89 = (cast(u64, (arg1[1])) * cast(u64, ((arg2[1]) * 0x2)));
    const x90 = (cast(u64, (arg1[1])) * cast(u64, (arg2[0])));
    const x91 = (cast(u64, (arg1[0])) * cast(u64, (arg2[9])));
    const x92 = (cast(u64, (arg1[0])) * cast(u64, (arg2[8])));
    const x93 = (cast(u64, (arg1[0])) * cast(u64, (arg2[7])));
    const x94 = (cast(u64, (arg1[0])) * cast(u64, (arg2[6])));
    const x95 = (cast(u64, (arg1[0])) * cast(u64, (arg2[5])));
    const x96 = (cast(u64, (arg1[0])) * cast(u64, (arg2[4])));
    const x97 = (cast(u64, (arg1[0])) * cast(u64, (arg2[3])));
    const x98 = (cast(u64, (arg1[0])) * cast(u64, (arg2[2])));
    const x99 = (cast(u64, (arg1[0])) * cast(u64, (arg2[1])));
    const x100 = (cast(u64, (arg1[0])) * cast(u64, (arg2[0])));
    const x101 = (x100 + (x45 + (x44 + (x42 + (x39 + (x35 + (x30 + (x24 + (x17 + x9)))))))));
    const x102 = (x101 >> 26);
    const x103 = cast(u32, (x101 & cast(u64, 0x3ffffff)));
    const x104 = (x91 + (x82 + (x74 + (x67 + (x61 + (x56 + (x52 + (x49 + (x47 + x46)))))))));
    const x105 = (x92 + (x83 + (x75 + (x68 + (x62 + (x57 + (x53 + (x50 + (x48 + x1)))))))));
    const x106 = (x93 + (x84 + (x76 + (x69 + (x63 + (x58 + (x54 + (x51 + (x10 + x2)))))))));
    const x107 = (x94 + (x85 + (x77 + (x70 + (x64 + (x59 + (x55 + (x18 + (x11 + x3)))))))));
    const x108 = (x95 + (x86 + (x78 + (x71 + (x65 + (x60 + (x25 + (x19 + (x12 + x4)))))))));
    const x109 = (x96 + (x87 + (x79 + (x72 + (x66 + (x31 + (x26 + (x20 + (x13 + x5)))))))));
    const x110 = (x97 + (x88 + (x80 + (x73 + (x36 + (x32 + (x27 + (x21 + (x14 + x6)))))))));
    const x111 = (x98 + (x89 + (x81 + (x40 + (x37 + (x33 + (x28 + (x22 + (x15 + x7)))))))));
    const x112 = (x99 + (x90 + (x43 + (x41 + (x38 + (x34 + (x29 + (x23 + (x16 + x8)))))))));
    const x113 = (x102 + x112);
    const x114 = (x113 >> 25);
    const x115 = cast(u32, (x113 & cast(u64, 0x1ffffff)));
    const x116 = (x114 + x111);
    const x117 = (x116 >> 26);
    const x118 = cast(u32, (x116 & cast(u64, 0x3ffffff)));
    const x119 = (x117 + x110);
    const x120 = (x119 >> 25);
    const x121 = cast(u32, (x119 & cast(u64, 0x1ffffff)));
    const x122 = (x120 + x109);
    const x123 = (x122 >> 26);
    const x124 = cast(u32, (x122 & cast(u64, 0x3ffffff)));
    const x125 = (x123 + x108);
    const x126 = (x125 >> 25);
    const x127 = cast(u32, (x125 & cast(u64, 0x1ffffff)));
    const x128 = (x126 + x107);
    const x129 = (x128 >> 26);
    const x130 = cast(u32, (x128 & cast(u64, 0x3ffffff)));
    const x131 = (x129 + x106);
    const x132 = (x131 >> 25);
    const x133 = cast(u32, (x131 & cast(u64, 0x1ffffff)));
    const x134 = (x132 + x105);
    const x135 = (x134 >> 26);
    const x136 = cast(u32, (x134 & cast(u64, 0x3ffffff)));
    const x137 = (x135 + x104);
    const x138 = (x137 >> 25);
    const x139 = cast(u32, (x137 & cast(u64, 0x1ffffff)));
    const x140 = (x138 * cast(u64, 0x13));
    const x141 = (cast(u64, x103) + x140);
    const x142 = cast(u32, (x141 >> 26));
    const x143 = cast(u32, (x141 & cast(u64, 0x3ffffff)));
    const x144 = (x142 + x115);
    const x145 = cast(u1, (x144 >> 25));
    const x146 = (x144 & 0x1ffffff);
    const x147 = (cast(u32, x145) + x118);
    out1[0] = x143;
    out1[1] = x146;
    out1[2] = x147;
    out1[3] = x121;
    out1[4] = x124;
    out1[5] = x127;
    out1[6] = x130;
    out1[7] = x133;
    out1[8] = x136;
    out1[9] = x139;
}

/// The function carrySquare squares a field element and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 * eval arg1) mod m
///
pub fn carrySquare(out1: *TightFieldElement, arg1: LooseFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((arg1[9]) * 0x13);
    const x2 = (x1 * 0x2);
    const x3 = ((arg1[9]) * 0x2);
    const x4 = ((arg1[8]) * 0x13);
    const x5 = (cast(u64, x4) * cast(u64, 0x2));
    const x6 = ((arg1[8]) * 0x2);
    const x7 = ((arg1[7]) * 0x13);
    const x8 = (x7 * 0x2);
    const x9 = ((arg1[7]) * 0x2);
    const x10 = ((arg1[6]) * 0x13);
    const x11 = (cast(u64, x10) * cast(u64, 0x2));
    const x12 = ((arg1[6]) * 0x2);
    const x13 = ((arg1[5]) * 0x13);
    const x14 = ((arg1[5]) * 0x2);
    const x15 = ((arg1[4]) * 0x2);
    const x16 = ((arg1[3]) * 0x2);
    const x17 = ((arg1[2]) * 0x2);
    const x18 = ((arg1[1]) * 0x2);
    const x19 = (cast(u64, (arg1[9])) * cast(u64, (x1 * 0x2)));
    const x20 = (cast(u64, (arg1[8])) * cast(u64, x2));
    const x21 = (cast(u64, (arg1[8])) * cast(u64, x4));
    const x22 = (cast(u64, (arg1[7])) * (cast(u64, x2) * cast(u64, 0x2)));
    const x23 = (cast(u64, (arg1[7])) * x5);
    const x24 = (cast(u64, (arg1[7])) * cast(u64, (x7 * 0x2)));
    const x25 = (cast(u64, (arg1[6])) * cast(u64, x2));
    const x26 = (cast(u64, (arg1[6])) * x5);
    const x27 = (cast(u64, (arg1[6])) * cast(u64, x8));
    const x28 = (cast(u64, (arg1[6])) * cast(u64, x10));
    const x29 = (cast(u64, (arg1[5])) * (cast(u64, x2) * cast(u64, 0x2)));
    const x30 = (cast(u64, (arg1[5])) * x5);
    const x31 = (cast(u64, (arg1[5])) * (cast(u64, x8) * cast(u64, 0x2)));
    const x32 = (cast(u64, (arg1[5])) * x11);
    const x33 = (cast(u64, (arg1[5])) * cast(u64, (x13 * 0x2)));
    const x34 = (cast(u64, (arg1[4])) * cast(u64, x2));
    const x35 = (cast(u64, (arg1[4])) * x5);
    const x36 = (cast(u64, (arg1[4])) * cast(u64, x8));
    const x37 = (cast(u64, (arg1[4])) * x11);
    const x38 = (cast(u64, (arg1[4])) * cast(u64, x14));
    const x39 = (cast(u64, (arg1[4])) * cast(u64, (arg1[4])));
    const x40 = (cast(u64, (arg1[3])) * (cast(u64, x2) * cast(u64, 0x2)));
    const x41 = (cast(u64, (arg1[3])) * x5);
    const x42 = (cast(u64, (arg1[3])) * (cast(u64, x8) * cast(u64, 0x2)));
    const x43 = (cast(u64, (arg1[3])) * cast(u64, x12));
    const x44 = (cast(u64, (arg1[3])) * cast(u64, (x14 * 0x2)));
    const x45 = (cast(u64, (arg1[3])) * cast(u64, x15));
    const x46 = (cast(u64, (arg1[3])) * cast(u64, ((arg1[3]) * 0x2)));
    const x47 = (cast(u64, (arg1[2])) * cast(u64, x2));
    const x48 = (cast(u64, (arg1[2])) * x5);
    const x49 = (cast(u64, (arg1[2])) * cast(u64, x9));
    const x50 = (cast(u64, (arg1[2])) * cast(u64, x12));
    const x51 = (cast(u64, (arg1[2])) * cast(u64, x14));
    const x52 = (cast(u64, (arg1[2])) * cast(u64, x15));
    const x53 = (cast(u64, (arg1[2])) * cast(u64, x16));
    const x54 = (cast(u64, (arg1[2])) * cast(u64, (arg1[2])));
    const x55 = (cast(u64, (arg1[1])) * (cast(u64, x2) * cast(u64, 0x2)));
    const x56 = (cast(u64, (arg1[1])) * cast(u64, x6));
    const x57 = (cast(u64, (arg1[1])) * cast(u64, (x9 * 0x2)));
    const x58 = (cast(u64, (arg1[1])) * cast(u64, x12));
    const x59 = (cast(u64, (arg1[1])) * cast(u64, (x14 * 0x2)));
    const x60 = (cast(u64, (arg1[1])) * cast(u64, x15));
    const x61 = (cast(u64, (arg1[1])) * cast(u64, (x16 * 0x2)));
    const x62 = (cast(u64, (arg1[1])) * cast(u64, x17));
    const x63 = (cast(u64, (arg1[1])) * cast(u64, ((arg1[1]) * 0x2)));
    const x64 = (cast(u64, (arg1[0])) * cast(u64, x3));
    const x65 = (cast(u64, (arg1[0])) * cast(u64, x6));
    const x66 = (cast(u64, (arg1[0])) * cast(u64, x9));
    const x67 = (cast(u64, (arg1[0])) * cast(u64, x12));
    const x68 = (cast(u64, (arg1[0])) * cast(u64, x14));
    const x69 = (cast(u64, (arg1[0])) * cast(u64, x15));
    const x70 = (cast(u64, (arg1[0])) * cast(u64, x16));
    const x71 = (cast(u64, (arg1[0])) * cast(u64, x17));
    const x72 = (cast(u64, (arg1[0])) * cast(u64, x18));
    const x73 = (cast(u64, (arg1[0])) * cast(u64, (arg1[0])));
    const x74 = (x73 + (x55 + (x48 + (x42 + (x37 + x33)))));
    const x75 = (x74 >> 26);
    const x76 = cast(u32, (x74 & cast(u64, 0x3ffffff)));
    const x77 = (x64 + (x56 + (x49 + (x43 + x38))));
    const x78 = (x65 + (x57 + (x50 + (x44 + (x39 + x19)))));
    const x79 = (x66 + (x58 + (x51 + (x45 + x20))));
    const x80 = (x67 + (x59 + (x52 + (x46 + (x22 + x21)))));
    const x81 = (x68 + (x60 + (x53 + (x25 + x23))));
    const x82 = (x69 + (x61 + (x54 + (x29 + (x26 + x24)))));
    const x83 = (x70 + (x62 + (x34 + (x30 + x27))));
    const x84 = (x71 + (x63 + (x40 + (x35 + (x31 + x28)))));
    const x85 = (x72 + (x47 + (x41 + (x36 + x32))));
    const x86 = (x75 + x85);
    const x87 = (x86 >> 25);
    const x88 = cast(u32, (x86 & cast(u64, 0x1ffffff)));
    const x89 = (x87 + x84);
    const x90 = (x89 >> 26);
    const x91 = cast(u32, (x89 & cast(u64, 0x3ffffff)));
    const x92 = (x90 + x83);
    const x93 = (x92 >> 25);
    const x94 = cast(u32, (x92 & cast(u64, 0x1ffffff)));
    const x95 = (x93 + x82);
    const x96 = (x95 >> 26);
    const x97 = cast(u32, (x95 & cast(u64, 0x3ffffff)));
    const x98 = (x96 + x81);
    const x99 = (x98 >> 25);
    const x100 = cast(u32, (x98 & cast(u64, 0x1ffffff)));
    const x101 = (x99 + x80);
    const x102 = (x101 >> 26);
    const x103 = cast(u32, (x101 & cast(u64, 0x3ffffff)));
    const x104 = (x102 + x79);
    const x105 = (x104 >> 25);
    const x106 = cast(u32, (x104 & cast(u64, 0x1ffffff)));
    const x107 = (x105 + x78);
    const x108 = (x107 >> 26);
    const x109 = cast(u32, (x107 & cast(u64, 0x3ffffff)));
    const x110 = (x108 + x77);
    const x111 = (x110 >> 25);
    const x112 = cast(u32, (x110 & cast(u64, 0x1ffffff)));
    const x113 = (x111 * cast(u64, 0x13));
    const x114 = (cast(u64, x76) + x113);
    const x115 = cast(u32, (x114 >> 26));
    const x116 = cast(u32, (x114 & cast(u64, 0x3ffffff)));
    const x117 = (x115 + x88);
    const x118 = cast(u1, (x117 >> 25));
    const x119 = (x117 & 0x1ffffff);
    const x120 = (cast(u32, x118) + x91);
    out1[0] = x116;
    out1[1] = x119;
    out1[2] = x120;
    out1[3] = x94;
    out1[4] = x97;
    out1[5] = x100;
    out1[6] = x103;
    out1[7] = x106;
    out1[8] = x109;
    out1[9] = x112;
}

/// The function carry reduces a field element.
///
/// Postconditions:
///   eval out1 mod m = eval arg1 mod m
///
pub fn carry(out1: *TightFieldElement, arg1: LooseFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (arg1[0]);
    const x2 = ((x1 >> 26) + (arg1[1]));
    const x3 = ((x2 >> 25) + (arg1[2]));
    const x4 = ((x3 >> 26) + (arg1[3]));
    const x5 = ((x4 >> 25) + (arg1[4]));
    const x6 = ((x5 >> 26) + (arg1[5]));
    const x7 = ((x6 >> 25) + (arg1[6]));
    const x8 = ((x7 >> 26) + (arg1[7]));
    const x9 = ((x8 >> 25) + (arg1[8]));
    const x10 = ((x9 >> 26) + (arg1[9]));
    const x11 = ((x1 & 0x3ffffff) + ((x10 >> 25) * 0x13));
    const x12 = (cast(u32, cast(u1, (x11 >> 26))) + (x2 & 0x1ffffff));
    const x13 = (x11 & 0x3ffffff);
    const x14 = (x12 & 0x1ffffff);
    const x15 = (cast(u32, cast(u1, (x12 >> 25))) + (x3 & 0x3ffffff));
    const x16 = (x4 & 0x1ffffff);
    const x17 = (x5 & 0x3ffffff);
    const x18 = (x6 & 0x1ffffff);
    const x19 = (x7 & 0x3ffffff);
    const x20 = (x8 & 0x1ffffff);
    const x21 = (x9 & 0x3ffffff);
    const x22 = (x10 & 0x1ffffff);
    out1[0] = x13;
    out1[1] = x14;
    out1[2] = x15;
    out1[3] = x16;
    out1[4] = x17;
    out1[5] = x18;
    out1[6] = x19;
    out1[7] = x20;
    out1[8] = x21;
    out1[9] = x22;
}

/// The function add adds two field elements.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 + eval arg2) mod m
///
pub fn add(out1: *LooseFieldElement, arg1: TightFieldElement, arg2: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((arg1[0]) + (arg2[0]));
    const x2 = ((arg1[1]) + (arg2[1]));
    const x3 = ((arg1[2]) + (arg2[2]));
    const x4 = ((arg1[3]) + (arg2[3]));
    const x5 = ((arg1[4]) + (arg2[4]));
    const x6 = ((arg1[5]) + (arg2[5]));
    const x7 = ((arg1[6]) + (arg2[6]));
    const x8 = ((arg1[7]) + (arg2[7]));
    const x9 = ((arg1[8]) + (arg2[8]));
    const x10 = ((arg1[9]) + (arg2[9]));
    out1[0] = x1;
    out1[1] = x2;
    out1[2] = x3;
    out1[3] = x4;
    out1[4] = x5;
    out1[5] = x6;
    out1[6] = x7;
    out1[7] = x8;
    out1[8] = x9;
    out1[9] = x10;
}

/// The function sub subtracts two field elements.
///
/// Postconditions:
///   eval out1 mod m = (eval arg1 - eval arg2) mod m
///
pub fn sub(out1: *LooseFieldElement, arg1: TightFieldElement, arg2: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = ((0x7ffffda + (arg1[0])) - (arg2[0]));
    const x2 = ((0x3fffffe + (arg1[1])) - (arg2[1]));
    const x3 = ((0x7fffffe + (arg1[2])) - (arg2[2]));
    const x4 = ((0x3fffffe + (arg1[3])) - (arg2[3]));
    const x5 = ((0x7fffffe + (arg1[4])) - (arg2[4]));
    const x6 = ((0x3fffffe + (arg1[5])) - (arg2[5]));
    const x7 = ((0x7fffffe + (arg1[6])) - (arg2[6]));
    const x8 = ((0x3fffffe + (arg1[7])) - (arg2[7]));
    const x9 = ((0x7fffffe + (arg1[8])) - (arg2[8]));
    const x10 = ((0x3fffffe + (arg1[9])) - (arg2[9]));
    out1[0] = x1;
    out1[1] = x2;
    out1[2] = x3;
    out1[3] = x4;
    out1[4] = x5;
    out1[5] = x6;
    out1[6] = x7;
    out1[7] = x8;
    out1[8] = x9;
    out1[9] = x10;
}

/// The function opp negates a field element.
///
/// Postconditions:
///   eval out1 mod m = -eval arg1 mod m
///
pub fn opp(out1: *LooseFieldElement, arg1: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (0x7ffffda - (arg1[0]));
    const x2 = (0x3fffffe - (arg1[1]));
    const x3 = (0x7fffffe - (arg1[2]));
    const x4 = (0x3fffffe - (arg1[3]));
    const x5 = (0x7fffffe - (arg1[4]));
    const x6 = (0x3fffffe - (arg1[5]));
    const x7 = (0x7fffffe - (arg1[6]));
    const x8 = (0x3fffffe - (arg1[7]));
    const x9 = (0x7fffffe - (arg1[8]));
    const x10 = (0x3fffffe - (arg1[9]));
    out1[0] = x1;
    out1[1] = x2;
    out1[2] = x3;
    out1[3] = x4;
    out1[4] = x5;
    out1[5] = x6;
    out1[6] = x7;
    out1[7] = x8;
    out1[8] = x9;
    out1[9] = x10;
}

/// The function selectznz is a multi-limb conditional select.
///
/// Postconditions:
///   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
pub fn selectznz(out1: *[10]u32, arg1: u1, arg2: [10]u32, arg3: [10]u32) void {
    @setRuntimeSafety(mode == .Debug);

    var x1: u32 = undefined;
    cmovznzU32(&x1, arg1, (arg2[0]), (arg3[0]));
    var x2: u32 = undefined;
    cmovznzU32(&x2, arg1, (arg2[1]), (arg3[1]));
    var x3: u32 = undefined;
    cmovznzU32(&x3, arg1, (arg2[2]), (arg3[2]));
    var x4: u32 = undefined;
    cmovznzU32(&x4, arg1, (arg2[3]), (arg3[3]));
    var x5: u32 = undefined;
    cmovznzU32(&x5, arg1, (arg2[4]), (arg3[4]));
    var x6: u32 = undefined;
    cmovznzU32(&x6, arg1, (arg2[5]), (arg3[5]));
    var x7: u32 = undefined;
    cmovznzU32(&x7, arg1, (arg2[6]), (arg3[6]));
    var x8: u32 = undefined;
    cmovznzU32(&x8, arg1, (arg2[7]), (arg3[7]));
    var x9: u32 = undefined;
    cmovznzU32(&x9, arg1, (arg2[8]), (arg3[8]));
    var x10: u32 = undefined;
    cmovznzU32(&x10, arg1, (arg2[9]), (arg3[9]));
    out1[0] = x1;
    out1[1] = x2;
    out1[2] = x3;
    out1[3] = x4;
    out1[4] = x5;
    out1[5] = x6;
    out1[6] = x7;
    out1[7] = x8;
    out1[8] = x9;
    out1[9] = x10;
}

/// The function toBytes serializes a field element to bytes in little-endian order.
///
/// Postconditions:
///   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..31]
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
pub fn toBytes(out1: *[32]u8, arg1: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    var x1: u32 = undefined;
    var x2: u1 = undefined;
    subborrowxU26(&x1, &x2, 0x0, (arg1[0]), 0x3ffffed);
    var x3: u32 = undefined;
    var x4: u1 = undefined;
    subborrowxU25(&x3, &x4, x2, (arg1[1]), 0x1ffffff);
    var x5: u32 = undefined;
    var x6: u1 = undefined;
    subborrowxU26(&x5, &x6, x4, (arg1[2]), 0x3ffffff);
    var x7: u32 = undefined;
    var x8: u1 = undefined;
    subborrowxU25(&x7, &x8, x6, (arg1[3]), 0x1ffffff);
    var x9: u32 = undefined;
    var x10: u1 = undefined;
    subborrowxU26(&x9, &x10, x8, (arg1[4]), 0x3ffffff);
    var x11: u32 = undefined;
    var x12: u1 = undefined;
    subborrowxU25(&x11, &x12, x10, (arg1[5]), 0x1ffffff);
    var x13: u32 = undefined;
    var x14: u1 = undefined;
    subborrowxU26(&x13, &x14, x12, (arg1[6]), 0x3ffffff);
    var x15: u32 = undefined;
    var x16: u1 = undefined;
    subborrowxU25(&x15, &x16, x14, (arg1[7]), 0x1ffffff);
    var x17: u32 = undefined;
    var x18: u1 = undefined;
    subborrowxU26(&x17, &x18, x16, (arg1[8]), 0x3ffffff);
    var x19: u32 = undefined;
    var x20: u1 = undefined;
    subborrowxU25(&x19, &x20, x18, (arg1[9]), 0x1ffffff);
    var x21: u32 = undefined;
    cmovznzU32(&x21, x20, cast(u32, 0x0), 0xffffffff);
    var x22: u32 = undefined;
    var x23: u1 = undefined;
    addcarryxU26(&x22, &x23, 0x0, x1, (x21 & 0x3ffffed));
    var x24: u32 = undefined;
    var x25: u1 = undefined;
    addcarryxU25(&x24, &x25, x23, x3, (x21 & 0x1ffffff));
    var x26: u32 = undefined;
    var x27: u1 = undefined;
    addcarryxU26(&x26, &x27, x25, x5, (x21 & 0x3ffffff));
    var x28: u32 = undefined;
    var x29: u1 = undefined;
    addcarryxU25(&x28, &x29, x27, x7, (x21 & 0x1ffffff));
    var x30: u32 = undefined;
    var x31: u1 = undefined;
    addcarryxU26(&x30, &x31, x29, x9, (x21 & 0x3ffffff));
    var x32: u32 = undefined;
    var x33: u1 = undefined;
    addcarryxU25(&x32, &x33, x31, x11, (x21 & 0x1ffffff));
    var x34: u32 = undefined;
    var x35: u1 = undefined;
    addcarryxU26(&x34, &x35, x33, x13, (x21 & 0x3ffffff));
    var x36: u32 = undefined;
    var x37: u1 = undefined;
    addcarryxU25(&x36, &x37, x35, x15, (x21 & 0x1ffffff));
    var x38: u32 = undefined;
    var x39: u1 = undefined;
    addcarryxU26(&x38, &x39, x37, x17, (x21 & 0x3ffffff));
    var x40: u32 = undefined;
    var x41: u1 = undefined;
    addcarryxU25(&x40, &x41, x39, x19, (x21 & 0x1ffffff));
    const x42 = (x40 << 6);
    const x43 = (x38 << 4);
    const x44 = (x36 << 3);
    const x45 = (x34 * cast(u32, 0x2));
    const x46 = (x30 << 6);
    const x47 = (x28 << 5);
    const x48 = (x26 << 3);
    const x49 = (x24 << 2);
    const x50 = cast(u8, (x22 & cast(u32, 0xff)));
    const x51 = (x22 >> 8);
    const x52 = cast(u8, (x51 & cast(u32, 0xff)));
    const x53 = (x51 >> 8);
    const x54 = cast(u8, (x53 & cast(u32, 0xff)));
    const x55 = cast(u8, (x53 >> 8));
    const x56 = (x49 + cast(u32, x55));
    const x57 = cast(u8, (x56 & cast(u32, 0xff)));
    const x58 = (x56 >> 8);
    const x59 = cast(u8, (x58 & cast(u32, 0xff)));
    const x60 = (x58 >> 8);
    const x61 = cast(u8, (x60 & cast(u32, 0xff)));
    const x62 = cast(u8, (x60 >> 8));
    const x63 = (x48 + cast(u32, x62));
    const x64 = cast(u8, (x63 & cast(u32, 0xff)));
    const x65 = (x63 >> 8);
    const x66 = cast(u8, (x65 & cast(u32, 0xff)));
    const x67 = (x65 >> 8);
    const x68 = cast(u8, (x67 & cast(u32, 0xff)));
    const x69 = cast(u8, (x67 >> 8));
    const x70 = (x47 + cast(u32, x69));
    const x71 = cast(u8, (x70 & cast(u32, 0xff)));
    const x72 = (x70 >> 8);
    const x73 = cast(u8, (x72 & cast(u32, 0xff)));
    const x74 = (x72 >> 8);
    const x75 = cast(u8, (x74 & cast(u32, 0xff)));
    const x76 = cast(u8, (x74 >> 8));
    const x77 = (x46 + cast(u32, x76));
    const x78 = cast(u8, (x77 & cast(u32, 0xff)));
    const x79 = (x77 >> 8);
    const x80 = cast(u8, (x79 & cast(u32, 0xff)));
    const x81 = (x79 >> 8);
    const x82 = cast(u8, (x81 & cast(u32, 0xff)));
    const x83 = cast(u8, (x81 >> 8));
    const x84 = cast(u8, (x32 & cast(u32, 0xff)));
    const x85 = (x32 >> 8);
    const x86 = cast(u8, (x85 & cast(u32, 0xff)));
    const x87 = (x85 >> 8);
    const x88 = cast(u8, (x87 & cast(u32, 0xff)));
    const x89 = cast(u1, (x87 >> 8));
    const x90 = (x45 + cast(u32, x89));
    const x91 = cast(u8, (x90 & cast(u32, 0xff)));
    const x92 = (x90 >> 8);
    const x93 = cast(u8, (x92 & cast(u32, 0xff)));
    const x94 = (x92 >> 8);
    const x95 = cast(u8, (x94 & cast(u32, 0xff)));
    const x96 = cast(u8, (x94 >> 8));
    const x97 = (x44 + cast(u32, x96));
    const x98 = cast(u8, (x97 & cast(u32, 0xff)));
    const x99 = (x97 >> 8);
    const x100 = cast(u8, (x99 & cast(u32, 0xff)));
    const x101 = (x99 >> 8);
    const x102 = cast(u8, (x101 & cast(u32, 0xff)));
    const x103 = cast(u8, (x101 >> 8));
    const x104 = (x43 + cast(u32, x103));
    const x105 = cast(u8, (x104 & cast(u32, 0xff)));
    const x106 = (x104 >> 8);
    const x107 = cast(u8, (x106 & cast(u32, 0xff)));
    const x108 = (x106 >> 8);
    const x109 = cast(u8, (x108 & cast(u32, 0xff)));
    const x110 = cast(u8, (x108 >> 8));
    const x111 = (x42 + cast(u32, x110));
    const x112 = cast(u8, (x111 & cast(u32, 0xff)));
    const x113 = (x111 >> 8);
    const x114 = cast(u8, (x113 & cast(u32, 0xff)));
    const x115 = (x113 >> 8);
    const x116 = cast(u8, (x115 & cast(u32, 0xff)));
    const x117 = cast(u8, (x115 >> 8));
    out1[0] = x50;
    out1[1] = x52;
    out1[2] = x54;
    out1[3] = x57;
    out1[4] = x59;
    out1[5] = x61;
    out1[6] = x64;
    out1[7] = x66;
    out1[8] = x68;
    out1[9] = x71;
    out1[10] = x73;
    out1[11] = x75;
    out1[12] = x78;
    out1[13] = x80;
    out1[14] = x82;
    out1[15] = x83;
    out1[16] = x84;
    out1[17] = x86;
    out1[18] = x88;
    out1[19] = x91;
    out1[20] = x93;
    out1[21] = x95;
    out1[22] = x98;
    out1[23] = x100;
    out1[24] = x102;
    out1[25] = x105;
    out1[26] = x107;
    out1[27] = x109;
    out1[28] = x112;
    out1[29] = x114;
    out1[30] = x116;
    out1[31] = x117;
}

/// The function fromBytes deserializes a field element from bytes in little-endian order.
///
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x7f]]
pub fn fromBytes(out1: *TightFieldElement, arg1: [32]u8) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (cast(u32, (arg1[31])) << 18);
    const x2 = (cast(u32, (arg1[30])) << 10);
    const x3 = (cast(u32, (arg1[29])) << 2);
    const x4 = (cast(u32, (arg1[28])) << 20);
    const x5 = (cast(u32, (arg1[27])) << 12);
    const x6 = (cast(u32, (arg1[26])) << 4);
    const x7 = (cast(u32, (arg1[25])) << 21);
    const x8 = (cast(u32, (arg1[24])) << 13);
    const x9 = (cast(u32, (arg1[23])) << 5);
    const x10 = (cast(u32, (arg1[22])) << 23);
    const x11 = (cast(u32, (arg1[21])) << 15);
    const x12 = (cast(u32, (arg1[20])) << 7);
    const x13 = (cast(u32, (arg1[19])) << 24);
    const x14 = (cast(u32, (arg1[18])) << 16);
    const x15 = (cast(u32, (arg1[17])) << 8);
    const x16 = (arg1[16]);
    const x17 = (cast(u32, (arg1[15])) << 18);
    const x18 = (cast(u32, (arg1[14])) << 10);
    const x19 = (cast(u32, (arg1[13])) << 2);
    const x20 = (cast(u32, (arg1[12])) << 19);
    const x21 = (cast(u32, (arg1[11])) << 11);
    const x22 = (cast(u32, (arg1[10])) << 3);
    const x23 = (cast(u32, (arg1[9])) << 21);
    const x24 = (cast(u32, (arg1[8])) << 13);
    const x25 = (cast(u32, (arg1[7])) << 5);
    const x26 = (cast(u32, (arg1[6])) << 22);
    const x27 = (cast(u32, (arg1[5])) << 14);
    const x28 = (cast(u32, (arg1[4])) << 6);
    const x29 = (cast(u32, (arg1[3])) << 24);
    const x30 = (cast(u32, (arg1[2])) << 16);
    const x31 = (cast(u32, (arg1[1])) << 8);
    const x32 = (arg1[0]);
    const x33 = (x31 + cast(u32, x32));
    const x34 = (x30 + x33);
    const x35 = (x29 + x34);
    const x36 = (x35 & 0x3ffffff);
    const x37 = cast(u8, (x35 >> 26));
    const x38 = (x28 + cast(u32, x37));
    const x39 = (x27 + x38);
    const x40 = (x26 + x39);
    const x41 = (x40 & 0x1ffffff);
    const x42 = cast(u8, (x40 >> 25));
    const x43 = (x25 + cast(u32, x42));
    const x44 = (x24 + x43);
    const x45 = (x23 + x44);
    const x46 = (x45 & 0x3ffffff);
    const x47 = cast(u8, (x45 >> 26));
    const x48 = (x22 + cast(u32, x47));
    const x49 = (x21 + x48);
    const x50 = (x20 + x49);
    const x51 = (x50 & 0x1ffffff);
    const x52 = cast(u8, (x50 >> 25));
    const x53 = (x19 + cast(u32, x52));
    const x54 = (x18 + x53);
    const x55 = (x17 + x54);
    const x56 = (x15 + cast(u32, x16));
    const x57 = (x14 + x56);
    const x58 = (x13 + x57);
    const x59 = (x58 & 0x1ffffff);
    const x60 = cast(u8, (x58 >> 25));
    const x61 = (x12 + cast(u32, x60));
    const x62 = (x11 + x61);
    const x63 = (x10 + x62);
    const x64 = (x63 & 0x3ffffff);
    const x65 = cast(u8, (x63 >> 26));
    const x66 = (x9 + cast(u32, x65));
    const x67 = (x8 + x66);
    const x68 = (x7 + x67);
    const x69 = (x68 & 0x1ffffff);
    const x70 = cast(u8, (x68 >> 25));
    const x71 = (x6 + cast(u32, x70));
    const x72 = (x5 + x71);
    const x73 = (x4 + x72);
    const x74 = (x73 & 0x3ffffff);
    const x75 = cast(u8, (x73 >> 26));
    const x76 = (x3 + cast(u32, x75));
    const x77 = (x2 + x76);
    const x78 = (x1 + x77);
    out1[0] = x36;
    out1[1] = x41;
    out1[2] = x46;
    out1[3] = x51;
    out1[4] = x55;
    out1[5] = x59;
    out1[6] = x64;
    out1[7] = x69;
    out1[8] = x74;
    out1[9] = x78;
}

/// The function one returns the field element one.
///
/// Postconditions:
///   eval out1 mod m = 1 mod m
///
pub fn one(out1: *TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    out1[0] = 0x1;
    out1[1] = 0x0;
    out1[2] = 0x0;
    out1[3] = 0x0;
    out1[4] = 0x0;
    out1[5] = 0x0;
    out1[6] = 0x0;
    out1[7] = 0x0;
    out1[8] = 0x0;
    out1[9] = 0x0;
}

/// The function relax is the identity function converting from tight field elements to loose field elements.
///
/// Postconditions:
///   out1 = arg1
///
pub fn relax(out1: *LooseFieldElement, arg1: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (arg1[0]);
    const x2 = (arg1[1]);
    const x3 = (arg1[2]);
    const x4 = (arg1[3]);
    const x5 = (arg1[4]);
    const x6 = (arg1[5]);
    const x7 = (arg1[6]);
    const x8 = (arg1[7]);
    const x9 = (arg1[8]);
    const x10 = (arg1[9]);
    out1[0] = x1;
    out1[1] = x2;
    out1[2] = x3;
    out1[3] = x4;
    out1[4] = x5;
    out1[5] = x6;
    out1[6] = x7;
    out1[7] = x8;
    out1[8] = x9;
    out1[9] = x10;
}

/// The function msat returns the saturated (signed) representation of the prime modulus.
///
/// Postconditions:
///   twos_complement_eval out1 = m
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
pub fn msat(out1: *[9]u32) void {
    @setRuntimeSafety(mode == .Debug);

    out1[0] = 0xffffffed;
    out1[1] = 0xffffffff;
    out1[2] = 0xffffffff;
    out1[3] = 0xffffffff;
    out1[4] = 0xffffffff;
    out1[5] = 0xffffffff;
    out1[6] = 0xffffffff;
    out1[7] = 0x7fffffff;
    out1[8] = cast(u32, 0x0);
}

/// The function satFromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
///
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
pub fn satFromBytes(out1: *[9]u32, arg1: [32]u8) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (cast(u32, (arg1[31])) << 24);
    const x2 = (cast(u32, (arg1[30])) << 16);
    const x3 = (cast(u32, (arg1[29])) << 8);
    const x4 = (arg1[28]);
    const x5 = (cast(u32, (arg1[27])) << 24);
    const x6 = (cast(u32, (arg1[26])) << 16);
    const x7 = (cast(u32, (arg1[25])) << 8);
    const x8 = (arg1[24]);
    const x9 = (cast(u32, (arg1[23])) << 24);
    const x10 = (cast(u32, (arg1[22])) << 16);
    const x11 = (cast(u32, (arg1[21])) << 8);
    const x12 = (arg1[20]);
    const x13 = (cast(u32, (arg1[19])) << 24);
    const x14 = (cast(u32, (arg1[18])) << 16);
    const x15 = (cast(u32, (arg1[17])) << 8);
    const x16 = (arg1[16]);
    const x17 = (cast(u32, (arg1[15])) << 24);
    const x18 = (cast(u32, (arg1[14])) << 16);
    const x19 = (cast(u32, (arg1[13])) << 8);
    const x20 = (arg1[12]);
    const x21 = (cast(u32, (arg1[11])) << 24);
    const x22 = (cast(u32, (arg1[10])) << 16);
    const x23 = (cast(u32, (arg1[9])) << 8);
    const x24 = (arg1[8]);
    const x25 = (cast(u32, (arg1[7])) << 24);
    const x26 = (cast(u32, (arg1[6])) << 16);
    const x27 = (cast(u32, (arg1[5])) << 8);
    const x28 = (arg1[4]);
    const x29 = (cast(u32, (arg1[3])) << 24);
    const x30 = (cast(u32, (arg1[2])) << 16);
    const x31 = (cast(u32, (arg1[1])) << 8);
    const x32 = (arg1[0]);
    const x33 = (x31 + cast(u32, x32));
    const x34 = (x30 + x33);
    const x35 = (x29 + x34);
    const x36 = (x27 + cast(u32, x28));
    const x37 = (x26 + x36);
    const x38 = (x25 + x37);
    const x39 = (x23 + cast(u32, x24));
    const x40 = (x22 + x39);
    const x41 = (x21 + x40);
    const x42 = (x19 + cast(u32, x20));
    const x43 = (x18 + x42);
    const x44 = (x17 + x43);
    const x45 = (x15 + cast(u32, x16));
    const x46 = (x14 + x45);
    const x47 = (x13 + x46);
    const x48 = (x11 + cast(u32, x12));
    const x49 = (x10 + x48);
    const x50 = (x9 + x49);
    const x51 = (x7 + cast(u32, x8));
    const x52 = (x6 + x51);
    const x53 = (x5 + x52);
    const x54 = (x3 + cast(u32, x4));
    const x55 = (x2 + x54);
    const x56 = (x1 + x55);
    out1[0] = x35;
    out1[1] = x38;
    out1[2] = x41;
    out1[3] = x44;
    out1[4] = x47;
    out1[5] = x50;
    out1[6] = x53;
    out1[7] = x56;
    out1[8] = cast(u32, 0x0);
}

/// The function divstep computes a divstep.
///
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
///   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
///   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
///   eval out4 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval arg5) mod m else (2 * eval arg4) mod m)
///   eval out5 mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval arg4 - eval arg4) mod m else (eval arg5 + (twos_complement_eval arg3 mod 2) * eval arg4) mod m)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffff]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffff]
///   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   out3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
pub fn divstep(out1: *u32, out2: *[9]u32, out3: *[9]u32, out4: *TightFieldElement, out5: *TightFieldElement, arg1: u32, arg2: [9]u32, arg3: [9]u32, arg4: TightFieldElement, arg5: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    var x1: u32 = undefined;
    var x2: u1 = undefined;
    addcarryxU32(&x1, &x2, 0x0, (~arg1), cast(u32, 0x1));
    const x3 = (cast(u1, (x1 >> 31)) & cast(u1, ((arg3[0]) & cast(u32, 0x1))));
    var x4: u32 = undefined;
    var x5: u1 = undefined;
    addcarryxU32(&x4, &x5, 0x0, (~arg1), cast(u32, 0x1));
    var x6: u32 = undefined;
    cmovznzU32(&x6, x3, arg1, x4);
    var x7: u32 = undefined;
    cmovznzU32(&x7, x3, (arg2[0]), (arg3[0]));
    var x8: u32 = undefined;
    cmovznzU32(&x8, x3, (arg2[1]), (arg3[1]));
    var x9: u32 = undefined;
    cmovznzU32(&x9, x3, (arg2[2]), (arg3[2]));
    var x10: u32 = undefined;
    cmovznzU32(&x10, x3, (arg2[3]), (arg3[3]));
    var x11: u32 = undefined;
    cmovznzU32(&x11, x3, (arg2[4]), (arg3[4]));
    var x12: u32 = undefined;
    cmovznzU32(&x12, x3, (arg2[5]), (arg3[5]));
    var x13: u32 = undefined;
    cmovznzU32(&x13, x3, (arg2[6]), (arg3[6]));
    var x14: u32 = undefined;
    cmovznzU32(&x14, x3, (arg2[7]), (arg3[7]));
    var x15: u32 = undefined;
    cmovznzU32(&x15, x3, (arg2[8]), (arg3[8]));
    var x16: u32 = undefined;
    var x17: u1 = undefined;
    addcarryxU32(&x16, &x17, 0x0, cast(u32, 0x1), (~(arg2[0])));
    var x18: u32 = undefined;
    var x19: u1 = undefined;
    addcarryxU32(&x18, &x19, x17, cast(u32, 0x0), (~(arg2[1])));
    var x20: u32 = undefined;
    var x21: u1 = undefined;
    addcarryxU32(&x20, &x21, x19, cast(u32, 0x0), (~(arg2[2])));
    var x22: u32 = undefined;
    var x23: u1 = undefined;
    addcarryxU32(&x22, &x23, x21, cast(u32, 0x0), (~(arg2[3])));
    var x24: u32 = undefined;
    var x25: u1 = undefined;
    addcarryxU32(&x24, &x25, x23, cast(u32, 0x0), (~(arg2[4])));
    var x26: u32 = undefined;
    var x27: u1 = undefined;
    addcarryxU32(&x26, &x27, x25, cast(u32, 0x0), (~(arg2[5])));
    var x28: u32 = undefined;
    var x29: u1 = undefined;
    addcarryxU32(&x28, &x29, x27, cast(u32, 0x0), (~(arg2[6])));
    var x30: u32 = undefined;
    var x31: u1 = undefined;
    addcarryxU32(&x30, &x31, x29, cast(u32, 0x0), (~(arg2[7])));
    var x32: u32 = undefined;
    var x33: u1 = undefined;
    addcarryxU32(&x32, &x33, x31, cast(u32, 0x0), (~(arg2[8])));
    var x34: u32 = undefined;
    cmovznzU32(&x34, x3, (arg3[0]), x16);
    var x35: u32 = undefined;
    cmovznzU32(&x35, x3, (arg3[1]), x18);
    var x36: u32 = undefined;
    cmovznzU32(&x36, x3, (arg3[2]), x20);
    var x37: u32 = undefined;
    cmovznzU32(&x37, x3, (arg3[3]), x22);
    var x38: u32 = undefined;
    cmovznzU32(&x38, x3, (arg3[4]), x24);
    var x39: u32 = undefined;
    cmovznzU32(&x39, x3, (arg3[5]), x26);
    var x40: u32 = undefined;
    cmovznzU32(&x40, x3, (arg3[6]), x28);
    var x41: u32 = undefined;
    cmovznzU32(&x41, x3, (arg3[7]), x30);
    var x42: u32 = undefined;
    cmovznzU32(&x42, x3, (arg3[8]), x32);
    var x43: u32 = undefined;
    cmovznzU32(&x43, x3, (arg4[0]), (arg5[0]));
    var x44: u32 = undefined;
    cmovznzU32(&x44, x3, (arg4[1]), (arg5[1]));
    var x45: u32 = undefined;
    cmovznzU32(&x45, x3, (arg4[2]), (arg5[2]));
    var x46: u32 = undefined;
    cmovznzU32(&x46, x3, (arg4[3]), (arg5[3]));
    var x47: u32 = undefined;
    cmovznzU32(&x47, x3, (arg4[4]), (arg5[4]));
    var x48: u32 = undefined;
    cmovznzU32(&x48, x3, (arg4[5]), (arg5[5]));
    var x49: u32 = undefined;
    cmovznzU32(&x49, x3, (arg4[6]), (arg5[6]));
    var x50: u32 = undefined;
    cmovznzU32(&x50, x3, (arg4[7]), (arg5[7]));
    var x51: u32 = undefined;
    cmovznzU32(&x51, x3, (arg4[8]), (arg5[8]));
    var x52: u32 = undefined;
    cmovznzU32(&x52, x3, (arg4[9]), (arg5[9]));
    const x53 = (x43 + x43);
    const x54 = (x53 >> 26);
    const x55 = (x53 & 0x3ffffff);
    const x56 = (x52 + x52);
    const x57 = (x51 + x51);
    const x58 = (x50 + x50);
    const x59 = (x49 + x49);
    const x60 = (x48 + x48);
    const x61 = (x47 + x47);
    const x62 = (x46 + x46);
    const x63 = (x45 + x45);
    const x64 = (x44 + x44);
    const x65 = (x54 + x64);
    const x66 = (x65 >> 25);
    const x67 = (x65 & 0x1ffffff);
    const x68 = (x66 + x63);
    const x69 = (x68 >> 26);
    const x70 = (x68 & 0x3ffffff);
    const x71 = (x69 + x62);
    const x72 = (x71 >> 25);
    const x73 = (x71 & 0x1ffffff);
    const x74 = (x72 + x61);
    const x75 = (x74 >> 26);
    const x76 = (x74 & 0x3ffffff);
    const x77 = (x75 + x60);
    const x78 = (x77 >> 25);
    const x79 = (x77 & 0x1ffffff);
    const x80 = (x78 + x59);
    const x81 = (x80 >> 26);
    const x82 = (x80 & 0x3ffffff);
    const x83 = (x81 + x58);
    const x84 = (x83 >> 25);
    const x85 = (x83 & 0x1ffffff);
    const x86 = (x84 + x57);
    const x87 = (x86 >> 26);
    const x88 = (x86 & 0x3ffffff);
    const x89 = (x87 + x56);
    const x90 = (x89 >> 25);
    const x91 = (x89 & 0x1ffffff);
    const x92 = (x90 * 0x13);
    const x93 = (x55 + x92);
    const x94 = cast(u1, (x93 >> 26));
    const x95 = (x93 & 0x3ffffff);
    const x96 = (cast(u32, x94) + x67);
    const x97 = cast(u1, (x96 >> 25));
    const x98 = (x96 & 0x1ffffff);
    const x99 = (cast(u32, x97) + x70);
    const x100 = (arg4[9]);
    const x101 = (arg4[8]);
    const x102 = (arg4[7]);
    const x103 = (arg4[6]);
    const x104 = (arg4[5]);
    const x105 = (arg4[4]);
    const x106 = (arg4[3]);
    const x107 = (arg4[2]);
    const x108 = (arg4[1]);
    const x109 = (arg4[0]);
    const x110 = (0x7ffffda - x109);
    const x111 = (0x3fffffe - x108);
    const x112 = (0x7fffffe - x107);
    const x113 = (0x3fffffe - x106);
    const x114 = (0x7fffffe - x105);
    const x115 = (0x3fffffe - x104);
    const x116 = (0x7fffffe - x103);
    const x117 = (0x3fffffe - x102);
    const x118 = (0x7fffffe - x101);
    const x119 = (0x3fffffe - x100);
    const x120 = cast(u1, (x110 >> 26));
    const x121 = (x110 & 0x3ffffff);
    const x122 = (cast(u32, x120) + x111);
    const x123 = cast(u1, (x122 >> 25));
    const x124 = (x122 & 0x1ffffff);
    const x125 = (cast(u32, x123) + x112);
    const x126 = cast(u1, (x125 >> 26));
    const x127 = (x125 & 0x3ffffff);
    const x128 = (cast(u32, x126) + x113);
    const x129 = cast(u1, (x128 >> 25));
    const x130 = (x128 & 0x1ffffff);
    const x131 = (cast(u32, x129) + x114);
    const x132 = cast(u1, (x131 >> 26));
    const x133 = (x131 & 0x3ffffff);
    const x134 = (cast(u32, x132) + x115);
    const x135 = cast(u1, (x134 >> 25));
    const x136 = (x134 & 0x1ffffff);
    const x137 = (cast(u32, x135) + x116);
    const x138 = cast(u1, (x137 >> 26));
    const x139 = (x137 & 0x3ffffff);
    const x140 = (cast(u32, x138) + x117);
    const x141 = cast(u1, (x140 >> 25));
    const x142 = (x140 & 0x1ffffff);
    const x143 = (cast(u32, x141) + x118);
    const x144 = cast(u1, (x143 >> 26));
    const x145 = (x143 & 0x3ffffff);
    const x146 = (cast(u32, x144) + x119);
    const x147 = cast(u1, (x146 >> 25));
    const x148 = (x146 & 0x1ffffff);
    const x149 = (cast(u32, x147) * 0x13);
    const x150 = (x121 + x149);
    const x151 = cast(u1, (x150 >> 26));
    const x152 = (x150 & 0x3ffffff);
    const x153 = (cast(u32, x151) + x124);
    const x154 = cast(u1, (x153 >> 25));
    const x155 = (x153 & 0x1ffffff);
    const x156 = (cast(u32, x154) + x127);
    var x157: u32 = undefined;
    cmovznzU32(&x157, x3, (arg5[0]), x152);
    var x158: u32 = undefined;
    cmovznzU32(&x158, x3, (arg5[1]), x155);
    var x159: u32 = undefined;
    cmovznzU32(&x159, x3, (arg5[2]), x156);
    var x160: u32 = undefined;
    cmovznzU32(&x160, x3, (arg5[3]), x130);
    var x161: u32 = undefined;
    cmovznzU32(&x161, x3, (arg5[4]), x133);
    var x162: u32 = undefined;
    cmovznzU32(&x162, x3, (arg5[5]), x136);
    var x163: u32 = undefined;
    cmovznzU32(&x163, x3, (arg5[6]), x139);
    var x164: u32 = undefined;
    cmovznzU32(&x164, x3, (arg5[7]), x142);
    var x165: u32 = undefined;
    cmovznzU32(&x165, x3, (arg5[8]), x145);
    var x166: u32 = undefined;
    cmovznzU32(&x166, x3, (arg5[9]), x148);
    const x167 = cast(u1, (x34 & cast(u32, 0x1)));
    var x168: u32 = undefined;
    cmovznzU32(&x168, x167, cast(u32, 0x0), x7);
    var x169: u32 = undefined;
    cmovznzU32(&x169, x167, cast(u32, 0x0), x8);
    var x170: u32 = undefined;
    cmovznzU32(&x170, x167, cast(u32, 0x0), x9);
    var x171: u32 = undefined;
    cmovznzU32(&x171, x167, cast(u32, 0x0), x10);
    var x172: u32 = undefined;
    cmovznzU32(&x172, x167, cast(u32, 0x0), x11);
    var x173: u32 = undefined;
    cmovznzU32(&x173, x167, cast(u32, 0x0), x12);
    var x174: u32 = undefined;
    cmovznzU32(&x174, x167, cast(u32, 0x0), x13);
    var x175: u32 = undefined;
    cmovznzU32(&x175, x167, cast(u32, 0x0), x14);
    var x176: u32 = undefined;
    cmovznzU32(&x176, x167, cast(u32, 0x0), x15);
    var x177: u32 = undefined;
    var x178: u1 = undefined;
    addcarryxU32(&x177, &x178, 0x0, x34, x168);
    var x179: u32 = undefined;
    var x180: u1 = undefined;
    addcarryxU32(&x179, &x180, x178, x35, x169);
    var x181: u32 = undefined;
    var x182: u1 = undefined;
    addcarryxU32(&x181, &x182, x180, x36, x170);
    var x183: u32 = undefined;
    var x184: u1 = undefined;
    addcarryxU32(&x183, &x184, x182, x37, x171);
    var x185: u32 = undefined;
    var x186: u1 = undefined;
    addcarryxU32(&x185, &x186, x184, x38, x172);
    var x187: u32 = undefined;
    var x188: u1 = undefined;
    addcarryxU32(&x187, &x188, x186, x39, x173);
    var x189: u32 = undefined;
    var x190: u1 = undefined;
    addcarryxU32(&x189, &x190, x188, x40, x174);
    var x191: u32 = undefined;
    var x192: u1 = undefined;
    addcarryxU32(&x191, &x192, x190, x41, x175);
    var x193: u32 = undefined;
    var x194: u1 = undefined;
    addcarryxU32(&x193, &x194, x192, x42, x176);
    var x195: u32 = undefined;
    cmovznzU32(&x195, x167, cast(u32, 0x0), x43);
    var x196: u32 = undefined;
    cmovznzU32(&x196, x167, cast(u32, 0x0), x44);
    var x197: u32 = undefined;
    cmovznzU32(&x197, x167, cast(u32, 0x0), x45);
    var x198: u32 = undefined;
    cmovznzU32(&x198, x167, cast(u32, 0x0), x46);
    var x199: u32 = undefined;
    cmovznzU32(&x199, x167, cast(u32, 0x0), x47);
    var x200: u32 = undefined;
    cmovznzU32(&x200, x167, cast(u32, 0x0), x48);
    var x201: u32 = undefined;
    cmovznzU32(&x201, x167, cast(u32, 0x0), x49);
    var x202: u32 = undefined;
    cmovznzU32(&x202, x167, cast(u32, 0x0), x50);
    var x203: u32 = undefined;
    cmovznzU32(&x203, x167, cast(u32, 0x0), x51);
    var x204: u32 = undefined;
    cmovznzU32(&x204, x167, cast(u32, 0x0), x52);
    const x205 = (x157 + x195);
    const x206 = (x205 >> 26);
    const x207 = (x205 & 0x3ffffff);
    const x208 = (x166 + x204);
    const x209 = (x165 + x203);
    const x210 = (x164 + x202);
    const x211 = (x163 + x201);
    const x212 = (x162 + x200);
    const x213 = (x161 + x199);
    const x214 = (x160 + x198);
    const x215 = (x159 + x197);
    const x216 = (x158 + x196);
    const x217 = (x206 + x216);
    const x218 = (x217 >> 25);
    const x219 = (x217 & 0x1ffffff);
    const x220 = (x218 + x215);
    const x221 = (x220 >> 26);
    const x222 = (x220 & 0x3ffffff);
    const x223 = (x221 + x214);
    const x224 = (x223 >> 25);
    const x225 = (x223 & 0x1ffffff);
    const x226 = (x224 + x213);
    const x227 = (x226 >> 26);
    const x228 = (x226 & 0x3ffffff);
    const x229 = (x227 + x212);
    const x230 = (x229 >> 25);
    const x231 = (x229 & 0x1ffffff);
    const x232 = (x230 + x211);
    const x233 = (x232 >> 26);
    const x234 = (x232 & 0x3ffffff);
    const x235 = (x233 + x210);
    const x236 = (x235 >> 25);
    const x237 = (x235 & 0x1ffffff);
    const x238 = (x236 + x209);
    const x239 = (x238 >> 26);
    const x240 = (x238 & 0x3ffffff);
    const x241 = (x239 + x208);
    const x242 = (x241 >> 25);
    const x243 = (x241 & 0x1ffffff);
    const x244 = (x242 * 0x13);
    const x245 = (x207 + x244);
    const x246 = cast(u1, (x245 >> 26));
    const x247 = (x245 & 0x3ffffff);
    const x248 = (cast(u32, x246) + x219);
    const x249 = cast(u1, (x248 >> 25));
    const x250 = (x248 & 0x1ffffff);
    const x251 = (cast(u32, x249) + x222);
    var x252: u32 = undefined;
    var x253: u1 = undefined;
    addcarryxU32(&x252, &x253, 0x0, x6, cast(u32, 0x1));
    const x254 = ((x177 >> 1) | ((x179 << 31) & 0xffffffff));
    const x255 = ((x179 >> 1) | ((x181 << 31) & 0xffffffff));
    const x256 = ((x181 >> 1) | ((x183 << 31) & 0xffffffff));
    const x257 = ((x183 >> 1) | ((x185 << 31) & 0xffffffff));
    const x258 = ((x185 >> 1) | ((x187 << 31) & 0xffffffff));
    const x259 = ((x187 >> 1) | ((x189 << 31) & 0xffffffff));
    const x260 = ((x189 >> 1) | ((x191 << 31) & 0xffffffff));
    const x261 = ((x191 >> 1) | ((x193 << 31) & 0xffffffff));
    const x262 = ((x193 & 0x80000000) | (x193 >> 1));
    out1.* = x252;
    out2[0] = x7;
    out2[1] = x8;
    out2[2] = x9;
    out2[3] = x10;
    out2[4] = x11;
    out2[5] = x12;
    out2[6] = x13;
    out2[7] = x14;
    out2[8] = x15;
    out3[0] = x254;
    out3[1] = x255;
    out3[2] = x256;
    out3[3] = x257;
    out3[4] = x258;
    out3[5] = x259;
    out3[6] = x260;
    out3[7] = x261;
    out3[8] = x262;
    out4[0] = x95;
    out4[1] = x98;
    out4[2] = x99;
    out4[3] = x73;
    out4[4] = x76;
    out4[5] = x79;
    out4[6] = x82;
    out4[7] = x85;
    out4[8] = x88;
    out4[9] = x91;
    out5[0] = x247;
    out5[1] = x250;
    out5[2] = x251;
    out5[3] = x225;
    out5[4] = x228;
    out5[5] = x231;
    out5[6] = x234;
    out5[7] = x237;
    out5[8] = x240;
    out5[9] = x243;
}

/// The function divstepPrecomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
pub fn divstepPrecomp(out1: *TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    out1[0] = 0x938054;
    out1[1] = 0x55b1b2;
    out1[2] = 0x82ee0c;
    out1[3] = 0x1b28459;
    out1[4] = 0xa54469;
    out1[5] = 0x1351c67;
    out1[6] = 0x3b3b619;
    out1[7] = 0x7acb1c;
    out1[8] = 0x2c1db59;
    out1[9] = 0xb66f98;
}

/// The function jumpdivstepPrecomp returns the precomputed value for the jump-version of Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval out1 = ⌊(m - 1) / 2⌋^(if (log2 m) + 1 < 46 then ⌊(49 * ((log2 m) + 1) + 80) / 17⌋ else ⌊(49 * ((log2 m) + 1) + 57) / 17⌋)
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
pub fn jumpdivstepPrecomp(out1: *[10]u32) void {
    @setRuntimeSafety(mode == .Debug);

    out1[0] = 0x6c8937;
    out1[1] = 0x1c1855b;
    out1[2] = 0x116482e;
    out1[3] = 0x8d3b28;
    out1[4] = 0x319ca54;
    out1[5] = 0xc33351;
    out1[6] = 0x2c73b3b;
    out1[7] = 0x16b27ac;
    out1[8] = 0x3e62c1d;
    out1[9] = 0x1b8b66;
}

/// The function outerLoopBody computes the body of the outer loop in BY-inversion (jumpdivstep version).
///
/// Postconditions:
///   eval arg1 = eval arg2
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
///   out2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
pub fn outerLoopBody(out1: *[9]u32, out2: *[9]u32, out3: *TightFieldElement, out4: *TightFieldElement, arg1: [9]u32, arg2: [9]u32, arg3: TightFieldElement, arg4: TightFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    var x1: u32 = undefined;
    cmovznzU32(&x1, cast(u1, ((arg2[0]) & cast(u32, 0x1))), cast(u32, 0x1), 0xffffffff);
    var x2: u32 = undefined;
    cmovznzU32(&x2, cast(u1, ((arg2[0]) & cast(u32, 0x1))), (arg1[0]), (arg2[0]));
    var x3: u32 = undefined;
    cmovznzU32(&x3, cast(u1, ((arg2[0]) & cast(u32, 0x1))), (arg2[0]), cast(u32, ((cast(u64, (~(arg1[0]))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x4: u1 = undefined;
    cmovznzU1(&x4, cast(u1, ((arg2[0]) & cast(u32, 0x1))), 0x1, 0x0);
    var x5: u1 = undefined;
    cmovznzU1(&x5, cast(u1, ((arg2[0]) & cast(u32, 0x1))), 0x0, 0x1);
    var x6: u32 = undefined;
    cmovznzU32(&x6, cast(u1, ((arg2[0]) & cast(u32, 0x1))), cast(u32, 0x0), 0xffffffff);
    var x7: u1 = undefined;
    cmovznzU1(&x7, cast(u1, ((arg2[0]) & cast(u32, 0x1))), 0x1, 0x0);
    var x8: u32 = undefined;
    cmovznzU32(&x8, cast(u1, (x3 & cast(u32, 0x1))), cast(u32, 0x0), x2);
    var x9: u1 = undefined;
    cmovznzU1(&x9, cast(u1, (x3 & cast(u32, 0x1))), 0x0, x4);
    var x10: u1 = undefined;
    cmovznzU1(&x10, cast(u1, (x3 & cast(u32, 0x1))), 0x0, x5);
    const x11 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x1)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x12: u32 = undefined;
    cmovznzU32(&x12, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x1)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x1)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x13: u32 = undefined;
    cmovznzU32(&x13, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x2, ((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)));
    var x14: u32 = undefined;
    cmovznzU32(&x14, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x2)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x15: u32 = undefined;
    cmovznzU32(&x15, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), (cast(u32, x4) + cast(u32, x4)), cast(u32, ((cast(u64, x6) + cast(u64, x9)) & cast(u64, 0xffffffff))));
    var x16: u32 = undefined;
    cmovznzU32(&x16, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), (cast(u32, x5) + cast(u32, x5)), (cast(u32, x7) + cast(u32, x10)));
    var x17: u32 = undefined;
    cmovznzU32(&x17, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x6) + cast(u64, x9)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~(cast(u32, x4) + cast(u32, x4)))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x18: u32 = undefined;
    cmovznzU32(&x18, (cast(u1, (x11 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x3) + cast(u64, x8)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), (cast(u32, x7) + cast(u32, x10)), cast(u32, ((cast(u64, (~(cast(u32, x5) + cast(u32, x5)))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x19: u32 = undefined;
    cmovznzU32(&x19, cast(u1, (x14 & cast(u32, 0x1))), cast(u32, 0x0), x13);
    var x20: u32 = undefined;
    cmovznzU32(&x20, cast(u1, (x14 & cast(u32, 0x1))), cast(u32, 0x0), x15);
    var x21: u32 = undefined;
    cmovznzU32(&x21, cast(u1, (x14 & cast(u32, 0x1))), cast(u32, 0x0), x16);
    const x22 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x12)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x23: u32 = undefined;
    cmovznzU32(&x23, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x12)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x12)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x24: u32 = undefined;
    cmovznzU32(&x24, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x13, ((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)));
    var x25: u32 = undefined;
    cmovznzU32(&x25, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x13)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x26: u32 = undefined;
    cmovznzU32(&x26, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x15) + cast(u64, x15)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x17) + cast(u64, x20)) & cast(u64, 0xffffffff))));
    var x27: u32 = undefined;
    cmovznzU32(&x27, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), (x16 + x16), cast(u32, ((cast(u64, x18) + cast(u64, x21)) & cast(u64, 0xffffffff))));
    var x28: u32 = undefined;
    cmovznzU32(&x28, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x17) + cast(u64, x20)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x15) + cast(u64, x15)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x29: u32 = undefined;
    cmovznzU32(&x29, (cast(u1, (x22 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x14) + cast(u64, x19)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x18) + cast(u64, x21)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~(x16 + x16))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x30: u32 = undefined;
    cmovznzU32(&x30, cast(u1, (x25 & cast(u32, 0x1))), cast(u32, 0x0), x24);
    var x31: u32 = undefined;
    cmovznzU32(&x31, cast(u1, (x25 & cast(u32, 0x1))), cast(u32, 0x0), x26);
    var x32: u32 = undefined;
    cmovznzU32(&x32, cast(u1, (x25 & cast(u32, 0x1))), cast(u32, 0x0), x27);
    const x33 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x23)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x34: u32 = undefined;
    cmovznzU32(&x34, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x23)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x23)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x35: u32 = undefined;
    cmovznzU32(&x35, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x24, ((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)));
    var x36: u32 = undefined;
    cmovznzU32(&x36, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x24)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x37: u32 = undefined;
    cmovznzU32(&x37, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x26) + cast(u64, x26)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x28) + cast(u64, x31)) & cast(u64, 0xffffffff))));
    var x38: u32 = undefined;
    cmovznzU32(&x38, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x27) + cast(u64, x27)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x29) + cast(u64, x32)) & cast(u64, 0xffffffff))));
    var x39: u32 = undefined;
    cmovznzU32(&x39, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x28) + cast(u64, x31)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x26) + cast(u64, x26)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x40: u32 = undefined;
    cmovznzU32(&x40, (cast(u1, (x33 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x25) + cast(u64, x30)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x29) + cast(u64, x32)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x27) + cast(u64, x27)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x41: u32 = undefined;
    cmovznzU32(&x41, cast(u1, (x36 & cast(u32, 0x1))), cast(u32, 0x0), x35);
    var x42: u32 = undefined;
    cmovznzU32(&x42, cast(u1, (x36 & cast(u32, 0x1))), cast(u32, 0x0), x37);
    var x43: u32 = undefined;
    cmovznzU32(&x43, cast(u1, (x36 & cast(u32, 0x1))), cast(u32, 0x0), x38);
    const x44 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x34)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x45: u32 = undefined;
    cmovznzU32(&x45, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x34)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x34)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x46: u32 = undefined;
    cmovznzU32(&x46, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x35, ((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)));
    var x47: u32 = undefined;
    cmovznzU32(&x47, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x35)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x48: u32 = undefined;
    cmovznzU32(&x48, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x37) + cast(u64, x37)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x39) + cast(u64, x42)) & cast(u64, 0xffffffff))));
    var x49: u32 = undefined;
    cmovznzU32(&x49, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x38) + cast(u64, x38)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x40) + cast(u64, x43)) & cast(u64, 0xffffffff))));
    var x50: u32 = undefined;
    cmovznzU32(&x50, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x39) + cast(u64, x42)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x37) + cast(u64, x37)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x51: u32 = undefined;
    cmovznzU32(&x51, (cast(u1, (x44 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x36) + cast(u64, x41)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x40) + cast(u64, x43)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x38) + cast(u64, x38)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x52: u32 = undefined;
    cmovznzU32(&x52, cast(u1, (x47 & cast(u32, 0x1))), cast(u32, 0x0), x46);
    var x53: u32 = undefined;
    cmovznzU32(&x53, cast(u1, (x47 & cast(u32, 0x1))), cast(u32, 0x0), x48);
    var x54: u32 = undefined;
    cmovznzU32(&x54, cast(u1, (x47 & cast(u32, 0x1))), cast(u32, 0x0), x49);
    const x55 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x45)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x56: u32 = undefined;
    cmovznzU32(&x56, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x45)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x45)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x57: u32 = undefined;
    cmovznzU32(&x57, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x46, ((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)));
    var x58: u32 = undefined;
    cmovznzU32(&x58, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x46)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x59: u32 = undefined;
    cmovznzU32(&x59, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x48) + cast(u64, x48)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x50) + cast(u64, x53)) & cast(u64, 0xffffffff))));
    var x60: u32 = undefined;
    cmovznzU32(&x60, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x49) + cast(u64, x49)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x51) + cast(u64, x54)) & cast(u64, 0xffffffff))));
    var x61: u32 = undefined;
    cmovznzU32(&x61, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x50) + cast(u64, x53)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x48) + cast(u64, x48)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x62: u32 = undefined;
    cmovznzU32(&x62, (cast(u1, (x55 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x47) + cast(u64, x52)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x51) + cast(u64, x54)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x49) + cast(u64, x49)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x63: u32 = undefined;
    cmovznzU32(&x63, cast(u1, (x58 & cast(u32, 0x1))), cast(u32, 0x0), x57);
    var x64: u32 = undefined;
    cmovznzU32(&x64, cast(u1, (x58 & cast(u32, 0x1))), cast(u32, 0x0), x59);
    var x65: u32 = undefined;
    cmovznzU32(&x65, cast(u1, (x58 & cast(u32, 0x1))), cast(u32, 0x0), x60);
    const x66 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x56)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x67: u32 = undefined;
    cmovznzU32(&x67, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x56)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x56)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x68: u32 = undefined;
    cmovznzU32(&x68, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x57, ((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)));
    var x69: u32 = undefined;
    cmovznzU32(&x69, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x57)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x70: u32 = undefined;
    cmovznzU32(&x70, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x59) + cast(u64, x59)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x61) + cast(u64, x64)) & cast(u64, 0xffffffff))));
    var x71: u32 = undefined;
    cmovznzU32(&x71, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x60) + cast(u64, x60)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x62) + cast(u64, x65)) & cast(u64, 0xffffffff))));
    var x72: u32 = undefined;
    cmovznzU32(&x72, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x61) + cast(u64, x64)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x59) + cast(u64, x59)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x73: u32 = undefined;
    cmovznzU32(&x73, (cast(u1, (x66 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x58) + cast(u64, x63)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x62) + cast(u64, x65)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x60) + cast(u64, x60)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x74: u32 = undefined;
    cmovznzU32(&x74, cast(u1, (x69 & cast(u32, 0x1))), cast(u32, 0x0), x68);
    var x75: u32 = undefined;
    cmovznzU32(&x75, cast(u1, (x69 & cast(u32, 0x1))), cast(u32, 0x0), x70);
    var x76: u32 = undefined;
    cmovznzU32(&x76, cast(u1, (x69 & cast(u32, 0x1))), cast(u32, 0x0), x71);
    const x77 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x67)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x78: u32 = undefined;
    cmovznzU32(&x78, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x67)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x67)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x79: u32 = undefined;
    cmovznzU32(&x79, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x68, ((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)));
    var x80: u32 = undefined;
    cmovznzU32(&x80, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x68)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x81: u32 = undefined;
    cmovznzU32(&x81, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x70) + cast(u64, x70)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x72) + cast(u64, x75)) & cast(u64, 0xffffffff))));
    var x82: u32 = undefined;
    cmovznzU32(&x82, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x71) + cast(u64, x71)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x73) + cast(u64, x76)) & cast(u64, 0xffffffff))));
    var x83: u32 = undefined;
    cmovznzU32(&x83, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x72) + cast(u64, x75)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x70) + cast(u64, x70)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x84: u32 = undefined;
    cmovznzU32(&x84, (cast(u1, (x77 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x69) + cast(u64, x74)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x73) + cast(u64, x76)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x71) + cast(u64, x71)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x85: u32 = undefined;
    cmovznzU32(&x85, cast(u1, (x80 & cast(u32, 0x1))), cast(u32, 0x0), x79);
    var x86: u32 = undefined;
    cmovznzU32(&x86, cast(u1, (x80 & cast(u32, 0x1))), cast(u32, 0x0), x81);
    var x87: u32 = undefined;
    cmovznzU32(&x87, cast(u1, (x80 & cast(u32, 0x1))), cast(u32, 0x0), x82);
    const x88 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x78)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x89: u32 = undefined;
    cmovznzU32(&x89, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x78)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x78)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x90: u32 = undefined;
    cmovznzU32(&x90, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x79, ((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)));
    var x91: u32 = undefined;
    cmovznzU32(&x91, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x79)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x92: u32 = undefined;
    cmovznzU32(&x92, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x81) + cast(u64, x81)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x83) + cast(u64, x86)) & cast(u64, 0xffffffff))));
    var x93: u32 = undefined;
    cmovznzU32(&x93, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x82) + cast(u64, x82)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x84) + cast(u64, x87)) & cast(u64, 0xffffffff))));
    var x94: u32 = undefined;
    cmovznzU32(&x94, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x83) + cast(u64, x86)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x81) + cast(u64, x81)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x95: u32 = undefined;
    cmovznzU32(&x95, (cast(u1, (x88 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x80) + cast(u64, x85)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x84) + cast(u64, x87)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x82) + cast(u64, x82)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x96: u32 = undefined;
    cmovznzU32(&x96, cast(u1, (x91 & cast(u32, 0x1))), cast(u32, 0x0), x90);
    var x97: u32 = undefined;
    cmovznzU32(&x97, cast(u1, (x91 & cast(u32, 0x1))), cast(u32, 0x0), x92);
    var x98: u32 = undefined;
    cmovznzU32(&x98, cast(u1, (x91 & cast(u32, 0x1))), cast(u32, 0x0), x93);
    const x99 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x89)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x100: u32 = undefined;
    cmovznzU32(&x100, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x89)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x89)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x101: u32 = undefined;
    cmovznzU32(&x101, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x90, ((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)));
    var x102: u32 = undefined;
    cmovznzU32(&x102, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x90)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x103: u32 = undefined;
    cmovznzU32(&x103, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x92) + cast(u64, x92)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x94) + cast(u64, x97)) & cast(u64, 0xffffffff))));
    var x104: u32 = undefined;
    cmovznzU32(&x104, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x93) + cast(u64, x93)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x95) + cast(u64, x98)) & cast(u64, 0xffffffff))));
    var x105: u32 = undefined;
    cmovznzU32(&x105, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x94) + cast(u64, x97)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x92) + cast(u64, x92)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x106: u32 = undefined;
    cmovznzU32(&x106, (cast(u1, (x99 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x91) + cast(u64, x96)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x95) + cast(u64, x98)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x93) + cast(u64, x93)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x107: u32 = undefined;
    cmovznzU32(&x107, cast(u1, (x102 & cast(u32, 0x1))), cast(u32, 0x0), x101);
    var x108: u32 = undefined;
    cmovznzU32(&x108, cast(u1, (x102 & cast(u32, 0x1))), cast(u32, 0x0), x103);
    var x109: u32 = undefined;
    cmovznzU32(&x109, cast(u1, (x102 & cast(u32, 0x1))), cast(u32, 0x0), x104);
    const x110 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x100)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x111: u32 = undefined;
    cmovznzU32(&x111, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x100)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x100)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x112: u32 = undefined;
    cmovznzU32(&x112, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x101, ((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)));
    var x113: u32 = undefined;
    cmovznzU32(&x113, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x101)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x114: u32 = undefined;
    cmovznzU32(&x114, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x103) + cast(u64, x103)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x105) + cast(u64, x108)) & cast(u64, 0xffffffff))));
    var x115: u32 = undefined;
    cmovznzU32(&x115, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x104) + cast(u64, x104)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x106) + cast(u64, x109)) & cast(u64, 0xffffffff))));
    var x116: u32 = undefined;
    cmovznzU32(&x116, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x105) + cast(u64, x108)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x103) + cast(u64, x103)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x117: u32 = undefined;
    cmovznzU32(&x117, (cast(u1, (x110 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x102) + cast(u64, x107)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x106) + cast(u64, x109)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x104) + cast(u64, x104)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x118: u32 = undefined;
    cmovznzU32(&x118, cast(u1, (x113 & cast(u32, 0x1))), cast(u32, 0x0), x112);
    var x119: u32 = undefined;
    cmovznzU32(&x119, cast(u1, (x113 & cast(u32, 0x1))), cast(u32, 0x0), x114);
    var x120: u32 = undefined;
    cmovznzU32(&x120, cast(u1, (x113 & cast(u32, 0x1))), cast(u32, 0x0), x115);
    const x121 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x111)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x122: u32 = undefined;
    cmovznzU32(&x122, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x111)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x111)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x123: u32 = undefined;
    cmovznzU32(&x123, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x112, ((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)));
    var x124: u32 = undefined;
    cmovznzU32(&x124, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x112)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x125: u32 = undefined;
    cmovznzU32(&x125, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x114) + cast(u64, x114)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x116) + cast(u64, x119)) & cast(u64, 0xffffffff))));
    var x126: u32 = undefined;
    cmovznzU32(&x126, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x115) + cast(u64, x115)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x117) + cast(u64, x120)) & cast(u64, 0xffffffff))));
    var x127: u32 = undefined;
    cmovznzU32(&x127, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x116) + cast(u64, x119)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x114) + cast(u64, x114)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x128: u32 = undefined;
    cmovznzU32(&x128, (cast(u1, (x121 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x113) + cast(u64, x118)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x117) + cast(u64, x120)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x115) + cast(u64, x115)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x129: u32 = undefined;
    cmovznzU32(&x129, cast(u1, (x124 & cast(u32, 0x1))), cast(u32, 0x0), x123);
    var x130: u32 = undefined;
    cmovznzU32(&x130, cast(u1, (x124 & cast(u32, 0x1))), cast(u32, 0x0), x125);
    var x131: u32 = undefined;
    cmovznzU32(&x131, cast(u1, (x124 & cast(u32, 0x1))), cast(u32, 0x0), x126);
    const x132 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x122)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x133: u32 = undefined;
    cmovznzU32(&x133, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x122)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x122)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x134: u32 = undefined;
    cmovznzU32(&x134, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x123, ((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)));
    var x135: u32 = undefined;
    cmovznzU32(&x135, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x123)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x136: u32 = undefined;
    cmovznzU32(&x136, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x125) + cast(u64, x125)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x127) + cast(u64, x130)) & cast(u64, 0xffffffff))));
    var x137: u32 = undefined;
    cmovznzU32(&x137, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x126) + cast(u64, x126)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x128) + cast(u64, x131)) & cast(u64, 0xffffffff))));
    var x138: u32 = undefined;
    cmovznzU32(&x138, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x127) + cast(u64, x130)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x125) + cast(u64, x125)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x139: u32 = undefined;
    cmovznzU32(&x139, (cast(u1, (x132 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x124) + cast(u64, x129)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x128) + cast(u64, x131)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x126) + cast(u64, x126)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x140: u32 = undefined;
    cmovznzU32(&x140, cast(u1, (x135 & cast(u32, 0x1))), cast(u32, 0x0), x134);
    var x141: u32 = undefined;
    cmovznzU32(&x141, cast(u1, (x135 & cast(u32, 0x1))), cast(u32, 0x0), x136);
    var x142: u32 = undefined;
    cmovznzU32(&x142, cast(u1, (x135 & cast(u32, 0x1))), cast(u32, 0x0), x137);
    const x143 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x133)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x144: u32 = undefined;
    cmovznzU32(&x144, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x133)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x133)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x145: u32 = undefined;
    cmovznzU32(&x145, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x134, ((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)));
    var x146: u32 = undefined;
    cmovznzU32(&x146, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x134)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x147: u32 = undefined;
    cmovznzU32(&x147, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x136) + cast(u64, x136)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x138) + cast(u64, x141)) & cast(u64, 0xffffffff))));
    var x148: u32 = undefined;
    cmovznzU32(&x148, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x137) + cast(u64, x137)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x139) + cast(u64, x142)) & cast(u64, 0xffffffff))));
    var x149: u32 = undefined;
    cmovznzU32(&x149, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x138) + cast(u64, x141)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x136) + cast(u64, x136)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x150: u32 = undefined;
    cmovznzU32(&x150, (cast(u1, (x143 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x135) + cast(u64, x140)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x139) + cast(u64, x142)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x137) + cast(u64, x137)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x151: u32 = undefined;
    cmovznzU32(&x151, cast(u1, (x146 & cast(u32, 0x1))), cast(u32, 0x0), x145);
    var x152: u32 = undefined;
    cmovznzU32(&x152, cast(u1, (x146 & cast(u32, 0x1))), cast(u32, 0x0), x147);
    var x153: u32 = undefined;
    cmovznzU32(&x153, cast(u1, (x146 & cast(u32, 0x1))), cast(u32, 0x0), x148);
    const x154 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x144)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x155: u32 = undefined;
    cmovznzU32(&x155, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x144)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x144)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x156: u32 = undefined;
    cmovznzU32(&x156, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x145, ((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)));
    var x157: u32 = undefined;
    cmovznzU32(&x157, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x145)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x158: u32 = undefined;
    cmovznzU32(&x158, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x147) + cast(u64, x147)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x149) + cast(u64, x152)) & cast(u64, 0xffffffff))));
    var x159: u32 = undefined;
    cmovznzU32(&x159, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x148) + cast(u64, x148)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x150) + cast(u64, x153)) & cast(u64, 0xffffffff))));
    var x160: u32 = undefined;
    cmovznzU32(&x160, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x149) + cast(u64, x152)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x147) + cast(u64, x147)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x161: u32 = undefined;
    cmovznzU32(&x161, (cast(u1, (x154 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x146) + cast(u64, x151)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x150) + cast(u64, x153)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x148) + cast(u64, x148)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x162: u32 = undefined;
    cmovznzU32(&x162, cast(u1, (x157 & cast(u32, 0x1))), cast(u32, 0x0), x156);
    var x163: u32 = undefined;
    cmovznzU32(&x163, cast(u1, (x157 & cast(u32, 0x1))), cast(u32, 0x0), x158);
    var x164: u32 = undefined;
    cmovznzU32(&x164, cast(u1, (x157 & cast(u32, 0x1))), cast(u32, 0x0), x159);
    const x165 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x155)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x166: u32 = undefined;
    cmovznzU32(&x166, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x155)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x155)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x167: u32 = undefined;
    cmovznzU32(&x167, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x156, ((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)));
    var x168: u32 = undefined;
    cmovznzU32(&x168, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x156)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x169: u32 = undefined;
    cmovznzU32(&x169, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x158) + cast(u64, x158)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x160) + cast(u64, x163)) & cast(u64, 0xffffffff))));
    var x170: u32 = undefined;
    cmovznzU32(&x170, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x159) + cast(u64, x159)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x161) + cast(u64, x164)) & cast(u64, 0xffffffff))));
    var x171: u32 = undefined;
    cmovznzU32(&x171, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x160) + cast(u64, x163)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x158) + cast(u64, x158)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x172: u32 = undefined;
    cmovznzU32(&x172, (cast(u1, (x165 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x157) + cast(u64, x162)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x161) + cast(u64, x164)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x159) + cast(u64, x159)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x173: u32 = undefined;
    cmovznzU32(&x173, cast(u1, (x168 & cast(u32, 0x1))), cast(u32, 0x0), x167);
    var x174: u32 = undefined;
    cmovznzU32(&x174, cast(u1, (x168 & cast(u32, 0x1))), cast(u32, 0x0), x169);
    var x175: u32 = undefined;
    cmovznzU32(&x175, cast(u1, (x168 & cast(u32, 0x1))), cast(u32, 0x0), x170);
    const x176 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x166)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x177: u32 = undefined;
    cmovznzU32(&x177, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x166)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x166)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x178: u32 = undefined;
    cmovznzU32(&x178, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x167, ((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)));
    var x179: u32 = undefined;
    cmovznzU32(&x179, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x167)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x180: u32 = undefined;
    cmovznzU32(&x180, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x169) + cast(u64, x169)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x171) + cast(u64, x174)) & cast(u64, 0xffffffff))));
    var x181: u32 = undefined;
    cmovznzU32(&x181, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x170) + cast(u64, x170)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x172) + cast(u64, x175)) & cast(u64, 0xffffffff))));
    var x182: u32 = undefined;
    cmovznzU32(&x182, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x171) + cast(u64, x174)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x169) + cast(u64, x169)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x183: u32 = undefined;
    cmovznzU32(&x183, (cast(u1, (x176 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x168) + cast(u64, x173)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x172) + cast(u64, x175)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x170) + cast(u64, x170)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x184: u32 = undefined;
    cmovznzU32(&x184, cast(u1, (x179 & cast(u32, 0x1))), cast(u32, 0x0), x178);
    var x185: u32 = undefined;
    cmovznzU32(&x185, cast(u1, (x179 & cast(u32, 0x1))), cast(u32, 0x0), x180);
    var x186: u32 = undefined;
    cmovznzU32(&x186, cast(u1, (x179 & cast(u32, 0x1))), cast(u32, 0x0), x181);
    const x187 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x177)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x188: u32 = undefined;
    cmovznzU32(&x188, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x177)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x177)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x189: u32 = undefined;
    cmovznzU32(&x189, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x178, ((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)));
    var x190: u32 = undefined;
    cmovznzU32(&x190, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x178)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x191: u32 = undefined;
    cmovznzU32(&x191, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x180) + cast(u64, x180)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x182) + cast(u64, x185)) & cast(u64, 0xffffffff))));
    var x192: u32 = undefined;
    cmovznzU32(&x192, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x181) + cast(u64, x181)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x183) + cast(u64, x186)) & cast(u64, 0xffffffff))));
    var x193: u32 = undefined;
    cmovznzU32(&x193, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x182) + cast(u64, x185)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x180) + cast(u64, x180)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x194: u32 = undefined;
    cmovznzU32(&x194, (cast(u1, (x187 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x179) + cast(u64, x184)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x183) + cast(u64, x186)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x181) + cast(u64, x181)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x195: u32 = undefined;
    cmovznzU32(&x195, cast(u1, (x190 & cast(u32, 0x1))), cast(u32, 0x0), x189);
    var x196: u32 = undefined;
    cmovznzU32(&x196, cast(u1, (x190 & cast(u32, 0x1))), cast(u32, 0x0), x191);
    var x197: u32 = undefined;
    cmovznzU32(&x197, cast(u1, (x190 & cast(u32, 0x1))), cast(u32, 0x0), x192);
    const x198 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x188)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x199: u32 = undefined;
    cmovznzU32(&x199, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x188)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x188)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x200: u32 = undefined;
    cmovznzU32(&x200, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x189, ((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)));
    var x201: u32 = undefined;
    cmovznzU32(&x201, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x189)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x202: u32 = undefined;
    cmovznzU32(&x202, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x191) + cast(u64, x191)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x193) + cast(u64, x196)) & cast(u64, 0xffffffff))));
    var x203: u32 = undefined;
    cmovznzU32(&x203, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x192) + cast(u64, x192)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x194) + cast(u64, x197)) & cast(u64, 0xffffffff))));
    var x204: u32 = undefined;
    cmovznzU32(&x204, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x193) + cast(u64, x196)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x191) + cast(u64, x191)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x205: u32 = undefined;
    cmovznzU32(&x205, (cast(u1, (x198 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x190) + cast(u64, x195)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x194) + cast(u64, x197)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x192) + cast(u64, x192)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x206: u32 = undefined;
    cmovznzU32(&x206, cast(u1, (x201 & cast(u32, 0x1))), cast(u32, 0x0), x200);
    var x207: u32 = undefined;
    cmovznzU32(&x207, cast(u1, (x201 & cast(u32, 0x1))), cast(u32, 0x0), x202);
    var x208: u32 = undefined;
    cmovznzU32(&x208, cast(u1, (x201 & cast(u32, 0x1))), cast(u32, 0x0), x203);
    const x209 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x199)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x210: u32 = undefined;
    cmovznzU32(&x210, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x199)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x199)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x211: u32 = undefined;
    cmovznzU32(&x211, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x200, ((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)));
    var x212: u32 = undefined;
    cmovznzU32(&x212, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x200)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x213: u32 = undefined;
    cmovznzU32(&x213, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x202) + cast(u64, x202)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x204) + cast(u64, x207)) & cast(u64, 0xffffffff))));
    var x214: u32 = undefined;
    cmovznzU32(&x214, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x203) + cast(u64, x203)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x205) + cast(u64, x208)) & cast(u64, 0xffffffff))));
    var x215: u32 = undefined;
    cmovznzU32(&x215, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x204) + cast(u64, x207)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x202) + cast(u64, x202)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x216: u32 = undefined;
    cmovznzU32(&x216, (cast(u1, (x209 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x201) + cast(u64, x206)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x205) + cast(u64, x208)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x203) + cast(u64, x203)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x217: u32 = undefined;
    cmovznzU32(&x217, cast(u1, (x212 & cast(u32, 0x1))), cast(u32, 0x0), x211);
    var x218: u32 = undefined;
    cmovznzU32(&x218, cast(u1, (x212 & cast(u32, 0x1))), cast(u32, 0x0), x213);
    var x219: u32 = undefined;
    cmovznzU32(&x219, cast(u1, (x212 & cast(u32, 0x1))), cast(u32, 0x0), x214);
    const x220 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x210)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x221: u32 = undefined;
    cmovznzU32(&x221, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x210)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x210)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x222: u32 = undefined;
    cmovznzU32(&x222, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x211, ((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)));
    var x223: u32 = undefined;
    cmovznzU32(&x223, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x211)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x224: u32 = undefined;
    cmovznzU32(&x224, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x213) + cast(u64, x213)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x215) + cast(u64, x218)) & cast(u64, 0xffffffff))));
    var x225: u32 = undefined;
    cmovznzU32(&x225, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x214) + cast(u64, x214)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x216) + cast(u64, x219)) & cast(u64, 0xffffffff))));
    var x226: u32 = undefined;
    cmovznzU32(&x226, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x215) + cast(u64, x218)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x213) + cast(u64, x213)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x227: u32 = undefined;
    cmovznzU32(&x227, (cast(u1, (x220 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x212) + cast(u64, x217)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x216) + cast(u64, x219)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x214) + cast(u64, x214)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x228: u32 = undefined;
    cmovznzU32(&x228, cast(u1, (x223 & cast(u32, 0x1))), cast(u32, 0x0), x222);
    var x229: u32 = undefined;
    cmovznzU32(&x229, cast(u1, (x223 & cast(u32, 0x1))), cast(u32, 0x0), x224);
    var x230: u32 = undefined;
    cmovznzU32(&x230, cast(u1, (x223 & cast(u32, 0x1))), cast(u32, 0x0), x225);
    const x231 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x221)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x232: u32 = undefined;
    cmovznzU32(&x232, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x221)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x221)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x233: u32 = undefined;
    cmovznzU32(&x233, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x222, ((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)));
    var x234: u32 = undefined;
    cmovznzU32(&x234, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x222)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x235: u32 = undefined;
    cmovznzU32(&x235, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x224) + cast(u64, x224)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x226) + cast(u64, x229)) & cast(u64, 0xffffffff))));
    var x236: u32 = undefined;
    cmovznzU32(&x236, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x225) + cast(u64, x225)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x227) + cast(u64, x230)) & cast(u64, 0xffffffff))));
    var x237: u32 = undefined;
    cmovznzU32(&x237, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x226) + cast(u64, x229)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x224) + cast(u64, x224)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x238: u32 = undefined;
    cmovznzU32(&x238, (cast(u1, (x231 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x223) + cast(u64, x228)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x227) + cast(u64, x230)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x225) + cast(u64, x225)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x239: u32 = undefined;
    cmovznzU32(&x239, cast(u1, (x234 & cast(u32, 0x1))), cast(u32, 0x0), x233);
    var x240: u32 = undefined;
    cmovznzU32(&x240, cast(u1, (x234 & cast(u32, 0x1))), cast(u32, 0x0), x235);
    var x241: u32 = undefined;
    cmovznzU32(&x241, cast(u1, (x234 & cast(u32, 0x1))), cast(u32, 0x0), x236);
    const x242 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x232)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x243: u32 = undefined;
    cmovznzU32(&x243, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x232)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x232)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x244: u32 = undefined;
    cmovznzU32(&x244, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x233, ((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)));
    var x245: u32 = undefined;
    cmovznzU32(&x245, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x233)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x246: u32 = undefined;
    cmovznzU32(&x246, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x235) + cast(u64, x235)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x237) + cast(u64, x240)) & cast(u64, 0xffffffff))));
    var x247: u32 = undefined;
    cmovznzU32(&x247, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x236) + cast(u64, x236)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x238) + cast(u64, x241)) & cast(u64, 0xffffffff))));
    var x248: u32 = undefined;
    cmovznzU32(&x248, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x237) + cast(u64, x240)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x235) + cast(u64, x235)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x249: u32 = undefined;
    cmovznzU32(&x249, (cast(u1, (x242 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x234) + cast(u64, x239)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x238) + cast(u64, x241)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x236) + cast(u64, x236)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x250: u32 = undefined;
    cmovznzU32(&x250, cast(u1, (x245 & cast(u32, 0x1))), cast(u32, 0x0), x244);
    var x251: u32 = undefined;
    cmovznzU32(&x251, cast(u1, (x245 & cast(u32, 0x1))), cast(u32, 0x0), x246);
    var x252: u32 = undefined;
    cmovznzU32(&x252, cast(u1, (x245 & cast(u32, 0x1))), cast(u32, 0x0), x247);
    const x253 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x243)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x254: u32 = undefined;
    cmovznzU32(&x254, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x243)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x243)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x255: u32 = undefined;
    cmovznzU32(&x255, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x244, ((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)));
    var x256: u32 = undefined;
    cmovznzU32(&x256, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x244)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x257: u32 = undefined;
    cmovznzU32(&x257, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x246) + cast(u64, x246)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x248) + cast(u64, x251)) & cast(u64, 0xffffffff))));
    var x258: u32 = undefined;
    cmovznzU32(&x258, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x247) + cast(u64, x247)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x249) + cast(u64, x252)) & cast(u64, 0xffffffff))));
    var x259: u32 = undefined;
    cmovznzU32(&x259, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x248) + cast(u64, x251)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x246) + cast(u64, x246)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x260: u32 = undefined;
    cmovznzU32(&x260, (cast(u1, (x253 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x245) + cast(u64, x250)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x249) + cast(u64, x252)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x247) + cast(u64, x247)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x261: u32 = undefined;
    cmovznzU32(&x261, cast(u1, (x256 & cast(u32, 0x1))), cast(u32, 0x0), x255);
    var x262: u32 = undefined;
    cmovznzU32(&x262, cast(u1, (x256 & cast(u32, 0x1))), cast(u32, 0x0), x257);
    var x263: u32 = undefined;
    cmovznzU32(&x263, cast(u1, (x256 & cast(u32, 0x1))), cast(u32, 0x0), x258);
    const x264 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x254)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x265: u32 = undefined;
    cmovznzU32(&x265, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x254)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x254)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x266: u32 = undefined;
    cmovznzU32(&x266, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x255, ((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)));
    var x267: u32 = undefined;
    cmovznzU32(&x267, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x255)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x268: u32 = undefined;
    cmovznzU32(&x268, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x257) + cast(u64, x257)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x259) + cast(u64, x262)) & cast(u64, 0xffffffff))));
    var x269: u32 = undefined;
    cmovznzU32(&x269, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x258) + cast(u64, x258)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x260) + cast(u64, x263)) & cast(u64, 0xffffffff))));
    var x270: u32 = undefined;
    cmovznzU32(&x270, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x259) + cast(u64, x262)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x257) + cast(u64, x257)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x271: u32 = undefined;
    cmovznzU32(&x271, (cast(u1, (x264 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x256) + cast(u64, x261)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x260) + cast(u64, x263)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x258) + cast(u64, x258)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x272: u32 = undefined;
    cmovznzU32(&x272, cast(u1, (x267 & cast(u32, 0x1))), cast(u32, 0x0), x266);
    var x273: u32 = undefined;
    cmovznzU32(&x273, cast(u1, (x267 & cast(u32, 0x1))), cast(u32, 0x0), x268);
    var x274: u32 = undefined;
    cmovznzU32(&x274, cast(u1, (x267 & cast(u32, 0x1))), cast(u32, 0x0), x269);
    const x275 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x265)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x276: u32 = undefined;
    cmovznzU32(&x276, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x265)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x265)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x277: u32 = undefined;
    cmovznzU32(&x277, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x266, ((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)));
    var x278: u32 = undefined;
    cmovznzU32(&x278, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x266)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x279: u32 = undefined;
    cmovznzU32(&x279, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x268) + cast(u64, x268)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x270) + cast(u64, x273)) & cast(u64, 0xffffffff))));
    var x280: u32 = undefined;
    cmovznzU32(&x280, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x269) + cast(u64, x269)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x271) + cast(u64, x274)) & cast(u64, 0xffffffff))));
    var x281: u32 = undefined;
    cmovznzU32(&x281, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x270) + cast(u64, x273)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x268) + cast(u64, x268)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x282: u32 = undefined;
    cmovznzU32(&x282, (cast(u1, (x275 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x267) + cast(u64, x272)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x271) + cast(u64, x274)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x269) + cast(u64, x269)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x283: u32 = undefined;
    cmovznzU32(&x283, cast(u1, (x278 & cast(u32, 0x1))), cast(u32, 0x0), x277);
    var x284: u32 = undefined;
    cmovznzU32(&x284, cast(u1, (x278 & cast(u32, 0x1))), cast(u32, 0x0), x279);
    var x285: u32 = undefined;
    cmovznzU32(&x285, cast(u1, (x278 & cast(u32, 0x1))), cast(u32, 0x0), x280);
    const x286 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x276)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x287: u32 = undefined;
    cmovznzU32(&x287, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x276)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x276)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x288: u32 = undefined;
    cmovznzU32(&x288, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x277, ((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)));
    var x289: u32 = undefined;
    cmovznzU32(&x289, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x277)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x290: u32 = undefined;
    cmovznzU32(&x290, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x279) + cast(u64, x279)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x281) + cast(u64, x284)) & cast(u64, 0xffffffff))));
    var x291: u32 = undefined;
    cmovznzU32(&x291, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x280) + cast(u64, x280)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x282) + cast(u64, x285)) & cast(u64, 0xffffffff))));
    var x292: u32 = undefined;
    cmovznzU32(&x292, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x281) + cast(u64, x284)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x279) + cast(u64, x279)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x293: u32 = undefined;
    cmovznzU32(&x293, (cast(u1, (x286 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x278) + cast(u64, x283)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x282) + cast(u64, x285)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x280) + cast(u64, x280)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x294: u32 = undefined;
    cmovznzU32(&x294, cast(u1, (x289 & cast(u32, 0x1))), cast(u32, 0x0), x288);
    var x295: u32 = undefined;
    cmovznzU32(&x295, cast(u1, (x289 & cast(u32, 0x1))), cast(u32, 0x0), x290);
    var x296: u32 = undefined;
    cmovznzU32(&x296, cast(u1, (x289 & cast(u32, 0x1))), cast(u32, 0x0), x291);
    const x297 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x287)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x298: u32 = undefined;
    cmovznzU32(&x298, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x287)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x287)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x299: u32 = undefined;
    cmovznzU32(&x299, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x288, ((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)));
    var x300: u32 = undefined;
    cmovznzU32(&x300, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x288)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x301: u32 = undefined;
    cmovznzU32(&x301, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x290) + cast(u64, x290)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x292) + cast(u64, x295)) & cast(u64, 0xffffffff))));
    var x302: u32 = undefined;
    cmovznzU32(&x302, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x291) + cast(u64, x291)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x293) + cast(u64, x296)) & cast(u64, 0xffffffff))));
    var x303: u32 = undefined;
    cmovznzU32(&x303, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x292) + cast(u64, x295)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x290) + cast(u64, x290)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x304: u32 = undefined;
    cmovznzU32(&x304, (cast(u1, (x297 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x289) + cast(u64, x294)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x293) + cast(u64, x296)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x291) + cast(u64, x291)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x305: u32 = undefined;
    cmovznzU32(&x305, cast(u1, (x300 & cast(u32, 0x1))), cast(u32, 0x0), x299);
    var x306: u32 = undefined;
    cmovznzU32(&x306, cast(u1, (x300 & cast(u32, 0x1))), cast(u32, 0x0), x301);
    var x307: u32 = undefined;
    cmovznzU32(&x307, cast(u1, (x300 & cast(u32, 0x1))), cast(u32, 0x0), x302);
    const x308 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x298)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x309: u32 = undefined;
    cmovznzU32(&x309, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, 0x1) + cast(u64, x298)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x298)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x310: u32 = undefined;
    cmovznzU32(&x310, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), x299, ((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)));
    var x311: u32 = undefined;
    cmovznzU32(&x311, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x299)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x312: u32 = undefined;
    cmovznzU32(&x312, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x301) + cast(u64, x301)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x303) + cast(u64, x306)) & cast(u64, 0xffffffff))));
    var x313: u32 = undefined;
    cmovznzU32(&x313, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x302) + cast(u64, x302)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x304) + cast(u64, x307)) & cast(u64, 0xffffffff))));
    var x314: u32 = undefined;
    cmovznzU32(&x314, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x303) + cast(u64, x306)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x301) + cast(u64, x301)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x315: u32 = undefined;
    cmovznzU32(&x315, (cast(u1, (x308 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x300) + cast(u64, x305)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x304) + cast(u64, x307)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x302) + cast(u64, x302)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x316: u32 = undefined;
    cmovznzU32(&x316, cast(u1, (x311 & cast(u32, 0x1))), cast(u32, 0x0), x310);
    var x317: u32 = undefined;
    cmovznzU32(&x317, cast(u1, (x311 & cast(u32, 0x1))), cast(u32, 0x0), x312);
    var x318: u32 = undefined;
    cmovznzU32(&x318, cast(u1, (x311 & cast(u32, 0x1))), cast(u32, 0x0), x313);
    const x319 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, 0x1) + cast(u64, x309)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    var x320: u32 = undefined;
    cmovznzU32(&x320, (cast(u1, (x319 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), ((cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) >> 1)), cast(u32, ((cast(u64, (~x310)) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x321: u32 = undefined;
    cmovznzU32(&x321, (cast(u1, (x319 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x312) + cast(u64, x312)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x314) + cast(u64, x317)) & cast(u64, 0xffffffff))));
    var x322: u32 = undefined;
    cmovznzU32(&x322, (cast(u1, (x319 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x313) + cast(u64, x313)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, x315) + cast(u64, x318)) & cast(u64, 0xffffffff))));
    var x323: u32 = undefined;
    cmovznzU32(&x323, (cast(u1, (x319 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x314) + cast(u64, x317)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x312) + cast(u64, x312)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x324: u32 = undefined;
    cmovznzU32(&x324, (cast(u1, (x319 >> 31)) & cast(u1, (((cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) & 0x80000000) | (cast(u32, ((cast(u64, x311) + cast(u64, x316)) & cast(u64, 0xffffffff))) >> 1)) & cast(u32, 0x1)))), cast(u32, ((cast(u64, x315) + cast(u64, x318)) & cast(u64, 0xffffffff))), cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x313) + cast(u64, x313)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff))));
    var x325: u32 = undefined;
    cmovznzU32(&x325, cast(u1, (x320 & cast(u32, 0x1))), cast(u32, 0x0), x321);
    var x326: u32 = undefined;
    cmovznzU32(&x326, cast(u1, (x320 & cast(u32, 0x1))), cast(u32, 0x0), x322);
    var x327: u32 = undefined;
    cmovznzU32(&x327, cast(u1, ((arg1[8]) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x328: u32 = undefined;
    cmovznzU32(&x328, cast(u1, (cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x329: u32 = undefined;
    var x330: u32 = undefined;
    mulxU32(&x329, &x330, x328, (arg1[0]));
    var x331: u32 = undefined;
    var x332: u32 = undefined;
    mulxU32(&x331, &x332, x328, (arg1[1]));
    var x333: u32 = undefined;
    var x334: u32 = undefined;
    mulxU32(&x333, &x334, x328, (arg1[0]));
    var x335: u32 = undefined;
    var x336: u32 = undefined;
    mulxU32(&x335, &x336, x328, (arg1[2]));
    var x337: u32 = undefined;
    var x338: u32 = undefined;
    mulxU32(&x337, &x338, x328, (arg1[1]));
    var x339: u32 = undefined;
    var x340: u32 = undefined;
    mulxU32(&x339, &x340, x328, (arg1[0]));
    var x341: u32 = undefined;
    var x342: u32 = undefined;
    mulxU32(&x341, &x342, x328, (arg1[3]));
    var x343: u32 = undefined;
    var x344: u32 = undefined;
    mulxU32(&x343, &x344, x328, (arg1[2]));
    var x345: u32 = undefined;
    var x346: u32 = undefined;
    mulxU32(&x345, &x346, x328, (arg1[1]));
    var x347: u32 = undefined;
    var x348: u32 = undefined;
    mulxU32(&x347, &x348, x328, (arg1[0]));
    var x349: u32 = undefined;
    var x350: u32 = undefined;
    mulxU32(&x349, &x350, x328, (arg1[4]));
    var x351: u32 = undefined;
    var x352: u32 = undefined;
    mulxU32(&x351, &x352, x328, (arg1[3]));
    var x353: u32 = undefined;
    var x354: u32 = undefined;
    mulxU32(&x353, &x354, x328, (arg1[2]));
    var x355: u32 = undefined;
    var x356: u32 = undefined;
    mulxU32(&x355, &x356, x328, (arg1[1]));
    var x357: u32 = undefined;
    var x358: u32 = undefined;
    mulxU32(&x357, &x358, x328, (arg1[0]));
    var x359: u32 = undefined;
    var x360: u32 = undefined;
    mulxU32(&x359, &x360, x328, (arg1[5]));
    var x361: u32 = undefined;
    var x362: u32 = undefined;
    mulxU32(&x361, &x362, x328, (arg1[4]));
    var x363: u32 = undefined;
    var x364: u32 = undefined;
    mulxU32(&x363, &x364, x328, (arg1[3]));
    var x365: u32 = undefined;
    var x366: u32 = undefined;
    mulxU32(&x365, &x366, x328, (arg1[2]));
    var x367: u32 = undefined;
    var x368: u32 = undefined;
    mulxU32(&x367, &x368, x328, (arg1[1]));
    var x369: u32 = undefined;
    var x370: u32 = undefined;
    mulxU32(&x369, &x370, x328, (arg1[0]));
    var x371: u32 = undefined;
    var x372: u32 = undefined;
    mulxU32(&x371, &x372, x328, (arg1[6]));
    var x373: u32 = undefined;
    var x374: u32 = undefined;
    mulxU32(&x373, &x374, x328, (arg1[5]));
    var x375: u32 = undefined;
    var x376: u32 = undefined;
    mulxU32(&x375, &x376, x328, (arg1[4]));
    var x377: u32 = undefined;
    var x378: u32 = undefined;
    mulxU32(&x377, &x378, x328, (arg1[3]));
    var x379: u32 = undefined;
    var x380: u32 = undefined;
    mulxU32(&x379, &x380, x328, (arg1[2]));
    var x381: u32 = undefined;
    var x382: u32 = undefined;
    mulxU32(&x381, &x382, x328, (arg1[1]));
    var x383: u32 = undefined;
    var x384: u32 = undefined;
    mulxU32(&x383, &x384, x328, (arg1[0]));
    var x385: u32 = undefined;
    var x386: u32 = undefined;
    mulxU32(&x385, &x386, x328, (arg1[7]));
    var x387: u32 = undefined;
    var x388: u32 = undefined;
    mulxU32(&x387, &x388, x328, (arg1[6]));
    var x389: u32 = undefined;
    var x390: u32 = undefined;
    mulxU32(&x389, &x390, x328, (arg1[5]));
    var x391: u32 = undefined;
    var x392: u32 = undefined;
    mulxU32(&x391, &x392, x328, (arg1[4]));
    var x393: u32 = undefined;
    var x394: u32 = undefined;
    mulxU32(&x393, &x394, x328, (arg1[3]));
    var x395: u32 = undefined;
    var x396: u32 = undefined;
    mulxU32(&x395, &x396, x328, (arg1[2]));
    var x397: u32 = undefined;
    var x398: u32 = undefined;
    mulxU32(&x397, &x398, x328, (arg1[1]));
    var x399: u32 = undefined;
    var x400: u32 = undefined;
    mulxU32(&x399, &x400, x328, (arg1[0]));
    var x401: u32 = undefined;
    var x402: u32 = undefined;
    mulxU32(&x401, &x402, x328, (arg1[8]));
    var x403: u32 = undefined;
    var x404: u32 = undefined;
    mulxU32(&x403, &x404, x328, (arg1[7]));
    var x405: u32 = undefined;
    var x406: u32 = undefined;
    mulxU32(&x405, &x406, x328, (arg1[6]));
    var x407: u32 = undefined;
    var x408: u32 = undefined;
    mulxU32(&x407, &x408, x328, (arg1[5]));
    var x409: u32 = undefined;
    var x410: u32 = undefined;
    mulxU32(&x409, &x410, x328, (arg1[4]));
    var x411: u32 = undefined;
    var x412: u32 = undefined;
    mulxU32(&x411, &x412, x328, (arg1[3]));
    var x413: u32 = undefined;
    var x414: u32 = undefined;
    mulxU32(&x413, &x414, x328, (arg1[2]));
    var x415: u32 = undefined;
    var x416: u32 = undefined;
    mulxU32(&x415, &x416, x328, (arg1[1]));
    var x417: u32 = undefined;
    var x418: u32 = undefined;
    mulxU32(&x417, &x418, x328, (arg1[0]));
    var x419: u32 = undefined;
    var x420: u32 = undefined;
    mulxU32(&x419, &x420, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), x327);
    var x421: u32 = undefined;
    var x422: u32 = undefined;
    mulxU32(&x421, &x422, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[8]));
    var x423: u32 = undefined;
    var x424: u32 = undefined;
    mulxU32(&x423, &x424, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[7]));
    var x425: u32 = undefined;
    var x426: u32 = undefined;
    mulxU32(&x425, &x426, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[6]));
    var x427: u32 = undefined;
    var x428: u32 = undefined;
    mulxU32(&x427, &x428, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[5]));
    var x429: u32 = undefined;
    var x430: u32 = undefined;
    mulxU32(&x429, &x430, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[4]));
    var x431: u32 = undefined;
    var x432: u32 = undefined;
    mulxU32(&x431, &x432, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[3]));
    var x433: u32 = undefined;
    var x434: u32 = undefined;
    mulxU32(&x433, &x434, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[2]));
    var x435: u32 = undefined;
    var x436: u32 = undefined;
    mulxU32(&x435, &x436, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[1]));
    var x437: u32 = undefined;
    var x438: u32 = undefined;
    mulxU32(&x437, &x438, cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))), (arg1[0]));
    var x439: u32 = undefined;
    var x440: u1 = undefined;
    addcarryxU32(&x439, &x440, 0x0, x422, x329);
    var x441: u32 = undefined;
    var x442: u1 = undefined;
    addcarryxU32(&x441, &x442, 0x0, x439, x331);
    var x443: u32 = undefined;
    var x444: u1 = undefined;
    addcarryxU32(&x443, &x444, 0x0, x424, x333);
    var x445: u32 = undefined;
    var x446: u1 = undefined;
    addcarryxU32(&x445, &x446, x444, x441, x334);
    var x447: u32 = undefined;
    var x448: u1 = undefined;
    addcarryxU32(&x447, &x448, 0x0, x443, x337);
    var x449: u32 = undefined;
    var x450: u1 = undefined;
    addcarryxU32(&x449, &x450, x448, x445, x335);
    var x451: u32 = undefined;
    var x452: u1 = undefined;
    addcarryxU32(&x451, &x452, 0x0, x426, x339);
    var x453: u32 = undefined;
    var x454: u1 = undefined;
    addcarryxU32(&x453, &x454, x452, x447, x340);
    var x455: u32 = undefined;
    var x456: u1 = undefined;
    addcarryxU32(&x455, &x456, x454, x449, x338);
    var x457: u32 = undefined;
    var x458: u1 = undefined;
    addcarryxU32(&x457, &x458, 0x0, x451, x345);
    var x459: u32 = undefined;
    var x460: u1 = undefined;
    addcarryxU32(&x459, &x460, x458, x453, x343);
    var x461: u32 = undefined;
    var x462: u1 = undefined;
    addcarryxU32(&x461, &x462, x460, x455, x341);
    var x463: u32 = undefined;
    var x464: u1 = undefined;
    addcarryxU32(&x463, &x464, 0x0, x428, x347);
    var x465: u32 = undefined;
    var x466: u1 = undefined;
    addcarryxU32(&x465, &x466, x464, x457, x348);
    var x467: u32 = undefined;
    var x468: u1 = undefined;
    addcarryxU32(&x467, &x468, x466, x459, x346);
    var x469: u32 = undefined;
    var x470: u1 = undefined;
    addcarryxU32(&x469, &x470, x468, x461, x344);
    var x471: u32 = undefined;
    var x472: u1 = undefined;
    addcarryxU32(&x471, &x472, 0x0, x463, x355);
    var x473: u32 = undefined;
    var x474: u1 = undefined;
    addcarryxU32(&x473, &x474, x472, x465, x353);
    var x475: u32 = undefined;
    var x476: u1 = undefined;
    addcarryxU32(&x475, &x476, x474, x467, x351);
    var x477: u32 = undefined;
    var x478: u1 = undefined;
    addcarryxU32(&x477, &x478, x476, x469, x349);
    var x479: u32 = undefined;
    var x480: u1 = undefined;
    addcarryxU32(&x479, &x480, 0x0, x430, x357);
    var x481: u32 = undefined;
    var x482: u1 = undefined;
    addcarryxU32(&x481, &x482, x480, x471, x358);
    var x483: u32 = undefined;
    var x484: u1 = undefined;
    addcarryxU32(&x483, &x484, x482, x473, x356);
    var x485: u32 = undefined;
    var x486: u1 = undefined;
    addcarryxU32(&x485, &x486, x484, x475, x354);
    var x487: u32 = undefined;
    var x488: u1 = undefined;
    addcarryxU32(&x487, &x488, x486, x477, x352);
    var x489: u32 = undefined;
    var x490: u1 = undefined;
    addcarryxU32(&x489, &x490, 0x0, x479, x367);
    var x491: u32 = undefined;
    var x492: u1 = undefined;
    addcarryxU32(&x491, &x492, x490, x481, x365);
    var x493: u32 = undefined;
    var x494: u1 = undefined;
    addcarryxU32(&x493, &x494, x492, x483, x363);
    var x495: u32 = undefined;
    var x496: u1 = undefined;
    addcarryxU32(&x495, &x496, x494, x485, x361);
    var x497: u32 = undefined;
    var x498: u1 = undefined;
    addcarryxU32(&x497, &x498, x496, x487, x359);
    var x499: u32 = undefined;
    var x500: u1 = undefined;
    addcarryxU32(&x499, &x500, 0x0, x432, x369);
    var x501: u32 = undefined;
    var x502: u1 = undefined;
    addcarryxU32(&x501, &x502, x500, x489, x370);
    var x503: u32 = undefined;
    var x504: u1 = undefined;
    addcarryxU32(&x503, &x504, x502, x491, x368);
    var x505: u32 = undefined;
    var x506: u1 = undefined;
    addcarryxU32(&x505, &x506, x504, x493, x366);
    var x507: u32 = undefined;
    var x508: u1 = undefined;
    addcarryxU32(&x507, &x508, x506, x495, x364);
    var x509: u32 = undefined;
    var x510: u1 = undefined;
    addcarryxU32(&x509, &x510, x508, x497, x362);
    var x511: u32 = undefined;
    var x512: u1 = undefined;
    addcarryxU32(&x511, &x512, 0x0, x499, x381);
    var x513: u32 = undefined;
    var x514: u1 = undefined;
    addcarryxU32(&x513, &x514, x512, x501, x379);
    var x515: u32 = undefined;
    var x516: u1 = undefined;
    addcarryxU32(&x515, &x516, x514, x503, x377);
    var x517: u32 = undefined;
    var x518: u1 = undefined;
    addcarryxU32(&x517, &x518, x516, x505, x375);
    var x519: u32 = undefined;
    var x520: u1 = undefined;
    addcarryxU32(&x519, &x520, x518, x507, x373);
    var x521: u32 = undefined;
    var x522: u1 = undefined;
    addcarryxU32(&x521, &x522, x520, x509, x371);
    var x523: u32 = undefined;
    var x524: u1 = undefined;
    addcarryxU32(&x523, &x524, 0x0, x434, x383);
    var x525: u32 = undefined;
    var x526: u1 = undefined;
    addcarryxU32(&x525, &x526, x524, x511, x384);
    var x527: u32 = undefined;
    var x528: u1 = undefined;
    addcarryxU32(&x527, &x528, x526, x513, x382);
    var x529: u32 = undefined;
    var x530: u1 = undefined;
    addcarryxU32(&x529, &x530, x528, x515, x380);
    var x531: u32 = undefined;
    var x532: u1 = undefined;
    addcarryxU32(&x531, &x532, x530, x517, x378);
    var x533: u32 = undefined;
    var x534: u1 = undefined;
    addcarryxU32(&x533, &x534, x532, x519, x376);
    var x535: u32 = undefined;
    var x536: u1 = undefined;
    addcarryxU32(&x535, &x536, x534, x521, x374);
    var x537: u32 = undefined;
    var x538: u1 = undefined;
    addcarryxU32(&x537, &x538, 0x0, x523, x397);
    var x539: u32 = undefined;
    var x540: u1 = undefined;
    addcarryxU32(&x539, &x540, x538, x525, x395);
    var x541: u32 = undefined;
    var x542: u1 = undefined;
    addcarryxU32(&x541, &x542, x540, x527, x393);
    var x543: u32 = undefined;
    var x544: u1 = undefined;
    addcarryxU32(&x543, &x544, x542, x529, x391);
    var x545: u32 = undefined;
    var x546: u1 = undefined;
    addcarryxU32(&x545, &x546, x544, x531, x389);
    var x547: u32 = undefined;
    var x548: u1 = undefined;
    addcarryxU32(&x547, &x548, x546, x533, x387);
    var x549: u32 = undefined;
    var x550: u1 = undefined;
    addcarryxU32(&x549, &x550, x548, x535, x385);
    var x551: u32 = undefined;
    var x552: u1 = undefined;
    addcarryxU32(&x551, &x552, 0x0, x436, x399);
    var x553: u32 = undefined;
    var x554: u1 = undefined;
    addcarryxU32(&x553, &x554, x552, x537, x400);
    var x555: u32 = undefined;
    var x556: u1 = undefined;
    addcarryxU32(&x555, &x556, x554, x539, x398);
    var x557: u32 = undefined;
    var x558: u1 = undefined;
    addcarryxU32(&x557, &x558, x556, x541, x396);
    var x559: u32 = undefined;
    var x560: u1 = undefined;
    addcarryxU32(&x559, &x560, x558, x543, x394);
    var x561: u32 = undefined;
    var x562: u1 = undefined;
    addcarryxU32(&x561, &x562, x560, x545, x392);
    var x563: u32 = undefined;
    var x564: u1 = undefined;
    addcarryxU32(&x563, &x564, x562, x547, x390);
    var x565: u32 = undefined;
    var x566: u1 = undefined;
    addcarryxU32(&x565, &x566, x564, x549, x388);
    var x567: u32 = undefined;
    var x568: u1 = undefined;
    addcarryxU32(&x567, &x568, 0x0, x551, x415);
    var x569: u32 = undefined;
    var x570: u1 = undefined;
    addcarryxU32(&x569, &x570, x568, x553, x413);
    var x571: u32 = undefined;
    var x572: u1 = undefined;
    addcarryxU32(&x571, &x572, x570, x555, x411);
    var x573: u32 = undefined;
    var x574: u1 = undefined;
    addcarryxU32(&x573, &x574, x572, x557, x409);
    var x575: u32 = undefined;
    var x576: u1 = undefined;
    addcarryxU32(&x575, &x576, x574, x559, x407);
    var x577: u32 = undefined;
    var x578: u1 = undefined;
    addcarryxU32(&x577, &x578, x576, x561, x405);
    var x579: u32 = undefined;
    var x580: u1 = undefined;
    addcarryxU32(&x579, &x580, x578, x563, x403);
    var x581: u32 = undefined;
    var x582: u1 = undefined;
    addcarryxU32(&x581, &x582, x580, x565, x401);
    var x583: u32 = undefined;
    var x584: u1 = undefined;
    addcarryxU32(&x583, &x584, 0x0, x438, x417);
    var x585: u32 = undefined;
    var x586: u1 = undefined;
    addcarryxU32(&x585, &x586, x584, x567, x418);
    var x587: u32 = undefined;
    var x588: u1 = undefined;
    addcarryxU32(&x587, &x588, x586, x569, x416);
    var x589: u32 = undefined;
    var x590: u1 = undefined;
    addcarryxU32(&x589, &x590, x588, x571, x414);
    var x591: u32 = undefined;
    var x592: u1 = undefined;
    addcarryxU32(&x591, &x592, x590, x573, x412);
    var x593: u32 = undefined;
    var x594: u1 = undefined;
    addcarryxU32(&x593, &x594, x592, x575, x410);
    var x595: u32 = undefined;
    var x596: u1 = undefined;
    addcarryxU32(&x595, &x596, x594, x577, x408);
    var x597: u32 = undefined;
    var x598: u1 = undefined;
    addcarryxU32(&x597, &x598, x596, x579, x406);
    var x599: u32 = undefined;
    var x600: u1 = undefined;
    addcarryxU32(&x599, &x600, x598, x581, x404);
    var x601: u32 = undefined;
    var x602: u1 = undefined;
    addcarryxU32(&x601, &x602, 0x0, x583, x435);
    var x603: u32 = undefined;
    var x604: u1 = undefined;
    addcarryxU32(&x603, &x604, x602, x585, x433);
    var x605: u32 = undefined;
    var x606: u1 = undefined;
    addcarryxU32(&x605, &x606, x604, x587, x431);
    var x607: u32 = undefined;
    var x608: u1 = undefined;
    addcarryxU32(&x607, &x608, x606, x589, x429);
    var x609: u32 = undefined;
    var x610: u1 = undefined;
    addcarryxU32(&x609, &x610, x608, x591, x427);
    var x611: u32 = undefined;
    var x612: u1 = undefined;
    addcarryxU32(&x611, &x612, x610, x593, x425);
    var x613: u32 = undefined;
    var x614: u1 = undefined;
    addcarryxU32(&x613, &x614, x612, x595, x423);
    var x615: u32 = undefined;
    var x616: u1 = undefined;
    addcarryxU32(&x615, &x616, x614, x597, x421);
    var x617: u32 = undefined;
    var x618: u1 = undefined;
    addcarryxU32(&x617, &x618, x616, x599, x419);
    var x619: u32 = undefined;
    cmovznzU32(&x619, cast(u1, ((arg2[8]) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x620: u32 = undefined;
    cmovznzU32(&x620, cast(u1, (cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x621: u32 = undefined;
    var x622: u32 = undefined;
    mulxU32(&x621, &x622, x620, (arg2[0]));
    var x623: u32 = undefined;
    var x624: u32 = undefined;
    mulxU32(&x623, &x624, x620, (arg2[1]));
    var x625: u32 = undefined;
    var x626: u32 = undefined;
    mulxU32(&x625, &x626, x620, (arg2[0]));
    var x627: u32 = undefined;
    var x628: u32 = undefined;
    mulxU32(&x627, &x628, x620, (arg2[2]));
    var x629: u32 = undefined;
    var x630: u32 = undefined;
    mulxU32(&x629, &x630, x620, (arg2[1]));
    var x631: u32 = undefined;
    var x632: u32 = undefined;
    mulxU32(&x631, &x632, x620, (arg2[0]));
    var x633: u32 = undefined;
    var x634: u32 = undefined;
    mulxU32(&x633, &x634, x620, (arg2[3]));
    var x635: u32 = undefined;
    var x636: u32 = undefined;
    mulxU32(&x635, &x636, x620, (arg2[2]));
    var x637: u32 = undefined;
    var x638: u32 = undefined;
    mulxU32(&x637, &x638, x620, (arg2[1]));
    var x639: u32 = undefined;
    var x640: u32 = undefined;
    mulxU32(&x639, &x640, x620, (arg2[0]));
    var x641: u32 = undefined;
    var x642: u32 = undefined;
    mulxU32(&x641, &x642, x620, (arg2[4]));
    var x643: u32 = undefined;
    var x644: u32 = undefined;
    mulxU32(&x643, &x644, x620, (arg2[3]));
    var x645: u32 = undefined;
    var x646: u32 = undefined;
    mulxU32(&x645, &x646, x620, (arg2[2]));
    var x647: u32 = undefined;
    var x648: u32 = undefined;
    mulxU32(&x647, &x648, x620, (arg2[1]));
    var x649: u32 = undefined;
    var x650: u32 = undefined;
    mulxU32(&x649, &x650, x620, (arg2[0]));
    var x651: u32 = undefined;
    var x652: u32 = undefined;
    mulxU32(&x651, &x652, x620, (arg2[5]));
    var x653: u32 = undefined;
    var x654: u32 = undefined;
    mulxU32(&x653, &x654, x620, (arg2[4]));
    var x655: u32 = undefined;
    var x656: u32 = undefined;
    mulxU32(&x655, &x656, x620, (arg2[3]));
    var x657: u32 = undefined;
    var x658: u32 = undefined;
    mulxU32(&x657, &x658, x620, (arg2[2]));
    var x659: u32 = undefined;
    var x660: u32 = undefined;
    mulxU32(&x659, &x660, x620, (arg2[1]));
    var x661: u32 = undefined;
    var x662: u32 = undefined;
    mulxU32(&x661, &x662, x620, (arg2[0]));
    var x663: u32 = undefined;
    var x664: u32 = undefined;
    mulxU32(&x663, &x664, x620, (arg2[6]));
    var x665: u32 = undefined;
    var x666: u32 = undefined;
    mulxU32(&x665, &x666, x620, (arg2[5]));
    var x667: u32 = undefined;
    var x668: u32 = undefined;
    mulxU32(&x667, &x668, x620, (arg2[4]));
    var x669: u32 = undefined;
    var x670: u32 = undefined;
    mulxU32(&x669, &x670, x620, (arg2[3]));
    var x671: u32 = undefined;
    var x672: u32 = undefined;
    mulxU32(&x671, &x672, x620, (arg2[2]));
    var x673: u32 = undefined;
    var x674: u32 = undefined;
    mulxU32(&x673, &x674, x620, (arg2[1]));
    var x675: u32 = undefined;
    var x676: u32 = undefined;
    mulxU32(&x675, &x676, x620, (arg2[0]));
    var x677: u32 = undefined;
    var x678: u32 = undefined;
    mulxU32(&x677, &x678, x620, (arg2[7]));
    var x679: u32 = undefined;
    var x680: u32 = undefined;
    mulxU32(&x679, &x680, x620, (arg2[6]));
    var x681: u32 = undefined;
    var x682: u32 = undefined;
    mulxU32(&x681, &x682, x620, (arg2[5]));
    var x683: u32 = undefined;
    var x684: u32 = undefined;
    mulxU32(&x683, &x684, x620, (arg2[4]));
    var x685: u32 = undefined;
    var x686: u32 = undefined;
    mulxU32(&x685, &x686, x620, (arg2[3]));
    var x687: u32 = undefined;
    var x688: u32 = undefined;
    mulxU32(&x687, &x688, x620, (arg2[2]));
    var x689: u32 = undefined;
    var x690: u32 = undefined;
    mulxU32(&x689, &x690, x620, (arg2[1]));
    var x691: u32 = undefined;
    var x692: u32 = undefined;
    mulxU32(&x691, &x692, x620, (arg2[0]));
    var x693: u32 = undefined;
    var x694: u32 = undefined;
    mulxU32(&x693, &x694, x620, (arg2[8]));
    var x695: u32 = undefined;
    var x696: u32 = undefined;
    mulxU32(&x695, &x696, x620, (arg2[7]));
    var x697: u32 = undefined;
    var x698: u32 = undefined;
    mulxU32(&x697, &x698, x620, (arg2[6]));
    var x699: u32 = undefined;
    var x700: u32 = undefined;
    mulxU32(&x699, &x700, x620, (arg2[5]));
    var x701: u32 = undefined;
    var x702: u32 = undefined;
    mulxU32(&x701, &x702, x620, (arg2[4]));
    var x703: u32 = undefined;
    var x704: u32 = undefined;
    mulxU32(&x703, &x704, x620, (arg2[3]));
    var x705: u32 = undefined;
    var x706: u32 = undefined;
    mulxU32(&x705, &x706, x620, (arg2[2]));
    var x707: u32 = undefined;
    var x708: u32 = undefined;
    mulxU32(&x707, &x708, x620, (arg2[1]));
    var x709: u32 = undefined;
    var x710: u32 = undefined;
    mulxU32(&x709, &x710, x620, (arg2[0]));
    var x711: u32 = undefined;
    var x712: u32 = undefined;
    mulxU32(&x711, &x712, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), x619);
    var x713: u32 = undefined;
    var x714: u32 = undefined;
    mulxU32(&x713, &x714, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[8]));
    var x715: u32 = undefined;
    var x716: u32 = undefined;
    mulxU32(&x715, &x716, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[7]));
    var x717: u32 = undefined;
    var x718: u32 = undefined;
    mulxU32(&x717, &x718, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[6]));
    var x719: u32 = undefined;
    var x720: u32 = undefined;
    mulxU32(&x719, &x720, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[5]));
    var x721: u32 = undefined;
    var x722: u32 = undefined;
    mulxU32(&x721, &x722, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[4]));
    var x723: u32 = undefined;
    var x724: u32 = undefined;
    mulxU32(&x723, &x724, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[3]));
    var x725: u32 = undefined;
    var x726: u32 = undefined;
    mulxU32(&x725, &x726, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[2]));
    var x727: u32 = undefined;
    var x728: u32 = undefined;
    mulxU32(&x727, &x728, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[1]));
    var x729: u32 = undefined;
    var x730: u32 = undefined;
    mulxU32(&x729, &x730, cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))), (arg2[0]));
    var x731: u32 = undefined;
    var x732: u1 = undefined;
    addcarryxU32(&x731, &x732, 0x0, x714, x621);
    var x733: u32 = undefined;
    var x734: u1 = undefined;
    addcarryxU32(&x733, &x734, 0x0, x731, x623);
    var x735: u32 = undefined;
    var x736: u1 = undefined;
    addcarryxU32(&x735, &x736, 0x0, x716, x625);
    var x737: u32 = undefined;
    var x738: u1 = undefined;
    addcarryxU32(&x737, &x738, x736, x733, x626);
    var x739: u32 = undefined;
    var x740: u1 = undefined;
    addcarryxU32(&x739, &x740, 0x0, x735, x629);
    var x741: u32 = undefined;
    var x742: u1 = undefined;
    addcarryxU32(&x741, &x742, x740, x737, x627);
    var x743: u32 = undefined;
    var x744: u1 = undefined;
    addcarryxU32(&x743, &x744, 0x0, x718, x631);
    var x745: u32 = undefined;
    var x746: u1 = undefined;
    addcarryxU32(&x745, &x746, x744, x739, x632);
    var x747: u32 = undefined;
    var x748: u1 = undefined;
    addcarryxU32(&x747, &x748, x746, x741, x630);
    var x749: u32 = undefined;
    var x750: u1 = undefined;
    addcarryxU32(&x749, &x750, 0x0, x743, x637);
    var x751: u32 = undefined;
    var x752: u1 = undefined;
    addcarryxU32(&x751, &x752, x750, x745, x635);
    var x753: u32 = undefined;
    var x754: u1 = undefined;
    addcarryxU32(&x753, &x754, x752, x747, x633);
    var x755: u32 = undefined;
    var x756: u1 = undefined;
    addcarryxU32(&x755, &x756, 0x0, x720, x639);
    var x757: u32 = undefined;
    var x758: u1 = undefined;
    addcarryxU32(&x757, &x758, x756, x749, x640);
    var x759: u32 = undefined;
    var x760: u1 = undefined;
    addcarryxU32(&x759, &x760, x758, x751, x638);
    var x761: u32 = undefined;
    var x762: u1 = undefined;
    addcarryxU32(&x761, &x762, x760, x753, x636);
    var x763: u32 = undefined;
    var x764: u1 = undefined;
    addcarryxU32(&x763, &x764, 0x0, x755, x647);
    var x765: u32 = undefined;
    var x766: u1 = undefined;
    addcarryxU32(&x765, &x766, x764, x757, x645);
    var x767: u32 = undefined;
    var x768: u1 = undefined;
    addcarryxU32(&x767, &x768, x766, x759, x643);
    var x769: u32 = undefined;
    var x770: u1 = undefined;
    addcarryxU32(&x769, &x770, x768, x761, x641);
    var x771: u32 = undefined;
    var x772: u1 = undefined;
    addcarryxU32(&x771, &x772, 0x0, x722, x649);
    var x773: u32 = undefined;
    var x774: u1 = undefined;
    addcarryxU32(&x773, &x774, x772, x763, x650);
    var x775: u32 = undefined;
    var x776: u1 = undefined;
    addcarryxU32(&x775, &x776, x774, x765, x648);
    var x777: u32 = undefined;
    var x778: u1 = undefined;
    addcarryxU32(&x777, &x778, x776, x767, x646);
    var x779: u32 = undefined;
    var x780: u1 = undefined;
    addcarryxU32(&x779, &x780, x778, x769, x644);
    var x781: u32 = undefined;
    var x782: u1 = undefined;
    addcarryxU32(&x781, &x782, 0x0, x771, x659);
    var x783: u32 = undefined;
    var x784: u1 = undefined;
    addcarryxU32(&x783, &x784, x782, x773, x657);
    var x785: u32 = undefined;
    var x786: u1 = undefined;
    addcarryxU32(&x785, &x786, x784, x775, x655);
    var x787: u32 = undefined;
    var x788: u1 = undefined;
    addcarryxU32(&x787, &x788, x786, x777, x653);
    var x789: u32 = undefined;
    var x790: u1 = undefined;
    addcarryxU32(&x789, &x790, x788, x779, x651);
    var x791: u32 = undefined;
    var x792: u1 = undefined;
    addcarryxU32(&x791, &x792, 0x0, x724, x661);
    var x793: u32 = undefined;
    var x794: u1 = undefined;
    addcarryxU32(&x793, &x794, x792, x781, x662);
    var x795: u32 = undefined;
    var x796: u1 = undefined;
    addcarryxU32(&x795, &x796, x794, x783, x660);
    var x797: u32 = undefined;
    var x798: u1 = undefined;
    addcarryxU32(&x797, &x798, x796, x785, x658);
    var x799: u32 = undefined;
    var x800: u1 = undefined;
    addcarryxU32(&x799, &x800, x798, x787, x656);
    var x801: u32 = undefined;
    var x802: u1 = undefined;
    addcarryxU32(&x801, &x802, x800, x789, x654);
    var x803: u32 = undefined;
    var x804: u1 = undefined;
    addcarryxU32(&x803, &x804, 0x0, x791, x673);
    var x805: u32 = undefined;
    var x806: u1 = undefined;
    addcarryxU32(&x805, &x806, x804, x793, x671);
    var x807: u32 = undefined;
    var x808: u1 = undefined;
    addcarryxU32(&x807, &x808, x806, x795, x669);
    var x809: u32 = undefined;
    var x810: u1 = undefined;
    addcarryxU32(&x809, &x810, x808, x797, x667);
    var x811: u32 = undefined;
    var x812: u1 = undefined;
    addcarryxU32(&x811, &x812, x810, x799, x665);
    var x813: u32 = undefined;
    var x814: u1 = undefined;
    addcarryxU32(&x813, &x814, x812, x801, x663);
    var x815: u32 = undefined;
    var x816: u1 = undefined;
    addcarryxU32(&x815, &x816, 0x0, x726, x675);
    var x817: u32 = undefined;
    var x818: u1 = undefined;
    addcarryxU32(&x817, &x818, x816, x803, x676);
    var x819: u32 = undefined;
    var x820: u1 = undefined;
    addcarryxU32(&x819, &x820, x818, x805, x674);
    var x821: u32 = undefined;
    var x822: u1 = undefined;
    addcarryxU32(&x821, &x822, x820, x807, x672);
    var x823: u32 = undefined;
    var x824: u1 = undefined;
    addcarryxU32(&x823, &x824, x822, x809, x670);
    var x825: u32 = undefined;
    var x826: u1 = undefined;
    addcarryxU32(&x825, &x826, x824, x811, x668);
    var x827: u32 = undefined;
    var x828: u1 = undefined;
    addcarryxU32(&x827, &x828, x826, x813, x666);
    var x829: u32 = undefined;
    var x830: u1 = undefined;
    addcarryxU32(&x829, &x830, 0x0, x815, x689);
    var x831: u32 = undefined;
    var x832: u1 = undefined;
    addcarryxU32(&x831, &x832, x830, x817, x687);
    var x833: u32 = undefined;
    var x834: u1 = undefined;
    addcarryxU32(&x833, &x834, x832, x819, x685);
    var x835: u32 = undefined;
    var x836: u1 = undefined;
    addcarryxU32(&x835, &x836, x834, x821, x683);
    var x837: u32 = undefined;
    var x838: u1 = undefined;
    addcarryxU32(&x837, &x838, x836, x823, x681);
    var x839: u32 = undefined;
    var x840: u1 = undefined;
    addcarryxU32(&x839, &x840, x838, x825, x679);
    var x841: u32 = undefined;
    var x842: u1 = undefined;
    addcarryxU32(&x841, &x842, x840, x827, x677);
    var x843: u32 = undefined;
    var x844: u1 = undefined;
    addcarryxU32(&x843, &x844, 0x0, x728, x691);
    var x845: u32 = undefined;
    var x846: u1 = undefined;
    addcarryxU32(&x845, &x846, x844, x829, x692);
    var x847: u32 = undefined;
    var x848: u1 = undefined;
    addcarryxU32(&x847, &x848, x846, x831, x690);
    var x849: u32 = undefined;
    var x850: u1 = undefined;
    addcarryxU32(&x849, &x850, x848, x833, x688);
    var x851: u32 = undefined;
    var x852: u1 = undefined;
    addcarryxU32(&x851, &x852, x850, x835, x686);
    var x853: u32 = undefined;
    var x854: u1 = undefined;
    addcarryxU32(&x853, &x854, x852, x837, x684);
    var x855: u32 = undefined;
    var x856: u1 = undefined;
    addcarryxU32(&x855, &x856, x854, x839, x682);
    var x857: u32 = undefined;
    var x858: u1 = undefined;
    addcarryxU32(&x857, &x858, x856, x841, x680);
    var x859: u32 = undefined;
    var x860: u1 = undefined;
    addcarryxU32(&x859, &x860, 0x0, x843, x707);
    var x861: u32 = undefined;
    var x862: u1 = undefined;
    addcarryxU32(&x861, &x862, x860, x845, x705);
    var x863: u32 = undefined;
    var x864: u1 = undefined;
    addcarryxU32(&x863, &x864, x862, x847, x703);
    var x865: u32 = undefined;
    var x866: u1 = undefined;
    addcarryxU32(&x865, &x866, x864, x849, x701);
    var x867: u32 = undefined;
    var x868: u1 = undefined;
    addcarryxU32(&x867, &x868, x866, x851, x699);
    var x869: u32 = undefined;
    var x870: u1 = undefined;
    addcarryxU32(&x869, &x870, x868, x853, x697);
    var x871: u32 = undefined;
    var x872: u1 = undefined;
    addcarryxU32(&x871, &x872, x870, x855, x695);
    var x873: u32 = undefined;
    var x874: u1 = undefined;
    addcarryxU32(&x873, &x874, x872, x857, x693);
    var x875: u32 = undefined;
    var x876: u1 = undefined;
    addcarryxU32(&x875, &x876, 0x0, x730, x709);
    var x877: u32 = undefined;
    var x878: u1 = undefined;
    addcarryxU32(&x877, &x878, x876, x859, x710);
    var x879: u32 = undefined;
    var x880: u1 = undefined;
    addcarryxU32(&x879, &x880, x878, x861, x708);
    var x881: u32 = undefined;
    var x882: u1 = undefined;
    addcarryxU32(&x881, &x882, x880, x863, x706);
    var x883: u32 = undefined;
    var x884: u1 = undefined;
    addcarryxU32(&x883, &x884, x882, x865, x704);
    var x885: u32 = undefined;
    var x886: u1 = undefined;
    addcarryxU32(&x885, &x886, x884, x867, x702);
    var x887: u32 = undefined;
    var x888: u1 = undefined;
    addcarryxU32(&x887, &x888, x886, x869, x700);
    var x889: u32 = undefined;
    var x890: u1 = undefined;
    addcarryxU32(&x889, &x890, x888, x871, x698);
    var x891: u32 = undefined;
    var x892: u1 = undefined;
    addcarryxU32(&x891, &x892, x890, x873, x696);
    var x893: u32 = undefined;
    var x894: u1 = undefined;
    addcarryxU32(&x893, &x894, 0x0, x875, x727);
    var x895: u32 = undefined;
    var x896: u1 = undefined;
    addcarryxU32(&x895, &x896, x894, x877, x725);
    var x897: u32 = undefined;
    var x898: u1 = undefined;
    addcarryxU32(&x897, &x898, x896, x879, x723);
    var x899: u32 = undefined;
    var x900: u1 = undefined;
    addcarryxU32(&x899, &x900, x898, x881, x721);
    var x901: u32 = undefined;
    var x902: u1 = undefined;
    addcarryxU32(&x901, &x902, x900, x883, x719);
    var x903: u32 = undefined;
    var x904: u1 = undefined;
    addcarryxU32(&x903, &x904, x902, x885, x717);
    var x905: u32 = undefined;
    var x906: u1 = undefined;
    addcarryxU32(&x905, &x906, x904, x887, x715);
    var x907: u32 = undefined;
    var x908: u1 = undefined;
    addcarryxU32(&x907, &x908, x906, x889, x713);
    var x909: u32 = undefined;
    var x910: u1 = undefined;
    addcarryxU32(&x909, &x910, x908, x891, x711);
    var x911: u32 = undefined;
    cmovznzU32(&x911, cast(u1, ((arg1[8]) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x912: u32 = undefined;
    cmovznzU32(&x912, cast(u1, (cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x913: u32 = undefined;
    var x914: u32 = undefined;
    mulxU32(&x913, &x914, x912, (arg1[0]));
    var x915: u32 = undefined;
    var x916: u32 = undefined;
    mulxU32(&x915, &x916, x912, (arg1[1]));
    var x917: u32 = undefined;
    var x918: u32 = undefined;
    mulxU32(&x917, &x918, x912, (arg1[0]));
    var x919: u32 = undefined;
    var x920: u32 = undefined;
    mulxU32(&x919, &x920, x912, (arg1[2]));
    var x921: u32 = undefined;
    var x922: u32 = undefined;
    mulxU32(&x921, &x922, x912, (arg1[1]));
    var x923: u32 = undefined;
    var x924: u32 = undefined;
    mulxU32(&x923, &x924, x912, (arg1[0]));
    var x925: u32 = undefined;
    var x926: u32 = undefined;
    mulxU32(&x925, &x926, x912, (arg1[3]));
    var x927: u32 = undefined;
    var x928: u32 = undefined;
    mulxU32(&x927, &x928, x912, (arg1[2]));
    var x929: u32 = undefined;
    var x930: u32 = undefined;
    mulxU32(&x929, &x930, x912, (arg1[1]));
    var x931: u32 = undefined;
    var x932: u32 = undefined;
    mulxU32(&x931, &x932, x912, (arg1[0]));
    var x933: u32 = undefined;
    var x934: u32 = undefined;
    mulxU32(&x933, &x934, x912, (arg1[4]));
    var x935: u32 = undefined;
    var x936: u32 = undefined;
    mulxU32(&x935, &x936, x912, (arg1[3]));
    var x937: u32 = undefined;
    var x938: u32 = undefined;
    mulxU32(&x937, &x938, x912, (arg1[2]));
    var x939: u32 = undefined;
    var x940: u32 = undefined;
    mulxU32(&x939, &x940, x912, (arg1[1]));
    var x941: u32 = undefined;
    var x942: u32 = undefined;
    mulxU32(&x941, &x942, x912, (arg1[0]));
    var x943: u32 = undefined;
    var x944: u32 = undefined;
    mulxU32(&x943, &x944, x912, (arg1[5]));
    var x945: u32 = undefined;
    var x946: u32 = undefined;
    mulxU32(&x945, &x946, x912, (arg1[4]));
    var x947: u32 = undefined;
    var x948: u32 = undefined;
    mulxU32(&x947, &x948, x912, (arg1[3]));
    var x949: u32 = undefined;
    var x950: u32 = undefined;
    mulxU32(&x949, &x950, x912, (arg1[2]));
    var x951: u32 = undefined;
    var x952: u32 = undefined;
    mulxU32(&x951, &x952, x912, (arg1[1]));
    var x953: u32 = undefined;
    var x954: u32 = undefined;
    mulxU32(&x953, &x954, x912, (arg1[0]));
    var x955: u32 = undefined;
    var x956: u32 = undefined;
    mulxU32(&x955, &x956, x912, (arg1[6]));
    var x957: u32 = undefined;
    var x958: u32 = undefined;
    mulxU32(&x957, &x958, x912, (arg1[5]));
    var x959: u32 = undefined;
    var x960: u32 = undefined;
    mulxU32(&x959, &x960, x912, (arg1[4]));
    var x961: u32 = undefined;
    var x962: u32 = undefined;
    mulxU32(&x961, &x962, x912, (arg1[3]));
    var x963: u32 = undefined;
    var x964: u32 = undefined;
    mulxU32(&x963, &x964, x912, (arg1[2]));
    var x965: u32 = undefined;
    var x966: u32 = undefined;
    mulxU32(&x965, &x966, x912, (arg1[1]));
    var x967: u32 = undefined;
    var x968: u32 = undefined;
    mulxU32(&x967, &x968, x912, (arg1[0]));
    var x969: u32 = undefined;
    var x970: u32 = undefined;
    mulxU32(&x969, &x970, x912, (arg1[7]));
    var x971: u32 = undefined;
    var x972: u32 = undefined;
    mulxU32(&x971, &x972, x912, (arg1[6]));
    var x973: u32 = undefined;
    var x974: u32 = undefined;
    mulxU32(&x973, &x974, x912, (arg1[5]));
    var x975: u32 = undefined;
    var x976: u32 = undefined;
    mulxU32(&x975, &x976, x912, (arg1[4]));
    var x977: u32 = undefined;
    var x978: u32 = undefined;
    mulxU32(&x977, &x978, x912, (arg1[3]));
    var x979: u32 = undefined;
    var x980: u32 = undefined;
    mulxU32(&x979, &x980, x912, (arg1[2]));
    var x981: u32 = undefined;
    var x982: u32 = undefined;
    mulxU32(&x981, &x982, x912, (arg1[1]));
    var x983: u32 = undefined;
    var x984: u32 = undefined;
    mulxU32(&x983, &x984, x912, (arg1[0]));
    var x985: u32 = undefined;
    var x986: u32 = undefined;
    mulxU32(&x985, &x986, x912, (arg1[8]));
    var x987: u32 = undefined;
    var x988: u32 = undefined;
    mulxU32(&x987, &x988, x912, (arg1[7]));
    var x989: u32 = undefined;
    var x990: u32 = undefined;
    mulxU32(&x989, &x990, x912, (arg1[6]));
    var x991: u32 = undefined;
    var x992: u32 = undefined;
    mulxU32(&x991, &x992, x912, (arg1[5]));
    var x993: u32 = undefined;
    var x994: u32 = undefined;
    mulxU32(&x993, &x994, x912, (arg1[4]));
    var x995: u32 = undefined;
    var x996: u32 = undefined;
    mulxU32(&x995, &x996, x912, (arg1[3]));
    var x997: u32 = undefined;
    var x998: u32 = undefined;
    mulxU32(&x997, &x998, x912, (arg1[2]));
    var x999: u32 = undefined;
    var x1000: u32 = undefined;
    mulxU32(&x999, &x1000, x912, (arg1[1]));
    var x1001: u32 = undefined;
    var x1002: u32 = undefined;
    mulxU32(&x1001, &x1002, x912, (arg1[0]));
    var x1003: u32 = undefined;
    var x1004: u32 = undefined;
    mulxU32(&x1003, &x1004, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), x911);
    var x1005: u32 = undefined;
    var x1006: u32 = undefined;
    mulxU32(&x1005, &x1006, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[8]));
    var x1007: u32 = undefined;
    var x1008: u32 = undefined;
    mulxU32(&x1007, &x1008, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[7]));
    var x1009: u32 = undefined;
    var x1010: u32 = undefined;
    mulxU32(&x1009, &x1010, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[6]));
    var x1011: u32 = undefined;
    var x1012: u32 = undefined;
    mulxU32(&x1011, &x1012, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[5]));
    var x1013: u32 = undefined;
    var x1014: u32 = undefined;
    mulxU32(&x1013, &x1014, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[4]));
    var x1015: u32 = undefined;
    var x1016: u32 = undefined;
    mulxU32(&x1015, &x1016, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[3]));
    var x1017: u32 = undefined;
    var x1018: u32 = undefined;
    mulxU32(&x1017, &x1018, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[2]));
    var x1019: u32 = undefined;
    var x1020: u32 = undefined;
    mulxU32(&x1019, &x1020, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[1]));
    var x1021: u32 = undefined;
    var x1022: u32 = undefined;
    mulxU32(&x1021, &x1022, cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))), (arg1[0]));
    var x1023: u32 = undefined;
    var x1024: u1 = undefined;
    addcarryxU32(&x1023, &x1024, 0x0, x1006, x913);
    var x1025: u32 = undefined;
    var x1026: u1 = undefined;
    addcarryxU32(&x1025, &x1026, 0x0, x1023, x915);
    var x1027: u32 = undefined;
    var x1028: u1 = undefined;
    addcarryxU32(&x1027, &x1028, 0x0, x1008, x917);
    var x1029: u32 = undefined;
    var x1030: u1 = undefined;
    addcarryxU32(&x1029, &x1030, x1028, x1025, x918);
    var x1031: u32 = undefined;
    var x1032: u1 = undefined;
    addcarryxU32(&x1031, &x1032, 0x0, x1027, x921);
    var x1033: u32 = undefined;
    var x1034: u1 = undefined;
    addcarryxU32(&x1033, &x1034, x1032, x1029, x919);
    var x1035: u32 = undefined;
    var x1036: u1 = undefined;
    addcarryxU32(&x1035, &x1036, 0x0, x1010, x923);
    var x1037: u32 = undefined;
    var x1038: u1 = undefined;
    addcarryxU32(&x1037, &x1038, x1036, x1031, x924);
    var x1039: u32 = undefined;
    var x1040: u1 = undefined;
    addcarryxU32(&x1039, &x1040, x1038, x1033, x922);
    var x1041: u32 = undefined;
    var x1042: u1 = undefined;
    addcarryxU32(&x1041, &x1042, 0x0, x1035, x929);
    var x1043: u32 = undefined;
    var x1044: u1 = undefined;
    addcarryxU32(&x1043, &x1044, x1042, x1037, x927);
    var x1045: u32 = undefined;
    var x1046: u1 = undefined;
    addcarryxU32(&x1045, &x1046, x1044, x1039, x925);
    var x1047: u32 = undefined;
    var x1048: u1 = undefined;
    addcarryxU32(&x1047, &x1048, 0x0, x1012, x931);
    var x1049: u32 = undefined;
    var x1050: u1 = undefined;
    addcarryxU32(&x1049, &x1050, x1048, x1041, x932);
    var x1051: u32 = undefined;
    var x1052: u1 = undefined;
    addcarryxU32(&x1051, &x1052, x1050, x1043, x930);
    var x1053: u32 = undefined;
    var x1054: u1 = undefined;
    addcarryxU32(&x1053, &x1054, x1052, x1045, x928);
    var x1055: u32 = undefined;
    var x1056: u1 = undefined;
    addcarryxU32(&x1055, &x1056, 0x0, x1047, x939);
    var x1057: u32 = undefined;
    var x1058: u1 = undefined;
    addcarryxU32(&x1057, &x1058, x1056, x1049, x937);
    var x1059: u32 = undefined;
    var x1060: u1 = undefined;
    addcarryxU32(&x1059, &x1060, x1058, x1051, x935);
    var x1061: u32 = undefined;
    var x1062: u1 = undefined;
    addcarryxU32(&x1061, &x1062, x1060, x1053, x933);
    var x1063: u32 = undefined;
    var x1064: u1 = undefined;
    addcarryxU32(&x1063, &x1064, 0x0, x1014, x941);
    var x1065: u32 = undefined;
    var x1066: u1 = undefined;
    addcarryxU32(&x1065, &x1066, x1064, x1055, x942);
    var x1067: u32 = undefined;
    var x1068: u1 = undefined;
    addcarryxU32(&x1067, &x1068, x1066, x1057, x940);
    var x1069: u32 = undefined;
    var x1070: u1 = undefined;
    addcarryxU32(&x1069, &x1070, x1068, x1059, x938);
    var x1071: u32 = undefined;
    var x1072: u1 = undefined;
    addcarryxU32(&x1071, &x1072, x1070, x1061, x936);
    var x1073: u32 = undefined;
    var x1074: u1 = undefined;
    addcarryxU32(&x1073, &x1074, 0x0, x1063, x951);
    var x1075: u32 = undefined;
    var x1076: u1 = undefined;
    addcarryxU32(&x1075, &x1076, x1074, x1065, x949);
    var x1077: u32 = undefined;
    var x1078: u1 = undefined;
    addcarryxU32(&x1077, &x1078, x1076, x1067, x947);
    var x1079: u32 = undefined;
    var x1080: u1 = undefined;
    addcarryxU32(&x1079, &x1080, x1078, x1069, x945);
    var x1081: u32 = undefined;
    var x1082: u1 = undefined;
    addcarryxU32(&x1081, &x1082, x1080, x1071, x943);
    var x1083: u32 = undefined;
    var x1084: u1 = undefined;
    addcarryxU32(&x1083, &x1084, 0x0, x1016, x953);
    var x1085: u32 = undefined;
    var x1086: u1 = undefined;
    addcarryxU32(&x1085, &x1086, x1084, x1073, x954);
    var x1087: u32 = undefined;
    var x1088: u1 = undefined;
    addcarryxU32(&x1087, &x1088, x1086, x1075, x952);
    var x1089: u32 = undefined;
    var x1090: u1 = undefined;
    addcarryxU32(&x1089, &x1090, x1088, x1077, x950);
    var x1091: u32 = undefined;
    var x1092: u1 = undefined;
    addcarryxU32(&x1091, &x1092, x1090, x1079, x948);
    var x1093: u32 = undefined;
    var x1094: u1 = undefined;
    addcarryxU32(&x1093, &x1094, x1092, x1081, x946);
    var x1095: u32 = undefined;
    var x1096: u1 = undefined;
    addcarryxU32(&x1095, &x1096, 0x0, x1083, x965);
    var x1097: u32 = undefined;
    var x1098: u1 = undefined;
    addcarryxU32(&x1097, &x1098, x1096, x1085, x963);
    var x1099: u32 = undefined;
    var x1100: u1 = undefined;
    addcarryxU32(&x1099, &x1100, x1098, x1087, x961);
    var x1101: u32 = undefined;
    var x1102: u1 = undefined;
    addcarryxU32(&x1101, &x1102, x1100, x1089, x959);
    var x1103: u32 = undefined;
    var x1104: u1 = undefined;
    addcarryxU32(&x1103, &x1104, x1102, x1091, x957);
    var x1105: u32 = undefined;
    var x1106: u1 = undefined;
    addcarryxU32(&x1105, &x1106, x1104, x1093, x955);
    var x1107: u32 = undefined;
    var x1108: u1 = undefined;
    addcarryxU32(&x1107, &x1108, 0x0, x1018, x967);
    var x1109: u32 = undefined;
    var x1110: u1 = undefined;
    addcarryxU32(&x1109, &x1110, x1108, x1095, x968);
    var x1111: u32 = undefined;
    var x1112: u1 = undefined;
    addcarryxU32(&x1111, &x1112, x1110, x1097, x966);
    var x1113: u32 = undefined;
    var x1114: u1 = undefined;
    addcarryxU32(&x1113, &x1114, x1112, x1099, x964);
    var x1115: u32 = undefined;
    var x1116: u1 = undefined;
    addcarryxU32(&x1115, &x1116, x1114, x1101, x962);
    var x1117: u32 = undefined;
    var x1118: u1 = undefined;
    addcarryxU32(&x1117, &x1118, x1116, x1103, x960);
    var x1119: u32 = undefined;
    var x1120: u1 = undefined;
    addcarryxU32(&x1119, &x1120, x1118, x1105, x958);
    var x1121: u32 = undefined;
    var x1122: u1 = undefined;
    addcarryxU32(&x1121, &x1122, 0x0, x1107, x981);
    var x1123: u32 = undefined;
    var x1124: u1 = undefined;
    addcarryxU32(&x1123, &x1124, x1122, x1109, x979);
    var x1125: u32 = undefined;
    var x1126: u1 = undefined;
    addcarryxU32(&x1125, &x1126, x1124, x1111, x977);
    var x1127: u32 = undefined;
    var x1128: u1 = undefined;
    addcarryxU32(&x1127, &x1128, x1126, x1113, x975);
    var x1129: u32 = undefined;
    var x1130: u1 = undefined;
    addcarryxU32(&x1129, &x1130, x1128, x1115, x973);
    var x1131: u32 = undefined;
    var x1132: u1 = undefined;
    addcarryxU32(&x1131, &x1132, x1130, x1117, x971);
    var x1133: u32 = undefined;
    var x1134: u1 = undefined;
    addcarryxU32(&x1133, &x1134, x1132, x1119, x969);
    var x1135: u32 = undefined;
    var x1136: u1 = undefined;
    addcarryxU32(&x1135, &x1136, 0x0, x1020, x983);
    var x1137: u32 = undefined;
    var x1138: u1 = undefined;
    addcarryxU32(&x1137, &x1138, x1136, x1121, x984);
    var x1139: u32 = undefined;
    var x1140: u1 = undefined;
    addcarryxU32(&x1139, &x1140, x1138, x1123, x982);
    var x1141: u32 = undefined;
    var x1142: u1 = undefined;
    addcarryxU32(&x1141, &x1142, x1140, x1125, x980);
    var x1143: u32 = undefined;
    var x1144: u1 = undefined;
    addcarryxU32(&x1143, &x1144, x1142, x1127, x978);
    var x1145: u32 = undefined;
    var x1146: u1 = undefined;
    addcarryxU32(&x1145, &x1146, x1144, x1129, x976);
    var x1147: u32 = undefined;
    var x1148: u1 = undefined;
    addcarryxU32(&x1147, &x1148, x1146, x1131, x974);
    var x1149: u32 = undefined;
    var x1150: u1 = undefined;
    addcarryxU32(&x1149, &x1150, x1148, x1133, x972);
    var x1151: u32 = undefined;
    var x1152: u1 = undefined;
    addcarryxU32(&x1151, &x1152, 0x0, x1135, x999);
    var x1153: u32 = undefined;
    var x1154: u1 = undefined;
    addcarryxU32(&x1153, &x1154, x1152, x1137, x997);
    var x1155: u32 = undefined;
    var x1156: u1 = undefined;
    addcarryxU32(&x1155, &x1156, x1154, x1139, x995);
    var x1157: u32 = undefined;
    var x1158: u1 = undefined;
    addcarryxU32(&x1157, &x1158, x1156, x1141, x993);
    var x1159: u32 = undefined;
    var x1160: u1 = undefined;
    addcarryxU32(&x1159, &x1160, x1158, x1143, x991);
    var x1161: u32 = undefined;
    var x1162: u1 = undefined;
    addcarryxU32(&x1161, &x1162, x1160, x1145, x989);
    var x1163: u32 = undefined;
    var x1164: u1 = undefined;
    addcarryxU32(&x1163, &x1164, x1162, x1147, x987);
    var x1165: u32 = undefined;
    var x1166: u1 = undefined;
    addcarryxU32(&x1165, &x1166, x1164, x1149, x985);
    var x1167: u32 = undefined;
    var x1168: u1 = undefined;
    addcarryxU32(&x1167, &x1168, 0x0, x1022, x1001);
    var x1169: u32 = undefined;
    var x1170: u1 = undefined;
    addcarryxU32(&x1169, &x1170, x1168, x1151, x1002);
    var x1171: u32 = undefined;
    var x1172: u1 = undefined;
    addcarryxU32(&x1171, &x1172, x1170, x1153, x1000);
    var x1173: u32 = undefined;
    var x1174: u1 = undefined;
    addcarryxU32(&x1173, &x1174, x1172, x1155, x998);
    var x1175: u32 = undefined;
    var x1176: u1 = undefined;
    addcarryxU32(&x1175, &x1176, x1174, x1157, x996);
    var x1177: u32 = undefined;
    var x1178: u1 = undefined;
    addcarryxU32(&x1177, &x1178, x1176, x1159, x994);
    var x1179: u32 = undefined;
    var x1180: u1 = undefined;
    addcarryxU32(&x1179, &x1180, x1178, x1161, x992);
    var x1181: u32 = undefined;
    var x1182: u1 = undefined;
    addcarryxU32(&x1181, &x1182, x1180, x1163, x990);
    var x1183: u32 = undefined;
    var x1184: u1 = undefined;
    addcarryxU32(&x1183, &x1184, x1182, x1165, x988);
    var x1185: u32 = undefined;
    var x1186: u1 = undefined;
    addcarryxU32(&x1185, &x1186, 0x0, x1167, x1019);
    var x1187: u32 = undefined;
    var x1188: u1 = undefined;
    addcarryxU32(&x1187, &x1188, x1186, x1169, x1017);
    var x1189: u32 = undefined;
    var x1190: u1 = undefined;
    addcarryxU32(&x1189, &x1190, x1188, x1171, x1015);
    var x1191: u32 = undefined;
    var x1192: u1 = undefined;
    addcarryxU32(&x1191, &x1192, x1190, x1173, x1013);
    var x1193: u32 = undefined;
    var x1194: u1 = undefined;
    addcarryxU32(&x1193, &x1194, x1192, x1175, x1011);
    var x1195: u32 = undefined;
    var x1196: u1 = undefined;
    addcarryxU32(&x1195, &x1196, x1194, x1177, x1009);
    var x1197: u32 = undefined;
    var x1198: u1 = undefined;
    addcarryxU32(&x1197, &x1198, x1196, x1179, x1007);
    var x1199: u32 = undefined;
    var x1200: u1 = undefined;
    addcarryxU32(&x1199, &x1200, x1198, x1181, x1005);
    var x1201: u32 = undefined;
    var x1202: u1 = undefined;
    addcarryxU32(&x1201, &x1202, x1200, x1183, x1003);
    var x1203: u32 = undefined;
    cmovznzU32(&x1203, cast(u1, ((arg2[8]) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x1204: u32 = undefined;
    cmovznzU32(&x1204, cast(u1, (cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))) >> 31)), cast(u32, 0x0), 0xffffffff);
    var x1205: u32 = undefined;
    var x1206: u32 = undefined;
    mulxU32(&x1205, &x1206, x1204, (arg2[0]));
    var x1207: u32 = undefined;
    var x1208: u32 = undefined;
    mulxU32(&x1207, &x1208, x1204, (arg2[1]));
    var x1209: u32 = undefined;
    var x1210: u32 = undefined;
    mulxU32(&x1209, &x1210, x1204, (arg2[0]));
    var x1211: u32 = undefined;
    var x1212: u32 = undefined;
    mulxU32(&x1211, &x1212, x1204, (arg2[2]));
    var x1213: u32 = undefined;
    var x1214: u32 = undefined;
    mulxU32(&x1213, &x1214, x1204, (arg2[1]));
    var x1215: u32 = undefined;
    var x1216: u32 = undefined;
    mulxU32(&x1215, &x1216, x1204, (arg2[0]));
    var x1217: u32 = undefined;
    var x1218: u32 = undefined;
    mulxU32(&x1217, &x1218, x1204, (arg2[3]));
    var x1219: u32 = undefined;
    var x1220: u32 = undefined;
    mulxU32(&x1219, &x1220, x1204, (arg2[2]));
    var x1221: u32 = undefined;
    var x1222: u32 = undefined;
    mulxU32(&x1221, &x1222, x1204, (arg2[1]));
    var x1223: u32 = undefined;
    var x1224: u32 = undefined;
    mulxU32(&x1223, &x1224, x1204, (arg2[0]));
    var x1225: u32 = undefined;
    var x1226: u32 = undefined;
    mulxU32(&x1225, &x1226, x1204, (arg2[4]));
    var x1227: u32 = undefined;
    var x1228: u32 = undefined;
    mulxU32(&x1227, &x1228, x1204, (arg2[3]));
    var x1229: u32 = undefined;
    var x1230: u32 = undefined;
    mulxU32(&x1229, &x1230, x1204, (arg2[2]));
    var x1231: u32 = undefined;
    var x1232: u32 = undefined;
    mulxU32(&x1231, &x1232, x1204, (arg2[1]));
    var x1233: u32 = undefined;
    var x1234: u32 = undefined;
    mulxU32(&x1233, &x1234, x1204, (arg2[0]));
    var x1235: u32 = undefined;
    var x1236: u32 = undefined;
    mulxU32(&x1235, &x1236, x1204, (arg2[5]));
    var x1237: u32 = undefined;
    var x1238: u32 = undefined;
    mulxU32(&x1237, &x1238, x1204, (arg2[4]));
    var x1239: u32 = undefined;
    var x1240: u32 = undefined;
    mulxU32(&x1239, &x1240, x1204, (arg2[3]));
    var x1241: u32 = undefined;
    var x1242: u32 = undefined;
    mulxU32(&x1241, &x1242, x1204, (arg2[2]));
    var x1243: u32 = undefined;
    var x1244: u32 = undefined;
    mulxU32(&x1243, &x1244, x1204, (arg2[1]));
    var x1245: u32 = undefined;
    var x1246: u32 = undefined;
    mulxU32(&x1245, &x1246, x1204, (arg2[0]));
    var x1247: u32 = undefined;
    var x1248: u32 = undefined;
    mulxU32(&x1247, &x1248, x1204, (arg2[6]));
    var x1249: u32 = undefined;
    var x1250: u32 = undefined;
    mulxU32(&x1249, &x1250, x1204, (arg2[5]));
    var x1251: u32 = undefined;
    var x1252: u32 = undefined;
    mulxU32(&x1251, &x1252, x1204, (arg2[4]));
    var x1253: u32 = undefined;
    var x1254: u32 = undefined;
    mulxU32(&x1253, &x1254, x1204, (arg2[3]));
    var x1255: u32 = undefined;
    var x1256: u32 = undefined;
    mulxU32(&x1255, &x1256, x1204, (arg2[2]));
    var x1257: u32 = undefined;
    var x1258: u32 = undefined;
    mulxU32(&x1257, &x1258, x1204, (arg2[1]));
    var x1259: u32 = undefined;
    var x1260: u32 = undefined;
    mulxU32(&x1259, &x1260, x1204, (arg2[0]));
    var x1261: u32 = undefined;
    var x1262: u32 = undefined;
    mulxU32(&x1261, &x1262, x1204, (arg2[7]));
    var x1263: u32 = undefined;
    var x1264: u32 = undefined;
    mulxU32(&x1263, &x1264, x1204, (arg2[6]));
    var x1265: u32 = undefined;
    var x1266: u32 = undefined;
    mulxU32(&x1265, &x1266, x1204, (arg2[5]));
    var x1267: u32 = undefined;
    var x1268: u32 = undefined;
    mulxU32(&x1267, &x1268, x1204, (arg2[4]));
    var x1269: u32 = undefined;
    var x1270: u32 = undefined;
    mulxU32(&x1269, &x1270, x1204, (arg2[3]));
    var x1271: u32 = undefined;
    var x1272: u32 = undefined;
    mulxU32(&x1271, &x1272, x1204, (arg2[2]));
    var x1273: u32 = undefined;
    var x1274: u32 = undefined;
    mulxU32(&x1273, &x1274, x1204, (arg2[1]));
    var x1275: u32 = undefined;
    var x1276: u32 = undefined;
    mulxU32(&x1275, &x1276, x1204, (arg2[0]));
    var x1277: u32 = undefined;
    var x1278: u32 = undefined;
    mulxU32(&x1277, &x1278, x1204, (arg2[8]));
    var x1279: u32 = undefined;
    var x1280: u32 = undefined;
    mulxU32(&x1279, &x1280, x1204, (arg2[7]));
    var x1281: u32 = undefined;
    var x1282: u32 = undefined;
    mulxU32(&x1281, &x1282, x1204, (arg2[6]));
    var x1283: u32 = undefined;
    var x1284: u32 = undefined;
    mulxU32(&x1283, &x1284, x1204, (arg2[5]));
    var x1285: u32 = undefined;
    var x1286: u32 = undefined;
    mulxU32(&x1285, &x1286, x1204, (arg2[4]));
    var x1287: u32 = undefined;
    var x1288: u32 = undefined;
    mulxU32(&x1287, &x1288, x1204, (arg2[3]));
    var x1289: u32 = undefined;
    var x1290: u32 = undefined;
    mulxU32(&x1289, &x1290, x1204, (arg2[2]));
    var x1291: u32 = undefined;
    var x1292: u32 = undefined;
    mulxU32(&x1291, &x1292, x1204, (arg2[1]));
    var x1293: u32 = undefined;
    var x1294: u32 = undefined;
    mulxU32(&x1293, &x1294, x1204, (arg2[0]));
    var x1295: u32 = undefined;
    var x1296: u32 = undefined;
    mulxU32(&x1295, &x1296, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), x1203);
    var x1297: u32 = undefined;
    var x1298: u32 = undefined;
    mulxU32(&x1297, &x1298, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[8]));
    var x1299: u32 = undefined;
    var x1300: u32 = undefined;
    mulxU32(&x1299, &x1300, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[7]));
    var x1301: u32 = undefined;
    var x1302: u32 = undefined;
    mulxU32(&x1301, &x1302, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[6]));
    var x1303: u32 = undefined;
    var x1304: u32 = undefined;
    mulxU32(&x1303, &x1304, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[5]));
    var x1305: u32 = undefined;
    var x1306: u32 = undefined;
    mulxU32(&x1305, &x1306, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[4]));
    var x1307: u32 = undefined;
    var x1308: u32 = undefined;
    mulxU32(&x1307, &x1308, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[3]));
    var x1309: u32 = undefined;
    var x1310: u32 = undefined;
    mulxU32(&x1309, &x1310, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[2]));
    var x1311: u32 = undefined;
    var x1312: u32 = undefined;
    mulxU32(&x1311, &x1312, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[1]));
    var x1313: u32 = undefined;
    var x1314: u32 = undefined;
    mulxU32(&x1313, &x1314, cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))), (arg2[0]));
    var x1315: u32 = undefined;
    var x1316: u1 = undefined;
    addcarryxU32(&x1315, &x1316, 0x0, x1298, x1205);
    var x1317: u32 = undefined;
    var x1318: u1 = undefined;
    addcarryxU32(&x1317, &x1318, 0x0, x1315, x1207);
    var x1319: u32 = undefined;
    var x1320: u1 = undefined;
    addcarryxU32(&x1319, &x1320, 0x0, x1300, x1209);
    var x1321: u32 = undefined;
    var x1322: u1 = undefined;
    addcarryxU32(&x1321, &x1322, x1320, x1317, x1210);
    var x1323: u32 = undefined;
    var x1324: u1 = undefined;
    addcarryxU32(&x1323, &x1324, 0x0, x1319, x1213);
    var x1325: u32 = undefined;
    var x1326: u1 = undefined;
    addcarryxU32(&x1325, &x1326, x1324, x1321, x1211);
    var x1327: u32 = undefined;
    var x1328: u1 = undefined;
    addcarryxU32(&x1327, &x1328, 0x0, x1302, x1215);
    var x1329: u32 = undefined;
    var x1330: u1 = undefined;
    addcarryxU32(&x1329, &x1330, x1328, x1323, x1216);
    var x1331: u32 = undefined;
    var x1332: u1 = undefined;
    addcarryxU32(&x1331, &x1332, x1330, x1325, x1214);
    var x1333: u32 = undefined;
    var x1334: u1 = undefined;
    addcarryxU32(&x1333, &x1334, 0x0, x1327, x1221);
    var x1335: u32 = undefined;
    var x1336: u1 = undefined;
    addcarryxU32(&x1335, &x1336, x1334, x1329, x1219);
    var x1337: u32 = undefined;
    var x1338: u1 = undefined;
    addcarryxU32(&x1337, &x1338, x1336, x1331, x1217);
    var x1339: u32 = undefined;
    var x1340: u1 = undefined;
    addcarryxU32(&x1339, &x1340, 0x0, x1304, x1223);
    var x1341: u32 = undefined;
    var x1342: u1 = undefined;
    addcarryxU32(&x1341, &x1342, x1340, x1333, x1224);
    var x1343: u32 = undefined;
    var x1344: u1 = undefined;
    addcarryxU32(&x1343, &x1344, x1342, x1335, x1222);
    var x1345: u32 = undefined;
    var x1346: u1 = undefined;
    addcarryxU32(&x1345, &x1346, x1344, x1337, x1220);
    var x1347: u32 = undefined;
    var x1348: u1 = undefined;
    addcarryxU32(&x1347, &x1348, 0x0, x1339, x1231);
    var x1349: u32 = undefined;
    var x1350: u1 = undefined;
    addcarryxU32(&x1349, &x1350, x1348, x1341, x1229);
    var x1351: u32 = undefined;
    var x1352: u1 = undefined;
    addcarryxU32(&x1351, &x1352, x1350, x1343, x1227);
    var x1353: u32 = undefined;
    var x1354: u1 = undefined;
    addcarryxU32(&x1353, &x1354, x1352, x1345, x1225);
    var x1355: u32 = undefined;
    var x1356: u1 = undefined;
    addcarryxU32(&x1355, &x1356, 0x0, x1306, x1233);
    var x1357: u32 = undefined;
    var x1358: u1 = undefined;
    addcarryxU32(&x1357, &x1358, x1356, x1347, x1234);
    var x1359: u32 = undefined;
    var x1360: u1 = undefined;
    addcarryxU32(&x1359, &x1360, x1358, x1349, x1232);
    var x1361: u32 = undefined;
    var x1362: u1 = undefined;
    addcarryxU32(&x1361, &x1362, x1360, x1351, x1230);
    var x1363: u32 = undefined;
    var x1364: u1 = undefined;
    addcarryxU32(&x1363, &x1364, x1362, x1353, x1228);
    var x1365: u32 = undefined;
    var x1366: u1 = undefined;
    addcarryxU32(&x1365, &x1366, 0x0, x1355, x1243);
    var x1367: u32 = undefined;
    var x1368: u1 = undefined;
    addcarryxU32(&x1367, &x1368, x1366, x1357, x1241);
    var x1369: u32 = undefined;
    var x1370: u1 = undefined;
    addcarryxU32(&x1369, &x1370, x1368, x1359, x1239);
    var x1371: u32 = undefined;
    var x1372: u1 = undefined;
    addcarryxU32(&x1371, &x1372, x1370, x1361, x1237);
    var x1373: u32 = undefined;
    var x1374: u1 = undefined;
    addcarryxU32(&x1373, &x1374, x1372, x1363, x1235);
    var x1375: u32 = undefined;
    var x1376: u1 = undefined;
    addcarryxU32(&x1375, &x1376, 0x0, x1308, x1245);
    var x1377: u32 = undefined;
    var x1378: u1 = undefined;
    addcarryxU32(&x1377, &x1378, x1376, x1365, x1246);
    var x1379: u32 = undefined;
    var x1380: u1 = undefined;
    addcarryxU32(&x1379, &x1380, x1378, x1367, x1244);
    var x1381: u32 = undefined;
    var x1382: u1 = undefined;
    addcarryxU32(&x1381, &x1382, x1380, x1369, x1242);
    var x1383: u32 = undefined;
    var x1384: u1 = undefined;
    addcarryxU32(&x1383, &x1384, x1382, x1371, x1240);
    var x1385: u32 = undefined;
    var x1386: u1 = undefined;
    addcarryxU32(&x1385, &x1386, x1384, x1373, x1238);
    var x1387: u32 = undefined;
    var x1388: u1 = undefined;
    addcarryxU32(&x1387, &x1388, 0x0, x1375, x1257);
    var x1389: u32 = undefined;
    var x1390: u1 = undefined;
    addcarryxU32(&x1389, &x1390, x1388, x1377, x1255);
    var x1391: u32 = undefined;
    var x1392: u1 = undefined;
    addcarryxU32(&x1391, &x1392, x1390, x1379, x1253);
    var x1393: u32 = undefined;
    var x1394: u1 = undefined;
    addcarryxU32(&x1393, &x1394, x1392, x1381, x1251);
    var x1395: u32 = undefined;
    var x1396: u1 = undefined;
    addcarryxU32(&x1395, &x1396, x1394, x1383, x1249);
    var x1397: u32 = undefined;
    var x1398: u1 = undefined;
    addcarryxU32(&x1397, &x1398, x1396, x1385, x1247);
    var x1399: u32 = undefined;
    var x1400: u1 = undefined;
    addcarryxU32(&x1399, &x1400, 0x0, x1310, x1259);
    var x1401: u32 = undefined;
    var x1402: u1 = undefined;
    addcarryxU32(&x1401, &x1402, x1400, x1387, x1260);
    var x1403: u32 = undefined;
    var x1404: u1 = undefined;
    addcarryxU32(&x1403, &x1404, x1402, x1389, x1258);
    var x1405: u32 = undefined;
    var x1406: u1 = undefined;
    addcarryxU32(&x1405, &x1406, x1404, x1391, x1256);
    var x1407: u32 = undefined;
    var x1408: u1 = undefined;
    addcarryxU32(&x1407, &x1408, x1406, x1393, x1254);
    var x1409: u32 = undefined;
    var x1410: u1 = undefined;
    addcarryxU32(&x1409, &x1410, x1408, x1395, x1252);
    var x1411: u32 = undefined;
    var x1412: u1 = undefined;
    addcarryxU32(&x1411, &x1412, x1410, x1397, x1250);
    var x1413: u32 = undefined;
    var x1414: u1 = undefined;
    addcarryxU32(&x1413, &x1414, 0x0, x1399, x1273);
    var x1415: u32 = undefined;
    var x1416: u1 = undefined;
    addcarryxU32(&x1415, &x1416, x1414, x1401, x1271);
    var x1417: u32 = undefined;
    var x1418: u1 = undefined;
    addcarryxU32(&x1417, &x1418, x1416, x1403, x1269);
    var x1419: u32 = undefined;
    var x1420: u1 = undefined;
    addcarryxU32(&x1419, &x1420, x1418, x1405, x1267);
    var x1421: u32 = undefined;
    var x1422: u1 = undefined;
    addcarryxU32(&x1421, &x1422, x1420, x1407, x1265);
    var x1423: u32 = undefined;
    var x1424: u1 = undefined;
    addcarryxU32(&x1423, &x1424, x1422, x1409, x1263);
    var x1425: u32 = undefined;
    var x1426: u1 = undefined;
    addcarryxU32(&x1425, &x1426, x1424, x1411, x1261);
    var x1427: u32 = undefined;
    var x1428: u1 = undefined;
    addcarryxU32(&x1427, &x1428, 0x0, x1312, x1275);
    var x1429: u32 = undefined;
    var x1430: u1 = undefined;
    addcarryxU32(&x1429, &x1430, x1428, x1413, x1276);
    var x1431: u32 = undefined;
    var x1432: u1 = undefined;
    addcarryxU32(&x1431, &x1432, x1430, x1415, x1274);
    var x1433: u32 = undefined;
    var x1434: u1 = undefined;
    addcarryxU32(&x1433, &x1434, x1432, x1417, x1272);
    var x1435: u32 = undefined;
    var x1436: u1 = undefined;
    addcarryxU32(&x1435, &x1436, x1434, x1419, x1270);
    var x1437: u32 = undefined;
    var x1438: u1 = undefined;
    addcarryxU32(&x1437, &x1438, x1436, x1421, x1268);
    var x1439: u32 = undefined;
    var x1440: u1 = undefined;
    addcarryxU32(&x1439, &x1440, x1438, x1423, x1266);
    var x1441: u32 = undefined;
    var x1442: u1 = undefined;
    addcarryxU32(&x1441, &x1442, x1440, x1425, x1264);
    var x1443: u32 = undefined;
    var x1444: u1 = undefined;
    addcarryxU32(&x1443, &x1444, 0x0, x1427, x1291);
    var x1445: u32 = undefined;
    var x1446: u1 = undefined;
    addcarryxU32(&x1445, &x1446, x1444, x1429, x1289);
    var x1447: u32 = undefined;
    var x1448: u1 = undefined;
    addcarryxU32(&x1447, &x1448, x1446, x1431, x1287);
    var x1449: u32 = undefined;
    var x1450: u1 = undefined;
    addcarryxU32(&x1449, &x1450, x1448, x1433, x1285);
    var x1451: u32 = undefined;
    var x1452: u1 = undefined;
    addcarryxU32(&x1451, &x1452, x1450, x1435, x1283);
    var x1453: u32 = undefined;
    var x1454: u1 = undefined;
    addcarryxU32(&x1453, &x1454, x1452, x1437, x1281);
    var x1455: u32 = undefined;
    var x1456: u1 = undefined;
    addcarryxU32(&x1455, &x1456, x1454, x1439, x1279);
    var x1457: u32 = undefined;
    var x1458: u1 = undefined;
    addcarryxU32(&x1457, &x1458, x1456, x1441, x1277);
    var x1459: u32 = undefined;
    var x1460: u1 = undefined;
    addcarryxU32(&x1459, &x1460, 0x0, x1314, x1293);
    var x1461: u32 = undefined;
    var x1462: u1 = undefined;
    addcarryxU32(&x1461, &x1462, x1460, x1443, x1294);
    var x1463: u32 = undefined;
    var x1464: u1 = undefined;
    addcarryxU32(&x1463, &x1464, x1462, x1445, x1292);
    var x1465: u32 = undefined;
    var x1466: u1 = undefined;
    addcarryxU32(&x1465, &x1466, x1464, x1447, x1290);
    var x1467: u32 = undefined;
    var x1468: u1 = undefined;
    addcarryxU32(&x1467, &x1468, x1466, x1449, x1288);
    var x1469: u32 = undefined;
    var x1470: u1 = undefined;
    addcarryxU32(&x1469, &x1470, x1468, x1451, x1286);
    var x1471: u32 = undefined;
    var x1472: u1 = undefined;
    addcarryxU32(&x1471, &x1472, x1470, x1453, x1284);
    var x1473: u32 = undefined;
    var x1474: u1 = undefined;
    addcarryxU32(&x1473, &x1474, x1472, x1455, x1282);
    var x1475: u32 = undefined;
    var x1476: u1 = undefined;
    addcarryxU32(&x1475, &x1476, x1474, x1457, x1280);
    var x1477: u32 = undefined;
    var x1478: u1 = undefined;
    addcarryxU32(&x1477, &x1478, 0x0, x1459, x1311);
    var x1479: u32 = undefined;
    var x1480: u1 = undefined;
    addcarryxU32(&x1479, &x1480, x1478, x1461, x1309);
    var x1481: u32 = undefined;
    var x1482: u1 = undefined;
    addcarryxU32(&x1481, &x1482, x1480, x1463, x1307);
    var x1483: u32 = undefined;
    var x1484: u1 = undefined;
    addcarryxU32(&x1483, &x1484, x1482, x1465, x1305);
    var x1485: u32 = undefined;
    var x1486: u1 = undefined;
    addcarryxU32(&x1485, &x1486, x1484, x1467, x1303);
    var x1487: u32 = undefined;
    var x1488: u1 = undefined;
    addcarryxU32(&x1487, &x1488, x1486, x1469, x1301);
    var x1489: u32 = undefined;
    var x1490: u1 = undefined;
    addcarryxU32(&x1489, &x1490, x1488, x1471, x1299);
    var x1491: u32 = undefined;
    var x1492: u1 = undefined;
    addcarryxU32(&x1491, &x1492, x1490, x1473, x1297);
    var x1493: u32 = undefined;
    var x1494: u1 = undefined;
    addcarryxU32(&x1493, &x1494, x1492, x1475, x1295);
    var x1495: u32 = undefined;
    var x1496: u1 = undefined;
    addcarryxU32(&x1495, &x1496, 0x0, x437, x729);
    var x1497: u32 = undefined;
    var x1498: u1 = undefined;
    addcarryxU32(&x1497, &x1498, x1496, x601, x893);
    var x1499: u32 = undefined;
    var x1500: u1 = undefined;
    addcarryxU32(&x1499, &x1500, x1498, x603, x895);
    var x1501: u32 = undefined;
    var x1502: u1 = undefined;
    addcarryxU32(&x1501, &x1502, x1500, x605, x897);
    var x1503: u32 = undefined;
    var x1504: u1 = undefined;
    addcarryxU32(&x1503, &x1504, x1502, x607, x899);
    var x1505: u32 = undefined;
    var x1506: u1 = undefined;
    addcarryxU32(&x1505, &x1506, x1504, x609, x901);
    var x1507: u32 = undefined;
    var x1508: u1 = undefined;
    addcarryxU32(&x1507, &x1508, x1506, x611, x903);
    var x1509: u32 = undefined;
    var x1510: u1 = undefined;
    addcarryxU32(&x1509, &x1510, x1508, x613, x905);
    var x1511: u32 = undefined;
    var x1512: u1 = undefined;
    addcarryxU32(&x1511, &x1512, x1510, x615, x907);
    var x1513: u32 = undefined;
    var x1514: u1 = undefined;
    addcarryxU32(&x1513, &x1514, x1512, x617, x909);
    var x1515: u32 = undefined;
    var x1516: u1 = undefined;
    addcarryxU32(&x1515, &x1516, 0x0, x1021, x1313);
    var x1517: u32 = undefined;
    var x1518: u1 = undefined;
    addcarryxU32(&x1517, &x1518, x1516, x1185, x1477);
    var x1519: u32 = undefined;
    var x1520: u1 = undefined;
    addcarryxU32(&x1519, &x1520, x1518, x1187, x1479);
    var x1521: u32 = undefined;
    var x1522: u1 = undefined;
    addcarryxU32(&x1521, &x1522, x1520, x1189, x1481);
    var x1523: u32 = undefined;
    var x1524: u1 = undefined;
    addcarryxU32(&x1523, &x1524, x1522, x1191, x1483);
    var x1525: u32 = undefined;
    var x1526: u1 = undefined;
    addcarryxU32(&x1525, &x1526, x1524, x1193, x1485);
    var x1527: u32 = undefined;
    var x1528: u1 = undefined;
    addcarryxU32(&x1527, &x1528, x1526, x1195, x1487);
    var x1529: u32 = undefined;
    var x1530: u1 = undefined;
    addcarryxU32(&x1529, &x1530, x1528, x1197, x1489);
    var x1531: u32 = undefined;
    var x1532: u1 = undefined;
    addcarryxU32(&x1531, &x1532, x1530, x1199, x1491);
    var x1533: u32 = undefined;
    var x1534: u1 = undefined;
    addcarryxU32(&x1533, &x1534, x1532, x1201, x1493);
    const x1535 = ((x1495 >> 30) | ((x1497 << 2) & 0xffffffff));
    const x1536 = ((x1497 >> 30) | ((x1499 << 2) & 0xffffffff));
    const x1537 = ((x1499 >> 30) | ((x1501 << 2) & 0xffffffff));
    const x1538 = ((x1501 >> 30) | ((x1503 << 2) & 0xffffffff));
    const x1539 = ((x1503 >> 30) | ((x1505 << 2) & 0xffffffff));
    const x1540 = ((x1505 >> 30) | ((x1507 << 2) & 0xffffffff));
    const x1541 = ((x1507 >> 30) | ((x1509 << 2) & 0xffffffff));
    const x1542 = ((x1509 >> 30) | ((x1511 << 2) & 0xffffffff));
    const x1543 = ((x1511 >> 30) | ((x1513 << 2) & 0xffffffff));
    const x1544 = ((x1515 >> 30) | ((x1517 << 2) & 0xffffffff));
    const x1545 = ((x1517 >> 30) | ((x1519 << 2) & 0xffffffff));
    const x1546 = ((x1519 >> 30) | ((x1521 << 2) & 0xffffffff));
    const x1547 = ((x1521 >> 30) | ((x1523 << 2) & 0xffffffff));
    const x1548 = ((x1523 >> 30) | ((x1525 << 2) & 0xffffffff));
    const x1549 = ((x1525 >> 30) | ((x1527 << 2) & 0xffffffff));
    const x1550 = ((x1527 >> 30) | ((x1529 << 2) & 0xffffffff));
    const x1551 = ((x1529 >> 30) | ((x1531 << 2) & 0xffffffff));
    const x1552 = ((x1531 >> 30) | ((x1533 << 2) & 0xffffffff));
    const x1553 = cast(u1, (cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))) >> 31));
    const x1554 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    const x1555 = cast(u32, ((cast(u64, x321) + cast(u64, x321)) & cast(u64, 0xffffffff)));
    const x1556 = (x1555 >> 26);
    const x1557 = (x1555 & 0x3ffffff);
    const x1558 = (x1554 >> 26);
    const x1559 = (x1554 & 0x3ffffff);
    const x1560 = (0x7ffffda - x1559);
    const x1561 = (0x3fffffe - x1558);
    const x1562 = cast(u1, (x1560 >> 26));
    const x1563 = (x1560 & 0x3ffffff);
    const x1564 = (cast(u32, x1562) + x1561);
    const x1565 = (x1564 & 0x1ffffff);
    const x1566 = (x1563 + 0x13);
    const x1567 = cast(u1, (x1566 >> 26));
    const x1568 = (x1566 & 0x3ffffff);
    const x1569 = (cast(u32, x1567) + x1565);
    const x1570 = cast(u1, (x1569 >> 25));
    const x1571 = (x1569 & 0x1ffffff);
    const x1572 = (cast(u32, x1570) + 0x3ffffff);
    var x1573: u32 = undefined;
    cmovznzU32(&x1573, x1553, x1557, x1568);
    var x1574: u32 = undefined;
    cmovznzU32(&x1574, x1553, x1556, x1571);
    var x1575: u32 = undefined;
    cmovznzU32(&x1575, x1553, cast(u32, 0x0), x1572);
    var x1576: u32 = undefined;
    cmovznzU32(&x1576, x1553, cast(u32, 0x0), 0x1ffffff);
    var x1577: u32 = undefined;
    cmovznzU32(&x1577, x1553, cast(u32, 0x0), 0x3ffffff);
    var x1578: u32 = undefined;
    cmovznzU32(&x1578, x1553, cast(u32, 0x0), 0x1ffffff);
    var x1579: u32 = undefined;
    cmovznzU32(&x1579, x1553, cast(u32, 0x0), 0x3ffffff);
    var x1580: u32 = undefined;
    cmovznzU32(&x1580, x1553, cast(u32, 0x0), 0x1ffffff);
    var x1581: u32 = undefined;
    cmovznzU32(&x1581, x1553, cast(u32, 0x0), 0x3ffffff);
    var x1582: u32 = undefined;
    cmovznzU32(&x1582, x1553, cast(u32, 0x0), 0x1ffffff);
    const x1583 = cast(u1, (cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))) >> 31));
    const x1584 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    const x1585 = cast(u32, ((cast(u64, x322) + cast(u64, x322)) & cast(u64, 0xffffffff)));
    const x1586 = (x1585 >> 26);
    const x1587 = (x1585 & 0x3ffffff);
    const x1588 = (x1584 >> 26);
    const x1589 = (x1584 & 0x3ffffff);
    const x1590 = (0x7ffffda - x1589);
    const x1591 = (0x3fffffe - x1588);
    const x1592 = cast(u1, (x1590 >> 26));
    const x1593 = (x1590 & 0x3ffffff);
    const x1594 = (cast(u32, x1592) + x1591);
    const x1595 = (x1594 & 0x1ffffff);
    const x1596 = (x1593 + 0x13);
    const x1597 = cast(u1, (x1596 >> 26));
    const x1598 = (x1596 & 0x3ffffff);
    const x1599 = (cast(u32, x1597) + x1595);
    const x1600 = cast(u1, (x1599 >> 25));
    const x1601 = (x1599 & 0x1ffffff);
    const x1602 = (cast(u32, x1600) + 0x3ffffff);
    var x1603: u32 = undefined;
    cmovznzU32(&x1603, x1583, x1587, x1598);
    var x1604: u32 = undefined;
    cmovznzU32(&x1604, x1583, x1586, x1601);
    var x1605: u32 = undefined;
    cmovznzU32(&x1605, x1583, cast(u32, 0x0), x1602);
    var x1606: u32 = undefined;
    cmovznzU32(&x1606, x1583, cast(u32, 0x0), 0x1ffffff);
    var x1607: u32 = undefined;
    cmovznzU32(&x1607, x1583, cast(u32, 0x0), 0x3ffffff);
    var x1608: u32 = undefined;
    cmovznzU32(&x1608, x1583, cast(u32, 0x0), 0x1ffffff);
    var x1609: u32 = undefined;
    cmovznzU32(&x1609, x1583, cast(u32, 0x0), 0x3ffffff);
    var x1610: u32 = undefined;
    cmovznzU32(&x1610, x1583, cast(u32, 0x0), 0x1ffffff);
    var x1611: u32 = undefined;
    cmovznzU32(&x1611, x1583, cast(u32, 0x0), 0x3ffffff);
    var x1612: u32 = undefined;
    cmovznzU32(&x1612, x1583, cast(u32, 0x0), 0x1ffffff);
    const x1613 = cast(u1, (cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))) >> 31));
    const x1614 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    const x1615 = cast(u32, ((cast(u64, x323) + cast(u64, x325)) & cast(u64, 0xffffffff)));
    const x1616 = (x1615 >> 26);
    const x1617 = (x1615 & 0x3ffffff);
    const x1618 = (x1614 >> 26);
    const x1619 = (x1614 & 0x3ffffff);
    const x1620 = (0x7ffffda - x1619);
    const x1621 = (0x3fffffe - x1618);
    const x1622 = cast(u1, (x1620 >> 26));
    const x1623 = (x1620 & 0x3ffffff);
    const x1624 = (cast(u32, x1622) + x1621);
    const x1625 = (x1624 & 0x1ffffff);
    const x1626 = (x1623 + 0x13);
    const x1627 = cast(u1, (x1626 >> 26));
    const x1628 = (x1626 & 0x3ffffff);
    const x1629 = (cast(u32, x1627) + x1625);
    const x1630 = cast(u1, (x1629 >> 25));
    const x1631 = (x1629 & 0x1ffffff);
    const x1632 = (cast(u32, x1630) + 0x3ffffff);
    var x1633: u32 = undefined;
    cmovznzU32(&x1633, x1613, x1617, x1628);
    var x1634: u32 = undefined;
    cmovznzU32(&x1634, x1613, x1616, x1631);
    var x1635: u32 = undefined;
    cmovznzU32(&x1635, x1613, cast(u32, 0x0), x1632);
    var x1636: u32 = undefined;
    cmovznzU32(&x1636, x1613, cast(u32, 0x0), 0x1ffffff);
    var x1637: u32 = undefined;
    cmovznzU32(&x1637, x1613, cast(u32, 0x0), 0x3ffffff);
    var x1638: u32 = undefined;
    cmovznzU32(&x1638, x1613, cast(u32, 0x0), 0x1ffffff);
    var x1639: u32 = undefined;
    cmovznzU32(&x1639, x1613, cast(u32, 0x0), 0x3ffffff);
    var x1640: u32 = undefined;
    cmovznzU32(&x1640, x1613, cast(u32, 0x0), 0x1ffffff);
    var x1641: u32 = undefined;
    cmovznzU32(&x1641, x1613, cast(u32, 0x0), 0x3ffffff);
    var x1642: u32 = undefined;
    cmovznzU32(&x1642, x1613, cast(u32, 0x0), 0x1ffffff);
    const x1643 = cast(u1, (cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))) >> 31));
    const x1644 = cast(u32, ((cast(u64, (~cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff))))) + cast(u64, 0x1)) & cast(u64, 0xffffffff)));
    const x1645 = cast(u32, ((cast(u64, x324) + cast(u64, x326)) & cast(u64, 0xffffffff)));
    const x1646 = (x1645 >> 26);
    const x1647 = (x1645 & 0x3ffffff);
    const x1648 = (x1644 >> 26);
    const x1649 = (x1644 & 0x3ffffff);
    const x1650 = (0x7ffffda - x1649);
    const x1651 = (0x3fffffe - x1648);
    const x1652 = cast(u1, (x1650 >> 26));
    const x1653 = (x1650 & 0x3ffffff);
    const x1654 = (cast(u32, x1652) + x1651);
    const x1655 = (x1654 & 0x1ffffff);
    const x1656 = (x1653 + 0x13);
    const x1657 = cast(u1, (x1656 >> 26));
    const x1658 = (x1656 & 0x3ffffff);
    const x1659 = (cast(u32, x1657) + x1655);
    const x1660 = cast(u1, (x1659 >> 25));
    const x1661 = (x1659 & 0x1ffffff);
    const x1662 = (cast(u32, x1660) + 0x3ffffff);
    var x1663: u32 = undefined;
    cmovznzU32(&x1663, x1643, x1647, x1658);
    var x1664: u32 = undefined;
    cmovznzU32(&x1664, x1643, x1646, x1661);
    var x1665: u32 = undefined;
    cmovznzU32(&x1665, x1643, cast(u32, 0x0), x1662);
    var x1666: u32 = undefined;
    cmovznzU32(&x1666, x1643, cast(u32, 0x0), 0x1ffffff);
    var x1667: u32 = undefined;
    cmovznzU32(&x1667, x1643, cast(u32, 0x0), 0x3ffffff);
    var x1668: u32 = undefined;
    cmovznzU32(&x1668, x1643, cast(u32, 0x0), 0x1ffffff);
    var x1669: u32 = undefined;
    cmovznzU32(&x1669, x1643, cast(u32, 0x0), 0x3ffffff);
    var x1670: u32 = undefined;
    cmovznzU32(&x1670, x1643, cast(u32, 0x0), 0x1ffffff);
    var x1671: u32 = undefined;
    cmovznzU32(&x1671, x1643, cast(u32, 0x0), 0x3ffffff);
    var x1672: u32 = undefined;
    cmovznzU32(&x1672, x1643, cast(u32, 0x0), 0x1ffffff);
    const x1673 = (cast(u64, x1582) * cast(u64, ((arg3[9]) * 0x26)));
    const x1674 = (cast(u64, x1582) * cast(u64, ((arg3[8]) * 0x13)));
    const x1675 = (cast(u64, x1582) * cast(u64, ((arg3[7]) * 0x26)));
    const x1676 = (cast(u64, x1582) * cast(u64, ((arg3[6]) * 0x13)));
    const x1677 = (cast(u64, x1582) * cast(u64, ((arg3[5]) * 0x26)));
    const x1678 = (cast(u64, x1582) * cast(u64, ((arg3[4]) * 0x13)));
    const x1679 = (cast(u64, x1582) * cast(u64, ((arg3[3]) * 0x26)));
    const x1680 = (cast(u64, x1582) * cast(u64, ((arg3[2]) * 0x13)));
    const x1681 = (cast(u64, x1582) * cast(u64, ((arg3[1]) * 0x26)));
    const x1682 = (cast(u64, x1581) * cast(u64, ((arg3[9]) * 0x13)));
    const x1683 = (cast(u64, x1581) * cast(u64, ((arg3[8]) * 0x13)));
    const x1684 = (cast(u64, x1581) * cast(u64, ((arg3[7]) * 0x13)));
    const x1685 = (cast(u64, x1581) * cast(u64, ((arg3[6]) * 0x13)));
    const x1686 = (cast(u64, x1581) * cast(u64, ((arg3[5]) * 0x13)));
    const x1687 = (cast(u64, x1581) * cast(u64, ((arg3[4]) * 0x13)));
    const x1688 = (cast(u64, x1581) * cast(u64, ((arg3[3]) * 0x13)));
    const x1689 = (cast(u64, x1581) * cast(u64, ((arg3[2]) * 0x13)));
    const x1690 = (cast(u64, x1580) * cast(u64, ((arg3[9]) * 0x26)));
    const x1691 = (cast(u64, x1580) * cast(u64, ((arg3[8]) * 0x13)));
    const x1692 = (cast(u64, x1580) * cast(u64, ((arg3[7]) * 0x26)));
    const x1693 = (cast(u64, x1580) * cast(u64, ((arg3[6]) * 0x13)));
    const x1694 = (cast(u64, x1580) * cast(u64, ((arg3[5]) * 0x26)));
    const x1695 = (cast(u64, x1580) * cast(u64, ((arg3[4]) * 0x13)));
    const x1696 = (cast(u64, x1580) * cast(u64, ((arg3[3]) * 0x26)));
    const x1697 = (cast(u64, x1579) * cast(u64, ((arg3[9]) * 0x13)));
    const x1698 = (cast(u64, x1579) * cast(u64, ((arg3[8]) * 0x13)));
    const x1699 = (cast(u64, x1579) * cast(u64, ((arg3[7]) * 0x13)));
    const x1700 = (cast(u64, x1579) * cast(u64, ((arg3[6]) * 0x13)));
    const x1701 = (cast(u64, x1579) * cast(u64, ((arg3[5]) * 0x13)));
    const x1702 = (cast(u64, x1579) * cast(u64, ((arg3[4]) * 0x13)));
    const x1703 = (cast(u64, x1578) * cast(u64, ((arg3[9]) * 0x26)));
    const x1704 = (cast(u64, x1578) * cast(u64, ((arg3[8]) * 0x13)));
    const x1705 = (cast(u64, x1578) * cast(u64, ((arg3[7]) * 0x26)));
    const x1706 = (cast(u64, x1578) * cast(u64, ((arg3[6]) * 0x13)));
    const x1707 = (cast(u64, x1578) * cast(u64, ((arg3[5]) * 0x26)));
    const x1708 = (cast(u64, x1577) * cast(u64, ((arg3[9]) * 0x13)));
    const x1709 = (cast(u64, x1577) * cast(u64, ((arg3[8]) * 0x13)));
    const x1710 = (cast(u64, x1577) * cast(u64, ((arg3[7]) * 0x13)));
    const x1711 = (cast(u64, x1577) * cast(u64, ((arg3[6]) * 0x13)));
    const x1712 = (cast(u64, x1576) * cast(u64, ((arg3[9]) * 0x26)));
    const x1713 = (cast(u64, x1576) * cast(u64, ((arg3[8]) * 0x13)));
    const x1714 = (cast(u64, x1576) * cast(u64, ((arg3[7]) * 0x26)));
    const x1715 = (cast(u64, x1575) * cast(u64, ((arg3[9]) * 0x13)));
    const x1716 = (cast(u64, x1575) * cast(u64, ((arg3[8]) * 0x13)));
    const x1717 = (cast(u64, x1574) * cast(u64, ((arg3[9]) * 0x26)));
    const x1718 = (cast(u64, x1582) * cast(u64, (arg3[0])));
    const x1719 = (cast(u64, x1581) * cast(u64, (arg3[1])));
    const x1720 = (cast(u64, x1581) * cast(u64, (arg3[0])));
    const x1721 = (cast(u64, x1580) * cast(u64, (arg3[2])));
    const x1722 = (cast(u64, x1580) * cast(u64, ((arg3[1]) * 0x2)));
    const x1723 = (cast(u64, x1580) * cast(u64, (arg3[0])));
    const x1724 = (cast(u64, x1579) * cast(u64, (arg3[3])));
    const x1725 = (cast(u64, x1579) * cast(u64, (arg3[2])));
    const x1726 = (cast(u64, x1579) * cast(u64, (arg3[1])));
    const x1727 = (cast(u64, x1579) * cast(u64, (arg3[0])));
    const x1728 = (cast(u64, x1578) * cast(u64, (arg3[4])));
    const x1729 = (cast(u64, x1578) * cast(u64, ((arg3[3]) * 0x2)));
    const x1730 = (cast(u64, x1578) * cast(u64, (arg3[2])));
    const x1731 = (cast(u64, x1578) * cast(u64, ((arg3[1]) * 0x2)));
    const x1732 = (cast(u64, x1578) * cast(u64, (arg3[0])));
    const x1733 = (cast(u64, x1577) * cast(u64, (arg3[5])));
    const x1734 = (cast(u64, x1577) * cast(u64, (arg3[4])));
    const x1735 = (cast(u64, x1577) * cast(u64, (arg3[3])));
    const x1736 = (cast(u64, x1577) * cast(u64, (arg3[2])));
    const x1737 = (cast(u64, x1577) * cast(u64, (arg3[1])));
    const x1738 = (cast(u64, x1577) * cast(u64, (arg3[0])));
    const x1739 = (cast(u64, x1576) * cast(u64, (arg3[6])));
    const x1740 = (cast(u64, x1576) * cast(u64, ((arg3[5]) * 0x2)));
    const x1741 = (cast(u64, x1576) * cast(u64, (arg3[4])));
    const x1742 = (cast(u64, x1576) * cast(u64, ((arg3[3]) * 0x2)));
    const x1743 = (cast(u64, x1576) * cast(u64, (arg3[2])));
    const x1744 = (cast(u64, x1576) * cast(u64, ((arg3[1]) * 0x2)));
    const x1745 = (cast(u64, x1576) * cast(u64, (arg3[0])));
    const x1746 = (cast(u64, x1575) * cast(u64, (arg3[7])));
    const x1747 = (cast(u64, x1575) * cast(u64, (arg3[6])));
    const x1748 = (cast(u64, x1575) * cast(u64, (arg3[5])));
    const x1749 = (cast(u64, x1575) * cast(u64, (arg3[4])));
    const x1750 = (cast(u64, x1575) * cast(u64, (arg3[3])));
    const x1751 = (cast(u64, x1575) * cast(u64, (arg3[2])));
    const x1752 = (cast(u64, x1575) * cast(u64, (arg3[1])));
    const x1753 = (cast(u64, x1575) * cast(u64, (arg3[0])));
    const x1754 = (cast(u64, x1574) * cast(u64, (arg3[8])));
    const x1755 = (cast(u64, x1574) * cast(u64, ((arg3[7]) * 0x2)));
    const x1756 = (cast(u64, x1574) * cast(u64, (arg3[6])));
    const x1757 = (cast(u64, x1574) * cast(u64, ((arg3[5]) * 0x2)));
    const x1758 = (cast(u64, x1574) * cast(u64, (arg3[4])));
    const x1759 = (cast(u64, x1574) * cast(u64, ((arg3[3]) * 0x2)));
    const x1760 = (cast(u64, x1574) * cast(u64, (arg3[2])));
    const x1761 = (cast(u64, x1574) * cast(u64, ((arg3[1]) * 0x2)));
    const x1762 = (cast(u64, x1574) * cast(u64, (arg3[0])));
    const x1763 = (cast(u64, x1573) * cast(u64, (arg3[9])));
    const x1764 = (cast(u64, x1573) * cast(u64, (arg3[8])));
    const x1765 = (cast(u64, x1573) * cast(u64, (arg3[7])));
    const x1766 = (cast(u64, x1573) * cast(u64, (arg3[6])));
    const x1767 = (cast(u64, x1573) * cast(u64, (arg3[5])));
    const x1768 = (cast(u64, x1573) * cast(u64, (arg3[4])));
    const x1769 = (cast(u64, x1573) * cast(u64, (arg3[3])));
    const x1770 = (cast(u64, x1573) * cast(u64, (arg3[2])));
    const x1771 = (cast(u64, x1573) * cast(u64, (arg3[1])));
    const x1772 = (cast(u64, x1573) * cast(u64, (arg3[0])));
    const x1773 = (x1772 + (x1717 + (x1716 + (x1714 + (x1711 + (x1707 + (x1702 + (x1696 + (x1689 + x1681)))))))));
    const x1774 = (x1773 >> 26);
    const x1775 = cast(u32, (x1773 & cast(u64, 0x3ffffff)));
    const x1776 = (x1763 + (x1754 + (x1746 + (x1739 + (x1733 + (x1728 + (x1724 + (x1721 + (x1719 + x1718)))))))));
    const x1777 = (x1764 + (x1755 + (x1747 + (x1740 + (x1734 + (x1729 + (x1725 + (x1722 + (x1720 + x1673)))))))));
    const x1778 = (x1765 + (x1756 + (x1748 + (x1741 + (x1735 + (x1730 + (x1726 + (x1723 + (x1682 + x1674)))))))));
    const x1779 = (x1766 + (x1757 + (x1749 + (x1742 + (x1736 + (x1731 + (x1727 + (x1690 + (x1683 + x1675)))))))));
    const x1780 = (x1767 + (x1758 + (x1750 + (x1743 + (x1737 + (x1732 + (x1697 + (x1691 + (x1684 + x1676)))))))));
    const x1781 = (x1768 + (x1759 + (x1751 + (x1744 + (x1738 + (x1703 + (x1698 + (x1692 + (x1685 + x1677)))))))));
    const x1782 = (x1769 + (x1760 + (x1752 + (x1745 + (x1708 + (x1704 + (x1699 + (x1693 + (x1686 + x1678)))))))));
    const x1783 = (x1770 + (x1761 + (x1753 + (x1712 + (x1709 + (x1705 + (x1700 + (x1694 + (x1687 + x1679)))))))));
    const x1784 = (x1771 + (x1762 + (x1715 + (x1713 + (x1710 + (x1706 + (x1701 + (x1695 + (x1688 + x1680)))))))));
    const x1785 = (x1774 + x1784);
    const x1786 = (x1785 >> 25);
    const x1787 = cast(u32, (x1785 & cast(u64, 0x1ffffff)));
    const x1788 = (x1786 + x1783);
    const x1789 = (x1788 >> 26);
    const x1790 = cast(u32, (x1788 & cast(u64, 0x3ffffff)));
    const x1791 = (x1789 + x1782);
    const x1792 = (x1791 >> 25);
    const x1793 = cast(u32, (x1791 & cast(u64, 0x1ffffff)));
    const x1794 = (x1792 + x1781);
    const x1795 = (x1794 >> 26);
    const x1796 = cast(u32, (x1794 & cast(u64, 0x3ffffff)));
    const x1797 = (x1795 + x1780);
    const x1798 = (x1797 >> 25);
    const x1799 = cast(u32, (x1797 & cast(u64, 0x1ffffff)));
    const x1800 = (x1798 + x1779);
    const x1801 = cast(u32, (x1800 >> 26));
    const x1802 = cast(u32, (x1800 & cast(u64, 0x3ffffff)));
    const x1803 = (cast(u64, x1801) + x1778);
    const x1804 = cast(u32, (x1803 >> 25));
    const x1805 = cast(u32, (x1803 & cast(u64, 0x1ffffff)));
    const x1806 = (cast(u64, x1804) + x1777);
    const x1807 = cast(u32, (x1806 >> 26));
    const x1808 = cast(u32, (x1806 & cast(u64, 0x3ffffff)));
    const x1809 = (cast(u64, x1807) + x1776);
    const x1810 = cast(u32, (x1809 >> 25));
    const x1811 = cast(u32, (x1809 & cast(u64, 0x1ffffff)));
    const x1812 = (cast(u64, x1810) * cast(u64, 0x13));
    const x1813 = (cast(u64, x1775) + x1812);
    const x1814 = cast(u32, (x1813 >> 26));
    const x1815 = cast(u32, (x1813 & cast(u64, 0x3ffffff)));
    const x1816 = (x1814 + x1787);
    const x1817 = cast(u1, (x1816 >> 25));
    const x1818 = (x1816 & 0x1ffffff);
    const x1819 = (cast(u32, x1817) + x1790);
    const x1820 = (cast(u64, x1612) * cast(u64, ((arg4[9]) * 0x26)));
    const x1821 = (cast(u64, x1612) * cast(u64, ((arg4[8]) * 0x13)));
    const x1822 = (cast(u64, x1612) * cast(u64, ((arg4[7]) * 0x26)));
    const x1823 = (cast(u64, x1612) * cast(u64, ((arg4[6]) * 0x13)));
    const x1824 = (cast(u64, x1612) * cast(u64, ((arg4[5]) * 0x26)));
    const x1825 = (cast(u64, x1612) * cast(u64, ((arg4[4]) * 0x13)));
    const x1826 = (cast(u64, x1612) * cast(u64, ((arg4[3]) * 0x26)));
    const x1827 = (cast(u64, x1612) * cast(u64, ((arg4[2]) * 0x13)));
    const x1828 = (cast(u64, x1612) * cast(u64, ((arg4[1]) * 0x26)));
    const x1829 = (cast(u64, x1611) * cast(u64, ((arg4[9]) * 0x13)));
    const x1830 = (cast(u64, x1611) * cast(u64, ((arg4[8]) * 0x13)));
    const x1831 = (cast(u64, x1611) * cast(u64, ((arg4[7]) * 0x13)));
    const x1832 = (cast(u64, x1611) * cast(u64, ((arg4[6]) * 0x13)));
    const x1833 = (cast(u64, x1611) * cast(u64, ((arg4[5]) * 0x13)));
    const x1834 = (cast(u64, x1611) * cast(u64, ((arg4[4]) * 0x13)));
    const x1835 = (cast(u64, x1611) * cast(u64, ((arg4[3]) * 0x13)));
    const x1836 = (cast(u64, x1611) * cast(u64, ((arg4[2]) * 0x13)));
    const x1837 = (cast(u64, x1610) * cast(u64, ((arg4[9]) * 0x26)));
    const x1838 = (cast(u64, x1610) * cast(u64, ((arg4[8]) * 0x13)));
    const x1839 = (cast(u64, x1610) * cast(u64, ((arg4[7]) * 0x26)));
    const x1840 = (cast(u64, x1610) * cast(u64, ((arg4[6]) * 0x13)));
    const x1841 = (cast(u64, x1610) * cast(u64, ((arg4[5]) * 0x26)));
    const x1842 = (cast(u64, x1610) * cast(u64, ((arg4[4]) * 0x13)));
    const x1843 = (cast(u64, x1610) * cast(u64, ((arg4[3]) * 0x26)));
    const x1844 = (cast(u64, x1609) * cast(u64, ((arg4[9]) * 0x13)));
    const x1845 = (cast(u64, x1609) * cast(u64, ((arg4[8]) * 0x13)));
    const x1846 = (cast(u64, x1609) * cast(u64, ((arg4[7]) * 0x13)));
    const x1847 = (cast(u64, x1609) * cast(u64, ((arg4[6]) * 0x13)));
    const x1848 = (cast(u64, x1609) * cast(u64, ((arg4[5]) * 0x13)));
    const x1849 = (cast(u64, x1609) * cast(u64, ((arg4[4]) * 0x13)));
    const x1850 = (cast(u64, x1608) * cast(u64, ((arg4[9]) * 0x26)));
    const x1851 = (cast(u64, x1608) * cast(u64, ((arg4[8]) * 0x13)));
    const x1852 = (cast(u64, x1608) * cast(u64, ((arg4[7]) * 0x26)));
    const x1853 = (cast(u64, x1608) * cast(u64, ((arg4[6]) * 0x13)));
    const x1854 = (cast(u64, x1608) * cast(u64, ((arg4[5]) * 0x26)));
    const x1855 = (cast(u64, x1607) * cast(u64, ((arg4[9]) * 0x13)));
    const x1856 = (cast(u64, x1607) * cast(u64, ((arg4[8]) * 0x13)));
    const x1857 = (cast(u64, x1607) * cast(u64, ((arg4[7]) * 0x13)));
    const x1858 = (cast(u64, x1607) * cast(u64, ((arg4[6]) * 0x13)));
    const x1859 = (cast(u64, x1606) * cast(u64, ((arg4[9]) * 0x26)));
    const x1860 = (cast(u64, x1606) * cast(u64, ((arg4[8]) * 0x13)));
    const x1861 = (cast(u64, x1606) * cast(u64, ((arg4[7]) * 0x26)));
    const x1862 = (cast(u64, x1605) * cast(u64, ((arg4[9]) * 0x13)));
    const x1863 = (cast(u64, x1605) * cast(u64, ((arg4[8]) * 0x13)));
    const x1864 = (cast(u64, x1604) * cast(u64, ((arg4[9]) * 0x26)));
    const x1865 = (cast(u64, x1612) * cast(u64, (arg4[0])));
    const x1866 = (cast(u64, x1611) * cast(u64, (arg4[1])));
    const x1867 = (cast(u64, x1611) * cast(u64, (arg4[0])));
    const x1868 = (cast(u64, x1610) * cast(u64, (arg4[2])));
    const x1869 = (cast(u64, x1610) * cast(u64, ((arg4[1]) * 0x2)));
    const x1870 = (cast(u64, x1610) * cast(u64, (arg4[0])));
    const x1871 = (cast(u64, x1609) * cast(u64, (arg4[3])));
    const x1872 = (cast(u64, x1609) * cast(u64, (arg4[2])));
    const x1873 = (cast(u64, x1609) * cast(u64, (arg4[1])));
    const x1874 = (cast(u64, x1609) * cast(u64, (arg4[0])));
    const x1875 = (cast(u64, x1608) * cast(u64, (arg4[4])));
    const x1876 = (cast(u64, x1608) * cast(u64, ((arg4[3]) * 0x2)));
    const x1877 = (cast(u64, x1608) * cast(u64, (arg4[2])));
    const x1878 = (cast(u64, x1608) * cast(u64, ((arg4[1]) * 0x2)));
    const x1879 = (cast(u64, x1608) * cast(u64, (arg4[0])));
    const x1880 = (cast(u64, x1607) * cast(u64, (arg4[5])));
    const x1881 = (cast(u64, x1607) * cast(u64, (arg4[4])));
    const x1882 = (cast(u64, x1607) * cast(u64, (arg4[3])));
    const x1883 = (cast(u64, x1607) * cast(u64, (arg4[2])));
    const x1884 = (cast(u64, x1607) * cast(u64, (arg4[1])));
    const x1885 = (cast(u64, x1607) * cast(u64, (arg4[0])));
    const x1886 = (cast(u64, x1606) * cast(u64, (arg4[6])));
    const x1887 = (cast(u64, x1606) * cast(u64, ((arg4[5]) * 0x2)));
    const x1888 = (cast(u64, x1606) * cast(u64, (arg4[4])));
    const x1889 = (cast(u64, x1606) * cast(u64, ((arg4[3]) * 0x2)));
    const x1890 = (cast(u64, x1606) * cast(u64, (arg4[2])));
    const x1891 = (cast(u64, x1606) * cast(u64, ((arg4[1]) * 0x2)));
    const x1892 = (cast(u64, x1606) * cast(u64, (arg4[0])));
    const x1893 = (cast(u64, x1605) * cast(u64, (arg4[7])));
    const x1894 = (cast(u64, x1605) * cast(u64, (arg4[6])));
    const x1895 = (cast(u64, x1605) * cast(u64, (arg4[5])));
    const x1896 = (cast(u64, x1605) * cast(u64, (arg4[4])));
    const x1897 = (cast(u64, x1605) * cast(u64, (arg4[3])));
    const x1898 = (cast(u64, x1605) * cast(u64, (arg4[2])));
    const x1899 = (cast(u64, x1605) * cast(u64, (arg4[1])));
    const x1900 = (cast(u64, x1605) * cast(u64, (arg4[0])));
    const x1901 = (cast(u64, x1604) * cast(u64, (arg4[8])));
    const x1902 = (cast(u64, x1604) * cast(u64, ((arg4[7]) * 0x2)));
    const x1903 = (cast(u64, x1604) * cast(u64, (arg4[6])));
    const x1904 = (cast(u64, x1604) * cast(u64, ((arg4[5]) * 0x2)));
    const x1905 = (cast(u64, x1604) * cast(u64, (arg4[4])));
    const x1906 = (cast(u64, x1604) * cast(u64, ((arg4[3]) * 0x2)));
    const x1907 = (cast(u64, x1604) * cast(u64, (arg4[2])));
    const x1908 = (cast(u64, x1604) * cast(u64, ((arg4[1]) * 0x2)));
    const x1909 = (cast(u64, x1604) * cast(u64, (arg4[0])));
    const x1910 = (cast(u64, x1603) * cast(u64, (arg4[9])));
    const x1911 = (cast(u64, x1603) * cast(u64, (arg4[8])));
    const x1912 = (cast(u64, x1603) * cast(u64, (arg4[7])));
    const x1913 = (cast(u64, x1603) * cast(u64, (arg4[6])));
    const x1914 = (cast(u64, x1603) * cast(u64, (arg4[5])));
    const x1915 = (cast(u64, x1603) * cast(u64, (arg4[4])));
    const x1916 = (cast(u64, x1603) * cast(u64, (arg4[3])));
    const x1917 = (cast(u64, x1603) * cast(u64, (arg4[2])));
    const x1918 = (cast(u64, x1603) * cast(u64, (arg4[1])));
    const x1919 = (cast(u64, x1603) * cast(u64, (arg4[0])));
    const x1920 = (x1919 + (x1864 + (x1863 + (x1861 + (x1858 + (x1854 + (x1849 + (x1843 + (x1836 + x1828)))))))));
    const x1921 = (x1920 >> 26);
    const x1922 = cast(u32, (x1920 & cast(u64, 0x3ffffff)));
    const x1923 = (x1910 + (x1901 + (x1893 + (x1886 + (x1880 + (x1875 + (x1871 + (x1868 + (x1866 + x1865)))))))));
    const x1924 = (x1911 + (x1902 + (x1894 + (x1887 + (x1881 + (x1876 + (x1872 + (x1869 + (x1867 + x1820)))))))));
    const x1925 = (x1912 + (x1903 + (x1895 + (x1888 + (x1882 + (x1877 + (x1873 + (x1870 + (x1829 + x1821)))))))));
    const x1926 = (x1913 + (x1904 + (x1896 + (x1889 + (x1883 + (x1878 + (x1874 + (x1837 + (x1830 + x1822)))))))));
    const x1927 = (x1914 + (x1905 + (x1897 + (x1890 + (x1884 + (x1879 + (x1844 + (x1838 + (x1831 + x1823)))))))));
    const x1928 = (x1915 + (x1906 + (x1898 + (x1891 + (x1885 + (x1850 + (x1845 + (x1839 + (x1832 + x1824)))))))));
    const x1929 = (x1916 + (x1907 + (x1899 + (x1892 + (x1855 + (x1851 + (x1846 + (x1840 + (x1833 + x1825)))))))));
    const x1930 = (x1917 + (x1908 + (x1900 + (x1859 + (x1856 + (x1852 + (x1847 + (x1841 + (x1834 + x1826)))))))));
    const x1931 = (x1918 + (x1909 + (x1862 + (x1860 + (x1857 + (x1853 + (x1848 + (x1842 + (x1835 + x1827)))))))));
    const x1932 = (x1921 + x1931);
    const x1933 = (x1932 >> 25);
    const x1934 = cast(u32, (x1932 & cast(u64, 0x1ffffff)));
    const x1935 = (x1933 + x1930);
    const x1936 = (x1935 >> 26);
    const x1937 = cast(u32, (x1935 & cast(u64, 0x3ffffff)));
    const x1938 = (x1936 + x1929);
    const x1939 = (x1938 >> 25);
    const x1940 = cast(u32, (x1938 & cast(u64, 0x1ffffff)));
    const x1941 = (x1939 + x1928);
    const x1942 = (x1941 >> 26);
    const x1943 = cast(u32, (x1941 & cast(u64, 0x3ffffff)));
    const x1944 = (x1942 + x1927);
    const x1945 = (x1944 >> 25);
    const x1946 = cast(u32, (x1944 & cast(u64, 0x1ffffff)));
    const x1947 = (x1945 + x1926);
    const x1948 = cast(u32, (x1947 >> 26));
    const x1949 = cast(u32, (x1947 & cast(u64, 0x3ffffff)));
    const x1950 = (cast(u64, x1948) + x1925);
    const x1951 = cast(u32, (x1950 >> 25));
    const x1952 = cast(u32, (x1950 & cast(u64, 0x1ffffff)));
    const x1953 = (cast(u64, x1951) + x1924);
    const x1954 = cast(u32, (x1953 >> 26));
    const x1955 = cast(u32, (x1953 & cast(u64, 0x3ffffff)));
    const x1956 = (cast(u64, x1954) + x1923);
    const x1957 = cast(u32, (x1956 >> 25));
    const x1958 = cast(u32, (x1956 & cast(u64, 0x1ffffff)));
    const x1959 = (cast(u64, x1957) * cast(u64, 0x13));
    const x1960 = (cast(u64, x1922) + x1959);
    const x1961 = cast(u32, (x1960 >> 26));
    const x1962 = cast(u32, (x1960 & cast(u64, 0x3ffffff)));
    const x1963 = (x1961 + x1934);
    const x1964 = cast(u1, (x1963 >> 25));
    const x1965 = (x1963 & 0x1ffffff);
    const x1966 = (cast(u32, x1964) + x1937);
    const x1967 = (cast(u64, x1642) * cast(u64, ((arg3[9]) * 0x26)));
    const x1968 = (cast(u64, x1642) * cast(u64, ((arg3[8]) * 0x13)));
    const x1969 = (cast(u64, x1642) * cast(u64, ((arg3[7]) * 0x26)));
    const x1970 = (cast(u64, x1642) * cast(u64, ((arg3[6]) * 0x13)));
    const x1971 = (cast(u64, x1642) * cast(u64, ((arg3[5]) * 0x26)));
    const x1972 = (cast(u64, x1642) * cast(u64, ((arg3[4]) * 0x13)));
    const x1973 = (cast(u64, x1642) * cast(u64, ((arg3[3]) * 0x26)));
    const x1974 = (cast(u64, x1642) * cast(u64, ((arg3[2]) * 0x13)));
    const x1975 = (cast(u64, x1642) * cast(u64, ((arg3[1]) * 0x26)));
    const x1976 = (cast(u64, x1641) * cast(u64, ((arg3[9]) * 0x13)));
    const x1977 = (cast(u64, x1641) * cast(u64, ((arg3[8]) * 0x13)));
    const x1978 = (cast(u64, x1641) * cast(u64, ((arg3[7]) * 0x13)));
    const x1979 = (cast(u64, x1641) * cast(u64, ((arg3[6]) * 0x13)));
    const x1980 = (cast(u64, x1641) * cast(u64, ((arg3[5]) * 0x13)));
    const x1981 = (cast(u64, x1641) * cast(u64, ((arg3[4]) * 0x13)));
    const x1982 = (cast(u64, x1641) * cast(u64, ((arg3[3]) * 0x13)));
    const x1983 = (cast(u64, x1641) * cast(u64, ((arg3[2]) * 0x13)));
    const x1984 = (cast(u64, x1640) * cast(u64, ((arg3[9]) * 0x26)));
    const x1985 = (cast(u64, x1640) * cast(u64, ((arg3[8]) * 0x13)));
    const x1986 = (cast(u64, x1640) * cast(u64, ((arg3[7]) * 0x26)));
    const x1987 = (cast(u64, x1640) * cast(u64, ((arg3[6]) * 0x13)));
    const x1988 = (cast(u64, x1640) * cast(u64, ((arg3[5]) * 0x26)));
    const x1989 = (cast(u64, x1640) * cast(u64, ((arg3[4]) * 0x13)));
    const x1990 = (cast(u64, x1640) * cast(u64, ((arg3[3]) * 0x26)));
    const x1991 = (cast(u64, x1639) * cast(u64, ((arg3[9]) * 0x13)));
    const x1992 = (cast(u64, x1639) * cast(u64, ((arg3[8]) * 0x13)));
    const x1993 = (cast(u64, x1639) * cast(u64, ((arg3[7]) * 0x13)));
    const x1994 = (cast(u64, x1639) * cast(u64, ((arg3[6]) * 0x13)));
    const x1995 = (cast(u64, x1639) * cast(u64, ((arg3[5]) * 0x13)));
    const x1996 = (cast(u64, x1639) * cast(u64, ((arg3[4]) * 0x13)));
    const x1997 = (cast(u64, x1638) * cast(u64, ((arg3[9]) * 0x26)));
    const x1998 = (cast(u64, x1638) * cast(u64, ((arg3[8]) * 0x13)));
    const x1999 = (cast(u64, x1638) * cast(u64, ((arg3[7]) * 0x26)));
    const x2000 = (cast(u64, x1638) * cast(u64, ((arg3[6]) * 0x13)));
    const x2001 = (cast(u64, x1638) * cast(u64, ((arg3[5]) * 0x26)));
    const x2002 = (cast(u64, x1637) * cast(u64, ((arg3[9]) * 0x13)));
    const x2003 = (cast(u64, x1637) * cast(u64, ((arg3[8]) * 0x13)));
    const x2004 = (cast(u64, x1637) * cast(u64, ((arg3[7]) * 0x13)));
    const x2005 = (cast(u64, x1637) * cast(u64, ((arg3[6]) * 0x13)));
    const x2006 = (cast(u64, x1636) * cast(u64, ((arg3[9]) * 0x26)));
    const x2007 = (cast(u64, x1636) * cast(u64, ((arg3[8]) * 0x13)));
    const x2008 = (cast(u64, x1636) * cast(u64, ((arg3[7]) * 0x26)));
    const x2009 = (cast(u64, x1635) * cast(u64, ((arg3[9]) * 0x13)));
    const x2010 = (cast(u64, x1635) * cast(u64, ((arg3[8]) * 0x13)));
    const x2011 = (cast(u64, x1634) * cast(u64, ((arg3[9]) * 0x26)));
    const x2012 = (cast(u64, x1642) * cast(u64, (arg3[0])));
    const x2013 = (cast(u64, x1641) * cast(u64, (arg3[1])));
    const x2014 = (cast(u64, x1641) * cast(u64, (arg3[0])));
    const x2015 = (cast(u64, x1640) * cast(u64, (arg3[2])));
    const x2016 = (cast(u64, x1640) * cast(u64, ((arg3[1]) * 0x2)));
    const x2017 = (cast(u64, x1640) * cast(u64, (arg3[0])));
    const x2018 = (cast(u64, x1639) * cast(u64, (arg3[3])));
    const x2019 = (cast(u64, x1639) * cast(u64, (arg3[2])));
    const x2020 = (cast(u64, x1639) * cast(u64, (arg3[1])));
    const x2021 = (cast(u64, x1639) * cast(u64, (arg3[0])));
    const x2022 = (cast(u64, x1638) * cast(u64, (arg3[4])));
    const x2023 = (cast(u64, x1638) * cast(u64, ((arg3[3]) * 0x2)));
    const x2024 = (cast(u64, x1638) * cast(u64, (arg3[2])));
    const x2025 = (cast(u64, x1638) * cast(u64, ((arg3[1]) * 0x2)));
    const x2026 = (cast(u64, x1638) * cast(u64, (arg3[0])));
    const x2027 = (cast(u64, x1637) * cast(u64, (arg3[5])));
    const x2028 = (cast(u64, x1637) * cast(u64, (arg3[4])));
    const x2029 = (cast(u64, x1637) * cast(u64, (arg3[3])));
    const x2030 = (cast(u64, x1637) * cast(u64, (arg3[2])));
    const x2031 = (cast(u64, x1637) * cast(u64, (arg3[1])));
    const x2032 = (cast(u64, x1637) * cast(u64, (arg3[0])));
    const x2033 = (cast(u64, x1636) * cast(u64, (arg3[6])));
    const x2034 = (cast(u64, x1636) * cast(u64, ((arg3[5]) * 0x2)));
    const x2035 = (cast(u64, x1636) * cast(u64, (arg3[4])));
    const x2036 = (cast(u64, x1636) * cast(u64, ((arg3[3]) * 0x2)));
    const x2037 = (cast(u64, x1636) * cast(u64, (arg3[2])));
    const x2038 = (cast(u64, x1636) * cast(u64, ((arg3[1]) * 0x2)));
    const x2039 = (cast(u64, x1636) * cast(u64, (arg3[0])));
    const x2040 = (cast(u64, x1635) * cast(u64, (arg3[7])));
    const x2041 = (cast(u64, x1635) * cast(u64, (arg3[6])));
    const x2042 = (cast(u64, x1635) * cast(u64, (arg3[5])));
    const x2043 = (cast(u64, x1635) * cast(u64, (arg3[4])));
    const x2044 = (cast(u64, x1635) * cast(u64, (arg3[3])));
    const x2045 = (cast(u64, x1635) * cast(u64, (arg3[2])));
    const x2046 = (cast(u64, x1635) * cast(u64, (arg3[1])));
    const x2047 = (cast(u64, x1635) * cast(u64, (arg3[0])));
    const x2048 = (cast(u64, x1634) * cast(u64, (arg3[8])));
    const x2049 = (cast(u64, x1634) * cast(u64, ((arg3[7]) * 0x2)));
    const x2050 = (cast(u64, x1634) * cast(u64, (arg3[6])));
    const x2051 = (cast(u64, x1634) * cast(u64, ((arg3[5]) * 0x2)));
    const x2052 = (cast(u64, x1634) * cast(u64, (arg3[4])));
    const x2053 = (cast(u64, x1634) * cast(u64, ((arg3[3]) * 0x2)));
    const x2054 = (cast(u64, x1634) * cast(u64, (arg3[2])));
    const x2055 = (cast(u64, x1634) * cast(u64, ((arg3[1]) * 0x2)));
    const x2056 = (cast(u64, x1634) * cast(u64, (arg3[0])));
    const x2057 = (cast(u64, x1633) * cast(u64, (arg3[9])));
    const x2058 = (cast(u64, x1633) * cast(u64, (arg3[8])));
    const x2059 = (cast(u64, x1633) * cast(u64, (arg3[7])));
    const x2060 = (cast(u64, x1633) * cast(u64, (arg3[6])));
    const x2061 = (cast(u64, x1633) * cast(u64, (arg3[5])));
    const x2062 = (cast(u64, x1633) * cast(u64, (arg3[4])));
    const x2063 = (cast(u64, x1633) * cast(u64, (arg3[3])));
    const x2064 = (cast(u64, x1633) * cast(u64, (arg3[2])));
    const x2065 = (cast(u64, x1633) * cast(u64, (arg3[1])));
    const x2066 = (cast(u64, x1633) * cast(u64, (arg3[0])));
    const x2067 = (x2066 + (x2011 + (x2010 + (x2008 + (x2005 + (x2001 + (x1996 + (x1990 + (x1983 + x1975)))))))));
    const x2068 = (x2067 >> 26);
    const x2069 = cast(u32, (x2067 & cast(u64, 0x3ffffff)));
    const x2070 = (x2057 + (x2048 + (x2040 + (x2033 + (x2027 + (x2022 + (x2018 + (x2015 + (x2013 + x2012)))))))));
    const x2071 = (x2058 + (x2049 + (x2041 + (x2034 + (x2028 + (x2023 + (x2019 + (x2016 + (x2014 + x1967)))))))));
    const x2072 = (x2059 + (x2050 + (x2042 + (x2035 + (x2029 + (x2024 + (x2020 + (x2017 + (x1976 + x1968)))))))));
    const x2073 = (x2060 + (x2051 + (x2043 + (x2036 + (x2030 + (x2025 + (x2021 + (x1984 + (x1977 + x1969)))))))));
    const x2074 = (x2061 + (x2052 + (x2044 + (x2037 + (x2031 + (x2026 + (x1991 + (x1985 + (x1978 + x1970)))))))));
    const x2075 = (x2062 + (x2053 + (x2045 + (x2038 + (x2032 + (x1997 + (x1992 + (x1986 + (x1979 + x1971)))))))));
    const x2076 = (x2063 + (x2054 + (x2046 + (x2039 + (x2002 + (x1998 + (x1993 + (x1987 + (x1980 + x1972)))))))));
    const x2077 = (x2064 + (x2055 + (x2047 + (x2006 + (x2003 + (x1999 + (x1994 + (x1988 + (x1981 + x1973)))))))));
    const x2078 = (x2065 + (x2056 + (x2009 + (x2007 + (x2004 + (x2000 + (x1995 + (x1989 + (x1982 + x1974)))))))));
    const x2079 = (x2068 + x2078);
    const x2080 = (x2079 >> 25);
    const x2081 = cast(u32, (x2079 & cast(u64, 0x1ffffff)));
    const x2082 = (x2080 + x2077);
    const x2083 = (x2082 >> 26);
    const x2084 = cast(u32, (x2082 & cast(u64, 0x3ffffff)));
    const x2085 = (x2083 + x2076);
    const x2086 = (x2085 >> 25);
    const x2087 = cast(u32, (x2085 & cast(u64, 0x1ffffff)));
    const x2088 = (x2086 + x2075);
    const x2089 = (x2088 >> 26);
    const x2090 = cast(u32, (x2088 & cast(u64, 0x3ffffff)));
    const x2091 = (x2089 + x2074);
    const x2092 = (x2091 >> 25);
    const x2093 = cast(u32, (x2091 & cast(u64, 0x1ffffff)));
    const x2094 = (x2092 + x2073);
    const x2095 = cast(u32, (x2094 >> 26));
    const x2096 = cast(u32, (x2094 & cast(u64, 0x3ffffff)));
    const x2097 = (cast(u64, x2095) + x2072);
    const x2098 = cast(u32, (x2097 >> 25));
    const x2099 = cast(u32, (x2097 & cast(u64, 0x1ffffff)));
    const x2100 = (cast(u64, x2098) + x2071);
    const x2101 = cast(u32, (x2100 >> 26));
    const x2102 = cast(u32, (x2100 & cast(u64, 0x3ffffff)));
    const x2103 = (cast(u64, x2101) + x2070);
    const x2104 = cast(u32, (x2103 >> 25));
    const x2105 = cast(u32, (x2103 & cast(u64, 0x1ffffff)));
    const x2106 = (cast(u64, x2104) * cast(u64, 0x13));
    const x2107 = (cast(u64, x2069) + x2106);
    const x2108 = cast(u32, (x2107 >> 26));
    const x2109 = cast(u32, (x2107 & cast(u64, 0x3ffffff)));
    const x2110 = (x2108 + x2081);
    const x2111 = cast(u1, (x2110 >> 25));
    const x2112 = (x2110 & 0x1ffffff);
    const x2113 = (cast(u32, x2111) + x2084);
    const x2114 = (cast(u64, x1672) * cast(u64, ((arg4[9]) * 0x26)));
    const x2115 = (cast(u64, x1672) * cast(u64, ((arg4[8]) * 0x13)));
    const x2116 = (cast(u64, x1672) * cast(u64, ((arg4[7]) * 0x26)));
    const x2117 = (cast(u64, x1672) * cast(u64, ((arg4[6]) * 0x13)));
    const x2118 = (cast(u64, x1672) * cast(u64, ((arg4[5]) * 0x26)));
    const x2119 = (cast(u64, x1672) * cast(u64, ((arg4[4]) * 0x13)));
    const x2120 = (cast(u64, x1672) * cast(u64, ((arg4[3]) * 0x26)));
    const x2121 = (cast(u64, x1672) * cast(u64, ((arg4[2]) * 0x13)));
    const x2122 = (cast(u64, x1672) * cast(u64, ((arg4[1]) * 0x26)));
    const x2123 = (cast(u64, x1671) * cast(u64, ((arg4[9]) * 0x13)));
    const x2124 = (cast(u64, x1671) * cast(u64, ((arg4[8]) * 0x13)));
    const x2125 = (cast(u64, x1671) * cast(u64, ((arg4[7]) * 0x13)));
    const x2126 = (cast(u64, x1671) * cast(u64, ((arg4[6]) * 0x13)));
    const x2127 = (cast(u64, x1671) * cast(u64, ((arg4[5]) * 0x13)));
    const x2128 = (cast(u64, x1671) * cast(u64, ((arg4[4]) * 0x13)));
    const x2129 = (cast(u64, x1671) * cast(u64, ((arg4[3]) * 0x13)));
    const x2130 = (cast(u64, x1671) * cast(u64, ((arg4[2]) * 0x13)));
    const x2131 = (cast(u64, x1670) * cast(u64, ((arg4[9]) * 0x26)));
    const x2132 = (cast(u64, x1670) * cast(u64, ((arg4[8]) * 0x13)));
    const x2133 = (cast(u64, x1670) * cast(u64, ((arg4[7]) * 0x26)));
    const x2134 = (cast(u64, x1670) * cast(u64, ((arg4[6]) * 0x13)));
    const x2135 = (cast(u64, x1670) * cast(u64, ((arg4[5]) * 0x26)));
    const x2136 = (cast(u64, x1670) * cast(u64, ((arg4[4]) * 0x13)));
    const x2137 = (cast(u64, x1670) * cast(u64, ((arg4[3]) * 0x26)));
    const x2138 = (cast(u64, x1669) * cast(u64, ((arg4[9]) * 0x13)));
    const x2139 = (cast(u64, x1669) * cast(u64, ((arg4[8]) * 0x13)));
    const x2140 = (cast(u64, x1669) * cast(u64, ((arg4[7]) * 0x13)));
    const x2141 = (cast(u64, x1669) * cast(u64, ((arg4[6]) * 0x13)));
    const x2142 = (cast(u64, x1669) * cast(u64, ((arg4[5]) * 0x13)));
    const x2143 = (cast(u64, x1669) * cast(u64, ((arg4[4]) * 0x13)));
    const x2144 = (cast(u64, x1668) * cast(u64, ((arg4[9]) * 0x26)));
    const x2145 = (cast(u64, x1668) * cast(u64, ((arg4[8]) * 0x13)));
    const x2146 = (cast(u64, x1668) * cast(u64, ((arg4[7]) * 0x26)));
    const x2147 = (cast(u64, x1668) * cast(u64, ((arg4[6]) * 0x13)));
    const x2148 = (cast(u64, x1668) * cast(u64, ((arg4[5]) * 0x26)));
    const x2149 = (cast(u64, x1667) * cast(u64, ((arg4[9]) * 0x13)));
    const x2150 = (cast(u64, x1667) * cast(u64, ((arg4[8]) * 0x13)));
    const x2151 = (cast(u64, x1667) * cast(u64, ((arg4[7]) * 0x13)));
    const x2152 = (cast(u64, x1667) * cast(u64, ((arg4[6]) * 0x13)));
    const x2153 = (cast(u64, x1666) * cast(u64, ((arg4[9]) * 0x26)));
    const x2154 = (cast(u64, x1666) * cast(u64, ((arg4[8]) * 0x13)));
    const x2155 = (cast(u64, x1666) * cast(u64, ((arg4[7]) * 0x26)));
    const x2156 = (cast(u64, x1665) * cast(u64, ((arg4[9]) * 0x13)));
    const x2157 = (cast(u64, x1665) * cast(u64, ((arg4[8]) * 0x13)));
    const x2158 = (cast(u64, x1664) * cast(u64, ((arg4[9]) * 0x26)));
    const x2159 = (cast(u64, x1672) * cast(u64, (arg4[0])));
    const x2160 = (cast(u64, x1671) * cast(u64, (arg4[1])));
    const x2161 = (cast(u64, x1671) * cast(u64, (arg4[0])));
    const x2162 = (cast(u64, x1670) * cast(u64, (arg4[2])));
    const x2163 = (cast(u64, x1670) * cast(u64, ((arg4[1]) * 0x2)));
    const x2164 = (cast(u64, x1670) * cast(u64, (arg4[0])));
    const x2165 = (cast(u64, x1669) * cast(u64, (arg4[3])));
    const x2166 = (cast(u64, x1669) * cast(u64, (arg4[2])));
    const x2167 = (cast(u64, x1669) * cast(u64, (arg4[1])));
    const x2168 = (cast(u64, x1669) * cast(u64, (arg4[0])));
    const x2169 = (cast(u64, x1668) * cast(u64, (arg4[4])));
    const x2170 = (cast(u64, x1668) * cast(u64, ((arg4[3]) * 0x2)));
    const x2171 = (cast(u64, x1668) * cast(u64, (arg4[2])));
    const x2172 = (cast(u64, x1668) * cast(u64, ((arg4[1]) * 0x2)));
    const x2173 = (cast(u64, x1668) * cast(u64, (arg4[0])));
    const x2174 = (cast(u64, x1667) * cast(u64, (arg4[5])));
    const x2175 = (cast(u64, x1667) * cast(u64, (arg4[4])));
    const x2176 = (cast(u64, x1667) * cast(u64, (arg4[3])));
    const x2177 = (cast(u64, x1667) * cast(u64, (arg4[2])));
    const x2178 = (cast(u64, x1667) * cast(u64, (arg4[1])));
    const x2179 = (cast(u64, x1667) * cast(u64, (arg4[0])));
    const x2180 = (cast(u64, x1666) * cast(u64, (arg4[6])));
    const x2181 = (cast(u64, x1666) * cast(u64, ((arg4[5]) * 0x2)));
    const x2182 = (cast(u64, x1666) * cast(u64, (arg4[4])));
    const x2183 = (cast(u64, x1666) * cast(u64, ((arg4[3]) * 0x2)));
    const x2184 = (cast(u64, x1666) * cast(u64, (arg4[2])));
    const x2185 = (cast(u64, x1666) * cast(u64, ((arg4[1]) * 0x2)));
    const x2186 = (cast(u64, x1666) * cast(u64, (arg4[0])));
    const x2187 = (cast(u64, x1665) * cast(u64, (arg4[7])));
    const x2188 = (cast(u64, x1665) * cast(u64, (arg4[6])));
    const x2189 = (cast(u64, x1665) * cast(u64, (arg4[5])));
    const x2190 = (cast(u64, x1665) * cast(u64, (arg4[4])));
    const x2191 = (cast(u64, x1665) * cast(u64, (arg4[3])));
    const x2192 = (cast(u64, x1665) * cast(u64, (arg4[2])));
    const x2193 = (cast(u64, x1665) * cast(u64, (arg4[1])));
    const x2194 = (cast(u64, x1665) * cast(u64, (arg4[0])));
    const x2195 = (cast(u64, x1664) * cast(u64, (arg4[8])));
    const x2196 = (cast(u64, x1664) * cast(u64, ((arg4[7]) * 0x2)));
    const x2197 = (cast(u64, x1664) * cast(u64, (arg4[6])));
    const x2198 = (cast(u64, x1664) * cast(u64, ((arg4[5]) * 0x2)));
    const x2199 = (cast(u64, x1664) * cast(u64, (arg4[4])));
    const x2200 = (cast(u64, x1664) * cast(u64, ((arg4[3]) * 0x2)));
    const x2201 = (cast(u64, x1664) * cast(u64, (arg4[2])));
    const x2202 = (cast(u64, x1664) * cast(u64, ((arg4[1]) * 0x2)));
    const x2203 = (cast(u64, x1664) * cast(u64, (arg4[0])));
    const x2204 = (cast(u64, x1663) * cast(u64, (arg4[9])));
    const x2205 = (cast(u64, x1663) * cast(u64, (arg4[8])));
    const x2206 = (cast(u64, x1663) * cast(u64, (arg4[7])));
    const x2207 = (cast(u64, x1663) * cast(u64, (arg4[6])));
    const x2208 = (cast(u64, x1663) * cast(u64, (arg4[5])));
    const x2209 = (cast(u64, x1663) * cast(u64, (arg4[4])));
    const x2210 = (cast(u64, x1663) * cast(u64, (arg4[3])));
    const x2211 = (cast(u64, x1663) * cast(u64, (arg4[2])));
    const x2212 = (cast(u64, x1663) * cast(u64, (arg4[1])));
    const x2213 = (cast(u64, x1663) * cast(u64, (arg4[0])));
    const x2214 = (x2213 + (x2158 + (x2157 + (x2155 + (x2152 + (x2148 + (x2143 + (x2137 + (x2130 + x2122)))))))));
    const x2215 = (x2214 >> 26);
    const x2216 = cast(u32, (x2214 & cast(u64, 0x3ffffff)));
    const x2217 = (x2204 + (x2195 + (x2187 + (x2180 + (x2174 + (x2169 + (x2165 + (x2162 + (x2160 + x2159)))))))));
    const x2218 = (x2205 + (x2196 + (x2188 + (x2181 + (x2175 + (x2170 + (x2166 + (x2163 + (x2161 + x2114)))))))));
    const x2219 = (x2206 + (x2197 + (x2189 + (x2182 + (x2176 + (x2171 + (x2167 + (x2164 + (x2123 + x2115)))))))));
    const x2220 = (x2207 + (x2198 + (x2190 + (x2183 + (x2177 + (x2172 + (x2168 + (x2131 + (x2124 + x2116)))))))));
    const x2221 = (x2208 + (x2199 + (x2191 + (x2184 + (x2178 + (x2173 + (x2138 + (x2132 + (x2125 + x2117)))))))));
    const x2222 = (x2209 + (x2200 + (x2192 + (x2185 + (x2179 + (x2144 + (x2139 + (x2133 + (x2126 + x2118)))))))));
    const x2223 = (x2210 + (x2201 + (x2193 + (x2186 + (x2149 + (x2145 + (x2140 + (x2134 + (x2127 + x2119)))))))));
    const x2224 = (x2211 + (x2202 + (x2194 + (x2153 + (x2150 + (x2146 + (x2141 + (x2135 + (x2128 + x2120)))))))));
    const x2225 = (x2212 + (x2203 + (x2156 + (x2154 + (x2151 + (x2147 + (x2142 + (x2136 + (x2129 + x2121)))))))));
    const x2226 = (x2215 + x2225);
    const x2227 = (x2226 >> 25);
    const x2228 = cast(u32, (x2226 & cast(u64, 0x1ffffff)));
    const x2229 = (x2227 + x2224);
    const x2230 = (x2229 >> 26);
    const x2231 = cast(u32, (x2229 & cast(u64, 0x3ffffff)));
    const x2232 = (x2230 + x2223);
    const x2233 = (x2232 >> 25);
    const x2234 = cast(u32, (x2232 & cast(u64, 0x1ffffff)));
    const x2235 = (x2233 + x2222);
    const x2236 = (x2235 >> 26);
    const x2237 = cast(u32, (x2235 & cast(u64, 0x3ffffff)));
    const x2238 = (x2236 + x2221);
    const x2239 = (x2238 >> 25);
    const x2240 = cast(u32, (x2238 & cast(u64, 0x1ffffff)));
    const x2241 = (x2239 + x2220);
    const x2242 = cast(u32, (x2241 >> 26));
    const x2243 = cast(u32, (x2241 & cast(u64, 0x3ffffff)));
    const x2244 = (cast(u64, x2242) + x2219);
    const x2245 = cast(u32, (x2244 >> 25));
    const x2246 = cast(u32, (x2244 & cast(u64, 0x1ffffff)));
    const x2247 = (cast(u64, x2245) + x2218);
    const x2248 = cast(u32, (x2247 >> 26));
    const x2249 = cast(u32, (x2247 & cast(u64, 0x3ffffff)));
    const x2250 = (cast(u64, x2248) + x2217);
    const x2251 = cast(u32, (x2250 >> 25));
    const x2252 = cast(u32, (x2250 & cast(u64, 0x1ffffff)));
    const x2253 = (cast(u64, x2251) * cast(u64, 0x13));
    const x2254 = (cast(u64, x2216) + x2253);
    const x2255 = cast(u32, (x2254 >> 26));
    const x2256 = cast(u32, (x2254 & cast(u64, 0x3ffffff)));
    const x2257 = (x2255 + x2228);
    const x2258 = cast(u1, (x2257 >> 25));
    const x2259 = (x2257 & 0x1ffffff);
    const x2260 = (cast(u32, x2258) + x2231);
    const x2261 = (x1815 + x1962);
    const x2262 = (x1818 + x1965);
    const x2263 = (x1819 + x1966);
    const x2264 = (x1793 + x1940);
    const x2265 = (x1796 + x1943);
    const x2266 = (x1799 + x1946);
    const x2267 = (x1802 + x1949);
    const x2268 = (x1805 + x1952);
    const x2269 = (x1808 + x1955);
    const x2270 = (x1811 + x1958);
    const x2271 = cast(u1, (x2261 >> 26));
    const x2272 = (x2261 & 0x3ffffff);
    const x2273 = (cast(u32, x2271) + x2262);
    const x2274 = cast(u1, (x2273 >> 25));
    const x2275 = (x2273 & 0x1ffffff);
    const x2276 = (cast(u32, x2274) + x2263);
    const x2277 = (x2276 >> 26);
    const x2278 = (x2276 & 0x3ffffff);
    const x2279 = (x2277 + x2264);
    const x2280 = (x2279 >> 25);
    const x2281 = (x2279 & 0x1ffffff);
    const x2282 = (x2280 + x2265);
    const x2283 = (x2282 >> 26);
    const x2284 = (x2282 & 0x3ffffff);
    const x2285 = (x2283 + x2266);
    const x2286 = (x2285 >> 25);
    const x2287 = (x2285 & 0x1ffffff);
    const x2288 = (x2286 + x2267);
    const x2289 = (x2288 >> 26);
    const x2290 = (x2288 & 0x3ffffff);
    const x2291 = (x2289 + x2268);
    const x2292 = (x2291 >> 25);
    const x2293 = (x2291 & 0x1ffffff);
    const x2294 = (x2292 + x2269);
    const x2295 = (x2294 >> 26);
    const x2296 = (x2294 & 0x3ffffff);
    const x2297 = (x2295 + x2270);
    const x2298 = (x2297 >> 25);
    const x2299 = (x2297 & 0x1ffffff);
    const x2300 = (x2298 * 0x13);
    const x2301 = (x2272 + x2300);
    const x2302 = cast(u1, (x2301 >> 26));
    const x2303 = (x2301 & 0x3ffffff);
    const x2304 = (cast(u32, x2302) + x2275);
    const x2305 = cast(u1, (x2304 >> 25));
    const x2306 = (x2304 & 0x1ffffff);
    const x2307 = (cast(u32, x2305) + x2278);
    const x2308 = (x2109 + x2256);
    const x2309 = (x2112 + x2259);
    const x2310 = (x2113 + x2260);
    const x2311 = (x2087 + x2234);
    const x2312 = (x2090 + x2237);
    const x2313 = (x2093 + x2240);
    const x2314 = (x2096 + x2243);
    const x2315 = (x2099 + x2246);
    const x2316 = (x2102 + x2249);
    const x2317 = (x2105 + x2252);
    const x2318 = cast(u1, (x2308 >> 26));
    const x2319 = (x2308 & 0x3ffffff);
    const x2320 = (cast(u32, x2318) + x2309);
    const x2321 = cast(u1, (x2320 >> 25));
    const x2322 = (x2320 & 0x1ffffff);
    const x2323 = (cast(u32, x2321) + x2310);
    const x2324 = (x2323 >> 26);
    const x2325 = (x2323 & 0x3ffffff);
    const x2326 = (x2324 + x2311);
    const x2327 = (x2326 >> 25);
    const x2328 = (x2326 & 0x1ffffff);
    const x2329 = (x2327 + x2312);
    const x2330 = (x2329 >> 26);
    const x2331 = (x2329 & 0x3ffffff);
    const x2332 = (x2330 + x2313);
    const x2333 = (x2332 >> 25);
    const x2334 = (x2332 & 0x1ffffff);
    const x2335 = (x2333 + x2314);
    const x2336 = (x2335 >> 26);
    const x2337 = (x2335 & 0x3ffffff);
    const x2338 = (x2336 + x2315);
    const x2339 = (x2338 >> 25);
    const x2340 = (x2338 & 0x1ffffff);
    const x2341 = (x2339 + x2316);
    const x2342 = (x2341 >> 26);
    const x2343 = (x2341 & 0x3ffffff);
    const x2344 = (x2342 + x2317);
    const x2345 = (x2344 >> 25);
    const x2346 = (x2344 & 0x1ffffff);
    const x2347 = (x2345 * 0x13);
    const x2348 = (x2319 + x2347);
    const x2349 = cast(u1, (x2348 >> 26));
    const x2350 = (x2348 & 0x3ffffff);
    const x2351 = (cast(u32, x2349) + x2322);
    const x2352 = cast(u1, (x2351 >> 25));
    const x2353 = (x2351 & 0x1ffffff);
    const x2354 = (cast(u32, x2352) + x2325);
    out1[0] = x1535;
    out1[1] = x1536;
    out1[2] = x1537;
    out1[3] = x1538;
    out1[4] = x1539;
    out1[5] = x1540;
    out1[6] = x1541;
    out1[7] = x1542;
    out1[8] = x1543;
    out2[0] = x1544;
    out2[1] = x1545;
    out2[2] = x1546;
    out2[3] = x1547;
    out2[4] = x1548;
    out2[5] = x1549;
    out2[6] = x1550;
    out2[7] = x1551;
    out2[8] = x1552;
    out3[0] = x2303;
    out3[1] = x2306;
    out3[2] = x2307;
    out3[3] = x2281;
    out3[4] = x2284;
    out3[5] = x2287;
    out3[6] = x2290;
    out3[7] = x2293;
    out3[8] = x2296;
    out3[9] = x2299;
    out4[0] = x2350;
    out4[1] = x2353;
    out4[2] = x2354;
    out4[3] = x2328;
    out4[4] = x2331;
    out4[5] = x2334;
    out4[6] = x2337;
    out4[7] = x2340;
    out4[8] = x2343;
    out4[9] = x2346;
}

/// The function carryScmul121666 multiplies a field element by 121666 and reduces the result.
///
/// Postconditions:
///   eval out1 mod m = (121666 * eval arg1) mod m
///
pub fn carryScmul121666(out1: *TightFieldElement, arg1: LooseFieldElement) void {
    @setRuntimeSafety(mode == .Debug);

    const x1 = (cast(u64, 0x1db42) * cast(u64, (arg1[9])));
    const x2 = (cast(u64, 0x1db42) * cast(u64, (arg1[8])));
    const x3 = (cast(u64, 0x1db42) * cast(u64, (arg1[7])));
    const x4 = (cast(u64, 0x1db42) * cast(u64, (arg1[6])));
    const x5 = (cast(u64, 0x1db42) * cast(u64, (arg1[5])));
    const x6 = (cast(u64, 0x1db42) * cast(u64, (arg1[4])));
    const x7 = (cast(u64, 0x1db42) * cast(u64, (arg1[3])));
    const x8 = (cast(u64, 0x1db42) * cast(u64, (arg1[2])));
    const x9 = (cast(u64, 0x1db42) * cast(u64, (arg1[1])));
    const x10 = (cast(u64, 0x1db42) * cast(u64, (arg1[0])));
    const x11 = cast(u32, (x10 >> 26));
    const x12 = cast(u32, (x10 & cast(u64, 0x3ffffff)));
    const x13 = (cast(u64, x11) + x9);
    const x14 = cast(u32, (x13 >> 25));
    const x15 = cast(u32, (x13 & cast(u64, 0x1ffffff)));
    const x16 = (cast(u64, x14) + x8);
    const x17 = cast(u32, (x16 >> 26));
    const x18 = cast(u32, (x16 & cast(u64, 0x3ffffff)));
    const x19 = (cast(u64, x17) + x7);
    const x20 = cast(u32, (x19 >> 25));
    const x21 = cast(u32, (x19 & cast(u64, 0x1ffffff)));
    const x22 = (cast(u64, x20) + x6);
    const x23 = cast(u32, (x22 >> 26));
    const x24 = cast(u32, (x22 & cast(u64, 0x3ffffff)));
    const x25 = (cast(u64, x23) + x5);
    const x26 = cast(u32, (x25 >> 25));
    const x27 = cast(u32, (x25 & cast(u64, 0x1ffffff)));
    const x28 = (cast(u64, x26) + x4);
    const x29 = cast(u32, (x28 >> 26));
    const x30 = cast(u32, (x28 & cast(u64, 0x3ffffff)));
    const x31 = (cast(u64, x29) + x3);
    const x32 = cast(u32, (x31 >> 25));
    const x33 = cast(u32, (x31 & cast(u64, 0x1ffffff)));
    const x34 = (cast(u64, x32) + x2);
    const x35 = cast(u32, (x34 >> 26));
    const x36 = cast(u32, (x34 & cast(u64, 0x3ffffff)));
    const x37 = (cast(u64, x35) + x1);
    const x38 = cast(u32, (x37 >> 25));
    const x39 = cast(u32, (x37 & cast(u64, 0x1ffffff)));
    const x40 = (x38 * 0x13);
    const x41 = (x12 + x40);
    const x42 = cast(u1, (x41 >> 26));
    const x43 = (x41 & 0x3ffffff);
    const x44 = (cast(u32, x42) + x15);
    const x45 = cast(u1, (x44 >> 25));
    const x46 = (x44 & 0x1ffffff);
    const x47 = (cast(u32, x45) + x18);
    out1[0] = x43;
    out1[1] = x46;
    out1[2] = x47;
    out1[3] = x21;
    out1[4] = x24;
    out1[5] = x27;
    out1[6] = x30;
    out1[7] = x33;
    out1[8] = x36;
    out1[9] = x39;
}
